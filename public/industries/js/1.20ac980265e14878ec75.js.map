{"version":3,"sources":["webpack:///industries/js/1.20ac980265e14878ec75.js","webpack:///./src/components/analysis-detail/analysis-detail.vue?ad73","webpack:///./~/zrender/lib/core/util.js?10f4","webpack:///./~/echarts/lib/echarts.js?68a2","webpack:///./~/echarts/lib/util/graphic.js?e267","webpack:///./~/echarts/lib/util/model.js?e2bd","webpack:///./~/echarts/lib/util/number.js?43e3","webpack:///./~/zrender/lib/core/vector.js?6654","webpack:///./~/zrender/lib/graphic/Path.js?c119","webpack:///./~/echarts/lib/util/format.js?7f72","webpack:///./~/echarts/lib/model/Model.js?f4df","webpack:///./~/zrender/lib/core/env.js?9ccc","webpack:///./~/echarts/lib/util/clazz.js?3e66","webpack:///./~/zrender/lib/core/BoundingRect.js?76f6","webpack:///./~/echarts/lib/model/Component.js?0e02","webpack:///./~/echarts/lib/util/layout.js?2b1e","webpack:///./~/echarts/lib/coord/axisHelper.js?4730","webpack:///./~/zrender/lib/contain/text.js?3a43","webpack:///./~/zrender/lib/core/curve.js?9511","webpack:///./~/zrender/lib/core/matrix.js?97a2","webpack:///./~/vux/src/tools/date/format.js?06ee","webpack:///./~/zrender/lib/core/event.js?24ff","webpack:///./~/zrender/lib/mixin/Eventful.js?223b","webpack:///./~/zrender/lib/tool/color.js?284f","webpack:///./src/common/js/mixin.js?178f","webpack:///./~/echarts/lib/component/axisPointer/modelHelper.js?ba01","webpack:///./~/echarts/lib/data/List.js?b096","webpack:///./~/echarts/lib/data/helper/completeDimensions.js?9c9e","webpack:///./~/echarts/lib/scale/Scale.js?c922","webpack:///./~/zrender/lib/config.js?2861","webpack:///./~/zrender/lib/container/Group.js?8d57","webpack:///./~/zrender/lib/core/PathProxy.js?69e9","webpack:///./~/echarts/lib/CoordinateSystem.js?2b30","webpack:///./~/echarts/lib/model/mixin/makeStyleMapper.js?e2b1","webpack:///./~/echarts/lib/scale/Interval.js?08e9","webpack:///./~/echarts/lib/util/symbol.js?be2c","webpack:///./~/echarts/lib/model/Series.js?186c","webpack:///./~/echarts/lib/view/Chart.js?72f3","webpack:///./~/echarts/lib/util/component.js?cc72","webpack:///./~/zrender/lib/core/timsort.js?0a74","webpack:///./~/zrender/lib/graphic/Displayable.js?5c45","webpack:///./~/zrender/lib/graphic/Gradient.js?5165","webpack:///./~/zrender/lib/graphic/helper/image.js?8535","webpack:///./~/zrender/lib/graphic/helper/text.js?069c","webpack:///./~/echarts/lib/chart/helper/createListFromArray.js?e3fc","webpack:///./~/echarts/lib/component/axis/AxisBuilder.js?6417","webpack:///./~/echarts/lib/coord/Axis.js?736c","webpack:///./~/echarts/lib/coord/axisModelCommonMixin.js?a8d0","webpack:///./~/echarts/lib/chart/helper/Symbol.js?9fa3","webpack:///./~/echarts/lib/component/axis/AxisView.js?f854","webpack:///./~/echarts/lib/component/axis/cartesianAxisHelper.js?ce88","webpack:///./~/echarts/lib/component/axisPointer/findPointFromSeries.js?2189","webpack:///./~/echarts/lib/component/axisPointer/globalListener.js?00cf","webpack:///./~/echarts/lib/component/axisPointer/viewHelper.js?35c0","webpack:///./~/echarts/lib/coord/cartesian/AxisModel.js?0573","webpack:///./~/echarts/lib/model/mixin/colorPalette.js?b454","webpack:///./~/echarts/lib/scale/helper.js?370b","webpack:///./~/echarts/lib/util/throttle.js?56b3","webpack:///./~/zrender/lib/Element.js?325b","webpack:///./~/zrender/lib/animation/Animator.js?d2b9","webpack:///./~/zrender/lib/animation/requestAnimationFrame.js?6d88","webpack:///./~/zrender/lib/contain/util.js?0031","webpack:///./~/zrender/lib/core/LRU.js?018e","webpack:///./~/zrender/lib/core/guid.js?f0e4","webpack:///./~/zrender/lib/core/log.js?26a2","webpack:///./~/zrender/lib/graphic/Image.js?bf1b","webpack:///./~/zrender/lib/graphic/Pattern.js?a97e","webpack:///./~/zrender/lib/graphic/Style.js?22d9","webpack:///./~/zrender/lib/graphic/helper/fixClipWithShadow.js?92a4","webpack:///./~/zrender/lib/graphic/helper/poly.js?788c","webpack:///./~/zrender/lib/graphic/helper/roundRect.js?418d","webpack:///./~/zrender/lib/mixin/Transformable.js?f61b","webpack:///./~/echarts/lib/component/gridSimple.js?eec5","webpack:///./~/echarts/lib/coord/axisDefault.js?4492","webpack:///./~/echarts/lib/coord/cartesian/Grid.js?f167","webpack:///./~/echarts/lib/processor/dataFilter.js?d6e4","webpack:///./~/echarts/lib/visual/dataColor.js?fa8e","webpack:///./~/echarts/lib/visual/symbol.js?518b","webpack:///./~/vux/src/components/datetime/index.vue?63a5","webpack:///./src/base/date-range/date-range.vue?424a","webpack:///./~/vux/src/components/datetime/datetimepicker.js?7685","webpack:///./~/vux/src/components/datetime/format.js?6d02","webpack:///./~/vux/src/components/datetime/makeData.js?f431","webpack:///./~/vux/src/components/datetime/util.js?e470","webpack:///./~/vux/src/mixins/uuid.js?801f","webpack:///./src/base/date-range/date-range.vue?adda*","webpack:///./~/vux/src/components/datetime/index.vue?92a0*","webpack:///./~/echarts/lib/ExtensionAPI.js?e283","webpack:///./~/echarts/lib/chart/helper/SymbolDraw.js?6b79","webpack:///./~/echarts/lib/chart/helper/labelHelper.js?2f49","webpack:///./~/echarts/lib/chart/line.js?f251","webpack:///./~/echarts/lib/chart/line/LineSeries.js?6f66","webpack:///./~/echarts/lib/chart/line/LineView.js?018e","webpack:///./~/echarts/lib/chart/line/lineAnimationDiff.js?8da6","webpack:///./~/echarts/lib/chart/line/poly.js?c760","webpack:///./~/echarts/lib/component/axis.js?8a87","webpack:///./~/echarts/lib/component/axis/CartesianAxisView.js?076a","webpack:///./~/echarts/lib/component/axisPointer.js?110d","webpack:///./~/echarts/lib/component/axisPointer/AxisPointerModel.js?e99a","webpack:///./~/echarts/lib/component/axisPointer/AxisPointerView.js?4293","webpack:///./~/echarts/lib/component/axisPointer/BaseAxisPointer.js?027a","webpack:///./~/echarts/lib/component/axisPointer/CartesianAxisPointer.js?ab1e","webpack:///./~/echarts/lib/component/axisPointer/axisTrigger.js?86e8","webpack:///./~/echarts/lib/component/helper/listComponent.js?566d","webpack:///./~/echarts/lib/component/legend.js?d893","webpack:///./~/echarts/lib/component/legend/LegendModel.js?bbe7","webpack:///./~/echarts/lib/component/legend/LegendView.js?124f","webpack:///./~/echarts/lib/component/legend/legendAction.js?b7a9","webpack:///./~/echarts/lib/component/legend/legendFilter.js?93b2","webpack:///./~/echarts/lib/component/tooltip.js?b491","webpack:///./~/echarts/lib/component/tooltip/TooltipContent.js?2c54","webpack:///./~/echarts/lib/component/tooltip/TooltipModel.js?19ac","webpack:///./~/echarts/lib/component/tooltip/TooltipView.js?ae52","webpack:///./~/echarts/lib/coord/axisModelCreator.js?34e4","webpack:///./~/echarts/lib/coord/cartesian/Axis2D.js?9345","webpack:///./~/echarts/lib/coord/cartesian/Cartesian.js?9246","webpack:///./~/echarts/lib/coord/cartesian/Cartesian2D.js?103b","webpack:///./~/echarts/lib/coord/cartesian/GridModel.js?1817","webpack:///./~/echarts/lib/data/DataDiffer.js?f330","webpack:///./~/echarts/lib/helper.js?5794","webpack:///./~/echarts/lib/layout/points.js?4302","webpack:///./~/echarts/lib/loading/default.js?8a5f","webpack:///./~/echarts/lib/model/Global.js?b9d3","webpack:///./~/echarts/lib/model/OptionManager.js?a7a5","webpack:///./~/echarts/lib/model/globalDefault.js?fd54","webpack:///./~/echarts/lib/model/mixin/areaStyle.js?4e41","webpack:///./~/echarts/lib/model/mixin/boxLayout.js?92d7","webpack:///./~/echarts/lib/model/mixin/itemStyle.js?9011","webpack:///./~/echarts/lib/model/mixin/lineStyle.js?3579","webpack:///./~/echarts/lib/model/mixin/textStyle.js?e4c8","webpack:///./~/echarts/lib/preprocessor/backwardCompat.js?f171","webpack:///./~/echarts/lib/preprocessor/helper/compatStyle.js?aff6","webpack:///./~/echarts/lib/processor/dataSample.js?6fcd","webpack:///./~/echarts/lib/scale/Log.js?0ad0","webpack:///./~/echarts/lib/scale/Ordinal.js?3a6b","webpack:///./~/echarts/lib/scale/Time.js?6fdf","webpack:///./~/echarts/lib/view/Component.js?415a","webpack:///./~/echarts/lib/visual/seriesColor.js?4b6a","webpack:///./src/base/date-range/date-range.vue?49fd*","webpack:///./~/vux/src/components/datetime/index.vue?86b5*","webpack:///./src/base/date-range/date-range.vue?a7e1*","webpack:///./~/vux/src/components/datetime/index.vue?c1c0*","webpack:///./src/base/date-range/date-range.vue?af4a*","webpack:///./~/vux/src/components/datetime/index.vue?8501*","webpack:///./~/zrender/lib/Handler.js?fbeb","webpack:///./~/zrender/lib/Layer.js?f586","webpack:///./~/zrender/lib/Painter.js?ee99","webpack:///./~/zrender/lib/Storage.js?7e93","webpack:///./~/zrender/lib/animation/Animation.js?8743","webpack:///./~/zrender/lib/animation/Clip.js?fef9","webpack:///./~/zrender/lib/animation/easing.js?64b6","webpack:///./~/zrender/lib/contain/arc.js?7367","webpack:///./~/zrender/lib/contain/cubic.js?b90e","webpack:///./~/zrender/lib/contain/line.js?4326","webpack:///./~/zrender/lib/contain/path.js?2e7f","webpack:///./~/zrender/lib/contain/quadratic.js?f589","webpack:///./~/zrender/lib/contain/windingLine.js?625a","webpack:///./~/zrender/lib/core/GestureMgr.js?00fd","webpack:///./~/zrender/lib/core/bbox.js?1b56","webpack:///./~/zrender/lib/dom/HandlerProxy.js?2fc7","webpack:///./~/zrender/lib/graphic/CompoundPath.js?8636","webpack:///./~/zrender/lib/graphic/LinearGradient.js?4250","webpack:///./~/zrender/lib/graphic/RadialGradient.js?895e","webpack:///./~/zrender/lib/graphic/Text.js?3244","webpack:///./~/zrender/lib/graphic/helper/smoothBezier.js?2713","webpack:///./~/zrender/lib/graphic/helper/smoothSpline.js?a17c","webpack:///./~/zrender/lib/graphic/mixin/RectText.js?94ea","webpack:///./~/zrender/lib/graphic/shape/Arc.js?2994","webpack:///./~/zrender/lib/graphic/shape/BezierCurve.js?f5c4","webpack:///./~/zrender/lib/graphic/shape/Circle.js?076e","webpack:///./~/zrender/lib/graphic/shape/Line.js?7728","webpack:///./~/zrender/lib/graphic/shape/Polygon.js?d37d","webpack:///./~/zrender/lib/graphic/shape/Polyline.js?3cdb","webpack:///./~/zrender/lib/graphic/shape/Rect.js?3b3d","webpack:///./~/zrender/lib/graphic/shape/Ring.js?b71c","webpack:///./~/zrender/lib/graphic/shape/Sector.js?9767","webpack:///./~/zrender/lib/mixin/Animatable.js?35cb","webpack:///./~/zrender/lib/mixin/Draggable.js?fbca","webpack:///./~/zrender/lib/tool/path.js?dc4b","webpack:///./~/zrender/lib/tool/transformPath.js?ddb2","webpack:///./~/zrender/lib/zrender.js?5dcd","webpack:///./src/common/js/bus.js","webpack:///./~/echarts/lib/action/createDataSelectAction.js?2c2b","webpack:///./~/echarts/lib/chart/bar.js?931c","webpack:///./~/echarts/lib/chart/bar/BarSeries.js?61cd","webpack:///./~/echarts/lib/chart/bar/BarView.js?20fc","webpack:///./~/echarts/lib/chart/bar/BaseBarSeries.js?72f5","webpack:///./~/echarts/lib/chart/bar/barItemStyle.js?15d9","webpack:///./~/echarts/lib/chart/bar/helper.js?25d2","webpack:///./~/echarts/lib/chart/funnel.js?36c9","webpack:///./~/echarts/lib/chart/funnel/FunnelSeries.js?270f","webpack:///./~/echarts/lib/chart/funnel/FunnelView.js?11dc","webpack:///./~/echarts/lib/chart/funnel/funnelLayout.js?5834","webpack:///./~/echarts/lib/chart/pie.js?ec17","webpack:///./~/echarts/lib/chart/pie/PieSeries.js?2a55","webpack:///./~/echarts/lib/chart/pie/PieView.js?c082","webpack:///./~/echarts/lib/chart/pie/labelLayout.js?a7c9","webpack:///./~/echarts/lib/chart/pie/pieLayout.js?b323","webpack:///./~/echarts/lib/chart/radar.js?7042","webpack:///./~/echarts/lib/chart/radar/RadarSeries.js?5e4c","webpack:///./~/echarts/lib/chart/radar/RadarView.js?5582","webpack:///./~/echarts/lib/chart/radar/backwardCompat.js?4e3a","webpack:///./~/echarts/lib/chart/radar/radarLayout.js?e617","webpack:///./~/echarts/lib/component/helper/selectableMixin.js?ad72","webpack:///./~/echarts/lib/component/radar.js?0c9b","webpack:///./~/echarts/lib/component/radar/RadarView.js?f1fd","webpack:///./~/echarts/lib/coord/radar/IndicatorAxis.js?4578","webpack:///./~/echarts/lib/coord/radar/Radar.js?ea59","webpack:///./~/echarts/lib/coord/radar/RadarModel.js?625c","webpack:///./~/echarts/lib/layout/barGrid.js?d23e","webpack:///./~/v-charts/lib/chart.min.js?9bc9","webpack:///./src/components/analysis-detail/analysis-detail.vue","webpack:///./src/components/analysis-detail/analysis-detail.vue?3580","webpack:///./src/components/analysis-detail/analysis-detail.vue?7392","webpack:///./src/components/analysis-detail/analysis-detail.vue?acbe"],"names":["webpackJsonp","Array","concat","module","exports","__webpack_require__","Component","clone","source","result","typeStr","objToString","call","i","len","length","TYPED_ARRAY","Ctor","constructor","from","BUILTIN_OBJECT","isPrimitive","isDom","key","hasOwnProperty","merge","target","overwrite","isObject","targetProp","sourceProp","isArray","isBuiltInObject","mergeAll","targetAndSources","extend","defaults","overlay","createCanvas","document","createElement","getContext","_ctx","util","indexOf","array","value","inherits","clazz","baseClazz","F","clazzPrototype","prototype","prop","superClass","mixin","isArrayLike","data","each","obj","cb","context","forEach","nativeForEach","map","nativeMap","push","reduce","memo","nativeReduce","filter","nativeFilter","find","bind","func","args","nativeSlice","arguments","apply","curry","this","isFunction","isString","type","nodeType","ownerDocument","eqNaN","retrieve","values","retrieve2","value0","value1","retrieve3","value2","slice","Function","normalizeCssArray","val","assert","condition","message","Error","setAsPrimitive","primitiveKey","HashMap","set","createHashMap","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","[object CanvasPattern]","[object Image]","[object Canvas]","[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","Object","toString","arrayProto","get","prefixedKey","removeKey","noop","global","createRegisterEventWithLowercaseName","method","eventName","handler","toLowerCase","Eventful","MessageCenter","ECharts","dom","theme","opts","prioritySortFunc","a","b","prio","themeStorage","id","group","_dom","zr","_zr","zrender","init","renderer","devicePixelRatio","width","height","_throttledZrFlush","throttle","zrUtil","flush","_theme","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_coordSysMgr","CoordinateSystemManager","_api","createExtensionAPI","_messageCenter","_initEvents","resize","_pendingActions","timsort","visualFuncs","dataProcessorFuncs","animation","on","_onframe","doConvertPixel","methodName","finder","ecModel","_model","coordSysList","getCoordinateSystems","modelUtil","parseFinder","coordSys","__DEV__","console","warn","updateDirectly","ecIns","payload","mainType","subType","callView","view","__alive","__model","query","eachComponent","model","index","__viewId","doDispatchAction","silent","payloadType","escapeConnect","actionWrap","actions","actionInfo","cptType","update","split","updateMethod","pop","parseClassType","IN_MAIN_PROCESS","payloads","batched","batch","item","eventObj","eventObjBatch","isHighDown","batchItem","action","event","main","sub","OPTION_UPDATED","updateMethods","prepareAndUpdate","trigger","flushPendingActions","pendingActions","shift","triggerUpdatedEvent","invokeUpdateMethod","api","component","componentModel","updateZ","eachSeries","seriesModel","idx","chart","updateProgressiveAndBlend","updateHoverLayerStatus","postUpdateFuncs","prepareView","isComponent","viewList","viewMap","componentType","viewId","classType","Clazz","ComponentView","getClass","ChartView","add","__id","__ecComponentInfo","componentIndex","remove","dispose","splice","processData","process","stackSeriesData","stackedDataMap","series","stack","getData","previousStack","stackedOn","doLayout","visual","isLayout","doVisualEncoding","excludesLayout","clearColorPalette","doRender","componentView","render","chartView","storage","elCount","traverse","el","isGroup","env","node","useHoverLayer","ignore","frameDrawNum","needProgressive","progressive","Math","floor","stopAnimation","blendMode","canvasSupported","setStyle","z","zlevel","ecInstance","coordSysMgr","ExtensionAPI","getComponentByElement","modelInfo","getComponent","parent","enableConnect","updateConnectedChartsStatus","charts","status","STATUS_KEY","eventActionMap","actionType","eventType","connectedGroups","makeActionFromEvent","otherCharts","instances","otherChart","dispatchAction","window","GlobalModel","OptionManager","ComponentModel","SeriesModel","graphic","colorTool","ACTION_REG","off","one","echartsProto","getDom","getZr","setOption","option","notMerge","lazyUpdate","optionManager","optionPreprocessorFuncs","setTheme","log","getModel","getOption","getWidth","getHeight","getDevicePixelRatio","painter","dpr","getRenderedCanvas","pixelRatio","backgroundColor","list","getDisplayList","getDataURL","excludeComponents","excludesComponentViews","self","url","toDataURL","getConnectedDataURL","groupId","mathMin","min","mathMax","max","left","Infinity","top","right","bottom","canvasList","canvas","boundingRect","getBoundingClientRect","targetCanvas","img","Image","style","x","y","image","refreshImmediately","convertToPixel","convertFromPixel","containPixel","models","coordinateSystem","containPoint","getVisual","visualType","defaultMainType","dataIndexInside","indexOfRawIndex","dataIndex","getItemVisual","getViewOfComponentModel","getViewOfSeriesModel","restoreData","create","isSingleCanvas","configLayer","clearColor","colorArr","parse","stringify","colorStops","background","updateView","clearAllVisual","updateVisual","updateLayout","optionChanged","resetOption","_loadingFX","showLoading","name","cfg","hideLoading","loadingEffects","opt","browser","weChat","MOUSE_EVENT_NAMES","eveName","e","params","dataModel","getSeriesByIndex","seriesIndex","getDataParams","dataType","eventData","isDisposed","_disposed","clear","idBase","Date","groupIdBase","echarts","version","dependencies","replace","existInstance","getInstanceByDom","nodeName","toUpperCase","clientWidth","clientHeight","setAttribute","connect","disConnect","disconnect","getAttribute","getInstanceById","registerTheme","registerPreprocessor","preprocessorFunc","registerProcessor","priority","processorFunc","isNaN","registerPostUpdate","postUpdateFunc","registerAction","test","registerCoordinateSystem","CoordinateSystem","register","getCoordinateSystemDimensions","coordSysCreator","getDimensionsInfo","dimensions","registerLayout","layoutFunc","registerVisual","visualFunc","registerLoading","loadingFx","extendComponentModel","extendComponentView","extendSeriesModel","extendChartView","setCanvasCreator","creator","List","Model","Axis","number","format","matrix","vector","color","helper","PRIORITY","PROCESSOR","FILTER","STATISTIC","VISUAL","LAYOUT","GLOBAL","CHART","COMPONENT","BRUSH","hasFillOrStroke","fillOrStroke","liftColor","lift","cacheElementStl","__hoverStlDirty","stroke","fill","hoverStyle","__hoverStl","normalStyle","__normalStl","doSingleEnterHover","__isHover","__zr","addHover","extendFrom","dirty","z2","doSingleLeaveHover","normalStl","removeHover","doEnterHover","child","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","__hoverSilentOnTouch","zrByTouch","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","checkInsideForSetText","labelModel","textPosition","setTextStyleCommon","textStyle","textStyleModel","EMPTY_OBJ","isRectText","getShallow","forMerge","textOffset","labelRotate","PI","textRotation","textDistance","richResult","globalTextStyle","richItemNames","getRichItemNames","richTextStyle","setTokenTextStyle","rich","forceRich","richItemNameMap","parentModel","isBlock","textFill","getAutoColor","textStroke","textLineWidth","textBorderColor","textBorderWidth","checkInside","defaultTextColor","fontStyle","fontWeight","fontSize","fontFamily","textAlign","textVerticalAlign","textLineHeight","textWidth","textHeight","textTag","disableBox","textBackgroundColor","textPadding","textBorderRadius","textBoxShadowColor","textBoxShadowBlur","textBoxShadowOffsetX","textBoxShadowOffsetY","textShadowColor","textShadowBlur","textShadowOffsetX","textShadowOffsetY","autoColor","animateOrSetProps","isUpdate","props","animatableModel","isAnimationEnabled","postfix","duration","animationEasing","animationDelay","getAnimationDelayParams","animateTo","attr","pathTool","Path","Transformable","BoundingRect","round","Group","Text","Circle","Sector","Ring","Polygon","Polyline","Rect","Line","BezierCurve","Arc","CompoundPath","LinearGradient","RadialGradient","extendShape","extendPath","pathData","extendFromString","makePath","rect","layout","path","createFromString","getBoundingRect","aspect","cx","cy","resizePath","mergePath","applyTransform","pathRect","m","calculateTransform","subPixelOptimizeLine","param","subPixelOptimize","shape","lineWidth","x1","x2","y1","y2","subPixelOptimizeRect","originX","originY","originWidth","originHeight","position","positiveOrNegative","doubledPosition","setHoverStyle","hoverSilentOnTouch","setTextStyle","specifiedTextStyle","host","setText","defaultColor","getFont","gTextStyleModel","join","updateProps","initProps","getTransform","ancestor","mat","identity","mul","getLocalTransform","transform","invert","transformDirection","direction","hBase","abs","vBase","vertex","groupTransition","g1","g2","getAnimatableProps","rotation","elMap1","g","elMap","anid","oldEl","newProp","clipPointsByRect","points","point","clipRectByRect","targetRect","createIcon","iconStr","rectHover","strokeNoScale","has","formatUtil","nubmerUtil","normalizeToArray","defaultEmphasis","subOpts","emphasisOpt","emphasis","normalOpt","normal","subOptName","TEXT_STYLE_OPTIONS","getDataItemValue","dataItem","isDataItemOption","converDataValue","dimInfo","dimType","parseDate","NaN","createDataFormatModel","dataFormatMixin","rawValue","getRawValue","rawDataIndex","getRawIndex","getName","itemOpt","getRawDataItem","componentSubType","seriesType","seriesId","seriesName","marker","getTooltipMarker","$vars","getFormattedLabel","dimIndex","labelProp","itemModel","getItemModel","formatter","formatTpl","formatTooltip","mappingToExists","exists","newCptOptions","exist","cptOption","isIdInner","makeIdAndName","mapResult","idMap","existCpt","keyInfo","idNum","compressBatches","batchA","batchB","makeMap","sourceBatch","otherMap","dataIndices","otherDataIndices","j","lenj","mapToArray","isData","mapA","mapB","queryDataIndex","indexOfName","makeGetter","hostObj","parsedKey","match","queryType","includeMainTypes","queryParam","queryComponents","dataDimToCoordDim","dataDim","getDimension","dimItem","getDimensionInfo","coordDim","coordDimToDataDim","dimName","coordDimIndex","otherDimToDataDim","otherDim","otherDims","_trim","str","quantityExponent","LN10","linearMap","domain","range","clamp","subDomain","subRange","parsePercent","percent","all","parseFloat","precision","returnStr","toFixed","asc","arr","sort","getPrecision","count","getPrecisionSafe","eIndex","dotIndex","getPixelPrecision","dataExtent","pixelExtent","dataQuantity","sizeQuantity","isFinite","getPercentWithPrecision","valueList","sum","acc","digits","pow","votesPerQuota","targetSeats","seats","votes","currentSum","remainder","Number","NEGATIVE_INFINITY","maxId","MAX_SAFE_INTEGER","remRadian","radian","pi2","isRadianAroundZero","TIME_REG","getTimezoneOffset","exec","timezoneOffset","timeOffset","quantity","nice","nf","exponent","exp10","f","reformIntervals","littleThan","lg","interval","close","curr","currClose","isNumeric","v","ArrayCtor","Float32Array","out","copy","v1","v2","scaleAndAdd","sqrt","lenSquare","div","dot","scale","s","normalize","d","distance","distanceSquare","negate","lerp","t","lengthSquare","dist","distSquare","Displayable","PathProxy","pathContain","Pattern","getCanvasPattern","pathProxyForDraw","__dirtyPath","strokeContainThreshold","brush","ctx","prevEl","hasStroke","hasFill","hasFillGradient","hasStrokeGradient","hasFillPattern","hasStrokePattern","setTransform","__dirty","_fillGradient","getGradient","_strokeGradient","fillStyle","strokeStyle","lineDash","lineDashOffset","ctxLineDash","setLineDash","getGlobalScale","setScale","beginPath","setLineDashOffset","buildPath","rebuildPath","restoreTransform","text","drawRectText","shapeCfg","inBundle","createPathProxy","_rect","needsUpdateRect","rectWithStroke","_rectWithStroke","w","lineScale","getLineScale","contain","localPos","transformCoordToLocal","containStroke","dirtyPath","refresh","__clipTarget","animateShape","loop","animate","attrKV","setShape","Sub","defaultShape","thisShape","numberUtil","textContain","addCommas","toCamelCase","upperCaseFirst","group1","charAt","encodeHTML","String","TPL_VAR_ALIAS","wrapVar","varName","seriesIdx","tpl","paramsList","encode","seriesLen","alias","k","formatTplSimple","extraCssText","s2d","formatTime","isUTC","date","utc","M","h","capitalFirst","substr","truncateText","getTextRect","doGet","pathArr","getParent","getParentMethod","clazzUtil","mergeOption","ignoreParent","parsePath","thisParentModel","isEmpty","setReadOnly","properties","customizeGetParent","enableClassExtend","navigator","os","ua","firefox","ie","edge","touchEventsSupported","pointerEventsSupported","userAgent","checkClassType","superCall","superApply","IS_CONTAINER","hasOwn","ret","RootClass","mandatoryMethods","$constructor","proto","ExtendedClass","enableClassManagement","entity","options","makeContainer","container","registerClass","componentMainType","throwWhenNotFound","getClassesByMainType","o","hasClass","getAllClassMainTypes","types","hasSubTypes","registerWhenExtend","originalExtend","vec2","v2ApplyTransform","union","other","lt","rb","lb","rt","maxX","maxY","sx","sy","translate","intersect","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","plain","getDependencies","deps","arrayPush","componentUtil","defaultOption","dependentModels","uid","layoutMode","extraOpt","getUID","mergeDefaultAndTheme","inputPositionParams","getLayoutParams","themeModel","getTheme","getDefaultOption","mergeLayoutParam","optionUpdated","newCptOption","isInit","optList","Class","getReferringComponents","enableSubTypeDefaulter","enableTopologicalTravel","boxLayout","orient","gap","maxWidth","maxHeight","currentLineMaxSize","eachChild","nextX","nextY","nextChild","childAt","nextChildRect","moveX","newline","moveY","LOCATION_PARAMS","HV_NAMES","box","vbox","hbox","getAvailableSize","positionInfo","containerRect","margin","containerWidth","containerHeight","getLayoutRect","verticalMargin","horizontalMargin","positionElement","hv","boundingMode","needLocalTransform","elPos","dx","dy","sizeCalculable","hvIdx","targetOption","newOption","names","newParams","newValueCount","merged","mergedValueCount","hasProp","hasValue","ignoreSize","hResult","vResult","copyLayoutParams","OrdinalScale","IntervalScale","Scale","axisHelper","getScaleExtent","axisDataLen","boundaryGap","span","scaleType","getMin","getMax","fixMin","fixMax","originalExtent","getExtent","setBlank","getNeedCrossZero","niceScaleExtent","extent","splitNumber","base","setExtent","niceExtent","minInterval","maxInterval","setInterval","createScaleByModel","axisType","getCategories","ifAxisCrossZero","axis","getAxisLabelInterval","tickCoords","labels","font","isAxisHorizontal","textSpaceTakenRect","autoLabelInterval","accumulatedLabelInterval","step","tickCoord","getFormattedLabels","labelFormatter","getTicksLabels","ticks","getTicks","tick","getAxisRawValue","getLabel","getTextWidth","DEFAULT_FONT","textWidthCache","textLines","l","measureText","textWidthCacheCounter","TEXT_CACHE_MAX","truncate","getRichTextRect","getPlainTextRect","contentBlock","parsePlainText","outerWidth","outerHeight","adjustTextX","adjustTextY","lineHeight","parseRichText","adjustTextPositionOnRect","halfHeight","ellipsis","prepareTruncateOptions","truncateSingleLine","maxIterations","minChar","cnCharWidth","ascCharWidth","placeholder","contentWidth","ellipsisWidth","textLine","subLength","estimateLength","charCode","charCodeAt","getLineHeight","padding","lines","truncOuterHeight","truncOuterWidth","lastIndex","STYLE_REG","matchedIndex","pushTokens","substring","contentHeight","pendingList","stlPadding","truncateWidth","truncateHeight","line","tokens","token","tokenStyle","styleName","tokenHeight","tokenWidth","tokenWidthNotSpecified","percentWidth","bgImg","imageHelper","findExistImage","isImageReady","paddingW","remianTruncWidth","parseInt","block","isEmptyStr","strs","isLineHolder","tokensLen","makeFont","textFont","isAroundZero","EPSILON","isNotAroundZero","cubicAt","p0","p1","p2","p3","onet","cubicDerivativeAt","cubicRootAt","roots","c","A","B","C","n","t1","disc","K","t2","discSqrt","mathSqrt","Y1","Y2","mathPow","ONE_THIRD","T","theta","acos","ASqrt","tmp","cos","THREE_SQRT","sin","t3","cubicExtrema","extrema","cubicSubdivide","p01","p12","p23","p012","p123","p0123","cubicProjectPoint","x0","y0","x3","y3","prev","next","d1","d2","_v0","_t","_v1","v2DistSquare","EPSILON_NUMERIC","_v2","quadraticAt","quadraticDerivativeAt","quadraticRootAt","quadraticExtremum","divider","quadraticSubdivide","quadraticProjectPoint","v2Create","m1","m2","out0","out1","out2","out3","out4","out5","rotate","rad","aa","ac","atx","ab","ad","aty","st","ct","vx","vy","det","fmt","undefined","M+","getMonth","D+","getDate","h+","getHours","H+","m+","getMinutes","s+","getSeconds","q+","S","getMilliseconds","week","0","1","2","3","4","5","6","RegExp","$1","getFullYear","getDay","clientToLocal","calculate","defaultGetZrXY","layerX","offsetX","zrX","zrY","layerY","offsetY","clientX","clientY","normalizeEvent","touch","targetTouches","changedTouches","zrDelta","wheelDelta","detail","addEventListener","isDomLevel2","attachEvent","removeEventListener","detachEvent","stop","preventDefault","stopPropagation","cancelBubble","returnValue","Dispatcher","arrySlice","_$handlers","_h","isSilent","newList","argLen","triggerWithContext","clampCssByte","clampCssAngle","clampCssFloat","parseCssInt","parseCssFloat","cssHueToRgb","p","setRgba","r","copyRgba","putToCache","colorStr","rgbaArr","lastRemovedArr","colorCache","put","cached","kCSSColorTable","op","ep","fname","alpha","hsla2rgba","iv","hsla","rgba","rgba2hsla","H","R","G","vMin","vMax","delta","L","deltaR","deltaG","deltaB","level","toHex","fastMapToColor","normalizedValue","colors","leftIndex","rightIndex","ceil","leftColor","rightColor","dv","mapToColor","fullOutput","modifyHSL","modifyAlpha","arrColor","LRU","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","__webpack_exports__","listLoadMixin","chartDataMixin","dateMixin","__WEBPACK_IMPORTED_MODULE_0_common_js_util__","__WEBPACK_IMPORTED_MODULE_1_vux_src_tools_date_format_js__","__WEBPACK_IMPORTED_MODULE_1_vux_src_tools_date_format_js___default","methods","_refresh","_loadMore","loadMore","normalizLineData","dataObj","columns","rows","bars","times","checkTime","startTime","endTime","$vux","toast","show","time","filters","formatDate","collectAxesInfo","globalTooltipModel","globalAxisPointerModel","linksOption","linkGroups","saveTooltipAxisInfo","fromTooltip","triggerTooltip","axisPointerModel","axisPointerShow","isHandleTrigger","makeAxisPointerModel","baseTooltipModel","snap","makeKey","involveSeries","axisInfo","axesInfo","useHandle","seriesModels","axesInfoInCoordSys","seriesInvolved","groupIndex","getLinkGroupIndex","linkGroup","mapper","axisPointerEnabled","coordSysKey","coordSysAxesInfo","coordSysMap","coordSysModel","getAxes","getTooltipAxes","triggerAxis","cross","tooltipAxes","baseAxes","otherAxes","tooltipAxisPointerModel","volatileOption","field","labelOption","label","crossStyle","lineStyle","collectSeriesInfo","seriesTooltipTrigger","seriesTooltipShow","getAxis","dim","seriesDataCount","axisModel","linkOption","checkPropInLink","linkPropValue","axisPropValue","collect","fixValue","getAxisInfo","reverse","isBlank","getAxisPointerModel","transferProperties","TRANSFERABLE_PROPERTIES","__wrappedMethods","propName","DefaultDataProvider","dataArray","_array","normalizeDimensions","cloneListForMapAndSample","original","excludeDimensions","allDimensions","hostModel","_storage","originalStorage","dimStore","globalObj","Float64Array","Int32Array","dataCtors","float","int","ordinal","DataDiffer","pure","getItem","dimensionInfos","dimensionNames","dimensionName","dimensionInfo","stackable","_dimensionInfos","indices","_nameList","_idList","_optionModels","_visual","_layout","_itemVisuals","_itemLayouts","_graphicEls","_rawData","_extent","listProto","hasItemOption","initData","nameList","dimValueGetter","isDataArray","nameDimIdx","dimensionInfoMap","size","idList","nameRepeatCount","itemName","DataCtor","stackedValue","getValues","getDataExtent","dimData","dimExtent","getSum","rawIndex","mid","indicesOfNearest","maxDistance","nearestIndices","minDist","MAX_VALUE","minDiff","diff","rawIdx","getId","dims","dimSize","filterSelf","newIndices","keep","mapArray","tmpRetValue","retValue","downSample","dimension","rate","sampleValue","sampleIndex","targetStorage","originalIndices","frameValues","frameIndices","frameSize","otherList","otherIdList","setVisual","setLayout","getLayout","getItemLayout","setItemLayout","clearItemLayouts","itemVisual","setItemVisual","setItemDataAndSeriesIndex","setItemGraphicEl","getItemGraphicEl","eachItemGraphicEl","cloneShallow","dimensionInfoList","wrapMethod","injectFunction","originalMethod","res","TRANSFERABLE_METHODS","CHANGABLE_METHODS","completeDimensions","sysDims","applyDim","resultItem","OTHER_DIMS","coordDimNameMap","genName","fromZero","dimsDef","encodeDef","dataDimNameMap","dimCount","retrieveValue","sysDimItem","sysDimItemDimsDef","dimDefItem","userDimName","tooltipName","dataDims","resultDimIdx","availDimIdx","sysDimIndex","sysDimItemOtherDims","extra","extraPrefix","extraFromZero","isExtraCoord","guessOrdinal","tooltip","setting","_setting","_interval","scaleProto","getSetting","unionExtent","unionExtentFromData","start","end","thisExtent","_isBlank","config","debugMode","Element","_children","__storage","children","childOfName","childCount","_doAdd","addBefore","nextSibling","addToStorage","addChildrenToStorage","delFromStorage","delChildrenFromStorage","removeAll","includeChildren","tmpRect","tmpMat","invisible","childRect","curve","bbox","CMD","Q","Z","min2","max2","mathCos","mathSin","mathAbs","hasTypedArray","notSaveData","_saveData","_xi","_yi","_x0","_y0","_ux","_uy","_len","_lineDash","_dashOffset","_dashIdx","_dashSum","moveTo","addData","lineTo","exceedUnit","_needsDash","_dashedLineTo","bezierCurveTo","_dashedBezierTo","quadraticCurveTo","_dashedQuadraticTo","arc","startAngle","endAngle","anticlockwise","arcTo","radius","closePath","toStatic","lineDashSum","offset","setData","appendPath","appendSize","appendPathData","cmd","_expandData","_prevCmd","newData","dash","dashSum","nDash","bezierLen","tmpLen","xi","yi","fromLine","fromCubic","fromQuadratic","rx","ry","fromArc","ux","uy","dTheta","psi","fs","scaleX","scaleY","isEllipse","_coordinateSystems","coordinateSystemCreators","coordinateSystems","creater","coordinateSystemCreator","excludes","includes","roundNumber","_intervalPrecision","getInterval","_niceExtent","getIntervalPrecision","intervalScaleGetTicks","niceTicks","intervalScaleNiceTicks","intervalPrecision","niceTickExtent","expandSize","Triangle","Diamond","Pin","angle","asin","tanX","tanY","cpLen","cpLen2","Arrow","symbolCtors","roundRect","square","circle","diamond","pin","arrow","triangle","symbolShapeMakers","symbolBuildProxies","Symbol","symbolType","beforeBrush","proxySymbol","symbolPathSetColor","symbolStyle","symbolShape","__isEmptyBrush","symbolUtil","createSymbol","symbolPath","setColor","classUtil","colorPaletteMixin","legendDataProvider","visualColorAccessPath","getInitialData","fillDataTextStyle","newSeriesOption","getLinkedData","getRawData","getBaseAxis","multipleSeries","formattedValue","setEachItem","dimIdx","valStr","vertially","tooltipDims","colorEl","animationEnabled","getColorFromPalette","scope","getAxisTooltipData","getTooltipPosition","Chart","elSetState","state","toggleHighlight","dataIdx","highlight","downplay","chartProto","random","subTypeDefaulters","registerSubTypeDefaulter","defaulter","determineSubType","componentTypeMain","dependencyGetter","makeDepndencyGraph","fullNameList","graph","noEntryList","thisItem","createDependencyGraphItem","originalDeps","availableDeps","getAvailableDependencies","entryCount","dependentName","predecessor","thatItem","successor","dep","topologicalTravel","targetNameList","callback","removeEdge","succComponentType","removeEdgeAndAdd","targetNameSet","currComponentType","currVertex","isInTargetNameSet","minRunLength","DEFAULT_MIN_MERGE","makeAscendingRun","lo","hi","compare","runHi","reverseRun","binaryInsertionSort","pivot","gallopLeft","hint","lastOffset","maxOffset","gallopRight","TimSort","pushRun","_runStart","_runLength","runStart","stackSize","runLength","mergeRuns","mergeAt","forceMergeRuns","start1","length1","start2","length2","mergeLow","mergeHigh","cursor1","cursor2","dest","count1","count2","exit","_minGallop","minGallop","DEFAULT_MIN_GALLOPING","customCursor","customDest","remaining","ts","minRun","force","Style","__clipPaths","RectText","draggable","dragging","culling","cursor","afterBrush","rectContain","coord","animateStyle","useStyle","Gradient","addColorStop","imageOnLoad","cachedImgObj","__cachedImgObj","onload","pending","pendingWrap","cbPayload","hostEl","globalImageCache","newImageOrSrc","createOrUpdateImage","__zrImageSrc","src","normalizeStyle","VALID_TEXT_ALIGN","textBaseline","VALID_TEXT_VERTICAL_ALIGN","renderPlainText","setCtx","__textCotentBlock","boxPos","getBoxPosition","baseX","baseY","applyTextRotation","boxY","textX","textY","needDrawBg","needDrawBackground","boxX","drawBackground","getTextXForPadding","getStroke","getFill","strokeText","fillText","renderRichText","drawRichText","xLeft","lineTop","xRight","tokenCount","usedWidth","lineXLeft","lineXRight","placeToken","origin","textOrigin","isPlainBg","roundRectHelper","onBgImageLoaded","drawImage","blockHeiht","__currentValues","maxValue","lastIndexOf","center","middle","normalizeTextStyle","renderText","needDrawText","firstDataNotNull","ifNeedCompleteOrdinalData","sampleItem","createListFromArray","coordSysName","creators","registeredCoordSys","completeDimOpt","categoryIndex","createNameList","categories","categoryAxesModels","isStackable","getDimTypeByAxis","categoryAxisModel","categoryDim","dataLen","cartesian2d","axesModels","xAxisModel","yAxisModel","xAxisType","yAxisType","isXAxisCateogry","isYAxisCategory","singleAxis","singleAxisModel","singleAxisType","isCategory","single","polar","polarModel","angleAxisModel","findAxisModel","radiusAxisModel","radiusAxisType","angleAxisType","isAngleAxisCateogry","isRadiusAxisCateogry","geo","makeAxisEventDataBase","endTextLayout","textRotate","rotationDiff","inverse","onLeft","tooltipOpt","fixMinMaxLabelShow","textEls","showMinLabel","showMaxLabel","firstLabel","nextLabel","lastLabel","prevLabel","isTwoLabelOverlapped","current","labelLayout","firstRect","nextRect","mRotationBack","AxisBuilder","labelOffset","nameDirection","tickDirection","labelDirection","dumbGroup","updateTransform","_transform","_dumbGroup","hasBuilder","builders","getGroup","axisLine","pt1","pt2","lineCap","getLineStyle","axisTick","tickModel","lineStyleModel","tickLen","tickInterval","labelInterval","ticksCoords","getTicksCoords","ifIgnoreOnTick","axisLabel","axisLabelShow","labelMargin","labelRotation","innerTextLayout","categoryData","triggerEvent","tickVal","itemLabelModel","textColor","getTextColor","dataToCoord","pos","labelStr","textEl","targetType","decomposeTransform","axisName","nameLocation","gapSignal","nameRotation","axisNameAvailableWidth","truncateOpt","nameTruncateMaxWidth","truncatedText","formatterParams","__fullText","__truncatedText","content","axisRotation","rawTick","fixExtentWithBands","nTick","normalizedExtent","onBand","_labelInterval","containData","coordToData","pointToData","alignWithLabel","bands","getBands","coords","getLabelsCoords","getBandWidth","axisExtent","getLabelInterval","isHorizontal","rangeStart","rangeEnd","getCoordSysModel","setRange","resetRange","getSymbolSize","symbolSize","getScale","seriesScope","updateData","driftSymbol","drift","labelHelper","symbolProto","_createSymbol","_symbolType","stopSymbolAnimation","toLastFrame","getSymbolPath","setZ","setDraggable","_updateCommon","_seriesModel","normalStyleAccessPath","emphasisStyleAccessPath","normalLabelAccessPath","emphasisLabelAccessPath","itemStyle","hoverItemStyle","symbolRotate","symbolOffset","hoverLabelModel","hoverAnimation","cursorStyle","getItemStyle","elStyle","opacity","valueDim","findLabelValueDim","normalText","onEmphasis","ratio","onNormal","fadeOut","updateAxisPointer","axisView","forceRender","AxisView","getAxisPointerClass","axisPointerClass","axisPointerModelHelper","_axisPointer","disposeAxisPointer","axisPointer","axisPointerClazz","registerAxisPointerClass","gridModel","grid","rawAxisPosition","axisPosition","onZero","axisDim","getRect","rectBound","axisOffset","posBound","otherAxis","onZeroAxisIndex","onZeroCoord","toGlobalCoord","dirMap","labelInside","dataToPoint","initGlobalListeners","useHandler","dis","makeDispatchAction","records","record","dispatchTooltipFinally","pendings","initialized","doEnter","onLeave","actuallyPayload","showLen","showTip","hideLen","hideTip","currTrigger","globalListener","unregister","confineInContainer","viewWidth","viewHeight","buildElStyle","axisPointerType","styleModel","getAreaStyle","buildLabelElOption","elOption","labelPos","getValueLabel","paddings","textRect","align","verticalAlign","bgColor","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","seriesDataIndices","seriesData","idxItem","dataParams","getTransformedPosition","layoutInfo","buildCartesianSingleLabelElOption","textLayout","makeLineShape","xDimIndex","makeRectShape","xy","wh","makeSectorShape","r0","clockwise","getAxisType","axisModelCreator","AxisModel","gridIndex","gridId","extraOption","colorIdx","colorNameMap","colorPalette","fixExtent","lib","ORIGIN_METHOD","RATE","fn","delay","debounce","lastExec","getTime","timer","currCall","debounceNextCall","lastCall","thisDelay","thisDebounce","clearTimeout","setTimeout","debounceDelay","createOrUpdate","fnAttr","throttleType","originFn","lastThrottleType","guid","Animatable","clipPath","beforeUpdate","afterUpdate","hide","setClipPath","addSelfToZr","removeClipPath","removeSelfFromZr","animators","addAnimator","removeAnimator","defaultGetter","defaultSetter","interpolateNumber","interpolateString","interpolateArray","arrDim","len2","fillArr","arr0","arr1","arr0Len","arr1Len","arraySlice","isArraySame","catmullRomInterpolateArray","catmullRomInterpolate","v0","cloneValue","rgba2String","getArrayDim","keyframes","lastValue","createTrackClip","animator","easing","oneTrackDone","forceAnimate","getter","_getter","setter","_setter","useSpline","trackLen","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","_target","lastFrame","lastFramePercent","onframe","frame","clip","Clip","life","_loop","_delay","ondestroy","Animator","_tracks","_clipCount","_doneList","_onframeList","_clipList","when","tracks","during","pause","_paused","resume","isPaused","_doneCallback","doneList","lastClip","clipCount","addClip","oldOnFrame","forwardToLast","clipList","removeClip","done","getClips","requestAnimationFrame","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","PI2","normalizeRadian","LinkedList","head","tail","linkedListProto","insert","entry","Entry","insertEntry","maxSize","_list","_map","_maxSize","_lastRemovedEntry","LRUProto","removed","leastUsedEntry","idStart","ZImage","_image","sWidth","sHeight","repeat","createPattern","createLinearGradient","createRadialGradient","textHelper","STYLE_COMMON_PROPS","transformText","blend","prevStyle","firstDraw","globalAlpha","globalCompositeOperation","otherStyle","newStyle","canvasGradient","styleProto","shadowTemp","orignalBrush","modified","clipPaths","smoothSpline","smoothBezier","smooth","controlPoints","smoothConstraint","cp1","cp2","r1","r2","r3","r4","total","mIdentity","transformableProto","parentHasTransform","invTransform","tmpTransform","atan2","transformCoordToGlobal","xAxis","yAxis","nameRotate","nameTruncate","nameTextStyle","nameGap","inside","splitLine","splitArea","areaStyle","categoryAxis","valueAxis","timeAxis","logAxis","logBase","isAxisUsedInTheGrid","getLabelUnionRect","axisLabelModel","labelCount","isLabelIgnored","singleRect","Grid","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","fixAxisOnZero","axesMap","otherAxisDim","axes","canNotOnZeroToAxis","updateAxisTransfrom","coordBase","axisExtentSum","toLocalCoord","findAxesModels","axesTypes","isCartesian2D","Cartesian2D","Axis2D","gridProto","_updateScale","ignoreContainLabel","adjustAxes","axesList","gridRect","getBoxLayoutParams","labelUnionRect","axisIndex","axesMapOnDim","getCartesian","xAxisIndex","yAxisIndex","coordList","getCartesians","_findConvertTarget","cartesian","coordsList","createAxisCreator","axisPositionUsed","axesCount","addAxis","baseAxis","getOtherAxis","grids","legendModels","findComponents","eachSeriesByType","isSelected","paletteScope","eachRawSeriesByType","dataAll","idxMap","isSeriesFiltered","filteredIdx","singleDataColor","defaultSymbolType","legendSymbol","symbol","itemSymbolType","itemSymbolSize","defineProperty","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_keys__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_keys___default","__WEBPACK_IMPORTED_MODULE_1__icon__","__WEBPACK_IMPORTED_MODULE_1__icon___default","__WEBPACK_IMPORTED_MODULE_2__datetimepicker__","__WEBPACK_IMPORTED_MODULE_3__group__","__WEBPACK_IMPORTED_MODULE_3__group___default","__WEBPACK_IMPORTED_MODULE_4__inline_desc__","__WEBPACK_IMPORTED_MODULE_4__inline_desc___default","__WEBPACK_IMPORTED_MODULE_5__mixins_uuid__","__WEBPACK_IMPORTED_MODULE_6__tools_date_format__","__WEBPACK_IMPORTED_MODULE_6__tools_date_format___default","mixins","components","InlineDesc","Icon","default","title","inlineDesc","minYear","maxYear","confirmText","cancelText","clearText","yearRow","monthRow","dayRow","hourRow","minuteRow","required","Boolean","minHour","maxHour","startDate","endDate","valueTextAlign","displayFormat","readonly","hourList","minuteList","defaultSelectedValue","created","isFirstSetValue","currentValue","valid","errors","mounted","_this2","uuid","$el","$nextTick","computed","_value","pickerOptions","_this","output","getButtonText","onSelect","wholeValue","picker","renderInline","$emit","onConfirm","onClear","onHide","validate","onShow","firstError","_this3","destroy","watch","oldVal","beforeDestroy","__WEBPACK_IMPORTED_MODULE_0_vux_src_components_datetime_index_vue__","__WEBPACK_IMPORTED_MODULE_0_vux_src_components_datetime_index_vue___default","__WEBPACK_IMPORTED_MODULE_1_vux_src_components_group_index_vue__","__WEBPACK_IMPORTED_MODULE_1_vux_src_components_group_index_vue___default","dateStartTime","dateEndTime","Datetime","setStartTime","setEndTime","renderScroller","__WEBPACK_IMPORTED_MODULE_0__picker_scroller__","defaultValue","showMask","MASK","__WEBPACK_IMPORTED_MODULE_1__util__","MASK_TEMPLATE","body","appendChild","CURRENT_PICKER","display","hideMask","SHOW_ANIMATION_TIME","DatetimePicker","DEFAULT_CONFIG","reMakeData","triggerHandler","__WEBPACK_IMPORTED_MODULE_2__makeData__","TYPE_MAP","year","month","day","hour","minute","NOW","template","TEMPLATE","currentYear","currentMonth","destroyOnHide","_show","newValueMap","classList","select","valueMap","querySelector","_makeData","getValue","currentDay","monthScroller","_setMonthScroller","dayScroller","_setDayScroller","yearScroller","innerText","confirm","_getYears","_getMonths","minMonth","maxMonth","_getDays","minDay","maxDay","selector","removeProperty","formatValue","scroller","expr1","expr2","isLeapYear","getMaxDay","getYears","startYear","endYear","rs","getMonths","startMonth","endMonth","getDays","startDay","endDay","trimZero","addZero","parseRow","tmpl","formatParts","valueParts","__WEBPACK_IMPORTED_MODULE_0__format___default","getElement","expr","toElement","html","tempContainer","innerHTML","firstElementChild","removeElement","parentNode","removeChild","__WEBPACK_IMPORTED_MODULE_0__format__","sources","mappings","file","sourcesContent","sourceRoot","chartInstance","echartsAPIList","SymbolDraw","symbolCtor","_symbolCtor","symbolNeedsDraw","isIgnore","symbolDrawProto","oldData","_data","SymbolCtor","newIdx","symbolEl","oldIdx","execute","enableAnimation","labelDims","legendHoverLink","clipOverflow","smoothMonotone","showSymbol","showAllSymbol","connectNulls","sampling","hoverLayerThreshold","isPointsSame","points1","points2","getSmooth","getAxisExtentWithGap","getGlobalExtent","halfBandWidth","dir","sign","getStackedOnPoints","valueStart","baseDataOffset","stackedOnSameSign","stackedData","createGridClipShape","hasAnimation","xExtent","yExtent","createPolarClipShape","angleAxis","getAngleAxis","radiusAxis","getRadiusAxis","radiusExtent","angleExtent","RADIAN","createClipShape","turnPointsIntoStep","stepTurnAt","baseIndex","stepPoints","nextPt","pt","stepPt","stepPt2","getVisualGradient","visualMetaList","visualMeta","stops","stopLen","outerColors","minCoord","maxCoord","coordSpan","unshift","gradient","lineAnimationDiff","polyHelper","lineGroup","symbolDraw","_symbolDraw","_lineGroup","areaStyleModel","isCoordSysPolar","prevCoordSys","_coordSys","polyline","_polyline","polygon","_polygon","isAreaChart","stackedOnPoints","isSymbolIgnore","_getSymbolIgnoreFunc","__temp","_step","_newPolygon","_stackedOnPoints","_points","_updateAnimation","_newPolyline","visualColor","lineJoin","stackedOnSmooth","getAxesByScale","stackedOnCurrent","stackedOnNext","__points","updatedDataInfo","diffStatus","idx1","ptIdx","getStackedOnPoint","diffData","diffResult","oldStackedOnPoints","newStackedOnPoints","oldCoordSys","newCoordSys","currPoints","nextPoints","currStackedPoints","nextStackedPoints","sortedIndices","rawIndices","diffItem","pointAdded","currentPt","sortedCurrPoints","sortedNextPoints","sortedCurrStackedPoints","sortedNextStackedPoints","sortedStatus","isPointNull","drawSegment","segLen","allLen","smoothMin","smoothMax","prevIdx","v2Copy","cp0","nextIdx","nextP","ratioNextSeg","prevP","lenPrevSeg","lenNextSeg","vec2Min","vec2Max","getBoundingBox","ptMin","ptMax","fixClipWithShadow","stackedOnBBox","cartesianAxisHelper","axisBuilderAttrs","selfBuilderAttrs","CartesianAxisView","oldAxisGroup","_axisGroup","axisBuilder","_splitLine","splitLineModel","lineColors","lineInterval","lineCount","colorIndex","_splitArea","splitAreaModel","areaColors","prevX","prevY","areaInterval","axisTrigger","link","AxisPointerModel","triggerOn","animationDurationUpdate","shadowStyle","borderColor","borderWidth","handle","icon","AxisPonterView","disopse","BaseAxisPointer","animationModel","moveAnimation","propsEqual","lastProp","lastProps","newProps","equals","updateLabelShowHide","labelEl","getHandleTransProps","trans","updateMandatoryProps","eventTool","_group","_lastGraphicKey","_handle","_dragging","_lastValue","_lastStatus","_payloadInfo","animationThreshold","_axisModel","_axisPointerModel","makeElOption","graphicKey","_moveAnimation","determineAnimation","doUpdateProps","updatePointerEl","updateLabelEl","createPointerEl","createLabelEl","_renderHandle","isCategoryAxis","useSnap","pointerOption","pointer","pointerEl","updateHandleTransform","handleModel","onmousemove","onmousedown","_onHandleDragMove","ondragend","_onHandleDragEnd","includeStyles","handleSize","_moveHandleToValue","getHandleTransform","_doDispatchAxisPointer","payloadInfo","cursorPoint","tooltipOption","doClear","buildLabel","getAxisDimIndex","viewHelper","CartesianAxisPointer","otherExtent","pixelValue","pointerShapeBuilder","currPosition","cursorOtherValue","tooltipOptions","targetShape","shadow","bandWidth","illegalPoint","findPointFromSeries","isIllegalPoint","inputAxesInfo","shouldHide","outputFinder","showValueMap","dataByCoordSys","updaters","showPointer","showTooltip","coordSysContainsPoint","inputAxisInfo","findInputAxisInfo","processOnAxis","linkTriggers","tarAxisInfo","tarKey","srcAxisInfo","srcKey","srcValItem","makeMapperParam","updateModelActually","dispatchTooltipActually","dispatchHighDownActually","newValue","dontSnap","buildPayloadsBySeries","payloadBatch","snapToValue","seriesNestestValue","nestestValue","modelHelper","coordSysItem","coordSysId","coordSysIndex","coordSysType","coordSysMainType","dataByAxis","axisId","valueLabelOpt","outputAxesInfo","valItem","lastHighlights","newHighlights","toHighlight","toDownplay","boxLayoutParams","viewportSize","makeBackground","LegendModel","selected","_updateData","legendData","hasSelected","availableNames","getSeries","_availableNames","unSelect","toggleSelected","borderRadius","itemGap","itemWidth","itemHeight","inactiveColor","selectedMode","dispatchSelectAction","dispatchHighlightAction","dataName","dispatchDownplayAction","symbolCreator","listComponentHelper","layoutUtil","newlineDisabled","_contentGroup","_backgroundEl","getContentGroup","legendModel","resetInner","itemAlign","renderInner","mainRect","layoutInner","layoutRect","contentGroup","legendDrawnMap","selectMode","getSeriesByName","legendSymbolType","_createItem","eachRawSeries","itemGroup","itemIcon","tooltipModel","legendGlobalTooltipModel","hitRect","legendIndex","__legendDataIndex","contentRect","legendSelectActionHandler","selectedMap","isToggleSelect","isItemSelected","filterSeries","assembleTransition","transitionText","vendors","vendorPrefix","assembleFont","cssText","assembleCssText","transitionDuration","zrColor","borderName","camelCase","TooltipContent","_x","_y","_container","_hideTimeout","onmouseenter","_enterable","_inContent","eventUtil","dispatch","onmouseleave","hideLater","_hideDelay","stl","currentStyle","defaultView","getComputedStyle","domStyle","setContent","setEnterable","enterable","getSize","viewportRootOffset","getViewportRootOffset","offsetLeft","offsetTop","isShow","showContent","alwaysShowContent","displayMode","confine","showDelay","hideDelay","animationEasingUpdate","buildTooltipModel","modelCascade","resultModel","refixTooltipPosition","gapH","gapV","getOuterSize","confineTooltipPosition","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","calcTooltipPosition","contentSize","domWidth","domHeight","rectWidth","rectHeight","isCenterAlign","axisPointerViewHelper","proxyRect","tooltipContent","_tooltipContent","_tooltipModel","_ecModel","_lastDataByCoordSys","_alwaysShowContent","_initGlobalListener","_keepShow","_tryShow","_hide","_lastX","_lastY","_refreshUpdateTimeout","manuallyShowTip","_ticket","_manuallyAxisShowTip","pointInfo","findHover","manuallyHideTip","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","_showTimout","singleDefaultHTML","singleParamsList","singleTooltipModel","itemCoordSys","axisValue","seriesDefaultHTML","valueLabel","axisValueLabel","firstLine","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","tooltipTrigger","defaultHtml","asyncTicket","subTooltipModel","cbTicket","vAlign","viewSize","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisItemCoordSys","thisDataByAxis","lastItem","indexAxis","lastIndices","lastIdxItem","newIdxItem","axisDefault","AXIS_TYPES","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","coordExtent","dimAxisMapper","_axes","Cartesian","_dimList","_dataCoordConvert","input","dimList","axisX","axisY","containLabel","defaultKeyGetter","oldArr","newArr","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","keyArr","keyGetterName","dataDiffer","existence","_add","_update","_remove","oldDataIndexMap","newDataIndexMap","oldDataKeyArr","newDataKeyArr","axisModelCommonMixin","createList","createScale","mixinAxisModelCommonMethods","coordDims","maskColor","mask","labelRect","mergeTheme","themeItem","initBase","baseOption","OPTION_INNER_KEY","_seriesIndices","globalDefault","getComponentsByTypes","componentsMap","existComponent","createSeriesIndices","filterBySubType","cpt","assertSeriesInitialized","_optionManager","mountOption","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","visitComponent","newCptOptionList","ComponentModelClass","newCptTypes","componentOption","cpts","isIdArray","isNameArray","queryCond","q","indexAttr","idAttr","nameAttr","queryResult","oneSeries","getSeriesByType","rawSeriesIndex","getCurrentSeriesIndices","filteredSeries","componentTypes","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","parseRawOption","rawOption","isNew","mediaDefault","timelineOptions","mediaList","timelineOpt","timeline","media","singleMedia","preProcess","applyMediaQuery","ecWidth","ecHeight","realMap","aspectratio","applicatable","matched","QUERY_REG","operator","realAttr","real","expect","indicesEquals","indices1","indices2","oldOption","newCptOpt","oldCptOpt","oldOptionBackup","newParsedOption","isRecreate","optionBackup","timelineModel","getCurrentIndex","platform","animationDuration","progressiveThreshold","useUTC","getBorderLineDash","lineType","getLineDash","dotSize","dashSize","graphicUtil","PATH_COLOR","noDefault","compatLayoutProperties","LAYOUT_PROPERTIES","compatStyle","COMPATITABLE_COMPONENTS","COMPATITABLE_SERIES","seriesOpt","clockWise","pointerColor","dataRange","visualMap","componentName","compatItemStyle","itemStyleOpt","POSSIBLE_STYLES","normalItemStyleOpt","emphasisItemStyleOpt","compatTextStyle","labelOptSingle","compatLabelTextStyle","labelOpt","processSeries","upperLabel","edgeLabel","markPoint","markLine","markArea","mpData","mlData","toArr","toObj","axisOpt","parallel","parallelOpt","parallelAxisDefault","calendar","calendarOpt","radar","radarOpt","geoOpt","samplers","average","nearest","indexSampler","sampler","fixRoundingError","originalVal","roundingErrorFix","intervalScaleProto","mathFloor","mathCeil","mathLog","LogScale","_originalScale","originalScale","powVal","__fixMin","__fixMax","approxTickNum","err","rank","scaleHelper","bisect","TimeScale","stepLvl","_stepLvl","ONE_HOUR","approxInterval","scaleLevelsLen","scaleLevels","yearSpan","ONE_SECOND","ONE_MINUTE","ONE_DAY","componentProto","encodeColor","colorAccessPath","locals","_vm","$createElement","_c","_self","staticClass","attrs","min-year","max-year","clear-text","year-row","month-row","day-row","confirm-text","cancel-text","on-change","$$v","expression","_v","staticRenderFns","class","weui-cell_access","data-cancel-text","data-confirm-text","href","$parent","labelWidth","labelAlign","marginRight","labelMarginRight","domProps","_s","_e","directives","rawName","makeEventPacket","eveType","targetInfo","topTarget","gestureEvent","pinchX","pinchY","pinchScale","EmptyProxy","isHover","displayable","SILENT","Draggable","handlerNames","Handler","proxy","painterRoot","_hovered","_lastTouchMoment","mousemove","lastHovered","lastHoveredTarget","hovered","hoveredTarget","setCursor","dispatchToElement","mouseout","innerDom","element","relatedTarget","eventArgs","setCursorStyle","eventHandler","eventPacket","eachOtherLayer","layer","exclude","hoverCheckResult","_downel","_upel","returnFalse","createDom","newDom","newDomStyle","Layer","onselectstart","domBack","ctxBack","motionBlur","lastFrameAlpha","initContext","createBackBuffer","clearAll","haveMotionBLur","clearRect","clearColorGradientOrPattern","__canvasGradient","save","fillRect","restore","parseInt10","isLayerValid","__builtin__","preProcessLayer","__unusedCount","postProcessLayer","isDisplayableCulled","viewRect","isClipPathChanged","prevClipPaths","doClip","createRoot","domRoot","Painter","root","singleCanvas","_opts","_singleCanvas","rootStyle","zlevelList","_zlevelList","layers","_layers","_layerConfig","_width","_height","mainLayer","_domRoot","_getSize","_progressiveLayers","_hoverlayer","_hoverElements","getViewportRoot","viewportRoot","paintAll","_paintList","refreshHover","_startProgessive","__hoverMir","elMirror","__from","hoverElements","clearHover","hoverLayer","displayableSortFunc","getLayer","originalEl","_doPaintEl","_progressiveToken","_doPaintList","_furtherProgressive","_progress","_clearProgressive","_updateLayerStatus","eachBuiltinLayer","flushProgressiveLayer","currentLayer","currentZLevel","currentProgressiveLayer","layerProgress","progressiveLayerIdx","elZLevel","elFrame","__frame","MAX_PROGRESSIVE_LAYER_NUMBER","renderScope","__progress","__maxProgress","__nextIdxNotProg","forcePaint","prevClipLayer","prevElClipPaths","insertLayer","layersMap","prevLayer","virtual","prevDom","insertBefore","firstChild","eachLayer","getLayers","progressiveLayers","elCountsLastFrame","progressiveElCountsLastFrame","lastProgressiveKey","progressiveLayerCount","frameCount","elProgress","_clearLayer","layerConfig","delLayer","clearLayer","findAndDrawOtherLayer","smaller","larger","intermediateLayer","renderToCanvas","imageLayer","displayList","whIdx","cwh","plt","prb","pathToImage","shadowBlurSize","leftMargin","rightMargin","topMargin","bottomMargin","pathTransform","ImageShape","imgShape","shapeCompareFunc","Storage","_roots","_displayList","_displayListLen","includeIgnore","updateDisplayList","_updateAndAddDisplayable","userSetClipPath","currentClipPath","parentClipPath","addRoot","delRoot","_renderList","Animation","stage","_clips","_running","_time","_pausedTime","_pauseStart","clips","deferredEvents","deferredClips","_needsRemove","fire","_startLoop","_life","_initialized","onrestart","easingFuncs","globalTime","deltaTime","_startTime","easingFunc","schedule","restart","arg","linear","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","exponentialOut","exponentialInOut","circularIn","circularOut","circularInOut","elasticIn","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","_l","_a","_b","isAroundEqual","swapExtrema","windingCubic","nRoots","y0_","y1_","nExtrema","unit","windingQuadratic","y_","x_","windingArc","containPath","isStroke","windingLine","cubic","quadratic","pointPair","GestureMgr","_track","recognize","_doTrack","_recognize","touches","trackItem","recognizers","gestureInfo","pinch","track","pinchEnd","pinchPre","pinchCenter","extremity","fromPoints","xDim","yDim","tx","ty","eventNameFix","processGesture","gestureMgr","_gestureMgr","setTouchTimer","instance","_touching","_touchTimer","isPointerFromTouch","pointerType","initDomHandler","makeMouseHandler","touchHandlerNames","_handlers","domHandlers","pointerHandlerNames","mouseHandlerNames","HandlerDomProxy","mountHandlers","pointerEventNames","pointerdown","pointerup","pointermove","pointerout","nm","touchstart","mousedown","touchmove","touchend","mouseup","click","handlerDomProxyProto","paths","_updatePathDirty","globalCoord","v2Min","v2Max","v2Scale","v2Distance","v2Add","isLoop","constraint","prevPoint","nextPoint","cps","d0","interpolate","segs","w2","w3","unitX","unitY","someVectorAt","isTangent","cpx2","cpy2","cpx1","cpy1","curveTool","pointAt","tangentAt","animatingShape","pathSplitted","_animateToShallow","objShallow","propertyCount","_dragStart","_drag","_dragEnd","draggingTarget","_draggingTarget","dropTarget","lastDropTarget","_dropTarget","processArc","fa","psiDeg","xp","yp","lambda","cxp","cyp","vAngle","u","vRatio","createPathProxyFromString","cs","cc","prevCmd","cpx","cpy","ctlPtx","ctlPty","createPathOptions","pathProxy","transformPath","vMag","pathEls","pathList","pathEl","pathBundle","nPoint","mathAtan2","delInstance","HandlerProxy","useVML","painterCtors","ZRender","getInstance","registerPainter","rendererType","vml","handerProxy","_needsRefresh","oldDelFromStorage","oldAddToStorage","zLevel","_needsRefreshHover","refreshHoverImmediately","clearAnimation","__WEBPACK_IMPORTED_MODULE_0_vue__","actionInfos","barLayoutGrid","brushSelector","removeRect","removeSector","updateStyle","isPolar","itemStyleModel","getBarItemStyle","labelPositionOutside","setLabel","getLineWidth","rawLayout","BAR_BORDER_WIDTH_QUERY","BarView","coordinateSystemType","_render","isHorizontalOrRadial","elementCreator","newIndex","oldIndex","rectShape","animateProperty","animateTarget","isRadial","sector","sectorShape","fixedLineWidth","signX","signY","getMarkerPosition","barMinHeight","barMinAngle","labelText","FunnelSeries","_defaultLabelLine","labelLine","labelLineNormalOpt","labelLineEmphasisOpt","minSize","funnelAlign","FunnelPiece","hoverIgnore","normalIgnore","funnelPieceProto","opacityAccessPath","firstCreate","_updateLabel","linePoints","labelHoverModel","labelLineModel","labelLineHoverModel","Funnel","funnelPiece","piePiece","getViewRect","getSortedIndices","valueArr","isAscending","labelPosition","isLabelInside","labelLineLen","sizeExtent","getLinePoints","offY","dataSelectableMixin","PieSeries","updateSelectedMap","minAngle","selectedOffset","avoidLabelOverlap","percentPrecision","stillShowZeroSum","animationType","updateDataSelected","toggleItemSelected","midAngle","PiePiece","piePieceProto","Pie","sectorGroup","_sectorGroup","isFirstRender","onSectorClick","_createClipPath","itemLayout","adjustSingleSide","shiftUp","changeX","isDownList","lastDeltaX","deltaY","deltaX","lastY","upList","downList","avoidOverlap","labelLayoutList","leftList","rightList","hasLabelRotate","labelLineLen2","validDataCount","unitRadian","roseType","restAngle","valueSumLargerThanMinAngle","currentAngle","RadarSeries","indicatorAxes","getIndicatorAxes","radarIndex","normalizeSymbolSize","updateSymbols","oldPoints","newPoints","symbolGroup","__dimIdx","getInitialPoints","hoverPolygonIgnore","polygonIgnore","hoverAreaStyleModel","itemHoverStyle","defaultText","polarOptArr","polarNotRadar","polarOpt","indicator","polarIndex","pointsConverter","targetList","_targetList","_selectTargetMap","targetMap","radarModel","_buildAxes","_buildSplitLineAndArea","axisBuilders","indicatorAxis","getColorIndex","areaOrLine","areaOrLineColorList","showSplitLine","showSplitArea","splitLineColors","splitAreaColors","splitLines","splitAreas","ticksRadius","realSplitNumber","axesTicksPoints","coordToPoint","prevPoints","error","IndicatorAxis","Radar","_indicatorAxes","getIndicatorModels","indicatorModel","indicatorIndex","closestAxis","minRadianDiff","closestAxisIdx","coodToData","increaseInterval","radarSeries","rawExtent","fixedMin","fixedMax","nicedSplitNumber","halfSplitNumber","radarList","defaultsShow","valueAxisDefault","RadarModel","showName","nameFormatter","indicatorModels","indicatorOpt","iNameTextStyle","indName","getSeriesStackId","STACK_PREFIX","getAxisKey","getLayoutOnAxis","axisKey","stackId","widthAndOffsets","doCalBarWidthAndOffset","offsetCenter","calBarWidthAndOffset","barSeries","barWidth","barMaxWidth","barGap","barCategoryGap","seriesInfoList","columnsMap","seriesInfo","columnsOnAxis","remainedWidth","autoWidthCount","categoryGap","stacks","barGapPercent","autoWidth","column","lastColumn","widthSum","barWidthAndOffset","lastStackCoords","lastStackCoordsOrigin","columnLayoutInfo","columnOffset","columnWidth","valueAxisStart","lastCoord","lastCoordOrigin","innerRows","dimAxisName","axisVisible","meaAxisName","meaAxisType","digit","assign","V","axisSite","isHistogram","labelMap","metrics","showLine","E","keys","legendName","xAxisName","area","nullAddZero","yAxisName","percentShow","limitShowNum","isRing","O","legendLimit","realValue","sequence","ascending","some","remainStatus","totalName","remainName","totalNum","dataSum","TypeError","N","JSON","enumerable","configurable","writable","P","dataOrder","tooltipVisible","legendVisible","$","_","order","I","legend","Y","ref","canvasStyle","settings","beforeConfig","afterConfig","afterSetOption","afterSetOptionOnce","events","legendPosition","dataZoom","toolbox","initOptions","themeName","deep","dataHandler","chartLib","chartHandler","chartColor","then","optionsHandler","addMark","_once","echartsLib","$refs","bindEvents","addWatchToProps","_watchers","$props","$watch","beforeDestory","bar","histogram","pie","ring","funnel","waterfall","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_slicedToArray__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_slicedToArray___default","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_promise__","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_promise___default","__WEBPACK_IMPORTED_MODULE_2_babel_runtime_regenerator__","__WEBPACK_IMPORTED_MODULE_2_babel_runtime_regenerator___default","__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_asyncToGenerator__","__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_asyncToGenerator___default","__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_extends__","__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_extends___default","__WEBPACK_IMPORTED_MODULE_5_v_charts_lib_chart_min__","__WEBPACK_IMPORTED_MODULE_5_v_charts_lib_chart_min___default","__WEBPACK_IMPORTED_MODULE_6_base_date_range_date_range__","__WEBPACK_IMPORTED_MODULE_6_base_date_range_date_range___default","__WEBPACK_IMPORTED_MODULE_7_components_v_header_v_header__","__WEBPACK_IMPORTED_MODULE_7_components_v_header_v_header___default","__WEBPACK_IMPORTED_MODULE_8_base_loading_loading__","__WEBPACK_IMPORTED_MODULE_8_base_loading_loading___default","__WEBPACK_IMPORTED_MODULE_9_vuex__","__WEBPACK_IMPORTED_MODULE_10_common_js_mixin__","__WEBPACK_IMPORTED_MODULE_11_api_config__","__WEBPACK_IMPORTED_MODULE_12_api__","__WEBPACK_IMPORTED_MODULE_13_common_js_bus__","chartSettings","chartData0","selectedItem","VeChart","VHeader","Loading","DateRange","changeDateSelectedItem","_changeDate","selectedItems","tag","_concurrent","changeType","typeArr","_getChart0","mark","_callee","wrap","_context","startPoTime","endPoTime","code","abrupt","sent","_callee2","_context2","getTitle","$router","analysisItem","slot","_f","changeDate"],"mappings":"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A,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CAEH,SAAUvtF,EAAQC,EAASC,GoN7mxCjCD,EAAAD,EAAAC,QAAAC,EAAA,OAKAD,EAAA8D,MAAA/D,EAAAU,EAAA,ipCAAwqC,IAAQub,QAAA,EAAAm5E,SAAA,0FAAAruD,SAAAsuD,SAAA,6cAAAC,KAAA,sBAAAC,gBAAA,i4CAAigEC,WAAA,OpNqnxCxqG,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CAEH,SAAUx1F,EAAQC,EAASC,GqN7pxCjC,GAAAmwE,GAAAnwE,EAAA,IACA,iBAAAmwE,SAAArwE,EAAAU,EAAA2vE,EAAA,MACAA,EAAA0wC,SAAA/gH,EAAAC,QAAAowE,EAAA0wC,OAEA7gH,GAAA,gBAAAmwE,GAAA,IrNqqxCS,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACC,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CAEJ,SAAUrwE,EAAQC,GsNxwxCxBD,EAAAC,SAAgB8R,OAAA,WAAmB,GAAAivG,GAAAn8G,KAAa4zC,EAAAuoE,EAAAC,eAA0BC,EAAAF,EAAAG,MAAAD,IAAAzoE,CAC1E,OAAAyoE,GAAA,cACAG,OACA5mG,KAAA,WAEGymG,EAAA,OACHE,YAAA,oBACGF,EAAA,YACHE,YAAA,SACAC,OACA31B,MAAAs1B,EAAAsxB,SAAAtxB,EAAAwxB,iBAEGtxB,EAAA,OACHE,YAAA,aACAn2G,IACAyrH,MAAA1V,EAAAwwB,YAEAiB,KAAA,UACGzxB,EAAAiB,GAAA,4BAAAjB,EAAAiB,GAAA,KAAAf,EAAA,OACHE,YAAA,kBACGF,EAAA,MAAAF,EAAAiB,GAAAjB,EAAA8B,GAAA9B,EAAA8vB,aAAAr2H,SAAAumG,EAAAiB,GAAA,KAAAf,EAAA,cACHG,OACA36D,UAAAs6D,EAAA0xB,GAAA,cAAA1xB,EAAA8vB,aAAAiB,aACAprF,QAAAq6D,EAAA0xB,GAAA,cAAA1xB,EAAA8vB,aAAAkB,YAEA/mI,IACA0nI,WAAA3xB,EAAAowB,gBAEG,GAAApwB,EAAAiB,GAAA,KAAAf,EAAA,OACHE,YAAA,UACGF,EAAA,OACHE,YAAA,gBACGJ,EAAAiB,GAAA,YAAAjB,EAAAiB,GAAA,KAAAf,EAAA,YACHG,OACA/9G,KAAA09G,EAAA76D,iBAAA66D,EAAA6vB,YACA1D,SAAAnsB,EAAA4vB,kBAEG,GAAA5vB,EAAAiB,GAAA,KAAAf,EAAA,WACH8B,aACAvoG,KAAA,OACAwoG,QAAA,SACAtgH,OAAAq+G,EAAA6vB,WAAArqF,MAAA5lD,OACAohH,WAAA,6BAEAZ,YAAA,aACG,MACFc","file":"industries/js/1.20ac980265e14878ec75.js","sourcesContent":["webpackJsonp([1],Array(591).concat([\n/* 591 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(955)\n\nvar Component = __webpack_require__(6)(\n  /* script */\n  __webpack_require__(880),\n  /* template */\n  __webpack_require__(1047),\n  /* scopeId */\n  \"data-v-5314579c\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 592 */,\n/* 593 */,\n/* 594 */,\n/* 595 */,\n/* 596 */,\n/* 597 */,\n/* 598 */,\n/* 599 */,\n/* 600 */,\n/* 601 */,\n/* 602 */,\n/* 603 */,\n/* 604 */,\n/* 605 */,\n/* 606 */\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/core/util\n */\n\n\n    // 用于处理merge时无法遍历Date等对象的问题\n    var BUILTIN_OBJECT = {\n        '[object Function]': 1,\n        '[object RegExp]': 1,\n        '[object Date]': 1,\n        '[object Error]': 1,\n        '[object CanvasGradient]': 1,\n        '[object CanvasPattern]': 1,\n        // For node-canvas\n        '[object Image]': 1,\n        '[object Canvas]': 1\n    };\n\n    var TYPED_ARRAY = {\n        '[object Int8Array]': 1,\n        '[object Uint8Array]': 1,\n        '[object Uint8ClampedArray]': 1,\n        '[object Int16Array]': 1,\n        '[object Uint16Array]': 1,\n        '[object Int32Array]': 1,\n        '[object Uint32Array]': 1,\n        '[object Float32Array]': 1,\n        '[object Float64Array]': 1\n    };\n\n    var objToString = Object.prototype.toString;\n\n    var arrayProto = Array.prototype;\n    var nativeForEach = arrayProto.forEach;\n    var nativeFilter = arrayProto.filter;\n    var nativeSlice = arrayProto.slice;\n    var nativeMap = arrayProto.map;\n    var nativeReduce = arrayProto.reduce;\n\n    /**\n     * Those data types can be cloned:\n     *     Plain object, Array, TypedArray, number, string, null, undefined.\n     * Those data types will be assgined using the orginal data:\n     *     BUILTIN_OBJECT\n     * Instance of user defined class will be cloned to a plain object, without\n     * properties in prototype.\n     * Other data types is not supported (not sure what will happen).\n     *\n     * Caution: do not support clone Date, for performance consideration.\n     * (There might be a large number of date in `series.data`).\n     * So date should not be modified in and out of echarts.\n     *\n     * @param {*} source\n     * @return {*} new\n     */\n    function clone(source) {\n        if (source == null || typeof source != 'object') {\n            return source;\n        }\n\n        var result = source;\n        var typeStr = objToString.call(source);\n\n        if (typeStr === '[object Array]') {\n            result = [];\n            for (var i = 0, len = source.length; i < len; i++) {\n                result[i] = clone(source[i]);\n            }\n        }\n        else if (TYPED_ARRAY[typeStr]) {\n            var Ctor = source.constructor;\n            if (source.constructor.from) {\n                result = Ctor.from(source);\n            }\n            else {\n                result = new Ctor(source.length);\n                for (var i = 0, len = source.length; i < len; i++) {\n                    result[i] = clone(source[i]);\n                }\n            }\n        }\n        else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n            result = {};\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    result[key] = clone(source[key]);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overwrite=false]\n     */\n    function merge(target, source, overwrite) {\n        // We should escapse that source is string\n        // and enter for ... in ...\n        if (!isObject(source) || !isObject(target)) {\n            return overwrite ? clone(source) : target;\n        }\n\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                var targetProp = target[key];\n                var sourceProp = source[key];\n\n                if (isObject(sourceProp)\n                    && isObject(targetProp)\n                    && !isArray(sourceProp)\n                    && !isArray(targetProp)\n                    && !isDom(sourceProp)\n                    && !isDom(targetProp)\n                    && !isBuiltInObject(sourceProp)\n                    && !isBuiltInObject(targetProp)\n                    && !isPrimitive(sourceProp)\n                    && !isPrimitive(targetProp)\n                ) {\n                    // 如果需要递归覆盖，就递归调用merge\n                    merge(targetProp, sourceProp, overwrite);\n                }\n                else if (overwrite || !(key in target)) {\n                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n                    // NOTE，在 target[key] 不存在的时候也是直接覆盖\n                    target[key] = clone(source[key], true);\n                }\n            }\n        }\n\n        return target;\n    }\n\n    /**\n     * @param {Array} targetAndSources The first item is target, and the rests are source.\n     * @param {boolean} [overwrite=false]\n     * @return {*} target\n     */\n    function mergeAll(targetAndSources, overwrite) {\n        var result = targetAndSources[0];\n        for (var i = 1, len = targetAndSources.length; i < len; i++) {\n            result = merge(result, targetAndSources[i], overwrite);\n        }\n        return result;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @memberOf module:zrender/core/util\n     */\n    function extend(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overlay=false]\n     * @memberOf module:zrender/core/util\n     */\n    function defaults(target, source, overlay) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)\n                && (overlay ? source[key] != null : target[key] == null)\n            ) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    function createCanvas() {\n        return document.createElement('canvas');\n    }\n    // FIXME\n    var _ctx;\n    function getContext() {\n        if (!_ctx) {\n            // Use util.createCanvas instead of createCanvas\n            // because createCanvas may be overwritten in different environment\n            _ctx = util.createCanvas().getContext('2d');\n        }\n        return _ctx;\n    }\n\n    /**\n     * 查询数组中元素的index\n     * @memberOf module:zrender/core/util\n     */\n    function indexOf(array, value) {\n        if (array) {\n            if (array.indexOf) {\n                return array.indexOf(value);\n            }\n            for (var i = 0, len = array.length; i < len; i++) {\n                if (array[i] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * 构造类继承关系\n     *\n     * @memberOf module:zrender/core/util\n     * @param {Function} clazz 源类\n     * @param {Function} baseClazz 基类\n     */\n    function inherits(clazz, baseClazz) {\n        var clazzPrototype = clazz.prototype;\n        function F() {}\n        F.prototype = baseClazz.prototype;\n        clazz.prototype = new F();\n\n        for (var prop in clazzPrototype) {\n            clazz.prototype[prop] = clazzPrototype[prop];\n        }\n        clazz.prototype.constructor = clazz;\n        clazz.superClass = baseClazz;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Object|Function} target\n     * @param {Object|Function} sorce\n     * @param {boolean} overlay\n     */\n    function mixin(target, source, overlay) {\n        target = 'prototype' in target ? target.prototype : target;\n        source = 'prototype' in source ? source.prototype : source;\n\n        defaults(target, source, overlay);\n    }\n\n    /**\n     * Consider typed array.\n     * @param {Array|TypedArray} data\n     */\n    function isArrayLike(data) {\n        if (! data) {\n            return;\n        }\n        if (typeof data == 'string') {\n            return false;\n        }\n        return typeof data.length == 'number';\n    }\n\n    /**\n     * 数组或对象遍历\n     * @memberOf module:zrender/core/util\n     * @param {Object|Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     */\n    function each(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.forEach && obj.forEach === nativeForEach) {\n            obj.forEach(cb, context);\n        }\n        else if (obj.length === +obj.length) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                cb.call(context, obj[i], i, obj);\n            }\n        }\n        else {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    cb.call(context, obj[key], key, obj);\n                }\n            }\n        }\n    }\n\n    /**\n     * 数组映射\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function map(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.map && obj.map === nativeMap) {\n            return obj.map(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                result.push(cb.call(context, obj[i], i, obj));\n            }\n            return result;\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {Object} [memo]\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function reduce(obj, cb, memo, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.reduce && obj.reduce === nativeReduce) {\n            return obj.reduce(cb, memo, context);\n        }\n        else {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                memo = cb.call(context, memo, obj[i], i, obj);\n            }\n            return memo;\n        }\n    }\n\n    /**\n     * 数组过滤\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function filter(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.filter && obj.filter === nativeFilter) {\n            return obj.filter(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                if (cb.call(context, obj[i], i, obj)) {\n                    result.push(obj[i]);\n                }\n            }\n            return result;\n        }\n    }\n\n    /**\n     * 数组项查找\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function find(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        for (var i = 0, len = obj.length; i < len; i++) {\n            if (cb.call(context, obj[i], i, obj)) {\n                return obj[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @param {*} context\n     * @return {Function}\n     */\n    function bind(func, context) {\n        var args = nativeSlice.call(arguments, 2);\n        return function () {\n            return func.apply(context, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @return {Function}\n     */\n    function curry(func) {\n        var args = nativeSlice.call(arguments, 1);\n        return function () {\n            return func.apply(this, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isArray(value) {\n        return objToString.call(value) === '[object Array]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isString(value) {\n        return objToString.call(value) === '[object String]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isObject(value) {\n        // Avoid a V8 JIT bug in Chrome 19-20.\n        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n        var type = typeof value;\n        return type === 'function' || (!!value && type == 'object');\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isBuiltInObject(value) {\n        return !!BUILTIN_OBJECT[objToString.call(value)];\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isDom(value) {\n        return typeof value === 'object'\n            && typeof value.nodeType === 'number'\n            && typeof value.ownerDocument === 'object';\n    }\n\n    /**\n     * Whether is exactly NaN. Notice isNaN('a') returns true.\n     * @param {*} value\n     * @return {boolean}\n     */\n    function eqNaN(value) {\n        return value !== value;\n    }\n\n    /**\n     * If value1 is not null, then return value1, otherwise judget rest of values.\n     * Low performance.\n     * @memberOf module:zrender/core/util\n     * @return {*} Final value\n     */\n    function retrieve(values) {\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            if (arguments[i] != null) {\n                return arguments[i];\n            }\n        }\n    }\n\n    function retrieve2(value0, value1) {\n        return value0 != null\n            ? value0\n            : value1;\n    }\n\n    function retrieve3(value0, value1, value2) {\n        return value0 != null\n            ? value0\n            : value1 != null\n            ? value1\n            : value2;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} arr\n     * @param {number} startIndex\n     * @param {number} endIndex\n     * @return {Array}\n     */\n    function slice() {\n        return Function.call.apply(nativeSlice, arguments);\n    }\n\n    /**\n     * Normalize css liked array configuration\n     * e.g.\n     *  3 => [3, 3, 3, 3]\n     *  [4, 2] => [4, 2, 4, 2]\n     *  [4, 3, 2] => [4, 3, 2, 3]\n     * @param {number|Array.<number>} val\n     * @return {Array.<number>}\n     */\n    function normalizeCssArray(val) {\n        if (typeof (val) === 'number') {\n            return [val, val, val, val];\n        }\n        var len = val.length;\n        if (len === 2) {\n            // vertical | horizontal\n            return [val[0], val[1], val[0], val[1]];\n        }\n        else if (len === 3) {\n            // top | horizontal | bottom\n            return [val[0], val[1], val[2], val[1]];\n        }\n        return val;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {boolean} condition\n     * @param {string} message\n     */\n    function assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n\n    var primitiveKey = '__ec_primitive__';\n    /**\n     * Set an object as primitive to be ignored traversing children in clone or merge\n     */\n    function setAsPrimitive(obj) {\n        obj[primitiveKey] = true;\n    }\n\n    function isPrimitive(obj) {\n        return obj[primitiveKey];\n    }\n\n    /**\n     * @constructor\n     * @param {Object} obj Only apply `ownProperty`.\n     */\n    function HashMap(obj) {\n        obj && each(obj, function (value, key) {\n            this.set(key, value);\n        }, this);\n    }\n\n    // Add prefix to avoid conflict with Object.prototype.\n    var HASH_MAP_PREFIX = '_ec_';\n    var HASH_MAP_PREFIX_LENGTH = 4;\n\n    HashMap.prototype = {\n        constructor: HashMap,\n        // Do not provide `has` method to avoid defining what is `has`.\n        // (We usually treat `null` and `undefined` as the same, different\n        // from ES6 Map).\n        get: function (key) {\n            return this[HASH_MAP_PREFIX + key];\n        },\n        set: function (key, value) {\n            this[HASH_MAP_PREFIX + key] = value;\n            // Comparing with invocation chaining, `return value` is more commonly\n            // used in this case: `var someVal = map.set('a', genVal());`\n            return value;\n        },\n        // Although util.each can be performed on this hashMap directly, user\n        // should not use the exposed keys, who are prefixed.\n        each: function (cb, context) {\n            context !== void 0 && (cb = bind(cb, context));\n            for (var prefixedKey in this) {\n                this.hasOwnProperty(prefixedKey)\n                    && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n            }\n        },\n        // Do not use this method if performance sensitive.\n        removeKey: function (key) {\n            delete this[key];\n        }\n    };\n\n    function createHashMap(obj) {\n        return new HashMap(obj);\n    }\n\n    var util = {\n        inherits: inherits,\n        mixin: mixin,\n        clone: clone,\n        merge: merge,\n        mergeAll: mergeAll,\n        extend: extend,\n        defaults: defaults,\n        getContext: getContext,\n        createCanvas: createCanvas,\n        indexOf: indexOf,\n        slice: slice,\n        find: find,\n        isArrayLike: isArrayLike,\n        each: each,\n        map: map,\n        reduce: reduce,\n        filter: filter,\n        bind: bind,\n        curry: curry,\n        isArray: isArray,\n        isString: isString,\n        isObject: isObject,\n        isFunction: isFunction,\n        isBuiltInObject: isBuiltInObject,\n        isDom: isDom,\n        eqNaN: eqNaN,\n        retrieve: retrieve,\n        retrieve2: retrieve2,\n        retrieve3: retrieve3,\n        assert: assert,\n        setAsPrimitive: setAsPrimitive,\n        createHashMap: createHashMap,\n        normalizeCssArray: normalizeCssArray,\n        noop: function () {}\n    };\n    module.exports = util;\n\n\n\n/***/ }),\n/* 607 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {// Enable DEV mode when using source code without build. which has no __DEV__ variable\n// In build process 'typeof __DEV__' will be replace with 'boolean'\n// So this code will be removed or disabled anyway after built.\nif (typeof __DEV__ === 'undefined') {\n    // In browser\n    if (typeof window !== 'undefined') {\n        window.__DEV__ = true;\n    }\n    // In node\n    else if (typeof global !== 'undefined') {\n        global.__DEV__ = true;\n    }\n}\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\n\n/**\n * @module echarts\n */\n\n\n    var env = __webpack_require__(615);\n\n    var GlobalModel = __webpack_require__(743);\n    var ExtensionAPI = __webpack_require__(708);\n    var CoordinateSystemManager = __webpack_require__(636);\n    var OptionManager = __webpack_require__(744);\n\n    var ComponentModel = __webpack_require__(618);\n    var SeriesModel = __webpack_require__(640);\n\n    var ComponentView = __webpack_require__(757);\n    var ChartView = __webpack_require__(641);\n    var graphic = __webpack_require__(608);\n    var modelUtil = __webpack_require__(609);\n    var throttle = __webpack_require__(666);\n\n    var zrender = __webpack_require__(802);\n    var zrUtil = __webpack_require__(606);\n    var colorTool = __webpack_require__(627);\n    var Eventful = __webpack_require__(626);\n    var timsort = __webpack_require__(643);\n\n    var each = zrUtil.each;\n    var parseClassType = ComponentModel.parseClassType;\n\n    var PRIORITY_PROCESSOR_FILTER = 1000;\n    var PRIORITY_PROCESSOR_STATISTIC = 5000;\n\n\n    var PRIORITY_VISUAL_LAYOUT = 1000;\n    var PRIORITY_VISUAL_GLOBAL = 2000;\n    var PRIORITY_VISUAL_CHART = 3000;\n    var PRIORITY_VISUAL_COMPONENT = 4000;\n    // FIXME\n    // necessary?\n    var PRIORITY_VISUAL_BRUSH = 5000;\n\n    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n    // where they must not be invoked nestedly, except the only case: invoke\n    // dispatchAction with updateMethod \"none\" in main process.\n    // This flag is used to carry out this rule.\n    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n    var IN_MAIN_PROCESS = '__flagInMainProcess';\n    var HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\n    var OPTION_UPDATED = '__optionUpdated';\n    var ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\n    function createRegisterEventWithLowercaseName(method) {\n        return function (eventName, handler, context) {\n            // Event name is all lowercase\n            eventName = eventName && eventName.toLowerCase();\n            Eventful.prototype[method].call(this, eventName, handler, context);\n        };\n    }\n\n    /**\n     * @module echarts~MessageCenter\n     */\n    function MessageCenter() {\n        Eventful.call(this);\n    }\n    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\n    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\n    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\n    zrUtil.mixin(MessageCenter, Eventful);\n\n    /**\n     * @module echarts~ECharts\n     */\n    function ECharts(dom, theme, opts) {\n        opts = opts || {};\n\n        // Get theme by name\n        if (typeof theme === 'string') {\n            theme = themeStorage[theme];\n        }\n\n        /**\n         * @type {string}\n         */\n        this.id;\n        /**\n         * Group id\n         * @type {string}\n         */\n        this.group;\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        this._dom = dom;\n        /**\n         * @type {module:zrender/ZRender}\n         * @private\n         */\n        var zr = this._zr = zrender.init(dom, {\n            renderer: opts.renderer || 'canvas',\n            devicePixelRatio: opts.devicePixelRatio,\n            width: opts.width,\n            height: opts.height\n        });\n\n        /**\n         * Expect 60 pfs.\n         * @type {Function}\n         * @private\n         */\n        this._throttledZrFlush = throttle.throttle(zrUtil.bind(zr.flush, zr), 17);\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._theme = zrUtil.clone(theme);\n\n        /**\n         * @type {Array.<module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * @type {module:echarts/CoordinateSystem}\n         * @private\n         */\n        this._coordSysMgr = new CoordinateSystemManager();\n\n        /**\n         * @type {module:echarts/ExtensionAPI}\n         * @private\n         */\n        this._api = createExtensionAPI(this);\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:echarts~MessageCenter}\n         * @private\n         */\n        this._messageCenter = new MessageCenter();\n\n        // Init mouse events\n        this._initEvents();\n\n        // In case some people write `window.onresize = chart.resize`\n        this.resize = zrUtil.bind(this.resize, this);\n\n        // Can't dispatch action during rendering procedure\n        this._pendingActions = [];\n        // Sort on demand\n        function prioritySortFunc(a, b) {\n            return a.prio - b.prio;\n        }\n        timsort(visualFuncs, prioritySortFunc);\n        timsort(dataProcessorFuncs, prioritySortFunc);\n\n        zr.animation.on('frame', this._onframe, this);\n\n        // ECharts instance can be used as value.\n        zrUtil.setAsPrimitive(this);\n    }\n\n    var echartsProto = ECharts.prototype;\n\n    echartsProto._onframe = function () {\n        // Lazy update\n        if (this[OPTION_UPDATED]) {\n            var silent = this[OPTION_UPDATED].silent;\n\n            this[IN_MAIN_PROCESS] = true;\n\n            updateMethods.prepareAndUpdate.call(this);\n\n            this[IN_MAIN_PROCESS] = false;\n\n            this[OPTION_UPDATED] = false;\n\n            flushPendingActions.call(this, silent);\n\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n    /**\n     * @return {HTMLElement}\n     */\n    echartsProto.getDom = function () {\n        return this._dom;\n    };\n\n    /**\n     * @return {module:zrender~ZRender}\n     */\n    echartsProto.getZr = function () {\n        return this._zr;\n    };\n\n    /**\n     * Usage:\n     * chart.setOption(option, notMerge, lazyUpdate);\n     * chart.setOption(option, {\n     *     notMerge: ...,\n     *     lazyUpdate: ...,\n     *     silent: ...\n     * });\n     *\n     * @param {Object} option\n     * @param {Object|boolean} [opts] opts or notMerge.\n     * @param {boolean} [opts.notMerge=false]\n     * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n     */\n    echartsProto.setOption = function (option, notMerge, lazyUpdate) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\n        }\n\n        var silent;\n        if (zrUtil.isObject(notMerge)) {\n            lazyUpdate = notMerge.lazyUpdate;\n            silent = notMerge.silent;\n            notMerge = notMerge.notMerge;\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        if (!this._model || notMerge) {\n            var optionManager = new OptionManager(this._api);\n            var theme = this._theme;\n            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n            ecModel.init(null, null, theme, optionManager);\n        }\n\n        this._model.setOption(option, optionPreprocessorFuncs);\n\n        if (lazyUpdate) {\n            this[OPTION_UPDATED] = {silent: silent};\n            this[IN_MAIN_PROCESS] = false;\n        }\n        else {\n            updateMethods.prepareAndUpdate.call(this);\n            // Ensure zr refresh sychronously, and then pixel in canvas can be\n            // fetched after `setOption`.\n            this._zr.flush();\n\n            this[OPTION_UPDATED] = false;\n            this[IN_MAIN_PROCESS] = false;\n\n            flushPendingActions.call(this, silent);\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n\n    /**\n     * @DEPRECATED\n     */\n    echartsProto.setTheme = function () {\n        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n    };\n\n    /**\n     * @return {module:echarts/model/Global}\n     */\n    echartsProto.getModel = function () {\n        return this._model;\n    };\n\n    /**\n     * @return {Object}\n     */\n    echartsProto.getOption = function () {\n        return this._model && this._model.getOption();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getWidth = function () {\n        return this._zr.getWidth();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getHeight = function () {\n        return this._zr.getHeight();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getDevicePixelRatio = function () {\n        return this._zr.painter.dpr || window.devicePixelRatio || 1;\n    };\n\n    /**\n     * Get canvas which has all thing rendered\n     * @param {Object} opts\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getRenderedCanvas = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        opts = opts || {};\n        opts.pixelRatio = opts.pixelRatio || 1;\n        opts.backgroundColor = opts.backgroundColor\n            || this._model.get('backgroundColor');\n        var zr = this._zr;\n        var list = zr.storage.getDisplayList();\n        // Stop animations\n        zrUtil.each(list, function (el) {\n            el.stopAnimation(true);\n        });\n        return zr.painter.getRenderedCanvas(opts);\n    };\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     * @param {string} [opts.excludeComponents]\n     */\n    echartsProto.getDataURL = function (opts) {\n        opts = opts || {};\n        var excludeComponents = opts.excludeComponents;\n        var ecModel = this._model;\n        var excludesComponentViews = [];\n        var self = this;\n\n        each(excludeComponents, function (componentType) {\n            ecModel.eachComponent({\n                mainType: componentType\n            }, function (component) {\n                var view = self._componentsMap[component.__viewId];\n                if (!view.group.ignore) {\n                    excludesComponentViews.push(view);\n                    view.group.ignore = true;\n                }\n            });\n        });\n\n        var url = this.getRenderedCanvas(opts).toDataURL(\n            'image/' + (opts && opts.type || 'png')\n        );\n\n        each(excludesComponentViews, function (view) {\n            view.group.ignore = false;\n        });\n        return url;\n    };\n\n\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getConnectedDataURL = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        var groupId = this.group;\n        var mathMin = Math.min;\n        var mathMax = Math.max;\n        var MAX_NUMBER = Infinity;\n        if (connectedGroups[groupId]) {\n            var left = MAX_NUMBER;\n            var top = MAX_NUMBER;\n            var right = -MAX_NUMBER;\n            var bottom = -MAX_NUMBER;\n            var canvasList = [];\n            var dpr = (opts && opts.pixelRatio) || 1;\n\n            zrUtil.each(instances, function (chart, id) {\n                if (chart.group === groupId) {\n                    var canvas = chart.getRenderedCanvas(\n                        zrUtil.clone(opts)\n                    );\n                    var boundingRect = chart.getDom().getBoundingClientRect();\n                    left = mathMin(boundingRect.left, left);\n                    top = mathMin(boundingRect.top, top);\n                    right = mathMax(boundingRect.right, right);\n                    bottom = mathMax(boundingRect.bottom, bottom);\n                    canvasList.push({\n                        dom: canvas,\n                        left: boundingRect.left,\n                        top: boundingRect.top\n                    });\n                }\n            });\n\n            left *= dpr;\n            top *= dpr;\n            right *= dpr;\n            bottom *= dpr;\n            var width = right - left;\n            var height = bottom - top;\n            var targetCanvas = zrUtil.createCanvas();\n            targetCanvas.width = width;\n            targetCanvas.height = height;\n            var zr = zrender.init(targetCanvas);\n\n            each(canvasList, function (item) {\n                var img = new graphic.Image({\n                    style: {\n                        x: item.left * dpr - left,\n                        y: item.top * dpr - top,\n                        image: item.dom\n                    }\n                });\n                zr.add(img);\n            });\n            zr.refreshImmediately();\n\n            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n        }\n        else {\n            return this.getDataURL(opts);\n        }\n    };\n\n    /**\n     * Convert from logical coordinate system to pixel coordinate system.\n     * See CoordinateSystem#convertToPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId, geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n\n    /**\n     * Convert from pixel coordinate system to logical coordinate system.\n     * See CoordinateSystem#convertFromPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\n    function doConvertPixel(methodName, finder, value) {\n        var ecModel = this._model;\n        var coordSysList = this._coordSysMgr.getCoordinateSystems();\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        for (var i = 0; i < coordSysList.length; i++) {\n            var coordSys = coordSysList[i];\n            if (coordSys[methodName]\n                && (result = coordSys[methodName](ecModel, finder, value)) != null\n            ) {\n                return result;\n            }\n        }\n\n        if (__DEV__) {\n            console.warn(\n                'No coordinate system that supports ' + methodName + ' found by the given finder.'\n            );\n        }\n    }\n\n    /**\n     * Is the specified coordinate systems or components contain the given pixel point.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {boolean} result\n     */\n    echartsProto.containPixel = function (finder, value) {\n        var ecModel = this._model;\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        zrUtil.each(finder, function (models, key) {\n            key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n                var coordSys = model.coordinateSystem;\n                if (coordSys && coordSys.containPoint) {\n                    result |= !!coordSys.containPoint(value);\n                }\n                else if (key === 'seriesModels') {\n                    var view = this._chartsMap[model.__viewId];\n                    if (view && view.containPoint) {\n                        result |= view.containPoint(value, model);\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.warn(key + ': ' + (view\n                                ? 'The found component do not support containPoint.'\n                                : 'No view mapping to the found component.'\n                            ));\n                        }\n                    }\n                }\n                else {\n                    if (__DEV__) {\n                        console.warn(key + ': containPoint is not supported');\n                    }\n                }\n            }, this);\n        }, this);\n\n        return !!result;\n    };\n\n    /**\n     * Get visual from series or data.\n     * @param {string|Object} finder\n     *        If string, e.g., 'series', means {seriesIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            dataIndex / dataIndexInside\n     *        }\n     *        If dataIndex is not specified, series visual will be fetched,\n     *        but not data item visual.\n     *        If all of seriesIndex, seriesId, seriesName are not specified,\n     *        visual will be fetched from first series.\n     * @param {string} visualType 'color', 'symbol', 'symbolSize'\n     */\n    echartsProto.getVisual = function (finder, visualType) {\n        var ecModel = this._model;\n\n        finder = modelUtil.parseFinder(ecModel, finder, {defaultMainType: 'series'});\n\n        var seriesModel = finder.seriesModel;\n\n        if (__DEV__) {\n            if (!seriesModel) {\n                console.warn('There is no specified seires model');\n            }\n        }\n\n        var data = seriesModel.getData();\n\n        var dataIndexInside = finder.hasOwnProperty('dataIndexInside')\n            ? finder.dataIndexInside\n            : finder.hasOwnProperty('dataIndex')\n            ? data.indexOfRawIndex(finder.dataIndex)\n            : null;\n\n        return dataIndexInside != null\n            ? data.getItemVisual(dataIndexInside, visualType)\n            : data.getVisual(visualType);\n    };\n\n    /**\n     * Get view of corresponding component model\n     * @param  {module:echarts/model/Component} componentModel\n     * @return {module:echarts/view/Component}\n     */\n    echartsProto.getViewOfComponentModel = function (componentModel) {\n        return this._componentsMap[componentModel.__viewId];\n    };\n\n    /**\n     * Get view of corresponding series model\n     * @param  {module:echarts/model/Series} seriesModel\n     * @return {module:echarts/view/Chart}\n     */\n    echartsProto.getViewOfSeriesModel = function (seriesModel) {\n        return this._chartsMap[seriesModel.__viewId];\n    };\n\n\n    var updateMethods = {\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        update: function (payload) {\n            // console.profile && console.profile('update');\n\n            var ecModel = this._model;\n            var api = this._api;\n            var coordSysMgr = this._coordSysMgr;\n            var zr = this._zr;\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            // Fixme First time update ?\n            ecModel.restoreData();\n\n            // TODO\n            // Save total ecModel here for undo/redo (after restoring data and before processing data).\n            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n\n            // Create new coordinate system each update\n            // In LineView may save the old coordinate system and use it to get the orignal point\n            coordSysMgr.create(this._model, this._api);\n\n            processData.call(this, ecModel, api);\n\n            stackSeriesData.call(this, ecModel);\n\n            coordSysMgr.update(ecModel, api);\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            doRender.call(this, ecModel, payload);\n\n            // Set background\n            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n\n            var painter = zr.painter;\n            // TODO all use clearColor ?\n            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n                zr.configLayer(0, {\n                    clearColor: backgroundColor\n                });\n            }\n            else {\n                // In IE8\n                if (!env.canvasSupported) {\n                    var colorArr = colorTool.parse(backgroundColor);\n                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\n                    if (colorArr[3] === 0) {\n                        backgroundColor = 'transparent';\n                    }\n                }\n                if (backgroundColor.colorStops || backgroundColor.image) {\n                    // Gradient background\n                    // FIXME Fixed layer？\n                    zr.configLayer(0, {\n                        clearColor: backgroundColor\n                    });\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n\n                    this._dom.style.background = 'transparent';\n                }\n                else {\n                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n                        zr.configLayer(0, {\n                            clearColor: null\n                        });\n                    }\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n\n                    this._dom.style.background = backgroundColor;\n                }\n            }\n\n            each(postUpdateFuncs, function (func) {\n                func(ecModel, api);\n            });\n\n            // console.profile && console.profileEnd('update');\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateView: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateVisual: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload, true);\n\n            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateLayout: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            doLayout.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        prepareAndUpdate: function (payload) {\n            var ecModel = this._model;\n\n            prepareView.call(this, 'component', ecModel);\n\n            prepareView.call(this, 'chart', ecModel);\n\n            updateMethods.update.call(this, payload);\n        }\n    };\n\n    /**\n     * @private\n     */\n    function updateDirectly(ecIns, method, payload, mainType, subType) {\n        var ecModel = ecIns._model;\n\n        // broadcast\n        if (!mainType) {\n            each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n            return;\n        }\n\n        var query = {};\n        query[mainType + 'Id'] = payload[mainType + 'Id'];\n        query[mainType + 'Index'] = payload[mainType + 'Index'];\n        query[mainType + 'Name'] = payload[mainType + 'Name'];\n\n        var condition = {mainType: mainType, query: query};\n        subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n        // If dispatchAction before setOption, do nothing.\n        ecModel && ecModel.eachComponent(condition, function (model, index) {\n            callView(ecIns[\n                mainType === 'series' ? '_chartsMap' : '_componentsMap'\n            ][model.__viewId]);\n        }, ecIns);\n\n        function callView(view) {\n            view && view.__alive && view[method] && view[method](\n                view.__model, ecModel, ecIns._api, payload\n            );\n        }\n    }\n\n    /**\n     * Resize the chart\n     * @param {Object} opts\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @param {boolean} [opts.silent=false]\n     */\n    echartsProto.resize = function (opts) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        this._zr.resize(opts);\n\n        var optionChanged = this._model && this._model.resetOption('media');\n        var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n\n        updateMethods[updateMethod].call(this);\n\n        // Resize loading effect\n        this._loadingFX && this._loadingFX.resize();\n\n        this[IN_MAIN_PROCESS] = false;\n\n        var silent = opts && opts.silent;\n\n        flushPendingActions.call(this, silent);\n\n        triggerUpdatedEvent.call(this, silent);\n    };\n\n    /**\n     * Show loading effect\n     * @param  {string} [name='default']\n     * @param  {Object} [cfg]\n     */\n    echartsProto.showLoading = function (name, cfg) {\n        if (zrUtil.isObject(name)) {\n            cfg = name;\n            name = '';\n        }\n        name = name || 'default';\n\n        this.hideLoading();\n        if (!loadingEffects[name]) {\n            if (__DEV__) {\n                console.warn('Loading effects ' + name + ' not exists.');\n            }\n            return;\n        }\n        var el = loadingEffects[name](this._api, cfg);\n        var zr = this._zr;\n        this._loadingFX = el;\n\n        zr.add(el);\n    };\n\n    /**\n     * Hide loading effect\n     */\n    echartsProto.hideLoading = function () {\n        this._loadingFX && this._zr.remove(this._loadingFX);\n        this._loadingFX = null;\n    };\n\n    /**\n     * @param {Object} eventObj\n     * @return {Object}\n     */\n    echartsProto.makeActionFromEvent = function (eventObj) {\n        var payload = zrUtil.extend({}, eventObj);\n        payload.type = eventActionMap[eventObj.type];\n        return payload;\n    };\n\n    /**\n     * @pubilc\n     * @param {Object} payload\n     * @param {string} [payload.type] Action type\n     * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n     * @param {boolean} [opt.silent=false] Whether trigger events.\n     * @param {boolean} [opt.flush=undefined]\n     *                  true: Flush immediately, and then pixel in canvas can be fetched\n     *                      immediately. Caution: it might affect performance.\n     *                  false: Not not flush.\n     *                  undefined: Auto decide whether perform flush.\n     */\n    echartsProto.dispatchAction = function (payload, opt) {\n        if (!zrUtil.isObject(opt)) {\n            opt = {silent: !!opt};\n        }\n\n        if (!actions[payload.type]) {\n            return;\n        }\n\n        // Avoid dispatch action before setOption. Especially in `connect`.\n        if (!this._model) {\n            return;\n        }\n\n        // May dispatchAction in rendering procedure\n        if (this[IN_MAIN_PROCESS]) {\n            this._pendingActions.push(payload);\n            return;\n        }\n\n        doDispatchAction.call(this, payload, opt.silent);\n\n        if (opt.flush) {\n            this._zr.flush(true);\n        }\n        else if (opt.flush !== false && env.browser.weChat) {\n            // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n            // hang when sliding page (on touch event), which cause that zr does not\n            // refresh util user interaction finished, which is not expected.\n            // But `dispatchAction` may be called too frequently when pan on touch\n            // screen, which impacts performance if do not throttle them.\n            this._throttledZrFlush();\n        }\n\n        flushPendingActions.call(this, opt.silent);\n\n        triggerUpdatedEvent.call(this, opt.silent);\n    };\n\n    function doDispatchAction(payload, silent) {\n        var payloadType = payload.type;\n        var escapeConnect = payload.escapeConnect;\n        var actionWrap = actions[payloadType];\n        var actionInfo = actionWrap.actionInfo;\n\n        var cptType = (actionInfo.update || 'update').split(':');\n        var updateMethod = cptType.pop();\n        cptType = cptType[0] != null && parseClassType(cptType[0]);\n\n        this[IN_MAIN_PROCESS] = true;\n\n        var payloads = [payload];\n        var batched = false;\n        // Batch action\n        if (payload.batch) {\n            batched = true;\n            payloads = zrUtil.map(payload.batch, function (item) {\n                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n                item.batch = null;\n                return item;\n            });\n        }\n\n        var eventObjBatch = [];\n        var eventObj;\n        var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n\n        each(payloads, function (batchItem) {\n            // Action can specify the event by return it.\n            eventObj = actionWrap.action(batchItem, this._model, this._api);\n            // Emit event outside\n            eventObj = eventObj || zrUtil.extend({}, batchItem);\n            // Convert type to eventType\n            eventObj.type = actionInfo.event || eventObj.type;\n            eventObjBatch.push(eventObj);\n\n            // light update does not perform data process, layout and visual.\n            if (isHighDown) {\n                // method, payload, mainType, subType\n                updateDirectly(this, updateMethod, batchItem, 'series');\n            }\n            else if (cptType) {\n                updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n            }\n        }, this);\n\n        if (updateMethod !== 'none' && !isHighDown && !cptType) {\n            // Still dirty\n            if (this[OPTION_UPDATED]) {\n                // FIXME Pass payload ?\n                updateMethods.prepareAndUpdate.call(this, payload);\n                this[OPTION_UPDATED] = false;\n            }\n            else {\n                updateMethods[updateMethod].call(this, payload);\n            }\n        }\n\n        // Follow the rule of action batch\n        if (batched) {\n            eventObj = {\n                type: actionInfo.event || payloadType,\n                escapeConnect: escapeConnect,\n                batch: eventObjBatch\n            };\n        }\n        else {\n            eventObj = eventObjBatch[0];\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n    }\n\n    function flushPendingActions(silent) {\n        var pendingActions = this._pendingActions;\n        while (pendingActions.length) {\n            var payload = pendingActions.shift();\n            doDispatchAction.call(this, payload, silent);\n        }\n    }\n\n    function triggerUpdatedEvent(silent) {\n        !silent && this.trigger('updated');\n    }\n\n    /**\n     * Register event\n     * @method\n     */\n    echartsProto.on = createRegisterEventWithLowercaseName('on');\n    echartsProto.off = createRegisterEventWithLowercaseName('off');\n    echartsProto.one = createRegisterEventWithLowercaseName('one');\n\n    /**\n     * @param {string} methodName\n     * @private\n     */\n    function invokeUpdateMethod(methodName, ecModel, payload) {\n        var api = this._api;\n\n        // Update all components\n        each(this._componentsViews, function (component) {\n            var componentModel = component.__model;\n            component[methodName](componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, component);\n        }, this);\n\n        // Upate all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chart = this._chartsMap[seriesModel.__viewId];\n            chart[methodName](seriesModel, ecModel, api, payload);\n\n            updateZ(seriesModel, chart);\n\n            updateProgressiveAndBlend(seriesModel, chart);\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Post render\n        each(postUpdateFuncs, function (func) {\n            func(ecModel, api);\n        });\n    }\n\n    /**\n     * Prepare view instances of charts and components\n     * @param  {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function prepareView(type, ecModel) {\n        var isComponent = type === 'component';\n        var viewList = isComponent ? this._componentsViews : this._chartsViews;\n        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n        var zr = this._zr;\n\n        for (var i = 0; i < viewList.length; i++) {\n            viewList[i].__alive = false;\n        }\n\n        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n            if (isComponent) {\n                if (componentType === 'series') {\n                    return;\n                }\n            }\n            else {\n                model = componentType;\n            }\n\n            // Consider: id same and type changed.\n            var viewId = '_ec_' + model.id + '_' + model.type;\n            var view = viewMap[viewId];\n            if (!view) {\n                var classType = parseClassType(model.type);\n                var Clazz = isComponent\n                    ? ComponentView.getClass(classType.main, classType.sub)\n                    : ChartView.getClass(classType.sub);\n                if (Clazz) {\n                    view = new Clazz();\n                    view.init(ecModel, this._api);\n                    viewMap[viewId] = view;\n                    viewList.push(view);\n                    zr.add(view.group);\n                }\n                else {\n                    // Error\n                    return;\n                }\n            }\n\n            model.__viewId = view.__id = viewId;\n            view.__alive = true;\n            view.__model = model;\n            view.group.__ecComponentInfo = {\n                mainType: model.mainType,\n                index: model.componentIndex\n            };\n        }, this);\n\n        for (var i = 0; i < viewList.length;) {\n            var view = viewList[i];\n            if (!view.__alive) {\n                zr.remove(view.group);\n                view.dispose(ecModel, this._api);\n                viewList.splice(i, 1);\n                delete viewMap[view.__id];\n                view.__id = view.group.__ecComponentInfo = null;\n            }\n            else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Processor data in each series\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function processData(ecModel, api) {\n        each(dataProcessorFuncs, function (process) {\n            process.func(ecModel, api);\n        });\n    }\n\n    /**\n     * @private\n     */\n    function stackSeriesData(ecModel) {\n        var stackedDataMap = {};\n        ecModel.eachSeries(function (series) {\n            var stack = series.get('stack');\n            var data = series.getData();\n            if (stack && data.type === 'list') {\n                var previousStack = stackedDataMap[stack];\n                // Avoid conflict with Object.prototype\n                if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n                    data.stackedOn = previousStack;\n                }\n                stackedDataMap[stack] = data;\n            }\n        });\n    }\n\n    /**\n     * Layout before each chart render there series, special visual encoding stage\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doLayout(ecModel, payload) {\n        var api = this._api;\n        each(visualFuncs, function (visual) {\n            if (visual.isLayout) {\n                visual.func(ecModel, api, payload);\n            }\n        });\n    }\n\n    /**\n     * Encode visual infomation from data after data processing\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @param {object} layout\n     * @param {boolean} [excludesLayout]\n     * @private\n     */\n    function doVisualEncoding(ecModel, payload, excludesLayout) {\n        var api = this._api;\n        ecModel.clearColorPalette();\n        ecModel.eachSeries(function (seriesModel) {\n            seriesModel.clearColorPalette();\n        });\n        each(visualFuncs, function (visual) {\n            (!excludesLayout || !visual.isLayout)\n                && visual.func(ecModel, api, payload);\n        });\n    }\n\n    /**\n     * Render each chart and component\n     * @private\n     */\n    function doRender(ecModel, payload) {\n        var api = this._api;\n        // Render all components\n        each(this._componentsViews, function (componentView) {\n            var componentModel = componentView.__model;\n            componentView.render(componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, componentView);\n        }, this);\n\n        each(this._chartsViews, function (chart) {\n            chart.__alive = false;\n        }, this);\n\n        // Render all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chartView = this._chartsMap[seriesModel.__viewId];\n            chartView.__alive = true;\n            chartView.render(seriesModel, ecModel, api, payload);\n\n            chartView.group.silent = !!seriesModel.get('silent');\n\n            updateZ(seriesModel, chartView);\n\n            updateProgressiveAndBlend(seriesModel, chartView);\n\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Remove groups of unrendered charts\n        each(this._chartsViews, function (chart) {\n            if (!chart.__alive) {\n                chart.remove(ecModel, api);\n            }\n        }, this);\n    }\n\n    var MOUSE_EVENT_NAMES = [\n        'click', 'dblclick', 'mouseover', 'mouseout', 'mousemove',\n        'mousedown', 'mouseup', 'globalout', 'contextmenu'\n    ];\n    /**\n     * @private\n     */\n    echartsProto._initEvents = function () {\n        each(MOUSE_EVENT_NAMES, function (eveName) {\n            this._zr.on(eveName, function (e) {\n                var ecModel = this.getModel();\n                var el = e.target;\n                var params;\n\n                // no e.target when 'globalout'.\n                if (eveName === 'globalout') {\n                    params = {};\n                }\n                else if (el && el.dataIndex != null) {\n                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                    params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n                }\n                // If element has custom eventData of components\n                else if (el && el.eventData) {\n                    params = zrUtil.extend({}, el.eventData);\n                }\n\n                if (params) {\n                    params.event = e;\n                    params.type = eveName;\n                    this.trigger(eveName, params);\n                }\n\n            }, this);\n        }, this);\n\n        each(eventActionMap, function (actionType, eventType) {\n            this._messageCenter.on(eventType, function (event) {\n                this.trigger(eventType, event);\n            }, this);\n        }, this);\n    };\n\n    /**\n     * @return {boolean}\n     */\n    echartsProto.isDisposed = function () {\n        return this._disposed;\n    };\n\n    /**\n     * Clear\n     */\n    echartsProto.clear = function () {\n        this.setOption({ series: [] }, true);\n    };\n\n    /**\n     * Dispose instance\n     */\n    echartsProto.dispose = function () {\n        if (this._disposed) {\n            if (__DEV__) {\n                console.warn('Instance ' + this.id + ' has been disposed');\n            }\n            return;\n        }\n        this._disposed = true;\n\n        var api = this._api;\n        var ecModel = this._model;\n\n        each(this._componentsViews, function (component) {\n            component.dispose(ecModel, api);\n        });\n        each(this._chartsViews, function (chart) {\n            chart.dispose(ecModel, api);\n        });\n\n        // Dispose after all views disposed\n        this._zr.dispose();\n\n        delete instances[this.id];\n    };\n\n    zrUtil.mixin(ECharts, Eventful);\n\n    function updateHoverLayerStatus(zr, ecModel) {\n        var storage = zr.storage;\n        var elCount = 0;\n        storage.traverse(function (el) {\n            if (!el.isGroup) {\n                elCount++;\n            }\n        });\n        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n            storage.traverse(function (el) {\n                if (!el.isGroup) {\n                    el.useHoverLayer = true;\n                }\n            });\n        }\n    }\n\n    /**\n     * Update chart progressive and blend.\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateProgressiveAndBlend(seriesModel, chartView) {\n        // Progressive configuration\n        var elCount = 0;\n        chartView.group.traverse(function (el) {\n            if (el.type !== 'group' && !el.ignore) {\n                elCount++;\n            }\n        });\n        var frameDrawNum = +seriesModel.get('progressive');\n        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n        if (needProgressive) {\n            chartView.group.traverse(function (el) {\n                // FIXME marker and other components\n                if (!el.isGroup) {\n                    el.progressive = needProgressive ?\n                        Math.floor(elCount++ / frameDrawNum) : -1;\n                    if (needProgressive) {\n                        el.stopAnimation(true);\n                    }\n                }\n            });\n        }\n\n        // Blend configration\n        var blendMode = seriesModel.get('blendMode') || null;\n        if (__DEV__) {\n            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n                console.warn('Only canvas support blendMode');\n            }\n        }\n        chartView.group.traverse(function (el) {\n            // FIXME marker and other components\n            if (!el.isGroup) {\n                el.setStyle('blend', blendMode);\n            }\n        });\n    }\n\n    /**\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateZ(model, view) {\n        var z = model.get('z');\n        var zlevel = model.get('zlevel');\n        // Set z and zlevel\n        view.group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n            }\n        });\n    }\n\n    function createExtensionAPI(ecInstance) {\n        var coordSysMgr = ecInstance._coordSysMgr;\n        return zrUtil.extend(new ExtensionAPI(ecInstance), {\n            // Inject methods\n            getCoordinateSystems: zrUtil.bind(\n                coordSysMgr.getCoordinateSystems, coordSysMgr\n            ),\n            getComponentByElement: function (el) {\n                while (el) {\n                    var modelInfo = el.__ecComponentInfo;\n                    if (modelInfo != null) {\n                        return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n                    }\n                    el = el.parent;\n                }\n            }\n        });\n    }\n\n    /**\n     * @type {Object} key: actionType.\n     * @inner\n     */\n    var actions = {};\n\n    /**\n     * Map eventType to actionType\n     * @type {Object}\n     */\n    var eventActionMap = {};\n\n    /**\n     * Data processor functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var dataProcessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var optionPreprocessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var postUpdateFuncs = [];\n\n    /**\n     * Visual encoding functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var visualFuncs = [];\n    /**\n     * Theme storage\n     * @type {Object.<key, Object>}\n     */\n    var themeStorage = {};\n    /**\n     * Loading effects\n     */\n    var loadingEffects = {};\n\n\n    var instances = {};\n    var connectedGroups = {};\n\n    var idBase = new Date() - 0;\n    var groupIdBase = new Date() - 0;\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n\n    /**\n     * @alias module:echarts\n     */\n    var echarts = {\n        /**\n         * @type {number}\n         */\n        version: '3.7.0',\n        dependencies: {\n            zrender: '3.6.0'\n        }\n    };\n\n    function enableConnect(chart) {\n        var STATUS_PENDING = 0;\n        var STATUS_UPDATING = 1;\n        var STATUS_UPDATED = 2;\n        var STATUS_KEY = '__connectUpdateStatus';\n\n        function updateConnectedChartsStatus(charts, status) {\n            for (var i = 0; i < charts.length; i++) {\n                var otherChart = charts[i];\n                otherChart[STATUS_KEY] = status;\n            }\n        }\n\n        zrUtil.each(eventActionMap, function (actionType, eventType) {\n            chart._messageCenter.on(eventType, function (event) {\n                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n                    if (event && event.escapeConnect) {\n                        return;\n                    }\n\n                    var action = chart.makeActionFromEvent(event);\n                    var otherCharts = [];\n\n                    zrUtil.each(instances, function (otherChart) {\n                        if (otherChart !== chart && otherChart.group === chart.group) {\n                            otherCharts.push(otherChart);\n                        }\n                    });\n\n                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n                    each(otherCharts, function (otherChart) {\n                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n                            otherChart.dispatchAction(action);\n                        }\n                    });\n                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n                }\n            });\n        });\n    }\n\n    /**\n     * @param {HTMLElement} dom\n     * @param {Object} [theme]\n     * @param {Object} opts\n     * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n     * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n     * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n     *                              Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n     *                               Can be 'auto' (the same as null/undefined)\n     */\n    echarts.init = function (dom, theme, opts) {\n        if (__DEV__) {\n            // Check version\n            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\n                throw new Error(\n                    'ZRender ' + zrender.version\n                    + ' is too old for ECharts ' + echarts.version\n                    + '. Current version need ZRender '\n                    + echarts.dependencies.zrender + '+'\n                );\n            }\n\n            if (!dom) {\n                throw new Error('Initialize failed: invalid dom.');\n            }\n        }\n\n        var existInstance = echarts.getInstanceByDom(dom);\n        if (existInstance) {\n            if (__DEV__) {\n                console.warn('There is a chart instance already initialized on the dom.');\n            }\n            return existInstance;\n        }\n\n        if (__DEV__) {\n            if (zrUtil.isDom(dom)\n                && dom.nodeName.toUpperCase() !== 'CANVAS'\n                && (\n                    (!dom.clientWidth && (!opts || opts.width == null))\n                    || (!dom.clientHeight && (!opts || opts.height == null))\n                )\n            ) {\n                console.warn('Can\\'t get dom width or height');\n            }\n        }\n\n        var chart = new ECharts(dom, theme, opts);\n        chart.id = 'ec_' + idBase++;\n        instances[chart.id] = chart;\n\n        if (dom.setAttribute) {\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n        }\n        else {\n            dom[DOM_ATTRIBUTE_KEY] = chart.id;\n        }\n\n        enableConnect(chart);\n\n        return chart;\n    };\n\n    /**\n     * @return {string|Array.<module:echarts~ECharts>} groupId\n     */\n    echarts.connect = function (groupId) {\n        // Is array of charts\n        if (zrUtil.isArray(groupId)) {\n            var charts = groupId;\n            groupId = null;\n            // If any chart has group\n            zrUtil.each(charts, function (chart) {\n                if (chart.group != null) {\n                    groupId = chart.group;\n                }\n            });\n            groupId = groupId || ('g_' + groupIdBase++);\n            zrUtil.each(charts, function (chart) {\n                chart.group = groupId;\n            });\n        }\n        connectedGroups[groupId] = true;\n        return groupId;\n    };\n\n    /**\n     * @DEPRECATED\n     * @return {string} groupId\n     */\n    echarts.disConnect = function (groupId) {\n        connectedGroups[groupId] = false;\n    };\n\n    /**\n     * @return {string} groupId\n     */\n    echarts.disconnect = echarts.disConnect;\n\n    /**\n     * Dispose a chart instance\n     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n     */\n    echarts.dispose = function (chart) {\n        if (typeof chart === 'string') {\n            chart = instances[chart];\n        }\n        else if (!(chart instanceof ECharts)){\n            // Try to treat as dom\n            chart = echarts.getInstanceByDom(chart);\n        }\n        if ((chart instanceof ECharts) && !chart.isDisposed()) {\n            chart.dispose();\n        }\n    };\n\n    /**\n     * @param  {HTMLElement} dom\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceByDom = function (dom) {\n        var key;\n        if (dom.getAttribute) {\n            key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n        }\n        else {\n            key = dom[DOM_ATTRIBUTE_KEY];\n        }\n        return instances[key];\n    };\n\n    /**\n     * @param {string} key\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceById = function (key) {\n        return instances[key];\n    };\n\n    /**\n     * Register theme\n     */\n    echarts.registerTheme = function (name, theme) {\n        themeStorage[name] = theme;\n    };\n\n    /**\n     * Register option preprocessor\n     * @param {Function} preprocessorFunc\n     */\n    echarts.registerPreprocessor = function (preprocessorFunc) {\n        optionPreprocessorFuncs.push(preprocessorFunc);\n    };\n\n    /**\n     * @param {number} [priority=1000]\n     * @param {Function} processorFunc\n     */\n    echarts.registerProcessor = function (priority, processorFunc) {\n        if (typeof priority === 'function') {\n            processorFunc = priority;\n            priority = PRIORITY_PROCESSOR_FILTER;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown processor priority');\n            }\n        }\n        dataProcessorFuncs.push({\n            prio: priority,\n            func: processorFunc\n        });\n    };\n\n    /**\n     * Register postUpdater\n     * @param {Function} postUpdateFunc\n     */\n    echarts.registerPostUpdate = function (postUpdateFunc) {\n        postUpdateFuncs.push(postUpdateFunc);\n    };\n\n    /**\n     * Usage:\n     * registerAction('someAction', 'someEvent', function () { ... });\n     * registerAction('someAction', function () { ... });\n     * registerAction(\n     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n     *     function () { ... }\n     * );\n     *\n     * @param {(string|Object)} actionInfo\n     * @param {string} actionInfo.type\n     * @param {string} [actionInfo.event]\n     * @param {string} [actionInfo.update]\n     * @param {string} [eventName]\n     * @param {Function} action\n     */\n    echarts.registerAction = function (actionInfo, eventName, action) {\n        if (typeof eventName === 'function') {\n            action = eventName;\n            eventName = '';\n        }\n        var actionType = zrUtil.isObject(actionInfo)\n            ? actionInfo.type\n            : ([actionInfo, actionInfo = {\n                event: eventName\n            }][0]);\n\n        // Event name is all lowercase\n        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n        eventName = actionInfo.event;\n\n        // Validate action type and event name.\n        zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n        if (!actions[actionType]) {\n            actions[actionType] = {action: action, actionInfo: actionInfo};\n        }\n        eventActionMap[eventName] = actionType;\n    };\n\n    /**\n     * @param {string} type\n     * @param {*} CoordinateSystem\n     */\n    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\n        CoordinateSystemManager.register(type, CoordinateSystem);\n    };\n\n    /**\n     * Get dimensions of specified coordinate system.\n     * @param {string} type\n     * @return {Array.<string|Object>}\n     */\n    echarts.getCoordinateSystemDimensions = function (type) {\n        var coordSysCreator = CoordinateSystemManager.get(type);\n        if (coordSysCreator) {\n            return coordSysCreator.getDimensionsInfo\n                    ? coordSysCreator.getDimensionsInfo()\n                    : coordSysCreator.dimensions.slice();\n        }\n    };\n\n    /**\n     * Layout is a special stage of visual encoding\n     * Most visual encoding like color are common for different chart\n     * But each chart has it's own layout algorithm\n     *\n     * @param {number} [priority=1000]\n     * @param {Function} layoutFunc\n     */\n    echarts.registerLayout = function (priority, layoutFunc) {\n        if (typeof priority === 'function') {\n            layoutFunc = priority;\n            priority = PRIORITY_VISUAL_LAYOUT;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown layout priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: layoutFunc,\n            isLayout: true\n        });\n    };\n\n    /**\n     * @param {number} [priority=3000]\n     * @param {Function} visualFunc\n     */\n    echarts.registerVisual = function (priority, visualFunc) {\n        if (typeof priority === 'function') {\n            visualFunc = priority;\n            priority = PRIORITY_VISUAL_CHART;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown visual priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: visualFunc\n        });\n    };\n\n    /**\n     * @param {string} name\n     */\n    echarts.registerLoading = function (name, loadingFx) {\n        loadingEffects[name] = loadingFx;\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentModel = function (opts/*, superClass*/) {\n        // var Clazz = ComponentModel;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentView = function (opts/*, superClass*/) {\n        // var Clazz = ComponentView;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentView.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendSeriesModel = function (opts/*, superClass*/) {\n        // var Clazz = SeriesModel;\n        // if (superClass) {\n        //     superClass = 'series.' + superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return SeriesModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendChartView = function (opts/*, superClass*/) {\n        // var Clazz = ChartView;\n        // if (superClass) {\n        //     superClass = superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ChartView.getClass(classType.main, true);\n        // }\n        return ChartView.extend(opts);\n    };\n\n    /**\n     * ZRender need a canvas context to do measureText.\n     * But in node environment canvas may be created by node-canvas.\n     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n     *\n     * Be careful of using it in the browser.\n     *\n     * @param {Function} creator\n     * @example\n     *     var Canvas = require('canvas');\n     *     var echarts = require('echarts');\n     *     echarts.setCanvasCreator(function () {\n     *         // Small size is enough.\n     *         return new Canvas(32, 32);\n     *     });\n     */\n    echarts.setCanvasCreator = function (creator) {\n        zrUtil.createCanvas = creator;\n    };\n\n    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, __webpack_require__(758));\n    echarts.registerPreprocessor(__webpack_require__(751));\n    echarts.registerLoading('default', __webpack_require__(742));\n\n    // Default action\n    echarts.registerAction({\n        type: 'highlight',\n        event: 'highlight',\n        update: 'highlight'\n    }, zrUtil.noop);\n    echarts.registerAction({\n        type: 'downplay',\n        event: 'downplay',\n        update: 'downplay'\n    }, zrUtil.noop);\n\n\n    // --------\n    // Exports\n    // --------\n    echarts.zrender = zrender;\n\n    echarts.List = __webpack_require__(630);\n    echarts.Model = __webpack_require__(614);\n\n    echarts.Axis = __webpack_require__(650);\n\n    echarts.graphic = __webpack_require__(608);\n    echarts.number = __webpack_require__(610);\n    echarts.format = __webpack_require__(613);\n    echarts.throttle = throttle.throttle;\n    echarts.matrix = __webpack_require__(623);\n    echarts.vector = __webpack_require__(611);\n    echarts.color = __webpack_require__(627);\n\n    echarts.util = {};\n    each([\n            'map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter',\n            'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction',\n            'extend', 'defaults', 'clone', 'merge'\n        ],\n        function (name) {\n            echarts.util[name] = zrUtil[name];\n        }\n    );\n\n    echarts.helper = __webpack_require__(740);\n\n\n    // PRIORITY\n    echarts.PRIORITY = {\n        PROCESSOR: {\n            FILTER: PRIORITY_PROCESSOR_FILTER,\n            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n        },\n        VISUAL: {\n            LAYOUT: PRIORITY_VISUAL_LAYOUT,\n            GLOBAL: PRIORITY_VISUAL_GLOBAL,\n            CHART: PRIORITY_VISUAL_CHART,\n            COMPONENT: PRIORITY_VISUAL_COMPONENT,\n            BRUSH: PRIORITY_VISUAL_BRUSH\n        }\n    };\n\n    module.exports = echarts;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(60)))\n\n/***/ }),\n/* 608 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(606);\n\n    var pathTool = __webpack_require__(800);\n    var Path = __webpack_require__(612);\n    var colorTool = __webpack_require__(627);\n    var matrix = __webpack_require__(623);\n    var vector = __webpack_require__(611);\n    var Transformable = __webpack_require__(680);\n    var BoundingRect = __webpack_require__(617);\n\n    var round = Math.round;\n    var mathMax = Math.max;\n    var mathMin = Math.min;\n\n    var EMPTY_OBJ = {};\n\n    var graphic = {};\n\n    graphic.Group = __webpack_require__(634);\n\n    graphic.Image = __webpack_require__(674);\n\n    graphic.Text = __webpack_require__(785);\n\n    graphic.Circle = __webpack_require__(791);\n\n    graphic.Sector = __webpack_require__(797);\n\n    graphic.Ring = __webpack_require__(796);\n\n    graphic.Polygon = __webpack_require__(793);\n\n    graphic.Polyline = __webpack_require__(794);\n\n    graphic.Rect = __webpack_require__(795);\n\n    graphic.Line = __webpack_require__(792);\n\n    graphic.BezierCurve = __webpack_require__(790);\n\n    graphic.Arc = __webpack_require__(789);\n\n    graphic.CompoundPath = __webpack_require__(782);\n\n    graphic.LinearGradient = __webpack_require__(783);\n\n    graphic.RadialGradient = __webpack_require__(784);\n\n    graphic.BoundingRect = BoundingRect;\n\n    /**\n     * Extend shape with parameters\n     */\n    graphic.extendShape = function (opts) {\n        return Path.extend(opts);\n    };\n\n    /**\n     * Extend path\n     */\n    graphic.extendPath = function (pathData, opts) {\n        return pathTool.extendFromString(pathData, opts);\n    };\n\n    /**\n     * Create a path element from path data string\n     * @param {string} pathData\n     * @param {Object} opts\n     * @param {module:zrender/core/BoundingRect} rect\n     * @param {string} [layout=cover] 'center' or 'cover'\n     */\n    graphic.makePath = function (pathData, opts, rect, layout) {\n        var path = pathTool.createFromString(pathData, opts);\n        var boundingRect = path.getBoundingRect();\n        if (rect) {\n            var aspect = boundingRect.width / boundingRect.height;\n\n            if (layout === 'center') {\n                // Set rect to center, keep width / height ratio.\n                var width = rect.height * aspect;\n                var height;\n                if (width <= rect.width) {\n                    height = rect.height;\n                }\n                else {\n                    width = rect.width;\n                    height = width / aspect;\n                }\n                var cx = rect.x + rect.width / 2;\n                var cy = rect.y + rect.height / 2;\n\n                rect.x = cx - width / 2;\n                rect.y = cy - height / 2;\n                rect.width = width;\n                rect.height = height;\n            }\n\n            graphic.resizePath(path, rect);\n        }\n        return path;\n    };\n\n    graphic.mergePath = pathTool.mergePath,\n\n    /**\n     * Resize a path to fit the rect\n     * @param {module:zrender/graphic/Path} path\n     * @param {Object} rect\n     */\n    graphic.resizePath = function (path, rect) {\n        if (!path.applyTransform) {\n            return;\n        }\n\n        var pathRect = path.getBoundingRect();\n\n        var m = pathRect.calculateTransform(rect);\n\n        path.applyTransform(m);\n    };\n\n    /**\n     * Sub pixel optimize line for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x1]\n     * @param {number} [param.shape.y1]\n     * @param {number} [param.shape.x2]\n     * @param {number} [param.shape.y2]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeLine = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n\n        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n        }\n        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n        }\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize rect for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x]\n     * @param {number} [param.shape.y]\n     * @param {number} [param.shape.width]\n     * @param {number} [param.shape.height]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeRect = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n        var originX = shape.x;\n        var originY = shape.y;\n        var originWidth = shape.width;\n        var originHeight = shape.height;\n        shape.x = subPixelOptimize(shape.x, lineWidth, true);\n        shape.y = subPixelOptimize(shape.y, lineWidth, true);\n        shape.width = Math.max(\n            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\n            originWidth === 0 ? 0 : 1\n        );\n        shape.height = Math.max(\n            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\n            originHeight === 0 ? 0 : 1\n        );\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize for canvas\n     *\n     * @param {number} position Coordinate, such as x, y\n     * @param {number} lineWidth Should be nonnegative integer.\n     * @param {boolean=} positiveOrNegative Default false (negative).\n     * @return {number} Optimized position.\n     */\n    graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\n        // Assure that (position + lineWidth / 2) is near integer edge,\n        // otherwise line will be fuzzy in canvas.\n        var doubledPosition = round(position * 2);\n        return (doubledPosition + round(lineWidth)) % 2 === 0\n            ? doubledPosition / 2\n            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n    };\n\n    function hasFillOrStroke(fillOrStroke) {\n        return fillOrStroke != null && fillOrStroke != 'none';\n    }\n\n    function liftColor(color) {\n        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n    }\n\n    /**\n     * @private\n     */\n    function cacheElementStl(el) {\n        if (el.__hoverStlDirty) {\n            var stroke = el.style.stroke;\n            var fill = el.style.fill;\n\n            // Create hoverStyle on mouseover\n            var hoverStyle = el.__hoverStl;\n            hoverStyle.fill = hoverStyle.fill\n                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n            hoverStyle.stroke = hoverStyle.stroke\n                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n\n            var normalStyle = {};\n            for (var name in hoverStyle) {\n                // See comment in `doSingleEnterHover`.\n                if (hoverStyle[name] != null) {\n                    normalStyle[name] = el.style[name];\n                }\n            }\n\n            el.__normalStl = normalStyle;\n\n            el.__hoverStlDirty = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    function doSingleEnterHover(el) {\n        if (el.__isHover) {\n            return;\n        }\n\n        cacheElementStl(el);\n\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.addHover(el, el.__hoverStl);\n        }\n        else {\n            // styles can be:\n            // {\n            //     label: {\n            //         normal: {\n            //             show: false,\n            //             position: 'outside',\n            //             fontSize: 18\n            //         },\n            //         emphasis: {\n            //             show: true\n            //         }\n            //     }\n            // },\n            // where properties of `emphasis` may not appear in `normal`. We previously use\n            // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n            // But consider rich text and setOption in merge mode, it is impossible to cover\n            // all properties in merge. So we use merge mode when setting style here, where\n            // only properties that is not `null/undefined` can be set. The disadventage:\n            // null/undefined can not be used to remove style any more in `emphasis`.\n            el.style.extendFrom(el.__hoverStl);\n            el.dirty(false);\n            el.z2 += 1;\n        }\n\n        el.__isHover = true;\n    }\n\n    /**\n     * @inner\n     */\n    function doSingleLeaveHover(el) {\n        if (!el.__isHover) {\n            return;\n        }\n\n        var normalStl = el.__normalStl;\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.removeHover(el);\n        }\n        else {\n            // Consider null/undefined value, should use\n            // `setStyle` but not `extendFrom(stl, true)`.\n            normalStl && el.setStyle(normalStl);\n            el.z2 -= 1;\n        }\n\n        el.__isHover = false;\n    }\n\n    /**\n     * @inner\n     */\n    function doEnterHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleEnterHover(child);\n                }\n            })\n            : doSingleEnterHover(el);\n    }\n\n    function doLeaveHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleLeaveHover(child);\n                }\n            })\n            : doSingleLeaveHover(el);\n    }\n\n    /**\n     * @inner\n     */\n    function setElementHoverStl(el, hoverStl) {\n        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n        // Often used when item group has a label element and it's hoverStyle is different\n        el.__hoverStl = el.hoverStyle || hoverStl || {};\n        el.__hoverStlDirty = true;\n\n        if (el.__isHover) {\n            cacheElementStl(el);\n        }\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOver(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOut(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doLeaveHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function enterEmphasis() {\n        this.__isEmphasis = true;\n        doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function leaveEmphasis() {\n        this.__isEmphasis = false;\n        doLeaveHover(this);\n    }\n\n    /**\n     * Set hover style of element.\n     * This method can be called repeatly without side-effects.\n     * @param {module:zrender/Element} el\n     * @param {Object} [hoverStyle]\n     * @param {Object} [opt]\n     * @param {boolean} [opt.hoverSilentOnTouch=false]\n     *        In touch device, mouseover event will be trigger on touchstart event\n     *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n     *        conviniently use hoverStyle when tap on touch screen without additional\n     *        code for compatibility.\n     *        But if the chart/component has select feature, which usually also use\n     *        hoverStyle, there might be conflict between 'select-highlight' and\n     *        'hover-highlight' especially when roam is enabled (see geo for example).\n     *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n     *        on touch device.\n     */\n    graphic.setHoverStyle = function (el, hoverStyle, opt) {\n        el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    setElementHoverStl(child, hoverStyle);\n                }\n            })\n            : setElementHoverStl(el, hoverStyle);\n\n        // Duplicated function will be auto-ignored, see Eventful.js.\n        el.on('mouseover', onElementMouseOver)\n          .on('mouseout', onElementMouseOut);\n\n        // Emphasis, normal can be triggered manually\n        el.on('emphasis', enterEmphasis)\n          .on('normal', leaveEmphasis);\n    };\n\n    /**\n     * Set basic textStyle properties.\n     * @param {Object|module:zrender/graphic/Style} textStyle\n     * @param {module:echarts/model/Model} model\n     * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n     * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n     */\n    graphic.setTextStyle = function (textStyle, textStyleModel, specifiedTextStyle, opt) {\n        setTextStyleCommon(textStyle, textStyleModel, opt);\n        specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n        textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n\n        return textStyle;\n    };\n\n    /**\n     * Set text option in the style\n     * @param {Object} textStyle\n     * @param {module:echarts/model/Model} labelModel\n     * @param {string|boolean} defaultColor Default text color.\n     *        If set as false, it will be processed as a emphasis style.\n     */\n    graphic.setText = function (textStyle, labelModel, defaultColor) {\n        var opt = {isRectText: true};\n        if (defaultColor === false) {\n            opt.forMerge = true;\n        }\n        else {\n            // Support setting color as 'auto' to get visual color.\n            opt.defaultTextColor = opt.autoColor = defaultColor;\n            opt.checkInside = checkInsideForSetText;\n        }\n        setTextStyleCommon(textStyle, labelModel, opt);\n        textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n    };\n\n    function checkInsideForSetText(labelModel, textPosition) {\n        return textPosition && textPosition.indexOf('inside') >= 0;\n    }\n\n    /**\n     * {\n     *      disableBox: boolean, Whether diable drawing box of block (outer most).\n     *      isRectText: boolean,\n     *      autoColor: string, specify a color when color is 'auto',\n     *                 for textFill, textStroke, textBackgroundColor, and textBorderColor,\n     *      defaultTextColor: string,\n     *      checkInside: function, higher priority than `defaultTextColor`.\n     *      forceRich: boolean,\n     *      forMerge: boolean\n     * }\n     */\n    function setTextStyleCommon(textStyle, textStyleModel, opt) {\n        // Consider there will be abnormal when merge hover style to normal style if given default value.\n        opt = opt || EMPTY_OBJ;\n\n        if (opt.isRectText) {\n            var textPosition = textStyleModel.getShallow('position')\n                || (opt.forMerge ? null : 'inside');\n            // 'outside' is not a valid zr textPostion value, but used\n            // in bar series, and magric type should be considered.\n            textPosition === 'outside' && (textPosition = 'top');\n            textStyle.textPosition = textPosition;\n            textStyle.textOffset = textStyleModel.getShallow('offset');\n            var labelRotate = textStyleModel.getShallow('rotate');\n            labelRotate != null && (labelRotate *= Math.PI / 180);\n            textStyle.textRotation = labelRotate;\n            textStyle.textDistance = zrUtil.retrieve2(\n                textStyleModel.getShallow('distance'), opt.forMerge ? null : 5\n            );\n        }\n\n        var ecModel = textStyleModel.ecModel;\n        var globalTextStyle = ecModel && ecModel.option.textStyle;\n\n        // Consider case:\n        // {\n        //     data: [{\n        //         value: 12,\n        //         label: {\n        //             normal: {\n        //                 rich: {\n        //                     // no 'a' here but using parent 'a'.\n        //                 }\n        //             }\n        //         }\n        //     }],\n        //     rich: {\n        //         a: { ... }\n        //     }\n        // }\n        var richItemNames = getRichItemNames(textStyleModel);\n        var richResult;\n        if (richItemNames) {\n            richResult = {};\n            for (var name in richItemNames) {\n                if (richItemNames.hasOwnProperty(name)) {\n                    // Cascade is supported in rich.\n                    var richTextStyle = textStyleModel.getModel(['rich', name]);\n                    // In rich, never `disableBox`.\n                    setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt);\n                }\n            }\n        }\n        textStyle.rich = richResult;\n\n        setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, true);\n\n        if (opt.forceRich && !opt.textStyle) {\n            opt.textStyle = {};\n        }\n\n        return textStyle;\n    }\n\n    // Consider case:\n    // {\n    //     data: [{\n    //         value: 12,\n    //         label: {\n    //             normal: {\n    //                 rich: {\n    //                     // no 'a' here but using parent 'a'.\n    //                 }\n    //             }\n    //         }\n    //     }],\n    //     rich: {\n    //         a: { ... }\n    //     }\n    // }\n    function getRichItemNames(textStyleModel) {\n        // Use object to remove duplicated names.\n        var richItemNameMap;\n        while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n            var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n            if (rich) {\n                richItemNameMap = richItemNameMap || {};\n                for (var name in rich) {\n                    if (rich.hasOwnProperty(name)) {\n                        richItemNameMap[name] = 1;\n                    }\n                }\n            }\n            textStyleModel = textStyleModel.parentModel;\n        }\n        return richItemNameMap;\n    }\n\n    function setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isBlock) {\n        var forMerge = opt.forMerge;\n\n        // In merge mode, default value should not be given.\n        globalTextStyle = !forMerge && globalTextStyle || EMPTY_OBJ;\n\n        var textFill = getAutoColor(textStyleModel.getShallow('color'));\n        var textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'));\n        var textLineWidth = textStyleModel.getShallow('textBorderWidth');\n\n        if (!forMerge) {\n            textFill == null && (textFill = globalTextStyle.color);\n            textStroke == null && (textStroke = globalTextStyle.textBorderColor);\n            textLineWidth == null && (textLineWidth = globalTextStyle.textBorderWidth);\n\n            if (textFill == null\n                && opt.checkInside\n                && opt.checkInside(textStyleModel, textStyle.textPosition)\n            ) {\n                textFill = '#fff';\n                // Consider text with #fff overflow its container.\n                if (textStroke == null) {\n                    textStroke = opt.defaultTextColor;\n                    textLineWidth == null && (textLineWidth = 2);\n                }\n            }\n\n            textFill == null && (textFill = opt.defaultTextColor);\n        }\n\n        textStyle.textFill = textFill;\n        textStyle.textStroke = textStroke;\n        textStyle.textLineWidth = textLineWidth;\n\n        // Do not use `getFont` here, because merge should be supported, where\n        // part of these properties may be changed in emphasis style, and the\n        // others should remain their original value got from normal style.\n        textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n        textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n        textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n        textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n\n        textStyle.textAlign = textStyleModel.getShallow('align');\n        textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign')\n            || textStyleModel.getShallow('baseline');\n\n        textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n        textStyle.textWidth = textStyleModel.getShallow('width');\n        textStyle.textHeight = textStyleModel.getShallow('height');\n        textStyle.textTag = textStyleModel.getShallow('tag');\n\n        if (!isBlock || !opt.disableBox) {\n            textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n            textStyle.textPadding = textStyleModel.getShallow('padding');\n            textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n            textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n            textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n\n            textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n            textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n            textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n            textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n        }\n\n        textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor')\n            || globalTextStyle.textShadowColor;\n        textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur')\n            || globalTextStyle.textShadowBlur;\n        textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX')\n            || globalTextStyle.textShadowOffsetX;\n        textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY')\n            || globalTextStyle.textShadowOffsetY;\n    }\n\n    function getAutoColor(color, opt) {\n        return color !== 'auto' ? color : (opt && opt.autoColor) ? opt.autoColor : null;\n    }\n\n    graphic.getFont = function (opt, ecModel) {\n        // ecModel or default text style model.\n        var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n        return [\n            // FIXME in node-canvas fontWeight is before fontStyle\n            opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '',\n            opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '',\n            (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px',\n            opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'\n        ].join(' ');\n    };\n\n    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n        if (typeof dataIndex === 'function') {\n            cb = dataIndex;\n            dataIndex = null;\n        }\n        // Do not check 'animation' property directly here. Consider this case:\n        // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n        // but its parent model (`seriesModel`) does.\n        var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n        if (animationEnabled) {\n            var postfix = isUpdate ? 'Update' : '';\n            var duration = animatableModel.getShallow('animationDuration' + postfix);\n            var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n            var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n            if (typeof animationDelay === 'function') {\n                animationDelay = animationDelay(\n                    dataIndex,\n                    animatableModel.getAnimationDelayParams\n                        ? animatableModel.getAnimationDelayParams(el, dataIndex)\n                        : null\n                );\n            }\n            if (typeof duration === 'function') {\n                duration = duration(dataIndex);\n            }\n\n            duration > 0\n                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb)\n                : (el.stopAnimation(), el.attr(props), cb && cb());\n        }\n        else {\n            el.stopAnimation();\n            el.attr(props);\n            cb && cb();\n        }\n    }\n\n    /**\n     * Update graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} [cb]\n     * @example\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n     *     // Or\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, function () { console.log('Animation done!'); });\n     */\n    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Init graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} cb\n     */\n    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Get transform matrix of target (param target),\n     * in coordinate of its ancestor (param ancestor)\n     *\n     * @param {module:zrender/mixin/Transformable} target\n     * @param {module:zrender/mixin/Transformable} [ancestor]\n     */\n    graphic.getTransform = function (target, ancestor) {\n        var mat = matrix.identity([]);\n\n        while (target && target !== ancestor) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n\n        return mat;\n    };\n\n    /**\n     * Apply transform to an vertex.\n     * @param {Array.<number>} target [x, y]\n     * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n     *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n     *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {Array.<number>} [x, y]\n     */\n    graphic.applyTransform = function (target, transform, invert) {\n        if (transform && !zrUtil.isArrayLike(transform)) {\n            transform = Transformable.getLocalTransform(transform);\n        }\n\n        if (invert) {\n            transform = matrix.invert([], transform);\n        }\n        return vector.applyTransform([], target, transform);\n    };\n\n    /**\n     * @param {string} direction 'left' 'right' 'top' 'bottom'\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n     */\n    graphic.transformDirection = function (direction, transform, invert) {\n\n        // Pick a base, ensure that transform result will not be (0, 0).\n        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[0]);\n        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[2]);\n\n        var vertex = [\n            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\n            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\n        ];\n\n        vertex = graphic.applyTransform(vertex, transform, invert);\n\n        return Math.abs(vertex[0]) > Math.abs(vertex[1])\n            ? (vertex[0] > 0 ? 'right' : 'left')\n            : (vertex[1] > 0 ? 'bottom' : 'top');\n    };\n\n    /**\n     * Apply group transition animation from g1 to g2.\n     * If no animatableModel, no animation.\n     */\n    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\n        if (!g1 || !g2) {\n            return;\n        }\n\n        function getElMap(g) {\n            var elMap = {};\n            g.traverse(function (el) {\n                if (!el.isGroup && el.anid) {\n                    elMap[el.anid] = el;\n                }\n            });\n            return elMap;\n        }\n        function getAnimatableProps(el) {\n            var obj = {\n                position: vector.clone(el.position),\n                rotation: el.rotation\n            };\n            if (el.shape) {\n                obj.shape = zrUtil.extend({}, el.shape);\n            }\n            return obj;\n        }\n        var elMap1 = getElMap(g1);\n\n        g2.traverse(function (el) {\n            if (!el.isGroup && el.anid) {\n                var oldEl = elMap1[el.anid];\n                if (oldEl) {\n                    var newProp = getAnimatableProps(el);\n                    el.attr(getAnimatableProps(oldEl));\n                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\n                }\n                // else {\n                //     if (el.previousProps) {\n                //         graphic.updateProps\n                //     }\n                // }\n            }\n        });\n    };\n\n    /**\n     * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n     * @param {Object} rect {x, y, width, height}\n     * @return {Array.<Array.<number>>} A new clipped points.\n     */\n    graphic.clipPointsByRect = function (points, rect) {\n        return zrUtil.map(points, function (point) {\n            var x = point[0];\n            x = mathMax(x, rect.x);\n            x = mathMin(x, rect.x + rect.width);\n            var y = point[1];\n            y = mathMax(y, rect.y);\n            y = mathMin(y, rect.y + rect.height);\n            return [x, y];\n        });\n    };\n\n    /**\n     * @param {Object} targetRect {x, y, width, height}\n     * @param {Object} rect {x, y, width, height}\n     * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n     */\n    graphic.clipRectByRect = function (targetRect, rect) {\n        var x = mathMax(targetRect.x, rect.x);\n        var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n        var y = mathMax(targetRect.y, rect.y);\n        var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n        if (x2 >= x && y2 >= y) {\n            return {\n                x: x,\n                y: y,\n                width: x2 - x,\n                height: y2 - y\n            };\n        }\n    };\n\n    /**\n     * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n     * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n     * @param {Object} [rect] {x, y, width, height}\n     * @return {module:zrender/Element} Icon path or image element.\n     */\n    graphic.createIcon = function (iconStr, opt, rect) {\n        opt = zrUtil.extend({rectHover: true}, opt);\n        var style = opt.style = {strokeNoScale: true};\n        rect = rect || {x: -1, y: -1, width: 2, height: 2};\n\n        if (iconStr) {\n            return iconStr.indexOf('image://') === 0\n                ? (\n                    style.image = iconStr.slice(8),\n                    zrUtil.defaults(style, rect),\n                    new graphic.Image(opt)\n                )\n                : (\n                    graphic.makePath(\n                        iconStr.replace('path://', ''),\n                        opt,\n                        rect,\n                        'center'\n                    )\n                );\n        }\n\n    };\n\n    module.exports = graphic;\n\n\n\n/***/ }),\n/* 609 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var formatUtil = __webpack_require__(613);\n    var nubmerUtil = __webpack_require__(610);\n    var Model = __webpack_require__(614);\n    var zrUtil = __webpack_require__(606);\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var modelUtil = {};\n\n    /**\n     * If value is not array, then translate it to array.\n     * @param  {*} value\n     * @return {Array} [value] or value\n     */\n    modelUtil.normalizeToArray = function (value) {\n        return value instanceof Array\n            ? value\n            : value == null\n            ? []\n            : [value];\n    };\n\n    /**\n     * Sync default option between normal and emphasis like `position` and `show`\n     * In case some one will write code like\n     *     label: {\n     *         normal: {\n     *             show: false,\n     *             position: 'outside',\n     *             fontSize: 18\n     *         },\n     *         emphasis: {\n     *             show: true\n     *         }\n     *     }\n     * @param {Object} opt\n     * @param {Array.<string>} subOpts\n     */\n     modelUtil.defaultEmphasis = function (opt, subOpts) {\n        if (opt) {\n            var emphasisOpt = opt.emphasis = opt.emphasis || {};\n            var normalOpt = opt.normal = opt.normal || {};\n\n            // Default emphasis option from normal\n            for (var i = 0, len = subOpts.length; i < len; i++) {\n                var subOptName = subOpts[i];\n                if (!emphasisOpt.hasOwnProperty(subOptName)\n                    && normalOpt.hasOwnProperty(subOptName)\n                ) {\n                    emphasisOpt[subOptName] = normalOpt[subOptName];\n                }\n            }\n        }\n    };\n\n    modelUtil.TEXT_STYLE_OPTIONS = [\n        'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n        'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth',\n        'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline',\n        'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY',\n        'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY',\n        'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding'\n    ];\n\n    // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n    //     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n    //     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n    //     // FIXME: deprecated, check and remove it.\n    //     'textStyle'\n    // ]);\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method retieves value from data.\n     * @param {string|number|Date|Array|Object} dataItem\n     * @return {number|string|Date|Array.<number|string|Date>}\n     */\n    modelUtil.getDataItemValue = function (dataItem) {\n        // Performance sensitive.\n        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n    };\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method determine if dataItem has extra option besides value\n     * @param {string|number|Date|Array|Object} dataItem\n     */\n    modelUtil.isDataItemOption = function (dataItem) {\n        return isObject(dataItem)\n            && !(dataItem instanceof Array);\n            // // markLine data can be array\n            // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n    };\n\n    /**\n     * This helper method convert value in data.\n     * @param {string|number|Date} value\n     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n     */\n    modelUtil.converDataValue = function (value, dimInfo) {\n        // Performance sensitive.\n        var dimType = dimInfo && dimInfo.type;\n        if (dimType === 'ordinal') {\n            return value;\n        }\n\n        if (dimType === 'time'\n            // spead up when using timestamp\n            && typeof value !== 'number'\n            && value != null\n            && value !== '-'\n        ) {\n            value = +nubmerUtil.parseDate(value);\n        }\n\n        // dimType defaults 'number'.\n        // If dimType is not ordinal and value is null or undefined or NaN or '-',\n        // parse to NaN.\n        return (value == null || value === '')\n            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n    };\n\n    /**\n     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n     * @param {module:echarts/data/List} data\n     * @param {Object} opt\n     * @param {string} [opt.seriesIndex]\n     * @param {Object} [opt.name]\n     * @param {Object} [opt.mainType]\n     * @param {Object} [opt.subType]\n     */\n    modelUtil.createDataFormatModel = function (data, opt) {\n        var model = new Model();\n        zrUtil.mixin(model, modelUtil.dataFormatMixin);\n        model.seriesIndex = opt.seriesIndex;\n        model.name = opt.name || '';\n        model.mainType = opt.mainType;\n        model.subType = opt.subType;\n\n        model.getData = function () {\n            return data;\n        };\n        return model;\n    };\n\n    // PENDING A little ugly\n    modelUtil.dataFormatMixin = {\n        /**\n         * Get params for formatter\n         * @param {number} dataIndex\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getDataParams: function (dataIndex, dataType) {\n            var data = this.getData(dataType);\n            var rawValue = this.getRawValue(dataIndex, dataType);\n            var rawDataIndex = data.getRawIndex(dataIndex);\n            var name = data.getName(dataIndex, true);\n            var itemOpt = data.getRawDataItem(dataIndex);\n            var color = data.getItemVisual(dataIndex, 'color');\n\n            return {\n                componentType: this.mainType,\n                componentSubType: this.subType,\n                seriesType: this.mainType === 'series' ? this.subType : null,\n                seriesIndex: this.seriesIndex,\n                seriesId: this.id,\n                seriesName: this.name,\n                name: name,\n                dataIndex: rawDataIndex,\n                data: itemOpt,\n                dataType: dataType,\n                value: rawValue,\n                color: color,\n                marker: formatUtil.getTooltipMarker(color),\n\n                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n                $vars: ['seriesName', 'name', 'value']\n            };\n        },\n\n        /**\n         * Format label\n         * @param {number} dataIndex\n         * @param {string} [status='normal'] 'normal' or 'emphasis'\n         * @param {string} [dataType]\n         * @param {number} [dimIndex]\n         * @param {string} [labelProp='label']\n         * @return {string}\n         */\n        getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n            status = status || 'normal';\n            var data = this.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var params = this.getDataParams(dataIndex, dataType);\n            if (dimIndex != null && (params.value instanceof Array)) {\n                params.value = params.value[dimIndex];\n            }\n\n            var formatter = itemModel.get([labelProp || 'label', status, 'formatter']);\n\n            if (typeof formatter === 'function') {\n                params.status = status;\n                return formatter(params);\n            }\n            else if (typeof formatter === 'string') {\n                return formatUtil.formatTpl(formatter, params);\n            }\n        },\n\n        /**\n         * Get raw value in option\n         * @param {number} idx\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getRawValue: function (idx, dataType) {\n            var data = this.getData(dataType);\n            var dataItem = data.getRawDataItem(idx);\n            if (dataItem != null) {\n                return (isObject(dataItem) && !(dataItem instanceof Array))\n                    ? dataItem.value : dataItem;\n            }\n        },\n\n        /**\n         * Should be implemented.\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         * @return {string} tooltip string\n         */\n        formatTooltip: zrUtil.noop\n    };\n\n    /**\n     * Mapping to exists for merge.\n     *\n     * @public\n     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n     * @param {Object|Array.<Object>} newCptOptions\n     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          index of which is the same as exists.\n     */\n    modelUtil.mappingToExists = function (exists, newCptOptions) {\n        // Mapping by the order by original option (but not order of\n        // new option) in merge mode. Because we should ensure\n        // some specified index (like xAxisIndex) is consistent with\n        // original option, which is easy to understand, espatially in\n        // media query. And in most case, merge option is used to\n        // update partial option but not be expected to change order.\n        newCptOptions = (newCptOptions || []).slice();\n\n        var result = zrUtil.map(exists || [], function (obj, index) {\n            return {exist: obj};\n        });\n\n        // Mapping by id or name if specified.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            // id has highest priority.\n            for (var i = 0; i < result.length; i++) {\n                if (!result[i].option // Consider name: two map to one.\n                    && cptOption.id != null\n                    && result[i].exist.id === cptOption.id + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n\n            for (var i = 0; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option // Consider name: two map to one.\n                    // Can not match when both ids exist but different.\n                    && (exist.id == null || cptOption.id == null)\n                    && cptOption.name != null\n                    && !modelUtil.isIdInner(cptOption)\n                    && !modelUtil.isIdInner(exist)\n                    && exist.name === cptOption.name + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n        });\n\n        // Otherwise mapping by index.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            var i = 0;\n            for (; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option\n                    // Existing model that already has id should be able to\n                    // mapped to (because after mapping performed model may\n                    // be assigned with a id, whish should not affect next\n                    // mapping), except those has inner id.\n                    && !modelUtil.isIdInner(exist)\n                    // Caution:\n                    // Do not overwrite id. But name can be overwritten,\n                    // because axis use name as 'show label text'.\n                    // 'exist' always has id and name and we dont\n                    // need to check it.\n                    && cptOption.id == null\n                ) {\n                    result[i].option = cptOption;\n                    break;\n                }\n            }\n\n            if (i >= result.length) {\n                result.push({option: cptOption});\n            }\n        });\n\n        return result;\n    };\n\n    /**\n     * Make id and name for mapping result (result of mappingToExists)\n     * into `keyInfo` field.\n     *\n     * @public\n     * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          which order is the same as exists.\n     * @return {Array.<Object>} The input.\n     */\n    modelUtil.makeIdAndName = function (mapResult) {\n        // We use this id to hash component models and view instances\n        // in echarts. id can be specified by user, or auto generated.\n\n        // The id generation rule ensures new view instance are able\n        // to mapped to old instance when setOption are called in\n        // no-merge mode. So we generate model id by name and plus\n        // type in view id.\n\n        // name can be duplicated among components, which is convenient\n        // to specify multi components (like series) by one name.\n\n        // Ensure that each id is distinct.\n        var idMap = zrUtil.createHashMap();\n\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            existCpt && idMap.set(existCpt.id, item);\n        });\n\n        each(mapResult, function (item, index) {\n            var opt = item.option;\n\n            zrUtil.assert(\n                !opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item,\n                'id duplicates: ' + (opt && opt.id)\n            );\n\n            opt && opt.id != null && idMap.set(opt.id, item);\n            !item.keyInfo && (item.keyInfo = {});\n        });\n\n        // Make name and id.\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            var opt = item.option;\n            var keyInfo = item.keyInfo;\n\n            if (!isObject(opt)) {\n                return;\n            }\n\n            // name can be overwitten. Consider case: axis.name = '20km'.\n            // But id generated by name will not be changed, which affect\n            // only in that case: setOption with 'not merge mode' and view\n            // instance will be recreated, which can be accepted.\n            keyInfo.name = opt.name != null\n                ? opt.name + ''\n                : existCpt\n                ? existCpt.name\n                : '\\0-'; // name may be displayed on screen, so use '-'.\n\n            if (existCpt) {\n                keyInfo.id = existCpt.id;\n            }\n            else if (opt.id != null) {\n                keyInfo.id = opt.id + '';\n            }\n            else {\n                // Consider this situatoin:\n                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n                // Series with the same name between optionA and optionB\n                // should be mapped.\n                var idNum = 0;\n                do {\n                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n                }\n                while (idMap.get(keyInfo.id));\n            }\n\n            idMap.set(keyInfo.id, item);\n        });\n    };\n\n    /**\n     * @public\n     * @param {Object} cptOption\n     * @return {boolean}\n     */\n    modelUtil.isIdInner = function (cptOption) {\n        return isObject(cptOption)\n            && cptOption.id\n            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n    };\n\n    /**\n     * A helper for removing duplicate items between batchA and batchB,\n     * and in themselves, and categorize by series.\n     *\n     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n     */\n    modelUtil.compressBatches = function (batchA, batchB) {\n        var mapA = {};\n        var mapB = {};\n\n        makeMap(batchA || [], mapA);\n        makeMap(batchB || [], mapB, mapA);\n\n        return [mapToArray(mapA), mapToArray(mapB)];\n\n        function makeMap(sourceBatch, map, otherMap) {\n            for (var i = 0, len = sourceBatch.length; i < len; i++) {\n                var seriesId = sourceBatch[i].seriesId;\n                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\n                var otherDataIndices = otherMap && otherMap[seriesId];\n\n                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n                    var dataIndex = dataIndices[j];\n\n                    if (otherDataIndices && otherDataIndices[dataIndex]) {\n                        otherDataIndices[dataIndex] = null;\n                    }\n                    else {\n                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n                    }\n                }\n            }\n        }\n\n        function mapToArray(map, isData) {\n            var result = [];\n            for (var i in map) {\n                if (map.hasOwnProperty(i) && map[i] != null) {\n                    if (isData) {\n                        result.push(+i);\n                    }\n                    else {\n                        var dataIndices = mapToArray(map[i], true);\n                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\n                    }\n                }\n            }\n            return result;\n        }\n    };\n\n    /**\n     * @param {module:echarts/data/List} data\n     * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n     *                         each of which can be Array or primary type.\n     * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n     */\n    modelUtil.queryDataIndex = function (data, payload) {\n        if (payload.dataIndexInside != null) {\n            return payload.dataIndexInside;\n        }\n        else if (payload.dataIndex != null) {\n            return zrUtil.isArray(payload.dataIndex)\n                ? zrUtil.map(payload.dataIndex, function (value) {\n                    return data.indexOfRawIndex(value);\n                })\n                : data.indexOfRawIndex(payload.dataIndex);\n        }\n        else if (payload.name != null) {\n            return zrUtil.isArray(payload.name)\n                ? zrUtil.map(payload.name, function (value) {\n                    return data.indexOfName(value);\n                })\n                : data.indexOfName(payload.name);\n        }\n    };\n\n    /**\n     * Enable property storage to any host object.\n     * Notice: Serialization is not supported.\n     *\n     * For example:\n     * var get = modelUitl.makeGetter();\n     *\n     * function some(hostObj) {\n     *      get(hostObj)._someProperty = 1212;\n     *      ...\n     * }\n     *\n     * @return {Function}\n     */\n    modelUtil.makeGetter = (function () {\n        var index = 0;\n        return function () {\n            var key = '\\0__ec_prop_getter_' + index++;\n            return function (hostObj) {\n                return hostObj[key] || (hostObj[key] = {});\n            };\n        };\n    })();\n\n    /**\n     * @param {module:echarts/model/Global} ecModel\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex, seriesId, seriesName,\n     *            geoIndex, geoId, geoName,\n     *            bmapIndex, bmapId, bmapName,\n     *            xAxisIndex, xAxisId, xAxisName,\n     *            yAxisIndex, yAxisId, yAxisName,\n     *            gridIndex, gridId, gridName,\n     *            ... (can be extended)\n     *        }\n     *        Each properties can be number|string|Array.<number>|Array.<string>\n     *        For example, a finder could be\n     *        {\n     *            seriesIndex: 3,\n     *            geoId: ['aa', 'cc'],\n     *            gridName: ['xx', 'rr']\n     *        }\n     *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n     *        If nothing or null/undefined specified, return nothing.\n     * @param {Object} [opt]\n     * @param {string} [opt.defaultMainType]\n     * @param {Array.<string>} [opt.includeMainTypes]\n     * @return {Object} result like:\n     *        {\n     *            seriesModels: [seriesModel1, seriesModel2],\n     *            seriesModel: seriesModel1, // The first model\n     *            geoModels: [geoModel1, geoModel2],\n     *            geoModel: geoModel1, // The first model\n     *            ...\n     *        }\n     */\n    modelUtil.parseFinder = function (ecModel, finder, opt) {\n        if (zrUtil.isString(finder)) {\n            var obj = {};\n            obj[finder + 'Index'] = 0;\n            finder = obj;\n        }\n\n        var defaultMainType = opt && opt.defaultMainType;\n        if (defaultMainType\n            && !has(finder, defaultMainType + 'Index')\n            && !has(finder, defaultMainType + 'Id')\n            && !has(finder, defaultMainType + 'Name')\n        ) {\n            finder[defaultMainType + 'Index'] = 0;\n        }\n\n        var result = {};\n\n        each(finder, function (value, key) {\n            var value = finder[key];\n\n            // Exclude 'dataIndex' and other illgal keys.\n            if (key === 'dataIndex' || key === 'dataIndexInside') {\n                result[key] = value;\n                return;\n            }\n\n            var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n            var mainType = parsedKey[1];\n            var queryType = (parsedKey[2] || '').toLowerCase();\n\n            if (!mainType\n                || !queryType\n                || value == null\n                || (queryType === 'index' && value === 'none')\n                || (opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0)\n            ) {\n                return;\n            }\n\n            var queryParam = {mainType: mainType};\n            if (queryType !== 'index' || value !== 'all') {\n                queryParam[queryType] = value;\n            }\n\n            var models = ecModel.queryComponents(queryParam);\n            result[mainType + 'Models'] = models;\n            result[mainType + 'Model'] = models[0];\n        });\n\n        return result;\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string|number} dataDim\n     * @return {string}\n     */\n    modelUtil.dataDimToCoordDim = function (data, dataDim) {\n        var dimensions = data.dimensions;\n        dataDim = data.getDimension(dataDim);\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimItem = data.getDimensionInfo(dimensions[i]);\n            if (dimItem.name === dataDim) {\n                return dimItem.coordDim;\n            }\n        }\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string} coordDim\n     * @return {Array.<string>} data dimensions on the coordDim.\n     */\n    modelUtil.coordDimToDataDim = function (data, coordDim) {\n        var dataDim = [];\n        each(data.dimensions, function (dimName) {\n            var dimItem = data.getDimensionInfo(dimName);\n            if (dimItem.coordDim === coordDim) {\n                dataDim[dimItem.coordDimIndex] = dimItem.name;\n            }\n        });\n        return dataDim;\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string} otherDim Can be `otherDims`\n     *                        like 'label' or 'tooltip'.\n     * @return {Array.<string>} data dimensions on the otherDim.\n     */\n    modelUtil.otherDimToDataDim = function (data, otherDim) {\n        var dataDim = [];\n        each(data.dimensions, function (dimName) {\n            var dimItem = data.getDimensionInfo(dimName);\n            var otherDims = dimItem.otherDims;\n            var dimIndex = otherDims[otherDim];\n            if (dimIndex != null && dimIndex !== false) {\n                dataDim[dimIndex] = dimItem.name;\n            }\n        });\n        return dataDim;\n    };\n\n    function has(obj, prop) {\n        return obj && obj.hasOwnProperty(prop);\n    }\n\n    module.exports = modelUtil;\n\n\n\n/***/ }),\n/* 610 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 数值处理模块\n * @module echarts/util/number\n */\n\n\n\n    var zrUtil = __webpack_require__(606);\n\n    var number = {};\n\n    var RADIAN_EPSILON = 1e-4;\n\n    function _trim(str) {\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n\n    /**\n     * Linear mapping a value from domain to range\n     * @memberOf module:echarts/util/number\n     * @param  {(number|Array.<number>)} val\n     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n     * @param  {boolean} clamp\n     * @return {(number|Array.<number>}\n     */\n    number.linearMap = function (val, domain, range, clamp) {\n        var subDomain = domain[1] - domain[0];\n        var subRange = range[1] - range[0];\n\n        if (subDomain === 0) {\n            return subRange === 0\n                ? range[0]\n                : (range[0] + range[1]) / 2;\n        }\n\n        // Avoid accuracy problem in edge, such as\n        // 146.39 - 62.83 === 83.55999999999999.\n        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n        // It is a little verbose for efficiency considering this method\n        // is a hotspot.\n        if (clamp) {\n            if (subDomain > 0) {\n                if (val <= domain[0]) {\n                    return range[0];\n                }\n                else if (val >= domain[1]) {\n                    return range[1];\n                }\n            }\n            else {\n                if (val >= domain[0]) {\n                    return range[0];\n                }\n                else if (val <= domain[1]) {\n                    return range[1];\n                }\n            }\n        }\n        else {\n            if (val === domain[0]) {\n                return range[0];\n            }\n            if (val === domain[1]) {\n                return range[1];\n            }\n        }\n\n        return (val - domain[0]) / subDomain * subRange + range[0];\n    };\n\n    /**\n     * Convert a percent string to absolute number.\n     * Returns NaN if percent is not a valid string or number\n     * @memberOf module:echarts/util/number\n     * @param {string|number} percent\n     * @param {number} all\n     * @return {number}\n     */\n    number.parsePercent = function(percent, all) {\n        switch (percent) {\n            case 'center':\n            case 'middle':\n                percent = '50%';\n                break;\n            case 'left':\n            case 'top':\n                percent = '0%';\n                break;\n            case 'right':\n            case 'bottom':\n                percent = '100%';\n                break;\n        }\n        if (typeof percent === 'string') {\n            if (_trim(percent).match(/%$/)) {\n                return parseFloat(percent) / 100 * all;\n            }\n\n            return parseFloat(percent);\n        }\n\n        return percent == null ? NaN : +percent;\n    };\n\n    /**\n     * (1) Fix rounding error of float numbers.\n     * (2) Support return string to avoid scientific notation like '3.5e-7'.\n     *\n     * @param {number} x\n     * @param {number} [precision]\n     * @param {boolean} [returnStr]\n     * @return {number|string}\n     */\n    number.round = function (x, precision, returnStr) {\n        if (precision == null) {\n            precision = 10;\n        }\n        // Avoid range error\n        precision = Math.min(Math.max(0, precision), 20);\n        x = (+x).toFixed(precision);\n        return returnStr ? x : +x;\n    };\n\n    number.asc = function (arr) {\n        arr.sort(function (a, b) {\n            return a - b;\n        });\n        return arr;\n    };\n\n    /**\n     * Get precision\n     * @param {number} val\n     */\n    number.getPrecision = function (val) {\n        val = +val;\n        if (isNaN(val)) {\n            return 0;\n        }\n        // It is much faster than methods converting number to string as follows\n        //      var tmp = val.toString();\n        //      return tmp.length - 1 - tmp.indexOf('.');\n        // especially when precision is low\n        var e = 1;\n        var count = 0;\n        while (Math.round(val * e) / e !== val) {\n            e *= 10;\n            count++;\n        }\n        return count;\n    };\n\n    /**\n     * @param {string|number} val\n     * @return {number}\n     */\n    number.getPrecisionSafe = function (val) {\n        var str = val.toString();\n\n        // Consider scientific notation: '3.4e-12' '3.4e+12'\n        var eIndex = str.indexOf('e');\n        if (eIndex > 0) {\n            var precision = +str.slice(eIndex + 1);\n            return precision < 0 ? -precision : 0;\n        }\n        else {\n            var dotIndex = str.indexOf('.');\n            return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n        }\n    };\n\n    /**\n     * Minimal dicernible data precisioin according to a single pixel.\n     *\n     * @param {Array.<number>} dataExtent\n     * @param {Array.<number>} pixelExtent\n     * @return {number} precision\n     */\n    number.getPixelPrecision = function (dataExtent, pixelExtent) {\n        var log = Math.log;\n        var LN10 = Math.LN10;\n        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n        // toFixed() digits argument must be between 0 and 20.\n        var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n        return !isFinite(precision) ? 20 : precision;\n    };\n\n    /**\n     * Get a data of given precision, assuring the sum of percentages\n     * in valueList is 1.\n     * The largest remainer method is used.\n     * https://en.wikipedia.org/wiki/Largest_remainder_method\n     *\n     * @param {Array.<number>} valueList a list of all data\n     * @param {number} idx index of the data to be processed in valueList\n     * @param {number} precision integer number showing digits of precision\n     * @return {number} percent ranging from 0 to 100\n     */\n    number.getPercentWithPrecision = function (valueList, idx, precision) {\n        if (!valueList[idx]) {\n            return 0;\n        }\n\n        var sum = zrUtil.reduce(valueList, function (acc, val) {\n            return acc + (isNaN(val) ? 0 : val);\n        }, 0);\n        if (sum === 0) {\n            return 0;\n        }\n\n        var digits = Math.pow(10, precision);\n        var votesPerQuota = zrUtil.map(valueList, function (val) {\n            return (isNaN(val) ? 0 : val) / sum * digits * 100;\n        });\n        var targetSeats = digits * 100;\n\n        var seats = zrUtil.map(votesPerQuota, function (votes) {\n            // Assign automatic seats.\n            return Math.floor(votes);\n        });\n        var currentSum = zrUtil.reduce(seats, function (acc, val) {\n            return acc + val;\n        }, 0);\n\n        var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n            return votes - seats[idx];\n        });\n\n        // Has remainding votes.\n        while (currentSum < targetSeats) {\n            // Find next largest remainder.\n            var max = Number.NEGATIVE_INFINITY;\n            var maxId = null;\n            for (var i = 0, len = remainder.length; i < len; ++i) {\n                if (remainder[i] > max) {\n                    max = remainder[i];\n                    maxId = i;\n                }\n            }\n\n            // Add a vote to max remainder.\n            ++seats[maxId];\n            remainder[maxId] = 0;\n            ++currentSum;\n        }\n\n        return seats[idx] / digits;\n    };\n\n    // Number.MAX_SAFE_INTEGER, ie do not support.\n    number.MAX_SAFE_INTEGER = 9007199254740991;\n\n    /**\n     * To 0 - 2 * PI, considering negative radian.\n     * @param {number} radian\n     * @return {number}\n     */\n    number.remRadian = function (radian) {\n        var pi2 = Math.PI * 2;\n        return (radian % pi2 + pi2) % pi2;\n    };\n\n    /**\n     * @param {type} radian\n     * @return {boolean}\n     */\n    number.isRadianAroundZero = function (val) {\n        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n    };\n\n    var TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n    /**\n     * @return {number} in minutes\n     */\n    number.getTimezoneOffset = function () {\n        return (new Date()).getTimezoneOffset();\n    };\n\n    /**\n     * @param {string|Date|number} value These values can be accepted:\n     *   + An instance of Date, represent a time in its own time zone.\n     *   + Or string in a subset of ISO 8601, only including:\n     *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n     *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n     *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n     *     all of which will be treated as local time if time zone is not specified\n     *     (see <https://momentjs.com/>).\n     *   + Or other string format, including (all of which will be treated as loacal time):\n     *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n     *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n     *   + a timestamp, which represent a time in UTC.\n     * @return {Date} date\n     */\n    number.parseDate = function (value) {\n        if (value instanceof Date) {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            // Different browsers parse date in different way, so we parse it manually.\n            // Some other issues:\n            // new Date('1970-01-01') is UTC,\n            // new Date('1970/01/01') and new Date('1970-1-01') is local.\n            // See issue #3623\n            var match = TIME_REG.exec(value);\n\n            if (!match) {\n                // return Invalid Date.\n                return new Date(NaN);\n            }\n\n            var timezoneOffset = number.getTimezoneOffset();\n            var timeOffset = !match[8]\n                ? 0\n                : match[8].toUpperCase() === 'Z'\n                ? timezoneOffset\n                : +match[8].slice(0, 3) * 60 + timezoneOffset;\n\n            // match[n] can only be string or undefined.\n            // But take care of '12' + 1 => '121'.\n            return new Date(\n                +match[1],\n                +(match[2] || 1) - 1,\n                +match[3] || 1,\n                +match[4] || 0,\n                +(match[5] || 0) - timeOffset,\n                +match[6] || 0,\n                +match[7] || 0\n            );\n        }\n        else if (value == null) {\n            return new Date(NaN);\n        }\n\n        return new Date(Math.round(value));\n    };\n\n    /**\n     * Quantity of a number. e.g. 0.1, 1, 10, 100\n     *\n     * @param  {number} val\n     * @return {number}\n     */\n    number.quantity = function (val) {\n        return Math.pow(10, quantityExponent(val));\n    };\n\n    function quantityExponent(val) {\n        return Math.floor(Math.log(val) / Math.LN10);\n    }\n\n    /**\n     * find a “nice” number approximately equal to x. Round the number if round = true,\n     * take ceiling if round = false. The primary observation is that the “nicest”\n     * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n     *\n     * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n     *\n     * @param  {number} val Non-negative value.\n     * @param  {boolean} round\n     * @return {number}\n     */\n    number.nice = function (val, round) {\n        var exponent = quantityExponent(val);\n        var exp10 = Math.pow(10, exponent);\n        var f = val / exp10; // 1 <= f < 10\n        var nf;\n        if (round) {\n            if (f < 1.5) { nf = 1; }\n            else if (f < 2.5) { nf = 2; }\n            else if (f < 4) { nf = 3; }\n            else if (f < 7) { nf = 5; }\n            else { nf = 10; }\n        }\n        else {\n            if (f < 1) { nf = 1; }\n            else if (f < 2) { nf = 2; }\n            else if (f < 3) { nf = 3; }\n            else if (f < 5) { nf = 5; }\n            else { nf = 10; }\n        }\n        val = nf * exp10;\n\n        // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n        // 20 is the uppper bound of toFixed.\n        return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n    };\n\n    /**\n     * Order intervals asc, and split them when overlap.\n     * expect(numberUtil.reformIntervals([\n     *     {interval: [18, 62], close: [1, 1]},\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [1, 1]},\n     *     {interval: [62, 150], close: [1, 1]},\n     *     {interval: [106, 150], close: [1, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ])).toEqual([\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [0, 1]},\n     *     {interval: [18, 62], close: [0, 1]},\n     *     {interval: [62, 150], close: [0, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ]);\n     * @param {Array.<Object>} list, where `close` mean open or close\n     *        of the interval, and Infinity can be used.\n     * @return {Array.<Object>} The origin list, which has been reformed.\n     */\n    number.reformIntervals = function (list) {\n        list.sort(function (a, b) {\n            return littleThan(a, b, 0) ? -1 : 1;\n        });\n\n        var curr = -Infinity;\n        var currClose = 1;\n        for (var i = 0; i < list.length;) {\n            var interval = list[i].interval;\n            var close = list[i].close;\n\n            for (var lg = 0; lg < 2; lg++) {\n                if (interval[lg] <= curr) {\n                    interval[lg] = curr;\n                    close[lg] = !lg ? 1 - currClose : 1;\n                }\n                curr = interval[lg];\n                currClose = close[lg];\n            }\n\n            if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n                list.splice(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n\n        return list;\n\n        function littleThan(a, b, lg) {\n            return a.interval[lg] < b.interval[lg]\n                || (\n                    a.interval[lg] === b.interval[lg]\n                    && (\n                        (a.close[lg] - b.close[lg] === (!lg ? 1 : -1))\n                        || (!lg && littleThan(a, b, 1))\n                    )\n                );\n        }\n    };\n\n    /**\n     * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n     * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n     * subtraction forces infinities to NaN\n     *\n     * @param {*} v\n     * @return {boolean}\n     */\n    number.isNumeric = function (v) {\n        return v - parseFloat(v) >= 0;\n    };\n\n    module.exports = number;\n\n\n/***/ }),\n/* 611 */\n/***/ (function(module, exports) {\n\n\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n\n    /**\n     * @typedef {Float32Array|Array.<number>} Vector2\n     */\n    /**\n     * 二维向量类\n     * @exports zrender/tool/vector\n     */\n    var vector = {\n        /**\n         * 创建一个向量\n         * @param {number} [x=0]\n         * @param {number} [y=0]\n         * @return {Vector2}\n         */\n        create: function (x, y) {\n            var out = new ArrayCtor(2);\n            if (x == null) {\n                x = 0;\n            }\n            if (y == null) {\n                y = 0;\n            }\n            out[0] = x;\n            out[1] = y;\n            return out;\n        },\n\n        /**\n         * 复制向量数据\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        copy: function (out, v) {\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 克隆一个向量\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        clone: function (v) {\n            var out = new ArrayCtor(2);\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 设置向量的两个项\n         * @param {Vector2} out\n         * @param {number} a\n         * @param {number} b\n         * @return {Vector2} 结果\n         */\n        set: function (out, a, b) {\n            out[0] = a;\n            out[1] = b;\n            return out;\n        },\n\n        /**\n         * 向量相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        add: function (out, v1, v2) {\n            out[0] = v1[0] + v2[0];\n            out[1] = v1[1] + v2[1];\n            return out;\n        },\n\n        /**\n         * 向量缩放后相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} a\n         */\n        scaleAndAdd: function (out, v1, v2, a) {\n            out[0] = v1[0] + v2[0] * a;\n            out[1] = v1[1] + v2[1] * a;\n            return out;\n        },\n\n        /**\n         * 向量相减\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        sub: function (out, v1, v2) {\n            out[0] = v1[0] - v2[0];\n            out[1] = v1[1] - v2[1];\n            return out;\n        },\n\n        /**\n         * 向量长度\n         * @param {Vector2} v\n         * @return {number}\n         */\n        len: function (v) {\n            return Math.sqrt(this.lenSquare(v));\n        },\n\n        /**\n         * 向量长度平方\n         * @param {Vector2} v\n         * @return {number}\n         */\n        lenSquare: function (v) {\n            return v[0] * v[0] + v[1] * v[1];\n        },\n\n        /**\n         * 向量乘法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        mul: function (out, v1, v2) {\n            out[0] = v1[0] * v2[0];\n            out[1] = v1[1] * v2[1];\n            return out;\n        },\n\n        /**\n         * 向量除法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        div: function (out, v1, v2) {\n            out[0] = v1[0] / v2[0];\n            out[1] = v1[1] / v2[1];\n            return out;\n        },\n\n        /**\n         * 向量点乘\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        dot: function (v1, v2) {\n            return v1[0] * v2[0] + v1[1] * v2[1];\n        },\n\n        /**\n         * 向量缩放\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {number} s\n         */\n        scale: function (out, v, s) {\n            out[0] = v[0] * s;\n            out[1] = v[1] * s;\n            return out;\n        },\n\n        /**\n         * 向量归一化\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        normalize: function (out, v) {\n            var d = vector.len(v);\n            if (d === 0) {\n                out[0] = 0;\n                out[1] = 0;\n            }\n            else {\n                out[0] = v[0] / d;\n                out[1] = v[1] / d;\n            }\n            return out;\n        },\n\n        /**\n         * 计算向量间距离\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distance: function (v1, v2) {\n            return Math.sqrt(\n                (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1])\n            );\n        },\n\n        /**\n         * 向量距离平方\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distanceSquare: function (v1, v2) {\n            return (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n        },\n\n        /**\n         * 求负向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        negate: function (out, v) {\n            out[0] = -v[0];\n            out[1] = -v[1];\n            return out;\n        },\n\n        /**\n         * 插值两个点\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} t\n         */\n        lerp: function (out, v1, v2, t) {\n            out[0] = v1[0] + t * (v2[0] - v1[0]);\n            out[1] = v1[1] + t * (v2[1] - v1[1]);\n            return out;\n        },\n\n        /**\n         * 矩阵左乘向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {Vector2} m\n         */\n        applyTransform: function (out, v, m) {\n            var x = v[0];\n            var y = v[1];\n            out[0] = m[0] * x + m[2] * y + m[4];\n            out[1] = m[1] * x + m[3] * y + m[5];\n            return out;\n        },\n        /**\n         * 求两个向量最小值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        min: function (out, v1, v2) {\n            out[0] = Math.min(v1[0], v2[0]);\n            out[1] = Math.min(v1[1], v2[1]);\n            return out;\n        },\n        /**\n         * 求两个向量最大值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        max: function (out, v1, v2) {\n            out[0] = Math.max(v1[0], v2[0]);\n            out[1] = Math.max(v1[1], v2[1]);\n            return out;\n        }\n    };\n\n    vector.length = vector.len;\n    vector.lengthSquare = vector.lenSquare;\n    vector.dist = vector.distance;\n    vector.distSquare = vector.distanceSquare;\n\n    module.exports = vector;\n\n\n\n/***/ }),\n/* 612 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Path element\n * @module zrender/graphic/Path\n */\n\n\n\n    var Displayable = __webpack_require__(644);\n    var zrUtil = __webpack_require__(606);\n    var PathProxy = __webpack_require__(635);\n    var pathContain = __webpack_require__(776);\n\n    var Pattern = __webpack_require__(675);\n    var getCanvasPattern = Pattern.prototype.getCanvasPattern;\n\n    var abs = Math.abs;\n\n    var pathProxyForDraw = new PathProxy(true);\n    /**\n     * @alias module:zrender/graphic/Path\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function Path(opts) {\n        Displayable.call(this, opts);\n\n        /**\n         * @type {module:zrender/core/PathProxy}\n         * @readOnly\n         */\n        this.path = null;\n    }\n\n    Path.prototype = {\n\n        constructor: Path,\n\n        type: 'path',\n\n        __dirtyPath: true,\n\n        strokeContainThreshold: 5,\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var path = this.path || pathProxyForDraw;\n            var hasStroke = style.hasStroke();\n            var hasFill = style.hasFill();\n            var fill = style.fill;\n            var stroke = style.stroke;\n            var hasFillGradient = hasFill && !!(fill.colorStops);\n            var hasStrokeGradient = hasStroke && !!(stroke.colorStops);\n            var hasFillPattern = hasFill && !!(fill.image);\n            var hasStrokePattern = hasStroke && !!(stroke.image);\n\n            style.bind(ctx, this, prevEl);\n            this.setTransform(ctx);\n\n            if (this.__dirty) {\n                var rect;\n                // Update gradient because bounding rect may changed\n                if (hasFillGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._fillGradient = style.getGradient(ctx, fill, rect);\n                }\n                if (hasStrokeGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._strokeGradient = style.getGradient(ctx, stroke, rect);\n                }\n            }\n            // Use the gradient or pattern\n            if (hasFillGradient) {\n                // PENDING If may have affect the state\n                ctx.fillStyle = this._fillGradient;\n            }\n            else if (hasFillPattern) {\n                ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n            }\n            if (hasStrokeGradient) {\n                ctx.strokeStyle = this._strokeGradient;\n            }\n            else if (hasStrokePattern) {\n                ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n            }\n\n            var lineDash = style.lineDash;\n            var lineDashOffset = style.lineDashOffset;\n\n            var ctxLineDash = !!ctx.setLineDash;\n\n            // Update path sx, sy\n            var scale = this.getGlobalScale();\n            path.setScale(scale[0], scale[1]);\n\n            // Proxy context\n            // Rebuild path in following 2 cases\n            // 1. Path is dirty\n            // 2. Path needs javascript implemented lineDash stroking.\n            //    In this case, lineDash information will not be saved in PathProxy\n            if (this.__dirtyPath\n                || (lineDash && !ctxLineDash && hasStroke)\n            ) {\n                path.beginPath(ctx);\n\n                // Setting line dash before build path\n                if (lineDash && !ctxLineDash) {\n                    path.setLineDash(lineDash);\n                    path.setLineDashOffset(lineDashOffset);\n                }\n\n                this.buildPath(path, this.shape, false);\n\n                // Clear path dirty flag\n                if (this.path) {\n                    this.__dirtyPath = false;\n                }\n            }\n            else {\n                // Replay path building\n                ctx.beginPath();\n                this.path.rebuildPath(ctx);\n            }\n\n            hasFill && path.fill(ctx);\n\n            if (lineDash && ctxLineDash) {\n                ctx.setLineDash(lineDash);\n                ctx.lineDashOffset = lineDashOffset;\n            }\n\n            hasStroke && path.stroke(ctx);\n\n            if (lineDash && ctxLineDash) {\n                // PENDING\n                // Remove lineDash\n                ctx.setLineDash([]);\n            }\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n        // Like in circle\n        buildPath: function (ctx, shapeCfg, inBundle) {},\n\n        createPathProxy: function () {\n            this.path = new PathProxy();\n        },\n\n        getBoundingRect: function () {\n            var rect = this._rect;\n            var style = this.style;\n            var needsUpdateRect = !rect;\n            if (needsUpdateRect) {\n                var path = this.path;\n                if (!path) {\n                    // Create path on demand.\n                    path = this.path = new PathProxy();\n                }\n                if (this.__dirtyPath) {\n                    path.beginPath();\n                    this.buildPath(path, this.shape, false);\n                }\n                rect = path.getBoundingRect();\n            }\n            this._rect = rect;\n\n            if (style.hasStroke()) {\n                // Needs update rect with stroke lineWidth when\n                // 1. Element changes scale or lineWidth\n                // 2. Shape is changed\n                var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n                if (this.__dirty || needsUpdateRect) {\n                    rectWithStroke.copy(rect);\n                    // FIXME Must after updateTransform\n                    var w = style.lineWidth;\n                    // PENDING, Min line width is needed when line is horizontal or vertical\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n\n                    // Only add extra hover lineWidth when there are no fill\n                    if (!style.hasFill()) {\n                        w = Math.max(w, this.strokeContainThreshold || 4);\n                    }\n                    // Consider line width\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        rectWithStroke.width += w / lineScale;\n                        rectWithStroke.height += w / lineScale;\n                        rectWithStroke.x -= w / lineScale / 2;\n                        rectWithStroke.y -= w / lineScale / 2;\n                    }\n                }\n\n                // Return rect with stroke\n                return rectWithStroke;\n            }\n\n            return rect;\n        },\n\n        contain: function (x, y) {\n            var localPos = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            var style = this.style;\n            x = localPos[0];\n            y = localPos[1];\n\n            if (rect.contain(x, y)) {\n                var pathData = this.path.data;\n                if (style.hasStroke()) {\n                    var lineWidth = style.lineWidth;\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        // Only add extra hover lineWidth when there are no fill\n                        if (!style.hasFill()) {\n                            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n                        }\n                        if (pathContain.containStroke(\n                            pathData, lineWidth / lineScale, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                }\n                if (style.hasFill()) {\n                    return pathContain.contain(pathData, x, y);\n                }\n            }\n            return false;\n        },\n\n        /**\n         * @param  {boolean} dirtyPath\n         */\n        dirty: function (dirtyPath) {\n            if (dirtyPath == null) {\n                dirtyPath = true;\n            }\n            // Only mark dirty, not mark clean\n            if (dirtyPath) {\n                this.__dirtyPath = dirtyPath;\n                this._rect = null;\n            }\n\n            this.__dirty = true;\n\n            this.__zr && this.__zr.refresh();\n\n            // Used as a clipping path\n            if (this.__clipTarget) {\n                this.__clipTarget.dirty();\n            }\n        },\n\n        /**\n         * Alias for animate('shape')\n         * @param {boolean} loop\n         */\n        animateShape: function (loop) {\n            return this.animate('shape', loop);\n        },\n\n        // Overwrite attrKV\n        attrKV: function (key, value) {\n            // FIXME\n            if (key === 'shape') {\n                this.setShape(value);\n                this.__dirtyPath = true;\n                this._rect = null;\n            }\n            else {\n                Displayable.prototype.attrKV.call(this, key, value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setShape: function (key, value) {\n            var shape = this.shape;\n            // Path from string may not have shape\n            if (shape) {\n                if (zrUtil.isObject(key)) {\n                    for (var name in key) {\n                        if (key.hasOwnProperty(name)) {\n                            shape[name] = key[name];\n                        }\n                    }\n                }\n                else {\n                    shape[key] = value;\n                }\n                this.dirty(true);\n            }\n            return this;\n        },\n\n        getLineScale: function () {\n            var m = this.transform;\n            // Get the line scale.\n            // Determinant of `m` means how much the area is enlarged by the\n            // transformation. So its square root can be used as a scale factor\n            // for width.\n            return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\n                ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\n                : 1;\n        }\n    };\n\n    /**\n     * 扩展一个 Path element, 比如星形，圆等。\n     * Extend a path element\n     * @param {Object} props\n     * @param {string} props.type Path type\n     * @param {Function} props.init Initialize\n     * @param {Function} props.buildPath Overwrite buildPath method\n     * @param {Object} [props.style] Extended default style config\n     * @param {Object} [props.shape] Extended default shape config\n     */\n    Path.extend = function (defaults) {\n        var Sub = function (opts) {\n            Path.call(this, opts);\n\n            if (defaults.style) {\n                // Extend default style\n                this.style.extendFrom(defaults.style, false);\n            }\n\n            // Extend default shape\n            var defaultShape = defaults.shape;\n            if (defaultShape) {\n                this.shape = this.shape || {};\n                var thisShape = this.shape;\n                for (var name in defaultShape) {\n                    if (\n                        ! thisShape.hasOwnProperty(name)\n                        && defaultShape.hasOwnProperty(name)\n                    ) {\n                        thisShape[name] = defaultShape[name];\n                    }\n                }\n            }\n\n            defaults.init && defaults.init.call(this, opts);\n        };\n\n        zrUtil.inherits(Sub, Path);\n\n        // FIXME 不能 extend position, rotation 等引用对象\n        for (var name in defaults) {\n            // Extending prototype values and methods\n            if (name !== 'style' && name !== 'shape') {\n                Sub.prototype[name] = defaults[name];\n            }\n        }\n\n        return Sub;\n    };\n\n    zrUtil.inherits(Path, Displayable);\n\n    module.exports = Path;\n\n\n/***/ }),\n/* 613 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var numberUtil = __webpack_require__(610);\n    var textContain = __webpack_require__(621);\n\n    var formatUtil = {};\n\n    /**\n     * 每三位默认加,格式化\n     * @param {string|number} x\n     * @return {string}\n     */\n    formatUtil.addCommas = function (x) {\n        if (isNaN(x)) {\n            return '-';\n        }\n        x = (x + '').split('.');\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\n               + (x.length > 1 ? ('.' + x[1]) : '');\n    };\n\n    /**\n     * @param {string} str\n     * @param {boolean} [upperCaseFirst=false]\n     * @return {string} str\n     */\n    formatUtil.toCamelCase = function (str, upperCaseFirst) {\n        str = (str || '').toLowerCase().replace(/-(.)/g, function(match, group1) {\n            return group1.toUpperCase();\n        });\n\n        if (upperCaseFirst && str) {\n            str = str.charAt(0).toUpperCase() + str.slice(1);\n        }\n\n        return str;\n    };\n\n    formatUtil.normalizeCssArray = zrUtil.normalizeCssArray;\n\n    var encodeHTML = formatUtil.encodeHTML = function (source) {\n        return String(source)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    };\n\n    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\n    var wrapVar = function (varName, seriesIdx) {\n        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n    };\n\n    /**\n     * Template formatter\n     * @param {string} tpl\n     * @param {Array.<Object>|Object} paramsList\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTpl = function (tpl, paramsList, encode) {\n        if (!zrUtil.isArray(paramsList)) {\n            paramsList = [paramsList];\n        }\n        var seriesLen = paramsList.length;\n        if (!seriesLen) {\n            return '';\n        }\n\n        var $vars = paramsList[0].$vars || [];\n        for (var i = 0; i < $vars.length; i++) {\n            var alias = TPL_VAR_ALIAS[i];\n            var val = wrapVar(alias, 0);\n            tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n        }\n        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n            for (var k = 0; k < $vars.length; k++) {\n                var val = paramsList[seriesIdx][$vars[k]];\n                tpl = tpl.replace(\n                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\n                    encode ? encodeHTML(val) : val\n                );\n            }\n        }\n\n        return tpl;\n    };\n\n    /**\n     * simple Template formatter\n     *\n     * @param {string} tpl\n     * @param {Object} param\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTplSimple = function (tpl, param, encode) {\n        zrUtil.each(param, function (value, key) {\n            tpl = tpl.replace(\n                '{' + key + '}',\n                encode ? encodeHTML(value) : value\n            );\n        });\n        return tpl;\n    };\n\n    /**\n     * @param {string} color\n     * @param {string} [extraCssText]\n     * @return {string}\n     */\n    formatUtil.getTooltipMarker = function (color, extraCssText) {\n        return color\n            ? '<span style=\"display:inline-block;margin-right:5px;'\n                + 'border-radius:10px;width:9px;height:9px;background-color:'\n                + formatUtil.encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>'\n            : '';\n    };\n\n    /**\n     * @param {string} str\n     * @return {string}\n     * @inner\n     */\n    var s2d = function (str) {\n        return str < 10 ? ('0' + str) : str;\n    };\n\n    /**\n     * ISO Date format\n     * @param {string} tpl\n     * @param {number} value\n     * @param {boolean} [isUTC=false] Default in local time.\n     *           see `module:echarts/scale/Time`\n     *           and `module:echarts/util/number#parseDate`.\n     * @inner\n     */\n    formatUtil.formatTime = function (tpl, value, isUTC) {\n        if (tpl === 'week'\n            || tpl === 'month'\n            || tpl === 'quarter'\n            || tpl === 'half-year'\n            || tpl === 'year'\n        ) {\n            tpl = 'MM-dd\\nyyyy';\n        }\n\n        var date = numberUtil.parseDate(value);\n        var utc = isUTC ? 'UTC' : '';\n        var y = date['get' + utc + 'FullYear']();\n        var M = date['get' + utc + 'Month']() + 1;\n        var d = date['get' + utc + 'Date']();\n        var h = date['get' + utc + 'Hours']();\n        var m = date['get' + utc + 'Minutes']();\n        var s = date['get' + utc + 'Seconds']();\n\n        tpl = tpl.replace('MM', s2d(M))\n            .replace('M', M)\n            .replace('yyyy', y)\n            .replace('yy', y % 100)\n            .replace('dd', s2d(d))\n            .replace('d', d)\n            .replace('hh', s2d(h))\n            .replace('h', h)\n            .replace('mm', s2d(m))\n            .replace('m', m)\n            .replace('ss', s2d(s))\n            .replace('s', s);\n\n        return tpl;\n    };\n\n    /**\n     * Capital first\n     * @param {string} str\n     * @return {string}\n     */\n    formatUtil.capitalFirst = function (str) {\n        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n    };\n\n    formatUtil.truncateText = textContain.truncateText;\n\n    formatUtil.getTextRect = textContain.getBoundingRect;\n\n    module.exports = formatUtil;\n\n\n\n/***/ }),\n/* 614 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/model/Model\n */\n\n\n    var zrUtil = __webpack_require__(606);\n    var clazzUtil = __webpack_require__(616);\n    var env = __webpack_require__(615);\n\n    /**\n     * @alias module:echarts/model/Model\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} [parentModel]\n     * @param {module:echarts/model/Global} [ecModel]\n     */\n    function Model(option, parentModel, ecModel) {\n        /**\n         * @type {module:echarts/model/Model}\n         * @readOnly\n         */\n        this.parentModel = parentModel;\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        this.option = option;\n\n        // Simple optimization\n        // if (this.init) {\n        //     if (arguments.length <= 4) {\n        //         this.init(option, parentModel, ecModel, extraOpt);\n        //     }\n        //     else {\n        //         this.init.apply(this, arguments);\n        //     }\n        // }\n    }\n\n    Model.prototype = {\n\n        constructor: Model,\n\n        /**\n         * Model 的初始化函数\n         * @param {Object} option\n         */\n        init: null,\n\n        /**\n         * 从新的 Option merge\n         */\n        mergeOption: function (option) {\n            zrUtil.merge(this.option, option, true);\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        get: function (path, ignoreParent) {\n            if (path == null) {\n                return this.option;\n            }\n\n            return doGet(\n                this.option,\n                this.parsePath(path),\n                !ignoreParent && getParent(this, path)\n            );\n        },\n\n        /**\n         * @param {string} key\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        getShallow: function (key, ignoreParent) {\n            var option = this.option;\n\n            var val = option == null ? option : option[key];\n            var parentModel = !ignoreParent && getParent(this, key);\n            if (val == null && parentModel) {\n                val = parentModel.getShallow(key);\n            }\n            return val;\n        },\n\n        /**\n         * @param {string|Array.<string>} [path]\n         * @param {module:echarts/model/Model} [parentModel]\n         * @return {module:echarts/model/Model}\n         */\n        getModel: function (path, parentModel) {\n            var obj = path == null\n                ? this.option\n                : doGet(this.option, path = this.parsePath(path));\n\n            var thisParentModel;\n            parentModel = parentModel || (\n                (thisParentModel = getParent(this, path))\n                    && thisParentModel.getModel(path)\n            );\n\n            return new Model(obj, parentModel, this.ecModel);\n        },\n\n        /**\n         * If model has option\n         */\n        isEmpty: function () {\n            return this.option == null;\n        },\n\n        restoreData: function () {},\n\n        // Pending\n        clone: function () {\n            var Ctor = this.constructor;\n            return new Ctor(zrUtil.clone(this.option));\n        },\n\n        setReadOnly: function (properties) {\n            clazzUtil.setReadOnly(this, properties);\n        },\n\n        // If path is null/undefined, return null/undefined.\n        parsePath: function(path) {\n            if (typeof path === 'string') {\n                path = path.split('.');\n            }\n            return path;\n        },\n\n        /**\n         * @param {Function} getParentMethod\n         *        param {Array.<string>|string} path\n         *        return {module:echarts/model/Model}\n         */\n        customizeGetParent: function (getParentMethod) {\n            clazzUtil.set(this, 'getParent', getParentMethod);\n        },\n\n        isAnimationEnabled: function () {\n            if (!env.node) {\n                if (this.option.animation != null) {\n                    return !!this.option.animation;\n                }\n                else if (this.parentModel) {\n                    return this.parentModel.isAnimationEnabled();\n                }\n            }\n        }\n    };\n\n    function doGet(obj, pathArr, parentModel) {\n        for (var i = 0; i < pathArr.length; i++) {\n            // Ignore empty\n            if (!pathArr[i]) {\n                continue;\n            }\n            // obj could be number/string/... (like 0)\n            obj = (obj && typeof obj === 'object') ? obj[pathArr[i]] : null;\n            if (obj == null) {\n                break;\n            }\n        }\n        if (obj == null && parentModel) {\n            obj = parentModel.get(pathArr);\n        }\n        return obj;\n    }\n\n    // `path` can be null/undefined\n    function getParent(model, path) {\n        var getParentMethod = clazzUtil.get(model, 'getParent');\n        return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n    }\n\n    // Enable Model.extend.\n    clazzUtil.enableClassExtend(Model);\n\n    var mixin = zrUtil.mixin;\n    mixin(Model, __webpack_require__(749));\n    mixin(Model, __webpack_require__(746));\n    mixin(Model, __webpack_require__(750));\n    mixin(Model, __webpack_require__(748));\n\n    module.exports = Model;\n\n\n/***/ }),\n/* 615 */\n/***/ (function(module, exports) {\n\n/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\n\n    var env = {};\n    if (typeof navigator === 'undefined') {\n        // In node\n        env = {\n            browser: {},\n            os: {},\n            node: true,\n            // Assume canvas is supported\n            canvasSupported: true\n        };\n    }\n    else {\n        env = detect(navigator.userAgent);\n    }\n\n    module.exports = env;\n\n    // Zepto.js\n    // (c) 2010-2013 Thomas Fuchs\n    // Zepto.js may be freely distributed under the MIT license.\n\n    function detect(ua) {\n        var os = {};\n        var browser = {};\n        // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n        // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n        // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n        // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n        // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n        // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n        // var touchpad = webos && ua.match(/TouchPad/);\n        // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n        // var silk = ua.match(/Silk\\/([\\d._]+)/);\n        // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n        // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n        // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n        // var playbook = ua.match(/PlayBook/);\n        // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n        var firefox = ua.match(/Firefox\\/([\\d.]+)/);\n        // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n        // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n        var ie = ua.match(/MSIE\\s([\\d.]+)/)\n            // IE 11 Trident/7.0; rv:11.0\n            || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n        var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n        var weChat = (/micromessenger/i).test(ua);\n\n        // Todo: clean this up with a better OS/browser seperation:\n        // - discern (more) between multiple browsers on android\n        // - decide if kindle fire in silk mode is android or not\n        // - Firefox on Android doesn't specify the Android version\n        // - possibly devide in os, device and browser hashes\n\n        // if (browser.webkit = !!webkit) browser.version = webkit[1];\n\n        // if (android) os.android = true, os.version = android[2];\n        // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n        // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n        // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n        // if (webos) os.webos = true, os.version = webos[2];\n        // if (touchpad) os.touchpad = true;\n        // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n        // if (bb10) os.bb10 = true, os.version = bb10[2];\n        // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n        // if (playbook) browser.playbook = true;\n        // if (kindle) os.kindle = true, os.version = kindle[1];\n        // if (silk) browser.silk = true, browser.version = silk[1];\n        // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n        // if (chrome) browser.chrome = true, browser.version = chrome[1];\n        if (firefox) {\n            browser.firefox = true;\n            browser.version = firefox[1];\n        }\n        // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n        // if (webview) browser.webview = true;\n\n        if (ie) {\n            browser.ie = true;\n            browser.version = ie[1];\n        }\n\n        if (edge) {\n            browser.edge = true;\n            browser.version = edge[1];\n        }\n\n        // It is difficult to detect WeChat in Win Phone precisely, because ua can\n        // not be set on win phone. So we do not consider Win Phone.\n        if (weChat) {\n            browser.weChat = true;\n        }\n\n        // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n        //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n        // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n        //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n        //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n        return {\n            browser: browser,\n            os: os,\n            node: false,\n            // 原生canvas支持，改极端点了\n            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n            canvasSupported : document.createElement('canvas').getContext ? true : false,\n            // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n            // works on most browsers\n            // IE10/11 does not support touch event, and MS Edge supports them but not by\n            // default, so we dont check navigator.maxTouchPoints for them here.\n            touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n            // <http://caniuse.com/#search=pointer%20event>.\n            pointerEventsSupported: 'onpointerdown' in window\n                // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n                // events currently. So we dont use that on other browsers unless tested sufficiently.\n                // Although IE 10 supports pointer event, it use old style and is different from the\n                // standard. So we exclude that. (IE 10 is hardly used on touch device)\n                && (browser.edge || (browser.ie && browser.version >= 11))\n        };\n    }\n\n\n/***/ }),\n/* 616 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(606);\n\n    var clazz = {};\n\n    var TYPE_DELIMITER = '.';\n    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n    var MEMBER_PRIFIX = '\\0ec_\\0';\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name] = value;` (can be right-value)\n     * @public\n     */\n    clazz.set = function (host, name, value) {\n        return (host[MEMBER_PRIFIX + name] = value);\n    };\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name];`\n     * @public\n     */\n    clazz.get = function (host, name) {\n        return host[MEMBER_PRIFIX + name];\n    };\n\n    /**\n     * For hidden private class member.\n     * The same behavior as `host.hasOwnProperty(name);`\n     * @public\n     */\n    clazz.hasOwn = function (host, name) {\n        return host.hasOwnProperty(MEMBER_PRIFIX + name);\n    };\n\n    /**\n     * Notice, parseClassType('') should returns {main: '', sub: ''}\n     * @public\n     */\n    var parseClassType = clazz.parseClassType = function (componentType) {\n        var ret = {main: '', sub: ''};\n        if (componentType) {\n            componentType = componentType.split(TYPE_DELIMITER);\n            ret.main = componentType[0] || '';\n            ret.sub = componentType[1] || '';\n        }\n        return ret;\n    };\n\n    /**\n     * @public\n     */\n    function checkClassType(componentType) {\n        zrUtil.assert(\n            /^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType),\n            'componentType \"' + componentType + '\" illegal'\n        );\n    }\n\n    /**\n     * @public\n     */\n    clazz.enableClassExtend = function (RootClass, mandatoryMethods) {\n\n        RootClass.$constructor = RootClass;\n        RootClass.extend = function (proto) {\n\n            if (__DEV__) {\n                zrUtil.each(mandatoryMethods, function (method) {\n                    if (!proto[method]) {\n                        console.warn(\n                            'Method `' + method + '` should be implemented'\n                            + (proto.type ? ' in ' + proto.type : '') + '.'\n                        );\n                    }\n                });\n            }\n\n            var superClass = this;\n            var ExtendedClass = function () {\n                if (!proto.$constructor) {\n                    superClass.apply(this, arguments);\n                }\n                else {\n                    proto.$constructor.apply(this, arguments);\n                }\n            };\n\n            zrUtil.extend(ExtendedClass.prototype, proto);\n\n            ExtendedClass.extend = this.extend;\n            ExtendedClass.superCall = superCall;\n            ExtendedClass.superApply = superApply;\n            zrUtil.inherits(ExtendedClass, this);\n            ExtendedClass.superClass = superClass;\n\n            return ExtendedClass;\n        };\n    };\n\n    // superCall should have class info, which can not be fetch from 'this'.\n    // Consider this case:\n    // class A has method f,\n    // class B inherits class A, overrides method f, f call superApply('f'),\n    // class C inherits class B, do not overrides method f,\n    // then when method of class C is called, dead loop occured.\n    function superCall(context, methodName) {\n        var args = zrUtil.slice(arguments, 2);\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    function superApply(context, methodName, args) {\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    /**\n     * @param {Object} entity\n     * @param {Object} options\n     * @param {boolean} [options.registerWhenExtend]\n     * @public\n     */\n    clazz.enableClassManagement = function (entity, options) {\n        options = options || {};\n\n        /**\n         * Component model classes\n         * key: componentType,\n         * value:\n         *     componentClass, when componentType is 'xxx'\n         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n         * @type {Object}\n         */\n        var storage = {};\n\n        entity.registerClass = function (Clazz, componentType) {\n            if (componentType) {\n                checkClassType(componentType);\n                componentType = parseClassType(componentType);\n\n                if (!componentType.sub) {\n                    if (__DEV__) {\n                        if (storage[componentType.main]) {\n                            console.warn(componentType.main + ' exists.');\n                        }\n                    }\n                    storage[componentType.main] = Clazz;\n                }\n                else if (componentType.sub !== IS_CONTAINER) {\n                    var container = makeContainer(componentType);\n                    container[componentType.sub] = Clazz;\n                }\n            }\n            return Clazz;\n        };\n\n        entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n            var Clazz = storage[componentMainType];\n\n            if (Clazz && Clazz[IS_CONTAINER]) {\n                Clazz = subType ? Clazz[subType] : null;\n            }\n\n            if (throwWhenNotFound && !Clazz) {\n                throw new Error(\n                    !subType\n                        ? componentMainType + '.' + 'type should be specified.'\n                        : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.'\n                );\n            }\n\n            return Clazz;\n        };\n\n        entity.getClassesByMainType = function (componentType) {\n            componentType = parseClassType(componentType);\n\n            var result = [];\n            var obj = storage[componentType.main];\n\n            if (obj && obj[IS_CONTAINER]) {\n                zrUtil.each(obj, function (o, type) {\n                    type !== IS_CONTAINER && result.push(o);\n                });\n            }\n            else {\n                result.push(obj);\n            }\n\n            return result;\n        };\n\n        entity.hasClass = function (componentType) {\n            // Just consider componentType.main.\n            componentType = parseClassType(componentType);\n            return !!storage[componentType.main];\n        };\n\n        /**\n         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n         */\n        entity.getAllClassMainTypes = function () {\n            var types = [];\n            zrUtil.each(storage, function (obj, type) {\n                types.push(type);\n            });\n            return types;\n        };\n\n        /**\n         * If a main type is container and has sub types\n         * @param  {string}  mainType\n         * @return {boolean}\n         */\n        entity.hasSubTypes = function (componentType) {\n            componentType = parseClassType(componentType);\n            var obj = storage[componentType.main];\n            return obj && obj[IS_CONTAINER];\n        };\n\n        entity.parseClassType = parseClassType;\n\n        function makeContainer(componentType) {\n            var container = storage[componentType.main];\n            if (!container || !container[IS_CONTAINER]) {\n                container = storage[componentType.main] = {};\n                container[IS_CONTAINER] = true;\n            }\n            return container;\n        }\n\n        if (options.registerWhenExtend) {\n            var originalExtend = entity.extend;\n            if (originalExtend) {\n                entity.extend = function (proto) {\n                    var ExtendedClass = originalExtend.call(this, proto);\n                    return entity.registerClass(ExtendedClass, proto.type);\n                };\n            }\n        }\n\n        return entity;\n    };\n\n    /**\n     * @param {string|Array.<string>} properties\n     */\n    clazz.setReadOnly = function (obj, properties) {\n        // FIXME It seems broken in IE8 simulation of IE11\n        // if (!zrUtil.isArray(properties)) {\n        //     properties = properties != null ? [properties] : [];\n        // }\n        // zrUtil.each(properties, function (prop) {\n        //     var value = obj[prop];\n\n        //     Object.defineProperty\n        //         && Object.defineProperty(obj, prop, {\n        //             value: value, writable: false\n        //         });\n        //     zrUtil.isArray(obj[prop])\n        //         && Object.freeze\n        //         && Object.freeze(obj[prop]);\n        // });\n    };\n\n    module.exports = clazz;\n\n\n/***/ }),\n/* 617 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module echarts/core/BoundingRect\n */\n\n\n    var vec2 = __webpack_require__(611);\n    var matrix = __webpack_require__(623);\n\n    var v2ApplyTransform = vec2.applyTransform;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    /**\n     * @alias module:echarts/core/BoundingRect\n     */\n    function BoundingRect(x, y, width, height) {\n\n        if (width < 0) {\n            x = x + width;\n            width = -width;\n        }\n        if (height < 0) {\n            y = y + height;\n            height = -height;\n        }\n\n        /**\n         * @type {number}\n         */\n        this.x = x;\n        /**\n         * @type {number}\n         */\n        this.y = y;\n        /**\n         * @type {number}\n         */\n        this.width = width;\n        /**\n         * @type {number}\n         */\n        this.height = height;\n    }\n\n    BoundingRect.prototype = {\n\n        constructor: BoundingRect,\n\n        /**\n         * @param {module:echarts/core/BoundingRect} other\n         */\n        union: function (other) {\n            var x = mathMin(other.x, this.x);\n            var y = mathMin(other.y, this.y);\n\n            this.width = mathMax(\n                    other.x + other.width,\n                    this.x + this.width\n                ) - x;\n            this.height = mathMax(\n                    other.y + other.height,\n                    this.y + this.height\n                ) - y;\n            this.x = x;\n            this.y = y;\n        },\n\n        /**\n         * @param {Array.<number>} m\n         * @methods\n         */\n        applyTransform: (function () {\n            var lt = [];\n            var rb = [];\n            var lb = [];\n            var rt = [];\n            return function (m) {\n                // In case usage like this\n                // el.getBoundingRect().applyTransform(el.transform)\n                // And element has no transform\n                if (!m) {\n                    return;\n                }\n                lt[0] = lb[0] = this.x;\n                lt[1] = rt[1] = this.y;\n                rb[0] = rt[0] = this.x + this.width;\n                rb[1] = lb[1] = this.y + this.height;\n\n                v2ApplyTransform(lt, lt, m);\n                v2ApplyTransform(rb, rb, m);\n                v2ApplyTransform(lb, lb, m);\n                v2ApplyTransform(rt, rt, m);\n\n                this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n                this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n                var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n                var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n                this.width = maxX - this.x;\n                this.height = maxY - this.y;\n            };\n        })(),\n\n        /**\n         * Calculate matrix of transforming from self to target rect\n         * @param  {module:zrender/core/BoundingRect} b\n         * @return {Array.<number>}\n         */\n        calculateTransform: function (b) {\n            var a = this;\n            var sx = b.width / a.width;\n            var sy = b.height / a.height;\n\n            var m = matrix.create();\n\n            // 矩阵右乘\n            matrix.translate(m, m, [-a.x, -a.y]);\n            matrix.scale(m, m, [sx, sy]);\n            matrix.translate(m, m, [b.x, b.y]);\n\n            return m;\n        },\n\n        /**\n         * @param {(module:echarts/core/BoundingRect|Object)} b\n         * @return {boolean}\n         */\n        intersect: function (b) {\n            if (!b) {\n                return false;\n            }\n\n            if (!(b instanceof BoundingRect)) {\n                // Normalize negative width/height.\n                b = BoundingRect.create(b);\n            }\n\n            var a = this;\n            var ax0 = a.x;\n            var ax1 = a.x + a.width;\n            var ay0 = a.y;\n            var ay1 = a.y + a.height;\n\n            var bx0 = b.x;\n            var bx1 = b.x + b.width;\n            var by0 = b.y;\n            var by1 = b.y + b.height;\n\n            return ! (ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n        },\n\n        contain: function (x, y) {\n            var rect = this;\n            return x >= rect.x\n                && x <= (rect.x + rect.width)\n                && y >= rect.y\n                && y <= (rect.y + rect.height);\n        },\n\n        /**\n         * @return {module:echarts/core/BoundingRect}\n         */\n        clone: function () {\n            return new BoundingRect(this.x, this.y, this.width, this.height);\n        },\n\n        /**\n         * Copy from another rect\n         */\n        copy: function (other) {\n            this.x = other.x;\n            this.y = other.y;\n            this.width = other.width;\n            this.height = other.height;\n        },\n\n        plain: function () {\n            return {\n                x: this.x,\n                y: this.y,\n                width: this.width,\n                height: this.height\n            };\n        }\n    };\n\n    /**\n     * @param {Object|module:zrender/core/BoundingRect} rect\n     * @param {number} rect.x\n     * @param {number} rect.y\n     * @param {number} rect.width\n     * @param {number} rect.height\n     * @return {module:zrender/core/BoundingRect}\n     */\n    BoundingRect.create = function (rect) {\n        return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n    };\n\n    module.exports = BoundingRect;\n\n\n/***/ }),\n/* 618 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\n\n\n    var Model = __webpack_require__(614);\n    var zrUtil = __webpack_require__(606);\n    var arrayPush = Array.prototype.push;\n    var componentUtil = __webpack_require__(642);\n    var clazzUtil = __webpack_require__(616);\n    var layout = __webpack_require__(619);\n\n    /**\n     * @alias module:echarts/model/Component\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {module:echarts/model/Model} ecModel\n     */\n    var ComponentModel = Model.extend({\n\n        type: 'component',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        id: '',\n\n        /**\n         * @readOnly\n         */\n        name: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        mainType: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        subType: '',\n\n        /**\n         * @readOnly\n         * @type {number}\n         */\n        componentIndex: 0,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        ecModel: null,\n\n        /**\n         * key: componentType\n         * value:  Component model list, can not be null.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @readOnly\n         */\n        dependentModels: [],\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        uid: null,\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        $constructor: function (option, parentModel, ecModel, extraOpt) {\n            Model.call(this, option, parentModel, ecModel, extraOpt);\n\n            this.uid = componentUtil.getUID('componentModel');\n        },\n\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n            this.mergeDefaultAndTheme(option, ecModel);\n        },\n\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            var themeModel = ecModel.getTheme();\n            zrUtil.merge(option, themeModel.get(this.mainType));\n            zrUtil.merge(option, this.getDefaultOption());\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (option, extraOpt) {\n            zrUtil.merge(this.option, option, true);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, option, layoutMode);\n            }\n        },\n\n        // Hooker after init or mergeOption\n        optionUpdated: function (newCptOption, isInit) {},\n\n        getDefaultOption: function () {\n            if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n                var optList = [];\n                var Class = this.constructor;\n                while (Class) {\n                    var opt = Class.prototype.defaultOption;\n                    opt && optList.push(opt);\n                    Class = Class.superClass;\n                }\n\n                var defaultOption = {};\n                for (var i = optList.length - 1; i >= 0; i--) {\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n                }\n                clazzUtil.set(this, '__defaultOption', defaultOption);\n            }\n            return clazzUtil.get(this, '__defaultOption');\n        },\n\n        getReferringComponents: function (mainType) {\n            return this.ecModel.queryComponents({\n                mainType: mainType,\n                index: this.get(mainType + 'Index', true),\n                id: this.get(mainType + 'Id', true)\n            });\n        }\n\n    });\n\n    // Reset ComponentModel.extend, add preConstruct.\n    // clazzUtil.enableClassExtend(\n    //     ComponentModel,\n    //     function (option, parentModel, ecModel, extraOpt) {\n    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\n    //         zrUtil.extend(this, extraOpt);\n\n    //         this.uid = componentUtil.getUID('componentModel');\n\n    //         // this.setReadOnly([\n    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n    //         //     'dependentModels', 'componentIndex'\n    //         // ]);\n    //     }\n    // );\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(\n        ComponentModel, {registerWhenExtend: true}\n    );\n    componentUtil.enableSubTypeDefaulter(ComponentModel);\n\n    // Add capability of ComponentModel.topologicalTravel.\n    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\n    function getDependencies(componentType) {\n        var deps = [];\n        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n        });\n        // Ensure main type\n        return zrUtil.map(deps, function (type) {\n            return clazzUtil.parseClassType(type).main;\n        });\n    }\n\n    zrUtil.mixin(ComponentModel, __webpack_require__(747));\n\n    module.exports = ComponentModel;\n\n\n/***/ }),\n/* 619 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Layout helpers for each component positioning\n\n\n    var zrUtil = __webpack_require__(606);\n    var BoundingRect = __webpack_require__(617);\n    var numberUtil = __webpack_require__(610);\n    var formatUtil = __webpack_require__(613);\n    var parsePercent = numberUtil.parsePercent;\n    var each = zrUtil.each;\n\n    var layout = {};\n\n    /**\n     * @public\n     */\n    var LOCATION_PARAMS = layout.LOCATION_PARAMS = [\n        'left', 'right', 'top', 'bottom', 'width', 'height'\n    ];\n\n    /**\n     * @public\n     */\n    var HV_NAMES = layout.HV_NAMES = [\n        ['width', 'left', 'right'],\n        ['height', 'top', 'bottom']\n    ];\n\n    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\n        var x = 0;\n        var y = 0;\n\n        if (maxWidth == null) {\n            maxWidth = Infinity;\n        }\n        if (maxHeight == null) {\n            maxHeight = Infinity;\n        }\n        var currentLineMaxSize = 0;\n\n        group.eachChild(function (child, idx) {\n            var position = child.position;\n            var rect = child.getBoundingRect();\n            var nextChild = group.childAt(idx + 1);\n            var nextChildRect = nextChild && nextChild.getBoundingRect();\n            var nextX;\n            var nextY;\n\n            if (orient === 'horizontal') {\n                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\n                nextX = x + moveX;\n                // Wrap when width exceeds maxWidth or meet a `newline` group\n                // FIXME compare before adding gap?\n                if (nextX > maxWidth || child.newline) {\n                    x = 0;\n                    nextX = moveX;\n                    y += currentLineMaxSize + gap;\n                    currentLineMaxSize = rect.height;\n                }\n                else {\n                    // FIXME: consider rect.y is not `0`?\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n                }\n            }\n            else {\n                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\n                nextY = y + moveY;\n                // Wrap when width exceeds maxHeight or meet a `newline` group\n                if (nextY > maxHeight || child.newline) {\n                    x += currentLineMaxSize + gap;\n                    y = 0;\n                    nextY = moveY;\n                    currentLineMaxSize = rect.width;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n                }\n            }\n\n            if (child.newline) {\n                return;\n            }\n\n            position[0] = x;\n            position[1] = y;\n\n            orient === 'horizontal'\n                ? (x = nextX + gap)\n                : (y = nextY + gap);\n        });\n    }\n\n    /**\n     * VBox or HBox layouting\n     * @param {string} orient\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.box = boxLayout;\n\n    /**\n     * VBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\n\n    /**\n     * HBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\n\n    /**\n     * If x or x2 is not specified or 'center' 'left' 'right',\n     * the width would be as long as possible.\n     * If y or y2 is not specified or 'middle' 'top' 'bottom',\n     * the height would be as long as possible.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.x]\n     * @param {number|string} [positionInfo.y]\n     * @param {number|string} [positionInfo.x2]\n     * @param {number|string} [positionInfo.y2]\n     * @param {Object} containerRect {width, height}\n     * @param {string|number} margin\n     * @return {Object} {width, height}\n     */\n    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var x = parsePercent(positionInfo.x, containerWidth);\n        var y = parsePercent(positionInfo.y, containerHeight);\n        var x2 = parsePercent(positionInfo.x2, containerWidth);\n        var y2 = parsePercent(positionInfo.y2, containerHeight);\n\n        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        return {\n            width: Math.max(x2 - x - margin[1] - margin[3], 0),\n            height: Math.max(y2 - y - margin[0] - margin[2], 0)\n        };\n    };\n\n    /**\n     * Parse position info.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width]\n     * @param {number|string} [positionInfo.height]\n     * @param {number|string} [positionInfo.aspect] Aspect is width / height\n     * @param {Object} containerRect\n     * @param {string|number} [margin]\n     *\n     * @return {module:zrender/core/BoundingRect}\n     */\n    layout.getLayoutRect = function (\n        positionInfo, containerRect, margin\n    ) {\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var left = parsePercent(positionInfo.left, containerWidth);\n        var top = parsePercent(positionInfo.top, containerHeight);\n        var right = parsePercent(positionInfo.right, containerWidth);\n        var bottom = parsePercent(positionInfo.bottom, containerHeight);\n        var width = parsePercent(positionInfo.width, containerWidth);\n        var height = parsePercent(positionInfo.height, containerHeight);\n\n        var verticalMargin = margin[2] + margin[0];\n        var horizontalMargin = margin[1] + margin[3];\n        var aspect = positionInfo.aspect;\n\n        // If width is not specified, calculate width from left and right\n        if (isNaN(width)) {\n            width = containerWidth - right - horizontalMargin - left;\n        }\n        if (isNaN(height)) {\n            height = containerHeight - bottom - verticalMargin - top;\n        }\n\n        if (aspect != null) {\n            // If width and height are not given\n            // 1. Graph should not exceeds the container\n            // 2. Aspect must be keeped\n            // 3. Graph should take the space as more as possible\n            // FIXME\n            // Margin is not considered, because there is no case that both\n            // using margin and aspect so far.\n            if (isNaN(width) && isNaN(height)) {\n                if (aspect > containerWidth / containerHeight) {\n                    width = containerWidth * 0.8;\n                }\n                else {\n                    height = containerHeight * 0.8;\n                }\n            }\n\n            // Calculate width or height with given aspect\n            if (isNaN(width)) {\n                width = aspect * height;\n            }\n            if (isNaN(height)) {\n                height = width / aspect;\n            }\n        }\n\n        // If left is not specified, calculate left from right and width\n        if (isNaN(left)) {\n            left = containerWidth - right - width - horizontalMargin;\n        }\n        if (isNaN(top)) {\n            top = containerHeight - bottom - height - verticalMargin;\n        }\n\n        // Align left and top\n        switch (positionInfo.left || positionInfo.right) {\n            case 'center':\n                left = containerWidth / 2 - width / 2 - margin[3];\n                break;\n            case 'right':\n                left = containerWidth - width - horizontalMargin;\n                break;\n        }\n        switch (positionInfo.top || positionInfo.bottom) {\n            case 'middle':\n            case 'center':\n                top = containerHeight / 2 - height / 2 - margin[0];\n                break;\n            case 'bottom':\n                top = containerHeight - height - verticalMargin;\n                break;\n        }\n        // If something is wrong and left, top, width, height are calculated as NaN\n        left = left || 0;\n        top = top || 0;\n        if (isNaN(width)) {\n            // Width may be NaN if only one value is given except width\n            width = containerWidth - horizontalMargin - left - (right || 0);\n        }\n        if (isNaN(height)) {\n            // Height may be NaN if only one value is given except height\n            height = containerHeight - verticalMargin - top - (bottom || 0);\n        }\n\n        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n        rect.margin = margin;\n        return rect;\n    };\n\n\n    /**\n     * Position a zr element in viewport\n     *  Group position is specified by either\n     *  {left, top}, {right, bottom}\n     *  If all properties exists, right and bottom will be igonred.\n     *\n     * Logic:\n     *     1. Scale (against origin point in parent coord)\n     *     2. Rotate (against origin point in parent coord)\n     *     3. Traslate (with el.position by this method)\n     * So this method only fixes the last step 'Traslate', which does not affect\n     * scaling and rotating.\n     *\n     * If be called repeatly with the same input el, the same result will be gotten.\n     *\n     * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n     * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @param {Object} [opt]\n     * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n     * @param {Array.<number>} [opt.boundingMode='all']\n     *        Specify how to calculate boundingRect when locating.\n     *        'all': Position the boundingRect that is transformed and uioned\n     *               both itself and its descendants.\n     *               This mode simplies confine the elements in the bounding\n     *               of their container (e.g., using 'right: 0').\n     *        'raw': Position the boundingRect that is not transformed and only itself.\n     *               This mode is useful when you want a element can overflow its\n     *               container. (Consider a rotated circle needs to be located in a corner.)\n     *               In this mode positionInfo.width/height can only be number.\n     */\n    layout.positionElement = function (el, positionInfo, containerRect, margin, opt) {\n        var h = !opt || !opt.hv || opt.hv[0];\n        var v = !opt || !opt.hv || opt.hv[1];\n        var boundingMode = opt && opt.boundingMode || 'all';\n\n        if (!h && !v) {\n            return;\n        }\n\n        var rect;\n        if (boundingMode === 'raw') {\n            rect = el.type === 'group'\n                ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0)\n                : el.getBoundingRect();\n        }\n        else {\n            rect = el.getBoundingRect();\n            if (el.needLocalTransform()) {\n                var transform = el.getLocalTransform();\n                // Notice: raw rect may be inner object of el,\n                // which should not be modified.\n                rect = rect.clone();\n                rect.applyTransform(transform);\n            }\n        }\n\n        // The real width and height can not be specified but calculated by the given el.\n        positionInfo = layout.getLayoutRect(\n            zrUtil.defaults(\n                {width: rect.width, height: rect.height},\n                positionInfo\n            ),\n            containerRect,\n            margin\n        );\n\n        // Because 'tranlate' is the last step in transform\n        // (see zrender/core/Transformable#getLocalTransfrom),\n        // we can just only modify el.position to get final result.\n        var elPos = el.position;\n        var dx = h ? positionInfo.x - rect.x : 0;\n        var dy = v ? positionInfo.y - rect.y : 0;\n\n        el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n    };\n\n    /**\n     * @param {Object} option Contains some of the properties in HV_NAMES.\n     * @param {number} hvIdx 0: horizontal; 1: vertical.\n     */\n    layout.sizeCalculable = function (option, hvIdx) {\n        return option[HV_NAMES[hvIdx][0]] != null\n            || (option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null);\n    };\n\n    /**\n     * Consider Case:\n     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n     * through setOption or media query, using normal zrUtil.merge will cause\n     * {right: 0} does not take effect.\n     *\n     * @example\n     * ComponentModel.extend({\n     *     init: function () {\n     *         ...\n     *         var inputPositionParams = layout.getLayoutParams(option);\n     *         this.mergeOption(inputPositionParams);\n     *     },\n     *     mergeOption: function (newOption) {\n     *         newOption && zrUtil.merge(thisOption, newOption, true);\n     *         layout.mergeLayoutParam(thisOption, newOption);\n     *     }\n     * });\n     *\n     * @param {Object} targetOption\n     * @param {Object} newOption\n     * @param {Object|string} [opt]\n     * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n     *  that width (or height) should not be calculated by left and right (or top and bottom).\n     */\n    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\n        !zrUtil.isObject(opt) && (opt = {});\n\n        var ignoreSize = opt.ignoreSize;\n        !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n\n        var hResult = merge(HV_NAMES[0], 0);\n        var vResult = merge(HV_NAMES[1], 1);\n\n        copy(HV_NAMES[0], targetOption, hResult);\n        copy(HV_NAMES[1], targetOption, vResult);\n\n        function merge(names, hvIdx) {\n            var newParams = {};\n            var newValueCount = 0;\n            var merged = {};\n            var mergedValueCount = 0;\n            var enoughParamNumber = 2;\n\n            each(names, function (name) {\n                merged[name] = targetOption[name];\n            });\n            each(names, function (name) {\n                // Consider case: newOption.width is null, which is\n                // set by user for removing width setting.\n                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n                hasValue(newParams, name) && newValueCount++;\n                hasValue(merged, name) && mergedValueCount++;\n            });\n\n            if (ignoreSize[hvIdx]) {\n                // Only one of left/right is premitted to exist.\n                if (hasValue(newOption, names[1])) {\n                    merged[names[2]] = null;\n                }\n                else if (hasValue(newOption, names[2])) {\n                    merged[names[1]] = null;\n                }\n                return merged;\n            }\n\n            // Case: newOption: {width: ..., right: ...},\n            // or targetOption: {right: ...} and newOption: {width: ...},\n            // There is no conflict when merged only has params count\n            // little than enoughParamNumber.\n            if (mergedValueCount === enoughParamNumber || !newValueCount) {\n                return merged;\n            }\n            // Case: newOption: {width: ..., right: ...},\n            // Than we can make sure user only want those two, and ignore\n            // all origin params in targetOption.\n            else if (newValueCount >= enoughParamNumber) {\n                return newParams;\n            }\n            else {\n                // Chose another param from targetOption by priority.\n                for (var i = 0; i < names.length; i++) {\n                    var name = names[i];\n                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n                        newParams[name] = targetOption[name];\n                        break;\n                    }\n                }\n                return newParams;\n            }\n        }\n\n        function hasProp(obj, name) {\n            return obj.hasOwnProperty(name);\n        }\n\n        function hasValue(obj, name) {\n            return obj[name] != null && obj[name] !== 'auto';\n        }\n\n        function copy(names, target, source) {\n            each(names, function (name) {\n                target[name] = source[name];\n            });\n        }\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.getLayoutParams = function (source) {\n        return layout.copyLayoutParams({}, source);\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.copyLayoutParams = function (target, source) {\n        source && target && each(LOCATION_PARAMS, function (name) {\n            source.hasOwnProperty(name) && (target[name] = source[name]);\n        });\n        return target;\n    };\n\n    module.exports = layout;\n\n\n\n/***/ }),\n/* 620 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var OrdinalScale = __webpack_require__(755);\n    var IntervalScale = __webpack_require__(638);\n    __webpack_require__(756);\n    __webpack_require__(754);\n    var Scale = __webpack_require__(632);\n\n    var numberUtil = __webpack_require__(610);\n    var zrUtil = __webpack_require__(606);\n    var textContain = __webpack_require__(621);\n    var axisHelper = {};\n\n    /**\n     * Get axis scale extent before niced.\n     * Item of returned array can only be number (including Infinity and NaN).\n     */\n    axisHelper.getScaleExtent = function (scale, model) {\n        var scaleType = scale.type;\n\n        var min = model.getMin();\n        var max = model.getMax();\n        var fixMin = min != null;\n        var fixMax = max != null;\n        var originalExtent = scale.getExtent();\n\n        var axisDataLen;\n        var boundaryGap;\n        var span;\n        if (scaleType === 'ordinal') {\n            axisDataLen = (model.get('data') || []).length;\n        }\n        else {\n            boundaryGap = model.get('boundaryGap');\n            if (!zrUtil.isArray(boundaryGap)) {\n                boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n            }\n            if (typeof boundaryGap[0] === 'boolean') {\n                if (__DEV__) {\n                    console.warn('Boolean type for boundaryGap is only '\n                        + 'allowed for ordinal axis. Please use string in '\n                        + 'percentage instead, e.g., \"20%\". Currently, '\n                        + 'boundaryGap is set to be 0.');\n                }\n                boundaryGap = [0, 0];\n            }\n            boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n            boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n            span = (originalExtent[1] - originalExtent[0])\n                || Math.abs(originalExtent[0]);\n        }\n\n        // Notice: When min/max is not set (that is, when there are null/undefined,\n        // which is the most common case), these cases should be ensured:\n        // (1) For 'ordinal', show all axis.data.\n        // (2) For others:\n        //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n        //      disabled).\n        //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n        //      be the result that originalExtent enlarged by boundaryGap.\n        // (3) If no data, it should be ensured that `scale.setBlank` is set.\n\n        // FIXME\n        // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n        // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n        // that the results processed by boundaryGap are positive/negative?\n\n        if (min == null) {\n            min = scaleType === 'ordinal'\n                ? (axisDataLen ? 0 : NaN)\n                : originalExtent[0] - boundaryGap[0] * span;\n        }\n        if (max == null) {\n            max = scaleType === 'ordinal'\n                ? (axisDataLen ? axisDataLen - 1 : NaN)\n                : originalExtent[1] + boundaryGap[1] * span;\n        }\n\n        if (min === 'dataMin') {\n            min = originalExtent[0];\n        }\n        if (max === 'dataMax') {\n            max = originalExtent[1];\n        }\n\n        (min == null || !isFinite(min)) && (min = NaN);\n        (max == null || !isFinite(max)) && (max = NaN);\n\n        scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max));\n\n        // Evaluate if axis needs cross zero\n        if (model.getNeedCrossZero()) {\n            // Axis is over zero and min is not set\n            if (min > 0 && max > 0 && !fixMin) {\n                min = 0;\n            }\n            // Axis is under zero and max is not set\n            if (min < 0 && max < 0 && !fixMax) {\n                max = 0;\n            }\n        }\n\n        return [min, max];\n    };\n\n    axisHelper.niceScaleExtent = function (scale, model) {\n        var extent = axisHelper.getScaleExtent(scale, model);\n        var fixMin = model.getMin() != null;\n        var fixMax = model.getMax() != null;\n        var splitNumber = model.get('splitNumber');\n\n        if (scale.type === 'log') {\n            scale.base = model.get('logBase');\n        }\n\n        var scaleType = scale.type;\n        scale.setExtent(extent[0], extent[1]);\n        scale.niceExtent({\n            splitNumber: splitNumber,\n            fixMin: fixMin,\n            fixMax: fixMax,\n            minInterval: (scaleType === 'interval' || scaleType === 'time')\n                ? model.get('minInterval') : null,\n            maxInterval: (scaleType === 'interval' || scaleType === 'time')\n                ? model.get('maxInterval') : null\n        });\n\n        // If some one specified the min, max. And the default calculated interval\n        // is not good enough. He can specify the interval. It is often appeared\n        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n        // to be 60.\n        // FIXME\n        var interval = model.get('interval');\n        if (interval != null) {\n            scale.setInterval && scale.setInterval(interval);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @param {string} [axisType] Default retrieve from model.type\n     * @return {module:echarts/scale/*}\n     */\n    axisHelper.createScaleByModel = function(model, axisType) {\n        axisType = axisType || model.get('type');\n        if (axisType) {\n            switch (axisType) {\n                // Buildin scale\n                case 'category':\n                    return new OrdinalScale(\n                        model.getCategories(), [Infinity, -Infinity]\n                    );\n                case 'value':\n                    return new IntervalScale();\n                // Extended scale, like time and log\n                default:\n                    return (Scale.getClass(axisType) || IntervalScale).create(model);\n            }\n        }\n    };\n\n    /**\n     * Check if the axis corss 0\n     */\n    axisHelper.ifAxisCrossZero = function (axis) {\n        var dataExtent = axis.scale.getExtent();\n        var min = dataExtent[0];\n        var max = dataExtent[1];\n        return !((min > 0 && max > 0) || (min < 0 && max < 0));\n    };\n\n    /**\n     * @param {Array.<number>} tickCoords In axis self coordinate.\n     * @param {Array.<string>} labels\n     * @param {string} font\n     * @param {boolean} isAxisHorizontal\n     * @return {number}\n     */\n    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\n        // FIXME\n        // 不同角的axis和label，不只是horizontal和vertical.\n\n        var textSpaceTakenRect;\n        var autoLabelInterval = 0;\n        var accumulatedLabelInterval = 0;\n\n        var step = 1;\n        if (labels.length > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.floor(labels.length / 40);\n        }\n\n        for (var i = 0; i < tickCoords.length; i += step) {\n            var tickCoord = tickCoords[i];\n            var rect = textContain.getBoundingRect(\n                labels[i], font, 'center', 'top'\n            );\n            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\n            // FIXME Magic number 1.5\n            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\n            if (!textSpaceTakenRect) {\n                textSpaceTakenRect = rect.clone();\n            }\n            // There is no space for current label;\n            else if (textSpaceTakenRect.intersect(rect)) {\n                accumulatedLabelInterval++;\n                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n            }\n            else {\n                textSpaceTakenRect.union(rect);\n                // Reset\n                accumulatedLabelInterval = 0;\n            }\n        }\n        if (autoLabelInterval === 0 && step > 1) {\n            return step;\n        }\n        return (autoLabelInterval + 1) * step - 1;\n    };\n\n    /**\n     * @param {Object} axis\n     * @param {Function} labelFormatter\n     * @return {Array.<string>}\n     */\n    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\n        var scale = axis.scale;\n        var labels = scale.getTicksLabels();\n        var ticks = scale.getTicks();\n        if (typeof labelFormatter === 'string') {\n            labelFormatter = (function (tpl) {\n                return function (val) {\n                    return tpl.replace('{value}', val != null ? val : '');\n                };\n            })(labelFormatter);\n            // Consider empty array\n            return zrUtil.map(labels, labelFormatter);\n        }\n        else if (typeof labelFormatter === 'function') {\n            return zrUtil.map(ticks, function (tick, idx) {\n                return labelFormatter(\n                    axisHelper.getAxisRawValue(axis, tick),\n                    idx\n                );\n            }, this);\n        }\n        else {\n            return labels;\n        }\n    };\n\n    axisHelper.getAxisRawValue = function (axis, value) {\n        // In category axis with data zoom, tick is not the original\n        // index of axis.data. So tick should not be exposed to user\n        // in category axis.\n        return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n    };\n\n    module.exports = axisHelper;\n\n\n/***/ }),\n/* 621 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var util = __webpack_require__(606);\n    var BoundingRect = __webpack_require__(617);\n    var imageHelper = __webpack_require__(646);\n\n    var textWidthCache = {};\n    var textWidthCacheCounter = 0;\n\n    var TEXT_CACHE_MAX = 5000;\n    var STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\n    var DEFAULT_FONT = '12px sans-serif';\n\n    var retrieve2 = util.retrieve2;\n    var retrieve3 = util.retrieve3;\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @return {number} width\n     */\n    function getTextWidth(text, font) {\n        font = font || DEFAULT_FONT;\n        var key = text + ':' + font;\n        if (textWidthCache[key]) {\n            return textWidthCache[key];\n        }\n\n        var textLines = (text + '').split('\\n');\n        var width = 0;\n\n        for (var i = 0, l = textLines.length; i < l; i++) {\n            // textContain.measureText may be overrided in SVG or VML\n            width = Math.max(textContain.measureText(textLines[i], font).width, width);\n        }\n\n        if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n            textWidthCacheCounter = 0;\n            textWidthCache = {};\n        }\n        textWidthCacheCounter++;\n        textWidthCache[key] = width;\n\n        return width;\n    }\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @param {string} [textAlign='left']\n     * @param {string} [textVerticalAlign='top']\n     * @param {Array.<number>} [textPadding]\n     * @param {Object} [rich]\n     * @param {Object} [truncate]\n     * @return {Object} {x, y, width, height, lineHeight}\n     */\n    function getTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n        return rich\n            ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate)\n            : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n    }\n\n    function getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n        var contentBlock = parsePlainText(text, font, textPadding, truncate);\n        var outerWidth = getTextWidth(text, font);\n        if (textPadding) {\n            outerWidth += textPadding[1] + textPadding[3];\n        }\n        var outerHeight = contentBlock.outerHeight;\n\n        var x = adjustTextX(0, outerWidth, textAlign);\n        var y = adjustTextY(0, outerHeight, textVerticalAlign);\n\n        var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n        rect.lineHeight = contentBlock.lineHeight;\n\n        return rect;\n    }\n\n    function getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n        var contentBlock = parseRichText(text, {\n            rich: rich,\n            truncate: truncate,\n            font: font,\n            textAlign: textAlign,\n            textPadding: textPadding\n        });\n        var outerWidth = contentBlock.outerWidth;\n        var outerHeight = contentBlock.outerHeight;\n\n        var x = adjustTextX(0, outerWidth, textAlign);\n        var y = adjustTextY(0, outerHeight, textVerticalAlign);\n\n        return new BoundingRect(x, y, outerWidth, outerHeight);\n    }\n\n    /**\n     * @public\n     * @param {number} x\n     * @param {number} width\n     * @param {string} [textAlign='left']\n     * @return {number} Adjusted x.\n     */\n    function adjustTextX(x, width, textAlign) {\n        // FIXME Right to left language\n        if (textAlign === 'right') {\n            x -= width;\n        }\n        else if (textAlign === 'center') {\n            x -= width / 2;\n        }\n        return x;\n    }\n\n    /**\n     * @public\n     * @param {number} y\n     * @param {number} height\n     * @param {string} [textVerticalAlign='top']\n     * @return {number} Adjusted y.\n     */\n    function adjustTextY(y, height, textVerticalAlign) {\n        if (textVerticalAlign === 'middle') {\n            y -= height / 2;\n        }\n        else if (textVerticalAlign === 'bottom') {\n            y -= height;\n        }\n        return y;\n    }\n\n    /**\n     * @public\n     * @param {stirng} textPosition\n     * @param {Object} rect {x, y, width, height}\n     * @param {number} distance\n     * @return {Object} {x, y, textAlign, textVerticalAlign}\n     */\n    function adjustTextPositionOnRect(textPosition, rect, distance) {\n\n        var x = rect.x;\n        var y = rect.y;\n\n        var height = rect.height;\n        var width = rect.width;\n        var halfHeight = height / 2;\n\n        var textAlign = 'left';\n        var textVerticalAlign = 'top';\n\n        switch (textPosition) {\n            case 'left':\n                x -= distance;\n                y += halfHeight;\n                textAlign = 'right';\n                textVerticalAlign = 'middle';\n                break;\n            case 'right':\n                x += distance + width;\n                y += halfHeight;\n                textVerticalAlign = 'middle';\n                break;\n            case 'top':\n                x += width / 2;\n                y -= distance;\n                textAlign = 'center';\n                textVerticalAlign = 'bottom';\n                break;\n            case 'bottom':\n                x += width / 2;\n                y += height + distance;\n                textAlign = 'center';\n                break;\n            case 'inside':\n                x += width / 2;\n                y += halfHeight;\n                textAlign = 'center';\n                textVerticalAlign = 'middle';\n                break;\n            case 'insideLeft':\n                x += distance;\n                y += halfHeight;\n                textVerticalAlign = 'middle';\n                break;\n            case 'insideRight':\n                x += width - distance;\n                y += halfHeight;\n                textAlign = 'right';\n                textVerticalAlign = 'middle';\n                break;\n            case 'insideTop':\n                x += width / 2;\n                y += distance;\n                textAlign = 'center';\n                break;\n            case 'insideBottom':\n                x += width / 2;\n                y += height - distance;\n                textAlign = 'center';\n                textVerticalAlign = 'bottom';\n                break;\n            case 'insideTopLeft':\n                x += distance;\n                y += distance;\n                break;\n            case 'insideTopRight':\n                x += width - distance;\n                y += distance;\n                textAlign = 'right';\n                break;\n            case 'insideBottomLeft':\n                x += distance;\n                y += height - distance;\n                textVerticalAlign = 'bottom';\n                break;\n            case 'insideBottomRight':\n                x += width - distance;\n                y += height - distance;\n                textAlign = 'right';\n                textVerticalAlign = 'bottom';\n                break;\n        }\n\n        return {\n            x: x,\n            y: y,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    /**\n     * Show ellipsis if overflow.\n     *\n     * @public\n     * @param  {string} text\n     * @param  {string} containerWidth\n     * @param  {string} font\n     * @param  {number} [ellipsis='...']\n     * @param  {Object} [options]\n     * @param  {number} [options.maxIterations=3]\n     * @param  {number} [options.minChar=0] If truncate result are less\n     *                  then minChar, ellipsis will not show, which is\n     *                  better for user hint in some cases.\n     * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n     * @return {string}\n     */\n    function truncateText(text, containerWidth, font, ellipsis, options) {\n        if (!containerWidth) {\n            return '';\n        }\n\n        var textLines = (text + '').split('\\n');\n        options = prepareTruncateOptions(containerWidth, font, ellipsis, options);\n\n        // FIXME\n        // It is not appropriate that every line has '...' when truncate multiple lines.\n        for (var i = 0, len = textLines.length; i < len; i++) {\n            textLines[i] = truncateSingleLine(textLines[i], options);\n        }\n\n        return textLines.join('\\n');\n    }\n\n    function prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n        options = util.extend({}, options);\n\n        options.font = font;\n        var ellipsis = retrieve2(ellipsis, '...');\n        options.maxIterations = retrieve2(options.maxIterations, 2);\n        var minChar = options.minChar = retrieve2(options.minChar, 0);\n        // FIXME\n        // Other languages?\n        options.cnCharWidth = getTextWidth('国', font);\n        // FIXME\n        // Consider proportional font?\n        var ascCharWidth = options.ascCharWidth = getTextWidth('a', font);\n        options.placeholder = retrieve2(options.placeholder, '');\n\n        // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n        // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n        var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n        for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n            contentWidth -= ascCharWidth;\n        }\n\n        var ellipsisWidth = getTextWidth(ellipsis);\n        if (ellipsisWidth > contentWidth) {\n            ellipsis = '';\n            ellipsisWidth = 0;\n        }\n\n        contentWidth = containerWidth - ellipsisWidth;\n\n        options.ellipsis = ellipsis;\n        options.ellipsisWidth = ellipsisWidth;\n        options.contentWidth = contentWidth;\n        options.containerWidth = containerWidth;\n\n        return options;\n    }\n\n    function truncateSingleLine(textLine, options) {\n        var containerWidth = options.containerWidth;\n        var font = options.font;\n        var contentWidth = options.contentWidth;\n\n        if (!containerWidth) {\n            return '';\n        }\n\n        var lineWidth = getTextWidth(textLine, font);\n\n        if (lineWidth <= containerWidth) {\n            return textLine;\n        }\n\n        for (var j = 0;; j++) {\n            if (lineWidth <= contentWidth || j >= options.maxIterations) {\n                textLine += options.ellipsis;\n                break;\n            }\n\n            var subLength = j === 0\n                ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth)\n                : lineWidth > 0\n                ? Math.floor(textLine.length * contentWidth / lineWidth)\n                : 0;\n\n            textLine = textLine.substr(0, subLength);\n            lineWidth = getTextWidth(textLine, font);\n        }\n\n        if (textLine === '') {\n            textLine = options.placeholder;\n        }\n\n        return textLine;\n    }\n\n    function estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n        var width = 0;\n        var i = 0;\n        for (var len = text.length; i < len && width < contentWidth; i++) {\n            var charCode = text.charCodeAt(i);\n            width += (0 <= charCode && charCode <= 127) ? ascCharWidth : cnCharWidth;\n        }\n        return i;\n    }\n\n    /**\n     * @public\n     * @param {string} font\n     * @return {number} line height\n     */\n    function getLineHeight(font) {\n        // FIXME A rough approach.\n        return getTextWidth('国', font);\n    }\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @return {Object} width\n     */\n    function measureText(text, font) {\n        var ctx = util.getContext();\n        ctx.font = font || DEFAULT_FONT;\n        return ctx.measureText(text);\n    }\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @param {Object} [truncate]\n     * @return {Object} block: {lineHeight, lines, height, outerHeight}\n     *  Notice: for performance, do not calculate outerWidth util needed.\n     */\n    function parsePlainText(text, font, padding, truncate) {\n        text != null && (text += '');\n\n        var lineHeight = getLineHeight(font);\n        var lines = text ? text.split('\\n') : [];\n        var height = lines.length * lineHeight;\n        var outerHeight = height;\n\n        if (padding) {\n            outerHeight += padding[0] + padding[2];\n        }\n\n        if (text && truncate) {\n            var truncOuterHeight = truncate.outerHeight;\n            var truncOuterWidth = truncate.outerWidth;\n            if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n                text = '';\n                lines = [];\n            }\n            else if (truncOuterWidth != null) {\n                var options = prepareTruncateOptions(\n                    truncOuterWidth - (padding ? padding[1] + padding[3] : 0),\n                    font,\n                    truncate.ellipsis,\n                    {minChar: truncate.minChar, placeholder: truncate.placeholder}\n                );\n\n                // FIXME\n                // It is not appropriate that every line has '...' when truncate multiple lines.\n                for (var i = 0, len = lines.length; i < len; i++) {\n                    lines[i] = truncateSingleLine(lines[i], options);\n                }\n            }\n        }\n\n        return {\n            lines: lines,\n            height: height,\n            outerHeight: outerHeight,\n            lineHeight: lineHeight\n        };\n    }\n\n    /**\n     * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n     * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n     *\n     * @public\n     * @param {string} text\n     * @param {Object} style\n     * @return {Object} block\n     * {\n     *      width,\n     *      height,\n     *      lines: [{\n     *          lineHeight,\n     *          width,\n     *          tokens: [[{\n     *              styleName,\n     *              text,\n     *              width,      // include textPadding\n     *              height,     // include textPadding\n     *              textWidth, // pure text width\n     *              textHeight, // pure text height\n     *              lineHeihgt,\n     *              font,\n     *              textAlign,\n     *              textVerticalAlign\n     *          }], [...], ...]\n     *      }, ...]\n     * }\n     * If styleName is undefined, it is plain text.\n     */\n    function parseRichText(text, style) {\n        var contentBlock = {lines: [], width: 0, height: 0};\n\n        text != null && (text += '');\n        if (!text) {\n            return contentBlock;\n        }\n\n        var lastIndex = STYLE_REG.lastIndex = 0;\n        var result;\n        while ((result = STYLE_REG.exec(text)) != null)  {\n            var matchedIndex = result.index;\n            if (matchedIndex > lastIndex) {\n                pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n            }\n            pushTokens(contentBlock, result[2], result[1]);\n            lastIndex = STYLE_REG.lastIndex;\n        }\n\n        if (lastIndex < text.length) {\n            pushTokens(contentBlock, text.substring(lastIndex, text.length));\n        }\n\n        var lines = contentBlock.lines;\n        var contentHeight = 0;\n        var contentWidth = 0;\n        // For `textWidth: 100%`\n        var pendingList = [];\n\n        var stlPadding = style.textPadding;\n\n        var truncate = style.truncate;\n        var truncateWidth = truncate && truncate.outerWidth;\n        var truncateHeight = truncate && truncate.outerHeight;\n        if (stlPadding) {\n            truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n            truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n        }\n\n        // Calculate layout info of tokens.\n        for (var i = 0; i < lines.length; i++) {\n            var line = lines[i];\n            var lineHeight = 0;\n            var lineWidth = 0;\n\n            for (var j = 0; j < line.tokens.length; j++) {\n                var token = line.tokens[j];\n                var tokenStyle = token.styleName && style.rich[token.styleName] || {};\n                // textPadding should not inherit from style.\n                var textPadding = token.textPadding = tokenStyle.textPadding;\n\n                // textFont has been asigned to font by `normalizeStyle`.\n                var font = token.font = tokenStyle.font || style.font;\n\n                // textHeight can be used when textVerticalAlign is specified in token.\n                var tokenHeight = token.textHeight = retrieve2(\n                    // textHeight should not be inherited, consider it can be specified\n                    // as box height of the block.\n                    tokenStyle.textHeight, textContain.getLineHeight(font)\n                );\n                textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n                token.height = tokenHeight;\n                token.lineHeight = retrieve3(\n                    tokenStyle.textLineHeight, style.textLineHeight, tokenHeight\n                );\n\n                token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n                token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n                if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n                    return {lines: [], width: 0, height: 0};\n                }\n\n                token.textWidth = textContain.getWidth(token.text, font);\n                var tokenWidth = tokenStyle.textWidth;\n                var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto';\n\n                // Percent width, can be `100%`, can be used in drawing separate\n                // line when box width is needed to be auto.\n                if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n                    token.percentWidth = tokenWidth;\n                    pendingList.push(token);\n                    tokenWidth = 0;\n                    // Do not truncate in this case, because there is no user case\n                    // and it is too complicated.\n                }\n                else {\n                    if (tokenWidthNotSpecified) {\n                        tokenWidth = token.textWidth;\n\n                        // FIXME: If image is not loaded and textWidth is not specified, calling\n                        // `getBoundingRect()` will not get correct result.\n                        var textBackgroundColor = tokenStyle.textBackgroundColor;\n                        var bgImg = textBackgroundColor && textBackgroundColor.image;\n\n                        // Use cases:\n                        // (1) If image is not loaded, it will be loaded at render phase and call\n                        // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n                        // image, and then the right size will be calculated here at the next tick.\n                        // See `graphic/helper/text.js`.\n                        // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n                        // use `imageHelper.findExistImage` to find cached image.\n                        // `imageHelper.findExistImage` will always be called here before\n                        // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n                        // which ensures that image will not be rendered before correct size calcualted.\n                        if (bgImg) {\n                            bgImg = imageHelper.findExistImage(bgImg);\n                            if (imageHelper.isImageReady(bgImg)) {\n                                tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n                            }\n                        }\n                    }\n\n                    var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n                    tokenWidth += paddingW;\n\n                    var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n                    if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n                        if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n                            token.text = '';\n                            token.textWidth = tokenWidth = 0;\n                        }\n                        else {\n                            token.text = truncateText(\n                                token.text, remianTruncWidth - paddingW, font, truncate.ellipsis,\n                                {minChar: truncate.minChar}\n                            );\n                            token.textWidth = textContain.getWidth(token.text, font);\n                            tokenWidth = token.textWidth + paddingW;\n                        }\n                    }\n                }\n\n                lineWidth += (token.width = tokenWidth);\n                tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n            }\n\n            line.width = lineWidth;\n            line.lineHeight = lineHeight;\n            contentHeight += lineHeight;\n            contentWidth = Math.max(contentWidth, lineWidth);\n        }\n\n        contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n        contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n        if (stlPadding) {\n            contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n            contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n        }\n\n        for (var i = 0; i < pendingList.length; i++) {\n            var token = pendingList[i];\n            var percentWidth = token.percentWidth;\n            // Should not base on outerWidth, because token can not be placed out of padding.\n            token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n        }\n\n        return contentBlock;\n    }\n\n    function pushTokens(block, str, styleName) {\n        var isEmptyStr = str === '';\n        var strs = str.split('\\n');\n        var lines = block.lines;\n\n        for (var i = 0; i < strs.length; i++) {\n            var text = strs[i];\n            var token = {\n                styleName: styleName,\n                text: text,\n                isLineHolder: !text && !isEmptyStr\n            };\n\n            // The first token should be appended to the last line.\n            if (!i) {\n                var tokens = (lines[lines.length - 1] || (lines[0] = {tokens: []})).tokens;\n\n                // Consider cases:\n                // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n                // (which is a placeholder) should be replaced by new token.\n                // (2) A image backage, where token likes {a|}.\n                // (3) A redundant '' will affect textAlign in line.\n                // (4) tokens with the same tplName should not be merged, because\n                // they should be displayed in different box (with border and padding).\n                var tokensLen = tokens.length;\n                (tokensLen === 1 && tokens[0].isLineHolder)\n                    ? (tokens[0] = token)\n                    // Consider text is '', only insert when it is the \"lineHolder\" or\n                    // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n                    : ((text || !tokensLen || isEmptyStr) && tokens.push(token));\n            }\n            // Other tokens always start a new line.\n            else {\n                // If there is '', insert it as a placeholder.\n                lines.push({tokens: [token]});\n            }\n        }\n    }\n\n    function makeFont(style) {\n        // FIXME in node-canvas fontWeight is before fontStyle\n        // Use `fontSize` `fontFamily` to check whether font properties are defined.\n        return (style.fontSize || style.fontFamily) && [\n            style.fontStyle,\n            style.fontWeight,\n            (style.fontSize || 12) + 'px',\n            // If font properties are defined, `fontFamily` should not be ignored.\n            style.fontFamily || 'sans-serif'\n        ].join(' ') || style.textFont || style.font;\n    }\n\n    var textContain = {\n\n        getWidth: getTextWidth,\n\n        getBoundingRect: getTextRect,\n\n        adjustTextPositionOnRect: adjustTextPositionOnRect,\n\n        truncateText: truncateText,\n\n        measureText: measureText,\n\n        getLineHeight: getLineHeight,\n\n        parsePlainText: parsePlainText,\n\n        parseRichText: parseRichText,\n\n        adjustTextX: adjustTextX,\n\n        adjustTextY: adjustTextY,\n\n        makeFont: makeFont,\n\n        DEFAULT_FONT: DEFAULT_FONT\n    };\n\n    module.exports = textContain;\n\n\n/***/ }),\n/* 622 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var vec2 = __webpack_require__(611);\n    var v2Create = vec2.create;\n    var v2DistSquare = vec2.distSquare;\n    var mathPow = Math.pow;\n    var mathSqrt = Math.sqrt;\n\n    var EPSILON = 1e-8;\n    var EPSILON_NUMERIC = 1e-4;\n\n    var THREE_SQRT = mathSqrt(3);\n    var ONE_THIRD = 1 / 3;\n\n    // 临时变量\n    var _v0 = v2Create();\n    var _v1 = v2Create();\n    var _v2 = v2Create();\n    // var _v3 = vec2.create();\n\n    function isAroundZero(val) {\n        return val > -EPSILON && val < EPSILON;\n    }\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n    /**\n     * 计算三次贝塞尔值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return onet * onet * (onet * p0 + 3 * t * p1)\n             + t * t * (t * p3 + 3 * onet * p2);\n    }\n\n    /**\n     * 计算三次贝塞尔导数值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicDerivativeAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return 3 * (\n            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\n            + (p3 - p2) * t * t\n        );\n    }\n\n    /**\n     * 计算三次贝塞尔方程根，使用盛金公式\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} val\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function cubicRootAt(p0, p1, p2, p3, val, roots) {\n        // Evaluate roots of cubic functions\n        var a = p3 + 3 * (p1 - p2) - p0;\n        var b = 3 * (p2 - p1 * 2 + p0);\n        var c = 3 * (p1  - p0);\n        var d = p0 - val;\n\n        var A = b * b - 3 * a * c;\n        var B = b * c - 9 * a * d;\n        var C = c * c - 3 * b * d;\n\n        var n = 0;\n\n        if (isAroundZero(A) && isAroundZero(B)) {\n            if (isAroundZero(b)) {\n                roots[0] = 0;\n            }\n            else {\n                var t1 = -c / b;  //t1, t2, t3, b is not zero\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = B * B - 4 * A * C;\n\n            if (isAroundZero(disc)) {\n                var K = B / A;\n                var t1 = -b / a + K;  // t1, a is not zero\n                var t2 = -K / 2;  // t2, t3\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n                if (Y1 < 0) {\n                    Y1 = -mathPow(-Y1, ONE_THIRD);\n                }\n                else {\n                    Y1 = mathPow(Y1, ONE_THIRD);\n                }\n                if (Y2 < 0) {\n                    Y2 = -mathPow(-Y2, ONE_THIRD);\n                }\n                else {\n                    Y2 = mathPow(Y2, ONE_THIRD);\n                }\n                var t1 = (-b - (Y1 + Y2)) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else {\n                var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n                var theta = Math.acos(T) / 3;\n                var ASqrt = mathSqrt(A);\n                var tmp = Math.cos(theta);\n\n                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n                if (t3 >= 0 && t3 <= 1) {\n                    roots[n++] = t3;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算三次贝塞尔方程极限值的位置\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {Array.<number>} extrema\n     * @return {number} 有效数目\n     */\n    function cubicExtrema(p0, p1, p2, p3, extrema) {\n        var b = 6 * p2 - 12 * p1 + 6 * p0;\n        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n        var c = 3 * p1 - 3 * p0;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <=1) {\n                    extrema[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                extrema[0] = -b / (2 * a);\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    extrema[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    extrema[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 细分三次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function cubicSubdivide(p0, p1, p2, p3, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p23 = (p3 - p2) * t + p2;\n\n        var p012 = (p12 - p01) * t + p01;\n        var p123 = (p23 - p12) * t + p12;\n\n        var p0123 = (p123 - p012) * t + p012;\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n        out[3] = p0123;\n        // Seg1\n        out[4] = p0123;\n        out[5] = p123;\n        out[6] = p23;\n        out[7] = p3;\n    }\n\n    /**\n     * 投射点到三次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} [out] 投射点\n     * @return {number}\n     */\n    function cubicProjectPoint(\n        x0, y0, x1, y1, x2, y2, x3, y3,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n        var prev;\n        var next;\n        var d1;\n        var d2;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n            d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            prev = t - interval;\n            next = t + interval;\n            // t - interval\n            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n\n            d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = cubicAt(x0, x1, x2, x3, next);\n                _v2[1] = cubicAt(y0, y1, y2, y3, next);\n                d2 = v2DistSquare(_v2, _v0);\n\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = cubicAt(x0, x1, x2, x3, t);\n            out[1] = cubicAt(y0, y1, y2, y3, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    /**\n     * 计算二次方贝塞尔值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticAt(p0, p1, p2, t) {\n        var onet = 1 - t;\n        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n    }\n\n    /**\n     * 计算二次方贝塞尔导数值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticDerivativeAt(p0, p1, p2, t) {\n        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n    }\n\n    /**\n     * 计算二次方贝塞尔方程根\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function quadraticRootAt(p0, p1, p2, val, roots) {\n        var a = p0 - 2 * p1 + p2;\n        var b = 2 * (p1 - p0);\n        var c = p0 - val;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                var t1 = -b / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算二次贝塞尔方程极限值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @return {number}\n     */\n    function quadraticExtremum(p0, p1, p2) {\n        var divider = p0 + p2 - 2 * p1;\n        if (divider === 0) {\n            // p1 is center of p0 and p2\n            return 0.5;\n        }\n        else {\n            return (p0 - p1) / divider;\n        }\n    }\n\n    /**\n     * 细分二次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function quadraticSubdivide(p0, p1, p2, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p012 = (p12 - p01) * t + p01;\n\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n\n        // Seg1\n        out[3] = p012;\n        out[4] = p12;\n        out[5] = p2;\n    }\n\n    /**\n     * 投射点到二次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} out 投射点\n     * @return {number}\n     */\n    function quadraticProjectPoint(\n        x0, y0, x1, y1, x2, y2,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = quadraticAt(x0, x1, x2, _t);\n            _v1[1] = quadraticAt(y0, y1, y2, _t);\n            var d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            var prev = t - interval;\n            var next = t + interval;\n            // t - interval\n            _v1[0] = quadraticAt(x0, x1, x2, prev);\n            _v1[1] = quadraticAt(y0, y1, y2, prev);\n\n            var d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = quadraticAt(x0, x1, x2, next);\n                _v2[1] = quadraticAt(y0, y1, y2, next);\n                var d2 = v2DistSquare(_v2, _v0);\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = quadraticAt(x0, x1, x2, t);\n            out[1] = quadraticAt(y0, y1, y2, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    module.exports = {\n\n        cubicAt: cubicAt,\n\n        cubicDerivativeAt: cubicDerivativeAt,\n\n        cubicRootAt: cubicRootAt,\n\n        cubicExtrema: cubicExtrema,\n\n        cubicSubdivide: cubicSubdivide,\n\n        cubicProjectPoint: cubicProjectPoint,\n\n        quadraticAt: quadraticAt,\n\n        quadraticDerivativeAt: quadraticDerivativeAt,\n\n        quadraticRootAt: quadraticRootAt,\n\n        quadraticExtremum: quadraticExtremum,\n\n        quadraticSubdivide: quadraticSubdivide,\n\n        quadraticProjectPoint: quadraticProjectPoint\n    };\n\n\n/***/ }),\n/* 623 */\n/***/ (function(module, exports) {\n\n\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n    /**\n     * 3x2矩阵操作类\n     * @exports zrender/tool/matrix\n     */\n    var matrix = {\n        /**\n         * 创建一个单位矩阵\n         * @return {Float32Array|Array.<number>}\n         */\n        create : function() {\n            var out = new ArrayCtor(6);\n            matrix.identity(out);\n\n            return out;\n        },\n        /**\n         * 设置矩阵为单位矩阵\n         * @param {Float32Array|Array.<number>} out\n         */\n        identity : function(out) {\n            out[0] = 1;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            out[4] = 0;\n            out[5] = 0;\n            return out;\n        },\n        /**\n         * 复制矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m\n         */\n        copy: function(out, m) {\n            out[0] = m[0];\n            out[1] = m[1];\n            out[2] = m[2];\n            out[3] = m[3];\n            out[4] = m[4];\n            out[5] = m[5];\n            return out;\n        },\n        /**\n         * 矩阵相乘\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m1\n         * @param {Float32Array|Array.<number>} m2\n         */\n        mul : function (out, m1, m2) {\n            // Consider matrix.mul(m, m2, m);\n            // where out is the same as m2.\n            // So use temp variable to escape error.\n            var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n            var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n            var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n            var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n            var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n            var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n            out[0] = out0;\n            out[1] = out1;\n            out[2] = out2;\n            out[3] = out3;\n            out[4] = out4;\n            out[5] = out5;\n            return out;\n        },\n        /**\n         * 平移变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        translate : function(out, a, v) {\n            out[0] = a[0];\n            out[1] = a[1];\n            out[2] = a[2];\n            out[3] = a[3];\n            out[4] = a[4] + v[0];\n            out[5] = a[5] + v[1];\n            return out;\n        },\n        /**\n         * 旋转变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {number} rad\n         */\n        rotate : function(out, a, rad) {\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n            var st = Math.sin(rad);\n            var ct = Math.cos(rad);\n\n            out[0] = aa * ct + ab * st;\n            out[1] = -aa * st + ab * ct;\n            out[2] = ac * ct + ad * st;\n            out[3] = -ac * st + ct * ad;\n            out[4] = ct * atx + st * aty;\n            out[5] = ct * aty - st * atx;\n            return out;\n        },\n        /**\n         * 缩放变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        scale : function(out, a, v) {\n            var vx = v[0];\n            var vy = v[1];\n            out[0] = a[0] * vx;\n            out[1] = a[1] * vy;\n            out[2] = a[2] * vx;\n            out[3] = a[3] * vy;\n            out[4] = a[4] * vx;\n            out[5] = a[5] * vy;\n            return out;\n        },\n        /**\n         * 求逆矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         */\n        invert : function(out, a) {\n\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n\n            var det = aa * ad - ab * ac;\n            if (!det) {\n                return null;\n            }\n            det = 1.0 / det;\n\n            out[0] = ad * det;\n            out[1] = -ab * det;\n            out[2] = -ac * det;\n            out[3] = aa * det;\n            out[4] = (ac * aty - ad * atx) * det;\n            out[5] = (ab * atx - aa * aty) * det;\n            return out;\n        }\n    };\n\n    module.exports = matrix;\n\n\n\n/***/ }),\n/* 624 */\n/***/ (function(module, exports) {\n\nmodule.exports = function (date) {\n  var fmt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'YYYY-MM-DD HH:mm:ss';\n\n  if (!date) {\n    return '';\n  }\n  if (typeof date === 'string') {\n    date = new Date(date.replace(/-/g, '/'));\n  }\n  if (typeof date === 'number') {\n    date = new Date(date);\n  }\n  var o = {\n    'M+': date.getMonth() + 1,\n    'D+': date.getDate(),\n    'h+': date.getHours() % 12 === 0 ? 12 : date.getHours() % 12,\n    'H+': date.getHours(),\n    'm+': date.getMinutes(),\n    's+': date.getSeconds(),\n    'q+': Math.floor((date.getMonth() + 3) / 3),\n    'S': date.getMilliseconds()\n  };\n  var week = {\n    '0': '\\u65E5',\n    '1': '\\u4E00',\n    '2': '\\u4E8C',\n    '3': '\\u4E09',\n    '4': '\\u56DB',\n    '5': '\\u4E94',\n    '6': '\\u516D'\n  };\n  if (/(Y+)/.test(fmt)) {\n    fmt = fmt.replace(RegExp.$1, (date.getFullYear() + '').substr(4 - RegExp.$1.length));\n  }\n  if (/(E+)/.test(fmt)) {\n    fmt = fmt.replace(RegExp.$1, (RegExp.$1.length > 1 ? RegExp.$1.length > 2 ? '\\u661F\\u671F' : '\\u5468' : '') + week[date.getDay() + '']);\n  }\n  for (var k in o) {\n    if (new RegExp('(' + k + ')').test(fmt)) {\n      fmt = fmt.replace(RegExp.$1, RegExp.$1.length === 1 ? o[k] : ('00' + o[k]).substr(('' + o[k]).length));\n    }\n  }\n  return fmt;\n};\n\n/***/ }),\n/* 625 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n\n    var Eventful = __webpack_require__(626);\n    var env = __webpack_require__(615);\n\n    var isDomLevel2 = (typeof window !== 'undefined') && !!window.addEventListener;\n\n    function getBoundingClientRect(el) {\n        // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n        return el.getBoundingClientRect ? el.getBoundingClientRect() : {left: 0, top: 0};\n    }\n\n    // `calculate` is optional, default false\n    function clientToLocal(el, e, out, calculate) {\n        out = out || {};\n\n        // According to the W3C Working Draft, offsetX and offsetY should be relative\n        // to the padding edge of the target element. The only browser using this convention\n        // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n        // not support the properties.\n        // (see http://www.jacklmoore.com/notes/mouse-position/)\n        // In zr painter.dom, padding edge equals to border edge.\n\n        // FIXME\n        // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n        // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n        // is too complex. So css-transfrom dont support in this case temporarily.\n        if (calculate || !env.canvasSupported) {\n            defaultGetZrXY(el, e, out);\n        }\n        // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n        // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n        // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n        // zoom-factor, overflow / opacity layers, transforms ...)\n        // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n        // <https://bugs.jquery.com/ticket/8523#comment:14>\n        // BTW3, In ff, offsetX/offsetY is always 0.\n        else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n            out.zrX = e.layerX;\n            out.zrY = e.layerY;\n        }\n        // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n        else if (e.offsetX != null) {\n            out.zrX = e.offsetX;\n            out.zrY = e.offsetY;\n        }\n        // For some other device, e.g., IOS safari.\n        else {\n            defaultGetZrXY(el, e, out);\n        }\n\n        return out;\n    }\n\n    function defaultGetZrXY(el, e, out) {\n        // This well-known method below does not support css transform.\n        var box = getBoundingClientRect(el);\n        out.zrX = e.clientX - box.left;\n        out.zrY = e.clientY - box.top;\n    }\n\n    /**\n     * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n     * `calculate` is optional, default false.\n     */\n    function normalizeEvent(el, e, calculate) {\n\n        e = e || window.event;\n\n        if (e.zrX != null) {\n            return e;\n        }\n\n        var eventType = e.type;\n        var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n        if (!isTouch) {\n            clientToLocal(el, e, e, calculate);\n            e.zrDelta = (e.wheelDelta) ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n        }\n        else {\n            var touch = eventType != 'touchend'\n                ? e.targetTouches[0]\n                : e.changedTouches[0];\n            touch && clientToLocal(el, touch, e, calculate);\n        }\n\n        return e;\n    }\n\n    function addEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.addEventListener(name, handler);\n        }\n        else {\n            el.attachEvent('on' + name, handler);\n        }\n    }\n\n    function removeEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.removeEventListener(name, handler);\n        }\n        else {\n            el.detachEvent('on' + name, handler);\n        }\n    }\n\n    /**\n     * preventDefault and stopPropagation.\n     * Notice: do not do that in zrender. Upper application\n     * do that if necessary.\n     *\n     * @memberOf module:zrender/core/event\n     * @method\n     * @param {Event} e : event对象\n     */\n    var stop = isDomLevel2\n        ? function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.cancelBubble = true;\n        }\n        : function (e) {\n            e.returnValue = false;\n            e.cancelBubble = true;\n        };\n\n    module.exports = {\n        clientToLocal: clientToLocal,\n        normalizeEvent: normalizeEvent,\n        addEventListener: addEventListener,\n        removeEventListener: removeEventListener,\n\n        stop: stop,\n        // 做向上兼容\n        Dispatcher: Eventful\n    };\n\n\n\n/***/ }),\n/* 626 */\n/***/ (function(module, exports) {\n\n/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n\n\n    var arrySlice = Array.prototype.slice;\n\n    /**\n     * 事件分发器\n     * @alias module:zrender/mixin/Eventful\n     * @constructor\n     */\n    var Eventful = function () {\n        this._$handlers = {};\n    };\n\n    Eventful.prototype = {\n\n        constructor: Eventful,\n\n        /**\n         * 单次触发绑定，trigger后销毁\n         *\n         * @param {string} event 事件名\n         * @param {Function} handler 响应函数\n         * @param {Object} context\n         */\n        one: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: true,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 绑定事件\n         * @param {string} event 事件名\n         * @param {Function} handler 事件处理函数\n         * @param {Object} [context]\n         */\n        on: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: false,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 是否绑定了事件\n         * @param  {string}  event\n         * @return {boolean}\n         */\n        isSilent: function (event) {\n            var _h = this._$handlers;\n            return _h[event] && _h[event].length;\n        },\n\n        /**\n         * 解绑事件\n         * @param {string} event 事件名\n         * @param {Function} [handler] 事件处理函数\n         */\n        off: function (event, handler) {\n            var _h = this._$handlers;\n\n            if (!event) {\n                this._$handlers = {};\n                return this;\n            }\n\n            if (handler) {\n                if (_h[event]) {\n                    var newList = [];\n                    for (var i = 0, l = _h[event].length; i < l; i++) {\n                        if (_h[event][i]['h'] != handler) {\n                            newList.push(_h[event][i]);\n                        }\n                    }\n                    _h[event] = newList;\n                }\n\n                if (_h[event] && _h[event].length === 0) {\n                    delete _h[event];\n                }\n            }\n            else {\n                delete _h[event];\n            }\n\n            return this;\n        },\n\n        /**\n         * 事件分发\n         *\n         * @param {string} type 事件类型\n         */\n        trigger: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 3) {\n                    args = arrySlice.call(args, 1);\n                }\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(_h[i]['ctx']);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(_h[i]['ctx'], args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 带有context的事件分发, 最后一个参数是事件回调的context\n         * @param {string} type 事件类型\n         */\n        triggerWithContext: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 4) {\n                    args = arrySlice.call(args, 1, args.length - 1);\n                }\n                var ctx = args[args.length - 1];\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(ctx);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(ctx, args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(ctx, args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(ctx, args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        }\n    };\n\n    // 对象可以通过 onxxxx 绑定事件\n    /**\n     * @event module:zrender/mixin/Eventful#onclick\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseout\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousemove\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousewheel\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousedown\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseup\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrag\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragstart\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragend\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragenter\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragleave\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrop\n     * @type {Function}\n     * @default null\n     */\n\n    module.exports = Eventful;\n\n\n\n/***/ }),\n/* 627 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/tool/color\n */\n\n\n    var LRU = __webpack_require__(671);\n\n    var kCSSColorTable = {\n        'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\n        'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\n        'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\n        'beige': [245,245,220,1], 'bisque': [255,228,196,1],\n        'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\n        'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\n        'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\n        'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\n        'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\n        'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\n        'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\n        'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\n        'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\n        'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\n        'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\n        'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\n        'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\n        'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\n        'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\n        'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\n        'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\n        'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\n        'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\n        'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\n        'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\n        'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\n        'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\n        'gray': [128,128,128,1], 'green': [0,128,0,1],\n        'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\n        'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\n        'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\n        'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\n        'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\n        'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\n        'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\n        'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\n        'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\n        'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\n        'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\n        'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\n        'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\n        'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\n        'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\n        'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\n        'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\n        'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\n        'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\n        'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\n        'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\n        'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\n        'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\n        'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\n        'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\n        'orange': [255,165,0,1], 'orangered': [255,69,0,1],\n        'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\n        'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\n        'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\n        'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\n        'pink': [255,192,203,1], 'plum': [221,160,221,1],\n        'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\n        'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\n        'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\n        'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\n        'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\n        'sienna': [160,82,45,1], 'silver': [192,192,192,1],\n        'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\n        'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\n        'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\n        'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\n        'teal': [0,128,128,1], 'thistle': [216,191,216,1],\n        'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\n        'violet': [238,130,238,1], 'wheat': [245,222,179,1],\n        'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\n        'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\n    };\n\n    function clampCssByte(i) {  // Clamp to integer 0 .. 255.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 255 ? 255 : i;\n    }\n\n    function clampCssAngle(i) {  // Clamp to integer 0 .. 360.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 360 ? 360 : i;\n    }\n\n    function clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\n        return f < 0 ? 0 : f > 1 ? 1 : f;\n    }\n\n    function parseCssInt(str) {  // int or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssByte(parseFloat(str) / 100 * 255);\n        }\n        return clampCssByte(parseInt(str, 10));\n    }\n\n    function parseCssFloat(str) {  // float or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssFloat(parseFloat(str) / 100);\n        }\n        return clampCssFloat(parseFloat(str));\n    }\n\n    function cssHueToRgb(m1, m2, h) {\n        if (h < 0) {\n            h += 1;\n        }\n        else if (h > 1) {\n            h -= 1;\n        }\n\n        if (h * 6 < 1) {\n            return m1 + (m2 - m1) * h * 6;\n        }\n        if (h * 2 < 1) {\n            return m2;\n        }\n        if (h * 3 < 2) {\n            return m1 + (m2 - m1) * (2/3 - h) * 6;\n        }\n        return m1;\n    }\n\n    function lerp(a, b, p) {\n        return a + (b - a) * p;\n    }\n\n    function setRgba(out, r, g, b, a) {\n        out[0] = r; out[1] = g; out[2] = b; out[3] = a;\n        return out;\n    }\n    function copyRgba(out, a) {\n        out[0] = a[0]; out[1] = a[1]; out[2] = a[2]; out[3] = a[3];\n        return out;\n    }\n    var colorCache = new LRU(20);\n    var lastRemovedArr = null;\n    function putToCache(colorStr, rgbaArr) {\n        // Reuse removed array\n        if (lastRemovedArr) {\n            copyRgba(lastRemovedArr, rgbaArr);\n        }\n        lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || (rgbaArr.slice()));\n    }\n    /**\n     * @param {string} colorStr\n     * @param {Array.<number>} out\n     * @return {Array.<number>}\n     * @memberOf module:zrender/util/color\n     */\n    function parse(colorStr, rgbaArr) {\n        if (!colorStr) {\n            return;\n        }\n        rgbaArr = rgbaArr || [];\n\n        var cached = colorCache.get(colorStr);\n        if (cached) {\n            return copyRgba(rgbaArr, cached);\n        }\n\n        // colorStr may be not string\n        colorStr = colorStr + '';\n        // Remove all whitespace, not compliant, but should just be more accepting.\n        var str = colorStr.replace(/ /g, '').toLowerCase();\n\n        // Color keywords (and transparent) lookup.\n        if (str in kCSSColorTable) {\n            copyRgba(rgbaArr, kCSSColorTable[str]);\n            putToCache(colorStr, rgbaArr);\n            return rgbaArr;\n        }\n\n        // #abc and #abc123 syntax.\n        if (str.charAt(0) === '#') {\n            if (str.length === 4) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xfff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n                    (iv & 0xf0) | ((iv & 0xf0) >> 4),\n                    (iv & 0xf) | ((iv & 0xf) << 4),\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n            else if (str.length === 7) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xffffff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    (iv & 0xff0000) >> 16,\n                    (iv & 0xff00) >> 8,\n                    iv & 0xff,\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n\n            return;\n        }\n        var op = str.indexOf('('), ep = str.indexOf(')');\n        if (op !== -1 && ep + 1 === str.length) {\n            var fname = str.substr(0, op);\n            var params = str.substr(op + 1, ep - (op + 1)).split(',');\n            var alpha = 1;  // To allow case fallthrough.\n            switch (fname) {\n                case 'rgba':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    alpha = parseCssFloat(params.pop()); // jshint ignore:line\n                // Fall through.\n                case 'rgb':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    setRgba(rgbaArr,\n                        parseCssInt(params[0]),\n                        parseCssInt(params[1]),\n                        parseCssInt(params[2]),\n                        alpha\n                    );\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsla':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    params[3] = parseCssFloat(params[3]);\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsl':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                default:\n                    return;\n            }\n        }\n\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return;\n    }\n\n    /**\n     * @param {Array.<number>} hsla\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} rgba\n     */\n    function hsla2rgba(hsla, rgba) {\n        var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parseCssFloat(hsla[1]);\n        var l = parseCssFloat(hsla[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n\n        rgba = rgba || [];\n        setRgba(rgba,\n            clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255),\n            1\n        );\n\n        if (hsla.length === 4) {\n            rgba[3] = hsla[3];\n        }\n\n        return rgba;\n    }\n\n    /**\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} hsla\n     */\n    function rgba2hsla(rgba) {\n        if (!rgba) {\n            return;\n        }\n\n        // RGB from 0 to 255\n        var R = rgba[0] / 255;\n        var G = rgba[1] / 255;\n        var B = rgba[2] / 255;\n\n        var vMin = Math.min(R, G, B); // Min. value of RGB\n        var vMax = Math.max(R, G, B); // Max. value of RGB\n        var delta = vMax - vMin; // Delta RGB value\n\n        var L = (vMax + vMin) / 2;\n        var H;\n        var S;\n        // HSL results from 0 to 1\n        if (delta === 0) {\n            H = 0;\n            S = 0;\n        }\n        else {\n            if (L < 0.5) {\n                S = delta / (vMax + vMin);\n            }\n            else {\n                S = delta / (2 - vMax - vMin);\n            }\n\n            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\n            if (R === vMax) {\n                H = deltaB - deltaG;\n            }\n            else if (G === vMax) {\n                H = (1 / 3) + deltaR - deltaB;\n            }\n            else if (B === vMax) {\n                H = (2 / 3) + deltaG - deltaR;\n            }\n\n            if (H < 0) {\n                H += 1;\n            }\n\n            if (H > 1) {\n                H -= 1;\n            }\n        }\n\n        var hsla = [H * 360, S, L];\n\n        if (rgba[3] != null) {\n            hsla.push(rgba[3]);\n        }\n\n        return hsla;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number} level\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function lift(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            for (var i = 0; i < 3; i++) {\n                if (level < 0) {\n                    colorArr[i] = colorArr[i] * (1 - level) | 0;\n                }\n                else {\n                    colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\n                }\n            }\n            return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function toHex(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\n        }\n    }\n\n    /**\n     * Map value to color. Faster than mapToColor methods because color is represented by rgba array.\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<Array.<number>>} colors List of rgba color array\n     * @param {Array.<number>} [out] Mapped gba color array\n     * @return {Array.<number>} will be null/undefined if input illegal.\n     */\n    function fastMapToColor(normalizedValue, colors, out) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        out = out || [];\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = colors[leftIndex];\n        var rightColor = colors[rightIndex];\n        var dv = value - leftIndex;\n        out[0] = clampCssByte(lerp(leftColor[0], rightColor[0], dv));\n        out[1] = clampCssByte(lerp(leftColor[1], rightColor[1], dv));\n        out[2] = clampCssByte(lerp(leftColor[2], rightColor[2], dv));\n        out[3] = clampCssFloat(lerp(leftColor[3], rightColor[3], dv));\n\n        return out;\n    }\n    /**\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<string>} colors Color list.\n     * @param {boolean=} fullOutput Default false.\n     * @return {(string|Object)} Result color. If fullOutput,\n     *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n     * @memberOf module:zrender/util/color\n     */\n    function mapToColor(normalizedValue, colors, fullOutput) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = parse(colors[leftIndex]);\n        var rightColor = parse(colors[rightIndex]);\n        var dv = value - leftIndex;\n\n        var color = stringify(\n            [\n                clampCssByte(lerp(leftColor[0], rightColor[0], dv)),\n                clampCssByte(lerp(leftColor[1], rightColor[1], dv)),\n                clampCssByte(lerp(leftColor[2], rightColor[2], dv)),\n                clampCssFloat(lerp(leftColor[3], rightColor[3], dv))\n            ],\n            'rgba'\n        );\n\n        return fullOutput\n            ? {\n                color: color,\n                leftIndex: leftIndex,\n                rightIndex: rightIndex,\n                value: value\n            }\n            : color;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} h 0 ~ 360, ignore when null.\n     * @param {number=} s 0 ~ 1, ignore when null.\n     * @param {number=} l 0 ~ 1, ignore when null.\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyHSL(color, h, s, l) {\n        color = parse(color);\n\n        if (color) {\n            color = rgba2hsla(color);\n            h != null && (color[0] = clampCssAngle(h));\n            s != null && (color[1] = parseCssFloat(s));\n            l != null && (color[2] = parseCssFloat(l));\n\n            return stringify(hsla2rgba(color), 'rgba');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} alpha 0 ~ 1\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyAlpha(color, alpha) {\n        color = parse(color);\n\n        if (color && alpha != null) {\n            color[3] = clampCssFloat(alpha);\n            return stringify(color, 'rgba');\n        }\n    }\n\n    /**\n     * @param {Array.<number>} arrColor like [12,33,44,0.4]\n     * @param {string} type 'rgba', 'hsva', ...\n     * @return {string} Result color. (If input illegal, return undefined).\n     */\n    function stringify(arrColor, type) {\n        if (!arrColor || !arrColor.length) {\n            return;\n        }\n        var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n        if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n            colorStr += ',' + arrColor[3];\n        }\n        return type + '(' + colorStr + ')';\n    }\n\n    module.exports = {\n        parse: parse,\n        lift: lift,\n        toHex: toHex,\n        fastMapToColor: fastMapToColor,\n        mapToColor: mapToColor,\n        modifyHSL: modifyHSL,\n        modifyAlpha: modifyAlpha,\n        stringify: stringify\n    };\n\n\n\n\n/***/ }),\n/* 628 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return listLoadMixin; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return chartDataMixin; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return dateMixin; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_common_js_util__ = __webpack_require__(138);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vux_src_tools_date_format_js__ = __webpack_require__(624);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vux_src_tools_date_format_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_vux_src_tools_date_format_js__);\n\n\n\nvar hold = 4000;\n\nvar listLoadMixin = {\n  methods: {\n    _refresh: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_common_js_util__[\"b\" /* throttle */])(function () {\n      this.refresh();\n    }, hold),\n    _loadMore: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_common_js_util__[\"b\" /* throttle */])(function () {\n      this.loadMore();\n    }, hold)\n  }\n};\n\nvar chartDataMixin = {\n  methods: {\n    normalizLineData: function normalizLineData(dataObj) {\n      var obj = {\n        columns: ['日期'],\n        rows: []\n      };\n      dataObj.bars.forEach(function (item) {\n        obj.columns.push(item.name);\n      });\n      for (var i = 0; i < dataObj.times.length; i++) {\n        var o = {};\n        o['日期'] = dataObj.times[i];\n        for (var j = 0; j < dataObj.bars.length; j++) {\n          o[dataObj.bars[j].name] = dataObj.bars[j].data[i];\n        }\n        obj.rows.push(o);\n      }\n      return obj;\n    }\n  }\n};\n\nvar dateMixin = {\n  methods: {\n    checkTime: function checkTime(startTime, endTime) {\n      if (Date.parse(startTime) >= Date.parse(endTime)) {\n        this.$vux.toast.show({\n          text: '起始时间必须小于结束时间',\n          time: 1000,\n          type: 'warn'\n        });\n        return false;\n      }\n      return true;\n    }\n  },\n  filters: {\n    formatDate: function formatDate(date) {\n      return __WEBPACK_IMPORTED_MODULE_1_vux_src_tools_date_format_js___default()(date, 'YYYY-MM-DD');\n    }\n  }\n};\n\n/***/ }),\n/* 629 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var Model = __webpack_require__(614);\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n\n    var helper = {};\n\n    // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n    // allAxesInfo should be updated when setOption performed.\n    helper.collect = function (ecModel, api) {\n        var result = {\n            /**\n             * key: makeKey(axis.model)\n             * value: {\n             *      axis,\n             *      coordSys,\n             *      axisPointerModel,\n             *      triggerTooltip,\n             *      involveSeries,\n             *      snap,\n             *      seriesModels,\n             *      seriesDataCount\n             * }\n             */\n            axesInfo: {},\n            seriesInvolved: false,\n            /**\n             * key: makeKey(coordSys.model)\n             * value: Object: key makeKey(axis.model), value: axisInfo\n             */\n            coordSysAxesInfo: {},\n            coordSysMap: {}\n        };\n\n        collectAxesInfo(result, ecModel, api);\n\n        // Check seriesInvolved for performance, in case too many series in some chart.\n        result.seriesInvolved && collectSeriesInfo(result, ecModel);\n\n        return result;\n    };\n\n    function collectAxesInfo(result, ecModel, api) {\n        var globalTooltipModel = ecModel.getComponent('tooltip');\n        var globalAxisPointerModel = ecModel.getComponent('axisPointer');\n        // links can only be set on global.\n        var linksOption = globalAxisPointerModel.get('link', true) || [];\n        var linkGroups = [];\n\n        // Collect axes info.\n        each(api.getCoordinateSystems(), function (coordSys) {\n            // Some coordinate system do not support axes, like geo.\n            if (!coordSys.axisPointerEnabled) {\n                return;\n            }\n\n            var coordSysKey = makeKey(coordSys.model);\n            var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n            result.coordSysMap[coordSysKey] = coordSys;\n\n            // Set tooltip (like 'cross') is a convienent way to show axisPointer\n            // for user. So we enable seting tooltip on coordSys model.\n            var coordSysModel = coordSys.model;\n            var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n\n            each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null));\n\n            // If axis tooltip used, choose tooltip axis for each coordSys.\n            // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n            if (coordSys.getTooltipAxes\n                && globalTooltipModel\n                // If tooltip.showContent is set as false, tooltip will not\n                // show but axisPointer will show as normal.\n                && baseTooltipModel.get('show')\n            ) {\n                // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n                // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n                var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n                var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n                var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n                if (triggerAxis || cross) {\n                    each(tooltipAxes.baseAxes, curry(\n                        saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis\n                    ));\n                }\n                if (cross) {\n                    each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n                }\n            }\n\n            // fromTooltip: true | false | 'cross'\n            // triggerTooltip: true | false | null\n            function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n                var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n\n                var axisPointerShow = axisPointerModel.get('show');\n                if (!axisPointerShow || (\n                    axisPointerShow === 'auto'\n                    && !fromTooltip\n                    && !isHandleTrigger(axisPointerModel)\n                )) {\n                    return;\n                }\n\n                if (triggerTooltip == null) {\n                    triggerTooltip = axisPointerModel.get('triggerTooltip');\n                }\n\n                axisPointerModel = fromTooltip\n                    ? makeAxisPointerModel(\n                        axis, baseTooltipModel, globalAxisPointerModel, ecModel,\n                        fromTooltip, triggerTooltip\n                    )\n                    : axisPointerModel;\n\n                var snap = axisPointerModel.get('snap');\n                var key = makeKey(axis.model);\n                var involveSeries = triggerTooltip || snap || axis.type === 'category';\n\n                // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n                var axisInfo = result.axesInfo[key] = {\n                    key: key,\n                    axis: axis,\n                    coordSys: coordSys,\n                    axisPointerModel: axisPointerModel,\n                    triggerTooltip: triggerTooltip,\n                    involveSeries: involveSeries,\n                    snap: snap,\n                    useHandle: isHandleTrigger(axisPointerModel),\n                    seriesModels: []\n                };\n                axesInfoInCoordSys[key] = axisInfo;\n                result.seriesInvolved |= involveSeries;\n\n                var groupIndex = getLinkGroupIndex(linksOption, axis);\n                if (groupIndex != null) {\n                    var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {axesInfo: {}});\n                    linkGroup.axesInfo[key] = axisInfo;\n                    linkGroup.mapper = linksOption[groupIndex].mapper;\n                    axisInfo.linkGroup = linkGroup;\n                }\n            }\n        });\n    }\n\n    function makeAxisPointerModel(\n        axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip\n    ) {\n        var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n        var volatileOption = {};\n\n        each(\n            [\n                'type', 'snap', 'lineStyle', 'shadowStyle', 'label',\n                'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'\n            ],\n            function (field) {\n                volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n            }\n        );\n\n        // category axis do not auto snap, otherwise some tick that do not\n        // has value can not be hovered. value/time/log axis default snap if\n        // triggered from tooltip and trigger tooltip.\n        volatileOption.snap = axis.type !== 'category' && !!triggerTooltip;\n\n        // Compatibel with previous behavior, tooltip axis do not show label by default.\n        // Only these properties can be overrided from tooltip to axisPointer.\n        if (tooltipAxisPointerModel.get('type') === 'cross') {\n            volatileOption.type = 'line';\n        }\n        var labelOption = volatileOption.label || (volatileOption.label = {});\n        // Follow the convention, do not show label when triggered by tooltip by default.\n        labelOption.show == null && (labelOption.show = false);\n\n        if (fromTooltip === 'cross') {\n            // When 'cross', both axes show labels.\n            labelOption.show = true;\n            // If triggerTooltip, this is a base axis, which should better not use cross style\n            // (cross style is dashed by default)\n            if (!triggerTooltip) {\n                var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n                crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n            }\n        }\n\n        return axis.model.getModel(\n            'axisPointer',\n            new Model(volatileOption, globalAxisPointerModel, ecModel)\n        );\n    }\n\n    function collectSeriesInfo(result, ecModel) {\n        // Prepare data for axis trigger\n        ecModel.eachSeries(function (seriesModel) {\n\n            // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n            var coordSys = seriesModel.coordinateSystem;\n            var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n            var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n            if (!coordSys\n                || seriesTooltipTrigger === 'none'\n                || seriesTooltipTrigger === false\n                || seriesTooltipTrigger === 'item'\n                || seriesTooltipShow === false\n                || seriesModel.get('axisPointer.show', true) === false\n            ) {\n                return;\n            }\n\n            each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n                var axis = axisInfo.axis;\n                if (coordSys.getAxis(axis.dim) === axis) {\n                    axisInfo.seriesModels.push(seriesModel);\n                    axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n                    axisInfo.seriesDataCount += seriesModel.getData().count();\n                }\n            });\n\n        }, this);\n    }\n\n    /**\n     * For example:\n     * {\n     *     axisPointer: {\n     *         links: [{\n     *             xAxisIndex: [2, 4],\n     *             yAxisIndex: 'all'\n     *         }, {\n     *             xAxisId: ['a5', 'a7'],\n     *             xAxisName: 'xxx'\n     *         }]\n     *     }\n     * }\n     */\n    function getLinkGroupIndex(linksOption, axis) {\n        var axisModel = axis.model;\n        var dim = axis.dim;\n        for (var i = 0; i < linksOption.length; i++) {\n            var linkOption = linksOption[i] || {};\n            if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id)\n                || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex)\n                || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)\n            ) {\n                return i;\n            }\n        }\n    }\n\n    function checkPropInLink(linkPropValue, axisPropValue) {\n        return linkPropValue === 'all'\n            || (zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0)\n            || linkPropValue === axisPropValue;\n    }\n\n    helper.fixValue = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        if (!axisInfo) {\n            return;\n        }\n\n        var axisPointerModel = axisInfo.axisPointerModel;\n        var scale = axisInfo.axis.scale;\n        var option = axisPointerModel.option;\n        var status = axisPointerModel.get('status');\n        var value = axisPointerModel.get('value');\n\n        // Parse init value for category and time axis.\n        if (value != null) {\n            value = scale.parse(value);\n        }\n\n        var useHandle = isHandleTrigger(axisPointerModel);\n        // If `handle` used, `axisPointer` will always be displayed, so value\n        // and status should be initialized.\n        if (status == null) {\n            option.status = useHandle ? 'show' : 'hide';\n        }\n\n        var extent = scale.getExtent().slice();\n        extent[0] > extent[1] && extent.reverse();\n\n        if (// Pick a value on axis when initializing.\n            value == null\n            // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n            // where we should re-pick a value to keep `handle` displaying normally.\n            || value > extent[1]\n        ) {\n            // Make handle displayed on the end of the axis when init, which looks better.\n            value = extent[1];\n        }\n        if (value < extent[0]) {\n            value = extent[0];\n        }\n\n        option.value = value;\n\n        if (useHandle) {\n            option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n        }\n    };\n\n    helper.getAxisInfo = function (axisModel) {\n        var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n        return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n    };\n\n    helper.getAxisPointerModel = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        return axisInfo && axisInfo.axisPointerModel;\n    };\n\n    function isHandleTrigger(axisPointerModel) {\n        return !!axisPointerModel.get('handle.show');\n    }\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @return {string} unique key\n     */\n    var makeKey = helper.makeKey = function (model) {\n        return model.type + '||' + model.id;\n    };\n\n    module.exports = helper;\n\n\n\n/***/ }),\n/* 630 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n * List for data storage\n * @module echarts/data/List\n */\n\n\n    var UNDEFINED = 'undefined';\n    var globalObj = typeof window === 'undefined' ? global : window;\n    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\n        ? Array : globalObj.Float64Array;\n    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\n        ? Array : globalObj.Int32Array;\n\n    var dataCtors = {\n        'float': Float64Array,\n        'int': Int32Array,\n        // Ordinal data type can be string or int\n        'ordinal': Array,\n        'number': Array,\n        'time': Array\n    };\n\n    var Model = __webpack_require__(614);\n    var DataDiffer = __webpack_require__(739);\n\n    var zrUtil = __webpack_require__(606);\n    var modelUtil = __webpack_require__(609);\n    var isObject = zrUtil.isObject;\n\n    var TRANSFERABLE_PROPERTIES = [\n        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\n    ];\n\n    function transferProperties(a, b) {\n        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n            if (b.hasOwnProperty(propName)) {\n                a[propName] = b[propName];\n            }\n        });\n\n        a.__wrappedMethods = b.__wrappedMethods;\n    }\n\n    function DefaultDataProvider(dataArray) {\n        this._array = dataArray || [];\n    }\n\n    DefaultDataProvider.prototype.pure = false;\n\n    DefaultDataProvider.prototype.count = function () {\n        return this._array.length;\n    };\n    DefaultDataProvider.prototype.getItem = function (idx) {\n        return this._array[idx];\n    };\n\n    /**\n     * @constructor\n     * @alias module:echarts/data/List\n     *\n     * @param {Array.<string|Object>} dimensions\n     *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n     *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n     * @param {module:echarts/model/Model} hostModel\n     */\n    var List = function (dimensions, hostModel) {\n\n        dimensions = dimensions || ['x', 'y'];\n\n        var dimensionInfos = {};\n        var dimensionNames = [];\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimensionName;\n            var dimensionInfo = {};\n            if (typeof dimensions[i] === 'string') {\n                dimensionName = dimensions[i];\n                dimensionInfo = {\n                    name: dimensionName,\n                    coordDim: dimensionName,\n                    coordDimIndex: 0,\n                    stackable: false,\n                    // Type can be 'float', 'int', 'number'\n                    // Default is number, Precision of float may not enough\n                    type: 'number'\n                };\n            }\n            else {\n                dimensionInfo = dimensions[i];\n                dimensionName = dimensionInfo.name;\n                dimensionInfo.type = dimensionInfo.type || 'number';\n                if (!dimensionInfo.coordDim) {\n                    dimensionInfo.coordDim = dimensionName;\n                    dimensionInfo.coordDimIndex = 0;\n                }\n            }\n            dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n            dimensionNames.push(dimensionName);\n            dimensionInfos[dimensionName] = dimensionInfo;\n        }\n\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        this.dimensions = dimensionNames;\n\n        /**\n         * Infomation of each data dimension, like data type.\n         * @type {Object}\n         */\n        this._dimensionInfos = dimensionInfos;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.hostModel = hostModel;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.dataType;\n\n        /**\n         * Indices stores the indices of data subset after filtered.\n         * This data subset will be used in chart.\n         * @type {Array.<number>}\n         * @readOnly\n         */\n        this.indices = [];\n\n        /**\n         * Data storage\n         * @type {Object.<key, TypedArray|Array>}\n         * @private\n         */\n        this._storage = {};\n\n        /**\n         * @type {Array.<string>}\n         */\n        this._nameList = [];\n        /**\n         * @type {Array.<string>}\n         */\n        this._idList = [];\n\n        /**\n         * Models of data option is stored sparse for optimizing memory cost\n         * @type {Array.<module:echarts/model/Model>}\n         * @private\n         */\n        this._optionModels = [];\n\n        /**\n         * @param {module:echarts/data/List}\n         */\n        this.stackedOn = null;\n\n        /**\n         * Global visual properties after visual coding\n         * @type {Object}\n         * @private\n         */\n        this._visual = {};\n\n        /**\n         * Globel layout properties.\n         * @type {Object}\n         * @private\n         */\n        this._layout = {};\n\n        /**\n         * Item visual properties after visual coding\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemVisuals = [];\n\n        /**\n         * Item layout properties after layout\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemLayouts = [];\n\n        /**\n         * Graphic elemnents\n         * @type {Array.<module:zrender/Element>}\n         * @private\n         */\n        this._graphicEls = [];\n\n        /**\n         * @type {Array.<Array|Object>}\n         * @private\n         */\n        this._rawData;\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._extent;\n    };\n\n    var listProto = List.prototype;\n\n    listProto.type = 'list';\n\n    /**\n     * If each data item has it's own option\n     * @type {boolean}\n     */\n    listProto.hasItemOption = true;\n\n    /**\n     * Get dimension name\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     * @return {string} Concrete dim name.\n     */\n    listProto.getDimension = function (dim) {\n        if (!isNaN(dim)) {\n            dim = this.dimensions[dim] || dim;\n        }\n        return dim;\n    };\n\n    /**\n     * Get type and stackable info of particular dimension\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     */\n    listProto.getDimensionInfo = function (dim) {\n        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n    };\n\n    /**\n     * Initialize from data\n     * @param {Array.<Object|number|Array>} data\n     * @param {Array.<string>} [nameList]\n     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n     */\n    listProto.initData = function (data, nameList, dimValueGetter) {\n        data = data || [];\n\n        var isDataArray = zrUtil.isArray(data);\n        if (isDataArray) {\n            data = new DefaultDataProvider(data);\n        }\n        if (__DEV__) {\n            if (!isDataArray && (typeof data.getItem != 'function' || typeof data.count != 'function')) {\n                throw new Error('Inavlid data provider.');\n            }\n        }\n\n        this._rawData = data;\n\n        // Clear\n        var storage = this._storage = {};\n        var indices = this.indices = [];\n\n        var dimensions = this.dimensions;\n        var dimensionInfoMap = this._dimensionInfos;\n\n        var size = data.count();\n\n        var idList = [];\n        var nameRepeatCount = {};\n        var nameDimIdx;\n\n        nameList = nameList || [];\n\n        // Init storage\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimInfo = dimensionInfoMap[dimensions[i]];\n            dimInfo.otherDims.itemName === 0 && (nameDimIdx = i);\n            var DataCtor = dataCtors[dimInfo.type];\n            storage[dimensions[i]] = new DataCtor(size);\n        }\n\n        var self = this;\n        if (!dimValueGetter) {\n            self.hasItemOption = false;\n        }\n        // Default dim value getter\n        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n            var value = modelUtil.getDataItemValue(dataItem);\n            // If any dataItem is like { value: 10 }\n            if (modelUtil.isDataItemOption(dataItem)) {\n                self.hasItemOption = true;\n            }\n            return modelUtil.converDataValue(\n                (value instanceof Array)\n                    ? value[dimIndex]\n                    // If value is a single number or something else not array.\n                    : value,\n                dimensionInfoMap[dimName]\n            );\n        };\n\n        for (var i = 0; i < size; i++) {\n            // NOTICE: Try not to write things into dataItem\n            var dataItem = data.getItem(i);\n            // Each data item is value\n            // [1, 2]\n            // 2\n            // Bar chart, line chart which uses category axis\n            // only gives the 'y' value. 'x' value is the indices of cateogry\n            // Use a tempValue to normalize the value to be a (x, y) value\n\n            // Store the data by dimensions\n            for (var k = 0; k < dimensions.length; k++) {\n                var dim = dimensions[k];\n                var dimStorage = storage[dim];\n                // PENDING NULL is empty or zero\n                dimStorage[i] = dimValueGetter(dataItem, dim, i, k);\n            }\n\n            indices.push(i);\n        }\n\n        // Use the name in option and create id\n        for (var i = 0; i < size; i++) {\n            var dataItem = data.getItem(i);\n            if (!nameList[i] && dataItem) {\n                if (dataItem.name != null) {\n                    nameList[i] = dataItem.name;\n                }\n                else if (nameDimIdx != null) {\n                    nameList[i] = storage[dimensions[nameDimIdx]][i];\n                }\n            }\n            var name = nameList[i] || '';\n            // Try using the id in option\n            var id = dataItem && dataItem.id;\n\n            if (!id && name) {\n                // Use name as id and add counter to avoid same name\n                nameRepeatCount[name] = nameRepeatCount[name] || 0;\n                id = name;\n                if (nameRepeatCount[name] > 0) {\n                    id += '__ec__' + nameRepeatCount[name];\n                }\n                nameRepeatCount[name]++;\n            }\n            id && (idList[i] = id);\n        }\n\n        this._nameList = nameList;\n        this._idList = idList;\n    };\n\n    /**\n     * @return {number}\n     */\n    listProto.count = function () {\n        return this.indices.length;\n    };\n\n    /**\n     * Get value. Return NaN if idx is out of range.\n     * @param {string} dim Dim must be concrete name.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.get = function (dim, idx, stack) {\n        var storage = this._storage;\n        var dataIndex = this.indices[idx];\n\n        // If value not exists\n        if (dataIndex == null || !storage[dim]) {\n            return NaN;\n        }\n\n        var value = storage[dim][dataIndex];\n        // FIXME ordinal data type is not stackable\n        if (stack) {\n            var dimensionInfo = this._dimensionInfos[dim];\n            if (dimensionInfo && dimensionInfo.stackable) {\n                var stackedOn = this.stackedOn;\n                while (stackedOn) {\n                    // Get no stacked data of stacked on\n                    var stackedValue = stackedOn.get(dim, idx);\n                    // Considering positive stack, negative stack and empty data\n                    if ((value >= 0 && stackedValue > 0)  // Positive stack\n                        || (value <= 0 && stackedValue < 0) // Negative stack\n                    ) {\n                        value += stackedValue;\n                    }\n                    stackedOn = stackedOn.stackedOn;\n                }\n            }\n        }\n        return value;\n    };\n\n    /**\n     * Get value for multi dimensions.\n     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.getValues = function (dimensions, idx, stack) {\n        var values = [];\n\n        if (!zrUtil.isArray(dimensions)) {\n            stack = idx;\n            idx = dimensions;\n            dimensions = this.dimensions;\n        }\n\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            values.push(this.get(dimensions[i], idx, stack));\n        }\n\n        return values;\n    };\n\n    /**\n     * If value is NaN. Inlcuding '-'\n     * @param {string} dim\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.hasValue = function (idx) {\n        var dimensions = this.dimensions;\n        var dimensionInfos = this._dimensionInfos;\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            if (\n                // Ordinal type can be string or number\n                dimensionInfos[dimensions[i]].type !== 'ordinal'\n                && isNaN(this.get(dimensions[i], idx))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * Get extent of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     * @param {Function} filter\n     */\n    listProto.getDataExtent = function (dim, stack, filter) {\n        dim = this.getDimension(dim);\n        var dimData = this._storage[dim];\n        var dimInfo = this.getDimensionInfo(dim);\n        stack = (dimInfo && dimInfo.stackable) && stack;\n        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\n        var value;\n        if (dimExtent) {\n            return dimExtent;\n        }\n        // var dimInfo = this._dimensionInfos[dim];\n        if (dimData) {\n            var min = Infinity;\n            var max = -Infinity;\n            // var isOrdinal = dimInfo.type === 'ordinal';\n            for (var i = 0, len = this.count(); i < len; i++) {\n                value = this.get(dim, i, stack);\n                // FIXME\n                // if (isOrdinal && typeof value === 'string') {\n                //     value = zrUtil.indexOf(dimData, value);\n                // }\n                if (!filter || filter(value, dim, i)) {\n                    value < min && (min = value);\n                    value > max && (max = value);\n                }\n            }\n            return (this._extent[dim + !!stack] = [min, max]);\n        }\n        else {\n            return [Infinity, -Infinity];\n        }\n    };\n\n    /**\n     * Get sum of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getSum = function (dim, stack) {\n        var dimData = this._storage[dim];\n        var sum = 0;\n        if (dimData) {\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var value = this.get(dim, i, stack);\n                if (!isNaN(value)) {\n                    sum += value;\n                }\n            }\n        }\n        return sum;\n    };\n\n    /**\n     * Retreive the index with given value\n     * @param {number} idx\n     * @param {number} value\n     * @return {number}\n     */\n    // FIXME Precision of float value\n    listProto.indexOf = function (dim, value) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var indices = this.indices;\n\n        if (dimData) {\n            for (var i = 0, len = indices.length; i < len; i++) {\n                var rawIndex = indices[i];\n                if (dimData[rawIndex] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given name\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfName = function (name) {\n        var indices = this.indices;\n        var nameList = this._nameList;\n\n        for (var i = 0, len = indices.length; i < len; i++) {\n            var rawIndex = indices[i];\n            if (nameList[rawIndex] === name) {\n                return i;\n            }\n        }\n\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given raw data index\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfRawIndex = function (rawIndex) {\n        // Indices are ascending\n        var indices = this.indices;\n\n        // If rawIndex === dataIndex\n        var rawDataIndex = indices[rawIndex];\n        if (rawDataIndex != null && rawDataIndex === rawIndex) {\n            return rawIndex;\n        }\n\n        var left = 0;\n        var right = indices.length - 1;\n        while (left <= right) {\n            var mid = (left + right) / 2 | 0;\n            if (indices[mid] < rawIndex) {\n                left = mid + 1;\n            }\n            else if (indices[mid] > rawIndex) {\n                right = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index of nearest value\n     * @param {string} dim\n     * @param {number} value\n     * @param {boolean} stack If given value is after stacked\n     * @param {number} [maxDistance=Infinity]\n     * @return {Array.<number>} Considere multiple points has the same value.\n     */\n    listProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var nearestIndices = [];\n\n        if (!dimData) {\n            return nearestIndices;\n        }\n\n        if (maxDistance == null) {\n            maxDistance = Infinity;\n        }\n\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n        for (var i = 0, len = this.count(); i < len; i++) {\n            var diff = value - this.get(dim, i, stack);\n            var dist = Math.abs(diff);\n            if (diff <= maxDistance && dist <= minDist) {\n                // For the case of two data are same on xAxis, which has sequence data.\n                // Show the nearest index\n                // https://github.com/ecomfe/echarts/issues/2869\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    nearestIndices.length = 0;\n                }\n                nearestIndices.push(i);\n            }\n        }\n        return nearestIndices;\n    };\n\n    /**\n     * Get raw data index\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawIndex = function (idx) {\n        var rawIdx = this.indices[idx];\n        return rawIdx == null ? -1 : rawIdx;\n    };\n\n    /**\n     * Get raw data item\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawDataItem = function (idx) {\n        return this._rawData.getItem(this.getRawIndex(idx));\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getName = function (idx) {\n        return this._nameList[this.indices[idx]] || '';\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getId = function (idx) {\n        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\n    };\n\n\n    function normalizeDimensions(dimensions) {\n        if (!zrUtil.isArray(dimensions)) {\n            dimensions = [dimensions];\n        }\n        return dimensions;\n    }\n\n    /**\n     * Data iteration\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     *\n     * @example\n     *  list.each('x', function (x, idx) {});\n     *  list.each(['x', 'y'], function (x, y, idx) {});\n     *  list.each(function (idx) {})\n     */\n    listProto.each = function (dims, cb, stack, context) {\n        if (typeof dims === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dims;\n            dims = [];\n        }\n\n        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n\n        var value = [];\n        var dimSize = dims.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            // Simple optimization\n            switch (dimSize) {\n                case 0:\n                    cb.call(context, i);\n                    break;\n                case 1:\n                    cb.call(context, this.get(dims[0], i, stack), i);\n                    break;\n                case 2:\n                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n                    break;\n                default:\n                    for (var k = 0; k < dimSize; k++) {\n                        value[k] = this.get(dims[k], i, stack);\n                    }\n                    // Index\n                    value[k] = i;\n                    cb.apply(context, value);\n            }\n        }\n    };\n\n    /**\n     * Data filter\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     */\n    listProto.filterSelf = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var newIndices = [];\n        var value = [];\n        var dimSize = dimensions.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            var keep;\n            // Simple optimization\n            if (!dimSize) {\n                keep = cb.call(context, i);\n            }\n            else if (dimSize === 1) {\n                keep = cb.call(\n                    context, this.get(dimensions[0], i, stack), i\n                );\n            }\n            else {\n                for (var k = 0; k < dimSize; k++) {\n                    value[k] = this.get(dimensions[k], i, stack);\n                }\n                value[k] = i;\n                keep = cb.apply(context, value);\n            }\n            if (keep) {\n                newIndices.push(indices[i]);\n            }\n        }\n\n        this.indices = newIndices;\n\n        // Reset data extent\n        this._extent = {};\n\n        return this;\n    };\n\n    /**\n     * Data mapping to a plain array\n     * @param {string|Array.<string>} [dimensions]\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.mapArray = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        var result = [];\n        this.each(dimensions, function () {\n            result.push(cb && cb.apply(this, arguments));\n        }, stack, context);\n        return result;\n    };\n\n    function cloneListForMapAndSample(original, excludeDimensions) {\n        var allDimensions = original.dimensions;\n        var list = new List(\n            zrUtil.map(allDimensions, original.getDimensionInfo, original),\n            original.hostModel\n        );\n        // FIXME If needs stackedOn, value may already been stacked\n        transferProperties(list, original);\n\n        var storage = list._storage = {};\n        var originalStorage = original._storage;\n        // Init storage\n        for (var i = 0; i < allDimensions.length; i++) {\n            var dim = allDimensions[i];\n            var dimStore = originalStorage[dim];\n            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n                storage[dim] = new dimStore.constructor(\n                    originalStorage[dim].length\n                );\n            }\n            else {\n                // Direct reference for other dimensions\n                storage[dim] = originalStorage[dim];\n            }\n        }\n        return list;\n    }\n\n    /**\n     * Data mapping to a new List with given dimensions\n     * @param {string|Array.<string>} dimensions\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.map = function (dimensions, cb, stack, context) {\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var list = cloneListForMapAndSample(this, dimensions);\n        // Following properties are all immutable.\n        // So we can reference to the same value\n        var indices = list.indices = this.indices;\n\n        var storage = list._storage;\n\n        var tmpRetValue = [];\n        this.each(dimensions, function () {\n            var idx = arguments[arguments.length - 1];\n            var retValue = cb && cb.apply(this, arguments);\n            if (retValue != null) {\n                // a number\n                if (typeof retValue === 'number') {\n                    tmpRetValue[0] = retValue;\n                    retValue = tmpRetValue;\n                }\n                for (var i = 0; i < retValue.length; i++) {\n                    var dim = dimensions[i];\n                    var dimStore = storage[dim];\n                    var rawIdx = indices[idx];\n                    if (dimStore) {\n                        dimStore[rawIdx] = retValue[i];\n                    }\n                }\n            }\n        }, stack, context);\n\n        return list;\n    };\n\n    /**\n     * Large data down sampling on given dimension\n     * @param {string} dimension\n     * @param {number} rate\n     * @param {Function} sampleValue\n     * @param {Function} sampleIndex Sample index for name and id\n     */\n    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n        var list = cloneListForMapAndSample(this, [dimension]);\n        var storage = this._storage;\n        var targetStorage = list._storage;\n\n        var originalIndices = this.indices;\n        var indices = list.indices = [];\n\n        var frameValues = [];\n        var frameIndices = [];\n        var frameSize = Math.floor(1 / rate);\n\n        var dimStore = targetStorage[dimension];\n        var len = this.count();\n        // Copy data from original data\n        for (var i = 0; i < storage[dimension].length; i++) {\n            targetStorage[dimension][i] = storage[dimension][i];\n        }\n        for (var i = 0; i < len; i += frameSize) {\n            // Last frame\n            if (frameSize > len - i) {\n                frameSize = len - i;\n                frameValues.length = frameSize;\n            }\n            for (var k = 0; k < frameSize; k++) {\n                var idx = originalIndices[i + k];\n                frameValues[k] = dimStore[idx];\n                frameIndices[k] = idx;\n            }\n            var value = sampleValue(frameValues);\n            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\n            // Only write value on the filtered data\n            dimStore[idx] = value;\n            indices.push(idx);\n        }\n\n        return list;\n    };\n\n    /**\n     * Get model of one data item.\n     *\n     * @param {number} idx\n     */\n    // FIXME Model proxy ?\n    listProto.getItemModel = function (idx) {\n        var hostModel = this.hostModel;\n        idx = this.indices[idx];\n        return new Model(this._rawData.getItem(idx), hostModel, hostModel && hostModel.ecModel);\n    };\n\n    /**\n     * Create a data differ\n     * @param {module:echarts/data/List} otherList\n     * @return {module:echarts/data/DataDiffer}\n     */\n    listProto.diff = function (otherList) {\n        var idList = this._idList;\n        var otherIdList = otherList && otherList._idList;\n        var val;\n        // Use prefix to avoid index to be the same as otherIdList[idx],\n        // which will cause weird udpate animation.\n        var prefix = 'e\\0\\0';\n\n        return new DataDiffer(\n            otherList ? otherList.indices : [],\n            this.indices,\n            function (idx) {\n                return (val = otherIdList[idx]) != null ? val : prefix + idx;\n            },\n            function (idx) {\n                return (val = idList[idx]) != null ? val : prefix + idx;\n            }\n        );\n    };\n    /**\n     * Get visual property.\n     * @param {string} key\n     */\n    listProto.getVisual = function (key) {\n        var visual = this._visual;\n        return visual && visual[key];\n    };\n\n    /**\n     * Set visual property\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setVisual('color', color);\n     *  setVisual({\n     *      'color': color\n     *  });\n     */\n    listProto.setVisual = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setVisual(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._visual = this._visual || {};\n        this._visual[key] = val;\n    };\n\n    /**\n     * Set layout property.\n     * @param {string|Object} key\n     * @param {*} [val]\n     */\n    listProto.setLayout = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setLayout(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._layout[key] = val;\n    };\n\n    /**\n     * Get layout property.\n     * @param  {string} key.\n     * @return {*}\n     */\n    listProto.getLayout = function (key) {\n        return this._layout[key];\n    };\n\n    /**\n     * Get layout of single data item\n     * @param {number} idx\n     */\n    listProto.getItemLayout = function (idx) {\n        return this._itemLayouts[idx];\n    };\n\n    /**\n     * Set layout of single data item\n     * @param {number} idx\n     * @param {Object} layout\n     * @param {boolean=} [merge=false]\n     */\n    listProto.setItemLayout = function (idx, layout, merge) {\n        this._itemLayouts[idx] = merge\n            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\n            : layout;\n    };\n\n    /**\n     * Clear all layout of single data item\n     */\n    listProto.clearItemLayouts = function () {\n        this._itemLayouts.length = 0;\n    };\n\n    /**\n     * Get visual property of single data item\n     * @param {number} idx\n     * @param {string} key\n     * @param {boolean} [ignoreParent=false]\n     */\n    listProto.getItemVisual = function (idx, key, ignoreParent) {\n        var itemVisual = this._itemVisuals[idx];\n        var val = itemVisual && itemVisual[key];\n        if (val == null && !ignoreParent) {\n            // Use global visual property\n            return this.getVisual(key);\n        }\n        return val;\n    };\n\n    /**\n     * Set visual property of single data item\n     *\n     * @param {number} idx\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setItemVisual(0, 'color', color);\n     *  setItemVisual(0, {\n     *      'color': color\n     *  });\n     */\n    listProto.setItemVisual = function (idx, key, value) {\n        var itemVisual = this._itemVisuals[idx] || {};\n        this._itemVisuals[idx] = itemVisual;\n\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    itemVisual[name] = key[name];\n                }\n            }\n            return;\n        }\n        itemVisual[key] = value;\n    };\n\n    /**\n     * Clear itemVisuals and list visual.\n     */\n    listProto.clearAllVisual = function () {\n        this._visual = {};\n        this._itemVisuals = [];\n    };\n\n    var setItemDataAndSeriesIndex = function (child) {\n        child.seriesIndex = this.seriesIndex;\n        child.dataIndex = this.dataIndex;\n        child.dataType = this.dataType;\n    };\n    /**\n     * Set graphic element relative to data. It can be set as null\n     * @param {number} idx\n     * @param {module:zrender/Element} [el]\n     */\n    listProto.setItemGraphicEl = function (idx, el) {\n        var hostModel = this.hostModel;\n\n        if (el) {\n            // Add data index and series index for indexing the data by element\n            // Useful in tooltip\n            el.dataIndex = idx;\n            el.dataType = this.dataType;\n            el.seriesIndex = hostModel && hostModel.seriesIndex;\n            if (el.type === 'group') {\n                el.traverse(setItemDataAndSeriesIndex, el);\n            }\n        }\n\n        this._graphicEls[idx] = el;\n    };\n\n    /**\n     * @param {number} idx\n     * @return {module:zrender/Element}\n     */\n    listProto.getItemGraphicEl = function (idx) {\n        return this._graphicEls[idx];\n    };\n\n    /**\n     * @param {Function} cb\n     * @param {*} context\n     */\n    listProto.eachItemGraphicEl = function (cb, context) {\n        zrUtil.each(this._graphicEls, function (el, idx) {\n            if (el) {\n                cb && cb.call(context, el, idx);\n            }\n        });\n    };\n\n    /**\n     * Shallow clone a new list except visual and layout properties, and graph elements.\n     * New list only change the indices.\n     */\n    listProto.cloneShallow = function () {\n        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n        var list = new List(dimensionInfoList, this.hostModel);\n\n        // FIXME\n        list._storage = this._storage;\n\n        transferProperties(list, this);\n\n\n        // Clone will not change the data extent and indices\n        list.indices = this.indices.slice();\n\n        if (this._extent) {\n            list._extent = zrUtil.extend({}, this._extent);\n        }\n\n        return list;\n    };\n\n    /**\n     * Wrap some method to add more feature\n     * @param {string} methodName\n     * @param {Function} injectFunction\n     */\n    listProto.wrapMethod = function (methodName, injectFunction) {\n        var originalMethod = this[methodName];\n        if (typeof originalMethod !== 'function') {\n            return;\n        }\n        this.__wrappedMethods = this.__wrappedMethods || [];\n        this.__wrappedMethods.push(methodName);\n        this[methodName] = function () {\n            var res = originalMethod.apply(this, arguments);\n            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n        };\n    };\n\n    // Methods that create a new list based on this list should be listed here.\n    // Notice that those method should `RETURN` the new list.\n    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\n    // Methods that change indices of this list should be listed here.\n    listProto.CHANGABLE_METHODS = ['filterSelf'];\n\n    module.exports = List;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(60)))\n\n/***/ }),\n/* 631 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Complete dimensions by data (guess dimension).\n */\n\n\n    var zrUtil = __webpack_require__(606);\n    var modelUtil = __webpack_require__(609);\n    var each = zrUtil.each;\n    var isString = zrUtil.isString;\n    var defaults = zrUtil.defaults;\n    var normalizeToArray = modelUtil.normalizeToArray;\n\n    var OTHER_DIMS = {tooltip: 1, label: 1, itemName: 1};\n\n    /**\n     * Complete the dimensions array, by user defined `dimension` and `encode`,\n     * and guessing from the data structure.\n     * If no 'value' dimension specified, the first no-named dimension will be\n     * named as 'value'.\n     *\n     * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n     *      provides not only dim template, but also default order.\n     *      `name` of each item provides default coord name.\n     *      [{dimsDef: []}, ...] can be specified to give names.\n     * @param {Array} data Data list. [[1, 2, 3], [2, 3, 4]].\n     * @param {Object} [opt]\n     * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n     *      For example: ['asdf', {name, type}, ...].\n     * @param {Object} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n     * @param {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n     * @param {string} [opt.extraFromZero] If specified, extra dim names will be:\n     *                      extraPrefix + 0, extraPrefix + extraBaseIndex + 1 ...\n     *                      If not specified, extra dim names will be:\n     *                      extraPrefix, extraPrefix + 0, extraPrefix + 1 ...\n     * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n     * @return {Array.<Object>} [{\n     *      name: string mandatory,\n     *      coordDim: string mandatory,\n     *      coordDimIndex: number mandatory,\n     *      type: string optional,\n     *      tooltipName: string optional,\n     *      otherDims: {\n     *          tooltip: number optional,\n     *          label: number optional\n     *      },\n     *      isExtraCoord: boolean true or undefined.\n     *      other props ...\n     * }]\n     */\n    function completeDimensions(sysDims, data, opt) {\n        data = data || [];\n        opt = opt || {};\n        sysDims = (sysDims || []).slice();\n        var dimsDef = (opt.dimsDef || []).slice();\n        var encodeDef = zrUtil.createHashMap(opt.encodeDef);\n        var dataDimNameMap = zrUtil.createHashMap();\n        var coordDimNameMap = zrUtil.createHashMap();\n        // var valueCandidate;\n        var result = [];\n\n        var dimCount = opt.dimCount;\n        if (dimCount == null) {\n            var value0 = retrieveValue(data[0]);\n            dimCount = Math.max(\n                zrUtil.isArray(value0) && value0.length || 1,\n                sysDims.length,\n                dimsDef.length\n            );\n            each(sysDims, function (sysDimItem) {\n                var sysDimItemDimsDef = sysDimItem.dimsDef;\n                sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n            });\n        }\n\n        // Apply user defined dims (`name` and `type`) and init result.\n        for (var i = 0; i < dimCount; i++) {\n            var dimDefItem = isString(dimsDef[i]) ? {name: dimsDef[i]} : (dimsDef[i] || {});\n            var userDimName = dimDefItem.name;\n            var resultItem = result[i] = {otherDims: {}};\n            // Name will be applied later for avoiding duplication.\n            if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n                // Only if `series.dimensions` is defined in option, tooltipName\n                // will be set, and dimension will be diplayed vertically in\n                // tooltip by default.\n                resultItem.name = resultItem.tooltipName = userDimName;\n                dataDimNameMap.set(userDimName, i);\n            }\n            dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n        }\n\n        // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n        encodeDef.each(function (dataDims, coordDim) {\n            dataDims = encodeDef.set(coordDim, normalizeToArray(dataDims).slice());\n            each(dataDims, function (resultDimIdx, coordDimIndex) {\n                // The input resultDimIdx can be dim name or index.\n                isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n                if (resultDimIdx != null && resultDimIdx < dimCount) {\n                    dataDims[coordDimIndex] = resultDimIdx;\n                    applyDim(result[resultDimIdx], coordDim, coordDimIndex);\n                }\n            });\n        });\n\n        // Apply templetes and default order from `sysDims`.\n        var availDimIdx = 0;\n        each(sysDims, function (sysDimItem, sysDimIndex) {\n            var coordDim;\n            var sysDimItem;\n            var sysDimItemDimsDef;\n            var sysDimItemOtherDims;\n            if (isString(sysDimItem)) {\n                coordDim = sysDimItem;\n                sysDimItem = {};\n            }\n            else {\n                coordDim = sysDimItem.name;\n                sysDimItem = zrUtil.clone(sysDimItem);\n                // `coordDimIndex` should not be set directly.\n                sysDimItemDimsDef = sysDimItem.dimsDef;\n                sysDimItemOtherDims = sysDimItem.otherDims;\n                sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex\n                    = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n            }\n\n            var dataDims = normalizeToArray(encodeDef.get(coordDim));\n            // dimensions provides default dim sequences.\n            if (!dataDims.length) {\n                for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n                    while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n                        availDimIdx++;\n                    }\n                    availDimIdx < result.length && dataDims.push(availDimIdx++);\n                }\n            }\n            // Apply templates.\n            each(dataDims, function (resultDimIdx, coordDimIndex) {\n                var resultItem = result[resultDimIdx];\n                applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n                if (resultItem.name == null && sysDimItemDimsDef) {\n                    resultItem.name = resultItem.tooltipName = sysDimItemDimsDef[coordDimIndex];\n                }\n                sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n            });\n        });\n\n        // Make sure the first extra dim is 'value'.\n        var extra = opt.extraPrefix || 'value';\n\n        // Set dim `name` and other `coordDim` and other props.\n        for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n            var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n            var coordDim = resultItem.coordDim;\n\n            coordDim == null && (\n                resultItem.coordDim = genName(extra, coordDimNameMap, opt.extraFromZero),\n                resultItem.coordDimIndex = 0,\n                resultItem.isExtraCoord = true\n            );\n\n            resultItem.name == null && (resultItem.name = genName(\n                resultItem.coordDim,\n                dataDimNameMap\n            ));\n\n            resultItem.type == null && guessOrdinal(data, resultDimIdx)\n                && (resultItem.type = 'ordinal');\n        }\n\n        return result;\n\n        function applyDim(resultItem, coordDim, coordDimIndex) {\n            if (OTHER_DIMS[coordDim]) {\n                resultItem.otherDims[coordDim] = coordDimIndex;\n            }\n            else {\n                resultItem.coordDim = coordDim;\n                resultItem.coordDimIndex = coordDimIndex;\n                coordDimNameMap.set(coordDim, true);\n            }\n        }\n\n        function genName(name, map, fromZero) {\n            if (fromZero || map.get(name) != null) {\n                var i = 0;\n                while (map.get(name + i) != null) {\n                    i++;\n                }\n                name += i;\n            }\n            map.set(name, true);\n            return name;\n        }\n    }\n\n    // The rule should not be complex, otherwise user might not\n    // be able to known where the data is wrong.\n    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n        for (var i = 0, len = data.length; i < len; i++) {\n            var value = retrieveValue(data[i]);\n\n            if (!zrUtil.isArray(value)) {\n                return false;\n            }\n\n            var value = value[dimIndex];\n            // Consider usage convenience, '1', '2' will be treated as \"number\".\n            // `isFinit('')` get `true`.\n            if (value != null && isFinite(value) && value !== '') {\n                return false;\n            }\n            else if (isString(value) && value !== '-') {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    function retrieveValue(o) {\n        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\n    }\n\n    module.exports = completeDimensions;\n\n\n\n/***/ }),\n/* 632 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n\n    var clazzUtil = __webpack_require__(616);\n\n    /**\n     * @param {Object} [setting]\n     */\n    function Scale(setting) {\n        this._setting = setting || {};\n\n        /**\n         * Extent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._extent = [Infinity, -Infinity];\n\n        /**\n         * Step is calculated in adjustExtent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._interval = 0;\n\n        this.init && this.init.apply(this, arguments);\n    }\n\n    var scaleProto = Scale.prototype;\n\n    /**\n     * Parse input val to valid inner number.\n     * @param {*} val\n     * @return {number}\n     */\n    scaleProto.parse = function (val) {\n        // Notice: This would be a trap here, If the implementation\n        // of this method depends on extent, and this method is used\n        // before extent set (like in dataZoom), it would be wrong.\n        // Nevertheless, parse does not depend on extent generally.\n        return val;\n    };\n\n    scaleProto.getSetting = function (name) {\n        return this._setting[name];\n    };\n\n    scaleProto.contain = function (val) {\n        var extent = this._extent;\n        return val >= extent[0] && val <= extent[1];\n    };\n\n    /**\n     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.normalize = function (val) {\n        var extent = this._extent;\n        if (extent[1] === extent[0]) {\n            return 0.5;\n        }\n        return (val - extent[0]) / (extent[1] - extent[0]);\n    };\n\n    /**\n     * Scale normalized value\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.scale = function (val) {\n        var extent = this._extent;\n        return val * (extent[1] - extent[0]) + extent[0];\n    };\n\n    /**\n     * Set extent from data\n     * @param {Array.<number>} other\n     */\n    scaleProto.unionExtent = function (other) {\n        var extent = this._extent;\n        other[0] < extent[0] && (extent[0] = other[0]);\n        other[1] > extent[1] && (extent[1] = other[1]);\n        // not setExtent because in log axis it may transformed to power\n        // this.setExtent(extent[0], extent[1]);\n    };\n\n    /**\n     * Set extent from data\n     * @param {module:echarts/data/List} data\n     * @param {string} dim\n     */\n    scaleProto.unionExtentFromData = function (data, dim) {\n        this.unionExtent(data.getDataExtent(dim, true));\n    };\n\n    /**\n     * Get extent\n     * @return {Array.<number>}\n     */\n    scaleProto.getExtent = function () {\n        return this._extent.slice();\n    };\n\n    /**\n     * Set extent\n     * @param {number} start\n     * @param {number} end\n     */\n    scaleProto.setExtent = function (start, end) {\n        var thisExtent = this._extent;\n        if (!isNaN(start)) {\n            thisExtent[0] = start;\n        }\n        if (!isNaN(end)) {\n            thisExtent[1] = end;\n        }\n    };\n\n    /**\n     * @return {Array.<string>}\n     */\n    scaleProto.getTicksLabels = function () {\n        var labels = [];\n        var ticks = this.getTicks();\n        for (var i = 0; i < ticks.length; i++) {\n            labels.push(this.getLabel(ticks[i]));\n        }\n        return labels;\n    };\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.isBlank = function () {\n        return this._isBlank;\n    },\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.setBlank = function (isBlank) {\n        this._isBlank = isBlank;\n    };\n\n\n    clazzUtil.enableClassExtend(Scale);\n    clazzUtil.enableClassManagement(Scale, {\n        registerWhenExtend: true\n    });\n\n    module.exports = Scale;\n\n\n/***/ }),\n/* 633 */\n/***/ (function(module, exports) {\n\n\n    var dpr = 1;\n    // If in browser environment\n    if (typeof window !== 'undefined') {\n        dpr = Math.max(window.devicePixelRatio || 1, 1);\n    }\n    /**\n     * config默认配置项\n     * @exports zrender/config\n     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n     */\n    var config = {\n        /**\n         * debug日志选项：catchBrushException为true下有效\n         * 0 : 不生成debug数据，发布用\n         * 1 : 异常抛出，调试用\n         * 2 : 控制台输出，调试用\n         */\n        debugMode: 0,\n\n        // retina 屏幕优化\n        devicePixelRatio: dpr\n    };\n    module.exports = config;\n\n\n\n\n/***/ }),\n/* 634 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/lib/container/Group');\n *     var Circle = require('zrender/lib/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n\n    var zrUtil = __webpack_require__(606);\n    var Element = __webpack_require__(667);\n    var BoundingRect = __webpack_require__(617);\n\n    /**\n     * @alias module:zrender/graphic/Group\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @extends module:zrender/mixin/Eventful\n     */\n    var Group = function (opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        for (var key in opts) {\n            if (opts.hasOwnProperty(key)) {\n                this[key] = opts[key];\n            }\n        }\n\n        this._children = [];\n\n        this.__storage = null;\n\n        this.__dirty = true;\n    };\n\n    Group.prototype = {\n\n        constructor: Group,\n\n        isGroup: true,\n\n        /**\n         * @type {string}\n         */\n        type: 'group',\n\n        /**\n         * 所有子孙元素是否响应鼠标事件\n         * @name module:/zrender/container/Group#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * @return {Array.<module:zrender/Element>}\n         */\n        children: function () {\n            return this._children.slice();\n        },\n\n        /**\n         * 获取指定 index 的儿子节点\n         * @param  {number} idx\n         * @return {module:zrender/Element}\n         */\n        childAt: function (idx) {\n            return this._children[idx];\n        },\n\n        /**\n         * 获取指定名字的儿子节点\n         * @param  {string} name\n         * @return {module:zrender/Element}\n         */\n        childOfName: function (name) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i].name === name) {\n                    return children[i];\n                }\n             }\n        },\n\n        /**\n         * @return {number}\n         */\n        childCount: function () {\n            return this._children.length;\n        },\n\n        /**\n         * 添加子节点到最后\n         * @param {module:zrender/Element} child\n         */\n        add: function (child) {\n            if (child && child !== this && child.parent !== this) {\n\n                this._children.push(child);\n\n                this._doAdd(child);\n            }\n\n            return this;\n        },\n\n        /**\n         * 添加子节点在 nextSibling 之前\n         * @param {module:zrender/Element} child\n         * @param {module:zrender/Element} nextSibling\n         */\n        addBefore: function (child, nextSibling) {\n            if (child && child !== this && child.parent !== this\n                && nextSibling && nextSibling.parent === this) {\n\n                var children = this._children;\n                var idx = children.indexOf(nextSibling);\n\n                if (idx >= 0) {\n                    children.splice(idx, 0, child);\n                    this._doAdd(child);\n                }\n            }\n\n            return this;\n        },\n\n        _doAdd: function (child) {\n            if (child.parent) {\n                child.parent.remove(child);\n            }\n\n            child.parent = this;\n\n            var storage = this.__storage;\n            var zr = this.__zr;\n            if (storage && storage !== child.__storage) {\n\n                storage.addToStorage(child);\n\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n        },\n\n        /**\n         * 移除子节点\n         * @param {module:zrender/Element} child\n         */\n        remove: function (child) {\n            var zr = this.__zr;\n            var storage = this.__storage;\n            var children = this._children;\n\n            var idx = zrUtil.indexOf(children, child);\n            if (idx < 0) {\n                return this;\n            }\n            children.splice(idx, 1);\n\n            child.parent = null;\n\n            if (storage) {\n\n                storage.delFromStorage(child);\n\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n\n            return this;\n        },\n\n        /**\n         * 移除所有子节点\n         */\n        removeAll: function () {\n            var children = this._children;\n            var storage = this.__storage;\n            var child;\n            var i;\n            for (i = 0; i < children.length; i++) {\n                child = children[i];\n                if (storage) {\n                    storage.delFromStorage(child);\n                    if (child instanceof Group) {\n                        child.delChildrenFromStorage(storage);\n                    }\n                }\n                child.parent = null;\n            }\n            children.length = 0;\n\n            return this;\n        },\n\n        /**\n         * 遍历所有子节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        eachChild: function (cb, context) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                cb.call(context, child, i);\n            }\n            return this;\n        },\n\n        /**\n         * 深度优先遍历所有子孙节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                cb.call(context, child);\n\n                if (child.type === 'group') {\n                    child.traverse(cb, context);\n                }\n            }\n            return this;\n        },\n\n        addChildrenToStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.addToStorage(child);\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n        },\n\n        delChildrenFromStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.delFromStorage(child);\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n        },\n\n        dirty: function () {\n            this.__dirty = true;\n            this.__zr && this.__zr.refresh();\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function (includeChildren) {\n            // TODO Caching\n            var rect = null;\n            var tmpRect = new BoundingRect(0, 0, 0, 0);\n            var children = includeChildren || this._children;\n            var tmpMat = [];\n\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                if (child.ignore || child.invisible) {\n                    continue;\n                }\n\n                var childRect = child.getBoundingRect();\n                var transform = child.getLocalTransform(tmpMat);\n                // TODO\n                // The boundingRect cacluated by transforming original\n                // rect may be bigger than the actual bundingRect when rotation\n                // is used. (Consider a circle rotated aginst its center, where\n                // the actual boundingRect should be the same as that not be\n                // rotated.) But we can not find better approach to calculate\n                // actual boundingRect yet, considering performance.\n                if (transform) {\n                    tmpRect.copy(childRect);\n                    tmpRect.applyTransform(transform);\n                    rect = rect || tmpRect.clone();\n                    rect.union(tmpRect);\n                }\n                else {\n                    rect = rect || childRect.clone();\n                    rect.union(childRect);\n                }\n            }\n            return rect || tmpRect;\n        }\n    };\n\n    zrUtil.inherits(Group, Element);\n\n    module.exports = Group;\n\n\n/***/ }),\n/* 635 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n\n // TODO getTotalLength, getPointAtLength\n\n\n    var curve = __webpack_require__(622);\n    var vec2 = __webpack_require__(611);\n    var bbox = __webpack_require__(780);\n    var BoundingRect = __webpack_require__(617);\n    var dpr = __webpack_require__(633).devicePixelRatio;\n\n    var CMD = {\n        M: 1,\n        L: 2,\n        C: 3,\n        Q: 4,\n        A: 5,\n        Z: 6,\n        // Rect\n        R: 7\n    };\n\n    // var CMD_MEM_SIZE = {\n    //     M: 3,\n    //     L: 3,\n    //     C: 7,\n    //     Q: 5,\n    //     A: 9,\n    //     R: 5,\n    //     Z: 1\n    // };\n\n    var min = [];\n    var max = [];\n    var min2 = [];\n    var max2 = [];\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var mathSqrt = Math.sqrt;\n    var mathAbs = Math.abs;\n\n    var hasTypedArray = typeof Float32Array != 'undefined';\n\n    /**\n     * @alias module:zrender/core/PathProxy\n     * @constructor\n     */\n    var PathProxy = function (notSaveData) {\n\n        this._saveData = !(notSaveData || false);\n\n        if (this._saveData) {\n            /**\n             * Path data. Stored as flat array\n             * @type {Array.<Object>}\n             */\n            this.data = [];\n        }\n\n        this._ctx = null;\n    };\n\n    /**\n     * 快速计算Path包围盒（并不是最小包围盒）\n     * @return {Object}\n     */\n    PathProxy.prototype = {\n\n        constructor: PathProxy,\n\n        _xi: 0,\n        _yi: 0,\n\n        _x0: 0,\n        _y0: 0,\n        // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n        _ux: 0,\n        _uy: 0,\n\n        _len: 0,\n\n        _lineDash: null,\n\n        _dashOffset: 0,\n\n        _dashIdx: 0,\n\n        _dashSum: 0,\n\n        /**\n         * @readOnly\n         */\n        setScale: function (sx, sy) {\n            this._ux = mathAbs(1 / dpr / sx) || 0;\n            this._uy = mathAbs(1 / dpr / sy) || 0;\n        },\n\n        getContext: function () {\n            return this._ctx;\n        },\n\n        /**\n         * @param  {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        beginPath: function (ctx) {\n\n            this._ctx = ctx;\n\n            ctx && ctx.beginPath();\n\n            ctx && (this.dpr = ctx.dpr);\n\n            // Reset\n            if (this._saveData) {\n                this._len = 0;\n            }\n\n            if (this._lineDash) {\n                this._lineDash = null;\n\n                this._dashOffset = 0;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        moveTo: function (x, y) {\n            this.addData(CMD.M, x, y);\n            this._ctx && this._ctx.moveTo(x, y);\n\n            // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n            // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n            // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n            // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n            this._x0 = x;\n            this._y0 = y;\n\n            this._xi = x;\n            this._yi = y;\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        lineTo: function (x, y) {\n            var exceedUnit = mathAbs(x - this._xi) > this._ux\n                || mathAbs(y - this._yi) > this._uy\n                // Force draw the first segment\n                || this._len < 5;\n\n            this.addData(CMD.L, x, y);\n\n            if (this._ctx && exceedUnit) {\n                this._needsDash() ? this._dashedLineTo(x, y)\n                    : this._ctx.lineTo(x, y);\n            }\n            if (exceedUnit) {\n                this._xi = x;\n                this._yi = y;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @param  {number} x3\n         * @param  {number} y3\n         * @return {module:zrender/core/PathProxy}\n         */\n        bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n            this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)\n                    : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n            }\n            this._xi = x3;\n            this._yi = y3;\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @return {module:zrender/core/PathProxy}\n         */\n        quadraticCurveTo: function (x1, y1, x2, y2) {\n            this.addData(CMD.Q, x1, y1, x2, y2);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2)\n                    : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n            }\n            this._xi = x2;\n            this._yi = y2;\n            return this;\n        },\n\n        /**\n         * @param  {number} cx\n         * @param  {number} cy\n         * @param  {number} r\n         * @param  {number} startAngle\n         * @param  {number} endAngle\n         * @param  {boolean} anticlockwise\n         * @return {module:zrender/core/PathProxy}\n         */\n        arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n            this.addData(\n                CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1\n            );\n            this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n\n            this._xi = mathCos(endAngle) * r + cx;\n            this._yi = mathSin(endAngle) * r + cx;\n            return this;\n        },\n\n        // TODO\n        arcTo: function (x1, y1, x2, y2, radius) {\n            if (this._ctx) {\n                this._ctx.arcTo(x1, y1, x2, y2, radius);\n            }\n            return this;\n        },\n\n        // TODO\n        rect: function (x, y, w, h) {\n            this._ctx && this._ctx.rect(x, y, w, h);\n            this.addData(CMD.R, x, y, w, h);\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/PathProxy}\n         */\n        closePath: function () {\n            this.addData(CMD.Z);\n\n            var ctx = this._ctx;\n            var x0 = this._x0;\n            var y0 = this._y0;\n            if (ctx) {\n                this._needsDash() && this._dashedLineTo(x0, y0);\n                ctx.closePath();\n            }\n\n            this._xi = x0;\n            this._yi = y0;\n            return this;\n        },\n\n        /**\n         * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n         * stroke 同样\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        fill: function (ctx) {\n            ctx && ctx.fill();\n            this.toStatic();\n        },\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        stroke: function (ctx) {\n            ctx && ctx.stroke();\n            this.toStatic();\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDash: function (lineDash) {\n            if (lineDash instanceof Array) {\n                this._lineDash = lineDash;\n\n                this._dashIdx = 0;\n\n                var lineDashSum = 0;\n                for (var i = 0; i < lineDash.length; i++) {\n                    lineDashSum += lineDash[i];\n                }\n                this._dashSum = lineDashSum;\n            }\n            return this;\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDashOffset: function (offset) {\n            this._dashOffset = offset;\n            return this;\n        },\n\n        /**\n         *\n         * @return {boolean}\n         */\n        len: function () {\n            return this._len;\n        },\n\n        /**\n         * 直接设置 Path 数据\n         */\n        setData: function (data) {\n\n            var len = data.length;\n\n            if (! (this.data && this.data.length == len) && hasTypedArray) {\n                this.data = new Float32Array(len);\n            }\n\n            for (var i = 0; i < len; i++) {\n                this.data[i] = data[i];\n            }\n\n            this._len = len;\n        },\n\n        /**\n         * 添加子路径\n         * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n         */\n        appendPath: function (path) {\n            if (!(path instanceof Array)) {\n                path = [path];\n            }\n            var len = path.length;\n            var appendSize = 0;\n            var offset = this._len;\n            for (var i = 0; i < len; i++) {\n                appendSize += path[i].len();\n            }\n            if (hasTypedArray && (this.data instanceof Float32Array)) {\n                this.data = new Float32Array(offset + appendSize);\n            }\n            for (var i = 0; i < len; i++) {\n                var appendPathData = path[i].data;\n                for (var k = 0; k < appendPathData.length; k++) {\n                    this.data[offset++] = appendPathData[k];\n                }\n            }\n            this._len = offset;\n        },\n\n        /**\n         * 填充 Path 数据。\n         * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n         */\n        addData: function (cmd) {\n            if (!this._saveData) {\n                return;\n            }\n\n            var data = this.data;\n            if (this._len + arguments.length > data.length) {\n                // 因为之前的数组已经转换成静态的 Float32Array\n                // 所以不够用时需要扩展一个新的动态数组\n                this._expandData();\n                data = this.data;\n            }\n            for (var i = 0; i < arguments.length; i++) {\n                data[this._len++] = arguments[i];\n            }\n\n            this._prevCmd = cmd;\n        },\n\n        _expandData: function () {\n            // Only if data is Float32Array\n            if (!(this.data instanceof Array)) {\n                var newData = [];\n                for (var i = 0; i < this._len; i++) {\n                    newData[i] = this.data[i];\n                }\n                this.data = newData;\n            }\n        },\n\n        /**\n         * If needs js implemented dashed line\n         * @return {boolean}\n         * @private\n         */\n        _needsDash: function () {\n            return this._lineDash;\n        },\n\n        _dashedLineTo: function (x1, y1) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var dx = x1 - x0;\n            var dy = y1 - y0;\n            var dist = mathSqrt(dx * dx + dy * dy);\n            var x = x0;\n            var y = y0;\n            var dash;\n            var nDash = lineDash.length;\n            var idx;\n            dx /= dist;\n            dy /= dist;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            x -= offset * dx;\n            y -= offset * dy;\n\n            while ((dx > 0 && x <= x1) || (dx < 0 && x >= x1)\n            || (dx == 0 && ((dy > 0 && y <= y1) || (dy < 0 && y >= y1)))) {\n                idx = this._dashIdx;\n                dash = lineDash[idx];\n                x += dx * dash;\n                y += dy * dash;\n                this._dashIdx = (idx + 1) % nDash;\n                // Skip positive offset\n                if ((dx > 0 && x < x0) || (dx < 0 && x > x0) || (dy > 0 && y < y0) || (dy < 0 && y > y0)) {\n                    continue;\n                }\n                ctx[idx % 2 ? 'moveTo' : 'lineTo'](\n                    dx >= 0 ? mathMin(x, x1) : mathMax(x, x1),\n                    dy >= 0 ? mathMin(y, y1) : mathMax(y, y1)\n                );\n            }\n            // Offset for next lineTo\n            dx = x - x1;\n            dy = y - y1;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        // Not accurate dashed line to\n        _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var t;\n            var dx;\n            var dy;\n            var cubicAt = curve.cubicAt;\n            var bezierLen = 0;\n            var idx = this._dashIdx;\n            var nDash = lineDash.length;\n\n            var x;\n            var y;\n\n            var tmpLen = 0;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            // Bezier approx length\n            for (t = 0; t < 1; t += 0.1) {\n                dx = cubicAt(x0, x1, x2, x3, t + 0.1)\n                    - cubicAt(x0, x1, x2, x3, t);\n                dy = cubicAt(y0, y1, y2, y3, t + 0.1)\n                    - cubicAt(y0, y1, y2, y3, t);\n                bezierLen += mathSqrt(dx * dx + dy * dy);\n            }\n\n            // Find idx after add offset\n            for (; idx < nDash; idx++) {\n                tmpLen += lineDash[idx];\n                if (tmpLen > offset) {\n                    break;\n                }\n            }\n            t = (tmpLen - offset) / bezierLen;\n\n            while (t <= 1) {\n\n                x = cubicAt(x0, x1, x2, x3, t);\n                y = cubicAt(y0, y1, y2, y3, t);\n\n                // Use line to approximate dashed bezier\n                // Bad result if dash is long\n                idx % 2 ? ctx.moveTo(x, y)\n                    : ctx.lineTo(x, y);\n\n                t += lineDash[idx] / bezierLen;\n\n                idx = (idx + 1) % nDash;\n            }\n\n            // Finish the last segment and calculate the new offset\n            (idx % 2 !== 0) && ctx.lineTo(x3, y3);\n            dx = x3 - x;\n            dy = y3 - y;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        _dashedQuadraticTo: function (x1, y1, x2, y2) {\n            // Convert quadratic to cubic using degree elevation\n            var x3 = x2;\n            var y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (this._xi + 2 * x1) / 3;\n            y1 = (this._yi + 2 * y1) / 3;\n\n            this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n        },\n\n        /**\n         * 转成静态的 Float32Array 减少堆内存占用\n         * Convert dynamic array to static Float32Array\n         */\n        toStatic: function () {\n            var data = this.data;\n            if (data instanceof Array) {\n                data.length = this._len;\n                if (hasTypedArray) {\n                    this.data = new Float32Array(data);\n                }\n            }\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function () {\n            min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n            max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n\n            var data = this.data;\n            var xi = 0;\n            var yi = 0;\n            var x0 = 0;\n            var y0 = 0;\n\n            for (var i = 0; i < data.length;) {\n                var cmd = data[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = data[i];\n                    yi = data[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n\n                switch (cmd) {\n                    case CMD.M:\n                        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                        // 在 closePath 的时候使用\n                        x0 = data[i++];\n                        y0 = data[i++];\n                        xi = x0;\n                        yi = y0;\n                        min2[0] = x0;\n                        min2[1] = y0;\n                        max2[0] = x0;\n                        max2[1] = y0;\n                        break;\n                    case CMD.L:\n                        bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.C:\n                        bbox.fromCubic(\n                            xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.Q:\n                        bbox.fromQuadratic(\n                            xi, yi, data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.A:\n                        // TODO Arc 判断的开销比较大\n                        var cx = data[i++];\n                        var cy = data[i++];\n                        var rx = data[i++];\n                        var ry = data[i++];\n                        var startAngle = data[i++];\n                        var endAngle = data[i++] + startAngle;\n                        // TODO Arc 旋转\n                        var psi = data[i++];\n                        var anticlockwise = 1 - data[i++];\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(startAngle) * rx + cx;\n                            y0 = mathSin(startAngle) * ry + cy;\n                        }\n\n                        bbox.fromArc(\n                            cx, cy, rx, ry, startAngle, endAngle,\n                            anticlockwise, min2, max2\n                        );\n\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = data[i++];\n                        y0 = yi = data[i++];\n                        var width = data[i++];\n                        var height = data[i++];\n                        // Use fromLine\n                        bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n                        break;\n                    case CMD.Z:\n                        xi = x0;\n                        yi = y0;\n                        break;\n                }\n\n                // Union\n                vec2.min(min, min, min2);\n                vec2.max(max, max, max2);\n            }\n\n            // No data\n            if (i === 0) {\n                min[0] = min[1] = max[0] = max[1] = 0;\n            }\n\n            return new BoundingRect(\n                min[0], min[1], max[0] - min[0], max[1] - min[1]\n            );\n        },\n\n        /**\n         * Rebuild path from current data\n         * Rebuild path will not consider javascript implemented line dash.\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        rebuildPath: function (ctx) {\n            var d = this.data;\n            var x0, y0;\n            var xi, yi;\n            var x, y;\n            var ux = this._ux;\n            var uy = this._uy;\n            var len = this._len;\n            for (var i = 0; i < len;) {\n                var cmd = d[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = d[i];\n                    yi = d[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n                switch (cmd) {\n                    case CMD.M:\n                        x0 = xi = d[i++];\n                        y0 = yi = d[i++];\n                        ctx.moveTo(xi, yi);\n                        break;\n                    case CMD.L:\n                        x = d[i++];\n                        y = d[i++];\n                        // Not draw too small seg between\n                        if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n                            ctx.lineTo(x, y);\n                            xi = x;\n                            yi = y;\n                        }\n                        break;\n                    case CMD.C:\n                        ctx.bezierCurveTo(\n                            d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]\n                        );\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.Q:\n                        ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.A:\n                        var cx = d[i++];\n                        var cy = d[i++];\n                        var rx = d[i++];\n                        var ry = d[i++];\n                        var theta = d[i++];\n                        var dTheta = d[i++];\n                        var psi = d[i++];\n                        var fs = d[i++];\n                        var r = (rx > ry) ? rx : ry;\n                        var scaleX = (rx > ry) ? 1 : rx / ry;\n                        var scaleY = (rx > ry) ? ry / rx : 1;\n                        var isEllipse = Math.abs(rx - ry) > 1e-3;\n                        var endAngle = theta + dTheta;\n                        if (isEllipse) {\n                            ctx.translate(cx, cy);\n                            ctx.rotate(psi);\n                            ctx.scale(scaleX, scaleY);\n                            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n                            ctx.scale(1 / scaleX, 1 / scaleY);\n                            ctx.rotate(-psi);\n                            ctx.translate(-cx, -cy);\n                        }\n                        else {\n                            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n                        }\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(theta) * rx + cx;\n                            y0 = mathSin(theta) * ry + cy;\n                        }\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = d[i];\n                        y0 = yi = d[i + 1];\n                        ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n                        break;\n                    case CMD.Z:\n                        ctx.closePath();\n                        xi = x0;\n                        yi = y0;\n                }\n            }\n        }\n    };\n\n    PathProxy.CMD = CMD;\n\n    module.exports = PathProxy;\n\n\n/***/ }),\n/* 636 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(606);\n\n    var coordinateSystemCreators = {};\n\n    function CoordinateSystemManager() {\n\n        this._coordinateSystems = [];\n    }\n\n    CoordinateSystemManager.prototype = {\n\n        constructor: CoordinateSystemManager,\n\n        create: function (ecModel, api) {\n            var coordinateSystems = [];\n            zrUtil.each(coordinateSystemCreators, function (creater, type) {\n                var list = creater.create(ecModel, api);\n                coordinateSystems = coordinateSystems.concat(list || []);\n            });\n\n            this._coordinateSystems = coordinateSystems;\n        },\n\n        update: function (ecModel, api) {\n            zrUtil.each(this._coordinateSystems, function (coordSys) {\n                // FIXME MUST have\n                coordSys.update && coordSys.update(ecModel, api);\n            });\n        },\n\n        getCoordinateSystems: function () {\n            return this._coordinateSystems.slice();\n        }\n    };\n\n    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n        coordinateSystemCreators[type] = coordinateSystemCreator;\n    };\n\n    CoordinateSystemManager.get = function (type) {\n        return coordinateSystemCreators[type];\n    };\n\n    module.exports = CoordinateSystemManager;\n\n\n/***/ }),\n/* 637 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// TODO Parse shadow style\n// TODO Only shallow path support\n\n    var zrUtil = __webpack_require__(606);\n\n    module.exports = function (properties) {\n        // Normalize\n        for (var i = 0; i < properties.length; i++) {\n            if (!properties[i][1]) {\n               properties[i][1] = properties[i][0];\n            }\n        }\n        return function (excludes, includes) {\n            var style = {};\n            for (var i = 0; i < properties.length; i++) {\n                var propName = properties[i][1];\n                if ((excludes && zrUtil.indexOf(excludes, propName) >= 0)\n                    || (includes && zrUtil.indexOf(includes, propName) < 0)\n                ) {\n                    continue;\n                }\n                var val = this.getShallow(propName);\n                if (val != null) {\n                    style[properties[i][0]] = val;\n                }\n            }\n            return style;\n        };\n    };\n\n\n/***/ }),\n/* 638 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\n\n\n\n    var numberUtil = __webpack_require__(610);\n    var formatUtil = __webpack_require__(613);\n    var Scale = __webpack_require__(632);\n    var helper = __webpack_require__(665);\n\n    var roundNumber = numberUtil.round;\n\n    /**\n     * @alias module:echarts/coord/scale/Interval\n     * @constructor\n     */\n    var IntervalScale = Scale.extend({\n\n        type: 'interval',\n\n        _interval: 0,\n\n        _intervalPrecision: 2,\n\n        setExtent: function (start, end) {\n            var thisExtent = this._extent;\n            //start,end may be a Number like '25',so...\n            if (!isNaN(start)) {\n                thisExtent[0] = parseFloat(start);\n            }\n            if (!isNaN(end)) {\n                thisExtent[1] = parseFloat(end);\n            }\n        },\n\n        unionExtent: function (other) {\n            var extent = this._extent;\n            other[0] < extent[0] && (extent[0] = other[0]);\n            other[1] > extent[1] && (extent[1] = other[1]);\n\n            // unionExtent may called by it's sub classes\n            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n        },\n        /**\n         * Get interval\n         */\n        getInterval: function () {\n            return this._interval;\n        },\n\n        /**\n         * Set interval\n         */\n        setInterval: function (interval) {\n            this._interval = interval;\n            // Dropped auto calculated niceExtent and use user setted extent\n            // We assume user wan't to set both interval, min, max to get a better result\n            this._niceExtent = this._extent.slice();\n\n            this._intervalPrecision = helper.getIntervalPrecision(interval);\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            return helper.intervalScaleGetTicks(\n                this._interval, this._extent, this._niceExtent, this._intervalPrecision\n            );\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getTicksLabels: function () {\n            var labels = [];\n            var ticks = this.getTicks();\n            for (var i = 0; i < ticks.length; i++) {\n                labels.push(this.getLabel(ticks[i]));\n            }\n            return labels;\n        },\n\n        /**\n         * @param {number} data\n         * @param {Object} [opt]\n         * @param {number|string} [opt.precision] If 'auto', use nice presision.\n         * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n         * @return {string}\n         */\n        getLabel: function (data, opt) {\n            if (data == null) {\n                return '';\n            }\n\n            var precision = opt && opt.precision;\n\n            if (precision == null) {\n                precision = numberUtil.getPrecisionSafe(data) || 0;\n            }\n            else if (precision === 'auto') {\n                // Should be more precise then tick.\n                precision = this._intervalPrecision;\n            }\n\n            // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n            // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n            data = roundNumber(data, precision, true);\n\n            return formatUtil.addCommas(data);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         *\n         * @param {number} [splitNumber = 5] Desired number of ticks\n         * @param {number} [minInterval]\n         * @param {number} [maxInterval]\n         */\n        niceTicks: function (splitNumber, minInterval, maxInterval) {\n            splitNumber = splitNumber || 5;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (!isFinite(span)) {\n                return;\n            }\n            // User may set axis min 0 and data are all negative\n            // FIXME If it needs to reverse ?\n            if (span < 0) {\n                span = -span;\n                extent.reverse();\n            }\n\n            var result = helper.intervalScaleNiceTicks(\n                extent, splitNumber, minInterval, maxInterval\n            );\n\n            this._intervalPrecision = result.intervalPrecision;\n            this._interval = result.interval;\n            this._niceExtent = result.niceTickExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {Object} opt\n         * @param {number} [opt.splitNumber = 5] Given approx tick number\n         * @param {boolean} [opt.fixMin=false]\n         * @param {boolean} [opt.fixMax=false]\n         * @param {boolean} [opt.minInterval]\n         * @param {boolean} [opt.maxInterval]\n         */\n        niceExtent: function (opt) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                if (extent[0] !== 0) {\n                    // Expand extent\n                    var expandSize = extent[0];\n                    // In the fowllowing case\n                    //      Axis has been fixed max 100\n                    //      Plus data are all 100 and axis extent are [100, 100].\n                    // Extend to the both side will cause expanded max is larger than fixed max.\n                    // So only expand to the smaller side.\n                    if (!opt.fixMax) {\n                        extent[1] += expandSize / 2;\n                        extent[0] -= expandSize / 2;\n                    }\n                    else {\n                        extent[0] -= expandSize / 2;\n                    }\n                }\n                else {\n                    extent[1] = 1;\n                }\n            }\n            var span = extent[1] - extent[0];\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (!isFinite(span)) {\n                extent[0] = 0;\n                extent[1] = 1;\n            }\n\n            this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!opt.fixMin) {\n                extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n            }\n            if (!opt.fixMax) {\n                extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n            }\n        }\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    IntervalScale.create = function () {\n        return new IntervalScale();\n    };\n\n    module.exports = IntervalScale;\n\n\n\n/***/ }),\n/* 639 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Symbol factory\n\n\n    var graphic = __webpack_require__(608);\n    var BoundingRect = __webpack_require__(617);\n\n    /**\n     * Triangle shape\n     * @inner\n     */\n    var Triangle = graphic.extendShape({\n        type: 'triangle',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy + height);\n            path.lineTo(cx - width, cy + height);\n            path.closePath();\n        }\n    });\n    /**\n     * Diamond shape\n     * @inner\n     */\n    var Diamond = graphic.extendShape({\n        type: 'diamond',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy);\n            path.lineTo(cx, cy + height);\n            path.lineTo(cx - width, cy);\n            path.closePath();\n        }\n    });\n\n    /**\n     * Pin shape\n     * @inner\n     */\n    var Pin = graphic.extendShape({\n        type: 'pin',\n        shape: {\n            // x, y on the cusp\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (path, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var w = shape.width / 5 * 3;\n            // Height must be larger than width\n            var h = Math.max(w, shape.height);\n            var r = w / 2;\n\n            // Dist on y with tangent point and circle center\n            var dy = r * r / (h - r);\n            var cy = y - h + r + dy;\n            var angle = Math.asin(dy / r);\n            // Dist on x with tangent point and circle center\n            var dx = Math.cos(angle) * r;\n\n            var tanX = Math.sin(angle);\n            var tanY = Math.cos(angle);\n\n            path.arc(\n                x, cy, r,\n                Math.PI - angle,\n                Math.PI * 2 + angle\n            );\n\n            var cpLen = r * 0.6;\n            var cpLen2 = r * 0.7;\n            path.bezierCurveTo(\n                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\n                x, y - cpLen2,\n                x, y\n            );\n            path.bezierCurveTo(\n                x, y - cpLen2,\n                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\n                x - dx, cy + dy\n            );\n            path.closePath();\n        }\n    });\n\n    /**\n     * Arrow shape\n     * @inner\n     */\n    var Arrow = graphic.extendShape({\n\n        type: 'arrow',\n\n        shape: {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var height = shape.height;\n            var width = shape.width;\n            var x = shape.x;\n            var y = shape.y;\n            var dx = width / 3 * 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + dx, y + height);\n            ctx.lineTo(x, y + height / 4 * 3);\n            ctx.lineTo(x - dx, y + height);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n        }\n    });\n\n    /**\n     * Map of path contructors\n     * @type {Object.<string, module:zrender/graphic/Path>}\n     */\n    var symbolCtors = {\n        line: graphic.Line,\n\n        rect: graphic.Rect,\n\n        roundRect: graphic.Rect,\n\n        square: graphic.Rect,\n\n        circle: graphic.Circle,\n\n        diamond: Diamond,\n\n        pin: Pin,\n\n        arrow: Arrow,\n\n        triangle: Triangle\n    };\n\n    var symbolShapeMakers = {\n\n        line: function (x, y, w, h, shape) {\n            // FIXME\n            shape.x1 = x;\n            shape.y1 = y + h / 2;\n            shape.x2 = x + w;\n            shape.y2 = y + h / 2;\n        },\n\n        rect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        roundRect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n            shape.r = Math.min(w, h) / 4;\n        },\n\n        square: function (x, y, w, h, shape) {\n            var size = Math.min(w, h);\n            shape.x = x;\n            shape.y = y;\n            shape.width = size;\n            shape.height = size;\n        },\n\n        circle: function (x, y, w, h, shape) {\n            // Put circle in the center of square\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.r = Math.min(w, h) / 2;\n        },\n\n        diamond: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        pin: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        arrow: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        triangle: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        }\n    };\n\n    var symbolBuildProxies = {};\n    for (var name in symbolCtors) {\n        if (symbolCtors.hasOwnProperty(name)) {\n            symbolBuildProxies[name] = new symbolCtors[name]();\n        }\n    }\n\n    var Symbol = graphic.extendShape({\n\n        type: 'symbol',\n\n        shape: {\n            symbolType: '',\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        beforeBrush: function () {\n            var style = this.style;\n            var shape = this.shape;\n            // FIXME\n            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n                style.textPosition = ['50%', '40%'];\n                style.textAlign = 'center';\n                style.textVerticalAlign = 'middle';\n            }\n        },\n\n        buildPath: function (ctx, shape, inBundle) {\n            var symbolType = shape.symbolType;\n            var proxySymbol = symbolBuildProxies[symbolType];\n            if (shape.symbolType !== 'none') {\n                if (!proxySymbol) {\n                    // Default rect\n                    symbolType = 'rect';\n                    proxySymbol = symbolBuildProxies[symbolType];\n                }\n                symbolShapeMakers[symbolType](\n                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\n                );\n                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n            }\n        }\n    });\n\n    // Provide setColor helper method to avoid determine if set the fill or stroke outside\n    var symbolPathSetColor = function (color) {\n        if (this.type !== 'image') {\n            var symbolStyle = this.style;\n            var symbolShape = this.shape;\n            if (symbolShape && symbolShape.symbolType === 'line') {\n                symbolStyle.stroke = color;\n            }\n            else if (this.__isEmptyBrush) {\n                symbolStyle.stroke = color;\n                symbolStyle.fill = '#fff';\n            }\n            else {\n                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n                symbolStyle.fill && (symbolStyle.fill = color);\n                symbolStyle.stroke && (symbolStyle.stroke = color);\n            }\n            this.dirty(false);\n        }\n    };\n\n    var symbolUtil = {\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @param {string} symbolType\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: function (symbolType, x, y, w, h, color) {\n            // TODO Support image object, DynamicImage.\n\n            var isEmpty = symbolType.indexOf('empty') === 0;\n            if (isEmpty) {\n                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n            }\n            var symbolPath;\n\n            if (symbolType.indexOf('image://') === 0) {\n                symbolPath = new graphic.Image({\n                    style: {\n                        image: symbolType.slice(8),\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n            else if (symbolType.indexOf('path://') === 0) {\n                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\n            }\n            else {\n                symbolPath = new Symbol({\n                    shape: {\n                        symbolType: symbolType,\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n\n            symbolPath.__isEmptyBrush = isEmpty;\n\n            symbolPath.setColor = symbolPathSetColor;\n\n            symbolPath.setColor(color);\n\n            return symbolPath;\n        }\n    };\n\n    module.exports = symbolUtil;\n\n\n/***/ }),\n/* 640 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var formatUtil = __webpack_require__(613);\n    var classUtil = __webpack_require__(616);\n    var modelUtil = __webpack_require__(609);\n    var ComponentModel = __webpack_require__(618);\n    var colorPaletteMixin = __webpack_require__(664);\n    var env = __webpack_require__(615);\n    var layout = __webpack_require__(619);\n\n    var set = classUtil.set;\n    var get = classUtil.get;\n    var encodeHTML = formatUtil.encodeHTML;\n    var addCommas = formatUtil.addCommas;\n\n    var SeriesModel = ComponentModel.extend({\n\n        type: 'series.__base__',\n\n        /**\n         * @readOnly\n         */\n        seriesIndex: 0,\n\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\n        coordinateSystem: null,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * Data provided for legend\n         * @type {Function}\n         */\n        // PENDING\n        legendDataProvider: null,\n\n        /**\n         * Access path of color for visual\n         */\n        visualColorAccessPath: 'itemStyle.normal.color',\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            /**\n             * @type {number}\n             * @readOnly\n             */\n            this.seriesIndex = this.componentIndex;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            var data = this.getInitialData(option, ecModel);\n            if (__DEV__) {\n                zrUtil.assert(data, 'getInitialData returned invalid data.');\n            }\n            /**\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n             * @private\n             */\n            set(this, 'dataBeforeProcessed', data);\n\n            // If we reverse the order (make data firstly, and then make\n            // dataBeforeProcessed by cloneShallow), cloneShallow will\n            // cause data.graph.data !== data when using\n            // module:echarts/data/Graph or module:echarts/data/Tree.\n            // See module:echarts/data/helper/linkList\n            this.restoreData();\n        },\n\n        /**\n         * Util for merge default and theme to option\n         * @param  {Object} option\n         * @param  {module:echarts/model/Global} ecModel\n         */\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            zrUtil.merge(\n                option,\n                ecModel.getTheme().get(this.subType)\n            );\n            zrUtil.merge(option, this.getDefaultOption());\n\n            // Default label emphasis `show`\n            modelUtil.defaultEmphasis(option.label, ['show']);\n\n            this.fillDataTextStyle(option.data);\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (newSeriesOption, ecModel) {\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n            this.fillDataTextStyle(newSeriesOption.data);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n            }\n\n            var data = this.getInitialData(newSeriesOption, ecModel);\n            // TODO Merge data?\n            if (data) {\n                set(this, 'data', data);\n                set(this, 'dataBeforeProcessed', data.cloneShallow());\n            }\n        },\n\n        fillDataTextStyle: function (data) {\n            // Default data label emphasis `show`\n            // FIXME Tree structure data ?\n            // FIXME Performance ?\n            if (data) {\n                var props = ['show'];\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] && data[i].label) {\n                        modelUtil.defaultEmphasis(data[i].label, props);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Init a data structure from data related option in series\n         * Must be overwritten\n         */\n        getInitialData: function () {},\n\n        /**\n         * @param {string} [dataType]\n         * @return {module:echarts/data/List}\n         */\n        getData: function (dataType) {\n            var data = get(this, 'data');\n            return dataType == null ? data : data.getLinkedData(dataType);\n        },\n\n        /**\n         * @param {module:echarts/data/List} data\n         */\n        setData: function (data) {\n            set(this, 'data', data);\n        },\n\n        /**\n         * Get data before processed\n         * @return {module:echarts/data/List}\n         */\n        getRawData: function () {\n            return get(this, 'dataBeforeProcessed');\n        },\n\n        /**\n         * Coord dimension to data dimension.\n         *\n         * By default the result is the same as dimensions of series data.\n         * But in some series data dimensions are different from coord dimensions (i.e.\n         * candlestick and boxplot). Override this method to handle those cases.\n         *\n         * Coord dimension to data dimension can be one-to-many\n         *\n         * @param {string} coordDim\n         * @return {Array.<string>} dimensions on the axis.\n         */\n        coordDimToDataDim: function (coordDim) {\n            return modelUtil.coordDimToDataDim(this.getData(), coordDim);\n        },\n\n        /**\n         * Convert data dimension to coord dimension.\n         *\n         * @param {string|number} dataDim\n         * @return {string}\n         */\n        dataDimToCoordDim: function (dataDim) {\n            return modelUtil.dataDimToCoordDim(this.getData(), dataDim);\n        },\n\n        /**\n         * Get base axis if has coordinate system and has axis.\n         * By default use coordSys.getBaseAxis();\n         * Can be overrided for some chart.\n         * @return {type} description\n         */\n        getBaseAxis: function () {\n            var coordSys = this.coordinateSystem;\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n        },\n\n        // FIXME\n        /**\n         * Default tooltip formatter\n         *\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         */\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n            function formatArrayValue(value) {\n                var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n                    var dimItem = data.getDimensionInfo(idx);\n                    return vertially |= dimItem && dimItem.tooltip !== false && dimItem.tooltipName != null;\n                }, 0);\n\n                var result = [];\n                var tooltipDims = modelUtil.otherDimToDataDim(data, 'tooltip');\n\n                tooltipDims.length\n                    ? zrUtil.each(tooltipDims, function (dimIdx) {\n                        setEachItem(data.get(dimIdx, dataIndex), dimIdx);\n                    })\n                    // By default, all dims is used on tooltip.\n                    : zrUtil.each(value, setEachItem);\n\n                function setEachItem(val, dimIdx) {\n                    var dimInfo = data.getDimensionInfo(dimIdx);\n                    // If `dimInfo.tooltip` is not set, show tooltip.\n                    if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n                        return;\n                    }\n                    var dimType = dimInfo.type;\n                    var valStr = (vertially ? '- ' + (dimInfo.tooltipName || dimInfo.name) + ': ' : '')\n                        + (dimType === 'ordinal'\n                            ? val + ''\n                            : dimType === 'time'\n                            ? (multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val))\n                            : addCommas(val)\n                        );\n                    valStr && result.push(encodeHTML(valStr));\n                }\n\n                return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n            }\n\n            var data = get(this, 'data');\n\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = zrUtil.isArray(value)\n                ? formatArrayValue(value) : encodeHTML(addCommas(value));\n            var name = data.getName(dataIndex);\n\n            var color = data.getItemVisual(dataIndex, 'color');\n            if (zrUtil.isObject(color) && color.colorStops) {\n                color = (color.colorStops[0] || {}).color;\n            }\n            color = color || 'transparent';\n\n            var colorEl = formatUtil.getTooltipMarker(color);\n\n            var seriesName = this.name;\n            // FIXME\n            if (seriesName === '\\0-') {\n                // Not show '-'\n                seriesName = '';\n            }\n            seriesName = seriesName\n                ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ')\n                : '';\n            return !multipleSeries\n                ? seriesName + colorEl\n                    + (name\n                        ? encodeHTML(name) + ': ' + formattedValue\n                        : formattedValue\n                    )\n                : colorEl + seriesName + formattedValue;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var animationEnabled = this.getShallow('animation');\n            if (animationEnabled) {\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\n                    animationEnabled = false;\n                }\n            }\n            return animationEnabled;\n        },\n\n        restoreData: function () {\n            set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n        },\n\n        getColorFromPalette: function (name, scope) {\n            var ecModel = this.ecModel;\n            // PENDING\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n            if (!color) {\n                color = ecModel.getColorFromPalette(name, scope);\n            }\n            return color;\n        },\n\n        /**\n         * Get data indices for show tooltip content. See tooltip.\n         * @abstract\n         * @param {Array.<string>|string} dim\n         * @param {Array.<number>} value\n         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n         * @return {Object} {dataIndices, nestestValue}.\n         */\n        getAxisTooltipData: null,\n\n        /**\n         * See tooltip.\n         * @abstract\n         * @param {number} dataIndex\n         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n         */\n        getTooltipPosition: null\n    });\n\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\n    module.exports = SeriesModel;\n\n\n/***/ }),\n/* 641 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Group = __webpack_require__(634);\n    var componentUtil = __webpack_require__(642);\n    var clazzUtil = __webpack_require__(616);\n    var modelUtil = __webpack_require__(609);\n    var zrUtil = __webpack_require__(606);\n\n    function Chart() {\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewChart');\n    }\n\n    Chart.prototype = {\n\n        type: 'chart',\n\n        /**\n         * Init the chart\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        init: function (ecModel, api) {},\n\n        /**\n         * Render the chart\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        render: function (seriesModel, ecModel, api, payload) {},\n\n        /**\n         * Highlight series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        highlight: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n        },\n\n        /**\n         * Downplay series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        downplay: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'normal');\n        },\n\n        /**\n         * Remove self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        remove: function (ecModel, api) {\n            this.group.removeAll();\n        },\n\n        /**\n         * Dispose self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        dispose: function () {}\n\n        /**\n         * The view contains the given point.\n         * @interface\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        // containPoint: function () {}\n\n    };\n\n    var chartProto = Chart.prototype;\n    chartProto.updateView\n        = chartProto.updateLayout\n        = chartProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            this.render(seriesModel, ecModel, api, payload);\n        };\n\n    /**\n     * Set state of single element\n     * @param  {module:zrender/Element} el\n     * @param  {string} state\n     */\n    function elSetState(el, state) {\n        if (el) {\n            el.trigger(state);\n            if (el.type === 'group') {\n                for (var i = 0; i < el.childCount(); i++) {\n                    elSetState(el.childAt(i), state);\n                }\n            }\n        }\n    }\n    /**\n     * @param  {module:echarts/data/List} data\n     * @param  {Object} payload\n     * @param  {string} state 'normal'|'emphasis'\n     * @inner\n     */\n    function toggleHighlight(data, payload, state) {\n        var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n        if (dataIndex != null) {\n            zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n                elSetState(data.getItemGraphicEl(dataIdx), state);\n            });\n        }\n        else {\n            data.eachItemGraphicEl(function (el) {\n                elSetState(el, state);\n            });\n        }\n    }\n\n    // Enable Chart.extend.\n    clazzUtil.enableClassExtend(Chart, ['dispose']);\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\n\n    module.exports = Chart;\n\n\n/***/ }),\n/* 642 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var clazz = __webpack_require__(616);\n\n    var parseClassType = clazz.parseClassType;\n\n    var base = 0;\n\n    var componentUtil = {};\n\n    var DELIMITER = '_';\n\n    /**\n     * @public\n     * @param {string} type\n     * @return {string}\n     */\n    componentUtil.getUID = function (type) {\n        // Considering the case of crossing js context,\n        // use Math.random to make id as unique as possible.\n        return [(type || ''), base++, Math.random()].join(DELIMITER);\n    };\n\n    /**\n     * @inner\n     */\n    componentUtil.enableSubTypeDefaulter = function (entity) {\n\n        var subTypeDefaulters = {};\n\n        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n            componentType = parseClassType(componentType);\n            subTypeDefaulters[componentType.main] = defaulter;\n        };\n\n        entity.determineSubType = function (componentType, option) {\n            var type = option.type;\n            if (!type) {\n                var componentTypeMain = parseClassType(componentType).main;\n                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n                    type = subTypeDefaulters[componentTypeMain](option);\n                }\n            }\n            return type;\n        };\n\n        return entity;\n    };\n\n    /**\n     * Topological travel on Activity Network (Activity On Vertices).\n     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n     *\n     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n     *\n     * If there is circle dependencey, Error will be thrown.\n     *\n     */\n    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\n\n        /**\n         * @public\n         * @param {Array.<string>} targetNameList Target Component type list.\n         *                                           Can be ['aa', 'bb', 'aa.xx']\n         * @param {Array.<string>} fullNameList By which we can build dependency graph.\n         * @param {Function} callback Params: componentType, dependencies.\n         * @param {Object} context Scope of callback.\n         */\n        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n            if (!targetNameList.length) {\n                return;\n            }\n\n            var result = makeDepndencyGraph(fullNameList);\n            var graph = result.graph;\n            var stack = result.noEntryList;\n\n            var targetNameSet = {};\n            zrUtil.each(targetNameList, function (name) {\n                targetNameSet[name] = true;\n            });\n\n            while (stack.length) {\n                var currComponentType = stack.pop();\n                var currVertex = graph[currComponentType];\n                var isInTargetNameSet = !!targetNameSet[currComponentType];\n                if (isInTargetNameSet) {\n                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\n                    delete targetNameSet[currComponentType];\n                }\n                zrUtil.each(\n                    currVertex.successor,\n                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\n                );\n            }\n\n            zrUtil.each(targetNameSet, function () {\n                throw new Error('Circle dependency may exists');\n            });\n\n            function removeEdge(succComponentType) {\n                graph[succComponentType].entryCount--;\n                if (graph[succComponentType].entryCount === 0) {\n                    stack.push(succComponentType);\n                }\n            }\n\n            // Consider this case: legend depends on series, and we call\n            // chart.setOption({series: [...]}), where only series is in option.\n            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n            // not be called, but only sereis.mergeOption is called. Thus legend\n            // have no chance to update its local record about series (like which\n            // name of series is available in legend).\n            function removeEdgeAndAdd(succComponentType) {\n                targetNameSet[succComponentType] = true;\n                removeEdge(succComponentType);\n            }\n        };\n\n        /**\n         * DepndencyGraph: {Object}\n         * key: conponentType,\n         * value: {\n         *     successor: [conponentTypes...],\n         *     originalDeps: [conponentTypes...],\n         *     entryCount: {number}\n         * }\n         */\n        function makeDepndencyGraph(fullNameList) {\n            var graph = {};\n            var noEntryList = [];\n\n            zrUtil.each(fullNameList, function (name) {\n\n                var thisItem = createDependencyGraphItem(graph, name);\n                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n\n                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n                thisItem.entryCount = availableDeps.length;\n                if (thisItem.entryCount === 0) {\n                    noEntryList.push(name);\n                }\n\n                zrUtil.each(availableDeps, function (dependentName) {\n                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n                        thisItem.predecessor.push(dependentName);\n                    }\n                    var thatItem = createDependencyGraphItem(graph, dependentName);\n                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n                        thatItem.successor.push(name);\n                    }\n                });\n            });\n\n            return {graph: graph, noEntryList: noEntryList};\n        }\n\n        function createDependencyGraphItem(graph, name) {\n            if (!graph[name]) {\n                graph[name] = {predecessor: [], successor: []};\n            }\n            return graph[name];\n        }\n\n        function getAvailableDependencies(originalDeps, fullNameList) {\n            var availableDeps = [];\n            zrUtil.each(originalDeps, function (dep) {\n                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n            });\n            return availableDeps;\n        }\n    };\n\n    module.exports = componentUtil;\n\n\n/***/ }),\n/* 643 */\n/***/ (function(module, exports) {\n\n// https://github.com/mziccard/node-timsort\n\n    var DEFAULT_MIN_MERGE = 32;\n\n    var DEFAULT_MIN_GALLOPING = 7;\n\n    var DEFAULT_TMP_STORAGE_LENGTH = 256;\n\n    function minRunLength(n) {\n        var r = 0;\n\n        while (n >= DEFAULT_MIN_MERGE) {\n            r |= n & 1;\n            n >>= 1;\n        }\n\n        return n + r;\n    }\n\n    function makeAscendingRun(array, lo, hi, compare) {\n        var runHi = lo + 1;\n\n        if (runHi === hi) {\n            return 1;\n        }\n\n        if (compare(array[runHi++], array[lo]) < 0) {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n                runHi++;\n            }\n\n            reverseRun(array, lo, runHi);\n        }\n        else {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n                runHi++;\n            }\n        }\n\n        return runHi - lo;\n    }\n\n    function reverseRun(array, lo, hi) {\n        hi--;\n\n        while (lo < hi) {\n            var t = array[lo];\n            array[lo++] = array[hi];\n            array[hi--] = t;\n        }\n    }\n\n    function binaryInsertionSort(array, lo, hi, start, compare) {\n        if (start === lo) {\n            start++;\n        }\n\n        for (; start < hi; start++) {\n            var pivot = array[start];\n\n            var left = lo;\n            var right = start;\n            var mid;\n\n            while (left < right) {\n                mid = left + right >>> 1;\n\n                if (compare(pivot, array[mid]) < 0) {\n                    right = mid;\n                }\n                else {\n                    left = mid + 1;\n                }\n            }\n\n            var n = start - left;\n\n            switch (n) {\n                case 3:\n                    array[left + 3] = array[left + 2];\n\n                case 2:\n                    array[left + 2] = array[left + 1];\n\n                case 1:\n                    array[left + 1] = array[left];\n                    break;\n                default:\n                    while (n > 0) {\n                        array[left + n] = array[left + n - 1];\n                        n--;\n                    }\n            }\n\n            array[left] = pivot;\n        }\n    }\n\n    function gallopLeft(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) > 0) {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n        else {\n            maxOffset = hint + 1;\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n\n        lastOffset++;\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) > 0) {\n                lastOffset = m + 1;\n            }\n            else {\n                offset = m;\n            }\n        }\n        return offset;\n    }\n\n    function gallopRight(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) < 0) {\n            maxOffset = hint + 1;\n\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n        else {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n\n        lastOffset++;\n\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) < 0) {\n                offset = m;\n            }\n            else {\n                lastOffset = m + 1;\n            }\n        }\n\n        return offset;\n    }\n\n    function TimSort(array, compare) {\n        var minGallop = DEFAULT_MIN_GALLOPING;\n        var length = 0;\n        var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n        var stackLength = 0;\n        var runStart;\n        var runLength;\n        var stackSize = 0;\n\n        length = array.length;\n\n        if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n            tmpStorageLength = length >>> 1;\n        }\n\n        var tmp = [];\n\n        stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n\n        runStart = [];\n        runLength = [];\n\n        function pushRun(_runStart, _runLength) {\n            runStart[stackSize] = _runStart;\n            runLength[stackSize] = _runLength;\n            stackSize += 1;\n        }\n\n        function mergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n                    if (runLength[n - 1] < runLength[n + 1]) {\n                        n--;\n                    }\n                }\n                else if (runLength[n] > runLength[n + 1]) {\n                    break;\n                }\n                mergeAt(n);\n            }\n        }\n\n        function forceMergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n                    n--;\n                }\n\n                mergeAt(n);\n            }\n        }\n\n        function mergeAt(i) {\n            var start1 = runStart[i];\n            var length1 = runLength[i];\n            var start2 = runStart[i + 1];\n            var length2 = runLength[i + 1];\n\n            runLength[i] = length1 + length2;\n\n            if (i === stackSize - 3) {\n                runStart[i + 1] = runStart[i + 2];\n                runLength[i + 1] = runLength[i + 2];\n            }\n\n            stackSize--;\n\n            var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n            start1 += k;\n            length1 -= k;\n\n            if (length1 === 0) {\n                return;\n            }\n\n            length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n            if (length2 === 0) {\n                return;\n            }\n\n            if (length1 <= length2) {\n                mergeLow(start1, length1, start2, length2);\n            }\n            else {\n                mergeHigh(start1, length1, start2, length2);\n            }\n        }\n\n        function mergeLow(start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length1; i++) {\n                tmp[i] = array[start1 + i];\n            }\n\n            var cursor1 = 0;\n            var cursor2 = start2;\n            var dest = start1;\n\n            array[dest++] = array[cursor2++];\n\n            if (--length2 === 0) {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n                return;\n            }\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n                return;\n            }\n\n            var _minGallop = minGallop;\n            var count1, count2, exit;\n\n            while (1) {\n                count1 = 0;\n                count2 = 0;\n                exit = false;\n\n                do {\n                    if (compare(array[cursor2], tmp[cursor1]) < 0) {\n                        array[dest++] = array[cursor2++];\n                        count2++;\n                        count1 = 0;\n\n                        if (--length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest++] = tmp[cursor1++];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n                    if (count1 !== 0) {\n                        for (i = 0; i < count1; i++) {\n                            array[dest + i] = tmp[cursor1 + i];\n                        }\n\n                        dest += count1;\n                        cursor1 += count1;\n                        length1 -= count1;\n                        if (length1 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest++] = array[cursor2++];\n\n                    if (--length2 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n                    if (count2 !== 0) {\n                        for (i = 0; i < count2; i++) {\n                            array[dest + i] = array[cursor2 + i];\n                        }\n\n                        dest += count2;\n                        cursor2 += count2;\n                        length2 -= count2;\n\n                        if (length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    array[dest++] = tmp[cursor1++];\n\n                    if (--length1 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            minGallop < 1 && (minGallop = 1);\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n            }\n            else if (length1 === 0) {\n                throw new Error();\n                // throw new Error('mergeLow preconditions were not respected');\n            }\n            else {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n            }\n        }\n\n        function mergeHigh (start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length2; i++) {\n                tmp[i] = array[start2 + i];\n            }\n\n            var cursor1 = start1 + length1 - 1;\n            var cursor2 = length2 - 1;\n            var dest = start2 + length2 - 1;\n            var customCursor = 0;\n            var customDest = 0;\n\n            array[dest--] = array[cursor1--];\n\n            if (--length1 === 0) {\n                customCursor = dest - (length2 - 1);\n\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n\n                return;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n                return;\n            }\n\n            var _minGallop = minGallop;\n\n            while (true) {\n                var count1 = 0;\n                var count2 = 0;\n                var exit = false;\n\n                do {\n                    if (compare(tmp[cursor2], array[cursor1]) < 0) {\n                        array[dest--] = array[cursor1--];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest--] = tmp[cursor2--];\n                        count2++;\n                        count1 = 0;\n                        if (--length2 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n                    if (count1 !== 0) {\n                        dest -= count1;\n                        cursor1 -= count1;\n                        length1 -= count1;\n                        customDest = dest + 1;\n                        customCursor = cursor1 + 1;\n\n                        for (i = count1 - 1; i >= 0; i--) {\n                            array[customDest + i] = array[customCursor + i];\n                        }\n\n                        if (length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = tmp[cursor2--];\n\n                    if (--length2 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n                    if (count2 !== 0) {\n                        dest -= count2;\n                        cursor2 -= count2;\n                        length2 -= count2;\n                        customDest = dest + 1;\n                        customCursor = cursor2 + 1;\n\n                        for (i = 0; i < count2; i++) {\n                            array[customDest + i] = tmp[customCursor + i];\n                        }\n\n                        if (length2 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = array[cursor1--];\n\n                    if (--length1 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            if (minGallop < 1) {\n                minGallop = 1;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n            }\n            else if (length2 === 0) {\n                throw new Error();\n                // throw new Error('mergeHigh preconditions were not respected');\n            }\n            else {\n                customCursor = dest - (length2 - 1);\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n            }\n        }\n\n        this.mergeRuns = mergeRuns;\n        this.forceMergeRuns = forceMergeRuns;\n        this.pushRun = pushRun;\n    }\n\n    function sort(array, compare, lo, hi) {\n        if (!lo) {\n            lo = 0;\n        }\n        if (!hi) {\n            hi = array.length;\n        }\n\n        var remaining = hi - lo;\n\n        if (remaining < 2) {\n            return;\n        }\n\n        var runLength = 0;\n\n        if (remaining < DEFAULT_MIN_MERGE) {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n            return;\n        }\n\n        var ts = new TimSort(array, compare);\n\n        var minRun = minRunLength(remaining);\n\n        do {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            if (runLength < minRun) {\n                var force = remaining;\n                if (force > minRun) {\n                    force = minRun;\n                }\n\n                binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n                runLength = force;\n            }\n\n            ts.pushRun(lo, runLength);\n            ts.mergeRuns();\n\n            remaining -= runLength;\n            lo += runLength;\n        } while (remaining !== 0);\n\n        ts.forceMergeRuns();\n    }\n\n    module.exports = sort;\n\n\n/***/ }),\n/* 644 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n\n\n    var zrUtil = __webpack_require__(606);\n\n    var Style = __webpack_require__(676);\n\n    var Element = __webpack_require__(667);\n    var RectText = __webpack_require__(788);\n    // var Stateful = require('./mixin/Stateful');\n\n    /**\n     * @alias module:zrender/graphic/Displayable\n     * @extends module:zrender/Element\n     * @extends module:zrender/graphic/mixin/RectText\n     */\n    function Displayable(opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        // Extend properties\n        for (var name in opts) {\n            if (\n                opts.hasOwnProperty(name) &&\n                name !== 'style'\n            ) {\n                this[name] = opts[name];\n            }\n        }\n\n        /**\n         * @type {module:zrender/graphic/Style}\n         */\n        this.style = new Style(opts.style, this);\n\n        this._rect = null;\n        // Shapes for cascade clipping.\n        this.__clipPaths = [];\n\n        // FIXME Stateful must be mixined after style is setted\n        // Stateful.call(this, opts);\n    }\n\n    Displayable.prototype = {\n\n        constructor: Displayable,\n\n        type: 'displayable',\n\n        /**\n         * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n         * Dirty flag. From which painter will determine if this displayable object needs brush\n         * @name module:zrender/graphic/Displayable#__dirty\n         * @type {boolean}\n         */\n        __dirty: true,\n\n        /**\n         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n         * If ignore drawing of the displayable object. Mouse event will still be triggered\n         * @name module:/zrender/graphic/Displayable#invisible\n         * @type {boolean}\n         * @default false\n         */\n        invisible: false,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z: 0,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z2: 0,\n\n        /**\n         * z层level，决定绘画在哪层canvas中\n         * @name module:/zrender/graphic/Displayable#zlevel\n         * @type {number}\n         * @default 0\n         */\n        zlevel: 0,\n\n        /**\n         * 是否可拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        draggable: false,\n\n        /**\n         * 是否正在拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        dragging: false,\n\n        /**\n         * 是否相应鼠标事件\n         * @name module:/zrender/graphic/Displayable#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * If enable culling\n         * @type {boolean}\n         * @default false\n         */\n        culling: false,\n\n        /**\n         * Mouse cursor when hovered\n         * @name module:/zrender/graphic/Displayable#cursor\n         * @type {string}\n         */\n        cursor: 'pointer',\n\n        /**\n         * If hover area is bounding rect\n         * @name module:/zrender/graphic/Displayable#rectHover\n         * @type {string}\n         */\n        rectHover: false,\n\n        /**\n         * Render the element progressively when the value >= 0,\n         * usefull for large data.\n         * @type {number}\n         */\n        progressive: -1,\n\n        beforeBrush: function (ctx) {},\n\n        afterBrush: function (ctx) {},\n\n        /**\n         * 图形绘制方法\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        // Interface\n        brush: function (ctx, prevEl) {},\n\n        /**\n         * 获取最小包围盒\n         * @return {module:zrender/core/BoundingRect}\n         */\n        // Interface\n        getBoundingRect: function () {},\n\n        /**\n         * 判断坐标 x, y 是否在图形上\n         * If displayable element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        contain: function (x, y) {\n            return this.rectContain(x, y);\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            cb.call(context, this);\n        },\n\n        /**\n         * 判断坐标 x, y 是否在图形的包围盒上\n         * If bounding rect of element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        rectContain: function (x, y) {\n            var coord = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            return rect.contain(coord[0], coord[1]);\n        },\n\n        /**\n         * 标记图形元素为脏，并且在下一帧重绘\n         * Mark displayable element dirty and refresh next frame\n         */\n        dirty: function () {\n            this.__dirty = true;\n\n            this._rect = null;\n\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * 图形是否会触发事件\n         * If displayable object binded any event\n         * @return {boolean}\n         */\n        // TODO, 通过 bind 绑定的事件\n        // isSilent: function () {\n        //     return !(\n        //         this.hoverable || this.draggable\n        //         || this.onmousemove || this.onmouseover || this.onmouseout\n        //         || this.onmousedown || this.onmouseup || this.onclick\n        //         || this.ondragenter || this.ondragover || this.ondragleave\n        //         || this.ondrop\n        //     );\n        // },\n        /**\n         * Alias for animate('style')\n         * @param {boolean} loop\n         */\n        animateStyle: function (loop) {\n            return this.animate('style', loop);\n        },\n\n        attrKV: function (key, value) {\n            if (key !== 'style') {\n                Element.prototype.attrKV.call(this, key, value);\n            }\n            else {\n                this.style.set(value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setStyle: function (key, value) {\n            this.style.set(key, value);\n            this.dirty(false);\n            return this;\n        },\n\n        /**\n         * Use given style object\n         * @param  {Object} obj\n         */\n        useStyle: function (obj) {\n            this.style = new Style(obj, this);\n            this.dirty(false);\n            return this;\n        }\n    };\n\n    zrUtil.inherits(Displayable, Element);\n\n    zrUtil.mixin(Displayable, RectText);\n    // zrUtil.mixin(Displayable, Stateful);\n\n    module.exports = Displayable;\n\n\n/***/ }),\n/* 645 */\n/***/ (function(module, exports) {\n\n\n\n    /**\n     * @param {Array.<Object>} colorStops\n     */\n    var Gradient = function (colorStops) {\n\n        this.colorStops = colorStops || [];\n\n    };\n\n    Gradient.prototype = {\n\n        constructor: Gradient,\n\n        addColorStop: function (offset, color) {\n            this.colorStops.push({\n\n                offset: offset,\n\n                color: color\n            });\n        }\n\n    };\n\n    module.exports = Gradient;\n\n\n/***/ }),\n/* 646 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var LRU = __webpack_require__(671);\n    var globalImageCache = new LRU(50);\n\n    var helper = {};\n\n    /**\n     * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n     * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n     */\n    helper.findExistImage = function (newImageOrSrc) {\n        if (typeof newImageOrSrc === 'string') {\n            var cachedImgObj = globalImageCache.get(newImageOrSrc);\n            return cachedImgObj && cachedImgObj.image;\n        }\n        else {\n            return newImageOrSrc;\n        }\n    };\n\n    /**\n     * Caution: User should cache loaded images, but not just count on LRU.\n     * Consider if required images more than LRU size, will dead loop occur?\n     *\n     * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n     * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n     * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n     * @param {Function} [cb] params: (image, cbPayload)\n     * @param {Object} [cbPayload] Payload on cb calling.\n     * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n     */\n    helper.createOrUpdateImage = function (newImageOrSrc, image, hostEl, cb, cbPayload) {\n        if (!newImageOrSrc) {\n            return image;\n        }\n        else if (typeof newImageOrSrc === 'string') {\n\n            // Image should not be loaded repeatly.\n            if ((image && image.__zrImageSrc === newImageOrSrc) || !hostEl) {\n                return image;\n            }\n\n            // Only when there is no existent image or existent image src\n            // is different, this method is responsible for load.\n            var cachedImgObj = globalImageCache.get(newImageOrSrc);\n\n            var pendingWrap = {hostEl: hostEl, cb: cb, cbPayload: cbPayload};\n\n            if (cachedImgObj) {\n                image = cachedImgObj.image;\n                !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n            }\n            else {\n                !image && (image = new Image());\n                image.onload = imageOnLoad;\n\n                globalImageCache.put(\n                    newImageOrSrc,\n                    image.__cachedImgObj = {\n                        image: image,\n                        pending: [pendingWrap]\n                    }\n                );\n\n                image.src = image.__zrImageSrc = newImageOrSrc;\n            }\n\n            return image;\n        }\n        // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n        else {\n            return newImageOrSrc;\n        }\n    };\n\n    function imageOnLoad() {\n        var cachedImgObj = this.__cachedImgObj;\n        this.onload = this.__cachedImgObj = null;\n\n        for (var i = 0; i < cachedImgObj.pending.length; i++) {\n            var pendingWrap = cachedImgObj.pending[i];\n            var cb = pendingWrap.cb;\n            cb && cb(this, pendingWrap.cbPayload);\n            pendingWrap.hostEl.dirty();\n        }\n        cachedImgObj.pending.length = 0;\n    }\n\n    var isImageReady = helper.isImageReady = function (image) {\n        return image && image.width && image.height;\n    };\n\n    module.exports = helper;\n\n\n\n/***/ }),\n/* 647 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var textContain = __webpack_require__(621);\n    var util = __webpack_require__(606);\n    var roundRectHelper = __webpack_require__(679);\n    var imageHelper = __webpack_require__(646);\n\n    var retrieve3 = util.retrieve3;\n    var retrieve2 = util.retrieve2;\n\n    // TODO: Have not support 'start', 'end' yet.\n    var VALID_TEXT_ALIGN = {left: 1, right: 1, center: 1};\n    var VALID_TEXT_VERTICAL_ALIGN = {top: 1, bottom: 1, middle: 1};\n\n    var helper = {};\n\n    /**\n     * @param {module:zrender/graphic/Style} style\n     * @return {module:zrender/graphic/Style} The input style.\n     */\n    helper.normalizeTextStyle = function (style) {\n        normalizeStyle(style);\n        util.each(style.rich, normalizeStyle);\n        return style;\n    };\n\n    function normalizeStyle(style) {\n        if (style) {\n\n            style.font = textContain.makeFont(style);\n\n            var textAlign = style.textAlign;\n            textAlign === 'middle' && (textAlign = 'center');\n            style.textAlign = (\n                textAlign == null || VALID_TEXT_ALIGN[textAlign]\n            ) ? textAlign : 'left';\n\n            // Compatible with textBaseline.\n            var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n            textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n            style.textVerticalAlign = (\n                textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign]\n            ) ? textVerticalAlign : 'top';\n\n            var textPadding = style.textPadding;\n            if (textPadding) {\n                style.textPadding = util.normalizeCssArray(style.textPadding);\n            }\n        }\n    }\n\n    /**\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {string} text\n     * @param {module:zrender/graphic/Style} style\n     * @param {Object|boolean} [rect] {x, y, width, height}\n     *                  If set false, rect text is not used.\n     */\n    helper.renderText = function (hostEl, ctx, text, style, rect) {\n        style.rich\n            ? renderRichText(hostEl, ctx, text, style, rect)\n            : renderPlainText(hostEl, ctx, text, style, rect);\n    };\n\n    function renderPlainText(hostEl, ctx, text, style, rect) {\n        var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n\n        var textPadding = style.textPadding;\n\n        var contentBlock = hostEl.__textCotentBlock;\n        if (!contentBlock || hostEl.__dirty) {\n            contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(\n                text, font, textPadding, style.truncate\n            );\n        }\n\n        var outerHeight = contentBlock.outerHeight;\n\n        var textLines = contentBlock.lines;\n        var lineHeight = contentBlock.lineHeight;\n\n        var boxPos = getBoxPosition(outerHeight, style, rect);\n        var baseX = boxPos.baseX;\n        var baseY = boxPos.baseY;\n        var textAlign = boxPos.textAlign;\n        var textVerticalAlign = boxPos.textVerticalAlign;\n\n        // Origin of textRotation should be the base point of text drawing.\n        applyTextRotation(ctx, style, rect, baseX, baseY);\n\n        var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n        var textX = baseX;\n        var textY = boxY;\n\n        var needDrawBg = needDrawBackground(style);\n        if (needDrawBg || textPadding) {\n            // Consider performance, do not call getTextWidth util necessary.\n            var textWidth = textContain.getWidth(text, font);\n            var outerWidth = textWidth;\n            textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n            var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n\n            needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n            if (textPadding) {\n                textX = getTextXForPadding(baseX, textAlign, textPadding);\n                textY += textPadding[0];\n            }\n        }\n\n        setCtx(ctx, 'textAlign', textAlign || 'left');\n        // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n        // text will offset downward a little bit in font \"Microsoft YaHei\".\n        setCtx(ctx, 'textBaseline', 'middle');\n\n        // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n        setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n        setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n        setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n        setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0);\n\n        // `textBaseline` is set as 'middle'.\n        textY += lineHeight / 2;\n\n        var textLineWidth = style.textLineWidth;\n        var textStroke = getStroke(style.textStroke, textLineWidth);\n        var textFill = getFill(style.textFill);\n\n        if (textStroke) {\n            setCtx(ctx, 'lineWidth', textLineWidth);\n            setCtx(ctx, 'strokeStyle', textStroke);\n        }\n        if (textFill) {\n            setCtx(ctx, 'fillStyle', textFill);\n        }\n\n        for (var i = 0; i < textLines.length; i++) {\n            // Fill after stroke so the outline will not cover the main part.\n            textStroke && ctx.strokeText(textLines[i], textX, textY);\n            textFill && ctx.fillText(textLines[i], textX, textY);\n            textY += lineHeight;\n        }\n    }\n\n    function renderRichText(hostEl, ctx, text, style, rect) {\n        var contentBlock = hostEl.__textCotentBlock;\n\n        if (!contentBlock || hostEl.__dirty) {\n            contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n        }\n\n        drawRichText(hostEl, ctx, contentBlock, style, rect);\n    }\n\n    function drawRichText(hostEl, ctx, contentBlock, style, rect) {\n        var contentWidth = contentBlock.width;\n        var outerWidth = contentBlock.outerWidth;\n        var outerHeight = contentBlock.outerHeight;\n        var textPadding = style.textPadding;\n\n        var boxPos = getBoxPosition(outerHeight, style, rect);\n        var baseX = boxPos.baseX;\n        var baseY = boxPos.baseY;\n        var textAlign = boxPos.textAlign;\n        var textVerticalAlign = boxPos.textVerticalAlign;\n\n        // Origin of textRotation should be the base point of text drawing.\n        applyTextRotation(ctx, style, rect, baseX, baseY);\n\n        var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n        var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n        var xLeft = boxX;\n        var lineTop = boxY;\n        if (textPadding) {\n            xLeft += textPadding[3];\n            lineTop += textPadding[0];\n        }\n        var xRight = xLeft + contentWidth;\n\n        needDrawBackground(style) && drawBackground(\n            hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight\n        );\n\n        for (var i = 0; i < contentBlock.lines.length; i++) {\n            var line = contentBlock.lines[i];\n            var tokens = line.tokens;\n            var tokenCount = tokens.length;\n            var lineHeight = line.lineHeight;\n            var usedWidth = line.width;\n\n            var leftIndex = 0;\n            var lineXLeft = xLeft;\n            var lineXRight = xRight;\n            var rightIndex = tokenCount - 1;\n            var token;\n\n            while (\n                leftIndex < tokenCount\n                && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')\n            ) {\n                placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n                usedWidth -= token.width;\n                lineXLeft += token.width;\n                leftIndex++;\n            }\n\n            while (\n                rightIndex >= 0\n                && (token = tokens[rightIndex], token.textAlign === 'right')\n            ) {\n                placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n                usedWidth -= token.width;\n                lineXRight -= token.width;\n                rightIndex--;\n            }\n\n            // The other tokens are placed as textAlign 'center' if there is enough space.\n            lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n            while (leftIndex <= rightIndex) {\n                token = tokens[leftIndex];\n                // Consider width specified by user, use 'center' rather than 'left'.\n                placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n                lineXLeft += token.width;\n                leftIndex++;\n            }\n\n            lineTop += lineHeight;\n        }\n    }\n\n    function applyTextRotation(ctx, style, rect, x, y) {\n        // textRotation only apply in RectText.\n        if (rect && style.textRotation) {\n            var origin = style.textOrigin;\n            if (origin === 'center') {\n                x = rect.width / 2 + rect.x;\n                y = rect.height / 2 + rect.y;\n            }\n            else if (origin) {\n                x = origin[0] + rect.x;\n                y = origin[1] + rect.y;\n            }\n\n            ctx.translate(x, y);\n            // Positive: anticlockwise\n            ctx.rotate(-style.textRotation);\n            ctx.translate(-x, -y);\n        }\n    }\n\n    function placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n        var tokenStyle = style.rich[token.styleName] || {};\n\n        // 'ctx.textBaseline' is always set as 'middle', for sake of\n        // the bias of \"Microsoft YaHei\".\n        var textVerticalAlign = token.textVerticalAlign;\n        var y = lineTop + lineHeight / 2;\n        if (textVerticalAlign === 'top') {\n            y = lineTop + token.height / 2;\n        }\n        else if (textVerticalAlign === 'bottom') {\n            y = lineTop + lineHeight - token.height / 2;\n        }\n\n        !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(\n            hostEl,\n            ctx,\n            tokenStyle,\n            textAlign === 'right'\n                ? x - token.width\n                : textAlign === 'center'\n                ? x - token.width / 2\n                : x,\n            y - token.height / 2,\n            token.width,\n            token.height\n        );\n\n        var textPadding = token.textPadding;\n        if (textPadding) {\n            x = getTextXForPadding(x, textAlign, textPadding);\n            y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n        }\n\n        setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n        setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n        setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n        setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n\n        setCtx(ctx, 'textAlign', textAlign);\n        // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n        // text will offset downward a little bit in font \"Microsoft YaHei\".\n        setCtx(ctx, 'textBaseline', 'middle');\n\n        setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n\n        var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textLineWidth);\n        var textFill = getFill(tokenStyle.textFill || style.textFill);\n        var textLineWidth = retrieve2(tokenStyle.textLineWidth, style.textLineWidth);\n\n        // Fill after stroke so the outline will not cover the main part.\n        if (textStroke) {\n            setCtx(ctx, 'lineWidth', textLineWidth);\n            setCtx(ctx, 'strokeStyle', textStroke);\n            ctx.strokeText(token.text, x, y);\n        }\n        if (textFill) {\n            setCtx(ctx, 'fillStyle', textFill);\n            ctx.fillText(token.text, x, y);\n        }\n    }\n\n    function needDrawBackground(style) {\n        return style.textBackgroundColor\n            || (style.textBorderWidth && style.textBorderColor);\n    }\n\n    // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n    // shape: {x, y, width, height}\n    function drawBackground(hostEl, ctx, style, x, y, width, height) {\n        var textBackgroundColor = style.textBackgroundColor;\n        var textBorderWidth = style.textBorderWidth;\n        var textBorderColor = style.textBorderColor;\n        var isPlainBg = util.isString(textBackgroundColor);\n\n        setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n        setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n        setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n        setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n        if (isPlainBg || (textBorderWidth && textBorderColor)) {\n            ctx.beginPath();\n            var textBorderRadius = style.textBorderRadius;\n            if (!textBorderRadius) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, {\n                    x: x, y: y, width: width, height: height, r: textBorderRadius\n                });\n            }\n            ctx.closePath();\n        }\n\n        if (isPlainBg) {\n            setCtx(ctx, 'fillStyle', textBackgroundColor);\n            ctx.fill();\n        }\n        else if (util.isObject(textBackgroundColor)) {\n            var image = textBackgroundColor.image;\n\n            image = imageHelper.createOrUpdateImage(\n                image, null, hostEl, onBgImageLoaded, textBackgroundColor\n            );\n            if (image && imageHelper.isImageReady(image)) {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n\n        if (textBorderWidth && textBorderColor) {\n            setCtx(ctx, 'lineWidth', textBorderWidth);\n            setCtx(ctx, 'strokeStyle', textBorderColor);\n            ctx.stroke();\n        }\n    }\n\n    function onBgImageLoaded(image, textBackgroundColor) {\n        // Replace image, so that `contain/text.js#parseRichText`\n        // will get correct result in next tick.\n        textBackgroundColor.image = image;\n    }\n\n    function getBoxPosition(blockHeiht, style, rect) {\n        var baseX = style.x || 0;\n        var baseY = style.y || 0;\n        var textAlign = style.textAlign;\n        var textVerticalAlign = style.textVerticalAlign;\n\n        // Text position represented by coord\n        if (rect) {\n            var textPosition = style.textPosition;\n            if (textPosition instanceof Array) {\n                // Percent\n                baseX = rect.x + parsePercent(textPosition[0], rect.width);\n                baseY = rect.y + parsePercent(textPosition[1], rect.height);\n            }\n            else {\n                var res = textContain.adjustTextPositionOnRect(\n                    textPosition, rect, style.textDistance\n                );\n                baseX = res.x;\n                baseY = res.y;\n                // Default align and baseline when has textPosition\n                textAlign = textAlign || res.textAlign;\n                textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n            }\n\n            // textOffset is only support in RectText, otherwise\n            // we have to adjust boundingRect for textOffset.\n            var textOffset = style.textOffset;\n            if (textOffset) {\n                baseX += textOffset[0];\n                baseY += textOffset[1];\n            }\n        }\n\n        return {\n            baseX: baseX,\n            baseY: baseY,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    function setCtx(ctx, prop, value) {\n        // FIXME ??? performance try\n        // if (ctx.__currentValues[prop] !== value) {\n            ctx[prop] = ctx.__currentValues[prop] = value;\n        // }\n        return ctx[prop];\n    }\n\n    /**\n     * @param {string} [stroke] If specified, do not check style.textStroke.\n     * @param {string} [lineWidth] If specified, do not check style.textStroke.\n     * @param {number} style\n     */\n    var getStroke = helper.getStroke = function (stroke, lineWidth) {\n        return (stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none')\n            ? null\n            // TODO pattern and gradient?\n            : (stroke.image || stroke.colorStops)\n            ? '#000'\n            : stroke;\n    };\n\n    var getFill = helper.getFill = function (fill) {\n        return (fill == null || fill === 'none')\n            ? null\n            // TODO pattern and gradient?\n            : (fill.image || fill.colorStops)\n            ? '#000'\n            : fill;\n    };\n\n    function parsePercent(value, maxValue) {\n        if (typeof value === 'string') {\n            if (value.lastIndexOf('%') >= 0) {\n                return parseFloat(value) / 100 * maxValue;\n            }\n            return parseFloat(value);\n        }\n        return value;\n    }\n\n    function getTextXForPadding(x, textAlign, textPadding) {\n        return textAlign === 'right'\n            ? (x - textPadding[1])\n            : textAlign === 'center'\n            ? (x + textPadding[3] / 2 - textPadding[1] / 2)\n            : (x + textPadding[3]);\n    }\n\n    /**\n     * @param {string} text\n     * @param {module:zrender/Style} style\n     * @return {boolean}\n     */\n    helper.needDrawText = function (text, style) {\n        return text != null\n            && (text\n                || style.textBackgroundColor\n                || (style.textBorderWidth && style.textBorderColor)\n                || style.textPadding\n            );\n    };\n\n    module.exports = helper;\n\n\n\n\n/***/ }),\n/* 648 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var List = __webpack_require__(630);\n    var completeDimensions = __webpack_require__(631);\n    var zrUtil = __webpack_require__(606);\n    var modelUtil = __webpack_require__(609);\n    var CoordinateSystem = __webpack_require__(636);\n    var getDataItemValue = modelUtil.getDataItemValue;\n    var converDataValue = modelUtil.converDataValue;\n\n    function firstDataNotNull(data) {\n        var i = 0;\n        while (i < data.length && data[i] == null) {\n            i++;\n        }\n        return data[i];\n    }\n    function ifNeedCompleteOrdinalData(data) {\n        var sampleItem = firstDataNotNull(data);\n        return sampleItem != null\n            && !zrUtil.isArray(getDataItemValue(sampleItem));\n    }\n\n    /**\n     * Helper function to create a list from option data\n     */\n    function createListFromArray(data, seriesModel, ecModel) {\n        // If data is undefined\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        var coordSysName = seriesModel.get('coordinateSystem');\n        var creator = creators[coordSysName];\n        var registeredCoordSys = CoordinateSystem.get(coordSysName);\n        var completeDimOpt = {\n            encodeDef: seriesModel.get('encode'),\n            dimsDef: seriesModel.get('dimensions')\n        };\n\n        // FIXME\n        var axesInfo = creator && creator(data, seriesModel, ecModel, completeDimOpt);\n        var dimensions = axesInfo && axesInfo.dimensions;\n        if (!dimensions) {\n            // Get dimensions from registered coordinate system\n            dimensions = (registeredCoordSys && (\n                registeredCoordSys.getDimensionsInfo\n                    ? registeredCoordSys.getDimensionsInfo()\n                    : registeredCoordSys.dimensions.slice()\n            )) || ['x', 'y'];\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n        }\n\n        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n\n        var list = new List(dimensions, seriesModel);\n\n        var nameList = createNameList(axesInfo, data);\n\n        var categories = {};\n        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\n            ? function (itemOpt, dimName, dataIndex, dimIndex) {\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                // Use dataIndex as ordinal value in categoryAxis\n                return dimIndex === categoryIndex\n                    ? dataIndex\n                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n            }\n            : function (itemOpt, dimName, dataIndex, dimIndex) {\n                var value = getDataItemValue(itemOpt);\n                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n                if (categoryAxesModels && categoryAxesModels[dimName]) {\n                    // If given value is a category string\n                    if (typeof val === 'string') {\n                        // Lazy get categories\n                        categories[dimName] = categories[dimName]\n                            || categoryAxesModels[dimName].getCategories();\n                        val = zrUtil.indexOf(categories[dimName], val);\n                        if (val < 0 && !isNaN(val)) {\n                            // In case some one write '1', '2' istead of 1, 2\n                            val = +val;\n                        }\n                    }\n                }\n                return val;\n            };\n\n        list.hasItemOption = false;\n        list.initData(data, nameList, dimValueGetter);\n\n        return list;\n    }\n\n    function isStackable(axisType) {\n        return axisType !== 'category' && axisType !== 'time';\n    }\n\n    function getDimTypeByAxis(axisType) {\n        return axisType === 'category'\n            ? 'ordinal'\n            : axisType === 'time'\n            ? 'time'\n            : 'float';\n    }\n\n    /**\n     * Creaters for each coord system.\n     */\n    var creators = {\n\n        cartesian2d: function (data, seriesModel, ecModel, completeDimOpt) {\n\n            var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n                return ecModel.queryComponents({\n                    mainType: name,\n                    index: seriesModel.get(name + 'Index'),\n                    id: seriesModel.get(name + 'Id')\n                })[0];\n            });\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            if (__DEV__) {\n                if (!xAxisModel) {\n                    throw new Error('xAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('xAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n                if (!yAxisModel) {\n                    throw new Error('yAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('yAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'x',\n                    type: getDimTypeByAxis(xAxisType),\n                    stackable: isStackable(xAxisType)\n                },\n                {\n                    name: 'y',\n                    // If two category axes\n                    type: getDimTypeByAxis(yAxisType),\n                    stackable: isStackable(yAxisType)\n                }\n            ];\n\n            var isXAxisCateogry = xAxisType === 'category';\n            var isYAxisCategory = yAxisType === 'category';\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isXAxisCateogry) {\n                categoryAxesModels.x = xAxisModel;\n            }\n            if (isYAxisCategory) {\n                categoryAxesModels.y = yAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        singleAxis: function (data, seriesModel, ecModel, completeDimOpt) {\n\n            var singleAxisModel = ecModel.queryComponents({\n                mainType: 'singleAxis',\n                index: seriesModel.get('singleAxisIndex'),\n                id: seriesModel.get('singleAxisId')\n            })[0];\n\n            if (__DEV__) {\n                if (!singleAxisModel) {\n                    throw new Error('singleAxis should be specified.');\n                }\n            }\n\n            var singleAxisType = singleAxisModel.get('type');\n            var isCategory = singleAxisType === 'category';\n\n            var dimensions = [{\n                name: 'single',\n                type: getDimTypeByAxis(singleAxisType),\n                stackable: isStackable(singleAxisType)\n            }];\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isCategory) {\n                categoryAxesModels.single = singleAxisModel;\n            }\n\n            return {\n                dimensions: dimensions,\n                categoryIndex: isCategory ? 0 : -1,\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        polar: function (data, seriesModel, ecModel, completeDimOpt) {\n            var polarModel = ecModel.queryComponents({\n                mainType: 'polar',\n                index: seriesModel.get('polarIndex'),\n                id: seriesModel.get('polarId')\n            })[0];\n\n            var angleAxisModel = polarModel.findAxisModel('angleAxis');\n            var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n\n            if (__DEV__) {\n                if (!angleAxisModel) {\n                    throw new Error('angleAxis option not found');\n                }\n                if (!radiusAxisModel) {\n                    throw new Error('radiusAxis option not found');\n                }\n            }\n\n            var radiusAxisType = radiusAxisModel.get('type');\n            var angleAxisType = angleAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'radius',\n                    type: getDimTypeByAxis(radiusAxisType),\n                    stackable: isStackable(radiusAxisType)\n                },\n                {\n                    name: 'angle',\n                    type: getDimTypeByAxis(angleAxisType),\n                    stackable: isStackable(angleAxisType)\n                }\n            ];\n            var isAngleAxisCateogry = angleAxisType === 'category';\n            var isRadiusAxisCateogry = radiusAxisType === 'category';\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isRadiusAxisCateogry) {\n                categoryAxesModels.radius = radiusAxisModel;\n            }\n            if (isAngleAxisCateogry) {\n                categoryAxesModels.angle = angleAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        geo: function (data, seriesModel, ecModel, completeDimOpt) {\n            // TODO Region\n            // 多个散点图系列在同一个地区的时候\n            return {\n                dimensions: completeDimensions([\n                    {name: 'lng'},\n                    {name: 'lat'}\n                ], data, completeDimOpt)\n            };\n        }\n    };\n\n    function createNameList(result, data) {\n        var nameList = [];\n\n        var categoryDim = result && result.dimensions[result.categoryIndex];\n        var categoryAxisModel;\n        if (categoryDim) {\n            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n        }\n\n        if (categoryAxisModel) {\n            // FIXME Two category axis\n            var categories = categoryAxisModel.getCategories();\n            if (categories) {\n                var dataLen = data.length;\n                // Ordered data is given explicitly like\n                // [[3, 0.2], [1, 0.3], [2, 0.15]]\n                // or given scatter data,\n                // pick the category\n                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n                    nameList = [];\n                    for (var i = 0; i < dataLen; i++) {\n                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\n                    }\n                }\n                else {\n                    nameList = categories.slice(0);\n                }\n            }\n        }\n\n        return nameList;\n    }\n\n    module.exports = createListFromArray;\n\n\n\n/***/ }),\n/* 649 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var formatUtil = __webpack_require__(613);\n    var graphic = __webpack_require__(608);\n    var Model = __webpack_require__(614);\n    var numberUtil = __webpack_require__(610);\n    var remRadian = numberUtil.remRadian;\n    var isRadianAroundZero = numberUtil.isRadianAroundZero;\n    var vec2 = __webpack_require__(611);\n    var matrix = __webpack_require__(623);\n    var v2ApplyTransform = vec2.applyTransform;\n    var retrieve = zrUtil.retrieve;\n\n    var PI = Math.PI;\n\n    function makeAxisEventDataBase(axisModel) {\n        var eventData = {\n            componentType: axisModel.mainType\n        };\n        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n        return eventData;\n    }\n\n    /**\n     * A final axis is translated and rotated from a \"standard axis\".\n     * So opt.position and opt.rotation is required.\n     *\n     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n     * for example: (0, 0) ------------> (0, 50)\n     *\n     * nameDirection or tickDirection or labelDirection is 1 means tick\n     * or label is below the standard axis, whereas is -1 means above\n     * the standard axis. labelOffset means offset between label and axis,\n     * which is useful when 'onZero', where axisLabel is in the grid and\n     * label in outside grid.\n     *\n     * Tips: like always,\n     * positive rotation represents anticlockwise, and negative rotation\n     * represents clockwise.\n     * The direction of position coordinate is the same as the direction\n     * of screen coordinate.\n     *\n     * Do not need to consider axis 'inverse', which is auto processed by\n     * axis extent.\n     *\n     * @param {module:zrender/container/Group} group\n     * @param {Object} axisModel\n     * @param {Object} opt Standard axis parameters.\n     * @param {Array.<number>} opt.position [x, y]\n     * @param {number} opt.rotation by radian\n     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle'.\n     * @param {number} [opt.tickDirection=1] 1 or -1\n     * @param {number} [opt.labelDirection=1] 1 or -1\n     * @param {number} [opt.labelOffset=0] Usefull when onZero.\n     * @param {string} [opt.axisLabelShow] default get from axisModel.\n     * @param {string} [opt.axisName] default get from axisModel.\n     * @param {number} [opt.axisNameAvailableWidth]\n     * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n     * @param {number} [opt.labelInterval] Default label interval when label\n     *                                     interval from model is null or 'auto'.\n     * @param {number} [opt.strokeContainThreshold] Default label interval when label\n     * @param {number} [opt.nameTruncateMaxWidth]\n     */\n    var AxisBuilder = function (axisModel, opt) {\n\n        /**\n         * @readOnly\n         */\n        this.opt = opt;\n\n        /**\n         * @readOnly\n         */\n        this.axisModel = axisModel;\n\n        // Default value\n        zrUtil.defaults(\n            opt,\n            {\n                labelOffset: 0,\n                nameDirection: 1,\n                tickDirection: 1,\n                labelDirection: 1,\n                silent: true\n            }\n        );\n\n        /**\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        // FIXME Not use a seperate text group?\n        var dumbGroup = new graphic.Group({\n            position: opt.position.slice(),\n            rotation: opt.rotation\n        });\n\n        // this.group.add(dumbGroup);\n        // this._dumbGroup = dumbGroup;\n\n        dumbGroup.updateTransform();\n        this._transform = dumbGroup.transform;\n\n        this._dumbGroup = dumbGroup;\n    };\n\n    AxisBuilder.prototype = {\n\n        constructor: AxisBuilder,\n\n        hasBuilder: function (name) {\n            return !!builders[name];\n        },\n\n        add: function (name) {\n            builders[name].call(this);\n        },\n\n        getGroup: function () {\n            return this.group;\n        }\n\n    };\n\n    var builders = {\n\n        /**\n         * @private\n         */\n        axisLine: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisLine.show')) {\n                return;\n            }\n\n            var extent = this.axisModel.axis.getExtent();\n\n            var matrix = this._transform;\n            var pt1 = [extent[0], 0];\n            var pt2 = [extent[1], 0];\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n\n            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                // Id for animation\n                anid: 'line',\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.extend(\n                    {lineCap: 'round'},\n                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\n                ),\n                strokeContainThreshold: opt.strokeContainThreshold || 5,\n                silent: true,\n                z2: 1\n            })));\n        },\n\n        /**\n         * @private\n         */\n        axisTick: function () {\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n\n            if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n                return;\n            }\n\n            var tickModel = axisModel.getModel('axisTick');\n            var opt = this.opt;\n\n            var lineStyleModel = tickModel.getModel('lineStyle');\n            var tickLen = tickModel.get('length');\n\n            var tickInterval = getInterval(tickModel, opt.labelInterval);\n            var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\n            var ticks = axis.scale.getTicks();\n\n            var pt1 = [];\n            var pt2 = [];\n            var matrix = this._transform;\n\n            for (var i = 0; i < ticksCoords.length; i++) {\n                // Only ordinal scale support tick interval\n                if (ifIgnoreOnTick(axis, i, tickInterval)) {\n                     continue;\n                }\n\n                var tickCoord = ticksCoords[i];\n\n                pt1[0] = tickCoord;\n                pt1[1] = 0;\n                pt2[0] = tickCoord;\n                pt2[1] = opt.tickDirection * tickLen;\n\n                if (matrix) {\n                    v2ApplyTransform(pt1, pt1, matrix);\n                    v2ApplyTransform(pt2, pt2, matrix);\n                }\n                // Tick line, Not use group transform to have better line draw\n                this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                    // Id for animation\n                    anid: 'tick_' + ticks[i],\n\n                    shape: {\n                        x1: pt1[0],\n                        y1: pt1[1],\n                        x2: pt2[0],\n                        y2: pt2[1]\n                    },\n                    style: zrUtil.defaults(\n                        lineStyleModel.getLineStyle(),\n                        {\n                            stroke: axisModel.get('axisLine.lineStyle.color')\n                        }\n                    ),\n                    z2: 2,\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @private\n         */\n        axisLabel: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n            var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n            if (!show || axis.scale.isBlank()) {\n                return;\n            }\n\n            var labelModel = axisModel.getModel('axisLabel');\n            var labelMargin = labelModel.get('margin');\n            var ticks = axis.scale.getTicks();\n            var labels = axisModel.getFormattedLabels();\n\n            // Special label rotate.\n            var labelRotation = (\n                retrieve(opt.labelRotate, labelModel.get('rotate')) || 0\n            ) * PI / 180;\n\n            var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n            var categoryData = axisModel.get('data');\n\n            var textEls = [];\n            var silent = isSilent(axisModel);\n            var triggerEvent = axisModel.get('triggerEvent');\n\n            zrUtil.each(ticks, function (tickVal, index) {\n                if (ifIgnoreOnTick(axis, index, opt.labelInterval)) {\n                     return;\n                }\n\n                var itemLabelModel = labelModel;\n                if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n                    itemLabelModel = new Model(\n                        categoryData[tickVal].textStyle, labelModel, axisModel.ecModel\n                    );\n                }\n\n                var textColor = itemLabelModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color');\n\n                var tickCoord = axis.dataToCoord(tickVal);\n                var pos = [\n                    tickCoord,\n                    opt.labelOffset + opt.labelDirection * labelMargin\n                ];\n                var labelStr = axis.scale.getLabel(tickVal);\n\n                var textEl = new graphic.Text({\n                    // Id for animation\n                    anid: 'label_' + tickVal,\n                    position: pos,\n                    rotation: labelLayout.rotation,\n                    silent: silent,\n                    z2: 10\n                });\n\n                graphic.setTextStyle(textEl.style, itemLabelModel, {\n                    text: labels[index],\n                    textAlign: itemLabelModel.getShallow('align', true)\n                        || labelLayout.textAlign,\n                    textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true)\n                        || itemLabelModel.getShallow('baseline', true)\n                        || labelLayout.textVerticalAlign,\n                    textFill: typeof textColor === 'function'\n                        ? textColor(\n                            // (1) In category axis with data zoom, tick is not the original\n                            // index of axis.data. So tick should not be exposed to user\n                            // in category axis.\n                            // (2) Compatible with previous version, which always returns labelStr.\n                            // But in interval scale labelStr is like '223,445', which maked\n                            // user repalce ','. So we modify it to return original val but remain\n                            // it as 'string' to avoid error in replacing.\n                            axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal,\n                            index\n                        )\n                        : textColor\n                });\n\n                // Pack data for mouse event\n                if (triggerEvent) {\n                    textEl.eventData = makeAxisEventDataBase(axisModel);\n                    textEl.eventData.targetType = 'axisLabel';\n                    textEl.eventData.value = labelStr;\n                }\n\n                // FIXME\n                this._dumbGroup.add(textEl);\n                textEl.updateTransform();\n\n                textEls.push(textEl);\n                this.group.add(textEl);\n\n                textEl.decomposeTransform();\n\n            }, this);\n\n            fixMinMaxLabelShow(axisModel, textEls);\n        },\n\n        /**\n         * @private\n         */\n        axisName: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var name = retrieve(opt.axisName, axisModel.get('name'));\n\n            if (!name) {\n                return;\n            }\n\n            var nameLocation = axisModel.get('nameLocation');\n            var nameDirection = opt.nameDirection;\n            var textStyleModel = axisModel.getModel('nameTextStyle');\n            var gap = axisModel.get('nameGap') || 0;\n\n            var extent = this.axisModel.axis.getExtent();\n            var gapSignal = extent[0] > extent[1] ? -1 : 1;\n            var pos = [\n                nameLocation === 'start'\n                    ? extent[0] - gapSignal * gap\n                    : nameLocation === 'end'\n                    ? extent[1] + gapSignal * gap\n                    : (extent[0] + extent[1]) / 2, // 'middle'\n                // Reuse labelOffset.\n                nameLocation === 'middle' ? opt.labelOffset + nameDirection * gap : 0\n            ];\n\n            var labelLayout;\n\n            var nameRotation = axisModel.get('nameRotate');\n            if (nameRotation != null) {\n                nameRotation = nameRotation * PI / 180; // To radian.\n            }\n\n            var axisNameAvailableWidth;\n\n            if (nameLocation === 'middle') {\n                labelLayout = innerTextLayout(\n                    opt.rotation,\n                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n                    nameDirection\n                );\n            }\n            else {\n                labelLayout = endTextLayout(\n                    opt, nameLocation, nameRotation || 0, extent\n                );\n\n                axisNameAvailableWidth = opt.axisNameAvailableWidth;\n                if (axisNameAvailableWidth != null) {\n                    axisNameAvailableWidth = Math.abs(\n                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\n                    );\n                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n                }\n            }\n\n            var textFont = textStyleModel.getFont();\n\n            var truncateOpt = axisModel.get('nameTruncate', true) || {};\n            var ellipsis = truncateOpt.ellipsis;\n            var maxWidth = retrieve(\n                opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth\n            );\n            // FIXME\n            // truncate rich text? (consider performance)\n            var truncatedText = (ellipsis != null && maxWidth != null)\n                ? formatUtil.truncateText(\n                    name, maxWidth, textFont, ellipsis,\n                    {minChar: 2, placeholder: truncateOpt.placeholder}\n                )\n                : name;\n\n            var tooltipOpt = axisModel.get('tooltip', true);\n\n            var mainType = axisModel.mainType;\n            var formatterParams = {\n                componentType: mainType,\n                name: name,\n                $vars: ['name']\n            };\n            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n\n            var textEl = new graphic.Text({\n                // Id for animation\n                anid: 'name',\n\n                __fullText: name,\n                __truncatedText: truncatedText,\n\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: isSilent(axisModel),\n                z2: 1,\n                tooltip: (tooltipOpt && tooltipOpt.show)\n                    ? zrUtil.extend({\n                        content: name,\n                        formatter: function () {\n                            return name;\n                        },\n                        formatterParams: formatterParams\n                    }, tooltipOpt)\n                    : null\n            });\n\n            graphic.setTextStyle(textEl.style, textStyleModel, {\n                text: truncatedText,\n                textFont: textFont,\n                textFill: textStyleModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color'),\n                textAlign: labelLayout.textAlign,\n                textVerticalAlign: labelLayout.textVerticalAlign\n            });\n\n            if (axisModel.get('triggerEvent')) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisName';\n                textEl.eventData.name = name;\n            }\n\n            // FIXME\n            this._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            this.group.add(textEl);\n\n            textEl.decomposeTransform();\n        }\n\n    };\n\n    /**\n     * @public\n     * @static\n     * @param {Object} opt\n     * @param {number} axisRotation in radian\n     * @param {number} textRotation in radian\n     * @param {number} direction\n     * @return {Object} {\n     *  rotation, // according to axis\n     *  textAlign,\n     *  textVerticalAlign\n     * }\n     */\n    var innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n        var rotationDiff = remRadian(textRotation - axisRotation);\n        var textAlign;\n        var textVerticalAlign;\n\n        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n\n            if (rotationDiff > 0 && rotationDiff < PI) {\n                textAlign = direction > 0 ? 'right' : 'left';\n            }\n            else {\n                textAlign = direction > 0 ? 'left' : 'right';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    };\n\n    function endTextLayout(opt, textPosition, textRotate, extent) {\n        var rotationDiff = remRadian(textRotate - opt.rotation);\n        var textAlign;\n        var textVerticalAlign;\n        var inverse = extent[0] > extent[1];\n        var onLeft = (textPosition === 'start' && !inverse)\n            || (textPosition !== 'start' && inverse);\n\n        if (isRadianAroundZero(rotationDiff - PI / 2)) {\n            textVerticalAlign = onLeft ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n            textVerticalAlign = onLeft ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n                textAlign = onLeft ? 'left' : 'right';\n            }\n            else {\n                textAlign = onLeft ? 'right' : 'left';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    function isSilent(axisModel) {\n        var tooltipOpt = axisModel.get('tooltip');\n        return axisModel.get('silent')\n            // Consider mouse cursor, add these restrictions.\n            || !(\n                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\n            );\n    }\n\n    function fixMinMaxLabelShow(axisModel, textEls) {\n        // If min or max are user set, we need to check\n        // If the tick on min(max) are overlap on their neighbour tick\n        // If they are overlapped, we need to hide the min(max) tick label\n        var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n        var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n        var firstLabel = textEls[0];\n        var nextLabel = textEls[1];\n        var lastLabel = textEls[textEls.length - 1];\n        var prevLabel = textEls[textEls.length - 2];\n\n        if (showMinLabel === false) {\n            firstLabel.ignore = true;\n        }\n        else if (axisModel.getMin() != null && isTwoLabelOverlapped(firstLabel, nextLabel)) {\n            showMinLabel ? (nextLabel.ignore = true) : (firstLabel.ignore = true);\n        }\n\n        if (showMaxLabel === false) {\n            lastLabel.ignore = true;\n        }\n        else if (axisModel.getMax() != null && isTwoLabelOverlapped(prevLabel, lastLabel)) {\n            showMaxLabel ? (prevLabel.ignore = true) : (lastLabel.ignore = true);\n        }\n    }\n\n    function isTwoLabelOverlapped(current, next, labelLayout) {\n        // current and next has the same rotation.\n        var firstRect = current && current.getBoundingRect().clone();\n        var nextRect = next && next.getBoundingRect().clone();\n\n        if (!firstRect || !nextRect) {\n            return;\n        }\n\n        // When checking intersect of two rotated labels, we use mRotationBack\n        // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n        var mRotationBack = matrix.identity([]);\n        matrix.rotate(mRotationBack, mRotationBack, -current.rotation);\n\n        firstRect.applyTransform(matrix.mul([], mRotationBack, current.getLocalTransform()));\n        nextRect.applyTransform(matrix.mul([], mRotationBack, next.getLocalTransform()));\n\n        return firstRect.intersect(nextRect);\n    }\n\n\n    /**\n     * @static\n     */\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval) {\n        var rawTick;\n        var scale = axis.scale;\n        return scale.type === 'ordinal'\n            && (\n                typeof interval === 'function'\n                    ? (\n                        rawTick = scale.getTicks()[i],\n                        !interval(rawTick, scale.getLabel(rawTick))\n                    )\n                    : i % (interval + 1)\n            );\n    };\n\n    /**\n     * @static\n     */\n    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n        var interval = model.get('interval');\n        if (interval == null || interval == 'auto') {\n            interval = labelInterval;\n        }\n        return interval;\n    };\n\n    module.exports = AxisBuilder;\n\n\n\n/***/ }),\n/* 650 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var numberUtil = __webpack_require__(610);\n    var linearMap = numberUtil.linearMap;\n    var zrUtil = __webpack_require__(606);\n    var axisHelper = __webpack_require__(620);\n\n    function fixExtentWithBands(extent, nTick) {\n        var size = extent[1] - extent[0];\n        var len = nTick;\n        var margin = size / len / 2;\n        extent[0] += margin;\n        extent[1] -= margin;\n    }\n\n    var normalizedExtent = [0, 1];\n    /**\n     * @name module:echarts/coord/CartesianAxis\n     * @constructor\n     */\n    var Axis = function (dim, scale, extent) {\n\n        /**\n         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n         * @type {string}\n         */\n        this.dim = dim;\n\n        /**\n         * Axis scale\n         * @type {module:echarts/coord/scale/*}\n         */\n        this.scale = scale;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        this._extent = extent || [0, 0];\n\n        /**\n         * @type {boolean}\n         */\n        this.inverse = false;\n\n        /**\n         * Usually true when axis has a ordinal scale\n         * @type {boolean}\n         */\n        this.onBand = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._labelInterval;\n    };\n\n    Axis.prototype = {\n\n        constructor: Axis,\n\n        /**\n         * If axis extent contain given coord\n         * @param {number} coord\n         * @return {boolean}\n         */\n        contain: function (coord) {\n            var extent = this._extent;\n            var min = Math.min(extent[0], extent[1]);\n            var max = Math.max(extent[0], extent[1]);\n            return coord >= min && coord <= max;\n        },\n\n        /**\n         * If axis extent contain given data\n         * @param {number} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.contain(this.dataToCoord(data));\n        },\n\n        /**\n         * Get coord extent.\n         * @return {Array.<number>}\n         */\n        getExtent: function () {\n            return this._extent.slice();\n        },\n\n        /**\n         * Get precision used for formatting\n         * @param {Array.<number>} [dataExtent]\n         * @return {number}\n         */\n        getPixelPrecision: function (dataExtent) {\n            return numberUtil.getPixelPrecision(\n                dataExtent || this.scale.getExtent(),\n                this._extent\n            );\n        },\n\n        /**\n         * Set coord extent\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var extent = this._extent;\n            extent[0] = start;\n            extent[1] = end;\n        },\n\n        /**\n         * Convert data to coord. Data is the rank if it has a ordinal scale\n         * @param {number} data\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        dataToCoord: function (data, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n            data = scale.normalize(data);\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            return linearMap(data, normalizedExtent, extent, clamp);\n        },\n\n        /**\n         * Convert coord to data. Data is the rank if it has a ordinal scale\n         * @param {number} coord\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        coordToData: function (coord, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            var t = linearMap(coord, extent, normalizedExtent, clamp);\n\n            return this.scale.scale(t);\n        },\n\n        /**\n         * Convert pixel point to data in axis\n         * @param {Array.<number>} point\n         * @param  {boolean} clamp\n         * @return {number} data\n         */\n        pointToData: function (point, clamp) {\n            // Should be implemented in derived class if necessary.\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicksCoords: function (alignWithLabel) {\n            if (this.onBand && !alignWithLabel) {\n                var bands = this.getBands();\n                var coords = [];\n                for (var i = 0; i < bands.length; i++) {\n                    coords.push(bands[i][0]);\n                }\n                if (bands[i - 1]) {\n                    coords.push(bands[i - 1][1]);\n                }\n                return coords;\n            }\n            else {\n                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n            }\n        },\n\n        /**\n         * Coords of labels are on the ticks or on the middle of bands\n         * @return {Array.<number>}\n         */\n        getLabelsCoords: function () {\n            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n        },\n\n        /**\n         * Get bands.\n         *\n         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n         * |---1---|---2---|---3---|---4---|.\n         *\n         * @return {Array}\n         */\n         // FIXME Situation when labels is on ticks\n        getBands: function () {\n            var extent = this.getExtent();\n            var bands = [];\n            var len = this.scale.count();\n            var start = extent[0];\n            var end = extent[1];\n            var span = end - start;\n\n            for (var i = 0; i < len; i++) {\n                bands.push([\n                    span * i / len + start,\n                    span * (i + 1) / len + start\n                ]);\n            }\n            return bands;\n        },\n\n        /**\n         * Get width of band\n         * @return {number}\n         */\n        getBandWidth: function () {\n            var axisExtent = this._extent;\n            var dataExtent = this.scale.getExtent();\n\n            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\n            // Fix #2728, avoid NaN when only one data.\n            len === 0 && (len = 1);\n\n            var size = Math.abs(axisExtent[1] - axisExtent[0]);\n\n            return Math.abs(size) / len;\n        },\n\n        /**\n         * Get interval of the axis label.\n         * @return {number}\n         */\n        getLabelInterval: function () {\n            var labelInterval = this._labelInterval;\n            if (!labelInterval) {\n                var axisModel = this.model;\n                var labelModel = axisModel.getModel('axisLabel');\n                var interval = labelModel.get('interval');\n                if (!(this.type === 'category' && interval === 'auto')) {\n                    labelInterval = interval === 'auto' ? 0 : interval;\n                }\n                else if (this.isHorizontal){\n                    labelInterval = axisHelper.getAxisLabelInterval(\n                        zrUtil.map(this.scale.getTicks(), this.dataToCoord, this),\n                        axisModel.getFormattedLabels(),\n                        labelModel.getFont(),\n                        this.isHorizontal()\n                    );\n                }\n                this._labelInterval = labelInterval;\n            }\n            return labelInterval;\n        }\n\n    };\n\n    module.exports = Axis;\n\n\n/***/ }),\n/* 651 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var axisHelper = __webpack_require__(620);\n\n    function getName(obj) {\n        if (zrUtil.isObject(obj) && obj.value != null) {\n            return obj.value;\n        }\n        else {\n            return obj + '';\n        }\n    }\n\n    module.exports = {\n\n        /**\n         * Format labels\n         * @return {Array.<string>}\n         */\n        getFormattedLabels: function () {\n            return axisHelper.getFormattedLabels(\n                this.axis,\n                this.get('axisLabel.formatter')\n            );\n        },\n\n        /**\n         * Get categories\n         */\n        getCategories: function () {\n            return this.get('type') === 'category'\n                && zrUtil.map(this.get('data'), getName);\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n         */\n        getMin: function (origin) {\n            var option = this.option;\n            var min = (!origin && option.rangeStart != null)\n                ? option.rangeStart : option.min;\n\n            if (this.axis && min != null && min !== 'dataMin' && !zrUtil.eqNaN(min)) {\n                min = this.axis.scale.parse(min);\n            }\n            return min;\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n         */\n        getMax: function (origin) {\n            var option = this.option;\n            var max = (!origin && option.rangeEnd != null)\n                ? option.rangeEnd : option.max;\n\n            if (this.axis && max != null && max !== 'dataMax' && !zrUtil.eqNaN(max)) {\n                max = this.axis.scale.parse(max);\n            }\n            return max;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        getNeedCrossZero: function () {\n            var option = this.option;\n            return (option.rangeStart != null || option.rangeEnd != null)\n                ? false : !option.scale;\n        },\n\n        /**\n         * Should be implemented by each axis model if necessary.\n         * @return {module:echarts/model/Component} coordinate system model\n         */\n        getCoordSysModel: zrUtil.noop,\n\n        /**\n         * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n         * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n         */\n        setRange: function (rangeStart, rangeEnd) {\n            this.option.rangeStart = rangeStart;\n            this.option.rangeEnd = rangeEnd;\n        },\n\n        /**\n         * Reset range\n         */\n        resetRange: function () {\n            // rangeStart and rangeEnd is readonly.\n            this.option.rangeStart = this.option.rangeEnd = null;\n        }\n    };\n\n\n/***/ }),\n/* 652 */,\n/* 653 */,\n/* 654 */,\n/* 655 */,\n/* 656 */,\n/* 657 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var zrUtil = __webpack_require__(606);\n    var symbolUtil = __webpack_require__(639);\n    var graphic = __webpack_require__(608);\n    var numberUtil = __webpack_require__(610);\n    var labelHelper = __webpack_require__(710);\n\n    function getSymbolSize(data, idx) {\n        var symbolSize = data.getItemVisual(idx, 'symbolSize');\n        return symbolSize instanceof Array\n            ? symbolSize.slice()\n            : [+symbolSize, +symbolSize];\n    }\n\n    function getScale(symbolSize) {\n        return [symbolSize[0] / 2, symbolSize[1] / 2];\n    }\n\n    /**\n     * @constructor\n     * @alias {module:echarts/chart/helper/Symbol}\n     * @param {module:echarts/data/List} data\n     * @param {number} idx\n     * @extends {module:zrender/graphic/Group}\n     */\n    function Symbol(data, idx, seriesScope) {\n        graphic.Group.call(this);\n\n        this.updateData(data, idx, seriesScope);\n    }\n\n    var symbolProto = Symbol.prototype;\n\n    function driftSymbol(dx, dy) {\n        this.parent.drift(dx, dy);\n    }\n\n    symbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n        // Remove paths created before\n        this.removeAll();\n\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // var symbolPath = symbolUtil.createSymbol(\n        //     symbolType, -0.5, -0.5, 1, 1, color\n        // );\n        // If width/height are set too small (e.g., set to 1) on ios10\n        // and macOS Sierra, a circle stroke become a rect, no matter what\n        // the scale is set. So we set width/height as 2. See #4150.\n        var symbolPath = symbolUtil.createSymbol(\n            symbolType, -1, -1, 2, 2, color\n        );\n\n        symbolPath.attr({\n            z2: 100,\n            culling: true,\n            scale: [0, 0]\n        });\n        // Rewrite drift method\n        symbolPath.drift = driftSymbol;\n\n        graphic.initProps(symbolPath, {\n            scale: getScale(symbolSize)\n        }, seriesModel, idx);\n        this._symbolType = symbolType;\n\n        this.add(symbolPath);\n    };\n\n    /**\n     * Stop animation\n     * @param {boolean} toLastFrame\n     */\n    symbolProto.stopSymbolAnimation = function (toLastFrame) {\n        this.childAt(0).stopAnimation(toLastFrame);\n    };\n\n    /**\n     * Get symbol path element\n     */\n    symbolProto.getSymbolPath = function () {\n        return this.childAt(0);\n    };\n\n    /**\n     * Get scale(aka, current symbol size).\n     * Including the change caused by animation\n     */\n    symbolProto.getScale = function () {\n        return this.childAt(0).scale;\n    };\n\n    /**\n     * Highlight symbol\n     */\n    symbolProto.highlight = function () {\n        this.childAt(0).trigger('emphasis');\n    };\n\n    /**\n     * Downplay symbol\n     */\n    symbolProto.downplay = function () {\n        this.childAt(0).trigger('normal');\n    };\n\n    /**\n     * @param {number} zlevel\n     * @param {number} z\n     */\n    symbolProto.setZ = function (zlevel, z) {\n        var symbolPath = this.childAt(0);\n        symbolPath.zlevel = zlevel;\n        symbolPath.z = z;\n    };\n\n    symbolProto.setDraggable = function (draggable) {\n        var symbolPath = this.childAt(0);\n        symbolPath.draggable = draggable;\n        symbolPath.cursor = draggable ? 'move' : 'pointer';\n    };\n\n    /**\n     * Update symbol properties\n     * @param  {module:echarts/data/List} data\n     * @param  {number} idx\n     */\n    symbolProto.updateData = function (data, idx, seriesScope) {\n        this.silent = false;\n\n        var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n        var seriesModel = data.hostModel;\n        var symbolSize = getSymbolSize(data, idx);\n\n        if (symbolType !== this._symbolType) {\n            this._createSymbol(symbolType, data, idx, symbolSize);\n        }\n        else {\n            var symbolPath = this.childAt(0);\n            symbolPath.silent = false;\n            graphic.updateProps(symbolPath, {\n                scale: getScale(symbolSize)\n            }, seriesModel, idx);\n        }\n        this._updateCommon(data, idx, symbolSize, seriesScope);\n        this._seriesModel = seriesModel;\n    };\n\n    // Update common properties\n    var normalStyleAccessPath = ['itemStyle', 'normal'];\n    var emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n    var normalLabelAccessPath = ['label', 'normal'];\n    var emphasisLabelAccessPath = ['label', 'emphasis'];\n\n    symbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n        var symbolPath = this.childAt(0);\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // Reset style\n        if (symbolPath.type !== 'image') {\n            symbolPath.useStyle({\n                strokeNoScale: true\n            });\n        }\n\n        seriesScope = seriesScope || null;\n\n        var itemStyle = seriesScope && seriesScope.itemStyle;\n        var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n        var symbolRotate = seriesScope && seriesScope.symbolRotate;\n        var symbolOffset = seriesScope && seriesScope.symbolOffset;\n        var labelModel = seriesScope && seriesScope.labelModel;\n        var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n        var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n        var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n        if (!seriesScope || data.hasItemOption) {\n            var itemModel = data.getItemModel(idx);\n\n            // Color must be excluded.\n            // Because symbol provide setColor individually to set fill and stroke\n            itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n            hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n\n            symbolRotate = itemModel.getShallow('symbolRotate');\n            symbolOffset = itemModel.getShallow('symbolOffset');\n\n            labelModel = itemModel.getModel(normalLabelAccessPath);\n            hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n            hoverAnimation = itemModel.getShallow('hoverAnimation');\n            cursorStyle = itemModel.getShallow('cursor');\n        }\n        else {\n            hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n        }\n\n        var elStyle = symbolPath.style;\n\n        symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n        if (symbolOffset) {\n            symbolPath.attr('position', [\n                numberUtil.parsePercent(symbolOffset[0], symbolSize[0]),\n                numberUtil.parsePercent(symbolOffset[1], symbolSize[1])\n            ]);\n        }\n\n        cursorStyle && symbolPath.attr('cursor', cursorStyle);\n\n        // PENDING setColor before setStyle!!!\n        symbolPath.setColor(color);\n\n        symbolPath.setStyle(itemStyle);\n\n        var opacity = data.getItemVisual(idx, 'opacity');\n        if (opacity != null) {\n            elStyle.opacity = opacity;\n        }\n\n        var valueDim = labelHelper.findLabelValueDim(data);\n\n        if (valueDim != null) {\n            graphic.setText(elStyle, labelModel, color);\n            var normalText = seriesModel.getFormattedLabel(idx, 'normal');\n            var value = data.get(valueDim, idx);\n            elStyle.text = labelModel.getShallow('show')\n                ? zrUtil.retrieve2(\n                    normalText,\n                    value\n                )\n                : null;\n\n            graphic.setText(hoverItemStyle, hoverLabelModel, false);\n            hoverItemStyle.text = hoverLabelModel.getShallow('show')\n                ? zrUtil.retrieve3(\n                    seriesModel.getFormattedLabel(idx, 'emphasis'),\n                    normalText,\n                    value\n                )\n                : null;\n        }\n\n        symbolPath.off('mouseover')\n            .off('mouseout')\n            .off('emphasis')\n            .off('normal');\n\n        symbolPath.hoverStyle = hoverItemStyle;\n\n        graphic.setHoverStyle(symbolPath);\n\n        var scale = getScale(symbolSize);\n\n        if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n            var onEmphasis = function() {\n                var ratio = scale[1] / scale[0];\n                this.animateTo({\n                    scale: [\n                        Math.max(scale[0] * 1.1, scale[0] + 3),\n                        Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)\n                    ]\n                }, 400, 'elasticOut');\n            };\n            var onNormal = function() {\n                this.animateTo({\n                    scale: scale\n                }, 400, 'elasticOut');\n            };\n            symbolPath.on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n    };\n\n    symbolProto.fadeOut = function (cb) {\n        var symbolPath = this.childAt(0);\n        // Avoid mistaken hover when fading out\n        this.silent = symbolPath.silent = true;\n        // Not show text when animating\n        symbolPath.style.text = null;\n        graphic.updateProps(symbolPath, {\n            scale: [0, 0]\n        }, this._seriesModel, this.dataIndex, cb);\n    };\n\n    zrUtil.inherits(Symbol, graphic.Group);\n\n    module.exports = Symbol;\n\n\n/***/ }),\n/* 658 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var axisPointerModelHelper = __webpack_require__(629);\n\n    /**\n     * Base class of AxisView.\n     */\n    var AxisView = __webpack_require__(607).extendComponentView({\n\n        type: 'axis',\n\n        /**\n         * @private\n         */\n        _axisPointer: null,\n\n        /**\n         * @protected\n         * @type {string}\n         */\n        axisPointerClass: null,\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n            // FIXME\n            // This process should proformed after coordinate systems updated\n            // (axis scale updated), and should be performed each time update.\n            // So put it here temporarily, although it is not appropriate to\n            // put a model-writing procedure in `view`.\n            this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n\n            AxisView.superApply(this, 'render', arguments);\n\n            updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n        },\n\n        /**\n         * Action handler.\n         * @public\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/model/Global} ecModel\n         * @param {module:echarts/ExtensionAPI} api\n         * @param {Object} payload\n         */\n        updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n            updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            var axisPointer = this._axisPointer;\n            axisPointer && axisPointer.remove(api);\n            AxisView.superApply(this, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            disposeAxisPointer(this, api);\n            AxisView.superApply(this, 'dispose', arguments);\n        }\n\n    });\n\n    function updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n        var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n        if (!Clazz) {\n            return;\n        }\n        var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n        axisPointerModel\n            ? (axisView._axisPointer || (axisView._axisPointer = new Clazz()))\n                .render(axisModel, axisPointerModel, api, forceRender)\n            : disposeAxisPointer(axisView, api);\n    }\n\n    function disposeAxisPointer(axisView, ecModel, api) {\n        var axisPointer = axisView._axisPointer;\n        axisPointer && axisPointer.dispose(ecModel, api);\n        axisView._axisPointer = null;\n    }\n\n    var axisPointerClazz = [];\n\n    AxisView.registerAxisPointerClass = function (type, clazz) {\n        if (__DEV__) {\n            if (axisPointerClazz[type]) {\n                throw new Error('axisPointer ' + type + ' exists');\n            }\n        }\n        axisPointerClazz[type] = clazz;\n    };\n\n    AxisView.getAxisPointerClass = function (type) {\n        return type && axisPointerClazz[type];\n    };\n\n    module.exports = AxisView;\n\n\n/***/ }),\n/* 659 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(606);\n\n    var helper = {};\n\n    /**\n     * @param {Object} opt {labelInside}\n     * @return {Object} {\n     *  position, rotation, labelDirection, labelOffset,\n     *  tickDirection, labelRotate, labelInterval, z2\n     * }\n     */\n    helper.layout = function (gridModel, axisModel, opt) {\n        opt = opt || {};\n        var grid = gridModel.coordinateSystem;\n        var axis = axisModel.axis;\n        var layout = {};\n\n        var rawAxisPosition = axis.position;\n        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n        var axisDim = axis.dim;\n\n        var rect = grid.getRect();\n        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n        var idx = {left: 0, right: 1, top: 0, bottom: 1, onZero: 2};\n        var axisOffset = axisModel.get('offset') || 0;\n\n        var posBound = axisDim === 'x'\n            ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset]\n            : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n        if (axis.onZero) {\n            var otherAxis = grid.getAxis(axisDim === 'x' ? 'y' : 'x', axis.onZeroAxisIndex);\n            var onZeroCoord = otherAxis.toGlobalCoord(otherAxis.dataToCoord(0));\n            posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n        }\n\n        // Axis position\n        layout.position = [\n            axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0],\n            axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]\n        ];\n\n        // Axis rotation\n        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\n\n        // Tick and label direction, x y is axisDim\n        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\n\n        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n        layout.labelOffset = axis.onZero ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n        if (axisModel.get('axisTick.inside')) {\n            layout.tickDirection = -layout.tickDirection;\n        }\n        if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n            layout.labelDirection = -layout.labelDirection;\n        }\n\n        // Special label rotation\n        var labelRotate = axisModel.get('axisLabel.rotate');\n        layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate;\n\n        // label interval when auto mode.\n        layout.labelInterval = axis.getLabelInterval();\n\n        // Over splitLine and splitArea\n        layout.z2 = 1;\n\n        return layout;\n    };\n\n    module.exports = helper;\n\n\n\n/***/ }),\n/* 660 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var modelUtil = __webpack_require__(609);\n\n    /**\n     * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n     * @param {module:echarts/model/Global} ecModel\n     * @return {Object} {point: [x, y], el: ...} point Will not be null.\n     */\n    module.exports = function (finder, ecModel) {\n        var point = [];\n        var seriesIndex = finder.seriesIndex;\n        var seriesModel;\n        if (seriesIndex == null || !(\n            seriesModel = ecModel.getSeriesByIndex(seriesIndex)\n        )) {\n            return {point: []};\n        }\n\n        var data = seriesModel.getData();\n        var dataIndex = modelUtil.queryDataIndex(data, finder);\n        if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n            return {point: []};\n        }\n\n        var el = data.getItemGraphicEl(dataIndex);\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (seriesModel.getTooltipPosition) {\n            point = seriesModel.getTooltipPosition(dataIndex) || [];\n        }\n        else if (coordSys && coordSys.dataToPoint) {\n            point = coordSys.dataToPoint(\n                data.getValues(\n                    zrUtil.map(coordSys.dimensions, function (dim) {\n                        return seriesModel.coordDimToDataDim(dim)[0];\n                    }), dataIndex, true\n                )\n            ) || [];\n        }\n        else if (el) {\n            // Use graphic bounding rect\n            var rect = el.getBoundingRect().clone();\n            rect.applyTransform(el.transform);\n            point = [\n                rect.x + rect.width / 2,\n                rect.y + rect.height / 2\n            ];\n        }\n\n        return {point: point, el: el};\n    };\n\n\n\n\n/***/ }),\n/* 661 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var env = __webpack_require__(615);\n    var zrUtil = __webpack_require__(606);\n    var get = __webpack_require__(609).makeGetter();\n\n    var each = zrUtil.each;\n\n    var globalListener = {};\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Function} handler\n     *      param: {string} currTrigger\n     *      param: {Array.<number>} point\n     */\n    globalListener.register = function (key, api, handler) {\n        if (env.node) {\n            return;\n        }\n\n        var zr = api.getZr();\n        get(zr).records || (get(zr).records = {});\n\n        initGlobalListeners(zr, api);\n\n        var record = get(zr).records[key] || (get(zr).records[key] = {});\n        record.handler = handler;\n    };\n\n    function initGlobalListeners(zr, api) {\n        if (get(zr).initialized) {\n            return;\n        }\n\n        get(zr).initialized = true;\n\n        useHandler('click', zrUtil.curry(doEnter, 'click'));\n        useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove'));\n        // useHandler('mouseout', onLeave);\n        useHandler('globalout', onLeave);\n\n        function useHandler(eventType, cb) {\n            zr.on(eventType, function (e) {\n                var dis = makeDispatchAction(api);\n\n                each(get(zr).records, function (record) {\n                    record && cb(record, e, dis.dispatchAction);\n                });\n\n                dispatchTooltipFinally(dis.pendings, api);\n            });\n        }\n    }\n\n    function dispatchTooltipFinally(pendings, api) {\n        var showLen = pendings.showTip.length;\n        var hideLen = pendings.hideTip.length;\n\n        var actuallyPayload;\n        if (showLen) {\n            actuallyPayload = pendings.showTip[showLen - 1];\n        }\n        else if (hideLen) {\n            actuallyPayload = pendings.hideTip[hideLen - 1];\n        }\n        if (actuallyPayload) {\n            actuallyPayload.dispatchAction = null;\n            api.dispatchAction(actuallyPayload);\n        }\n    }\n\n    function onLeave(record, e, dispatchAction) {\n        record.handler('leave', null, dispatchAction);\n    }\n\n    function doEnter(currTrigger, record, e, dispatchAction) {\n        record.handler(currTrigger, e, dispatchAction);\n    }\n\n    function makeDispatchAction(api) {\n        var pendings = {\n            showTip: [],\n            hideTip: []\n        };\n        // FIXME\n        // better approach?\n        // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n        // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n        // So we have to add \"final stage\" to merge those dispatched actions.\n        var dispatchAction = function (payload) {\n            var pendingList = pendings[payload.type];\n            if (pendingList) {\n                pendingList.push(payload);\n            }\n            else {\n                payload.dispatchAction = dispatchAction;\n                api.dispatchAction(payload);\n            }\n        };\n\n        return {\n            dispatchAction: dispatchAction,\n            pendings: pendings\n        };\n    }\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    globalListener.unregister = function (key, api) {\n        if (env.node) {\n            return;\n        }\n        var zr = api.getZr();\n        var record = (get(zr).records || {})[key];\n        if (record) {\n            get(zr).records[key] = null;\n        }\n    };\n\n    module.exports = globalListener;\n\n\n/***/ }),\n/* 662 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var graphic = __webpack_require__(608);\n    var textContain = __webpack_require__(621);\n    var formatUtil = __webpack_require__(613);\n    var matrix = __webpack_require__(623);\n    var axisHelper = __webpack_require__(620);\n    var AxisBuilder = __webpack_require__(649);\n\n    var helper = {};\n\n    /**\n     * @param {module:echarts/model/Model} axisPointerModel\n     */\n    helper.buildElStyle = function (axisPointerModel) {\n        var axisPointerType = axisPointerModel.get('type');\n        var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n        var style;\n        if (axisPointerType === 'line') {\n            style = styleModel.getLineStyle();\n            style.fill = null;\n        }\n        else if (axisPointerType === 'shadow') {\n            style = styleModel.getAreaStyle();\n            style.stroke = null;\n        }\n        return style;\n    };\n\n    /**\n     * @param {Function} labelPos {align, verticalAlign, position}\n     */\n    helper.buildLabelElOption = function (\n        elOption, axisModel, axisPointerModel, api, labelPos\n    ) {\n        var value = axisPointerModel.get('value');\n        var text = helper.getValueLabel(\n            value, axisModel.axis, axisModel.ecModel,\n            axisPointerModel.get('seriesDataIndices'),\n            {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            }\n        );\n        var labelModel = axisPointerModel.getModel('label');\n        var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n\n        var font = labelModel.getFont();\n        var textRect = textContain.getBoundingRect(text, font);\n\n        var position = labelPos.position;\n        var width = textRect.width + paddings[1] + paddings[3];\n        var height = textRect.height + paddings[0] + paddings[2];\n\n        // Adjust by align.\n        var align = labelPos.align;\n        align === 'right' && (position[0] -= width);\n        align === 'center' && (position[0] -= width / 2);\n        var verticalAlign = labelPos.verticalAlign;\n        verticalAlign === 'bottom' && (position[1] -= height);\n        verticalAlign === 'middle' && (position[1] -= height / 2);\n\n        // Not overflow ec container\n        confineInContainer(position, width, height, api);\n\n        var bgColor = labelModel.get('backgroundColor');\n        if (!bgColor || bgColor === 'auto') {\n            bgColor = axisModel.get('axisLine.lineStyle.color');\n        }\n\n        elOption.label = {\n            shape: {x: 0, y: 0, width: width, height: height, r: labelModel.get('borderRadius')},\n            position: position.slice(),\n            // TODO: rich\n            style: {\n                text: text,\n                textFont: font,\n                textFill: labelModel.getTextColor(),\n                textPosition: 'inside',\n                fill: bgColor,\n                stroke: labelModel.get('borderColor') || 'transparent',\n                lineWidth: labelModel.get('borderWidth') || 0,\n                shadowBlur: labelModel.get('shadowBlur'),\n                shadowColor: labelModel.get('shadowColor'),\n                shadowOffsetX: labelModel.get('shadowOffsetX'),\n                shadowOffsetY: labelModel.get('shadowOffsetY')\n            },\n            // Lable should be over axisPointer.\n            z2: 10\n        };\n    };\n\n    // Do not overflow ec container\n    function confineInContainer(position, width, height, api) {\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n        position[0] = Math.min(position[0] + width, viewWidth) - width;\n        position[1] = Math.min(position[1] + height, viewHeight) - height;\n        position[0] = Math.max(position[0], 0);\n        position[1] = Math.max(position[1], 0);\n    }\n\n    /**\n     * @param {number} value\n     * @param {module:echarts/coord/Axis} axis\n     * @param {module:echarts/model/Global} ecModel\n     * @param {Object} opt\n     * @param {Array.<Object>} seriesDataIndices\n     * @param {number|string} opt.precision 'auto' or a number\n     * @param {string|Function} opt.formatter label formatter\n     */\n    helper.getValueLabel = function (value, axis, ecModel, seriesDataIndices, opt) {\n        var text = axis.scale.getLabel(\n            // If `precision` is set, width can be fixed (like '12.00500'), which\n            // helps to debounce when when moving label.\n            value, {precision: opt.precision}\n        );\n        var formatter = opt.formatter;\n\n        if (formatter) {\n            var params = {\n                value: axisHelper.getAxisRawValue(axis, value),\n                seriesData: []\n            };\n            zrUtil.each(seriesDataIndices, function (idxItem) {\n                var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                var dataIndex = idxItem.dataIndexInside;\n                var dataParams = series && series.getDataParams(dataIndex);\n                dataParams && params.seriesData.push(dataParams);\n            });\n\n            if (zrUtil.isString(formatter)) {\n                text = formatter.replace('{value}', text);\n            }\n            else if (zrUtil.isFunction(formatter)) {\n                text = formatter(params);\n            }\n        }\n\n        return text;\n    };\n\n    /**\n     * @param {module:echarts/coord/Axis} axis\n     * @param {number} value\n     * @param {Object} layoutInfo {\n     *  rotation, position, labelOffset, labelDirection, labelMargin\n     * }\n     */\n    helper.getTransformedPosition = function (axis, value, layoutInfo) {\n        var transform = matrix.create();\n        matrix.rotate(transform, transform, layoutInfo.rotation);\n        matrix.translate(transform, transform, layoutInfo.position);\n\n        return graphic.applyTransform([\n            axis.dataToCoord(value),\n            (layoutInfo.labelOffset || 0)\n                + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)\n        ], transform);\n    };\n\n    helper.buildCartesianSingleLabelElOption = function (\n        value, elOption, layoutInfo, axisModel, axisPointerModel, api\n    ) {\n        var textLayout = AxisBuilder.innerTextLayout(\n            layoutInfo.rotation, 0, layoutInfo.labelDirection\n        );\n        layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n        helper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n            position: helper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n            align: textLayout.textAlign,\n            verticalAlign: textLayout.textVerticalAlign\n        });\n    };\n\n    /**\n     * @param {Array.<number>} p1\n     * @param {Array.<number>} p2\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeLineShape = function (p1, p2, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x1: p1[xDimIndex],\n            y1: p1[1 - xDimIndex],\n            x2: p2[xDimIndex],\n            y2: p2[1 - xDimIndex]\n        };\n    };\n\n    /**\n     * @param {Array.<number>} xy\n     * @param {Array.<number>} wh\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeRectShape = function (xy, wh, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x: xy[xDimIndex],\n            y: xy[1 - xDimIndex],\n            width: wh[xDimIndex],\n            height: wh[1 - xDimIndex]\n        };\n    };\n\n    helper.makeSectorShape = function (cx, cy, r0, r, startAngle, endAngle) {\n        return {\n            cx: cx,\n            cy: cy,\n            r0: r0,\n            r: r,\n            startAngle: startAngle,\n            endAngle: endAngle,\n            clockwise: true\n        };\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n/* 663 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var ComponentModel = __webpack_require__(618);\n    var zrUtil = __webpack_require__(606);\n    var axisModelCreator = __webpack_require__(734);\n\n    var AxisModel = ComponentModel.extend({\n\n        type: 'cartesian2dAxis',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Axis2D}\n         */\n        axis: null,\n\n        /**\n         * @override\n         */\n        init: function () {\n            AxisModel.superApply(this, 'init', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function () {\n            AxisModel.superApply(this, 'mergeOption', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        restoreData: function () {\n            AxisModel.superApply(this, 'restoreData', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         * @return {module:echarts/model/Component}\n         */\n        getCoordSysModel: function () {\n            return this.ecModel.queryComponents({\n                mainType: 'grid',\n                index: this.option.gridIndex,\n                id: this.option.gridId\n            })[0];\n        }\n\n    });\n\n    function getAxisType(axisDim, option) {\n        // Default axis with data is category axis\n        return option.type || (option.data ? 'category' : 'value');\n    }\n\n    zrUtil.merge(AxisModel.prototype, __webpack_require__(651));\n\n    var extraOption = {\n        // gridIndex: 0,\n        // gridId: '',\n\n        // Offset is for multiple axis on the same position\n        offset: 0\n    };\n\n    axisModelCreator('x', AxisModel, getAxisType, extraOption);\n    axisModelCreator('y', AxisModel, getAxisType, extraOption);\n\n    module.exports = AxisModel;\n\n\n/***/ }),\n/* 664 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var classUtil = __webpack_require__(616);\n    var set = classUtil.set;\n    var get = classUtil.get;\n\n    module.exports = {\n        clearColorPalette: function () {\n            set(this, 'colorIdx', 0);\n            set(this, 'colorNameMap', {});\n        },\n\n        getColorFromPalette: function (name, scope) {\n            scope = scope || this;\n            var colorIdx = get(scope, 'colorIdx') || 0;\n            var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {});\n            // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n            if (colorNameMap.hasOwnProperty(name)) {\n                return colorNameMap[name];\n            }\n            var colorPalette = this.get('color', true) || [];\n            if (!colorPalette.length) {\n                return;\n            }\n\n            var color = colorPalette[colorIdx];\n            if (name) {\n                colorNameMap[name] = color;\n            }\n            set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n\n            return color;\n        }\n    };\n\n\n/***/ }),\n/* 665 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * For testable.\n */\n\n\n    var numberUtil = __webpack_require__(610);\n\n    var roundNumber = numberUtil.round;\n\n    var helper = {};\n\n    /**\n     * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n     *                                Should be extent[0] < extent[1].\n     * @param {number} splitNumber splitNumber should be >= 1.\n     * @param {number} [minInterval]\n     * @param {number} [maxInterval]\n     * @return {Object} {interval, intervalPrecision, niceTickExtent}\n     */\n    helper.intervalScaleNiceTicks = function (extent, splitNumber, minInterval, maxInterval) {\n        var result = {};\n        var span = extent[1] - extent[0];\n\n        var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n        if (minInterval != null && interval < minInterval) {\n            interval = result.interval = minInterval;\n        }\n        if (maxInterval != null && interval > maxInterval) {\n            interval = result.interval = maxInterval;\n        }\n        // Tow more digital for tick.\n        var precision = result.intervalPrecision = helper.getIntervalPrecision(interval);\n        // Niced extent inside original extent\n        var niceTickExtent = result.niceTickExtent = [\n            roundNumber(Math.ceil(extent[0] / interval) * interval, precision),\n            roundNumber(Math.floor(extent[1] / interval) * interval, precision)\n        ];\n\n        helper.fixExtent(niceTickExtent, extent);\n\n        return result;\n    };\n\n    /**\n     * @param {number} interval\n     * @return {number} interval precision\n     */\n    helper.getIntervalPrecision = function (interval) {\n        // Tow more digital for tick.\n        return numberUtil.getPrecisionSafe(interval) + 2;\n    };\n\n    function clamp(niceTickExtent, idx, extent) {\n        niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n    }\n\n    // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n    helper.fixExtent = function (niceTickExtent, extent) {\n        !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n        !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n        clamp(niceTickExtent, 0, extent);\n        clamp(niceTickExtent, 1, extent);\n        if (niceTickExtent[0] > niceTickExtent[1]) {\n            niceTickExtent[0] = niceTickExtent[1];\n        }\n    };\n\n    helper.intervalScaleGetTicks = function (interval, extent, niceTickExtent, intervalPrecision) {\n        var ticks = [];\n\n        // If interval is 0, return [];\n        if (!interval) {\n            return ticks;\n        }\n\n        // Consider this case: using dataZoom toolbox, zoom and zoom.\n        var safeLimit = 10000;\n\n        if (extent[0] < niceTickExtent[0]) {\n            ticks.push(extent[0]);\n        }\n        var tick = niceTickExtent[0];\n\n        while (tick <= niceTickExtent[1]) {\n            ticks.push(tick);\n            // Avoid rounding error\n            tick = roundNumber(tick + interval, intervalPrecision);\n            if (tick === ticks[ticks.length - 1]) {\n                // Consider out of safe float point, e.g.,\n                // -3711126.9907707 + 2e-10 === -3711126.9907707\n                break;\n            }\n            if (ticks.length > safeLimit) {\n                return [];\n            }\n        }\n        // Consider this case: the last item of ticks is smaller\n        // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n        if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n            ticks.push(extent[1]);\n        }\n\n        return ticks;\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n/* 666 */\n/***/ (function(module, exports) {\n\n\n\n    var lib = {};\n\n    var ORIGIN_METHOD = '\\0__throttleOriginMethod';\n    var RATE = '\\0__throttleRate';\n    var THROTTLE_TYPE = '\\0__throttleType';\n\n    /**\n     * @public\n     * @param {(Function)} fn\n     * @param {number} [delay=0] Unit: ms.\n     * @param {boolean} [debounce=false]\n     *        true: If call interval less than `delay`, only the last call works.\n     *        false: If call interval less than `delay, call works on fixed rate.\n     * @return {(Function)} throttled fn.\n     */\n    lib.throttle = function (fn, delay, debounce) {\n\n        var currCall;\n        var lastCall = 0;\n        var lastExec = 0;\n        var timer = null;\n        var diff;\n        var scope;\n        var args;\n        var debounceNextCall;\n\n        delay = delay || 0;\n\n        function exec() {\n            lastExec = (new Date()).getTime();\n            timer = null;\n            fn.apply(scope, args || []);\n        }\n\n        var cb = function () {\n            currCall = (new Date()).getTime();\n            scope = this;\n            args = arguments;\n            var thisDelay = debounceNextCall || delay;\n            var thisDebounce = debounceNextCall || debounce;\n            debounceNextCall = null;\n            diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n\n            clearTimeout(timer);\n\n            if (thisDebounce) {\n                timer = setTimeout(exec, thisDelay);\n            }\n            else {\n                if (diff >= 0) {\n                    exec();\n                }\n                else {\n                    timer = setTimeout(exec, -diff);\n                }\n            }\n\n            lastCall = currCall;\n        };\n\n        /**\n         * Clear throttle.\n         * @public\n         */\n        cb.clear = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n\n        /**\n         * Enable debounce once.\n         */\n        cb.debounceNextCall = function (debounceDelay) {\n            debounceNextCall = debounceDelay;\n        };\n\n        return cb;\n    };\n\n    /**\n     * Create throttle method or update throttle rate.\n     *\n     * @example\n     * ComponentView.prototype.render = function () {\n     *     ...\n     *     throttle.createOrUpdate(\n     *         this,\n     *         '_dispatchAction',\n     *         this.model.get('throttle'),\n     *         'fixRate'\n     *     );\n     * };\n     * ComponentView.prototype.remove = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     * ComponentView.prototype.dispose = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     * @param {number} [rate]\n     * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n     * @return {Function} throttled function.\n     */\n    lib.createOrUpdate = function (obj, fnAttr, rate, throttleType) {\n        var fn = obj[fnAttr];\n\n        if (!fn) {\n            return;\n        }\n\n        var originFn = fn[ORIGIN_METHOD] || fn;\n        var lastThrottleType = fn[THROTTLE_TYPE];\n        var lastRate = fn[RATE];\n\n        if (lastRate !== rate || lastThrottleType !== throttleType) {\n            if (rate == null || !throttleType) {\n                return (obj[fnAttr] = originFn);\n            }\n\n            fn = obj[fnAttr] = lib.throttle(\n                originFn, rate, throttleType === 'debounce'\n            );\n            fn[ORIGIN_METHOD] = originFn;\n            fn[THROTTLE_TYPE] = throttleType;\n            fn[RATE] = rate;\n        }\n\n        return fn;\n    };\n\n    /**\n     * Clear throttle. Example see throttle.createOrUpdate.\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     */\n    lib.clear = function (obj, fnAttr) {\n        var fn = obj[fnAttr];\n        if (fn && fn[ORIGIN_METHOD]) {\n            obj[fnAttr] = fn[ORIGIN_METHOD];\n        }\n    };\n\n    module.exports = lib;\n\n\n\n/***/ }),\n/* 667 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module zrender/Element\n */\n\n\n    var guid = __webpack_require__(672);\n    var Eventful = __webpack_require__(626);\n    var Transformable = __webpack_require__(680);\n    var Animatable = __webpack_require__(798);\n    var zrUtil = __webpack_require__(606);\n\n    /**\n     * @alias module:zrender/Element\n     * @constructor\n     * @extends {module:zrender/mixin/Animatable}\n     * @extends {module:zrender/mixin/Transformable}\n     * @extends {module:zrender/mixin/Eventful}\n     */\n    var Element = function (opts) {\n\n        Transformable.call(this, opts);\n        Eventful.call(this, opts);\n        Animatable.call(this, opts);\n\n        /**\n         * 画布元素ID\n         * @type {string}\n         */\n        this.id = opts.id || guid();\n    };\n\n    Element.prototype = {\n\n        /**\n         * 元素类型\n         * Element type\n         * @type {string}\n         */\n        type: 'element',\n\n        /**\n         * 元素名字\n         * Element name\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n         * ZRender instance will be assigned when element is associated with zrender\n         * @name module:/zrender/Element#__zr\n         * @type {module:zrender/ZRender}\n         */\n        __zr: null,\n\n        /**\n         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n         * If ignore drawing and events of the element object\n         * @name module:/zrender/Element#ignore\n         * @type {boolean}\n         * @default false\n         */\n        ignore: false,\n\n        /**\n         * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n         * 该路径会继承被裁减对象的变换\n         * @type {module:zrender/graphic/Path}\n         * @see http://www.w3.org/TR/2dcontext/#clipping-region\n         * @readOnly\n         */\n        clipPath: null,\n\n        /**\n         * Drift element\n         * @param  {number} dx dx on the global space\n         * @param  {number} dy dy on the global space\n         */\n        drift: function (dx, dy) {\n            switch (this.draggable) {\n                case 'horizontal':\n                    dy = 0;\n                    break;\n                case 'vertical':\n                    dx = 0;\n                    break;\n            }\n\n            var m = this.transform;\n            if (!m) {\n                m = this.transform = [1, 0, 0, 1, 0, 0];\n            }\n            m[4] += dx;\n            m[5] += dy;\n\n            this.decomposeTransform();\n            this.dirty(false);\n        },\n\n        /**\n         * Hook before update\n         */\n        beforeUpdate: function () {},\n        /**\n         * Hook after update\n         */\n        afterUpdate: function () {},\n        /**\n         * Update each frame\n         */\n        update: function () {\n            this.updateTransform();\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {},\n\n        /**\n         * @protected\n         */\n        attrKV: function (key, value) {\n            if (key === 'position' || key === 'scale' || key === 'origin') {\n                // Copy the array\n                if (value) {\n                    var target = this[key];\n                    if (!target) {\n                        target = this[key] = [];\n                    }\n                    target[0] = value[0];\n                    target[1] = value[1];\n                }\n            }\n            else {\n                this[key] = value;\n            }\n        },\n\n        /**\n         * Hide the element\n         */\n        hide: function () {\n            this.ignore = true;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * Show the element\n         */\n        show: function () {\n            this.ignore = false;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * @param {string|Object} key\n         * @param {*} value\n         */\n        attr: function (key, value) {\n            if (typeof key === 'string') {\n                this.attrKV(key, value);\n            }\n            else if (zrUtil.isObject(key)) {\n                for (var name in key) {\n                    if (key.hasOwnProperty(name)) {\n                        this.attrKV(name, key[name]);\n                    }\n                }\n            }\n\n            this.dirty(false);\n\n            return this;\n        },\n\n        /**\n         * @param {module:zrender/graphic/Path} clipPath\n         */\n        setClipPath: function (clipPath) {\n            var zr = this.__zr;\n            if (zr) {\n                clipPath.addSelfToZr(zr);\n            }\n\n            // Remove previous clip path\n            if (this.clipPath && this.clipPath !== clipPath) {\n                this.removeClipPath();\n            }\n\n            this.clipPath = clipPath;\n            clipPath.__zr = zr;\n            clipPath.__clipTarget = this;\n\n            this.dirty(false);\n        },\n\n        /**\n         */\n        removeClipPath: function () {\n            var clipPath = this.clipPath;\n            if (clipPath) {\n                if (clipPath.__zr) {\n                    clipPath.removeSelfFromZr(clipPath.__zr);\n                }\n\n                clipPath.__zr = null;\n                clipPath.__clipTarget = null;\n                this.clipPath = null;\n\n                this.dirty(false);\n            }\n        },\n\n        /**\n         * Add self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        addSelfToZr: function (zr) {\n            this.__zr = zr;\n            // 添加动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.addAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.addSelfToZr(zr);\n            }\n        },\n\n        /**\n         * Remove self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        removeSelfFromZr: function (zr) {\n            this.__zr = null;\n            // 移除动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.removeAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.removeSelfFromZr(zr);\n            }\n        }\n    };\n\n    zrUtil.mixin(Element, Animatable);\n    zrUtil.mixin(Element, Transformable);\n    zrUtil.mixin(Element, Eventful);\n\n    module.exports = Element;\n\n\n/***/ }),\n/* 668 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/animation/Animator\n */\n\n\n    var Clip = __webpack_require__(771);\n    var color = __webpack_require__(627);\n    var util = __webpack_require__(606);\n    var isArrayLike = util.isArrayLike;\n\n    var arraySlice = Array.prototype.slice;\n\n    function defaultGetter(target, key) {\n        return target[key];\n    }\n\n    function defaultSetter(target, key, value) {\n        target[key] = value;\n    }\n\n    /**\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} percent\n     * @return {number}\n     */\n    function interpolateNumber(p0, p1, percent) {\n        return (p1 - p0) * percent + p0;\n    }\n\n    /**\n     * @param  {string} p0\n     * @param  {string} p1\n     * @param  {number} percent\n     * @return {string}\n     */\n    function interpolateString(p0, p1, percent) {\n        return percent > 0.5 ? p1 : p0;\n    }\n\n    /**\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {number} percent\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function interpolateArray(p0, p1, percent, out, arrDim) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = interpolateNumber(p0[i], p1[i], percent);\n            }\n        }\n        else {\n            var len2 = len && p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = interpolateNumber(\n                        p0[i][j], p1[i][j], percent\n                    );\n                }\n            }\n        }\n    }\n\n    // arr0 is source array, arr1 is target array.\n    // Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n    function fillArr(arr0, arr1, arrDim) {\n        var arr0Len = arr0.length;\n        var arr1Len = arr1.length;\n        if (arr0Len !== arr1Len) {\n            // FIXME Not work for TypedArray\n            var isPreviousLarger = arr0Len > arr1Len;\n            if (isPreviousLarger) {\n                // Cut the previous\n                arr0.length = arr1Len;\n            }\n            else {\n                // Fill the previous\n                for (var i = arr0Len; i < arr1Len; i++) {\n                    arr0.push(\n                        arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i])\n                    );\n                }\n            }\n        }\n        // Handling NaN value\n        var len2 = arr0[0] && arr0[0].length;\n        for (var i = 0; i < arr0.length; i++) {\n            if (arrDim === 1) {\n                if (isNaN(arr0[i])) {\n                    arr0[i] = arr1[i];\n                }\n            }\n            else {\n                for (var j = 0; j < len2; j++) {\n                    if (isNaN(arr0[i][j])) {\n                        arr0[i][j] = arr1[i][j];\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @param  {Array} arr0\n     * @param  {Array} arr1\n     * @param  {number} arrDim\n     * @return {boolean}\n     */\n    function isArraySame(arr0, arr1, arrDim) {\n        if (arr0 === arr1) {\n            return true;\n        }\n        var len = arr0.length;\n        if (len !== arr1.length) {\n            return false;\n        }\n        if (arrDim === 1) {\n            for (var i = 0; i < len; i++) {\n                if (arr0[i] !== arr1[i]) {\n                    return false;\n                }\n            }\n        }\n        else {\n            var len2 = arr0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    if (arr0[i][j] !== arr1[i][j]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Catmull Rom interpolate array\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {Array} p2\n     * @param  {Array} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function catmullRomInterpolateArray(\n        p0, p1, p2, p3, t, t2, t3, out, arrDim\n    ) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = catmullRomInterpolate(\n                    p0[i], p1[i], p2[i], p3[i], t, t2, t3\n                );\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = catmullRomInterpolate(\n                        p0[i][j], p1[i][j], p2[i][j], p3[i][j],\n                        t, t2, t3\n                    );\n                }\n            }\n        }\n    }\n\n    /**\n     * Catmull Rom interpolate number\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @return {number}\n     */\n    function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    function cloneValue(value) {\n        if (isArrayLike(value)) {\n            var len = value.length;\n            if (isArrayLike(value[0])) {\n                var ret = [];\n                for (var i = 0; i < len; i++) {\n                    ret.push(arraySlice.call(value[i]));\n                }\n                return ret;\n            }\n\n            return arraySlice.call(value);\n        }\n\n        return value;\n    }\n\n    function rgba2String(rgba) {\n        rgba[0] = Math.floor(rgba[0]);\n        rgba[1] = Math.floor(rgba[1]);\n        rgba[2] = Math.floor(rgba[2]);\n\n        return 'rgba(' + rgba.join(',') + ')';\n    }\n\n    function getArrayDim(keyframes) {\n        var lastValue = keyframes[keyframes.length - 1].value;\n        return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n    }\n\n    function createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n        var getter = animator._getter;\n        var setter = animator._setter;\n        var useSpline = easing === 'spline';\n\n        var trackLen = keyframes.length;\n        if (!trackLen) {\n            return;\n        }\n        // Guess data type\n        var firstVal = keyframes[0].value;\n        var isValueArray = isArrayLike(firstVal);\n        var isValueColor = false;\n        var isValueString = false;\n\n        // For vertices morphing\n        var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n\n        var trackMaxTime;\n        // Sort keyframe as ascending\n        keyframes.sort(function(a, b) {\n            return a.time - b.time;\n        });\n\n        trackMaxTime = keyframes[trackLen - 1].time;\n        // Percents of each keyframe\n        var kfPercents = [];\n        // Value of each keyframe\n        var kfValues = [];\n        var prevValue = keyframes[0].value;\n        var isAllValueEqual = true;\n        for (var i = 0; i < trackLen; i++) {\n            kfPercents.push(keyframes[i].time / trackMaxTime);\n            // Assume value is a color when it is a string\n            var value = keyframes[i].value;\n\n            // Check if value is equal, deep check if value is array\n            if (!((isValueArray && isArraySame(value, prevValue, arrDim))\n                || (!isValueArray && value === prevValue))) {\n                isAllValueEqual = false;\n            }\n            prevValue = value;\n\n            // Try converting a string to a color array\n            if (typeof value == 'string') {\n                var colorArray = color.parse(value);\n                if (colorArray) {\n                    value = colorArray;\n                    isValueColor = true;\n                }\n                else {\n                    isValueString = true;\n                }\n            }\n            kfValues.push(value);\n        }\n        if (!forceAnimate && isAllValueEqual) {\n            return;\n        }\n\n        var lastValue = kfValues[trackLen - 1];\n        // Polyfill array and NaN value\n        for (var i = 0; i < trackLen - 1; i++) {\n            if (isValueArray) {\n                fillArr(kfValues[i], lastValue, arrDim);\n            }\n            else {\n                if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n                    kfValues[i] = lastValue;\n                }\n            }\n        }\n        isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim);\n\n        // Cache the key of last frame to speed up when\n        // animation playback is sequency\n        var lastFrame = 0;\n        var lastFramePercent = 0;\n        var start;\n        var w;\n        var p0;\n        var p1;\n        var p2;\n        var p3;\n\n        if (isValueColor) {\n            var rgba = [0, 0, 0, 0];\n        }\n\n        var onframe = function (target, percent) {\n            // Find the range keyframes\n            // kf1-----kf2---------current--------kf3\n            // find kf2 and kf3 and do interpolation\n            var frame;\n            // In the easing function like elasticOut, percent may less than 0\n            if (percent < 0) {\n                frame = 0;\n            }\n            else if (percent < lastFramePercent) {\n                // Start from next key\n                // PENDING start from lastFrame ?\n                start = Math.min(lastFrame + 1, trackLen - 1);\n                for (frame = start; frame >= 0; frame--) {\n                    if (kfPercents[frame] <= percent) {\n                        break;\n                    }\n                }\n                // PENDING really need to do this ?\n                frame = Math.min(frame, trackLen - 2);\n            }\n            else {\n                for (frame = lastFrame; frame < trackLen; frame++) {\n                    if (kfPercents[frame] > percent) {\n                        break;\n                    }\n                }\n                frame = Math.min(frame - 1, trackLen - 2);\n            }\n            lastFrame = frame;\n            lastFramePercent = percent;\n\n            var range = (kfPercents[frame + 1] - kfPercents[frame]);\n            if (range === 0) {\n                return;\n            }\n            else {\n                w = (percent - kfPercents[frame]) / range;\n            }\n            if (useSpline) {\n                p1 = kfValues[frame];\n                p0 = kfValues[frame === 0 ? frame : frame - 1];\n                p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n                p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n                if (isValueArray) {\n                    catmullRomInterpolateArray(\n                        p0, p1, p2, p3, w, w * w, w * w * w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        value = catmullRomInterpolateArray(\n                            p0, p1, p2, p3, w, w * w, w * w * w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(p1, p2, w);\n                    }\n                    else {\n                        value = catmullRomInterpolate(\n                            p0, p1, p2, p3, w, w * w, w * w * w\n                        );\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n            else {\n                if (isValueArray) {\n                    interpolateArray(\n                        kfValues[frame], kfValues[frame + 1], w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        interpolateArray(\n                            kfValues[frame], kfValues[frame + 1], w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    else {\n                        value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n        };\n\n        var clip = new Clip({\n            target: animator._target,\n            life: trackMaxTime,\n            loop: animator._loop,\n            delay: animator._delay,\n            onframe: onframe,\n            ondestroy: oneTrackDone\n        });\n\n        if (easing && easing !== 'spline') {\n            clip.easing = easing;\n        }\n\n        return clip;\n    }\n\n    /**\n     * @alias module:zrender/animation/Animator\n     * @constructor\n     * @param {Object} target\n     * @param {boolean} loop\n     * @param {Function} getter\n     * @param {Function} setter\n     */\n    var Animator = function(target, loop, getter, setter) {\n        this._tracks = {};\n        this._target = target;\n\n        this._loop = loop || false;\n\n        this._getter = getter || defaultGetter;\n        this._setter = setter || defaultSetter;\n\n        this._clipCount = 0;\n\n        this._delay = 0;\n\n        this._doneList = [];\n\n        this._onframeList = [];\n\n        this._clipList = [];\n    };\n\n    Animator.prototype = {\n        /**\n         * 设置动画关键帧\n         * @param  {number} time 关键帧时间，单位是ms\n         * @param  {Object} props 关键帧的属性值，key-value表示\n         * @return {module:zrender/animation/Animator}\n         */\n        when: function(time /* ms */, props) {\n            var tracks = this._tracks;\n            for (var propName in props) {\n                if (!props.hasOwnProperty(propName)) {\n                    continue;\n                }\n\n                if (!tracks[propName]) {\n                    tracks[propName] = [];\n                    // Invalid value\n                    var value = this._getter(this._target, propName);\n                    if (value == null) {\n                        // zrLog('Invalid property ' + propName);\n                        continue;\n                    }\n                    // If time is 0\n                    //  Then props is given initialize value\n                    // Else\n                    //  Initialize value from current prop value\n                    if (time !== 0) {\n                        tracks[propName].push({\n                            time: 0,\n                            value: cloneValue(value)\n                        });\n                    }\n                }\n                tracks[propName].push({\n                    time: time,\n                    value: props[propName]\n                });\n            }\n            return this;\n        },\n        /**\n         * 添加动画每一帧的回调函数\n         * @param  {Function} callback\n         * @return {module:zrender/animation/Animator}\n         */\n        during: function (callback) {\n            this._onframeList.push(callback);\n            return this;\n        },\n\n        pause: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].pause();\n            }\n            this._paused = true;\n        },\n\n        resume: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].resume();\n            }\n            this._paused = false;\n        },\n\n        isPaused: function () {\n            return !!this._paused;\n        },\n\n        _doneCallback: function () {\n            // Clear all tracks\n            this._tracks = {};\n            // Clear all clips\n            this._clipList.length = 0;\n\n            var doneList = this._doneList;\n            var len = doneList.length;\n            for (var i = 0; i < len; i++) {\n                doneList[i].call(this);\n            }\n        },\n        /**\n         * 开始执行动画\n         * @param  {string|Function} [easing]\n         *         动画缓动函数，详见{@link module:zrender/animation/easing}\n         * @param  {boolean} forceAnimate\n         * @return {module:zrender/animation/Animator}\n         */\n        start: function (easing, forceAnimate) {\n\n            var self = this;\n            var clipCount = 0;\n\n            var oneTrackDone = function() {\n                clipCount--;\n                if (!clipCount) {\n                    self._doneCallback();\n                }\n            };\n\n            var lastClip;\n            for (var propName in this._tracks) {\n                if (!this._tracks.hasOwnProperty(propName)) {\n                    continue;\n                }\n                var clip = createTrackClip(\n                    this, easing, oneTrackDone,\n                    this._tracks[propName], propName, forceAnimate\n                );\n                if (clip) {\n                    this._clipList.push(clip);\n                    clipCount++;\n\n                    // If start after added to animation\n                    if (this.animation) {\n                        this.animation.addClip(clip);\n                    }\n\n                    lastClip = clip;\n                }\n            }\n\n            // Add during callback on the last clip\n            if (lastClip) {\n                var oldOnFrame = lastClip.onframe;\n                lastClip.onframe = function (target, percent) {\n                    oldOnFrame(target, percent);\n\n                    for (var i = 0; i < self._onframeList.length; i++) {\n                        self._onframeList[i](target, percent);\n                    }\n                };\n            }\n\n            // This optimization will help the case that in the upper application\n            // the view may be refreshed frequently, where animation will be\n            // called repeatly but nothing changed.\n            if (!clipCount) {\n                this._doneCallback();\n            }\n            return this;\n        },\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stop: function (forwardToLast) {\n            var clipList = this._clipList;\n            var animation = this.animation;\n            for (var i = 0; i < clipList.length; i++) {\n                var clip = clipList[i];\n                if (forwardToLast) {\n                    // Move to last frame before stop\n                    clip.onframe(this._target, 1);\n                }\n                animation && animation.removeClip(clip);\n            }\n            clipList.length = 0;\n        },\n        /**\n         * 设置动画延迟开始的时间\n         * @param  {number} time 单位ms\n         * @return {module:zrender/animation/Animator}\n         */\n        delay: function (time) {\n            this._delay = time;\n            return this;\n        },\n        /**\n         * 添加动画结束的回调\n         * @param  {Function} cb\n         * @return {module:zrender/animation/Animator}\n         */\n        done: function(cb) {\n            if (cb) {\n                this._doneList.push(cb);\n            }\n            return this;\n        },\n\n        /**\n         * @return {Array.<module:zrender/animation/Clip>}\n         */\n        getClips: function () {\n            return this._clipList;\n        }\n    };\n\n    module.exports = Animator;\n\n\n/***/ }),\n/* 669 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = (typeof window !== 'undefined' &&\n                ((window.requestAnimationFrame && window.requestAnimationFrame.bind(window))\n                // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\n                || (window.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window))\n                || window.mozRequestAnimationFrame\n                || window.webkitRequestAnimationFrame)\n            )\n            || function (func) {\n                setTimeout(func, 16);\n            };\n\n\n\n/***/ }),\n/* 670 */\n/***/ (function(module, exports) {\n\n\n\n    var PI2 = Math.PI * 2;\n    module.exports = {\n        normalizeRadian: function(angle) {\n            angle %= PI2;\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return angle;\n        }\n    };\n\n\n/***/ }),\n/* 671 */\n/***/ (function(module, exports) {\n\n// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n\n    /**\n     * Simple double linked list. Compared with array, it has O(1) remove operation.\n     * @constructor\n     */\n    var LinkedList = function () {\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.head = null;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.tail = null;\n\n        this._len = 0;\n    };\n\n    var linkedListProto = LinkedList.prototype;\n    /**\n     * Insert a new value at the tail\n     * @param  {} val\n     * @return {module:zrender/core/LRU~Entry}\n     */\n    linkedListProto.insert = function (val) {\n        var entry = new Entry(val);\n        this.insertEntry(entry);\n        return entry;\n    };\n\n    /**\n     * Insert an entry at the tail\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.insertEntry = function (entry) {\n        if (!this.head) {\n            this.head = this.tail = entry;\n        }\n        else {\n            this.tail.next = entry;\n            entry.prev = this.tail;\n            entry.next = null;\n            this.tail = entry;\n        }\n        this._len++;\n    };\n\n    /**\n     * Remove entry.\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.remove = function (entry) {\n        var prev = entry.prev;\n        var next = entry.next;\n        if (prev) {\n            prev.next = next;\n        }\n        else {\n            // Is head\n            this.head = next;\n        }\n        if (next) {\n            next.prev = prev;\n        }\n        else {\n            // Is tail\n            this.tail = prev;\n        }\n        entry.next = entry.prev = null;\n        this._len--;\n    };\n\n    /**\n     * @return {number}\n     */\n    linkedListProto.len = function () {\n        return this._len;\n    };\n\n    /**\n     * Clear list\n     */\n    linkedListProto.clear = function () {\n        this.head = this.tail = null;\n        this._len = 0;\n    };\n\n    /**\n     * @constructor\n     * @param {} val\n     */\n    var Entry = function (val) {\n        /**\n         * @type {}\n         */\n        this.value = val;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.next;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.prev;\n    };\n\n    /**\n     * LRU Cache\n     * @constructor\n     * @alias module:zrender/core/LRU\n     */\n    var LRU = function (maxSize) {\n\n        this._list = new LinkedList();\n\n        this._map = {};\n\n        this._maxSize = maxSize || 10;\n\n        this._lastRemovedEntry = null;\n    };\n\n    var LRUProto = LRU.prototype;\n\n    /**\n     * @param  {string} key\n     * @param  {} value\n     * @return {} Removed value\n     */\n    LRUProto.put = function (key, value) {\n        var list = this._list;\n        var map = this._map;\n        var removed = null;\n        if (map[key] == null) {\n            var len = list.len();\n            // Reuse last removed entry\n            var entry = this._lastRemovedEntry;\n\n            if (len >= this._maxSize && len > 0) {\n                // Remove the least recently used\n                var leastUsedEntry = list.head;\n                list.remove(leastUsedEntry);\n                delete map[leastUsedEntry.key];\n\n                removed = leastUsedEntry.value;\n                this._lastRemovedEntry = leastUsedEntry;\n            }\n\n            if (entry) {\n                entry.value = value;\n            }\n            else {\n                entry = new Entry(value);\n            }\n            entry.key = key;\n            list.insertEntry(entry);\n            map[key] = entry;\n        }\n\n        return removed;\n    };\n\n    /**\n     * @param  {string} key\n     * @return {}\n     */\n    LRUProto.get = function (key) {\n        var entry = this._map[key];\n        var list = this._list;\n        if (entry != null) {\n            // Put the latest used entry in the tail\n            if (entry !== list.tail) {\n                list.remove(entry);\n                list.insertEntry(entry);\n            }\n\n            return entry.value;\n        }\n    };\n\n    /**\n     * Clear the cache\n     */\n    LRUProto.clear = function () {\n        this._list.clear();\n        this._map = {};\n    };\n\n    module.exports = LRU;\n\n\n/***/ }),\n/* 672 */\n/***/ (function(module, exports) {\n\n/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\n\n\n    var idStart = 0x0907;\n\n    module.exports = function () {\n        return idStart++;\n    };\n\n\n\n/***/ }),\n/* 673 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n        var config = __webpack_require__(633);\n\n        /**\n         * @exports zrender/tool/log\n         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n         */\n        module.exports = function() {\n            if (config.debugMode === 0) {\n                return;\n            }\n            else if (config.debugMode == 1) {\n                for (var k in arguments) {\n                    throw new Error(arguments[k]);\n                }\n            }\n            else if (config.debugMode > 1) {\n                for (var k in arguments) {\n                    console.log(arguments[k]);\n                }\n            }\n        };\n\n        /* for debug\n        return function(mes) {\n            document.getElementById('wrong-message').innerHTML =\n                mes + ' ' + (new Date() - 0)\n                + '<br/>'\n                + document.getElementById('wrong-message').innerHTML;\n        };\n        */\n    \n\n\n/***/ }),\n/* 674 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Image element\n * @module zrender/graphic/Image\n */\n\n\n\n    var Displayable = __webpack_require__(644);\n    var BoundingRect = __webpack_require__(617);\n    var zrUtil = __webpack_require__(606);\n    var imageHelper = __webpack_require__(646);\n\n    /**\n     * @alias zrender/graphic/Image\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function ZImage(opts) {\n        Displayable.call(this, opts);\n    }\n\n    ZImage.prototype = {\n\n        constructor: ZImage,\n\n        type: 'image',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var src = style.image;\n\n            // Must bind each time\n            style.bind(ctx, this, prevEl);\n\n            var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this);\n\n            if (!image || !imageHelper.isImageReady(image)) {\n                return;\n            }\n\n            // 图片已经加载完成\n            // if (image.nodeName.toUpperCase() == 'IMG') {\n            //     if (!image.complete) {\n            //         return;\n            //     }\n            // }\n            // Else is canvas\n\n            var x = style.x || 0;\n            var y = style.y || 0;\n            var width = style.width;\n            var height = style.height;\n            var aspect = image.width / image.height;\n            if (width == null && height != null) {\n                // Keep image/height ratio\n                width = height * aspect;\n            }\n            else if (height == null && width != null) {\n                height = width / aspect;\n            }\n            else if (width == null && height == null) {\n                width = image.width;\n                height = image.height;\n            }\n\n            // 设置transform\n            this.setTransform(ctx);\n\n            if (style.sWidth && style.sHeight) {\n                var sx = style.sx || 0;\n                var sy = style.sy || 0;\n                ctx.drawImage(\n                    image,\n                    sx, sy, style.sWidth, style.sHeight,\n                    x, y, width, height\n                );\n            }\n            else if (style.sx && style.sy) {\n                var sx = style.sx;\n                var sy = style.sy;\n                var sWidth = width - sx;\n                var sHeight = height - sy;\n                ctx.drawImage(\n                    image,\n                    sx, sy, sWidth, sHeight,\n                    x, y, width, height\n                );\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (! this._rect) {\n                this._rect = new BoundingRect(\n                    style.x || 0, style.y || 0, style.width || 0, style.height || 0\n                );\n            }\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(ZImage, Displayable);\n\n    module.exports = ZImage;\n\n\n/***/ }),\n/* 675 */\n/***/ (function(module, exports) {\n\n\n\n    var Pattern = function (image, repeat) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {image: ...}`, where this constructor will not be called.\n\n        this.image = image;\n        this.repeat = repeat;\n\n        // Can be cloned\n        this.type = 'pattern';\n    };\n\n    Pattern.prototype.getCanvasPattern = function (ctx) {\n        return ctx.createPattern(this.image, this.repeat || 'repeat');\n    };\n\n    module.exports = Pattern;\n\n\n/***/ }),\n/* 676 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/graphic/Style\n */\n\n\n    var textHelper = __webpack_require__(647);\n\n    var STYLE_COMMON_PROPS = [\n        ['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'],\n        ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]\n    ];\n\n    // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n    // var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\n    var Style = function (opts, host) {\n        this.extendFrom(opts, false);\n        this.host = host;\n    };\n\n    function createLinearGradient(ctx, obj, rect) {\n        var x = obj.x == null ? 0 : obj.x;\n        var x2 = obj.x2 == null ? 1 : obj.x2;\n        var y = obj.y == null ? 0 : obj.y;\n        var y2 = obj.y2 == null ? 0 : obj.y2;\n\n        if (!obj.global) {\n            x = x * rect.width + rect.x;\n            x2 = x2 * rect.width + rect.x;\n            y = y * rect.height + rect.y;\n            y2 = y2 * rect.height + rect.y;\n        }\n\n        var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n\n        return canvasGradient;\n    }\n\n    function createRadialGradient(ctx, obj, rect) {\n        var width = rect.width;\n        var height = rect.height;\n        var min = Math.min(width, height);\n\n        var x = obj.x == null ? 0.5 : obj.x;\n        var y = obj.y == null ? 0.5 : obj.y;\n        var r = obj.r == null ? 0.5 : obj.r;\n        if (!obj.global) {\n            x = x * width + rect.x;\n            y = y * height + rect.y;\n            r = r * min;\n        }\n\n        var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n\n        return canvasGradient;\n    }\n\n\n    Style.prototype = {\n\n        constructor: Style,\n\n        /**\n         * @type {module:zrender/graphic/Displayable}\n         */\n        host: null,\n\n        /**\n         * @type {string}\n         */\n        fill: '#000000',\n\n        /**\n         * @type {string}\n         */\n        stroke: null,\n\n        /**\n         * @type {number}\n         */\n        opacity: 1,\n\n        /**\n         * @type {Array.<number>}\n         */\n        lineDash: null,\n\n        /**\n         * @type {number}\n         */\n        lineDashOffset: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetY: 0,\n\n        /**\n         * @type {number}\n         */\n        lineWidth: 1,\n\n        /**\n         * If stroke ignore scale\n         * @type {Boolean}\n         */\n        strokeNoScale: false,\n\n        // Bounding rect text configuration\n        // Not affected by element transform\n        /**\n         * @type {string}\n         */\n        text: null,\n\n        /**\n         * If `fontSize` or `fontFamily` exists, `font` will be reset by\n         * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n         * So do not visit it directly in upper application (like echarts),\n         * but use `contain/text#makeFont` instead.\n         * @type {string}\n         */\n        font: null,\n\n        /**\n         * The same as font. Use font please.\n         * @deprecated\n         * @type {string}\n         */\n        textFont: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * @type {string}\n         */\n        fontStyle: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * @type {string}\n         */\n        fontWeight: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * Should be 12 but not '12px'.\n         * @type {number}\n         */\n        fontSize: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * @type {string}\n         */\n        fontFamily: null,\n\n        /**\n         * Reserved for special functinality, like 'hr'.\n         * @type {string}\n         */\n        textTag: null,\n\n        /**\n         * @type {string}\n         */\n        textFill: '#000',\n\n        /**\n         * @type {string}\n         */\n        textStroke: null,\n\n        /**\n         * @type {number}\n         */\n        textWidth: null,\n\n        /**\n         * Only for textBackground.\n         * @type {number}\n         */\n        textHeight: null,\n\n        /**\n         * textStroke may be set as some color as a default\n         * value in upper applicaion, where the default value\n         * of textLineWidth should be 0 to make sure that\n         * user can choose to do not use text stroke.\n         * @type {number}\n         */\n        textLineWidth: 0,\n\n        /**\n         * @type {number}\n         */\n        textLineHeight: null,\n\n        /**\n         * 'inside', 'left', 'right', 'top', 'bottom'\n         * [x, y]\n         * Based on x, y of rect.\n         * @type {string|Array.<number>}\n         * @default 'inside'\n         */\n        textPosition: 'inside',\n\n        /**\n         * If not specified, use the boundingRect of a `displayable`.\n         * @type {Object}\n         */\n        textRect: null,\n\n        /**\n         * [x, y]\n         * @type {Array.<number>}\n         */\n        textOffset: null,\n\n        /**\n         * @type {string}\n         */\n        textAlign: null,\n\n        /**\n         * @type {string}\n         */\n        textVerticalAlign: null,\n\n        /**\n         * @type {number}\n         */\n        textDistance: 5,\n\n        /**\n         * @type {string}\n         */\n        textShadowColor: 'transparent',\n\n        /**\n         * @type {number}\n         */\n        textShadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        textShadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        textShadowOffsetY: 0,\n\n        /**\n         * @type {string}\n         */\n        textBoxShadowColor: 'transparent',\n\n        /**\n         * @type {number}\n         */\n        textBoxShadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        textBoxShadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        textBoxShadowOffsetY: 0,\n\n        /**\n         * Whether transform text.\n         * Only useful in Path and Image element\n         * @type {boolean}\n         */\n        transformText: false,\n\n        /**\n         * Text rotate around position of Path or Image\n         * Only useful in Path and Image element and transformText is false.\n         */\n        textRotation: 0,\n\n        /**\n         * Text origin of text rotation, like [10, 40].\n         * Based on x, y of rect.\n         * Useful in label rotation of circular symbol.\n         * By default, this origin is textPosition.\n         * Can be 'center'.\n         * @type {string|Array.<number>}\n         */\n        textOrigin: null,\n\n        /**\n         * @type {string}\n         */\n        textBackgroundColor: null,\n\n        /**\n         * @type {string}\n         */\n        textBorderColor: null,\n\n        /**\n         * @type {number}\n         */\n        textBorderWidth: 0,\n\n        /**\n         * @type {number}\n         */\n        textBorderRadius: 0,\n\n        /**\n         * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n         * @type {number|Array.<number>}\n         */\n        textPadding: null,\n\n        /**\n         * Text styles for rich text.\n         * @type {Object}\n         */\n        rich: null,\n\n        /**\n         * {outerWidth, outerHeight, ellipsis, placeholder}\n         * @type {Object}\n         */\n        truncate: null,\n\n        /**\n         * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n         * @type {string}\n         */\n        blend: null,\n\n        normalize: function () {\n            textHelper.normalizeTextStyle(this);\n        },\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        bind: function (ctx, el, prevEl) {\n            var style = this;\n            var prevStyle = prevEl && prevEl.style;\n            var firstDraw = !prevStyle;\n\n            for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n                var prop = STYLE_COMMON_PROPS[i];\n                var styleName = prop[0];\n\n                if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n                    // FIXME Invalid property value will cause style leak from previous element.\n                    ctx[styleName] = style[styleName] || prop[1];\n                }\n            }\n\n            if ((firstDraw || style.fill !== prevStyle.fill)) {\n                ctx.fillStyle = style.fill;\n            }\n            if ((firstDraw || style.stroke !== prevStyle.stroke)) {\n                ctx.strokeStyle = style.stroke;\n            }\n            if ((firstDraw || style.opacity !== prevStyle.opacity)) {\n                ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n            }\n\n            if ((firstDraw || style.blend !== prevStyle.blend)) {\n                ctx.globalCompositeOperation = style.blend || 'source-over';\n            }\n            if (this.hasStroke()) {\n                var lineWidth = style.lineWidth;\n                ctx.lineWidth = lineWidth / (\n                    (this.strokeNoScale && el && el.getLineScale) ? el.getLineScale() : 1\n                );\n            }\n        },\n\n        hasFill: function () {\n            var fill = this.fill;\n            return fill != null && fill !== 'none';\n        },\n\n        hasStroke: function () {\n            var stroke = this.stroke;\n            return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n        },\n\n        /**\n         * Extend from other style\n         * @param {zrender/graphic/Style} otherStyle\n         * @param {boolean} overwrite true: overwrirte any way.\n         *                            false: overwrite only when !target.hasOwnProperty\n         *                            others: overwrite when property is not null/undefined.\n         */\n        extendFrom: function (otherStyle, overwrite) {\n            if (otherStyle) {\n                for (var name in otherStyle) {\n                    if (otherStyle.hasOwnProperty(name)\n                        && (overwrite === true\n                            || (\n                                overwrite === false\n                                    ? !this.hasOwnProperty(name)\n                                    : otherStyle[name] != null\n                            )\n                        )\n                    ) {\n                        this[name] = otherStyle[name];\n                    }\n                }\n            }\n        },\n\n        /**\n         * Batch setting style with a given object\n         * @param {Object|string} obj\n         * @param {*} [obj]\n         */\n        set: function (obj, value) {\n            if (typeof obj === 'string') {\n                this[obj] = value;\n            }\n            else {\n                this.extendFrom(obj, true);\n            }\n        },\n\n        /**\n         * Clone\n         * @return {zrender/graphic/Style} [description]\n         */\n        clone: function () {\n            var newStyle = new this.constructor();\n            newStyle.extendFrom(this, true);\n            return newStyle;\n        },\n\n        getGradient: function (ctx, obj, rect) {\n            var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n            var canvasGradient = method(ctx, obj, rect);\n            var colorStops = obj.colorStops;\n            for (var i = 0; i < colorStops.length; i++) {\n                canvasGradient.addColorStop(\n                    colorStops[i].offset, colorStops[i].color\n                );\n            }\n            return canvasGradient;\n        }\n\n    };\n\n    var styleProto = Style.prototype;\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n        var prop = STYLE_COMMON_PROPS[i];\n        if (!(prop[0] in styleProto)) {\n            styleProto[prop[0]] = prop[1];\n        }\n    }\n\n    // Provide for others\n    Style.getGradient = styleProto.getGradient;\n\n    module.exports = Style;\n\n\n/***/ }),\n/* 677 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var env = __webpack_require__(615);\n\n    // Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n    // where exception \"unexpected call to method or property access\"\n    // might be thrown when calling ctx.fill or ctx.stroke after a path\n    // whose area size is zero is drawn and ctx.clip() is called and\n    // shadowBlur is set. See #4572, #3112, #5777.\n    // (e.g.,\n    //  ctx.moveTo(10, 10);\n    //  ctx.lineTo(20, 10);\n    //  ctx.closePath();\n    //  ctx.clip();\n    //  ctx.shadowBlur = 10;\n    //  ...\n    //  ctx.fill();\n    // )\n\n    var shadowTemp = [\n        ['shadowBlur', 0],\n        ['shadowColor', '#000'],\n        ['shadowOffsetX', 0],\n        ['shadowOffsetY', 0]\n    ];\n\n    module.exports = function (orignalBrush) {\n\n        // version string can be: '11.0'\n        return (env.browser.ie && env.browser.version >= 11)\n\n            ? function () {\n                var clipPaths = this.__clipPaths;\n                var style = this.style;\n                var modified;\n\n                if (clipPaths) {\n                    for (var i = 0; i < clipPaths.length; i++) {\n                        var clipPath = clipPaths[i];\n                        var shape = clipPath && clipPath.shape;\n                        var type = clipPath && clipPath.type;\n\n                        if (shape && (\n                            (type === 'sector' && shape.startAngle === shape.endAngle)\n                            || (type === 'rect' && (!shape.width || !shape.height))\n                        )) {\n                            for (var j = 0; j < shadowTemp.length; j++) {\n                                // It is save to put shadowTemp static, because shadowTemp\n                                // will be all modified each item brush called.\n                                shadowTemp[j][2] = style[shadowTemp[j][0]];\n                                style[shadowTemp[j][0]] = shadowTemp[j][1];\n                            }\n                            modified = true;\n                            break;\n                        }\n                    }\n                }\n\n                orignalBrush.apply(this, arguments);\n\n                if (modified) {\n                    for (var j = 0; j < shadowTemp.length; j++) {\n                        style[shadowTemp[j][0]] = shadowTemp[j][2];\n                    }\n                }\n            }\n\n            : orignalBrush;\n    };\n\n\n\n/***/ }),\n/* 678 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var smoothSpline = __webpack_require__(787);\n    var smoothBezier = __webpack_require__(786);\n\n    module.exports = {\n        buildPath: function (ctx, shape, closePath) {\n            var points = shape.points;\n            var smooth = shape.smooth;\n            if (points && points.length >= 2) {\n                if (smooth && smooth !== 'spline') {\n                    var controlPoints = smoothBezier(\n                        points, smooth, closePath, shape.smoothConstraint\n                    );\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    var len = points.length;\n                    for (var i = 0; i < (closePath ? len : len - 1); i++) {\n                        var cp1 = controlPoints[i * 2];\n                        var cp2 = controlPoints[i * 2 + 1];\n                        var p = points[(i + 1) % len];\n                        ctx.bezierCurveTo(\n                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\n                        );\n                    }\n                }\n                else {\n                    if (smooth === 'spline') {\n                        points = smoothSpline(points, closePath);\n                    }\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    for (var i = 1, l = points.length; i < l; i++) {\n                        ctx.lineTo(points[i][0], points[i][1]);\n                    }\n                }\n\n                closePath && ctx.closePath();\n            }\n        }\n    };\n\n\n/***/ }),\n/* 679 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = {\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            var r = shape.r;\n            var r1;\n            var r2;\n            var r3;\n            var r4;\n\n            // Convert width and height to positive for better borderRadius\n            if (width < 0) {\n                x = x + width;\n                width = -width;\n            }\n            if (height < 0) {\n                y = y + height;\n                height = -height;\n            }\n\n            if (typeof r === 'number') {\n                r1 = r2 = r3 = r4 = r;\n            }\n            else if (r instanceof Array) {\n                if (r.length === 1) {\n                    r1 = r2 = r3 = r4 = r[0];\n                }\n                else if (r.length === 2) {\n                    r1 = r3 = r[0];\n                    r2 = r4 = r[1];\n                }\n                else if (r.length === 3) {\n                    r1 = r[0];\n                    r2 = r4 = r[1];\n                    r3 = r[2];\n                }\n                else {\n                    r1 = r[0];\n                    r2 = r[1];\n                    r3 = r[2];\n                    r4 = r[3];\n                }\n            }\n            else {\n                r1 = r2 = r3 = r4 = 0;\n            }\n\n            var total;\n            if (r1 + r2 > width) {\n                total = r1 + r2;\n                r1 *= width / total;\n                r2 *= width / total;\n            }\n            if (r3 + r4 > width) {\n                total = r3 + r4;\n                r3 *= width / total;\n                r4 *= width / total;\n            }\n            if (r2 + r3 > height) {\n                total = r2 + r3;\n                r2 *= height / total;\n                r3 *= height / total;\n            }\n            if (r1 + r4 > height) {\n                total = r1 + r4;\n                r1 *= height / total;\n                r4 *= height / total;\n            }\n            ctx.moveTo(x + r1, y);\n            ctx.lineTo(x + width - r2, y);\n            r2 !== 0 && ctx.quadraticCurveTo(\n                x + width, y, x + width, y + r2\n            );\n            ctx.lineTo(x + width, y + height - r3);\n            r3 !== 0 && ctx.quadraticCurveTo(\n                x + width, y + height, x + width - r3, y + height\n            );\n            ctx.lineTo(x + r4, y + height);\n            r4 !== 0 && ctx.quadraticCurveTo(\n                x, y + height, x, y + height - r4\n            );\n            ctx.lineTo(x, y + r1);\n            r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n        }\n    };\n\n\n/***/ }),\n/* 680 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\n\n\n    var matrix = __webpack_require__(623);\n    var vector = __webpack_require__(611);\n    var mIdentity = matrix.identity;\n\n    var EPSILON = 5e-5;\n\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n\n    /**\n     * @alias module:zrender/mixin/Transformable\n     * @constructor\n     */\n    var Transformable = function (opts) {\n        opts = opts || {};\n        // If there are no given position, rotation, scale\n        if (!opts.position) {\n            /**\n             * 平移\n             * @type {Array.<number>}\n             * @default [0, 0]\n             */\n            this.position = [0, 0];\n        }\n        if (opts.rotation == null) {\n            /**\n             * 旋转\n             * @type {Array.<number>}\n             * @default 0\n             */\n            this.rotation = 0;\n        }\n        if (!opts.scale) {\n            /**\n             * 缩放\n             * @type {Array.<number>}\n             * @default [1, 1]\n             */\n            this.scale = [1, 1];\n        }\n        /**\n         * 旋转和缩放的原点\n         * @type {Array.<number>}\n         * @default null\n         */\n        this.origin = this.origin || null;\n    };\n\n    var transformableProto = Transformable.prototype;\n    transformableProto.transform = null;\n\n    /**\n     * 判断是否需要有坐标变换\n     * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n     */\n    transformableProto.needLocalTransform = function () {\n        return isNotAroundZero(this.rotation)\n            || isNotAroundZero(this.position[0])\n            || isNotAroundZero(this.position[1])\n            || isNotAroundZero(this.scale[0] - 1)\n            || isNotAroundZero(this.scale[1] - 1);\n    };\n\n    transformableProto.updateTransform = function () {\n        var parent = this.parent;\n        var parentHasTransform = parent && parent.transform;\n        var needLocalTransform = this.needLocalTransform();\n\n        var m = this.transform;\n        if (!(needLocalTransform || parentHasTransform)) {\n            m && mIdentity(m);\n            return;\n        }\n\n        m = m || matrix.create();\n\n        if (needLocalTransform) {\n            this.getLocalTransform(m);\n        }\n        else {\n            mIdentity(m);\n        }\n\n        // 应用父节点变换\n        if (parentHasTransform) {\n            if (needLocalTransform) {\n                matrix.mul(m, parent.transform, m);\n            }\n            else {\n                matrix.copy(m, parent.transform);\n            }\n        }\n        // 保存这个变换矩阵\n        this.transform = m;\n\n        this.invTransform = this.invTransform || matrix.create();\n        matrix.invert(this.invTransform, m);\n    };\n\n    transformableProto.getLocalTransform = function (m) {\n        return Transformable.getLocalTransform(this, m);\n    };\n\n    /**\n     * 将自己的transform应用到context上\n     * @param {CanvasRenderingContext2D} ctx\n     */\n    transformableProto.setTransform = function (ctx) {        \n        var m = this.transform;\n        var dpr = ctx.dpr || 1;\n        if (m) {\n            ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n        }\n        else {\n            ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n        }\n    };\n\n    transformableProto.restoreTransform = function (ctx) {\n        var dpr = ctx.dpr || 1;\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n    };\n\n    var tmpTransform = [];\n\n    /**\n     * 分解`transform`矩阵到`position`, `rotation`, `scale`\n     */\n    transformableProto.decomposeTransform = function () {\n        if (!this.transform) {\n            return;\n        }\n        var parent = this.parent;\n        var m = this.transform;\n        if (parent && parent.transform) {\n            // Get local transform and decompose them to position, scale, rotation\n            matrix.mul(tmpTransform, parent.invTransform, m);\n            m = tmpTransform;\n        }\n        var sx = m[0] * m[0] + m[1] * m[1];\n        var sy = m[2] * m[2] + m[3] * m[3];\n        var position = this.position;\n        var scale = this.scale;\n        if (isNotAroundZero(sx - 1)) {\n            sx = Math.sqrt(sx);\n        }\n        if (isNotAroundZero(sy - 1)) {\n            sy = Math.sqrt(sy);\n        }\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        position[0] = m[4];\n        position[1] = m[5];\n        scale[0] = sx;\n        scale[1] = sy;\n        this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n    };\n\n    /**\n     * Get global scale\n     * @return {Array.<number>}\n     */\n    transformableProto.getGlobalScale = function () {\n        var m = this.transform;\n        if (!m) {\n            return [1, 1];\n        }\n        var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        return [sx, sy];\n    };\n    /**\n     * 变换坐标位置到 shape 的局部坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToLocal = function (x, y) {\n        var v2 = [x, y];\n        var invTransform = this.invTransform;\n        if (invTransform) {\n            vector.applyTransform(v2, v2, invTransform);\n        }\n        return v2;\n    };\n\n    /**\n     * 变换局部坐标位置到全局坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToGlobal = function (x, y) {\n        var v2 = [x, y];\n        var transform = this.transform;\n        if (transform) {\n            vector.applyTransform(v2, v2, transform);\n        }\n        return v2;\n    };\n\n    /**\n     * @static\n     * @param {Object} target\n     * @param {Array.<number>} target.origin\n     * @param {number} target.rotation\n     * @param {Array.<number>} target.position\n     * @param {Array.<number>} [m]\n     */\n    Transformable.getLocalTransform = function (target, m) {\n        m = m || [];\n        mIdentity(m);\n\n        var origin = target.origin;\n        var scale = target.scale || [1, 1];\n        var rotation = target.rotation || 0;\n        var position = target.position || [0, 0];\n\n        if (origin) {\n            // Translate to origin\n            m[4] -= origin[0];\n            m[5] -= origin[1];\n        }\n        matrix.scale(m, m, scale);\n        if (rotation) {\n            matrix.rotate(m, m, rotation);\n        }\n        if (origin) {\n            // Translate back from origin\n            m[4] += origin[0];\n            m[5] += origin[1];\n        }\n\n        m[4] += position[0];\n        m[5] += position[1];\n\n        return m;\n    };\n\n    module.exports = Transformable;\n\n\n\n/***/ }),\n/* 681 */,\n/* 682 */,\n/* 683 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var graphic = __webpack_require__(608);\n    var zrUtil = __webpack_require__(606);\n    var echarts = __webpack_require__(607);\n\n    __webpack_require__(685);\n\n    __webpack_require__(716);\n\n    // Grid view\n    echarts.extendComponentView({\n\n        type: 'grid',\n\n        render: function (gridModel, ecModel) {\n            this.group.removeAll();\n            if (gridModel.get('show')) {\n                this.group.add(new graphic.Rect({\n                    shape: gridModel.coordinateSystem.getRect(),\n                    style: zrUtil.defaults({\n                        fill: gridModel.get('backgroundColor')\n                    }, gridModel.getItemStyle()),\n                    silent: true,\n                    z2: -1\n                }));\n            }\n        }\n\n    });\n\n    echarts.registerPreprocessor(function (option) {\n        // Only create grid when need\n        if (option.xAxis && option.yAxis && !option.grid) {\n            option.grid = {};\n        }\n    });\n\n\n/***/ }),\n/* 684 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(606);\n\n    var defaultOption = {\n        show: true,\n        zlevel: 0,                  // 一级层叠\n        z: 0,                       // 二级层叠\n        // 反向坐标轴\n        inverse: false,\n\n        // 坐标轴名字，默认为空\n        name: '',\n        // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n        nameLocation: 'end',\n        // 坐标轴名字旋转，degree。\n        nameRotate: null, // Adapt to axis rotate, when nameLocation is 'middle'.\n        nameTruncate: {\n            maxWidth: null,\n            ellipsis: '...',\n            placeholder: '.'\n        },\n        // 坐标轴文字样式，默认取全局样式\n        nameTextStyle: {},\n        // 文字与轴线距离\n        nameGap: 15,\n\n        silent: false, // Default false to support tooltip.\n        triggerEvent: false, // Default false to avoid legacy user event listener fail.\n\n        tooltip: {\n            show: false\n        },\n\n        axisPointer: {},\n\n        // 坐标轴线\n        axisLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            onZero: true,\n            onZeroAxisIndex: null,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                color: '#333',\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // 属性show控制显示与否，默认显示\n            show: true,\n            // 控制小标记是否在grid里\n            inside: false,\n            // 属性length控制线长\n            length: 5,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                width: 1\n            }\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            show: true,\n            // 控制文本标签是否在grid里\n            inside: false,\n            rotate: 0,\n            showMinLabel: null, // true | false | null (auto)\n            showMaxLabel: null, // true | false | null (auto)\n            margin: 8,\n            // formatter: null,\n            // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n            fontSize: 12\n        },\n        // 分隔线\n        splitLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            // 属性lineStyle（详见lineStyle）控制线条样式\n            lineStyle: {\n                color: ['#ccc'],\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 分隔区域\n        splitArea: {\n            // 默认不显示，属性show控制显示与否\n            show: false,\n            // 属性areaStyle（详见areaStyle）控制区域样式\n            areaStyle: {\n                color: ['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']\n            }\n        }\n    };\n\n    var categoryAxis = zrUtil.merge({\n        // 类目起始和结束两端空白策略\n        boundaryGap: true,\n        // splitArea: {\n            // show: false\n        // },\n        splitLine: {\n            show: false\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // If tick is align with label when boundaryGap is true\n            alignWithLabel: false,\n            interval: 'auto'\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            interval: 'auto'\n        }\n    }, defaultOption);\n\n    var valueAxis = zrUtil.merge({\n        // 数值起始和结束两端空白策略\n        boundaryGap: [0, 0],\n        // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n        // min: null,\n        // 最大值，设置成 'dataMax' 则从数据中计算最大值\n        // max: null,\n        // Readonly prop, specifies start value of the range when using data zoom.\n        // rangeStart: null\n        // Readonly prop, specifies end value of the range when using data zoom.\n        // rangeEnd: null\n        // 脱离0值比例，放大聚焦到最终_min，_max区间\n        // scale: false,\n        // 分割段数，默认为5\n        splitNumber: 5\n        // Minimum interval\n        // minInterval: null\n        // maxInterval: null\n    }, defaultOption);\n\n    // FIXME\n    var timeAxis = zrUtil.defaults({\n        scale: true,\n        min: 'dataMin',\n        max: 'dataMax'\n    }, valueAxis);\n\n    var logAxis = zrUtil.defaults({\n        scale: true,\n        logBase: 10\n    }, valueAxis);\n\n    module.exports = {\n        categoryAxis: categoryAxis,\n        valueAxis: valueAxis,\n        timeAxis: timeAxis,\n        logAxis: logAxis\n    };\n\n\n/***/ }),\n/* 685 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\nvar factory = exports;\n\n    var layout = __webpack_require__(619);\n    var axisHelper = __webpack_require__(620);\n\n    var zrUtil = __webpack_require__(606);\n    var Cartesian2D = __webpack_require__(737);\n    var Axis2D = __webpack_require__(735);\n\n    var each = zrUtil.each;\n\n    var ifAxisCrossZero = axisHelper.ifAxisCrossZero;\n    var niceScaleExtent = axisHelper.niceScaleExtent;\n\n    // 依赖 GridModel, AxisModel 做预处理\n    __webpack_require__(738);\n\n    /**\n     * Check if the axis is used in the specified grid\n     * @inner\n     */\n    function isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n        return axisModel.getCoordSysModel() === gridModel;\n    }\n\n    function getLabelUnionRect(axis) {\n        var axisModel = axis.model;\n        var labels = axisModel.getFormattedLabels();\n        var axisLabelModel = axisModel.getModel('axisLabel');\n        var rect;\n        var step = 1;\n        var labelCount = labels.length;\n        if (labelCount > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.ceil(labelCount / 40);\n        }\n        for (var i = 0; i < labelCount; i += step) {\n            if (!axis.isLabelIgnored(i)) {\n                var singleRect = axisLabelModel.getTextRect(labels[i]);\n                // FIXME consider label rotate\n                rect ? rect.union(singleRect) : (rect = singleRect);\n            }\n        }\n        return rect;\n    }\n\n    function Grid(gridModel, ecModel, api) {\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n         * @private\n         */\n        this._coordsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n         * @private\n         */\n        this._coordsList = [];\n\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesList = [];\n\n        this._initCartesian(gridModel, ecModel, api);\n\n        this.model = gridModel;\n    }\n\n    var gridProto = Grid.prototype;\n\n    gridProto.type = 'grid';\n\n    gridProto.axisPointerEnabled = true;\n\n    gridProto.getRect = function () {\n        return this._rect;\n    };\n\n    gridProto.update = function (ecModel, api) {\n\n        var axesMap = this._axesMap;\n\n        this._updateScale(ecModel, this.model);\n\n        each(axesMap.x, function (xAxis) {\n            niceScaleExtent(xAxis.scale, xAxis.model);\n        });\n        each(axesMap.y, function (yAxis) {\n            niceScaleExtent(yAxis.scale, yAxis.model);\n        });\n        each(axesMap.x, function (xAxis) {\n            fixAxisOnZero(axesMap, 'y', xAxis);\n        });\n        each(axesMap.y, function (yAxis) {\n            fixAxisOnZero(axesMap, 'x', yAxis);\n        });\n\n        // Resize again if containLabel is enabled\n        // FIXME It may cause getting wrong grid size in data processing stage\n        this.resize(this.model, api);\n    };\n\n    function fixAxisOnZero(axesMap, otherAxisDim, axis) {\n        // onZero can not be enabled in these two situations:\n        // 1. When any other axis is a category axis.\n        // 2. When no axis is cross 0 point.\n        var axes = axesMap[otherAxisDim];\n\n        if (!axis.onZero) {\n            return;\n        }\n\n        var onZeroAxisIndex = axis.onZeroAxisIndex;\n\n        // If target axis is specified.\n        if (onZeroAxisIndex != null) {\n            var otherAxis = axes[onZeroAxisIndex];\n            if (otherAxis && canNotOnZeroToAxis(otherAxis)) {\n                axis.onZero = false;\n            }\n            return;\n        }\n\n        for (var idx in axes) {\n            if (axes.hasOwnProperty(idx)) {\n                var otherAxis = axes[idx];\n                if (otherAxis && !canNotOnZeroToAxis(otherAxis)) {\n                    onZeroAxisIndex = +idx;\n                    break;\n                }\n            }\n        }\n\n        if (onZeroAxisIndex == null) {\n            axis.onZero = false;\n        }\n        axis.onZeroAxisIndex = onZeroAxisIndex;\n    }\n\n    function canNotOnZeroToAxis(axis) {\n        return axis.type === 'category' || axis.type === 'time' || !ifAxisCrossZero(axis);\n    }\n\n    /**\n     * Resize the grid\n     * @param {module:echarts/coord/cartesian/GridModel} gridModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    gridProto.resize = function (gridModel, api, ignoreContainLabel) {\n\n        var gridRect = layout.getLayoutRect(\n            gridModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n\n        this._rect = gridRect;\n\n        var axesList = this._axesList;\n\n        adjustAxes();\n\n        // Minus label size\n        if (!ignoreContainLabel && gridModel.get('containLabel')) {\n            each(axesList, function (axis) {\n                if (!axis.model.get('axisLabel.inside')) {\n                    var labelUnionRect = getLabelUnionRect(axis);\n                    if (labelUnionRect) {\n                        var dim = axis.isHorizontal() ? 'height' : 'width';\n                        var margin = axis.model.get('axisLabel.margin');\n                        gridRect[dim] -= labelUnionRect[dim] + margin;\n                        if (axis.position === 'top') {\n                            gridRect.y += labelUnionRect.height + margin;\n                        }\n                        else if (axis.position === 'left')  {\n                            gridRect.x += labelUnionRect.width + margin;\n                        }\n                    }\n                }\n            });\n\n            adjustAxes();\n        }\n\n        function adjustAxes() {\n            each(axesList, function (axis) {\n                var isHorizontal = axis.isHorizontal();\n                var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n                var idx = axis.inverse ? 1 : 0;\n                axis.setExtent(extent[idx], extent[1 - idx]);\n                updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n            });\n        }\n    };\n\n    /**\n     * @param {string} axisType\n     * @param {number} [axisIndex]\n     */\n    gridProto.getAxis = function (axisType, axisIndex) {\n        var axesMapOnDim = this._axesMap[axisType];\n        if (axesMapOnDim != null) {\n            if (axisIndex == null) {\n                // Find first axis\n                for (var name in axesMapOnDim) {\n                    if (axesMapOnDim.hasOwnProperty(name)) {\n                        return axesMapOnDim[name];\n                    }\n                }\n            }\n            return axesMapOnDim[axisIndex];\n        }\n    };\n\n    /**\n     * @return {Array.<module:echarts/coord/Axis>}\n     */\n    gridProto.getAxes = function () {\n        return this._axesList.slice();\n    };\n\n    /**\n     * Usage:\n     *      grid.getCartesian(xAxisIndex, yAxisIndex);\n     *      grid.getCartesian(xAxisIndex);\n     *      grid.getCartesian(null, yAxisIndex);\n     *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n     *\n     * @param {number|Object} [xAxisIndex]\n     * @param {number} [yAxisIndex]\n     */\n    gridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n        if (xAxisIndex != null && yAxisIndex != null) {\n            var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n            return this._coordsMap[key];\n        }\n\n        if (zrUtil.isObject(xAxisIndex)) {\n            yAxisIndex = xAxisIndex.yAxisIndex;\n            xAxisIndex = xAxisIndex.xAxisIndex;\n        }\n        // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n        for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n            if (coordList[i].getAxis('x').index === xAxisIndex\n                || coordList[i].getAxis('y').index === yAxisIndex\n            ) {\n                return coordList[i];\n            }\n        }\n    };\n\n    gridProto.getCartesians = function () {\n        return this._coordsList.slice();\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertToPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.dataToPoint(value)\n            : target.axis\n            ? target.axis.toGlobalCoord(target.axis.dataToCoord(value))\n            : null;\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertFromPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.pointToData(value)\n            : target.axis\n            ? target.axis.coordToData(target.axis.toLocalCoord(value))\n            : null;\n    };\n\n    /**\n     * @inner\n     */\n    gridProto._findConvertTarget = function (ecModel, finder) {\n        var seriesModel = finder.seriesModel;\n        var xAxisModel = finder.xAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('xAxis')[0]);\n        var yAxisModel = finder.yAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('yAxis')[0]);\n        var gridModel = finder.gridModel;\n        var coordsList = this._coordsList;\n        var cartesian;\n        var axis;\n\n        if (seriesModel) {\n            cartesian = seriesModel.coordinateSystem;\n            zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n        }\n        else if (xAxisModel && yAxisModel) {\n            cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n        }\n        else if (xAxisModel) {\n            axis = this.getAxis('x', xAxisModel.componentIndex);\n        }\n        else if (yAxisModel) {\n            axis = this.getAxis('y', yAxisModel.componentIndex);\n        }\n        // Lowest priority.\n        else if (gridModel) {\n            var grid = gridModel.coordinateSystem;\n            if (grid === this) {\n                cartesian = this._coordsList[0];\n            }\n        }\n\n        return {cartesian: cartesian, axis: axis};\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.containPoint = function (point) {\n        var coord = this._coordsList[0];\n        if (coord) {\n            return coord.containPoint(point);\n        }\n    };\n\n    /**\n     * Initialize cartesian coordinate systems\n     * @private\n     */\n    gridProto._initCartesian = function (gridModel, ecModel, api) {\n        var axisPositionUsed = {\n            left: false,\n            right: false,\n            top: false,\n            bottom: false\n        };\n\n        var axesMap = {\n            x: {},\n            y: {}\n        };\n        var axesCount = {\n            x: 0,\n            y: 0\n        };\n\n        /// Create axis\n        ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n        ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n        if (!axesCount.x || !axesCount.y) {\n            // Roll back when there no either x or y axis\n            this._axesMap = {};\n            this._axesList = [];\n            return;\n        }\n\n        this._axesMap = axesMap;\n\n        /// Create cartesian2d\n        each(axesMap.x, function (xAxis, xAxisIndex) {\n            each(axesMap.y, function (yAxis, yAxisIndex) {\n                var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n                var cartesian = new Cartesian2D(key);\n\n                cartesian.grid = this;\n                cartesian.model = gridModel;\n\n                this._coordsMap[key] = cartesian;\n                this._coordsList.push(cartesian);\n\n                cartesian.addAxis(xAxis);\n                cartesian.addAxis(yAxis);\n            }, this);\n        }, this);\n\n        function createAxisCreator(axisType) {\n            return function (axisModel, idx) {\n                if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n                    return;\n                }\n\n                var axisPosition = axisModel.get('position');\n                if (axisType === 'x') {\n                    // Fix position\n                    if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n                        // Default bottom of X\n                        axisPosition = 'bottom';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n                        }\n                    }\n                }\n                else {\n                    // Fix position\n                    if (axisPosition !== 'left' && axisPosition !== 'right') {\n                        // Default left of Y\n                        axisPosition = 'left';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n                        }\n                    }\n                }\n                axisPositionUsed[axisPosition] = true;\n\n                var axis = new Axis2D(\n                    axisType, axisHelper.createScaleByModel(axisModel),\n                    [0, 0],\n                    axisModel.get('type'),\n                    axisPosition\n                );\n\n                var isCategory = axis.type === 'category';\n                axis.onBand = isCategory && axisModel.get('boundaryGap');\n                axis.inverse = axisModel.get('inverse');\n\n                axis.onZero = axisModel.get('axisLine.onZero');\n                axis.onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex');\n\n                // Inject axis into axisModel\n                axisModel.axis = axis;\n\n                // Inject axisModel into axis\n                axis.model = axisModel;\n\n                // Inject grid info axis\n                axis.grid = this;\n\n                // Index of axis, can be used as key\n                axis.index = idx;\n\n                this._axesList.push(axis);\n\n                axesMap[axisType][idx] = axis;\n                axesCount[axisType]++;\n            };\n        }\n    };\n\n    /**\n     * Update cartesian properties from series\n     * @param  {module:echarts/model/Option} option\n     * @private\n     */\n    gridProto._updateScale = function (ecModel, gridModel) {\n        // Reset scale\n        zrUtil.each(this._axesList, function (axis) {\n            axis.scale.setExtent(Infinity, -Infinity);\n        });\n        ecModel.eachSeries(function (seriesModel) {\n            if (isCartesian2D(seriesModel)) {\n                var axesModels = findAxesModels(seriesModel, ecModel);\n                var xAxisModel = axesModels[0];\n                var yAxisModel = axesModels[1];\n\n                if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel)\n                    || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)\n                 ) {\n                    return;\n                }\n\n                var cartesian = this.getCartesian(\n                    xAxisModel.componentIndex, yAxisModel.componentIndex\n                );\n                var data = seriesModel.getData();\n                var xAxis = cartesian.getAxis('x');\n                var yAxis = cartesian.getAxis('y');\n\n                if (data.type === 'list') {\n                    unionExtent(data, xAxis, seriesModel);\n                    unionExtent(data, yAxis, seriesModel);\n                }\n            }\n        }, this);\n\n        function unionExtent(data, axis, seriesModel) {\n            each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n                axis.scale.unionExtentFromData(data, dim);\n            });\n        }\n    };\n\n    /**\n     * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n     * @return {Object} {baseAxes: [], otherAxes: []}\n     */\n    gridProto.getTooltipAxes = function (dim) {\n        var baseAxes = [];\n        var otherAxes = [];\n\n        each(this.getCartesians(), function (cartesian) {\n            var baseAxis = (dim != null && dim !== 'auto')\n                ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n            var otherAxis = cartesian.getOtherAxis(baseAxis);\n            zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n            zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n        });\n\n        return {baseAxes: baseAxes, otherAxes: otherAxes};\n    };\n\n    /**\n     * @inner\n     */\n    function updateAxisTransfrom(axis, coordBase) {\n        var axisExtent = axis.getExtent();\n        var axisExtentSum = axisExtent[0] + axisExtent[1];\n\n        // Fast transform\n        axis.toGlobalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord + coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n        axis.toLocalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord - coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n    }\n\n    var axesTypes = ['xAxis', 'yAxis'];\n    /**\n     * @inner\n     */\n    function findAxesModels(seriesModel, ecModel) {\n        return zrUtil.map(axesTypes, function (axisType) {\n            var axisModel = seriesModel.getReferringComponents(axisType)[0];\n\n            if (__DEV__) {\n                if (!axisModel) {\n                    throw new Error(axisType + ' \"' + zrUtil.retrieve(\n                        seriesModel.get(axisType + 'Index'),\n                        seriesModel.get(axisType + 'Id'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n            return axisModel;\n        });\n    }\n\n    /**\n     * @inner\n     */\n    function isCartesian2D(seriesModel) {\n        return seriesModel.get('coordinateSystem') === 'cartesian2d';\n    }\n\n    Grid.create = function (ecModel, api) {\n        var grids = [];\n        ecModel.eachComponent('grid', function (gridModel, idx) {\n            var grid = new Grid(gridModel, ecModel, api);\n            grid.name = 'grid_' + idx;\n            // dataSampling requires axis extent, so resize\n            // should be performed in create stage.\n            grid.resize(gridModel, api, true);\n\n            gridModel.coordinateSystem = grid;\n\n            grids.push(grid);\n        });\n\n        // Inject the coordinateSystems into seriesModel\n        ecModel.eachSeries(function (seriesModel) {\n            if (!isCartesian2D(seriesModel)) {\n                return;\n            }\n\n            var axesModels = findAxesModels(seriesModel, ecModel);\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            var gridModel = xAxisModel.getCoordSysModel();\n\n            if (__DEV__) {\n                if (!gridModel) {\n                    throw new Error(\n                        'Grid \"' + zrUtil.retrieve(\n                            xAxisModel.get('gridIndex'),\n                            xAxisModel.get('gridId'),\n                            0\n                        ) + '\" not found'\n                    );\n                }\n                if (xAxisModel.getCoordSysModel() !== yAxisModel.getCoordSysModel()) {\n                    throw new Error('xAxis and yAxis must use the same grid');\n                }\n            }\n\n            var grid = gridModel.coordinateSystem;\n\n            seriesModel.coordinateSystem = grid.getCartesian(\n                xAxisModel.componentIndex, yAxisModel.componentIndex\n            );\n        });\n\n        return grids;\n    };\n\n    // For deciding which dimensions to use when creating list data\n    Grid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\n\n    __webpack_require__(636).register('cartesian2d', Grid);\n\n    module.exports = Grid;\n\n\n/***/ }),\n/* 686 */\n/***/ (function(module, exports) {\n\n\n    module.exports = function (seriesType, ecModel) {\n        var legendModels = ecModel.findComponents({\n            mainType: 'legend'\n        });\n        if (!legendModels || !legendModels.length) {\n            return;\n        }\n        ecModel.eachSeriesByType(seriesType, function (series) {\n            var data = series.getData();\n            data.filterSelf(function (idx) {\n                var name = data.getName(idx);\n                // If in any legend component the status is not selected.\n                for (var i = 0; i < legendModels.length; i++) {\n                    if (!legendModels[i].isSelected(name)) {\n                        return false;\n                    }\n                }\n                return true;\n            }, this);\n        }, this);\n    };\n\n\n/***/ }),\n/* 687 */\n/***/ (function(module, exports) {\n\n// Pick color from palette for each data item.\n// Applicable for charts that require applying color palette\n// in data level (like pie, funnel, chord).\n\n\n    module.exports = function (seriesType, ecModel) {\n        // Pie and funnel may use diferrent scope\n        var paletteScope = {};\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var dataAll = seriesModel.getRawData();\n            var idxMap = {};\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                var data = seriesModel.getData();\n                data.each(function (idx) {\n                    var rawIdx = data.getRawIndex(idx);\n                    idxMap[rawIdx] = idx;\n                });\n                dataAll.each(function (rawIdx) {\n                    var filteredIdx = idxMap[rawIdx];\n\n                    // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n                    var singleDataColor = filteredIdx != null\n                        && data.getItemVisual(filteredIdx, 'color', true);\n\n                    if (!singleDataColor) {\n                        // FIXME Performance\n                        var itemModel = dataAll.getItemModel(rawIdx);\n                        var color = itemModel.get('itemStyle.normal.color')\n                            || seriesModel.getColorFromPalette(dataAll.getName(rawIdx), paletteScope);\n                        // Legend may use the visual info in data before processed\n                        dataAll.setItemVisual(rawIdx, 'color', color);\n\n                        // Data is not filtered\n                        if (filteredIdx != null) {\n                            data.setItemVisual(filteredIdx, 'color', color);\n                        }\n                    }\n                    else {\n                        // Set data all color for legend\n                        dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n                    }\n                });\n            }\n        });\n    };\n\n\n/***/ }),\n/* 688 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = function (seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n\n        // Encoding visual for all series include which is filtered for legend drawing\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n\n            var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n            var symbolSize = seriesModel.get('symbolSize');\n\n            data.setVisual({\n                legendSymbol: legendSymbol || symbolType,\n                symbol: symbolType,\n                symbolSize: symbolSize\n            });\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof symbolSize === 'function') {\n                    data.each(function (idx) {\n                        var rawValue = seriesModel.getRawValue(idx);\n                        // FIXME\n                        var params = seriesModel.getDataParams(idx);\n                        data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n                    });\n                }\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var itemSymbolType = itemModel.getShallow('symbol', true);\n                    var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n                    // If has item symbol\n                    if (itemSymbolType != null) {\n                        data.setItemVisual(idx, 'symbol', itemSymbolType);\n                    }\n                    if (itemSymbolSize != null) {\n                        // PENDING Transform symbolSize ?\n                        data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n                    }\n                });\n            }\n        });\n    };\n\n\n/***/ }),\n/* 689 */,\n/* 690 */,\n/* 691 */,\n/* 692 */,\n/* 693 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_keys__ = __webpack_require__(140);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_keys___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_keys__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__icon__ = __webpack_require__(215);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__icon___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__icon__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__datetimepicker__ = __webpack_require__(695);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__group__ = __webpack_require__(209);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__group___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__group__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__inline_desc__ = __webpack_require__(98);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__inline_desc___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__inline_desc__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__mixins_uuid__ = __webpack_require__(699);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__tools_date_format__ = __webpack_require__(624);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__tools_date_format___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6__tools_date_format__);\n\n\n\n\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'datetime',\n  mixins: [__WEBPACK_IMPORTED_MODULE_5__mixins_uuid__[\"a\" /* default */]],\n  components: {\n    Group: __WEBPACK_IMPORTED_MODULE_3__group___default.a,\n    InlineDesc: __WEBPACK_IMPORTED_MODULE_4__inline_desc___default.a,\n    Icon: __WEBPACK_IMPORTED_MODULE_1__icon___default.a\n  },\n  props: {\n    format: {\n      type: String,\n      default: 'YYYY-MM-DD'\n    },\n    title: String,\n    value: {\n      type: String,\n      default: ''\n    },\n    inlineDesc: String,\n    placeholder: String,\n    minYear: Number,\n    maxYear: Number,\n    confirmText: String,\n    cancelText: String,\n    clearText: String,\n    yearRow: {\n      type: String,\n      default: '{value}'\n    },\n    monthRow: {\n      type: String,\n      default: '{value}'\n    },\n    dayRow: {\n      type: String,\n      default: '{value}'\n    },\n    hourRow: {\n      type: String,\n      default: '{value}'\n    },\n    minuteRow: {\n      type: String,\n      default: '{value}'\n    },\n    required: {\n      type: Boolean,\n      default: false\n    },\n    minHour: {\n      type: Number,\n      default: 0\n    },\n    maxHour: {\n      type: Number,\n      default: 23\n    },\n    startDate: String,\n    endDate: String,\n    valueTextAlign: String,\n    displayFormat: Function,\n    readonly: Boolean,\n    hourList: Array,\n    minuteList: Array,\n    show: Boolean,\n    defaultSelectedValue: String\n  },\n  created: function created() {\n    this.isFirstSetValue = false;\n    this.currentValue = this.value;\n  },\n  data: function data() {\n    return {\n      currentValue: null,\n      valid: true,\n      errors: {}\n    };\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    var uuid = this.uuid;\n    this.$el.setAttribute('id', 'vux-datetime-' + uuid);\n    if (!this.readonly) {\n      this.$nextTick(function () {\n        _this2.render();\n      });\n    }\n  },\n\n  computed: {\n    _value: function _value() {\n      if (!this.currentValue) {\n        return this.placeholder || '';\n      } else {\n        return this.displayFormat ? this.displayFormat(this.currentValue) : this.currentValue;\n      }\n    },\n    pickerOptions: function pickerOptions() {\n      var _this = this;\n      var options = {\n        trigger: '#vux-datetime-' + this.uuid,\n        format: this.format,\n        value: this.currentValue,\n        output: '.vux-datetime-value',\n        confirmText: _this.getButtonText('confirm'),\n        cancelText: _this.getButtonText('cancel'),\n        clearText: _this.clearText,\n        yearRow: this.yearRow,\n        monthRow: this.monthRow,\n        dayRow: this.dayRow,\n        hourRow: this.hourRow,\n        minuteRow: this.minuteRow,\n        minHour: this.minHour,\n        maxHour: this.maxHour,\n        startDate: this.startDate,\n        endDate: this.endDate,\n        hourList: this.hourList,\n        minuteList: this.minuteList,\n        defaultSelectedValue: this.defaultSelectedValue,\n        onSelect: function onSelect(type, val, wholeValue) {\n          if (_this.picker && _this.picker.config.renderInline) {\n            _this.$emit('input', wholeValue);\n            _this.$emit('on-change', wholeValue);\n          }\n        },\n        onConfirm: function onConfirm(value) {\n          _this.currentValue = value;\n        },\n        onClear: function onClear(value) {\n          _this.$emit('on-clear', value);\n        },\n        onHide: function onHide() {\n          _this.$emit('update:show', false);\n          _this.validate();\n          _this.$emit('on-hide');\n        },\n        onShow: function onShow() {\n          _this.$emit('update:show', true);\n          _this.$emit('on-show');\n        }\n      };\n      if (this.minYear) {\n        options.minYear = this.minYear;\n      }\n      if (this.maxYear) {\n        options.maxYear = this.maxYear;\n      }\n      return options;\n    },\n    firstError: function firstError() {\n      var key = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_keys___default()(this.errors)[0];\n      return this.errors[key];\n    }\n  },\n  methods: {\n    getButtonText: function getButtonText(type) {\n      if (type === 'cancel' && this.cancelText) {\n        return this.cancelText;\n      } else if (type === 'confirm' && this.confirmText) {\n        return this.confirmText;\n      }\n      return this.$el.getAttribute('data-' + type + '-text');\n    },\n    render: function render() {\n      var _this3 = this;\n\n      this.$nextTick(function () {\n        _this3.picker && _this3.picker.destroy();\n        _this3.picker = new __WEBPACK_IMPORTED_MODULE_2__datetimepicker__[\"a\" /* default */](_this3.pickerOptions);\n      });\n    },\n    validate: function validate() {\n      if (!this.currentValue && this.required) {\n        this.valid = false;\n        this.errors.required = '必填';\n        return;\n      }\n      this.valid = true;\n      this.errors = {};\n    }\n  },\n  watch: {\n    readonly: function readonly(val) {\n      if (val) {\n        this.picker && this.picker.destroy();\n      } else {\n        this.render();\n      }\n    },\n    show: function show(val) {\n      if (val) {\n        this.picker && this.picker.show(this.currentValue);\n      }\n    },\n    currentValue: function currentValue(val, oldVal) {\n      this.$emit('input', val);\n      if (!this.isFirstSetValue) {\n        this.isFirstSetValue = true;\n        oldVal && this.$emit('on-change', val);\n      } else {\n        this.$emit('on-change', val);\n      }\n      this.validate();\n    },\n    startDate: function startDate() {\n      this.render();\n    },\n    endDate: function endDate() {\n      this.render();\n    },\n    format: function format(val) {\n      if (this.currentValue) {\n        this.currentValue = __WEBPACK_IMPORTED_MODULE_6__tools_date_format___default()(this.currentValue, val);\n      }\n      this.render();\n    },\n    value: function value(val) {\n      if (this.picker && this.picker.config.renderInline) {\n        this.currentValue = val;\n        return;\n      }\n      if (this.currentValue !== val) {\n        this.currentValue = val;\n        this.render();\n      }\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.picker && this.picker.destroy();\n  }\n});\n\n/***/ }),\n/* 694 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vux_src_components_datetime_index_vue__ = __webpack_require__(765);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vux_src_components_datetime_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_vux_src_components_datetime_index_vue__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vux_src_components_group_index_vue__ = __webpack_require__(209);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vux_src_components_group_index_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_vux_src_components_group_index_vue__);\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'date-range',\n  mixins: [],\n  props: {\n    startTime: {\n      type: String,\n      default: ''\n    },\n    endTime: {\n      type: String,\n      default: ''\n    }\n  },\n  data: function data() {\n    return {\n      dateStartTime: '',\n      dateEndTime: ''\n    };\n  },\n\n  computed: {},\n  components: {\n    Group: __WEBPACK_IMPORTED_MODULE_1_vux_src_components_group_index_vue___default.a,\n    Datetime: __WEBPACK_IMPORTED_MODULE_0_vux_src_components_datetime_index_vue___default.a\n  },\n  watch: {},\n  methods: {\n    setStartTime: function setStartTime() {\n\n      this.$emit('changeDate', {\n        dateStartTime: this.dateStartTime,\n        dateEndTime: this.dateEndTime\n      });\n    },\n    setEndTime: function setEndTime() {\n\n      this.$emit('changeDate', {\n        dateStartTime: this.dateStartTime,\n        dateEndTime: this.dateEndTime\n      });\n    },\n    checkTime: function checkTime() {\n      if (Date.parse(this.dateStartTime) >= Date.parse(this.dateEndTime)) {\n        this.$vux.toast.show({\n          text: '起始时间必须小于结束时间',\n          time: 1000,\n          type: 'warn'\n        });\n        return false;\n      }\n      return true;\n    }\n  },\n  created: function created() {\n    this.dateStartTime = this.startTime;\n    this.dateEndTime = this.endTime;\n  },\n  mounted: function mounted() {}\n});\n\n/***/ }),\n/* 695 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__picker_scroller__ = __webpack_require__(211);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util__ = __webpack_require__(698);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__makeData__ = __webpack_require__(697);\n\n\n\n\nvar MASK_TEMPLATE = '<div class=\"dp-mask\"></div>';\n\nvar TEMPLATE = '<div class=\"dp-container\">\\n  <div class=\"dp-header\">\\n    <div class=\"dp-item dp-left vux-datetime-cancel\" data-role=\"cancel\">cancel</div>\\n    <div class=\"dp-item vux-datetime-clear\" data-role=\"clear\"></div>\\n    <div class=\"dp-item dp-right vux-datetime-confirm\" data-role=\"confirm\">ok</div>\\n  </div>\\n  <div class=\"dp-content\">\\n    <div class=\"dp-item\" data-role=\"year\"></div>\\n    <div class=\"dp-item\" data-role=\"month\"></div>\\n    <div class=\"dp-item\" data-role=\"day\"></div>\\n    <div class=\"dp-item\" data-role=\"hour\"></div>\\n    <div class=\"dp-item\" data-role=\"minute\"></div>\\n  </div>\\n</div>';\n\nvar SHOW_ANIMATION_TIME = 100;\nvar SHOW_CONTAINER_TIME = 300;\n\nvar TYPE_MAP = {\n  year: ['YYYY'],\n  month: ['MM', 'M'],\n  day: ['DD', 'D'],\n  hour: ['HH', 'H'],\n  minute: ['mm', 'm']\n};\n\nvar MASK = null;\n\nvar CURRENT_PICKER = void 0;\n\nvar NOW = new Date();\n\nvar DEFAULT_CONFIG = {\n  template: TEMPLATE,\n  trigger: null,\n  output: null,\n  currentYear: NOW.getFullYear(),\n  currentMonth: NOW.getMonth() + 1,\n  minYear: 2000,\n  maxYear: 2030,\n  minHour: 0,\n  maxHour: 23,\n  hourList: null,\n  minuteList: null,\n  startDate: null,\n  endDate: null,\n  yearRow: '{value}',\n  monthRow: '{value}',\n  dayRow: '{value}',\n  hourRow: '{value}',\n  minuteRow: '{value}',\n  format: 'YYYY-MM-DD',\n  value: NOW.getFullYear() + '-' + (NOW.getMonth() + 1) + '-' + NOW.getDate(),\n  onSelect: function onSelect() {},\n  onConfirm: function onConfirm() {},\n  onClear: function onClear() {},\n  onShow: function onShow() {},\n  onHide: function onHide() {},\n\n  confirmText: 'ok',\n  clearText: '',\n  cancelText: 'cancel',\n  destroyOnHide: false,\n  renderInline: false\n};\n\nfunction renderScroller(el, data, value, fn) {\n  data = data.map(function (one) {\n    one.value = one.value + '';\n    return one;\n  });\n  return new __WEBPACK_IMPORTED_MODULE_0__picker_scroller__[\"a\" /* default */](el, {\n    data: data,\n    defaultValue: value + '',\n    onSelect: fn\n  });\n}\n\nfunction showMask() {\n  if (!MASK) {\n    MASK = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__util__[\"a\" /* toElement */])(MASK_TEMPLATE);\n    document.body.appendChild(MASK);\n\n    MASK.addEventListener('click', function () {\n      CURRENT_PICKER && CURRENT_PICKER.hide();\n    }, false);\n  }\n\n  MASK.style.display = 'block';\n\n  setTimeout(function () {\n    MASK && (MASK.style.opacity = 0.5);\n  }, 0);\n}\n\nfunction hideMask() {\n  if (!MASK) {\n    return;\n  }\n\n  MASK.style.opacity = 0;\n\n  setTimeout(function () {\n    MASK && (MASK.style.display = 'none');\n  }, SHOW_ANIMATION_TIME);\n}\n\nfunction DatetimePicker(config) {\n  var self = this;\n  self.config = {};\n  self.value = config.value || '';\n  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__util__[\"b\" /* each */])(DEFAULT_CONFIG, function (key, val) {\n    self.config[key] = config[key] || val;\n  });\n\n  this.renderInline = self.config.renderInline;\n\n  if (config.defaultSelectedValue && !config.value) {\n    self.config.value = config.defaultSelectedValue;\n  }\n\n  if (typeof this.config.startDate === 'string') {\n    this.config.startDate = new Date(this.config.startDate.replace(/-/g, '/'));\n  }\n\n  if (typeof this.config.endDate === 'string') {\n    this.config.endDate = new Date(this.config.endDate.replace(/-/g, '/'));\n  }\n\n  if (this.config.startDate && !this.config.endDate) {\n    this.config.endDate = new Date('2030-12-31');\n  }\n\n  this.reMakeData = !!this.config.startDate && !!this.config.endDate;\n\n  if (!this.renderInline) {\n    var trigger = self.config.trigger;\n\n    this.triggerHandler = function (e) {\n      e.preventDefault();\n      self.show(self.value);\n    };\n    if (trigger) {\n      trigger = self.trigger = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__util__[\"c\" /* getElement */])(trigger);\n      this.trigger = trigger;\n      this.trigger.addEventListener('click', this.triggerHandler, false);\n    }\n  }\n}\n\nDatetimePicker.prototype = {\n  _show: function _show(newValueMap) {\n    var self = this;\n\n    self.container.style.display = 'block';\n\n    if (this.renderInline) {\n      self.container.classList.add('vux-datetime-view');\n    }\n\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__util__[\"b\" /* each */])(TYPE_MAP, function (type) {\n      self[type + 'Scroller'] && self[type + 'Scroller'].select(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__util__[\"d\" /* trimZero */])(newValueMap[type]), false);\n    });\n\n    setTimeout(function () {\n      self.container.style['-webkit-transform'] = 'translateY(0)';\n      self.container.style.transform = 'translateY(0)';\n    }, 0);\n  },\n  show: function show(value) {\n    var self = this;\n    var config = self.config;\n    CURRENT_PICKER = self;\n    var valueMap = self.valueMap = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__util__[\"e\" /* parseDate */])(config.format, value || config.value);\n    var newValueMap = {};\n\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__util__[\"b\" /* each */])(TYPE_MAP, function (type, list) {\n      newValueMap[type] = list.length === 1 ? valueMap[list[0]] : valueMap[list[0]] || valueMap[list[1]];\n    });\n\n    if (self.container) {\n      self._show(newValueMap);\n    } else {\n      var container = self.container = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__util__[\"a\" /* toElement */])(config.template);\n      if (!self.renderInline) {\n        document.body.appendChild(container);\n\n        self.container.style.display = 'block';\n      } else {\n        document.querySelector(self.config.trigger).appendChild(container);\n      }\n\n      __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__util__[\"b\" /* each */])(TYPE_MAP, function (type) {\n        var div = self.find('[data-role=' + type + ']');\n        if (newValueMap[type] === undefined) {\n          __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__util__[\"f\" /* removeElement */])(div);\n          return;\n        }\n        var data = void 0;\n        if (type === 'day') {\n          data = self._makeData(type, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__util__[\"d\" /* trimZero */])(newValueMap.year), __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__util__[\"d\" /* trimZero */])(newValueMap.month));\n        } else {\n          data = self._makeData(type);\n        }\n\n        self[type + 'Scroller'] = renderScroller(div, data, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__util__[\"d\" /* trimZero */])(newValueMap[type]), function (currentValue) {\n          config.onSelect.call(self, type, currentValue, self.getValue());\n          var currentDay = void 0;\n          if (type === 'year') {\n            var currentMonth = self.monthScroller ? self.monthScroller.value : config.currentMonth;\n            self._setMonthScroller(currentValue, currentMonth);\n            if (self.dayScroller) {\n              currentDay = self.dayScroller.value;\n              self._setDayScroller(currentValue, currentMonth, currentDay);\n            }\n          } else if (type === 'month') {\n            var currentYear = self.yearScroller ? self.yearScroller.value : config.currentYear;\n            if (self.dayScroller) {\n              currentDay = self.dayScroller.value;\n              self._setDayScroller(currentYear, currentValue, currentDay);\n            }\n          }\n        });\n      });\n\n      if (!self.renderText && !self.renderInline) {\n        if (self.config.confirmText) {\n          self.find('[data-role=confirm]').innerText = self.config.confirmText;\n        }\n\n        if (self.config.cancelText) {\n          self.find('[data-role=cancel]').innerText = self.config.cancelText;\n        }\n        if (self.config.clearText) {\n          self.find('[data-role=clear]').innerText = self.config.clearText;\n        }\n        self.renderText = true;\n      }\n\n      this._show(newValueMap);\n\n      self.find('[data-role=cancel]').addEventListener('click', function (e) {\n        e.preventDefault();\n        self.hide();\n      }, false);\n\n      self.find('[data-role=confirm]').addEventListener('click', function (e) {\n        e.preventDefault();\n        self.confirm();\n      }, false);\n\n      if (self.config.clearText) {\n        self.find('[data-role=clear]').addEventListener('click', function (e) {\n          e.preventDefault();\n          self.clear();\n        }, false);\n      }\n    }\n\n    if (!this.renderInline) {\n      showMask();\n      config.onShow.call(self);\n    }\n  },\n  _makeData: function _makeData(type, year, month) {\n    var config = this.config;\n    var valueMap = this.valueMap;\n    var list = TYPE_MAP[type];\n    var data = [];\n    var min = void 0;\n    var max = void 0;\n\n    if (type === 'year') {\n      min = config.minYear;\n      max = config.maxYear;\n      if (this.reMakeData) {\n        var _getYears = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__makeData__[\"a\" /* getYears */])(this.config.startDate, this.config.endDate),\n            minYear = _getYears.minYear,\n            maxYear = _getYears.maxYear;\n\n        min = minYear;\n        max = maxYear;\n      }\n    } else if (type === 'month') {\n      min = 1;\n      max = 12;\n      if (this.reMakeData) {\n        var _getMonths = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__makeData__[\"b\" /* getMonths */])(this.config.startDate, this.config.endDate, this.yearScroller.value * 1),\n            minMonth = _getMonths.minMonth,\n            maxMonth = _getMonths.maxMonth;\n\n        min = Math.max(min, minMonth);\n        max = Math.min(max, maxMonth);\n      }\n    } else if (type === 'day') {\n      min = 1;\n      max = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__util__[\"g\" /* getMaxDay */])(year, month);\n      if (this.reMakeData) {\n        var _getDays = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__makeData__[\"c\" /* getDays */])(this.config.startDate, this.config.endDate, this.yearScroller.value * 1, this.monthScroller.value * 1),\n            minDay = _getDays.minDay,\n            maxDay = _getDays.maxDay;\n\n        min = Math.max(min, minDay);\n        max = Math.min(max, maxDay);\n      }\n    } else if (type === 'hour') {\n      min = this.config.minHour;\n      max = this.config.maxHour;\n    } else if (type === 'minute') {\n      min = 0;\n      max = 59;\n    }\n    for (var i = min; i <= max; i++) {\n      var name = void 0;\n      if (type === 'year') {\n        name = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__util__[\"h\" /* parseRow */])(config.yearRow, i);\n      } else {\n        var val = valueMap[list[0]] ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__util__[\"i\" /* addZero */])(i) : i;\n        name = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__util__[\"h\" /* parseRow */])(config[type + 'Row'], val);\n      }\n      data.push({\n        name: name,\n        value: i\n      });\n    }\n    if (type === 'hour' && this.config.hourList) {\n      data = this.config.hourList.map(function (hour) {\n        return {\n          name: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__util__[\"h\" /* parseRow */])(config['hourRow'], hour),\n          value: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__util__[\"i\" /* addZero */])(hour)\n        };\n      });\n    }\n    if (type === 'minute' && this.config.minuteList) {\n      data = this.config.minuteList.map(function (minute) {\n        return {\n          name: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__util__[\"h\" /* parseRow */])(config['minuteRow'], minute),\n          value: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__util__[\"i\" /* addZero */])(minute)\n        };\n      });\n    }\n    return data;\n  },\n  _setMonthScroller: function _setMonthScroller(currentValue, month) {\n    var self = this;\n    this.monthScroller.destroy();\n    var div = self.find('[data-role=month]');\n    self.monthScroller = renderScroller(div, self._makeData('month'), month, function (currentValue) {\n      self.config.onSelect.call(self, 'month', currentValue, self.getValue());\n      var currentYear = self.yearScroller ? self.yearScroller.value : self.config.currentYear;\n      if (self.dayScroller) {\n        var currentDay = self.dayScroller.value;\n        self._setDayScroller(currentYear, currentValue, currentDay);\n      }\n    });\n  },\n  _setDayScroller: function _setDayScroller(year, month, day) {\n    var self = this;\n    var maxDay = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__util__[\"g\" /* getMaxDay */])(year, month);\n    if (day > maxDay) {\n      day = maxDay;\n    }\n    self.dayScroller.destroy();\n    var div = self.find('[data-role=day]');\n    self.dayScroller = renderScroller(div, self._makeData('day', year, month), day, function (currentValue) {\n      self.config.onSelect.call(self, 'day', currentValue, self.getValue());\n    });\n  },\n  find: function find(selector) {\n    return this.container.querySelector(selector);\n  },\n  hide: function hide() {\n    if (!this.container) {\n      return;\n    }\n    var self = this;\n    self.container.style.removeProperty('transform');\n    self.container.style.removeProperty('-webkit-transform');\n\n    setTimeout(function () {\n      self.container && (self.container.style.display = 'none');\n    }, SHOW_CONTAINER_TIME);\n\n    hideMask();\n\n    self.config.onHide.call(self);\n    if (self.config.destroyOnHide) {\n      setTimeout(function () {\n        self.destroy();\n      }, 500);\n    }\n  },\n  select: function select(type, value) {\n    this[type + 'Scroller'].select(value, false);\n  },\n  destroy: function destroy() {\n    var self = this;\n    this.trigger && this.trigger.removeEventListener('click', this.triggerHandler, false);\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__util__[\"f\" /* removeElement */])(MASK);\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__util__[\"f\" /* removeElement */])(self.container);\n    MASK = null;\n    self.container = null;\n  },\n  getValue: function getValue() {\n    var self = this;\n    var config = self.config;\n\n    var value = config.format;\n\n    function formatValue(scroller, expr1, expr2) {\n      if (scroller) {\n        var val = scroller.value;\n        if (expr1) {\n          value = value.replace(new RegExp(expr1, 'g'), __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__util__[\"i\" /* addZero */])(val));\n        }\n        if (expr2) {\n          value = value.replace(new RegExp(expr2, 'g'), __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__util__[\"d\" /* trimZero */])(val));\n        }\n      }\n    }\n\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__util__[\"b\" /* each */])(TYPE_MAP, function (key, list) {\n      formatValue(self[key + 'Scroller'], list[0], list[1]);\n    });\n\n    return value;\n  },\n  confirm: function confirm() {\n    var value = this.getValue();\n    this.value = value;\n\n    if (this.config.onConfirm.call(this, value) === false) {\n      return;\n    }\n\n    this.hide();\n  },\n  clear: function clear() {\n    var value = this.getValue();\n\n    if (this.config.onClear.call(this, value) === false) {\n      return;\n    }\n\n    this.hide();\n  }\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (DatetimePicker);\n\n/***/ }),\n/* 696 */\n/***/ (function(module, exports) {\n\nmodule.exports = function (date) {\n  var fmt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'YYYY-MM-DD HH:mm:ss';\n\n  var o = {\n    'M+': date.getMonth() + 1,\n    'D+': date.getDate(),\n    'h+': date.getHours() % 12 === 0 ? 12 : date.getHours() % 12,\n    'H+': date.getHours(),\n    'm+': date.getMinutes(),\n    's+': date.getSeconds(),\n    'q+': Math.floor((date.getMonth() + 3) / 3),\n    'S': date.getMilliseconds()\n  };\n  var week = {\n    '0': '\\u65E5',\n    '1': '\\u4E00',\n    '2': '\\u4E8C',\n    '3': '\\u4E09',\n    '4': '\\u56DB',\n    '5': '\\u4E94',\n    '6': '\\u516D'\n  };\n  if (/(Y+)/.test(fmt)) {\n    fmt = fmt.replace(RegExp.$1, (date.getFullYear() + '').substr(4 - RegExp.$1.length));\n  }\n  if (/(E+)/.test(fmt)) {\n    fmt = fmt.replace(RegExp.$1, (RegExp.$1.length > 1 ? RegExp.$1.length > 2 ? '\\u661F\\u671F' : '\\u5468' : '') + week[date.getDay() + '']);\n  }\n  for (var k in o) {\n    if (new RegExp('(' + k + ')').test(fmt)) {\n      fmt = fmt.replace(RegExp.$1, RegExp.$1.length === 1 ? o[k] : ('00' + o[k]).substr(('' + o[k]).length));\n    }\n  }\n  return fmt;\n};\n\n/***/ }),\n/* 697 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return getYears; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return getMonths; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return getDays; });\nfunction isLeapYear(year) {\n  return year % 100 !== 0 && year % 4 === 0 || year % 400 === 0;\n}\n\nfunction getMaxDay(year, month) {\n  year = parseFloat(year);\n  month = parseFloat(month);\n  if (month === 2) {\n    return isLeapYear(year) ? 29 : 28;\n  }\n  return [4, 6, 9, 11].indexOf(month) >= 0 ? 30 : 31;\n}\n\nfunction getYears(startDate, endDate) {\n  var startYear = startDate.getFullYear();\n  var endYear = endDate.getFullYear();\n  var rs = [];\n  while (startYear <= endYear) {\n    rs.push(startYear);\n    startYear++;\n  }\n  return {\n    minYear: rs[0],\n    maxYear: rs[rs.length - 1]\n  };\n}\n\nfunction getMonths(startDate, endDate, year) {\n  var startYear = startDate.getFullYear();\n  var endYear = endDate.getFullYear();\n  var startMonth = startDate.getMonth() + 1;\n  var endMonth = endDate.getMonth() + 1;\n  var start = 1;\n  var end = 12;\n  if (year === startYear) {\n    start = startMonth;\n  }\n  if (year === endYear) {\n    end = endMonth;\n  }\n  return {\n    minMonth: start,\n    maxMonth: end\n  };\n}\n\nfunction getDays(startDate, endDate, year, month) {\n  var startYear = startDate.getFullYear();\n  var endYear = endDate.getFullYear();\n  var startMonth = startDate.getMonth() + 1;\n  var endMonth = endDate.getMonth() + 1;\n  var startDay = startDate.getDate();\n  var endDay = endDate.getDate();\n\n  var start = 1;\n  var end = getMaxDay(year, month);\n\n  if (year === startYear && month === startMonth) {\n    start = startDay;\n  }\n  if (year === endYear && month === endMonth) {\n    end = endDay;\n  }\n  return {\n    minDay: start,\n    maxDay: end\n  };\n}\n\n\n\n/***/ }),\n/* 698 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = each;\n/* harmony export (immutable) */ __webpack_exports__[\"d\"] = trimZero;\n/* harmony export (immutable) */ __webpack_exports__[\"i\"] = addZero;\n/* unused harmony export isLeapYear */\n/* harmony export (immutable) */ __webpack_exports__[\"g\"] = getMaxDay;\n/* harmony export (immutable) */ __webpack_exports__[\"h\"] = parseRow;\n/* harmony export (immutable) */ __webpack_exports__[\"e\"] = parseDate;\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = getElement;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = toElement;\n/* harmony export (immutable) */ __webpack_exports__[\"f\"] = removeElement;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__format__ = __webpack_require__(696);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__format___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__format__);\n\n\nfunction each(obj, fn) {\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      if (fn.call(obj[key], key, obj[key]) === false) {\n        break;\n      }\n    }\n  }\n}\n\nfunction trimZero(val) {\n  val = String(val);\n  val = val ? parseFloat(val.replace(/^0+/g, '')) : '';\n  val = val || 0;\n  val = val + '';\n  return val;\n}\n\nfunction addZero(val) {\n  val = String(val);\n  return val.length < 2 ? '0' + val : val;\n}\n\nfunction isLeapYear(year) {\n  return year % 100 !== 0 && year % 4 === 0 || year % 400 === 0;\n}\n\nfunction getMaxDay(year, month) {\n  year = parseFloat(year);\n  month = parseFloat(month);\n  if (month === 2) {\n    return isLeapYear(year) ? 29 : 28;\n  }\n  return [4, 6, 9, 11].indexOf(month) >= 0 ? 30 : 31;\n}\n\nfunction parseRow(tmpl, value) {\n  return tmpl.replace(/\\{value\\}/g, value);\n}\n\nfunction parseDate(format, value) {\n  var formatParts = format.split(/[^A-Za-z]+/);\n  var valueParts = value.split(/\\D+/);\n  if (formatParts.length !== valueParts.length) {\n    var date = __WEBPACK_IMPORTED_MODULE_0__format___default()(new Date(), format);\n    valueParts = date.split(/\\D+/);\n  }\n\n  var result = {};\n\n  for (var i = 0; i < formatParts.length; i++) {\n    if (formatParts[i]) {\n      result[formatParts[i]] = valueParts[i];\n    }\n  }\n  return result;\n}\n\nfunction getElement(expr) {\n  return typeof expr === 'string' ? document.querySelector(expr) : expr;\n}\n\nfunction toElement(html) {\n  var tempContainer = document.createElement('div');\n  tempContainer.innerHTML = html;\n  return tempContainer.firstElementChild;\n}\n\nfunction removeElement(el) {\n  el && el.parentNode.removeChild(el);\n}\n\n/***/ }),\n/* 699 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  created: function created() {\n    this.uuid = Math.random().toString(36).substring(3, 8);\n  }\n});\n\n/***/ }),\n/* 700 */,\n/* 701 */,\n/* 702 */,\n/* 703 */,\n/* 704 */,\n/* 705 */,\n/* 706 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(586)();\n// imports\n\n\n// module\nexports.push([module.i, \".date-range{display:-webkit-box;display:-webkit-flex;display:flex}.date-range .time-group{-webkit-box-flex:1;-webkit-flex:1 50%;flex:1 50%}.date-range .time-group .vux-no-group-title{padding-left:.243333333333333rem}.date-range .time-group .vux-no-group-title>a{padding:.121666666666667rem 0;font-size:.373333333333333rem}.date-range .time-group .vux-no-group-title>a .vux-datetime-value:after{display:none}\", \"\", {\"version\":3,\"sources\":[\"/Users/yangran/workspace/industries/src/base/date-range/date-range.vue\"],\"names\":[],\"mappings\":\"AAAA,YACE,oBAAqB,AACrB,qBAAsB,AACtB,YAAc,CACf,AAED,wBACE,mBAAoB,AACpB,mBAAoB,AACpB,UAAY,CACb,AAED,4CACE,gCAAmC,CACpC,AAED,8CACE,8BAAgC,AAChC,6BAAgC,CACjC,AAED,wEACE,YAAc,CACf\",\"file\":\"date-range.vue\",\"sourcesContent\":[\".date-range {\\n  display: -webkit-box;\\n  display: -webkit-flex;\\n  display: flex;\\n}\\n\\n.date-range .time-group {\\n  -webkit-box-flex: 1;\\n  -webkit-flex: 1 50%;\\n  flex: 1 50%;\\n}\\n\\n.date-range .time-group .vux-no-group-title {\\n  padding-left: 0.243333333333333rem;\\n}\\n\\n.date-range .time-group .vux-no-group-title > a {\\n  padding: 0.121666666666667rem 0;\\n  font-size: 0.373333333333333rem;\\n}\\n\\n.date-range .time-group .vux-no-group-title > a .vux-datetime-value::after {\\n  display: none;\\n}\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n/* 707 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(586)();\n// imports\n\n\n// module\nexports.push([module.i, \".dp-container.vux-datetime-view{position:static;-webkit-transition:none;transition:none}.dp-container.vux-datetime-view .dp-header{display:none}.vux-datetime-clear{text-align:center}.scroller-component{display:block;position:relative;height:6.346667rem;overflow:hidden;width:100%}.scroller-content{z-index:-1}.scroller-content,.scroller-mask{position:absolute;left:0;top:0;width:100%}.scroller-mask{height:100%;margin:0 auto;z-index:3;background-image:-webkit-linear-gradient(top,hsla(0,0%,100%,.95),hsla(0,0%,100%,.6)),-webkit-linear-gradient(bottom,hsla(0,0%,100%,.95),hsla(0,0%,100%,.6));background-image:linear-gradient(180deg,hsla(0,0%,100%,.95),hsla(0,0%,100%,.6)),linear-gradient(0deg,hsla(0,0%,100%,.95),hsla(0,0%,100%,.6));background-position:top,bottom;background-size:100% 2.72rem;background-repeat:no-repeat}.scroller-item{text-align:center;font-size:.426667rem;height:.906667rem;line-height:.906667rem;color:#000}.scroller-indicator{width:100%;height:.906667rem;position:absolute;left:0;top:2.72rem;z-index:3;background-image:-webkit-linear-gradient(top,#d0d0d0,#d0d0d0,transparent,transparent),-webkit-linear-gradient(bottom,#d0d0d0,#d0d0d0,transparent,transparent);background-image:linear-gradient(180deg,#d0d0d0,#d0d0d0,transparent,transparent),linear-gradient(0deg,#d0d0d0,#d0d0d0,transparent,transparent);background-position:top,bottom;background-size:100% .026667rem;background-repeat:no-repeat}.dp-container{bottom:0;z-index:10000;background-color:#fff;display:none;-webkit-transition:-webkit-transform .3s ease;transition:-webkit-transform .3s ease;transition:transform .3s ease;transition:transform .3s ease,-webkit-transform .3s ease;-webkit-transform:translateY(100%);transform:translateY(100%)}.dp-container,.dp-mask{position:fixed;width:100%;left:0}.dp-mask{z-index:998;height:100%;top:0;opacity:0;-webkit-transition:opacity .1s ease;transition:opacity .1s ease;background-color:#000;z-index:9999}.dp-header{display:-webkit-box;display:-webkit-flex;display:flex;width:100%;box-align:center;-webkit-box-align:center;-webkit-align-items:center;align-items:center;background-image:-webkit-linear-gradient(top,#e7e7e7,#e7e7e7,transparent,transparent);background-image:linear-gradient(180deg,#e7e7e7,#e7e7e7,transparent,transparent);background-position:bottom;background-size:100% .026667rem;background-repeat:no-repeat}.dp-header .dp-item{color:#04be02;font-size:.426667rem;height:1.173333rem;line-height:1.173333rem;cursor:pointer}.dp-header .dp-item.dp-left{color:#828282}.dp-header .dp-item.dp-right{color:#04be02}.dp-content{display:-webkit-box;display:-webkit-flex;display:flex;width:100%;box-align:center;-webkit-box-align:center;-webkit-align-items:center;align-items:center;padding:.266667rem 0}.dp-content .dp-item,.dp-header .dp-item{box-sizing:border-box;-webkit-box-flex:1;-webkit-flex:1;flex:1}.vux-datetime-cancel{text-align:left;padding-left:.4rem}.vux-datetime-confirm{text-align:right;padding-right:.4rem}.vux-datetime{color:#000}.vux-datetime .vux-input-icon{float:right}.vux-cell-primary{-webkit-box-flex:1;-webkit-flex:1;flex:1}\", \"\", {\"version\":3,\"sources\":[\"/Users/yangran/workspace/industries/node_modules/vux/src/components/datetime/index.vue\"],\"names\":[],\"mappings\":\"AA0IA,gCACE,gBAAiB,AACjB,wBAAyB,AACzB,eAAiB,CAClB,AAED,2CACE,YAAc,CACf,AAED,oBACE,iBAAmB,CACpB,AAED,oBACE,cAAe,AACf,kBAAmB,AACnB,mBAAoB,AACpB,gBAAiB,AACjB,UAAY,CACb,AAED,kBAKE,UAAY,CACb,AAED,iCAPE,kBAAmB,AACnB,OAAQ,AACR,MAAO,AACP,UAAY,CAiBb,AAbD,eAIE,YAAa,AACb,cAAe,AAEf,UAAW,AACX,4JAA0L,AAC1L,6IAAgL,AAChL,+BAAiC,AACjC,6BAA8B,AAC9B,2BAA6B,CAC9B,AAED,eACE,kBAAmB,AACnB,qBAAuB,AACvB,kBAAoB,AACpB,uBAAyB,AACzB,UAAY,CACb,AAED,oBACE,WAAY,AACZ,kBAAoB,AACpB,kBAAmB,AACnB,OAAQ,AACR,YAAa,AACb,UAAW,AACX,8JAAwK,AACxK,+IAA8J,AAC9J,+BAAiC,AACjC,gCAAkC,AAClC,2BAA6B,CAC9B,AAED,cAIE,SAAU,AACV,cAAe,AACf,sBAAuB,AACvB,aAAc,AACd,8CAAgD,AAChD,sCAAwC,AACxC,8BAAgC,AAChC,yDAA6D,AAC7D,mCAAoC,AACpC,0BAA4B,CAC7B,AAED,uBAfE,eAAgB,AAChB,WAAY,AACZ,MAAQ,CAyBT,AAZD,SACE,YAAa,AAGb,YAAa,AAEb,MAAO,AACP,UAAW,AACX,oCAAsC,AACtC,4BAA8B,AAC9B,sBAAuB,AACvB,YAAc,CACf,AAED,WACE,oBAAqB,AACrB,qBAAsB,AACtB,aAAc,AACd,WAAY,AACZ,iBAAkB,AAClB,yBAA0B,AAC1B,2BAA4B,AAC5B,mBAAoB,AACpB,sFAA2F,AAC3F,iFAAyF,AACzF,2BAA4B,AAC5B,gCAAkC,AAClC,2BAA6B,CAC9B,AAED,oBACE,cAAe,AACf,qBAAuB,AACvB,mBAAoB,AACpB,wBAAyB,AACzB,cAAgB,CACjB,AAED,4BACE,aAAe,CAChB,AAED,6BACE,aAAe,CAChB,AAED,YACE,oBAAqB,AACrB,qBAAsB,AACtB,aAAc,AACd,WAAY,AACZ,iBAAkB,AAClB,yBAA0B,AAC1B,2BAA4B,AAC5B,mBAAoB,AACpB,oBAAuB,CACxB,AAED,yCAEE,sBAAuB,AACvB,mBAAoB,AACpB,eAAgB,AAChB,MAAQ,CACT,AAED,qBACE,gBAAiB,AACjB,kBAAqB,CACtB,AAED,sBACE,iBAAkB,AAClB,mBAAsB,CACvB,AAED,cACE,UAAY,CACb,AAED,8BACE,WAAa,CACd,AAED,kBACE,mBAAoB,AACpB,eAAgB,AAChB,MAAQ,CACT\",\"file\":\"index.vue\",\"sourcesContent\":[\"/**\\n* actionsheet\\n*/\\n\\n/**\\n* datetime\\n*/\\n\\n/**\\n* tabbar\\n*/\\n\\n/**\\n* tab\\n*/\\n\\n/**\\n* dialog\\n*/\\n\\n/**\\n* x-number\\n*/\\n\\n/**\\n* checkbox\\n*/\\n\\n/**\\n* check-icon\\n*/\\n\\n/**\\n* Cell\\n*/\\n\\n/**\\n* Mask\\n*/\\n\\n/**\\n* Range\\n*/\\n\\n/**\\n* Tabbar\\n*/\\n\\n/**\\n* Header\\n*/\\n\\n/**\\n* Timeline\\n*/\\n\\n/**\\n* Switch\\n*/\\n\\n/**\\n* Button\\n*/\\n\\n/**\\n* swipeout\\n*/\\n\\n/**\\n* Cell\\n*/\\n\\n/**\\n* Badge\\n*/\\n\\n/**\\n* Popover\\n*/\\n\\n/**\\n* Button tab\\n*/\\n\\n/* alias */\\n\\n/**\\n* Swiper\\n*/\\n\\n/**\\n* checklist\\n*/\\n\\n/**\\n* popup-picker\\n*/\\n\\n/**\\n* popup\\n*/\\n\\n/**\\n* form-preview\\n*/\\n\\n/**\\n* load-more\\n*/\\n\\n/**\\n* sticky\\n*/\\n\\n/**\\n* group\\n*/\\n\\n/**\\n* toast\\n*/\\n\\n/**\\n* icon\\n*/\\n\\n/**\\n* calendar\\n*/\\n\\n/**\\n* search\\n*/\\n\\n/**\\n* radio\\n*/\\n\\n.dp-container.vux-datetime-view {\\n  position: static;\\n  -webkit-transition: none;\\n  transition: none;\\n}\\n\\n.dp-container.vux-datetime-view .dp-header {\\n  display: none;\\n}\\n\\n.vux-datetime-clear {\\n  text-align: center;\\n}\\n\\n.scroller-component {\\n  display: block;\\n  position: relative;\\n  height: 6.346667rem;\\n  overflow: hidden;\\n  width: 100%;\\n}\\n\\n.scroller-content {\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  width: 100%;\\n  z-index: -1;\\n}\\n\\n.scroller-mask {\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  height: 100%;\\n  margin: 0 auto;\\n  width: 100%;\\n  z-index: 3;\\n  background-image: -webkit-linear-gradient(top, rgba(255, 255, 255, 0.95), rgba(255, 255, 255, 0.6)), -webkit-linear-gradient(bottom, rgba(255, 255, 255, 0.95), rgba(255, 255, 255, 0.6));\\n  background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0.95), rgba(255, 255, 255, 0.6)), linear-gradient(to top, rgba(255, 255, 255, 0.95), rgba(255, 255, 255, 0.6));\\n  background-position: top, bottom;\\n  background-size: 100% 2.72rem;\\n  background-repeat: no-repeat;\\n}\\n\\n.scroller-item {\\n  text-align: center;\\n  font-size: 0.426667rem;\\n  height: 0.906667rem;\\n  line-height: 0.906667rem;\\n  color: #000;\\n}\\n\\n.scroller-indicator {\\n  width: 100%;\\n  height: 0.906667rem;\\n  position: absolute;\\n  left: 0;\\n  top: 2.72rem;\\n  z-index: 3;\\n  background-image: -webkit-linear-gradient(top, #d0d0d0, #d0d0d0, transparent, transparent), -webkit-linear-gradient(bottom, #d0d0d0, #d0d0d0, transparent, transparent);\\n  background-image: linear-gradient(to bottom, #d0d0d0, #d0d0d0, transparent, transparent), linear-gradient(to top, #d0d0d0, #d0d0d0, transparent, transparent);\\n  background-position: top, bottom;\\n  background-size: 100% 0.026667rem;\\n  background-repeat: no-repeat;\\n}\\n\\n.dp-container {\\n  position: fixed;\\n  width: 100%;\\n  left: 0;\\n  bottom: 0;\\n  z-index: 10000;\\n  background-color: #fff;\\n  display: none;\\n  -webkit-transition: -webkit-transform 0.3s ease;\\n  transition: -webkit-transform 0.3s ease;\\n  transition: transform 0.3s ease;\\n  transition: transform 0.3s ease, -webkit-transform 0.3s ease;\\n  -webkit-transform: translateY(100%);\\n  transform: translateY(100%);\\n}\\n\\n.dp-mask {\\n  z-index: 998;\\n  position: fixed;\\n  width: 100%;\\n  height: 100%;\\n  left: 0;\\n  top: 0;\\n  opacity: 0;\\n  -webkit-transition: opacity 0.1s ease;\\n  transition: opacity 0.1s ease;\\n  background-color: #000;\\n  z-index: 9999;\\n}\\n\\n.dp-header {\\n  display: -webkit-box;\\n  display: -webkit-flex;\\n  display: flex;\\n  width: 100%;\\n  box-align: center;\\n  -webkit-box-align: center;\\n  -webkit-align-items: center;\\n  align-items: center;\\n  background-image: -webkit-linear-gradient(top, #e7e7e7, #e7e7e7, transparent, transparent);\\n  background-image: linear-gradient(to bottom, #e7e7e7, #e7e7e7, transparent, transparent);\\n  background-position: bottom;\\n  background-size: 100% 0.026667rem;\\n  background-repeat: no-repeat;\\n}\\n\\n.dp-header .dp-item {\\n  color: #04BE02;\\n  font-size: 0.426667rem;\\n  height: 1.173333rem;\\n  line-height: 1.173333rem;\\n  cursor: pointer;\\n}\\n\\n.dp-header .dp-item.dp-left {\\n  color: #828282;\\n}\\n\\n.dp-header .dp-item.dp-right {\\n  color: #04BE02;\\n}\\n\\n.dp-content {\\n  display: -webkit-box;\\n  display: -webkit-flex;\\n  display: flex;\\n  width: 100%;\\n  box-align: center;\\n  -webkit-box-align: center;\\n  -webkit-align-items: center;\\n  align-items: center;\\n  padding: 0.266667rem 0;\\n}\\n\\n.dp-header .dp-item,\\n.dp-content .dp-item {\\n  box-sizing: border-box;\\n  -webkit-box-flex: 1;\\n  -webkit-flex: 1;\\n  flex: 1;\\n}\\n\\n.vux-datetime-cancel {\\n  text-align: left;\\n  padding-left: 0.4rem;\\n}\\n\\n.vux-datetime-confirm {\\n  text-align: right;\\n  padding-right: 0.4rem;\\n}\\n\\n.vux-datetime {\\n  color: #000;\\n}\\n\\n.vux-datetime .vux-input-icon {\\n  float: right;\\n}\\n\\n.vux-cell-primary {\\n  -webkit-box-flex: 1;\\n  -webkit-flex: 1;\\n  flex: 1;\\n}\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n/* 708 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(606);\n\n    var echartsAPIList = [\n        'getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed',\n        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption',\n        'getViewOfComponentModel', 'getViewOfSeriesModel'\n    ];\n    // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\n    function ExtensionAPI(chartInstance) {\n        zrUtil.each(echartsAPIList, function (name) {\n            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n        }, this);\n    }\n\n    module.exports = ExtensionAPI;\n\n\n/***/ }),\n/* 709 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n\n    var graphic = __webpack_require__(608);\n    var Symbol = __webpack_require__(657);\n\n    /**\n     * @constructor\n     * @alias module:echarts/chart/helper/SymbolDraw\n     * @param {module:zrender/graphic/Group} [symbolCtor]\n     */\n    function SymbolDraw(symbolCtor) {\n        this.group = new graphic.Group();\n\n        this._symbolCtor = symbolCtor || Symbol;\n    }\n\n    var symbolDrawProto = SymbolDraw.prototype;\n\n    function symbolNeedsDraw(data, idx, isIgnore) {\n        var point = data.getItemLayout(idx);\n        // Is an object\n        // if (point && point.hasOwnProperty('point')) {\n        //     point = point.point;\n        // }\n        return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx))\n                    && data.getItemVisual(idx, 'symbol') !== 'none';\n    }\n    /**\n     * Update symbols draw by new data\n     * @param {module:echarts/data/List} data\n     * @param {Array.<boolean>} [isIgnore]\n     */\n    symbolDrawProto.updateData = function (data, isIgnore) {\n        var group = this.group;\n        var seriesModel = data.hostModel;\n        var oldData = this._data;\n\n        var SymbolCtor = this._symbolCtor;\n\n        var seriesScope = {\n            itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n            hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n            symbolRotate: seriesModel.get('symbolRotate'),\n            symbolOffset: seriesModel.get('symbolOffset'),\n            hoverAnimation: seriesModel.get('hoverAnimation'),\n\n            labelModel: seriesModel.getModel('label.normal'),\n            hoverLabelModel: seriesModel.getModel('label.emphasis'),\n            cursorStyle: seriesModel.get('cursor')\n        };\n\n        data.diff(oldData)\n            .add(function (newIdx) {\n                var point = data.getItemLayout(newIdx);\n                if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n                    symbolEl.attr('position', point);\n                    data.setItemGraphicEl(newIdx, symbolEl);\n                    group.add(symbolEl);\n                }\n            })\n            .update(function (newIdx, oldIdx) {\n                var symbolEl = oldData.getItemGraphicEl(oldIdx);\n                var point = data.getItemLayout(newIdx);\n                if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    group.remove(symbolEl);\n                    return;\n                }\n                if (!symbolEl) {\n                    symbolEl = new SymbolCtor(data, newIdx);\n                    symbolEl.attr('position', point);\n                }\n                else {\n                    symbolEl.updateData(data, newIdx, seriesScope);\n                    graphic.updateProps(symbolEl, {\n                        position: point\n                    }, seriesModel);\n                }\n\n                // Add back\n                group.add(symbolEl);\n\n                data.setItemGraphicEl(newIdx, symbolEl);\n            })\n            .remove(function (oldIdx) {\n                var el = oldData.getItemGraphicEl(oldIdx);\n                el && el.fadeOut(function () {\n                    group.remove(el);\n                });\n            })\n            .execute();\n\n        this._data = data;\n    };\n\n    symbolDrawProto.updateLayout = function () {\n        var data = this._data;\n        if (data) {\n            // Not use animation\n            data.eachItemGraphicEl(function (el, idx) {\n                var point = data.getItemLayout(idx);\n                el.attr('position', point);\n            });\n        }\n    };\n\n    symbolDrawProto.remove = function (enableAnimation) {\n        var group = this.group;\n        var data = this._data;\n        if (data) {\n            if (enableAnimation) {\n                data.eachItemGraphicEl(function (el) {\n                    el.fadeOut(function () {\n                        group.remove(el);\n                    });\n                });\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    };\n\n    module.exports = SymbolDraw;\n\n\n/***/ }),\n/* 710 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var graphic = __webpack_require__(608);\n    var modelUtil = __webpack_require__(609);\n\n    var helper = {};\n\n    helper.findLabelValueDim = function (data) {\n        var valueDim;\n        var labelDims = modelUtil.otherDimToDataDim(data, 'label');\n\n        if (labelDims.length) {\n            valueDim = labelDims[0];\n        }\n        else {\n            // Get last value dim\n            var dimensions = data.dimensions.slice();\n            var dataType;\n            while (dimensions.length && (\n                valueDim = dimensions.pop(),\n                dataType = data.getDimensionInfo(valueDim).type,\n                dataType === 'ordinal' || dataType === 'time'\n            )) {} // jshint ignore:line\n        }\n\n        return valueDim;\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n/* 711 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var echarts = __webpack_require__(607);\n    var PRIORITY = echarts.PRIORITY;\n\n    __webpack_require__(712);\n    __webpack_require__(713);\n\n    echarts.registerVisual(zrUtil.curry(\n        __webpack_require__(688), 'line', 'circle', 'line'\n    ));\n    echarts.registerLayout(zrUtil.curry(\n        __webpack_require__(741), 'line'\n    ));\n\n    // Down sample after filter\n    echarts.registerProcessor(PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(\n        __webpack_require__(753), 'line'\n    ));\n\n    // In case developer forget to include grid component\n    __webpack_require__(683);\n\n\n/***/ }),\n/* 712 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var createListFromArray = __webpack_require__(648);\n    var SeriesModel = __webpack_require__(640);\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.line',\n\n        dependencies: ['grid', 'polar'],\n\n        getInitialData: function (option, ecModel) {\n            if (__DEV__) {\n                var coordSys = option.coordinateSystem;\n                if (coordSys !== 'polar' && coordSys !== 'cartesian2d') {\n                    throw new Error('Line not support coordinateSystem besides cartesian and polar');\n                }\n            }\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // stack: null\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // polarIndex: 0,\n\n            // If clip the overflow value\n            clipOverflow: true,\n            // cursor: null,\n\n            label: {\n                normal: {\n                    position: 'top'\n                }\n            },\n            // itemStyle: {\n            //     normal: {},\n            //     emphasis: {}\n            // },\n            lineStyle: {\n                normal: {\n                    width: 2,\n                    type: 'solid'\n                }\n            },\n            // areaStyle: {},\n            // false, 'start', 'end', 'middle'\n            step: false,\n\n            // Disabled if step is true\n            smooth: false,\n            smoothMonotone: null,\n            // 拐点图形类型\n            symbol: 'emptyCircle',\n            // 拐点图形大小\n            symbolSize: 4,\n            // 拐点图形旋转控制\n            symbolRotate: null,\n\n            // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n            showSymbol: true,\n            // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n            showAllSymbol: false,\n\n            // 是否连接断点\n            connectNulls: false,\n\n            // 数据过滤，'average', 'max', 'min', 'sum'\n            sampling: 'none',\n\n            animationEasing: 'linear',\n\n            // Disable progressive\n            progressive: 0,\n            hoverLayerThreshold: Infinity\n        }\n    });\n\n\n/***/ }),\n/* 713 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// FIXME step not support polar\n\n\n    var zrUtil = __webpack_require__(606);\n    var SymbolDraw = __webpack_require__(709);\n    var Symbol = __webpack_require__(657);\n    var lineAnimationDiff = __webpack_require__(714);\n    var graphic = __webpack_require__(608);\n    var modelUtil = __webpack_require__(609);\n    var polyHelper = __webpack_require__(715);\n    var ChartView = __webpack_require__(641);\n\n    function isPointsSame(points1, points2) {\n        if (points1.length !== points2.length) {\n            return;\n        }\n        for (var i = 0; i < points1.length; i++) {\n            var p1 = points1[i];\n            var p2 = points2[i];\n            if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n                return;\n            }\n        }\n        return true;\n    }\n\n    function getSmooth(smooth) {\n        return typeof (smooth) === 'number' ? smooth : (smooth ? 0.3 : 0);\n    }\n\n    function getAxisExtentWithGap(axis) {\n        var extent = axis.getGlobalExtent();\n        if (axis.onBand) {\n            // Remove extra 1px to avoid line miter in clipped edge\n            var halfBandWidth = axis.getBandWidth() / 2 - 1;\n            var dir = extent[1] > extent[0] ? 1 : -1;\n            extent[0] += dir * halfBandWidth;\n            extent[1] -= dir * halfBandWidth;\n        }\n        return extent;\n    }\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n    /**\n     * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n     * @param {module:echarts/data/List} data\n     * @param {Array.<Array.<number>>} points\n     * @private\n     */\n    function getStackedOnPoints(coordSys, data) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        return data.mapArray([valueDim], function (val, idx) {\n            var stackedOnSameSign;\n            var stackedOn = data.stackedOn;\n            // Find first stacked value with same sign\n            while (stackedOn &&\n                sign(stackedOn.get(valueDim, idx)) === sign(val)\n            ) {\n                stackedOnSameSign = stackedOn;\n                break;\n            }\n            var stackedData = [];\n            stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n            stackedData[1 - baseDataOffset] = stackedOnSameSign\n                ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n            return coordSys.dataToPoint(stackedData);\n        }, true);\n    }\n\n    function createGridClipShape(cartesian, hasAnimation, seriesModel) {\n        var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n        var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n        var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n\n        var x = Math.min(xExtent[0], xExtent[1]);\n        var y = Math.min(yExtent[0], yExtent[1]);\n        var width = Math.max(xExtent[0], xExtent[1]) - x;\n        var height = Math.max(yExtent[0], yExtent[1]) - y;\n        var lineWidth = seriesModel.get('lineStyle.normal.width') || 2;\n        // Expand clip shape to avoid clipping when line value exceeds axis\n        var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n        if (isHorizontal) {\n            y -= expandSize;\n            height += expandSize * 2;\n        }\n        else {\n            x -= expandSize;\n            width += expandSize * 2;\n        }\n\n        var clipPath = new graphic.Rect({\n            shape: {\n                x: x,\n                y: y,\n                width: width,\n                height: height\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n            graphic.initProps(clipPath, {\n                shape: {\n                    width: width,\n                    height: height\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createPolarClipShape(polar, hasAnimation, seriesModel) {\n        var angleAxis = polar.getAngleAxis();\n        var radiusAxis = polar.getRadiusAxis();\n\n        var radiusExtent = radiusAxis.getExtent();\n        var angleExtent = angleAxis.getExtent();\n\n        var RADIAN = Math.PI / 180;\n\n        var clipPath = new graphic.Sector({\n            shape: {\n                cx: polar.cx,\n                cy: polar.cy,\n                r0: radiusExtent[0],\n                r: radiusExtent[1],\n                startAngle: -angleExtent[0] * RADIAN,\n                endAngle: -angleExtent[1] * RADIAN,\n                clockwise: angleAxis.inverse\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: -angleExtent[1] * RADIAN\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createClipShape(coordSys, hasAnimation, seriesModel) {\n        return coordSys.type === 'polar'\n            ? createPolarClipShape(coordSys, hasAnimation, seriesModel)\n            : createGridClipShape(coordSys, hasAnimation, seriesModel);\n    }\n\n    function turnPointsIntoStep(points, coordSys, stepTurnAt) {\n        var baseAxis = coordSys.getBaseAxis();\n        var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n\n        var stepPoints = [];\n        for (var i = 0; i < points.length - 1; i++) {\n            var nextPt = points[i + 1];\n            var pt = points[i];\n            stepPoints.push(pt);\n\n            var stepPt = [];\n            switch (stepTurnAt) {\n                case 'end':\n                    stepPt[baseIndex] = nextPt[baseIndex];\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n                    break;\n                case 'middle':\n                    // default is start\n                    var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n                    var stepPt2 = [];\n                    stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n                    stepPoints.push(stepPt);\n                    stepPoints.push(stepPt2);\n                    break;\n                default:\n                    stepPt[baseIndex] = pt[baseIndex];\n                    stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n            }\n        }\n        // Last points\n        points[i] && stepPoints.push(points[i]);\n        return stepPoints;\n    }\n\n    function getVisualGradient(data, coordSys) {\n        var visualMetaList = data.getVisual('visualMeta');\n        if (!visualMetaList || !visualMetaList.length || !data.count()) {\n            // When data.count() is 0, gradient range can not be calculated.\n            return;\n        }\n\n        var visualMeta;\n        for (var i = visualMetaList.length - 1; i >= 0; i--) {\n            // Can only be x or y\n            if (visualMetaList[i].dimension < 2) {\n                visualMeta = visualMetaList[i];\n                break;\n            }\n        }\n        if (!visualMeta || coordSys.type !== 'cartesian2d') {\n            if (__DEV__) {\n                console.warn('Visual map on line style only support x or y dimension.');\n            }\n            return;\n        }\n\n        // If the area to be rendered is bigger than area defined by LinearGradient,\n        // the canvas spec prescribes that the color of the first stop and the last\n        // stop should be used. But if two stops are added at offset 0, in effect\n        // browsers use the color of the second stop to render area outside\n        // LinearGradient. So we can only infinitesimally extend area defined in\n        // LinearGradient to render `outerColors`.\n\n        var dimension = visualMeta.dimension;\n        var dimName = data.dimensions[dimension];\n        var axis = coordSys.getAxis(dimName);\n\n        // dataToCoor mapping may not be linear, but must be monotonic.\n        var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n            return {\n                coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n                color: stop.color\n            };\n        });\n        var stopLen = colorStops.length;\n        var outerColors = visualMeta.outerColors.slice();\n\n        if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n            colorStops.reverse();\n            outerColors.reverse();\n        }\n\n        var tinyExtent = 10; // Arbitrary value: 10px\n        var minCoord = colorStops[0].coord - tinyExtent;\n        var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n        var coordSpan = maxCoord - minCoord;\n\n        if (coordSpan < 1e-3) {\n            return 'transparent';\n        }\n\n        zrUtil.each(colorStops, function (stop) {\n            stop.offset = (stop.coord - minCoord) / coordSpan;\n        });\n        colorStops.push({\n            offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n            color: outerColors[1] || 'transparent'\n        });\n        colorStops.unshift({ // notice colorStops.length have been changed.\n            offset: stopLen ? colorStops[0].offset : 0.5,\n            color: outerColors[0] || 'transparent'\n        });\n\n        // zrUtil.each(colorStops, function (colorStop) {\n        //     // Make sure each offset has rounded px to avoid not sharp edge\n        //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n        // });\n\n        var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n        gradient[dimName] = minCoord;\n        gradient[dimName + '2'] = maxCoord;\n\n        return gradient;\n    }\n\n    module.exports = ChartView.extend({\n\n        type: 'line',\n\n        init: function () {\n            var lineGroup = new graphic.Group();\n\n            var symbolDraw = new SymbolDraw();\n            this.group.add(symbolDraw.group);\n\n            this._symbolDraw = symbolDraw;\n            this._lineGroup = lineGroup;\n        },\n\n        render: function (seriesModel, ecModel, api) {\n            var coordSys = seriesModel.coordinateSystem;\n            var group = this.group;\n            var data = seriesModel.getData();\n            var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n            var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n\n            var points = data.mapArray(data.getItemLayout, true);\n\n            var isCoordSysPolar = coordSys.type === 'polar';\n            var prevCoordSys = this._coordSys;\n\n            var symbolDraw = this._symbolDraw;\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n\n            var lineGroup = this._lineGroup;\n\n            var hasAnimation = seriesModel.get('animation');\n\n            var isAreaChart = !areaStyleModel.isEmpty();\n            var stackedOnPoints = getStackedOnPoints(coordSys, data);\n\n            var showSymbol = seriesModel.get('showSymbol');\n\n            var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol')\n                && this._getSymbolIgnoreFunc(data, coordSys);\n\n            // Remove temporary symbols\n            var oldData = this._data;\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            // Remove previous created symbols if showSymbol changed to false\n            if (!showSymbol) {\n                symbolDraw.remove();\n            }\n\n            group.add(lineGroup);\n\n            // FIXME step not support polar\n            var step = !isCoordSysPolar && seriesModel.get('step');\n            // Initialization animation or coordinate system changed\n            if (\n                !(polyline && prevCoordSys.type === coordSys.type && step === this._step)\n            ) {\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                if (step) {\n                    // TODO If stacked series is not step\n                    points = turnPointsIntoStep(points, coordSys, step);\n                    stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                }\n\n                polyline = this._newPolyline(points, coordSys, hasAnimation);\n                if (isAreaChart) {\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n            }\n            else {\n                if (isAreaChart && !polygon) {\n                    // If areaStyle is added\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                else if (polygon && !isAreaChart) {\n                    // If areaStyle is removed\n                    lineGroup.remove(polygon);\n                    polygon = this._polygon = null;\n                }\n\n                // Update clipPath\n                lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel));\n\n                // Always update, or it is wrong in the case turning on legend\n                // because points are not changed\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                // Stop symbol animation and sync with line points\n                // FIXME performance?\n                data.eachItemGraphicEl(function (el) {\n                    el.stopAnimation(true);\n                });\n\n                // In the case data zoom triggerred refreshing frequently\n                // Data may not change if line has a category axis. So it should animate nothing\n                if (!isPointsSame(this._stackedOnPoints, stackedOnPoints)\n                    || !isPointsSame(this._points, points)\n                ) {\n                    if (hasAnimation) {\n                        this._updateAnimation(\n                            data, stackedOnPoints, coordSys, api, step\n                        );\n                    }\n                    else {\n                        // Not do it in update with animation\n                        if (step) {\n                            // TODO If stacked series is not step\n                            points = turnPointsIntoStep(points, coordSys, step);\n                            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                        }\n\n                        polyline.setShape({\n                            points: points\n                        });\n                        polygon && polygon.setShape({\n                            points: points,\n                            stackedOnPoints: stackedOnPoints\n                        });\n                    }\n                }\n            }\n\n            var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n\n            polyline.useStyle(zrUtil.defaults(\n                // Use color in lineStyle first\n                lineStyleModel.getLineStyle(),\n                {\n                    fill: 'none',\n                    stroke: visualColor,\n                    lineJoin: 'bevel'\n                }\n            ));\n\n            var smooth = seriesModel.get('smooth');\n            smooth = getSmooth(seriesModel.get('smooth'));\n            polyline.setShape({\n                smooth: smooth,\n                smoothMonotone: seriesModel.get('smoothMonotone'),\n                connectNulls: seriesModel.get('connectNulls')\n            });\n\n            if (polygon) {\n                var stackedOn = data.stackedOn;\n                var stackedOnSmooth = 0;\n\n                polygon.useStyle(zrUtil.defaults(\n                    areaStyleModel.getAreaStyle(),\n                    {\n                        fill: visualColor,\n                        opacity: 0.7,\n                        lineJoin: 'bevel'\n                    }\n                ));\n\n                if (stackedOn) {\n                    var stackedOnSeries = stackedOn.hostModel;\n                    stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n                }\n\n                polygon.setShape({\n                    smooth: smooth,\n                    stackedOnSmooth: stackedOnSmooth,\n                    smoothMonotone: seriesModel.get('smoothMonotone'),\n                    connectNulls: seriesModel.get('connectNulls')\n                });\n            }\n\n            this._data = data;\n            // Save the coordinate system for transition animation when data changed\n            this._coordSys = coordSys;\n            this._stackedOnPoints = stackedOnPoints;\n            this._points = points;\n            this._step = step;\n        },\n\n        dispose: function () {},\n\n        highlight: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n            if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (!symbol) {\n                    // Create a temporary symbol if it is not exists\n                    var pt = data.getItemLayout(dataIndex);\n                    if (!pt) {\n                        // Null data\n                        return;\n                    }\n                    symbol = new Symbol(data, dataIndex);\n                    symbol.position = pt;\n                    symbol.setZ(\n                        seriesModel.get('zlevel'),\n                        seriesModel.get('z')\n                    );\n                    symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n                    symbol.__temp = true;\n                    data.setItemGraphicEl(dataIndex, symbol);\n\n                    // Stop scale animation\n                    symbol.stopSymbolAnimation(true);\n\n                    this.group.add(symbol);\n                }\n                symbol.highlight();\n            }\n            else {\n                // Highlight whole series\n                ChartView.prototype.highlight.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        downplay: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n            if (dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (symbol) {\n                    if (symbol.__temp) {\n                        data.setItemGraphicEl(dataIndex, null);\n                        this.group.remove(symbol);\n                    }\n                    else {\n                        symbol.downplay();\n                    }\n                }\n            }\n            else {\n                // FIXME\n                // can not downplay completely.\n                // Downplay whole series\n                ChartView.prototype.downplay.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolyline: function (points) {\n            var polyline = this._polyline;\n            // Remove previous created polyline\n            if (polyline) {\n                this._lineGroup.remove(polyline);\n            }\n\n            polyline = new polyHelper.Polyline({\n                shape: {\n                    points: points\n                },\n                silent: true,\n                z2: 10\n            });\n\n            this._lineGroup.add(polyline);\n\n            this._polyline = polyline;\n\n            return polyline;\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} stackedOnPoints\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolygon: function (points, stackedOnPoints) {\n            var polygon = this._polygon;\n            // Remove previous created polygon\n            if (polygon) {\n                this._lineGroup.remove(polygon);\n            }\n\n            polygon = new polyHelper.Polygon({\n                shape: {\n                    points: points,\n                    stackedOnPoints: stackedOnPoints\n                },\n                silent: true\n            });\n\n            this._lineGroup.add(polygon);\n\n            this._polygon = polygon;\n            return polygon;\n        },\n        /**\n         * @private\n         */\n        _getSymbolIgnoreFunc: function (data, coordSys) {\n            var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n            // `getLabelInterval` is provided by echarts/component/axis\n            if (categoryAxis && categoryAxis.isLabelIgnored) {\n                return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n            }\n        },\n\n        /**\n         * @private\n         */\n        // FIXME Two value axis\n        _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n            var seriesModel = data.hostModel;\n\n            var diff = lineAnimationDiff(\n                this._data, data,\n                this._stackedOnPoints, stackedOnPoints,\n                this._coordSys, coordSys\n            );\n\n            var current = diff.current;\n            var stackedOnCurrent = diff.stackedOnCurrent;\n            var next = diff.next;\n            var stackedOnNext = diff.stackedOnNext;\n            if (step) {\n                // TODO If stacked series is not step\n                current = turnPointsIntoStep(diff.current, coordSys, step);\n                stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n                next = turnPointsIntoStep(diff.next, coordSys, step);\n                stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n            }\n            // `diff.current` is subset of `current` (which should be ensured by\n            // turnPointsIntoStep), so points in `__points` can be updated when\n            // points in `current` are update during animation.\n            polyline.shape.__points = diff.current;\n            polyline.shape.points = current;\n\n            graphic.updateProps(polyline, {\n                shape: {\n                    points: next\n                }\n            }, seriesModel);\n\n            if (polygon) {\n                polygon.setShape({\n                    points: current,\n                    stackedOnPoints: stackedOnCurrent\n                });\n                graphic.updateProps(polygon, {\n                    shape: {\n                        points: next,\n                        stackedOnPoints: stackedOnNext\n                    }\n                }, seriesModel);\n            }\n\n            var updatedDataInfo = [];\n            var diffStatus = diff.status;\n\n            for (var i = 0; i < diffStatus.length; i++) {\n                var cmd = diffStatus[i].cmd;\n                if (cmd === '=') {\n                    var el = data.getItemGraphicEl(diffStatus[i].idx1);\n                    if (el) {\n                        updatedDataInfo.push({\n                            el: el,\n                            ptIdx: i    // Index of points\n                        });\n                    }\n                }\n            }\n\n            if (polyline.animators && polyline.animators.length) {\n                polyline.animators[0].during(function () {\n                    for (var i = 0; i < updatedDataInfo.length; i++) {\n                        var el = updatedDataInfo[i].el;\n                        el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n                    }\n                });\n            }\n        },\n\n        remove: function (ecModel) {\n            var group = this.group;\n            var oldData = this._data;\n            this._lineGroup.removeAll();\n            this._symbolDraw.remove(true);\n            // Remove temporary created elements when highlighting\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            this._polyline =\n            this._polygon =\n            this._coordSys =\n            this._points =\n            this._stackedOnPoints =\n            this._data = null;\n        }\n    });\n\n\n/***/ }),\n/* 714 */\n/***/ (function(module, exports) {\n\n\n\n    // var arrayDiff = require('zrender/lib/core/arrayDiff');\n    // 'zrender/core/arrayDiff' has been used before, but it did\n    // not do well in performance when roam with fixed dataZoom window.\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n\n    function getStackedOnPoint(coordSys, data, idx) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        var stackedOnSameSign;\n        var stackedOn = data.stackedOn;\n        var val = data.get(valueDim, idx);\n        // Find first stacked value with same sign\n        while (stackedOn &&\n            sign(stackedOn.get(valueDim, idx)) === sign(val)\n        ) {\n            stackedOnSameSign = stackedOn;\n            break;\n        }\n        var stackedData = [];\n        stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n        stackedData[1 - baseDataOffset] = stackedOnSameSign\n            ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n        return coordSys.dataToPoint(stackedData);\n    }\n\n    // function convertToIntId(newIdList, oldIdList) {\n    //     // Generate int id instead of string id.\n    //     // Compare string maybe slow in score function of arrDiff\n\n    //     // Assume id in idList are all unique\n    //     var idIndicesMap = {};\n    //     var idx = 0;\n    //     for (var i = 0; i < newIdList.length; i++) {\n    //         idIndicesMap[newIdList[i]] = idx;\n    //         newIdList[i] = idx++;\n    //     }\n    //     for (var i = 0; i < oldIdList.length; i++) {\n    //         var oldId = oldIdList[i];\n    //         // Same with newIdList\n    //         if (idIndicesMap[oldId]) {\n    //             oldIdList[i] = idIndicesMap[oldId];\n    //         }\n    //         else {\n    //             oldIdList[i] = idx++;\n    //         }\n    //     }\n    // }\n\n    function diffData(oldData, newData) {\n        var diffResult = [];\n\n        newData.diff(oldData)\n            .add(function (idx) {\n                diffResult.push({cmd: '+', idx: idx});\n            })\n            .update(function (newIdx, oldIdx) {\n                diffResult.push({cmd: '=', idx: oldIdx, idx1: newIdx});\n            })\n            .remove(function (idx) {\n                diffResult.push({cmd: '-', idx: idx});\n            })\n            .execute();\n\n        return diffResult;\n    }\n\n    module.exports = function (\n        oldData, newData,\n        oldStackedOnPoints, newStackedOnPoints,\n        oldCoordSys, newCoordSys\n    ) {\n        var diff = diffData(oldData, newData);\n\n        // var newIdList = newData.mapArray(newData.getId);\n        // var oldIdList = oldData.mapArray(oldData.getId);\n\n        // convertToIntId(newIdList, oldIdList);\n\n        // // FIXME One data ?\n        // diff = arrayDiff(oldIdList, newIdList);\n\n        var currPoints = [];\n        var nextPoints = [];\n        // Points for stacking base line\n        var currStackedPoints = [];\n        var nextStackedPoints = [];\n\n        var status = [];\n        var sortedIndices = [];\n        var rawIndices = [];\n        var dims = newCoordSys.dimensions;\n        for (var i = 0; i < diff.length; i++) {\n            var diffItem = diff[i];\n            var pointAdded = true;\n\n            // FIXME, animation is not so perfect when dataZoom window moves fast\n            // Which is in case remvoing or add more than one data in the tail or head\n            switch (diffItem.cmd) {\n                case '=':\n                    var currentPt = oldData.getItemLayout(diffItem.idx);\n                    var nextPt = newData.getItemLayout(diffItem.idx1);\n                    // If previous data is NaN, use next point directly\n                    if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n                        currentPt = nextPt.slice();\n                    }\n                    currPoints.push(currentPt);\n                    nextPoints.push(nextPt);\n\n                    currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n                    nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n\n                    rawIndices.push(newData.getRawIndex(diffItem.idx1));\n                    break;\n                case '+':\n                    var idx = diffItem.idx;\n                    currPoints.push(\n                        oldCoordSys.dataToPoint([\n                            newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)\n                        ])\n                    );\n\n                    nextPoints.push(newData.getItemLayout(idx).slice());\n\n                    currStackedPoints.push(\n                        getStackedOnPoint(oldCoordSys, newData, idx)\n                    );\n                    nextStackedPoints.push(newStackedOnPoints[idx]);\n\n                    rawIndices.push(newData.getRawIndex(idx));\n                    break;\n                case '-':\n                    var idx = diffItem.idx;\n                    var rawIndex = oldData.getRawIndex(idx);\n                    // Data is replaced. In the case of dynamic data queue\n                    // FIXME FIXME FIXME\n                    if (rawIndex !== idx) {\n                        currPoints.push(oldData.getItemLayout(idx));\n                        nextPoints.push(newCoordSys.dataToPoint([\n                            oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)\n                        ]));\n\n                        currStackedPoints.push(oldStackedOnPoints[idx]);\n                        nextStackedPoints.push(\n                            getStackedOnPoint(\n                                newCoordSys, oldData, idx\n                            )\n                        );\n\n                        rawIndices.push(rawIndex);\n                    }\n                    else {\n                        pointAdded = false;\n                    }\n            }\n\n            // Original indices\n            if (pointAdded) {\n                status.push(diffItem);\n                sortedIndices.push(sortedIndices.length);\n            }\n        }\n\n        // Diff result may be crossed if all items are changed\n        // Sort by data index\n        sortedIndices.sort(function (a, b) {\n            return rawIndices[a] - rawIndices[b];\n        });\n\n        var sortedCurrPoints = [];\n        var sortedNextPoints = [];\n\n        var sortedCurrStackedPoints = [];\n        var sortedNextStackedPoints = [];\n\n        var sortedStatus = [];\n        for (var i = 0; i < sortedIndices.length; i++) {\n            var idx = sortedIndices[i];\n            sortedCurrPoints[i] = currPoints[idx];\n            sortedNextPoints[i] = nextPoints[idx];\n\n            sortedCurrStackedPoints[i] = currStackedPoints[idx];\n            sortedNextStackedPoints[i] = nextStackedPoints[idx];\n\n            sortedStatus[i] = status[idx];\n        }\n\n        return {\n            current: sortedCurrPoints,\n            next: sortedNextPoints,\n\n            stackedOnCurrent: sortedCurrStackedPoints,\n            stackedOnNext: sortedNextStackedPoints,\n\n            status: sortedStatus\n        };\n    };\n\n\n/***/ }),\n/* 715 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Poly path support NaN point\n\n\n    var Path = __webpack_require__(612);\n    var vec2 = __webpack_require__(611);\n    var fixClipWithShadow = __webpack_require__(677);\n\n    var vec2Min = vec2.min;\n    var vec2Max = vec2.max;\n\n    var scaleAndAdd = vec2.scaleAndAdd;\n    var v2Copy = vec2.copy;\n\n    // Temporary variable\n    var v = [];\n    var cp0 = [];\n    var cp1 = [];\n\n    function isPointNull(p) {\n        return isNaN(p[0]) || isNaN(p[1]);\n    }\n\n    function drawSegment(\n        ctx, points, start, segLen, allLen,\n        dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls\n    ) {\n        var prevIdx = 0;\n        var idx = start;\n        for (var k = 0; k < segLen; k++) {\n            var p = points[idx];\n            if (idx >= allLen || idx < 0) {\n                break;\n            }\n            if (isPointNull(p)) {\n                if (connectNulls) {\n                    idx += dir;\n                    continue;\n                }\n                break;\n            }\n\n            if (idx === start) {\n                ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n                v2Copy(cp0, p);\n            }\n            else {\n                if (smooth > 0) {\n                    var nextIdx = idx + dir;\n                    var nextP = points[nextIdx];\n                    if (connectNulls) {\n                        // Find next point not null\n                        while (nextP && isPointNull(points[nextIdx])) {\n                            nextIdx += dir;\n                            nextP = points[nextIdx];\n                        }\n                    }\n\n                    var ratioNextSeg = 0.5;\n                    var prevP = points[prevIdx];\n                    var nextP = points[nextIdx];\n                    // Last point\n                    if (!nextP || isPointNull(nextP)) {\n                        v2Copy(cp1, p);\n                    }\n                    else {\n                        // If next data is null in not connect case\n                        if (isPointNull(nextP) && !connectNulls) {\n                            nextP = p;\n                        }\n\n                        vec2.sub(v, nextP, prevP);\n\n                        var lenPrevSeg;\n                        var lenNextSeg;\n                        if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n                            var dim = smoothMonotone === 'x' ? 0 : 1;\n                            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n                            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n                        }\n                        else {\n                            lenPrevSeg = vec2.dist(p, prevP);\n                            lenNextSeg = vec2.dist(p, nextP);\n                        }\n\n                        // Use ratio of seg length\n                        ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n\n                        scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n                    }\n                    // Smooth constraint\n                    vec2Min(cp0, cp0, smoothMax);\n                    vec2Max(cp0, cp0, smoothMin);\n                    vec2Min(cp1, cp1, smoothMax);\n                    vec2Max(cp1, cp1, smoothMin);\n\n                    ctx.bezierCurveTo(\n                        cp0[0], cp0[1],\n                        cp1[0], cp1[1],\n                        p[0], p[1]\n                    );\n                    // cp0 of next segment\n                    scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n                }\n                else {\n                    ctx.lineTo(p[0], p[1]);\n                }\n            }\n\n            prevIdx = idx;\n            idx += dir;\n        }\n\n        return k;\n    }\n\n    function getBoundingBox(points, smoothConstraint) {\n        var ptMin = [Infinity, Infinity];\n        var ptMax = [-Infinity, -Infinity];\n        if (smoothConstraint) {\n            for (var i = 0; i < points.length; i++) {\n                var pt = points[i];\n                if (pt[0] < ptMin[0]) { ptMin[0] = pt[0]; }\n                if (pt[1] < ptMin[1]) { ptMin[1] = pt[1]; }\n                if (pt[0] > ptMax[0]) { ptMax[0] = pt[0]; }\n                if (pt[1] > ptMax[1]) { ptMax[1] = pt[1]; }\n            }\n        }\n        return {\n            min: smoothConstraint ? ptMin : ptMax,\n            max: smoothConstraint ? ptMax : ptMin\n        };\n    }\n\n    module.exports = {\n\n        Polyline: Path.extend({\n\n            type: 'ec-polyline',\n\n            shape: {\n                points: [],\n\n                smooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            style: {\n                fill: null,\n\n                stroke: '#000'\n            },\n\n            brush: fixClipWithShadow(Path.prototype.brush),\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n\n                var i = 0;\n                var len = points.length;\n\n                var result = getBoundingBox(points, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    i += drawSegment(\n                        ctx, points, i, len, len,\n                        1, result.min, result.max, shape.smooth,\n                        shape.smoothMonotone, shape.connectNulls\n                    ) + 1;\n                }\n            }\n        }),\n\n        Polygon: Path.extend({\n\n            type: 'ec-polygon',\n\n            shape: {\n                points: [],\n\n                // Offset between stacked base points and points\n                stackedOnPoints: [],\n\n                smooth: 0,\n\n                stackedOnSmooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            brush: fixClipWithShadow(Path.prototype.brush),\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n                var stackedOnPoints = shape.stackedOnPoints;\n\n                var i = 0;\n                var len = points.length;\n                var smoothMonotone = shape.smoothMonotone;\n                var bbox = getBoundingBox(points, shape.smoothConstraint);\n                var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    var k = drawSegment(\n                        ctx, points, i, len, len,\n                        1, bbox.min, bbox.max, shape.smooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    drawSegment(\n                        ctx, stackedOnPoints, i + k - 1, k, len,\n                        -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    i += k + 1;\n\n                    ctx.closePath();\n                }\n            }\n        })\n    };\n\n\n/***/ }),\n/* 716 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// TODO boundaryGap\n\n\n    __webpack_require__(663);\n\n    __webpack_require__(717);\n\n\n/***/ }),\n/* 717 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var graphic = __webpack_require__(608);\n    var AxisBuilder = __webpack_require__(649);\n    var AxisView = __webpack_require__(658);\n    var cartesianAxisHelper = __webpack_require__(659);\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\n    var getInterval = AxisBuilder.getInterval;\n\n    var axisBuilderAttrs = [\n        'axisLine', 'axisLabel', 'axisTick', 'axisName'\n    ];\n    var selfBuilderAttrs = [\n        'splitArea', 'splitLine'\n    ];\n\n    // function getAlignWithLabel(model, axisModel) {\n    //     var alignWithLabel = model.get('alignWithLabel');\n    //     if (alignWithLabel === 'auto') {\n    //         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n    //     }\n    //     return alignWithLabel;\n    // }\n\n    var CartesianAxisView = AxisView.extend({\n\n        type: 'cartesianAxis',\n\n        axisPointerClass: 'CartesianAxisPointer',\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n\n            this.group.removeAll();\n\n            var oldAxisGroup = this._axisGroup;\n            this._axisGroup = new graphic.Group();\n\n            this.group.add(this._axisGroup);\n\n            if (!axisModel.get('show')) {\n                return;\n            }\n\n            var gridModel = axisModel.getCoordSysModel();\n\n            var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n\n            var axisBuilder = new AxisBuilder(axisModel, layout);\n\n            zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n            this._axisGroup.add(axisBuilder.getGroup());\n\n            zrUtil.each(selfBuilderAttrs, function (name) {\n                if (axisModel.get(name + '.show')) {\n                    this['_' + name](axisModel, gridModel, layout.labelInterval);\n                }\n            }, this);\n\n            graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n\n            CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitLine: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.scale.isBlank()) {\n                return;\n            }\n\n            var splitLineModel = axisModel.getModel('splitLine');\n            var lineStyleModel = splitLineModel.getModel('lineStyle');\n            var lineColors = lineStyleModel.get('color');\n\n            var lineInterval = getInterval(splitLineModel, labelInterval);\n\n            lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n            var isHorizontal = axis.isHorizontal();\n\n            var lineCount = 0;\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitLineModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var p1 = [];\n            var p2 = [];\n            // Simple optimization\n            // Batching the lines if color are the same\n            var lineStyle = lineStyleModel.getLineStyle();\n            for (var i = 0; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, lineInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                if (isHorizontal) {\n                    p1[0] = tickCoord;\n                    p1[1] = gridRect.y;\n                    p2[0] = tickCoord;\n                    p2[1] = gridRect.y + gridRect.height;\n                }\n                else {\n                    p1[0] = gridRect.x;\n                    p1[1] = tickCoord;\n                    p2[0] = gridRect.x + gridRect.width;\n                    p2[1] = tickCoord;\n                }\n\n                var colorIndex = (lineCount++) % lineColors.length;\n                this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n                    anid: 'line_' + ticks[i],\n\n                    shape: {\n                        x1: p1[0],\n                        y1: p1[1],\n                        x2: p2[0],\n                        y2: p2[1]\n                    },\n                    style: zrUtil.defaults({\n                        stroke: lineColors[colorIndex]\n                    }, lineStyle),\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitArea: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.scale.isBlank()) {\n                return;\n            }\n\n            var splitAreaModel = axisModel.getModel('splitArea');\n            var areaStyleModel = splitAreaModel.getModel('areaStyle');\n            var areaColors = areaStyleModel.get('color');\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitAreaModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var prevX = axis.toGlobalCoord(ticksCoords[0]);\n            var prevY = axis.toGlobalCoord(ticksCoords[0]);\n\n            var count = 0;\n\n            var areaInterval = getInterval(splitAreaModel, labelInterval);\n\n            var areaStyle = areaStyleModel.getAreaStyle();\n            areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n            for (var i = 1; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, areaInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                var x;\n                var y;\n                var width;\n                var height;\n                if (axis.isHorizontal()) {\n                    x = prevX;\n                    y = gridRect.y;\n                    width = tickCoord - x;\n                    height = gridRect.height;\n                }\n                else {\n                    x = gridRect.x;\n                    y = prevY;\n                    width = gridRect.width;\n                    height = tickCoord - y;\n                }\n\n                var colorIndex = (count++) % areaColors.length;\n                this._axisGroup.add(new graphic.Rect({\n                    anid: 'area_' + ticks[i],\n\n                    shape: {\n                        x: x,\n                        y: y,\n                        width: width,\n                        height: height\n                    },\n                    style: zrUtil.defaults({\n                        fill: areaColors[colorIndex]\n                    }, areaStyle),\n                    silent: true\n                }));\n\n                prevX = x + width;\n                prevY = y + height;\n            }\n        }\n    });\n\n    CartesianAxisView.extend({\n        type: 'xAxis'\n    });\n    CartesianAxisView.extend({\n        type: 'yAxis'\n    });\n\n\n\n/***/ }),\n/* 718 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var echarts = __webpack_require__(607);\n    var axisPointerModelHelper = __webpack_require__(629);\n    var axisTrigger = __webpack_require__(723);\n    var zrUtil = __webpack_require__(606);\n\n    __webpack_require__(719);\n    __webpack_require__(720);\n\n    // CartesianAxisPointer is not supposed to be required here. But consider\n    // echarts.simple.js and online build tooltip, which only require gridSimple,\n    // CartesianAxisPointer should be able to required somewhere.\n    __webpack_require__(722);\n\n    echarts.registerPreprocessor(function (option) {\n        // Always has a global axisPointerModel for default setting.\n        if (option) {\n            (!option.axisPointer || option.axisPointer.length === 0)\n                && (option.axisPointer = {});\n\n            var link = option.axisPointer.link;\n            // Normalize to array to avoid object mergin. But if link\n            // is not set, remain null/undefined, otherwise it will\n            // override existent link setting.\n            if (link && !zrUtil.isArray(link)) {\n                option.axisPointer.link = [link];\n            }\n        }\n    });\n\n    // This process should proformed after coordinate systems created\n    // and series data processed. So put it on statistic processing stage.\n    echarts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n        // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n        // allAxesInfo should be updated when setOption performed.\n        ecModel.getComponent('axisPointer').coordSysAxesInfo\n            = axisPointerModelHelper.collect(ecModel, api);\n    });\n\n    // Broadcast to all views.\n    echarts.registerAction({\n        type: 'updateAxisPointer',\n        event: 'updateAxisPointer',\n        update: ':updateAxisPointer'\n    }, axisTrigger);\n\n\n\n/***/ }),\n/* 719 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var echarts = __webpack_require__(607);\n\n    var AxisPointerModel = echarts.extendComponentModel({\n\n        type: 'axisPointer',\n\n        coordSysAxesInfo: null,\n\n        defaultOption: {\n            // 'auto' means that show when triggered by tooltip or handle.\n            show: 'auto',\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: null, // set default in AxisPonterView.js\n\n            zlevel: 0,\n            z: 50,\n\n            type: 'line',\n            // axispointer triggered by tootip determine snap automatically,\n            // see `modelHelper`.\n            snap: false,\n            triggerTooltip: true,\n\n            value: null,\n            status: null, // Init value depends on whether handle is used.\n\n            // [group0, group1, ...]\n            // Each group can be: {\n            //      mapper: function () {},\n            //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n            //      xAxisId: ...,\n            //      yAxisName: ...,\n            //      angleAxisIndex: ...\n            // }\n            // mapper: can be ignored.\n            //      input: {axisInfo, value}\n            //      output: {axisInfo, value}\n            link: [],\n\n            // Do not set 'auto' here, otherwise global animation: false\n            // will not effect at this axispointer.\n            animation: null,\n            animationDurationUpdate: 200,\n\n            lineStyle: {\n                color: '#aaa',\n                width: 1,\n                type: 'solid'\n            },\n\n            shadowStyle: {\n                color: 'rgba(150,150,150,0.3)'\n            },\n\n            label: {\n                show: true,\n                formatter: null, // string | Function\n                precision: 'auto', // Or a number like 0, 1, 2 ...\n                margin: 3,\n                color: '#fff',\n                padding: [5, 7, 5, 7],\n                backgroundColor: 'auto', // default: axis line color\n                borderColor: null,\n                borderWidth: 0,\n                shadowBlur: 3,\n                shadowColor: '#aaa'\n                // Considering applicability, common style should\n                // better not have shadowOffset.\n                // shadowOffsetX: 0,\n                // shadowOffsetY: 2\n            },\n\n            handle: {\n                show: false,\n                icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z', // jshint ignore:line\n                size: 45,\n                // handle margin is from symbol center to axis, which is stable when circular move.\n                margin: 50,\n                // color: '#1b8bbd'\n                // color: '#2f4554'\n                color: '#333',\n                shadowBlur: 3,\n                shadowColor: '#aaa',\n                shadowOffsetX: 0,\n                shadowOffsetY: 2,\n\n                // For mobile performance\n                throttle: 40\n            }\n        }\n\n    });\n\n    module.exports = AxisPointerModel;\n\n\n\n/***/ }),\n/* 720 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var globalListener = __webpack_require__(661);\n\n    var AxisPonterView = __webpack_require__(607).extendComponentView({\n\n        type: 'axisPointer',\n\n        render: function (globalAxisPointerModel, ecModel, api) {\n            var globalTooltipModel = ecModel.getComponent('tooltip');\n            var triggerOn = globalAxisPointerModel.get('triggerOn')\n                || (globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click');\n\n            // Register global listener in AxisPointerView to enable\n            // AxisPointerView to be independent to Tooltip.\n            globalListener.register(\n                'axisPointer',\n                api,\n                function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none'\n                        && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)\n                    ) {\n                        dispatchAction({\n                            type: 'updateAxisPointer',\n                            currTrigger: currTrigger,\n                            x: e && e.offsetX,\n                            y: e && e.offsetY\n                        });\n                    }\n                }\n            );\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            globalListener.disopse(api.getZr(), 'axisPointer');\n            AxisPonterView.superApply(this._model, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            globalListener.unregister('axisPointer', api);\n            AxisPonterView.superApply(this._model, 'dispose', arguments);\n        }\n\n    });\n\n\n\n/***/ }),\n/* 721 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var clazzUtil = __webpack_require__(616);\n    var graphic = __webpack_require__(608);\n    var get = __webpack_require__(609).makeGetter();\n    var axisPointerModelHelper = __webpack_require__(629);\n    var eventTool = __webpack_require__(625);\n    var throttle = __webpack_require__(666);\n\n    var clone = zrUtil.clone;\n    var bind = zrUtil.bind;\n\n    /**\n     * Base axis pointer class in 2D.\n     * Implemenents {module:echarts/component/axis/IAxisPointer}.\n     */\n    function BaseAxisPointer () {\n    }\n\n    BaseAxisPointer.prototype = {\n\n        /**\n         * @private\n         */\n        _group: null,\n\n        /**\n         * @private\n         */\n        _lastGraphicKey: null,\n\n        /**\n         * @private\n         */\n        _handle: null,\n\n        /**\n         * @private\n         */\n        _dragging: false,\n\n        /**\n         * @private\n         */\n        _lastValue: null,\n\n        /**\n         * @private\n         */\n        _lastStatus: null,\n\n        /**\n         * @private\n         */\n        _payloadInfo: null,\n\n        /**\n         * In px, arbitrary value. Do not set too small,\n         * no animation is ok for most cases.\n         * @protected\n         */\n        animationThreshold: 15,\n\n        /**\n         * @implement\n         */\n        render: function (axisModel, axisPointerModel, api, forceRender) {\n            var value = axisPointerModel.get('value');\n            var status = axisPointerModel.get('status');\n\n            // Bind them to `this`, not in closure, otherwise they will not\n            // be replaced when user calling setOption in not merge mode.\n            this._axisModel = axisModel;\n            this._axisPointerModel = axisPointerModel;\n            this._api = api;\n\n            // Optimize: `render` will be called repeatly during mouse move.\n            // So it is power consuming if performing `render` each time,\n            // especially on mobile device.\n            if (!forceRender\n                && this._lastValue === value\n                && this._lastStatus === status\n            ) {\n                return;\n            }\n            this._lastValue = value;\n            this._lastStatus = status;\n\n            var group = this._group;\n            var handle = this._handle;\n\n            if (!status || status === 'hide') {\n                // Do not clear here, for animation better.\n                group && group.hide();\n                handle && handle.hide();\n                return;\n            }\n            group && group.show();\n            handle && handle.show();\n\n            // Otherwise status is 'show'\n            var elOption = {};\n            this.makeElOption(elOption, value, axisModel, axisPointerModel, api);\n\n            // Enable change axis pointer type.\n            var graphicKey = elOption.graphicKey;\n            if (graphicKey !== this._lastGraphicKey) {\n                this.clear(api);\n            }\n            this._lastGraphicKey = graphicKey;\n\n            var moveAnimation = this._moveAnimation =\n                this.determineAnimation(axisModel, axisPointerModel);\n\n            if (!group) {\n                group = this._group = new graphic.Group();\n                this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n                this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n                api.getZr().add(group);\n            }\n            else {\n                var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n                this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n                this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n            }\n\n            updateMandatoryProps(group, axisPointerModel, true);\n\n            this._renderHandle(value);\n        },\n\n        /**\n         * @implement\n         */\n        remove: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @implement\n         */\n        dispose: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @protected\n         */\n        determineAnimation: function (axisModel, axisPointerModel) {\n            var animation = axisPointerModel.get('animation');\n            var axis = axisModel.axis;\n            var isCategoryAxis = axis.type === 'category';\n            var useSnap = axisPointerModel.get('snap');\n\n            // Value axis without snap always do not snap.\n            if (!useSnap && !isCategoryAxis) {\n                return false;\n            }\n\n            if (animation === 'auto' || animation == null) {\n                var animationThreshold = this.animationThreshold;\n                if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n                    return true;\n                }\n\n                // It is important to auto animation when snap used. Consider if there is\n                // a dataZoom, animation will be disabled when too many points exist, while\n                // it will be enabled for better visual effect when little points exist.\n                if (useSnap) {\n                    var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n                    var axisExtent = axis.getExtent();\n                    // Approximate band width\n                    return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n                }\n\n                return false;\n            }\n\n            return animation === true;\n        },\n\n        /**\n         * add {pointer, label, graphicKey} to elOption\n         * @protected\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            // Shoule be implemenented by sub-class.\n        },\n\n        /**\n         * @protected\n         */\n        createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n            var pointerOption = elOption.pointer;\n            if (pointerOption) {\n                var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](\n                    clone(elOption.pointer)\n                );\n                group.add(pointerEl);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n            if (elOption.label) {\n                var labelEl = get(group).labelEl = new graphic.Rect(\n                    clone(elOption.label)\n                );\n\n                group.add(labelEl);\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updatePointerEl: function (group, elOption, updateProps) {\n            var pointerEl = get(group).pointerEl;\n            if (pointerEl) {\n                pointerEl.setStyle(elOption.pointer.style);\n                updateProps(pointerEl, {shape: elOption.pointer.shape});\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n            var labelEl = get(group).labelEl;\n            if (labelEl) {\n                labelEl.setStyle(elOption.label.style);\n                updateProps(labelEl, {\n                    // Consider text length change in vertical axis, animation should\n                    // be used on shape, otherwise the effect will be weird.\n                    shape: elOption.label.shape,\n                    position: elOption.label.position\n                });\n\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _renderHandle: function (value) {\n            if (this._dragging || !this.updateHandleTransform) {\n                return;\n            }\n\n            var axisPointerModel = this._axisPointerModel;\n            var zr = this._api.getZr();\n            var handle = this._handle;\n            var handleModel = axisPointerModel.getModel('handle');\n\n            var status = axisPointerModel.get('status');\n            if (!handleModel.get('show') || !status || status === 'hide') {\n                handle && zr.remove(handle);\n                this._handle = null;\n                return;\n            }\n\n            var isInit;\n            if (!this._handle) {\n                isInit = true;\n                handle = this._handle = graphic.createIcon(\n                    handleModel.get('icon'), \n                    {\n                        cursor: 'move',\n                        draggable: true,\n                        onmousemove: function (e) {\n                            // Fot mobile devicem, prevent screen slider on the button.\n                            eventTool.stop(e.event);\n                        },\n                        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n                        drift: bind(this._onHandleDragMove, this),\n                        ondragend: bind(this._onHandleDragEnd, this)\n                    }\n                );\n                zr.add(handle);\n            }\n\n            updateMandatoryProps(handle, axisPointerModel, false);\n\n            // update style\n            var includeStyles = [\n                'color', 'borderColor', 'borderWidth', 'opacity',\n                'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'\n            ];\n            handle.setStyle(handleModel.getItemStyle(null, includeStyles));\n\n            // update position\n            var handleSize = handleModel.get('size');\n            if (!zrUtil.isArray(handleSize)) {\n                handleSize = [handleSize, handleSize];\n            }\n            handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n\n            throttle.createOrUpdate(\n                this,\n                '_doDispatchAxisPointer',\n                handleModel.get('throttle') || 0,\n                'fixRate'\n            );\n\n            this._moveHandleToValue(value, isInit);\n        },\n\n        /**\n         * @private\n         */\n        _moveHandleToValue: function (value, isInit) {\n            updateProps(\n                this._axisPointerModel,\n                !isInit && this._moveAnimation,\n                this._handle,\n                getHandleTransProps(this.getHandleTransform(\n                    value, this._axisModel, this._axisPointerModel\n                ))\n            );\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragMove: function (dx, dy) {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            this._dragging = true;\n\n            // Persistent for throttle.\n            var trans = this.updateHandleTransform(\n                getHandleTransProps(handle),\n                [dx, dy],\n                this._axisModel,\n                this._axisPointerModel\n            );\n            this._payloadInfo = trans;\n\n            handle.stopAnimation();\n            handle.attr(getHandleTransProps(trans));\n            get(handle).lastProp = null;\n\n            this._doDispatchAxisPointer();\n        },\n\n        /**\n         * Throttled method.\n         * @private\n         */\n        _doDispatchAxisPointer: function () {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var payloadInfo = this._payloadInfo;\n            var axisModel = this._axisModel;\n            this._api.dispatchAction({\n                type: 'updateAxisPointer',\n                x: payloadInfo.cursorPoint[0],\n                y: payloadInfo.cursorPoint[1],\n                tooltipOption: payloadInfo.tooltipOption,\n                axesInfo: [{\n                    axisDim: axisModel.axis.dim,\n                    axisIndex: axisModel.componentIndex\n                }]\n            });\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragEnd: function (moveAnimation) {\n            this._dragging = false;\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var value = this._axisPointerModel.get('value');\n            // Consider snap or categroy axis, handle may be not consistent with\n            // axisPointer. So move handle to align the exact value position when\n            // drag ended.\n            this._moveHandleToValue(value);\n\n            // For the effect: tooltip will be shown when finger holding on handle\n            // button, and will be hidden after finger left handle button.\n            this._api.dispatchAction({\n                type: 'hideTip'\n            });\n        },\n\n        /**\n         * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {number} value\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0}\n         */\n        getHandleTransform: null,\n\n        /**\n         * * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {Object} transform {position, rotation}\n         * @param {Array.<number>} delta [dx, dy]\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n         */\n        updateHandleTransform: null,\n\n        /**\n         * @private\n         */\n        clear: function (api) {\n            this._lastValue = null;\n            this._lastStatus = null;\n\n            var zr = api.getZr();\n            var group = this._group;\n            var handle = this._handle;\n            if (zr && group) {\n                this._lastGraphicKey = null;\n                group && zr.remove(group);\n                handle && zr.remove(handle);\n                this._group = null;\n                this._handle = null;\n                this._payloadInfo = null;\n            }\n        },\n\n        /**\n         * @protected\n         */\n        doClear: function () {\n            // Implemented by sub-class if necessary.\n        },\n\n        /**\n         * @protected\n         * @param {Array.<number>} xy\n         * @param {Array.<number>} wh\n         * @param {number} [xDimIndex=0] or 1\n         */\n        buildLabel: function (xy, wh, xDimIndex) {\n            xDimIndex = xDimIndex || 0;\n            return {\n                x: xy[xDimIndex],\n                y: xy[1 - xDimIndex],\n                width: wh[xDimIndex],\n                height: wh[1 - xDimIndex]\n            };\n        }\n    };\n\n    BaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\n\n    function updateProps(animationModel, moveAnimation, el, props) {\n        // Animation optimize.\n        if (!propsEqual(get(el).lastProp, props)) {\n            get(el).lastProp = props;\n            moveAnimation\n                ? graphic.updateProps(el, props, animationModel)\n                : (el.stopAnimation(), el.attr(props));\n        }\n    }\n\n    function propsEqual(lastProps, newProps) {\n        if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n            var equals = true;\n            zrUtil.each(newProps, function (item, key) {\n                equals = equals && propsEqual(lastProps[key], item);\n            });\n            return !!equals;\n        }\n        else {\n            return lastProps === newProps;\n        }\n    }\n\n    function updateLabelShowHide(labelEl, axisPointerModel) {\n        labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n    }\n\n    function getHandleTransProps(trans) {\n        return {\n            position: trans.position.slice(),\n            rotation: trans.rotation || 0\n        };\n    }\n\n    function updateMandatoryProps(group, axisPointerModel, silent) {\n        var z = axisPointerModel.get('z');\n        var zlevel = axisPointerModel.get('zlevel');\n\n        group && group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n                el.silent = silent;\n            }\n        });\n    }\n\n    clazzUtil.enableClassExtend(BaseAxisPointer);\n\n    module.exports = BaseAxisPointer;\n\n\n/***/ }),\n/* 722 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var graphic = __webpack_require__(608);\n    var BaseAxisPointer = __webpack_require__(721);\n    var viewHelper = __webpack_require__(662);\n    var cartesianAxisHelper = __webpack_require__(659);\n    var AxisView = __webpack_require__(658);\n\n    var CartesianAxisPointer = BaseAxisPointer.extend({\n\n        /**\n         * @override\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisPointerType = axisPointerModel.get('type');\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n            if (axisPointerType && axisPointerType !== 'none') {\n                var elStyle = viewHelper.buildElStyle(axisPointerModel);\n                var pointerOption = pointerShapeBuilder[axisPointerType](\n                    axis, pixelValue, otherExtent, elStyle\n                );\n                pointerOption.style = elStyle;\n                elOption.graphicKey = pointerOption.type;\n                elOption.pointer = pointerOption;\n            }\n\n            var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n            viewHelper.buildCartesianSingleLabelElOption(\n                value, elOption, layoutInfo, axisModel, axisPointerModel, api\n            );\n        },\n\n        /**\n         * @override\n         */\n        getHandleTransform: function (value, axisModel, axisPointerModel) {\n            var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n                labelInside: false\n            });\n            layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n            return {\n                position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n                rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n            };\n        },\n\n        /**\n         * @override\n         */\n        updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisExtent = axis.getGlobalExtent(true);\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var dimIndex = axis.dim === 'x' ? 0 : 1;\n\n            var currPosition = transform.position;\n            currPosition[dimIndex] += delta[dimIndex];\n            currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n            currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n\n            var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n            var cursorPoint = [cursorOtherValue, cursorOtherValue];\n            cursorPoint[dimIndex] = currPosition[dimIndex];\n\n            // Make tooltip do not overlap axisPointer and in the middle of the grid.\n            var tooltipOptions = [{verticalAlign: 'middle'}, {align: 'center'}];\n\n            return {\n                position: currPosition,\n                rotation: transform.rotation,\n                cursorPoint: cursorPoint,\n                tooltipOption: tooltipOptions[dimIndex]\n            };\n        }\n\n    });\n\n    function getCartesian(grid, axis) {\n        var opt = {};\n        opt[axis.dim + 'AxisIndex'] = axis.index;\n        return grid.getCartesian(opt);\n    }\n\n    var pointerShapeBuilder = {\n\n        line: function (axis, pixelValue, otherExtent, elStyle) {\n            var targetShape = viewHelper.makeLineShape(\n                [pixelValue, otherExtent[0]],\n                [pixelValue, otherExtent[1]],\n                getAxisDimIndex(axis)\n            );\n            graphic.subPixelOptimizeLine({\n                shape: targetShape,\n                style: elStyle\n            });\n            return {\n                type: 'Line',\n                shape: targetShape\n            };\n        },\n\n        shadow: function (axis, pixelValue, otherExtent, elStyle) {\n            var bandWidth = axis.getBandWidth();\n            var span = otherExtent[1] - otherExtent[0];\n            return {\n                type: 'Rect',\n                shape: viewHelper.makeRectShape(\n                    [pixelValue - bandWidth / 2, otherExtent[0]],\n                    [bandWidth, span],\n                    getAxisDimIndex(axis)\n                )\n            };\n        }\n    };\n\n    function getAxisDimIndex(axis) {\n        return axis.dim === 'x' ? 0 : 1;\n    }\n\n    AxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\n\n    module.exports = CartesianAxisPointer;\n\n\n/***/ }),\n/* 723 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var modelUtil = __webpack_require__(609);\n    var modelHelper = __webpack_require__(629);\n    var findPointFromSeries = __webpack_require__(660);\n\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n    var get = modelUtil.makeGetter();\n\n    /**\n     * Basic logic: check all axis, if they do not demand show/highlight,\n     * then hide/downplay them.\n     *\n     * @param {Object} coordSysAxesInfo\n     * @param {Object} payload\n     * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n     * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n     *              trigger axisPointer and tooltip.\n     * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n     *              trigger axisPointer and tooltip.\n     * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n     * @param {Object} [payload.dataIndex] finder, restrict target axes.\n     * @param {Object} [payload.axesInfo] finder, restrict target axes.\n     *        [{\n     *          axisDim: 'x'|'y'|'angle'|...,\n     *          axisIndex: ...,\n     *          value: ...\n     *        }, ...]\n     * @param {Function} [payload.dispatchAction]\n     * @param {Object} [payload.tooltipOption]\n     * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n     *        which can be specified in dispatchAction\n     * @param {module:echarts/model/Global} ecModel\n     * @param {module:echarts/ExtensionAPI} api\n     * @return {Object} content of event obj for echarts.connect.\n     */\n    function axisTrigger(payload, ecModel, api) {\n        var currTrigger = payload.currTrigger;\n        var point = [payload.x, payload.y];\n        var finder = payload;\n        var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n        var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n        // Pending\n        // See #6121. But we are not able to reproduce it yet.\n        if (!coordSysAxesInfo) {\n            return;\n        }\n\n        if (illegalPoint(point)) {\n            // Used in the default behavior of `connection`: use the sample seriesIndex\n            // and dataIndex. And also used in the tooltipView trigger.\n            point = findPointFromSeries({\n                seriesIndex: finder.seriesIndex,\n                // Do not use dataIndexInside from other ec instance.\n                // FIXME: auto detect it?\n                dataIndex: finder.dataIndex\n            }, ecModel).point;\n        }\n        var isIllegalPoint = illegalPoint(point);\n\n        // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n        // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n        // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n        // and dataIndex.\n        var inputAxesInfo = finder.axesInfo;\n\n        var axesInfo = coordSysAxesInfo.axesInfo;\n        var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n        var outputFinder = {};\n\n        var showValueMap = {};\n        var dataByCoordSys = {list: [], map: {}};\n        var updaters = {\n            showPointer: curry(showPointer, showValueMap),\n            showTooltip: curry(showTooltip, dataByCoordSys)\n        };\n\n        // Process for triggered axes.\n        each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n            // If a point given, it must be contained by the coordinate system.\n            var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n\n            each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n                var axis = axisInfo.axis;\n                var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo);\n                // If no inputAxesInfo, no axis is restricted.\n                if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n                    var val = inputAxisInfo && inputAxisInfo.value;\n                    if (val == null && !isIllegalPoint) {\n                        val = axis.pointToData(point);\n                    }\n                    val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n                }\n            });\n        });\n\n        // Process for linked axes.\n        var linkTriggers = {};\n        each(axesInfo, function (tarAxisInfo, tarKey) {\n            var linkGroup = tarAxisInfo.linkGroup;\n\n            // If axis has been triggered in the previous stage, it should not be triggered by link.\n            if (linkGroup && !showValueMap[tarKey]) {\n                each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n                    var srcValItem = showValueMap[srcKey];\n                    // If srcValItem exist, source axis is triggered, so link to target axis.\n                    if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n                        var val = srcValItem.value;\n                        linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(\n                            val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo)\n                        )));\n                        linkTriggers[tarAxisInfo.key] = val;\n                    }\n                });\n            }\n        });\n        each(linkTriggers, function (val, tarKey) {\n            processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n        });\n\n        updateModelActually(showValueMap, axesInfo, outputFinder);\n        dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n        dispatchHighDownActually(axesInfo, dispatchAction, api);\n\n        return outputFinder;\n    }\n\n    function processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n        var axis = axisInfo.axis;\n\n        if (axis.scale.isBlank() || !axis.containData(newValue)) {\n            return;\n        }\n\n        if (!axisInfo.involveSeries) {\n            updaters.showPointer(axisInfo, newValue);\n            return;\n        }\n\n        // Heavy calculation. So put it after axis.containData checking.\n        var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n        var payloadBatch = payloadInfo.payloadBatch;\n        var snapToValue = payloadInfo.snapToValue;\n\n        // Fill content of event obj for echarts.connect.\n        // By defualt use the first involved series data as a sample to connect.\n        if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n            zrUtil.extend(outputFinder, payloadBatch[0]);\n        }\n\n        // If no linkSource input, this process is for collecting link\n        // target, where snap should not be accepted.\n        if (!dontSnap && axisInfo.snap) {\n            if (axis.containData(snapToValue) && snapToValue != null) {\n                newValue = snapToValue;\n            }\n        }\n\n        updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder);\n        // Tooltip should always be snapToValue, otherwise there will be\n        // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n        updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n    }\n\n    function buildPayloadsBySeries(value, axisInfo) {\n        var axis = axisInfo.axis;\n        var dim = axis.dim;\n        var snapToValue = value;\n        var payloadBatch = [];\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n\n        each(axisInfo.seriesModels, function (series, idx) {\n            var dataDim = series.coordDimToDataDim(dim);\n            var seriesNestestValue;\n            var dataIndices;\n\n            if (series.getAxisTooltipData) {\n                var result = series.getAxisTooltipData(dataDim, value, axis);\n                dataIndices = result.dataIndices;\n                seriesNestestValue = result.nestestValue;\n            }\n            else {\n                dataIndices = series.getData().indicesOfNearest(\n                    dataDim[0],\n                    value,\n                    // Add a threshold to avoid find the wrong dataIndex\n                    // when data length is not same.\n                    false, axis.type === 'category' ? 0.5 : null\n                );\n                if (!dataIndices.length) {\n                    return;\n                }\n                seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n            }\n\n            if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n                return;\n            }\n\n            var diff = value - seriesNestestValue;\n            var dist = Math.abs(diff);\n            // Consider category case\n            if (dist <= minDist) {\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    snapToValue = seriesNestestValue;\n                    payloadBatch.length = 0;\n                }\n                each(dataIndices, function (dataIndex) {\n                    payloadBatch.push({\n                        seriesIndex: series.seriesIndex,\n                        dataIndexInside: dataIndex,\n                        dataIndex: series.getData().getRawIndex(dataIndex)\n                    });\n                });\n            }\n        });\n\n        return {\n            payloadBatch: payloadBatch,\n            snapToValue: snapToValue\n        };\n    }\n\n    function showPointer(showValueMap, axisInfo, value, payloadBatch) {\n        showValueMap[axisInfo.key] = {value: value, payloadBatch: payloadBatch};\n    }\n\n    function showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n        var payloadBatch = payloadInfo.payloadBatch;\n        var axis = axisInfo.axis;\n        var axisModel = axis.model;\n        var axisPointerModel = axisInfo.axisPointerModel;\n\n        // If no data, do not create anything in dataByCoordSys,\n        // whose length will be used to judge whether dispatch action.\n        if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n            return;\n        }\n\n        var coordSysModel = axisInfo.coordSys.model;\n        var coordSysKey = modelHelper.makeKey(coordSysModel);\n        var coordSysItem = dataByCoordSys.map[coordSysKey];\n        if (!coordSysItem) {\n            coordSysItem = dataByCoordSys.map[coordSysKey] = {\n                coordSysId: coordSysModel.id,\n                coordSysIndex: coordSysModel.componentIndex,\n                coordSysType: coordSysModel.type,\n                coordSysMainType: coordSysModel.mainType,\n                dataByAxis: []\n            };\n            dataByCoordSys.list.push(coordSysItem);\n        }\n\n        coordSysItem.dataByAxis.push({\n            axisDim: axis.dim,\n            axisIndex: axisModel.componentIndex,\n            axisType: axisModel.type,\n            axisId: axisModel.id,\n            value: value,\n            // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n            // depends that all models have been updated. So it should not be performed\n            // here. Considering axisPointerModel used here is volatile, which is hard\n            // to be retrieve in TooltipView, we prepare parameters here.\n            valueLabelOpt: {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            },\n            seriesDataIndices: payloadBatch.slice()\n        });\n    }\n\n    function updateModelActually(showValueMap, axesInfo, outputFinder) {\n        var outputAxesInfo = outputFinder.axesInfo = [];\n        // Basic logic: If no 'show' required, 'hide' this axisPointer.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            var valItem = showValueMap[key];\n\n            if (valItem) {\n                !axisInfo.useHandle && (option.status = 'show');\n                option.value = valItem.value;\n                // For label formatter param and highlight.\n                option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n            }\n            // When always show (e.g., handle used), remain\n            // original value and status.\n            else {\n                // If hide, value still need to be set, consider\n                // click legend to toggle axis blank.\n                !axisInfo.useHandle && (option.status = 'hide');\n            }\n\n            // If status is 'hide', should be no info in payload.\n            option.status === 'show' && outputAxesInfo.push({\n                axisDim: axisInfo.axis.dim,\n                axisIndex: axisInfo.axis.model.componentIndex,\n                value: option.value\n            });\n        });\n    }\n\n    function dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n        // Basic logic: If no showTip required, hideTip will be dispatched.\n        if (illegalPoint(point) || !dataByCoordSys.list.length) {\n            dispatchAction({type: 'hideTip'});\n            return;\n        }\n\n        // In most case only one axis (or event one series is used). It is\n        // convinient to fetch payload.seriesIndex and payload.dataIndex\n        // dirtectly. So put the first seriesIndex and dataIndex of the first\n        // axis on the payload.\n        var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n\n        dispatchAction({\n            type: 'showTip',\n            escapeConnect: true,\n            x: point[0],\n            y: point[1],\n            tooltipOption: payload.tooltipOption,\n            position: payload.position,\n            dataIndexInside: sampleItem.dataIndexInside,\n            dataIndex: sampleItem.dataIndex,\n            seriesIndex: sampleItem.seriesIndex,\n            dataByCoordSys: dataByCoordSys.list\n        });\n    }\n\n    function dispatchHighDownActually(axesInfo, dispatchAction, api) {\n        // FIXME\n        // highlight status modification shoule be a stage of main process?\n        // (Consider confilct (e.g., legend and axisPointer) and setOption)\n\n        var zr = api.getZr();\n        var highDownKey = 'axisPointerLastHighlights';\n        var lastHighlights = get(zr)[highDownKey] || {};\n        var newHighlights = get(zr)[highDownKey] = {};\n\n        // Update highlight/downplay status according to axisPointer model.\n        // Build hash map and remove duplicate incidentally.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n                var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n                newHighlights[key] = batchItem;\n            });\n        });\n\n        // Diff.\n        var toHighlight = [];\n        var toDownplay = [];\n        zrUtil.each(lastHighlights, function (batchItem, key) {\n            !newHighlights[key] && toDownplay.push(batchItem);\n        });\n        zrUtil.each(newHighlights, function (batchItem, key) {\n            !lastHighlights[key] && toHighlight.push(batchItem);\n        });\n\n        toDownplay.length && api.dispatchAction({\n            type: 'downplay', escapeConnect: true, batch: toDownplay\n        });\n        toHighlight.length && api.dispatchAction({\n            type: 'highlight', escapeConnect: true, batch: toHighlight\n        });\n    }\n\n    function findInputAxisInfo(inputAxesInfo, axisInfo) {\n        for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n            var inputAxisInfo = inputAxesInfo[i];\n            if (axisInfo.axis.dim === inputAxisInfo.axisDim\n                && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex\n            ) {\n                return inputAxisInfo;\n            }\n        }\n    }\n\n    function makeMapperParam(axisInfo) {\n        var axisModel = axisInfo.axis.model;\n        var item = {};\n        var dim = item.axisDim = axisInfo.axis.dim;\n        item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n        item.axisName = item[dim + 'AxisName'] = axisModel.name;\n        item.axisId = item[dim + 'AxisId'] = axisModel.id;\n        return item;\n    }\n\n    function illegalPoint(point) {\n        return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n    }\n\n    module.exports = axisTrigger;\n\n\n/***/ }),\n/* 724 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    // List layout\n    var layout = __webpack_require__(619);\n    var formatUtil = __webpack_require__(613);\n    var graphic = __webpack_require__(608);\n\n    module.exports = {\n        /**\n         * Layout list like component.\n         * It will box layout each items in group of component and then position the whole group in the viewport\n         * @param {module:zrender/group/Group} group\n         * @param {module:echarts/model/Component} componentModel\n         * @param {module:echarts/ExtensionAPI}\n         */\n        layout: function (group, componentModel, api) {\n            var boxLayoutParams = componentModel.getBoxLayoutParams();\n            var padding = componentModel.get('padding');\n            var viewportSize = {width: api.getWidth(), height: api.getHeight()};\n\n            var rect = layout.getLayoutRect(\n                boxLayoutParams,\n                viewportSize,\n                padding\n            );\n\n            layout.box(\n                componentModel.get('orient'),\n                group,\n                componentModel.get('itemGap'),\n                rect.width,\n                rect.height\n            );\n\n            layout.positionElement(\n                group,\n                boxLayoutParams,\n                viewportSize,\n                padding\n            );\n        },\n\n        makeBackground: function (rect, componentModel) {\n            var padding = formatUtil.normalizeCssArray(\n                componentModel.get('padding')\n            );\n            var style = componentModel.getItemStyle(['color', 'opacity']);\n            style.fill = componentModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: rect.x - padding[3],\n                    y: rect.y - padding[0],\n                    width: rect.width + padding[1] + padding[3],\n                    height: rect.height + padding[0] + padding[2],\n                    r: componentModel.get('borderRadius')\n                },\n                style: style,\n                silent: true,\n                z2: -1\n            });\n            // FIXME\n            // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n            // and background rect when setting like `left: 0`, `top: 0`.\n            // graphic.subPixelOptimizeRect(rect);\n\n            return rect;\n        }\n    };\n\n\n/***/ }),\n/* 725 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    // Do not contain scrollable legend, for sake of file size.\n\n    __webpack_require__(726);\n    __webpack_require__(728);\n    __webpack_require__(727);\n\n    var echarts = __webpack_require__(607);\n    // Series Filter\n    echarts.registerProcessor(__webpack_require__(729));\n\n    __webpack_require__(618).registerSubTypeDefaulter('legend', function () {\n        // Default 'plain' when no type specified.\n        return 'plain';\n    });\n\n\n\n/***/ }),\n/* 726 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var Model = __webpack_require__(614);\n\n    var LegendModel = __webpack_require__(607).extendComponentModel({\n\n        type: 'legend.plain',\n\n        dependencies: ['series'],\n\n        layoutMode: {\n            type: 'box',\n            // legend.width/height are maxWidth/maxHeight actually,\n            // whereas realy width/height is calculated by its content.\n            // (Setting {left: 10, right: 10} does not make sense).\n            // So consider the case:\n            // `setOption({legend: {left: 10});`\n            // then `setOption({legend: {right: 10});`\n            // The previous `left` should be cleared by setting `ignoreSize`.\n            ignoreSize: true\n        },\n\n        init: function (option, parentModel, ecModel) {\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            option.selected = option.selected || {};\n        },\n\n        mergeOption: function (option) {\n            LegendModel.superCall(this, 'mergeOption', option);\n        },\n\n        optionUpdated: function () {\n            this._updateData(this.ecModel);\n\n            var legendData = this._data;\n\n            // If selectedMode is single, try to select one\n            if (legendData[0] && this.get('selectedMode') === 'single') {\n                var hasSelected = false;\n                // If has any selected in option.selected\n                for (var i = 0; i < legendData.length; i++) {\n                    var name = legendData[i].get('name');\n                    if (this.isSelected(name)) {\n                        // Force to unselect others\n                        this.select(name);\n                        hasSelected = true;\n                        break;\n                    }\n                }\n                // Try select the first if selectedMode is single\n                !hasSelected && this.select(legendData[0].get('name'));\n            }\n        },\n\n        _updateData: function (ecModel) {\n            var legendData = zrUtil.map(this.get('data') || [], function (dataItem) {\n                // Can be string or number\n                if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n                    dataItem = {\n                        name: dataItem\n                    };\n                }\n                return new Model(dataItem, this, this.ecModel);\n            }, this);\n            this._data = legendData;\n\n            var availableNames = zrUtil.map(ecModel.getSeries(), function (series) {\n                return series.name;\n            });\n            ecModel.eachSeries(function (seriesModel) {\n                if (seriesModel.legendDataProvider) {\n                    var data = seriesModel.legendDataProvider();\n                    availableNames = availableNames.concat(data.mapArray(data.getName));\n                }\n            });\n            /**\n             * @type {Array.<string>}\n             * @private\n             */\n            this._availableNames = availableNames;\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Model>}\n         */\n        getData: function () {\n            return this._data;\n        },\n\n        /**\n         * @param {string} name\n         */\n        select: function (name) {\n            var selected = this.option.selected;\n            var selectedMode = this.get('selectedMode');\n            if (selectedMode === 'single') {\n                var data = this._data;\n                zrUtil.each(data, function (dataItem) {\n                    selected[dataItem.get('name')] = false;\n                });\n            }\n            selected[name] = true;\n        },\n\n        /**\n         * @param {string} name\n         */\n        unSelect: function (name) {\n            if (this.get('selectedMode') !== 'single') {\n                this.option.selected[name] = false;\n            }\n        },\n\n        /**\n         * @param {string} name\n         */\n        toggleSelected: function (name) {\n            var selected = this.option.selected;\n            // Default is true\n            if (!selected.hasOwnProperty(name)) {\n                selected[name] = true;\n            }\n            this[selected[name] ? 'unSelect' : 'select'](name);\n        },\n\n        /**\n         * @param {string} name\n         */\n        isSelected: function (name) {\n            var selected = this.option.selected;\n            return !(selected.hasOwnProperty(name) && !selected[name])\n                && zrUtil.indexOf(this._availableNames, name) >= 0;\n        },\n\n        defaultOption: {\n            // 一级层叠\n            zlevel: 0,\n            // 二级层叠\n            z: 4,\n            show: true,\n\n            // 布局方式，默认为水平布局，可选为：\n            // 'horizontal' | 'vertical'\n            orient: 'horizontal',\n\n            left: 'center',\n            // right: 'center',\n\n            top: 0,\n            // bottom: null,\n\n            // 水平对齐\n            // 'auto' | 'left' | 'right'\n            // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n            align: 'auto',\n\n            backgroundColor: 'rgba(0,0,0,0)',\n            // 图例边框颜色\n            borderColor: '#ccc',\n            borderRadius: 0,\n            // 图例边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n            // 图例内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n            // 各个item之间的间隔，单位px，默认为10，\n            // 横向布局时为水平间隔，纵向布局时为纵向间隔\n            itemGap: 10,\n            // 图例图形宽度\n            itemWidth: 25,\n            // 图例图形高度\n            itemHeight: 14,\n\n            // 图例关闭时候的颜色\n            inactiveColor: '#ccc',\n\n            textStyle: {\n                // 图例文字颜色\n                color: '#333'\n            },\n            // formatter: '',\n            // 选择模式，默认开启图例开关\n            selectedMode: true,\n            // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n            // selected: null,\n            // 图例内容（详见legend.data，数组中每一项代表一个item\n            // data: [],\n\n            // Tooltip 相关配置\n            tooltip: {\n                show: false\n            }\n        }\n    });\n\n    module.exports = LegendModel;\n\n\n/***/ }),\n/* 727 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var symbolCreator = __webpack_require__(639);\n    var graphic = __webpack_require__(608);\n    var listComponentHelper = __webpack_require__(724);\n    var layoutUtil = __webpack_require__(619);\n\n    var curry = zrUtil.curry;\n    var each = zrUtil.each;\n    var Group = graphic.Group;\n\n    module.exports = __webpack_require__(607).extendComponentView({\n\n        type: 'legend.plain',\n\n        newlineDisabled: false,\n\n        /**\n         * @override\n         */\n        init: function () {\n\n            /**\n             * @private\n             * @type {module:zrender/container/Group}\n             */\n            this.group.add(this._contentGroup = new Group());\n\n            /**\n             * @private\n             * @type {module:zrender/Element}\n             */\n            this._backgroundEl;\n        },\n\n        /**\n         * @protected\n         */\n        getContentGroup: function () {\n            return this._contentGroup;\n        },\n\n        /**\n         * @override\n         */\n        render: function (legendModel, ecModel, api) {\n\n            this.resetInner();\n\n            if (!legendModel.get('show', true)) {\n                return;\n            }\n\n            var itemAlign = legendModel.get('align');\n            if (!itemAlign || itemAlign === 'auto') {\n                itemAlign = (\n                    legendModel.get('left') === 'right'\n                    && legendModel.get('orient') === 'vertical'\n                ) ? 'right' : 'left';\n            }\n\n            this.renderInner(itemAlign, legendModel, ecModel, api);\n\n            // Perform layout.\n            var positionInfo = legendModel.getBoxLayoutParams();\n            var viewportSize = {width: api.getWidth(), height: api.getHeight()};\n            var padding = legendModel.get('padding');\n\n            var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n            var mainRect = this.layoutInner(legendModel, itemAlign, maxSize);\n\n            // Place mainGroup, based on the calculated `mainRect`.\n            var layoutRect = layoutUtil.getLayoutRect(\n                zrUtil.defaults({width: mainRect.width, height: mainRect.height}, positionInfo),\n                viewportSize,\n                padding\n            );\n            this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]);\n\n            // Render background after group is layout.\n            this.group.add(\n                this._backgroundEl = listComponentHelper.makeBackground(mainRect, legendModel)\n            );\n        },\n\n        /**\n         * @protected\n         */\n        resetInner: function () {\n            this.getContentGroup().removeAll();\n            this._backgroundEl && this.group.remove(this._backgroundEl);\n        },\n\n        /**\n         * @protected\n         */\n        renderInner: function (itemAlign, legendModel, ecModel, api) {\n            var contentGroup = this.getContentGroup();\n            var legendDrawnMap = zrUtil.createHashMap();\n            var selectMode = legendModel.get('selectedMode');\n\n            each(legendModel.getData(), function (itemModel, dataIndex) {\n                var name = itemModel.get('name');\n\n                // Use empty string or \\n as a newline string\n                if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n                    contentGroup.add(new Group({\n                        newline: true\n                    }));\n                    return;\n                }\n\n                var seriesModel = ecModel.getSeriesByName(name)[0];\n\n                if (legendDrawnMap.get(name)) {\n                    // Have been drawed\n                    return;\n                }\n\n                // Series legend\n                if (seriesModel) {\n                    var data = seriesModel.getData();\n                    var color = data.getVisual('color');\n\n                    // If color is a callback function\n                    if (typeof color === 'function') {\n                        // Use the first data\n                        color = color(seriesModel.getDataParams(0));\n                    }\n\n                    // Using rect symbol defaultly\n                    var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n                    var symbolType = data.getVisual('symbol');\n\n                    var itemGroup = this._createItem(\n                        name, dataIndex, itemModel, legendModel,\n                        legendSymbolType, symbolType,\n                        itemAlign, color,\n                        selectMode\n                    );\n\n                    itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                        .on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api))\n                        .on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n\n                    legendDrawnMap.set(name, true);\n                }\n                else {\n                    // Data legend of pie, funnel\n                    ecModel.eachRawSeries(function (seriesModel) {\n                        // In case multiple series has same data name\n                        if (legendDrawnMap.get(name)) {\n                            return;\n                        }\n                        if (seriesModel.legendDataProvider) {\n                            var data = seriesModel.legendDataProvider();\n                            var idx = data.indexOfName(name);\n                            if (idx < 0) {\n                                return;\n                            }\n\n                            var color = data.getItemVisual(idx, 'color');\n\n                            var legendSymbolType = 'roundRect';\n\n                            var itemGroup = this._createItem(\n                                name, dataIndex, itemModel, legendModel,\n                                legendSymbolType, null,\n                                itemAlign, color,\n                                selectMode\n                            );\n\n                            itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                                // FIXME Should not specify the series name\n                                .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api))\n                                .on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n\n                            legendDrawnMap.set(name, true);\n                        }\n                    }, this);\n                }\n\n                if (__DEV__) {\n                    if (!legendDrawnMap.get(name)) {\n                        console.warn(name + ' series not exists. Legend data should be same with series name or data name.');\n                    }\n                }\n            }, this);\n        },\n\n        _createItem: function (\n            name, dataIndex, itemModel, legendModel,\n            legendSymbolType, symbolType,\n            itemAlign, color, selectMode\n        ) {\n            var itemWidth = legendModel.get('itemWidth');\n            var itemHeight = legendModel.get('itemHeight');\n            var inactiveColor = legendModel.get('inactiveColor');\n\n            var isSelected = legendModel.isSelected(name);\n            var itemGroup = new Group();\n\n            var textStyleModel = itemModel.getModel('textStyle');\n\n            var itemIcon = itemModel.get('icon');\n\n            var tooltipModel = itemModel.getModel('tooltip');\n            var legendGlobalTooltipModel = tooltipModel.parentModel;\n\n            // Use user given icon first\n            legendSymbolType = itemIcon || legendSymbolType;\n            itemGroup.add(symbolCreator.createSymbol(\n                legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor\n            ));\n\n            // Compose symbols\n            // PENDING\n            if (!itemIcon && symbolType\n                // At least show one symbol, can't be all none\n                && ((symbolType !== legendSymbolType) || symbolType == 'none')\n            ) {\n                var size = itemHeight * 0.8;\n                if (symbolType === 'none') {\n                    symbolType = 'circle';\n                }\n                // Put symbol in the center\n                itemGroup.add(symbolCreator.createSymbol(\n                    symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size,\n                    isSelected ? color : inactiveColor\n                ));\n            }\n\n            var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n            var textAlign = itemAlign;\n\n            var formatter = legendModel.get('formatter');\n            var content = name;\n            if (typeof formatter === 'string' && formatter) {\n                content = formatter.replace('{name}', name != null ? name : '');\n            }\n            else if (typeof formatter === 'function') {\n                content = formatter(name);\n            }\n\n            itemGroup.add(new graphic.Text({\n                style: graphic.setTextStyle({}, textStyleModel, {\n                    text: content,\n                    x: textX,\n                    y: itemHeight / 2,\n                    textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n                    textAlign: textAlign,\n                    textVerticalAlign: 'middle'\n                })\n            }));\n\n            // Add a invisible rect to increase the area of mouse hover\n            var hitRect = new graphic.Rect({\n                shape: itemGroup.getBoundingRect(),\n                invisible: true,\n                tooltip: tooltipModel.get('show') ? zrUtil.extend({\n                    content: name,\n                    // Defaul formatter\n                    formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n                        return name;\n                    },\n                    formatterParams: {\n                        componentType: 'legend',\n                        legendIndex: legendModel.componentIndex,\n                        name: name,\n                        $vars: ['name']\n                    }\n                }, tooltipModel.option) : null\n            });\n            itemGroup.add(hitRect);\n\n            itemGroup.eachChild(function (child) {\n                child.silent = true;\n            });\n\n            hitRect.silent = !selectMode;\n\n            this.getContentGroup().add(itemGroup);\n\n            graphic.setHoverStyle(itemGroup);\n\n            itemGroup.__legendDataIndex = dataIndex;\n\n            return itemGroup;\n        },\n\n        /**\n         * @protected\n         */\n        layoutInner: function (legendModel, itemAlign, maxSize) {\n            var contentGroup = this.getContentGroup();\n\n            // Place items in contentGroup.\n            layoutUtil.box(\n                legendModel.get('orient'),\n                contentGroup,\n                legendModel.get('itemGap'),\n                maxSize.width,\n                maxSize.height\n            );\n\n            var contentRect = contentGroup.getBoundingRect();\n            contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n\n            return this.group.getBoundingRect();\n        }\n\n    });\n\n    function dispatchSelectAction(name, api) {\n        api.dispatchAction({\n            type: 'legendToggleSelect',\n            name: name\n        });\n    }\n\n    function dispatchHighlightAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'highlight',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n    function dispatchDownplayAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'downplay',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n\n\n/***/ }),\n/* 728 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Legend action\n */\n\n\n    var echarts = __webpack_require__(607);\n    var zrUtil = __webpack_require__(606);\n\n    function legendSelectActionHandler(methodName, payload, ecModel) {\n        var selectedMap = {};\n        var isToggleSelect = methodName === 'toggleSelected';\n        var isSelected;\n        // Update all legend components\n        ecModel.eachComponent('legend', function (legendModel) {\n            if (isToggleSelect && isSelected != null) {\n                // Force other legend has same selected status\n                // Or the first is toggled to true and other are toggled to false\n                // In the case one legend has some item unSelected in option. And if other legend\n                // doesn't has the item, they will assume it is selected.\n                legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n            }\n            else {\n                legendModel[methodName](payload.name);\n                isSelected = legendModel.isSelected(payload.name);\n            }\n            var legendData = legendModel.getData();\n            zrUtil.each(legendData, function (model) {\n                var name = model.get('name');\n                // Wrap element\n                if (name === '\\n' || name === '') {\n                    return;\n                }\n                var isItemSelected = legendModel.isSelected(name);\n                if (selectedMap.hasOwnProperty(name)) {\n                    // Unselected if any legend is unselected\n                    selectedMap[name] = selectedMap[name] && isItemSelected;\n                }\n                else {\n                    selectedMap[name] = isItemSelected;\n                }\n            });\n        });\n        // Return the event explicitly\n        return {\n            name: payload.name,\n            selected: selectedMap\n        };\n    }\n    /**\n     * @event legendToggleSelect\n     * @type {Object}\n     * @property {string} type 'legendToggleSelect'\n     * @property {string} [from]\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendToggleSelect', 'legendselectchanged',\n        zrUtil.curry(legendSelectActionHandler, 'toggleSelected')\n    );\n\n    /**\n     * @event legendSelect\n     * @type {Object}\n     * @property {string} type 'legendSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendSelect', 'legendselected',\n        zrUtil.curry(legendSelectActionHandler, 'select')\n    );\n\n    /**\n     * @event legendUnSelect\n     * @type {Object}\n     * @property {string} type 'legendUnSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendUnSelect', 'legendunselected',\n        zrUtil.curry(legendSelectActionHandler, 'unSelect')\n    );\n\n\n\n/***/ }),\n/* 729 */\n/***/ (function(module, exports) {\n\n\n   module.exports = function (ecModel) {\n        var legendModels = ecModel.findComponents({\n            mainType: 'legend'\n        });\n        if (legendModels && legendModels.length) {\n            ecModel.filterSeries(function (series) {\n                // If in any legend component the status is not selected.\n                // Because in legend series is assumed selected when it is not in the legend data.\n                for (var i = 0; i < legendModels.length; i++) {\n                    if (!legendModels[i].isSelected(series.name)) {\n                        return false;\n                    }\n                }\n                return true;\n            });\n        }\n    };\n\n\n/***/ }),\n/* 730 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// FIXME Better way to pack data in graphic element\n\n\n    __webpack_require__(718);\n\n    __webpack_require__(732);\n\n    __webpack_require__(733);\n\n\n    // Show tip action\n    /**\n     * @action\n     * @property {string} type\n     * @property {number} seriesIndex\n     * @property {number} dataIndex\n     * @property {number} [x]\n     * @property {number} [y]\n     */\n    __webpack_require__(607).registerAction(\n        {\n            type: 'showTip',\n            event: 'showTip',\n            update: 'tooltip:manuallyShowTip'\n        },\n        // noop\n        function () {}\n    );\n    // Hide tip action\n    __webpack_require__(607).registerAction(\n        {\n            type: 'hideTip',\n            event: 'hideTip',\n            update: 'tooltip:manuallyHideTip'\n        },\n        // noop\n        function () {}\n    );\n\n\n/***/ }),\n/* 731 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/component/tooltip/TooltipContent\n */\n\n\n    var zrUtil = __webpack_require__(606);\n    var zrColor = __webpack_require__(627);\n    var eventUtil = __webpack_require__(625);\n    var formatUtil = __webpack_require__(613);\n    var each = zrUtil.each;\n    var toCamelCase = formatUtil.toCamelCase;\n    var env = __webpack_require__(615);\n\n    var vendors = ['', '-webkit-', '-moz-', '-o-'];\n\n    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n\n    /**\n     * @param {number} duration\n     * @return {string}\n     * @inner\n     */\n    function assembleTransition(duration) {\n        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\n                            + 'top ' + duration + 's ' + transitionCurve;\n        return zrUtil.map(vendors, function (vendorPrefix) {\n            return vendorPrefix + 'transition:' + transitionText;\n        }).join(';');\n    }\n\n    /**\n     * @param {Object} textStyle\n     * @return {string}\n     * @inner\n     */\n    function assembleFont(textStyleModel) {\n        var cssText = [];\n\n        var fontSize = textStyleModel.get('fontSize');\n        var color = textStyleModel.getTextColor();\n\n        color && cssText.push('color:' + color);\n\n        cssText.push('font:' + textStyleModel.getFont());\n\n        fontSize &&\n            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n\n        each(['decoration', 'align'], function (name) {\n            var val = textStyleModel.get(name);\n            val && cssText.push('text-' + name + ':' + val);\n        });\n\n        return cssText.join(';');\n    }\n\n    /**\n     * @param {Object} tooltipModel\n     * @return {string}\n     * @inner\n     */\n    function assembleCssText(tooltipModel) {\n\n        var cssText = [];\n\n        var transitionDuration = tooltipModel.get('transitionDuration');\n        var backgroundColor = tooltipModel.get('backgroundColor');\n        var textStyleModel = tooltipModel.getModel('textStyle');\n        var padding = tooltipModel.get('padding');\n\n        // Animation transition. Do not animate when transitionDuration is 0.\n        transitionDuration &&\n            cssText.push(assembleTransition(transitionDuration));\n\n        if (backgroundColor) {\n            if (env.canvasSupported) {\n                cssText.push('background-Color:' + backgroundColor);\n            }\n            else {\n                // for ie\n                cssText.push(\n                    'background-Color:#' + zrColor.toHex(backgroundColor)\n                );\n                cssText.push('filter:alpha(opacity=70)');\n            }\n        }\n\n        // Border style\n        each(['width', 'color', 'radius'], function (name) {\n            var borderName = 'border-' + name;\n            var camelCase = toCamelCase(borderName);\n            var val = tooltipModel.get(camelCase);\n            val != null &&\n                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n        });\n\n        // Text style\n        cssText.push(assembleFont(textStyleModel));\n\n        // Padding\n        if (padding != null) {\n            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n        }\n\n        return cssText.join(';') + ';';\n    }\n\n    /**\n     * @alias module:echarts/component/tooltip/TooltipContent\n     * @constructor\n     */\n    function TooltipContent(container, api) {\n        var el = document.createElement('div');\n        var zr = this._zr = api.getZr();\n\n        this.el = el;\n\n        this._x = api.getWidth() / 2;\n        this._y = api.getHeight() / 2;\n\n        container.appendChild(el);\n\n        this._container = container;\n\n        this._show = false;\n\n        /**\n         * @private\n         */\n        this._hideTimeout;\n\n        var self = this;\n        el.onmouseenter = function () {\n            // clear the timeout in hideLater and keep showing tooltip\n            if (self._enterable) {\n                clearTimeout(self._hideTimeout);\n                self._show = true;\n            }\n            self._inContent = true;\n        };\n        el.onmousemove = function (e) {\n            e = e || window.event;\n            if (!self._enterable) {\n                // Try trigger zrender event to avoid mouse\n                // in and out shape too frequently\n                var handler = zr.handler;\n                eventUtil.normalizeEvent(container, e, true);\n                handler.dispatch('mousemove', e);\n            }\n        };\n        el.onmouseleave = function () {\n            if (self._enterable) {\n                if (self._show) {\n                    self.hideLater(self._hideDelay);\n                }\n            }\n            self._inContent = false;\n        };\n    }\n\n    TooltipContent.prototype = {\n\n        constructor: TooltipContent,\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _enterable: true,\n\n        /**\n         * Update when tooltip is rendered\n         */\n        update: function () {\n            // FIXME\n            // Move this logic to ec main?\n            var container = this._container;\n            var stl = container.currentStyle\n                || document.defaultView.getComputedStyle(container);\n            var domStyle = container.style;\n            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n                domStyle.position = 'relative';\n            }\n            // Hide the tooltip\n            // PENDING\n            // this.hide();\n        },\n\n        show: function (tooltipModel) {\n            clearTimeout(this._hideTimeout);\n            var el = this.el;\n\n            el.style.cssText = gCssText + assembleCssText(tooltipModel)\n                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\n                + (tooltipModel.get('extraCssText') || '');\n\n            el.style.display = el.innerHTML ?  'block' : 'none';\n\n            this._show = true;\n        },\n\n        setContent: function (content) {\n            this.el.innerHTML = content == null ? '' : content;\n        },\n\n        setEnterable: function (enterable) {\n            this._enterable = enterable;\n        },\n\n        getSize: function () {\n            var el = this.el;\n            return [el.clientWidth, el.clientHeight];\n        },\n\n        moveTo: function (x, y) {\n            // xy should be based on canvas root. But tooltipContent is\n            // the sibling of canvas root. So padding of ec container\n            // should be considered here.\n            var zr = this._zr;\n            var viewportRootOffset;\n            if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n                x += viewportRootOffset.offsetLeft;\n                y += viewportRootOffset.offsetTop;\n            }\n\n            var style = this.el.style;\n            style.left = x + 'px';\n            style.top = y + 'px';\n\n            this._x = x;\n            this._y = y;\n        },\n\n        hide: function () {\n            this.el.style.display = 'none';\n            this._show = false;\n        },\n\n        hideLater: function (time) {\n            if (this._show && !(this._inContent && this._enterable)) {\n                if (time) {\n                    this._hideDelay = time;\n                    // Set show false to avoid invoke hideLater mutiple times\n                    this._show = false;\n                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n                }\n                else {\n                    this.hide();\n                }\n            }\n        },\n\n        isShow: function () {\n            return this._show;\n        }\n    };\n\n    module.exports = TooltipContent;\n\n\n/***/ }),\n/* 732 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    __webpack_require__(607).extendComponentModel({\n\n        type: 'tooltip',\n\n        dependencies: ['axisPointer'],\n\n        defaultOption: {\n            zlevel: 0,\n\n            z: 8,\n\n            show: true,\n\n            // tooltip主体内容\n            showContent: true,\n\n            // 'trigger' only works on coordinate system.\n            // 'item' | 'axis' | 'none'\n            trigger: 'item',\n\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: 'mousemove|click',\n\n            alwaysShowContent: false,\n\n            displayMode: 'single', // 'single' | 'multipleByCoordSys'\n\n            // 位置 {Array} | {Function}\n            // position: null\n            // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n            // align: null,\n            // verticalAlign: null,\n\n            // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n            confine: false,\n\n            // 内容格式器：{string}（Template） ¦ {Function}\n            // formatter: null\n\n            showDelay: 0,\n\n            // 隐藏延迟，单位ms\n            hideDelay: 100,\n\n            // 动画变换时间，单位s\n            transitionDuration: 0.4,\n\n            enterable: false,\n\n            // 提示背景颜色，默认为透明度为0.7的黑色\n            backgroundColor: 'rgba(50,50,50,0.7)',\n\n            // 提示边框颜色\n            borderColor: '#333',\n\n            // 提示边框圆角，单位px，默认为4\n            borderRadius: 4,\n\n            // 提示边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 提示内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // Extra css text\n            extraCssText: '',\n\n            // 坐标轴指示器，坐标轴触发有效\n            axisPointer: {\n                // 默认为直线\n                // 可选为：'line' | 'shadow' | 'cross'\n                type: 'line',\n\n                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n                // 极坐标系会默认选择 angle 轴\n                axis: 'auto',\n\n                animation: 'auto',\n                animationDurationUpdate: 200,\n                animationEasingUpdate: 'exponentialOut',\n\n                crossStyle: {\n                    color: '#999',\n                    width: 1,\n                    type: 'dashed',\n\n                    // TODO formatter\n                    textStyle: {}\n                }\n\n                // lineStyle and shadowStyle should not be specified here,\n                // otherwise it will always override those styles on option.axisPointer.\n            },\n            textStyle: {\n                color: '#fff',\n                fontSize: 14\n            }\n        }\n    });\n\n\n/***/ }),\n/* 733 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var TooltipContent = __webpack_require__(731);\n    var zrUtil = __webpack_require__(606);\n    var formatUtil = __webpack_require__(613);\n    var numberUtil = __webpack_require__(610);\n    var graphic = __webpack_require__(608);\n    var findPointFromSeries = __webpack_require__(660);\n    var layoutUtil = __webpack_require__(619);\n    var env = __webpack_require__(615);\n    var Model = __webpack_require__(614);\n    var globalListener = __webpack_require__(661);\n    var axisHelper = __webpack_require__(620);\n    var axisPointerViewHelper = __webpack_require__(662);\n\n    var bind = zrUtil.bind;\n    var each = zrUtil.each;\n    var parsePercent = numberUtil.parsePercent;\n\n\n    var proxyRect = new graphic.Rect({\n        shape: {x: -1, y: -1, width: 2, height: 2}\n    });\n\n    __webpack_require__(607).extendComponentView({\n\n        type: 'tooltip',\n\n        init: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var tooltipContent = new TooltipContent(api.getDom(), api);\n            this._tooltipContent = tooltipContent;\n        },\n\n        render: function (tooltipModel, ecModel, api) {\n            if (env.node) {\n                return;\n            }\n\n            // Reset\n            this.group.removeAll();\n\n            /**\n             * @private\n             * @type {module:echarts/component/tooltip/TooltipModel}\n             */\n            this._tooltipModel = tooltipModel;\n\n            /**\n             * @private\n             * @type {module:echarts/model/Global}\n             */\n            this._ecModel = ecModel;\n\n            /**\n             * @private\n             * @type {module:echarts/ExtensionAPI}\n             */\n            this._api = api;\n\n            /**\n             * Should be cleaned when render.\n             * @private\n             * @type {Array.<Array.<Object>>}\n             */\n            this._lastDataByCoordSys = null;\n\n            /**\n             * @private\n             * @type {boolean}\n             */\n            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n\n            var tooltipContent = this._tooltipContent;\n            tooltipContent.update();\n            tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n            this._initGlobalListener();\n\n            this._keepShow();\n        },\n\n        _initGlobalListener: function () {\n            var tooltipModel = this._tooltipModel;\n            var triggerOn = tooltipModel.get('triggerOn');\n\n            globalListener.register(\n                'itemTooltip',\n                this._api,\n                bind(function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none') {\n                        if (triggerOn.indexOf(currTrigger) >= 0) {\n                            this._tryShow(e, dispatchAction);\n                        }\n                        else if (currTrigger === 'leave') {\n                            this._hide(dispatchAction);\n                        }\n                    }\n                }, this)\n            );\n        },\n\n        _keepShow: function () {\n            var tooltipModel = this._tooltipModel;\n            var ecModel = this._ecModel;\n            var api = this._api;\n\n            // Try to keep the tooltip show when refreshing\n            if (this._lastX != null\n                && this._lastY != null\n                // When user is willing to control tooltip totally using API,\n                // self.manuallyShowTip({x, y}) might cause tooltip hide,\n                // which is not expected.\n                && tooltipModel.get('triggerOn') !== 'none'\n            ) {\n                var self = this;\n                clearTimeout(this._refreshUpdateTimeout);\n                this._refreshUpdateTimeout = setTimeout(function () {\n                    // Show tip next tick after other charts are rendered\n                    // In case highlight action has wrong result\n                    // FIXME\n                    self.manuallyShowTip(tooltipModel, ecModel, api, {\n                        x: self._lastX,\n                        y: self._lastY\n                    });\n                });\n            }\n        },\n\n        /**\n         * Show tip manually by\n         * dispatchAction({\n         *     type: 'showTip',\n         *     x: 10,\n         *     y: 10\n         * });\n         * Or\n         * dispatchAction({\n         *      type: 'showTip',\n         *      seriesIndex: 0,\n         *      dataIndex or dataIndexInside or name\n         * });\n         *\n         *  TODO Batch\n         */\n        manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n            if (payload.from === this.uid || env.node) {\n                return;\n            }\n\n            var dispatchAction = makeDispatchAction(payload, api);\n\n            // Reset ticket\n            this._ticket = '';\n\n            // When triggered from axisPointer.\n            var dataByCoordSys = payload.dataByCoordSys;\n\n            if (payload.tooltip && payload.x != null && payload.y != null) {\n                var el = proxyRect;\n                el.position = [payload.x, payload.y];\n                el.update();\n                el.tooltip = payload.tooltip;\n                // Manually show tooltip while view is not using zrender elements.\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    target: el\n                }, dispatchAction);\n            }\n            else if (dataByCoordSys) {\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    event: {},\n                    dataByCoordSys: payload.dataByCoordSys,\n                    tooltipOption: payload.tooltipOption\n                }, dispatchAction);\n            }\n            else if (payload.seriesIndex != null) {\n\n                if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n                    return;\n                }\n\n                var pointInfo = findPointFromSeries(payload, ecModel);\n                var cx = pointInfo.point[0];\n                var cy = pointInfo.point[1];\n                if (cx != null && cy != null) {\n                    this._tryShow({\n                        offsetX: cx,\n                        offsetY: cy,\n                        position: payload.position,\n                        target: pointInfo.el,\n                        event: {}\n                    }, dispatchAction);\n                }\n            }\n            else if (payload.x != null && payload.y != null) {\n                // FIXME\n                // should wrap dispatchAction like `axisPointer/globalListener` ?\n                api.dispatchAction({\n                    type: 'updateAxisPointer',\n                    x: payload.x,\n                    y: payload.y\n                });\n\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    target: api.getZr().findHover(payload.x, payload.y).target,\n                    event: {}\n                }, dispatchAction);\n            }\n        },\n\n        manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n            var tooltipContent = this._tooltipContent;\n\n            if (!this._alwaysShowContent) {\n                tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n            }\n\n            this._lastX = this._lastY = null;\n\n            if (payload.from !== this.uid) {\n                this._hide(makeDispatchAction(payload, api));\n            }\n        },\n\n        // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n        // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n        // and tooltip.\n        _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n            var seriesIndex = payload.seriesIndex;\n            var dataIndex = payload.dataIndex;\n            var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n            if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n                return;\n            }\n\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n            if (!seriesModel) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                seriesModel,\n                (seriesModel.coordinateSystem || {}).model,\n                tooltipModel\n            ]);\n\n            if (tooltipModel.get('trigger') !== 'axis') {\n                return;\n            }\n\n            api.dispatchAction({\n                type: 'updateAxisPointer',\n                seriesIndex: seriesIndex,\n                dataIndex: dataIndex,\n                position: payload.position\n            });\n\n            return true;\n        },\n\n        _tryShow: function (e, dispatchAction) {\n            var el = e.target;\n            var tooltipModel = this._tooltipModel;\n\n            if (!tooltipModel) {\n                return;\n            }\n\n            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n            this._lastX = e.offsetX;\n            this._lastY = e.offsetY;\n\n            var dataByCoordSys = e.dataByCoordSys;\n            if (dataByCoordSys && dataByCoordSys.length) {\n                this._showAxisTooltip(dataByCoordSys, e);\n            }\n            // Always show item tooltip if mouse is on the element with dataIndex\n            else if (el && el.dataIndex != null) {\n                this._lastDataByCoordSys = null;\n                this._showSeriesItemTooltip(e, el, dispatchAction);\n            }\n            // Tooltip provided directly. Like legend.\n            else if (el && el.tooltip) {\n                this._lastDataByCoordSys = null;\n                this._showComponentItemTooltip(e, el, dispatchAction);\n            }\n            else {\n                this._lastDataByCoordSys = null;\n                this._hide(dispatchAction);\n            }\n        },\n\n        _showOrMove: function (tooltipModel, cb) {\n            // showDelay is used in this case: tooltip.enterable is set\n            // as true. User intent to move mouse into tooltip and click\n            // something. `showDelay` makes it easyer to enter the content\n            // but tooltip do not move immediately.\n            var delay = tooltipModel.get('showDelay');\n            cb = zrUtil.bind(cb, this);\n            clearTimeout(this._showTimout);\n            delay > 0\n                ? (this._showTimout = setTimeout(cb, delay))\n                : cb();\n        },\n\n        _showAxisTooltip: function (dataByCoordSys, e) {\n            var ecModel = this._ecModel;\n            var globalTooltipModel = this._tooltipModel;\n            var point = [e.offsetX, e.offsetY];\n            var singleDefaultHTML = [];\n            var singleParamsList = [];\n            var singleTooltipModel = buildTooltipModel([\n                e.tooltipOption,\n                globalTooltipModel\n            ]);\n\n            each(dataByCoordSys, function (itemCoordSys) {\n                // var coordParamList = [];\n                // var coordDefaultHTML = [];\n                // var coordTooltipModel = buildTooltipModel([\n                //     e.tooltipOption,\n                //     itemCoordSys.tooltipOption,\n                //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n                //     globalTooltipModel\n                // ]);\n                // var displayMode = coordTooltipModel.get('displayMode');\n                // var paramsList = displayMode === 'single' ? singleParamsList : [];\n\n                each(itemCoordSys.dataByAxis, function (item) {\n                    var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n                    var axisValue = item.value;\n                    var seriesDefaultHTML = [];\n\n                    if (!axisModel || axisValue == null) {\n                        return;\n                    }\n\n                    var valueLabel = axisPointerViewHelper.getValueLabel(\n                        axisValue, axisModel.axis, ecModel,\n                        item.seriesDataIndices,\n                        item.valueLabelOpt\n                    );\n\n                    zrUtil.each(item.seriesDataIndices, function (idxItem) {\n                        var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                        var dataIndex = idxItem.dataIndexInside;\n                        var dataParams = series && series.getDataParams(dataIndex);\n                        dataParams.axisDim = item.axisDim;\n                        dataParams.axisIndex = item.axisIndex;\n                        dataParams.axisType = item.axisType;\n                        dataParams.axisId = item.axisId;\n                        dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n                        dataParams.axisValueLabel = valueLabel;\n\n                        if (dataParams) {\n                            singleParamsList.push(dataParams);\n                            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n                        }\n                    });\n\n                    // Default tooltip content\n                    // FIXME\n                    // (1) shold be the first data which has name?\n                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n                    var firstLine = valueLabel;\n                    singleDefaultHTML.push(\n                        (firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '')\n                        + seriesDefaultHTML.join('<br />')\n                    );\n                });\n            }, this);\n\n            // In most case, the second axis is shown upper than the first one.\n            singleDefaultHTML.reverse();\n            singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n\n            var positionExpr = e.position;\n            this._showOrMove(singleTooltipModel, function () {\n                if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n                    this._updatePosition(\n                        singleTooltipModel,\n                        positionExpr,\n                        point[0], point[1],\n                        this._tooltipContent,\n                        singleParamsList\n                    );\n                }\n                else {\n                    this._showTooltipContent(\n                        singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(),\n                        point[0], point[1], positionExpr\n                    );\n                }\n            });\n\n            // Do not trigger events here, because this branch only be entered\n            // from dispatchAction.\n        },\n\n        _showSeriesItemTooltip: function (e, el, dispatchAction) {\n            var ecModel = this._ecModel;\n            // Use dataModel in element if possible\n            // Used when mouseover on a element like markPoint or edge\n            // In which case, the data is not main data in series.\n            var seriesIndex = el.seriesIndex;\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n            // For example, graph link.\n            var dataModel = el.dataModel || seriesModel;\n            var dataIndex = el.dataIndex;\n            var dataType = el.dataType;\n            var data = dataModel.getData();\n\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                dataModel,\n                seriesModel && (seriesModel.coordinateSystem || {}).model,\n                this._tooltipModel\n            ]);\n\n            var tooltipTrigger = tooltipModel.get('trigger');\n            if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n                return;\n            }\n\n            var params = dataModel.getDataParams(dataIndex, dataType);\n            var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n            var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n            this._showOrMove(tooltipModel, function () {\n                this._showTooltipContent(\n                    tooltipModel, defaultHtml, params, asyncTicket,\n                    e.offsetX, e.offsetY, e.position, e.target\n                );\n            });\n\n            // FIXME\n            // duplicated showtip if manuallyShowTip is called from dispatchAction.\n            dispatchAction({\n                type: 'showTip',\n                dataIndexInside: dataIndex,\n                dataIndex: data.getRawIndex(dataIndex),\n                seriesIndex: seriesIndex,\n                from: this.uid\n            });\n        },\n\n        _showComponentItemTooltip: function (e, el, dispatchAction) {\n            var tooltipOpt = el.tooltip;\n            if (typeof tooltipOpt === 'string') {\n                var content = tooltipOpt;\n                tooltipOpt = {\n                    content: content,\n                    // Fixed formatter\n                    formatter: content\n                };\n            }\n            var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n            var defaultHtml = subTooltipModel.get('content');\n            var asyncTicket = Math.random();\n\n            // Do not check whether `trigger` is 'none' here, because `trigger`\n            // only works on cooridinate system. In fact, we have not found case\n            // that requires setting `trigger` nothing on component yet.\n\n            this._showOrMove(subTooltipModel, function () {\n                this._showTooltipContent(\n                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\n                    asyncTicket, e.offsetX, e.offsetY, e.position, el\n                );\n            });\n\n            // If not dispatch showTip, tip may be hide triggered by axis.\n            dispatchAction({\n                type: 'showTip',\n                from: this.uid\n            });\n        },\n\n        _showTooltipContent: function (\n            tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el\n        ) {\n            // Reset ticket\n            this._ticket = '';\n\n            if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n                return;\n            }\n\n            var tooltipContent = this._tooltipContent;\n\n            var formatter = tooltipModel.get('formatter');\n            positionExpr = positionExpr || tooltipModel.get('position');\n            var html = defaultHtml;\n\n            if (formatter && typeof formatter === 'string') {\n                html = formatUtil.formatTpl(formatter, params, true);\n            }\n            else if (typeof formatter === 'function') {\n                var callback = bind(function (cbTicket, html) {\n                    if (cbTicket === this._ticket) {\n                        tooltipContent.setContent(html);\n                        this._updatePosition(\n                            tooltipModel, positionExpr, x, y, tooltipContent, params, el\n                        );\n                    }\n                }, this);\n                this._ticket = asyncTicket;\n                html = formatter(params, asyncTicket, callback);\n            }\n\n            tooltipContent.setContent(html);\n            tooltipContent.show(tooltipModel);\n\n            this._updatePosition(\n                tooltipModel, positionExpr, x, y, tooltipContent, params, el\n            );\n        },\n\n        /**\n         * @param  {string|Function|Array.<number>|Object} positionExpr\n         * @param  {number} x Mouse x\n         * @param  {number} y Mouse y\n         * @param  {boolean} confine Whether confine tooltip content in view rect.\n         * @param  {Object|<Array.<Object>} params\n         * @param  {module:zrender/Element} el target element\n         * @param  {module:echarts/ExtensionAPI} api\n         * @return {Array.<number>}\n         */\n        _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n            var viewWidth = this._api.getWidth();\n            var viewHeight = this._api.getHeight();\n            positionExpr = positionExpr || tooltipModel.get('position');\n\n            var contentSize = content.getSize();\n            var align = tooltipModel.get('align');\n            var vAlign = tooltipModel.get('verticalAlign');\n            var rect = el && el.getBoundingRect().clone();\n            el && rect.applyTransform(el.transform);\n\n            if (typeof positionExpr === 'function') {\n                // Callback of position can be an array or a string specify the position\n                positionExpr = positionExpr([x, y], params, content.el, rect, {\n                    viewSize: [viewWidth, viewHeight],\n                    contentSize: contentSize.slice()\n                });\n            }\n\n            if (zrUtil.isArray(positionExpr)) {\n                x = parsePercent(positionExpr[0], viewWidth);\n                y = parsePercent(positionExpr[1], viewHeight);\n            }\n            else if (zrUtil.isObject(positionExpr)) {\n                positionExpr.width = contentSize[0];\n                positionExpr.height = contentSize[1];\n                var layoutRect = layoutUtil.getLayoutRect(\n                    positionExpr, {width: viewWidth, height: viewHeight}\n                );\n                x = layoutRect.x;\n                y = layoutRect.y;\n                align = null;\n                // When positionExpr is left/top/right/bottom,\n                // align and verticalAlign will not work.\n                vAlign = null;\n            }\n            // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n            else if (typeof positionExpr === 'string' && el) {\n                var pos = calcTooltipPosition(\n                    positionExpr, rect, contentSize\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n            else {\n                var pos = refixTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n            vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n            if (tooltipModel.get('confine')) {\n                var pos = confineTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            content.moveTo(x, y);\n        },\n\n        // FIXME\n        // Should we remove this but leave this to user?\n        _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n            var lastCoordSys = this._lastDataByCoordSys;\n            var contentNotChanged = !!lastCoordSys\n                && lastCoordSys.length === dataByCoordSys.length;\n\n            contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n                var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n                var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n                var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n                contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n\n                contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n                    var thisItem = thisDataByAxis[indexAxis] || {};\n                    var lastIndices = lastItem.seriesDataIndices || [];\n                    var newIndices = thisItem.seriesDataIndices || [];\n\n                    contentNotChanged &=\n                        lastItem.value === thisItem.value\n                        && lastItem.axisType === thisItem.axisType\n                        && lastItem.axisId === thisItem.axisId\n                        && lastIndices.length === newIndices.length;\n\n                    contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n                        var newIdxItem = newIndices[j];\n                        contentNotChanged &=\n                            lastIdxItem.seriesIndex === newIdxItem.seriesIndex\n                            && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n                    });\n                });\n            });\n\n            this._lastDataByCoordSys = dataByCoordSys;\n\n            return !!contentNotChanged;\n        },\n\n        _hide: function (dispatchAction) {\n            // Do not directly hideLater here, because this behavior may be prevented\n            // in dispatchAction when showTip is dispatched.\n\n            // FIXME\n            // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n            this._lastDataByCoordSys = null;\n            dispatchAction({\n                type: 'hideTip',\n                from: this.uid\n            });\n        },\n\n        dispose: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            this._tooltipContent.hide();\n            globalListener.unregister('itemTooltip', api);\n        }\n    });\n\n\n    /**\n     * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n     * From top to bottom. (the last one should be globalTooltipModel);\n     */\n    function buildTooltipModel(modelCascade) {\n        var resultModel = modelCascade.pop();\n        while (modelCascade.length) {\n            var tooltipOpt = modelCascade.pop();\n            if (tooltipOpt) {\n                if (tooltipOpt instanceof Model) {\n                    tooltipOpt = tooltipOpt.get('tooltip', true);\n                }\n                // In each data item tooltip can be simply write:\n                // {\n                //  value: 10,\n                //  tooltip: 'Something you need to know'\n                // }\n                if (typeof tooltipOpt === 'string') {\n                    tooltipOpt = {formatter: tooltipOpt};\n                }\n                resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n            }\n        }\n        return resultModel;\n    }\n\n    function makeDispatchAction(payload, api) {\n        return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n    }\n\n    function refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n        var size = getOuterSize(el);\n        var width = size.width;\n        var height = size.height;\n\n        if (gapH != null) {\n            if (x + width + gapH > viewWidth) {\n                x -= width + gapH;\n            }\n            else {\n                x += gapH;\n            }\n        }\n        if (gapV != null) {\n            if (y + height + gapV > viewHeight) {\n                y -= height + gapV;\n            }\n            else {\n                y += gapV;\n            }\n        }\n        return [x, y];\n    }\n\n    function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var size = getOuterSize(el);\n        var width = size.width;\n        var height = size.height;\n\n        x = Math.min(x + width, viewWidth) - width;\n        y = Math.min(y + height, viewHeight) - height;\n        x = Math.max(x, 0);\n        y = Math.max(y, 0);\n\n        return [x, y];\n    }\n\n    function getOuterSize(el) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        // Consider browser compatibility.\n        // IE8 does not support getComputedStyle.\n        if (document.defaultView && document.defaultView.getComputedStyle) {\n            var stl = document.defaultView.getComputedStyle(el);\n            if (stl) {\n                width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10)\n                    + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n                height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10)\n                    + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n            }\n        }\n\n        return {width: width, height: height};\n    }\n\n    function calcTooltipPosition(position, rect, contentSize) {\n        var domWidth = contentSize[0];\n        var domHeight = contentSize[1];\n        var gap = 5;\n        var x = 0;\n        var y = 0;\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n        switch (position) {\n            case 'inside':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'top':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y - domHeight - gap;\n                break;\n            case 'bottom':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight + gap;\n                break;\n            case 'left':\n                x = rect.x - domWidth - gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'right':\n                x = rect.x + rectWidth + gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n        }\n        return [x, y];\n    }\n\n    function isCenterAlign(align) {\n        return align === 'center' || align === 'middle';\n    }\n\n\n\n\n/***/ }),\n/* 734 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var axisDefault = __webpack_require__(684);\n    var zrUtil = __webpack_require__(606);\n    var ComponentModel = __webpack_require__(618);\n    var layout = __webpack_require__(619);\n\n    // FIXME axisType is fixed ?\n    var AXIS_TYPES = ['value', 'category', 'time', 'log'];\n\n    /**\n     * Generate sub axis model class\n     * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n     * @param {module:echarts/model/Component} BaseAxisModelClass\n     * @param {Function} axisTypeDefaulter\n     * @param {Object} [extraDefaultOption]\n     */\n    module.exports = function (axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n\n        zrUtil.each(AXIS_TYPES, function (axisType) {\n\n            BaseAxisModelClass.extend({\n\n                type: axisName + 'Axis.' + axisType,\n\n                mergeDefaultAndTheme: function (option, ecModel) {\n                    var layoutMode = this.layoutMode;\n                    var inputPositionParams = layoutMode\n                        ? layout.getLayoutParams(option) : {};\n\n                    var themeModel = ecModel.getTheme();\n                    zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n                    zrUtil.merge(option, this.getDefaultOption());\n\n                    option.type = axisTypeDefaulter(axisName, option);\n\n                    if (layoutMode) {\n                        layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n                    }\n                },\n\n                defaultOption: zrUtil.mergeAll(\n                    [\n                        {},\n                        axisDefault[axisType + 'Axis'],\n                        extraDefaultOption\n                    ],\n                    true\n                )\n            });\n        });\n\n        ComponentModel.registerSubTypeDefaulter(\n            axisName + 'Axis',\n            zrUtil.curry(axisTypeDefaulter, axisName)\n        );\n    };\n\n\n/***/ }),\n/* 735 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var Axis = __webpack_require__(650);\n\n    /**\n     * Extend axis 2d\n     * @constructor module:echarts/coord/cartesian/Axis2D\n     * @extends {module:echarts/coord/cartesian/Axis}\n     * @param {string} dim\n     * @param {*} scale\n     * @param {Array.<number>} coordExtent\n     * @param {string} axisType\n     * @param {string} position\n     */\n    var Axis2D = function (dim, scale, coordExtent, axisType, position) {\n        Axis.call(this, dim, scale, coordExtent);\n        /**\n         * Axis type\n         *  - 'category'\n         *  - 'value'\n         *  - 'time'\n         *  - 'log'\n         * @type {string}\n         */\n        this.type = axisType || 'value';\n\n        /**\n         * Axis position\n         *  - 'top'\n         *  - 'bottom'\n         *  - 'left'\n         *  - 'right'\n         */\n        this.position = position || 'bottom';\n    };\n\n    Axis2D.prototype = {\n\n        constructor: Axis2D,\n\n        /**\n         * Index of axis, can be used as key\n         */\n        index: 0,\n        /**\n         * If axis is on the zero position of the other axis\n         * @type {boolean}\n         */\n        onZero: false,\n\n        /**\n         * Axis model\n         * @param {module:echarts/coord/cartesian/AxisModel}\n         */\n        model: null,\n\n        isHorizontal: function () {\n            var position = this.position;\n            return position === 'top' || position === 'bottom';\n        },\n\n        /**\n         * Each item cooresponds to this.getExtent(), which\n         * means globalExtent[0] may greater than globalExtent[1],\n         * unless `asc` is input.\n         *\n         * @param {boolean} [asc]\n         * @return {Array.<number>}\n         */\n        getGlobalExtent: function (asc) {\n            var ret = this.getExtent();\n            ret[0] = this.toGlobalCoord(ret[0]);\n            ret[1] = this.toGlobalCoord(ret[1]);\n            asc && ret[0] > ret[1] && ret.reverse();\n            return ret;\n        },\n\n        getOtherAxis: function () {\n            this.grid.getOtherAxis();\n        },\n\n        /**\n         * If label is ignored.\n         * Automatically used when axis is category and label can not be all shown\n         * @param  {number}  idx\n         * @return {boolean}\n         */\n        isLabelIgnored: function (idx) {\n            if (this.type === 'category') {\n                var labelInterval = this.getLabelInterval();\n                return ((typeof labelInterval === 'function')\n                    && !labelInterval(idx, this.scale.getLabel(idx)))\n                    || idx % (labelInterval + 1);\n            }\n        },\n\n        /**\n         * @override\n         */\n        pointToData: function (point, clamp) {\n            return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n        },\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var localCoord = axis.toLocalCoord(80);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toLocalCoord: null,\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var globalCoord = axis.toLocalCoord(40);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toGlobalCoord: null\n\n    };\n    zrUtil.inherits(Axis2D, Axis);\n\n    module.exports = Axis2D;\n\n\n/***/ }),\n/* 736 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\n\n\n    var zrUtil = __webpack_require__(606);\n\n    function dimAxisMapper(dim) {\n        return this._axes[dim];\n    }\n\n    /**\n     * @alias module:echarts/coord/Cartesian\n     * @constructor\n     */\n    var Cartesian = function (name) {\n        this._axes = {};\n\n        this._dimList = [];\n\n        /**\n         * @type {string}\n         */\n        this.name = name || '';\n    };\n\n    Cartesian.prototype = {\n\n        constructor: Cartesian,\n\n        type: 'cartesian',\n\n        /**\n         * Get axis\n         * @param  {number|string} dim\n         * @return {module:echarts/coord/Cartesian~Axis}\n         */\n        getAxis: function (dim) {\n            return this._axes[dim];\n        },\n\n        /**\n         * Get axes list\n         * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n         */\n        getAxes: function () {\n            return zrUtil.map(this._dimList, dimAxisMapper, this);\n        },\n\n        /**\n         * Get axes list by given scale type\n         */\n        getAxesByScale: function (scaleType) {\n            scaleType = scaleType.toLowerCase();\n            return zrUtil.filter(\n                this.getAxes(),\n                function (axis) {\n                    return axis.scale.type === scaleType;\n                }\n            );\n        },\n\n        /**\n         * Add axis\n         * @param {module:echarts/coord/Cartesian.Axis}\n         */\n        addAxis: function (axis) {\n            var dim = axis.dim;\n\n            this._axes[dim] = axis;\n\n            this._dimList.push(dim);\n        },\n\n        /**\n         * Convert data to coord in nd space\n         * @param {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        dataToCoord: function (val) {\n            return this._dataCoordConvert(val, 'dataToCoord');\n        },\n\n        /**\n         * Convert coord in nd space to data\n         * @param  {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        coordToData: function (val) {\n            return this._dataCoordConvert(val, 'coordToData');\n        },\n\n        _dataCoordConvert: function (input, method) {\n            var dimList = this._dimList;\n\n            var output = input instanceof Array ? [] : {};\n\n            for (var i = 0; i < dimList.length; i++) {\n                var dim = dimList[i];\n                var axis = this._axes[dim];\n\n                output[dim] = axis[method](input[dim]);\n            }\n\n            return output;\n        }\n    };\n\n    module.exports = Cartesian;\n\n\n/***/ }),\n/* 737 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var Cartesian = __webpack_require__(736);\n\n    function Cartesian2D(name) {\n\n        Cartesian.call(this, name);\n    }\n\n    Cartesian2D.prototype = {\n\n        constructor: Cartesian2D,\n\n        type: 'cartesian2d',\n\n        /**\n         * @type {Array.<string>}\n         * @readOnly\n         */\n        dimensions: ['x', 'y'],\n\n        /**\n         * Base axis will be used on stacking.\n         *\n         * @return {module:echarts/coord/cartesian/Axis2D}\n         */\n        getBaseAxis: function () {\n            return this.getAxesByScale('ordinal')[0]\n                || this.getAxesByScale('time')[0]\n                || this.getAxis('x');\n        },\n\n        /**\n         * If contain point\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        containPoint: function (point) {\n            var axisX = this.getAxis('x');\n            var axisY = this.getAxis('y');\n            return axisX.contain(axisX.toLocalCoord(point[0]))\n                && axisY.contain(axisY.toLocalCoord(point[1]));\n        },\n\n        /**\n         * If contain data\n         * @param {Array.<number>} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.getAxis('x').containData(data[0])\n                && this.getAxis('y').containData(data[1]);\n        },\n\n        /**\n         * @param {Array.<number>} data\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        dataToPoint: function (data, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)),\n                yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))\n            ];\n        },\n\n        /**\n         * @param {Array.<number>} point\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        pointToData: function (point, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp),\n                yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)\n            ];\n        },\n\n        /**\n         * Get other axis\n         * @param {module:echarts/coord/cartesian/Axis2D} axis\n         */\n        getOtherAxis: function (axis) {\n            return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n        }\n\n    };\n\n    zrUtil.inherits(Cartesian2D, Cartesian);\n\n    module.exports = Cartesian2D;\n\n\n/***/ }),\n/* 738 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\n\n\n    __webpack_require__(663);\n\n    var ComponentModel = __webpack_require__(618);\n\n    module.exports = ComponentModel.extend({\n\n        type: 'grid',\n\n        dependencies: ['xAxis', 'yAxis'],\n\n        layoutMode: 'box',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Grid}\n         */\n        coordinateSystem: null,\n\n        defaultOption: {\n            show: false,\n            zlevel: 0,\n            z: 0,\n            left: '10%',\n            top: 60,\n            right: '10%',\n            bottom: 60,\n            // If grid size contain label\n            containLabel: false,\n            // width: {totalWidth} - left - right,\n            // height: {totalHeight} - top - bottom,\n            backgroundColor: 'rgba(0,0,0,0)',\n            borderWidth: 1,\n            borderColor: '#ccc'\n        }\n    });\n\n\n/***/ }),\n/* 739 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    function defaultKeyGetter(item) {\n        return item;\n    }\n\n    /**\n     * @param {Array} oldArr\n     * @param {Array} newArr\n     * @param {Function} oldKeyGetter\n     * @param {Function} newKeyGetter\n     * @param {Object} [context] Can be visited by this.context in callback.\n     */\n    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n        this._old = oldArr;\n        this._new = newArr;\n\n        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n\n        this.context = context;\n    }\n\n    DataDiffer.prototype = {\n\n        constructor: DataDiffer,\n\n        /**\n         * Callback function when add a data\n         */\n        add: function (func) {\n            this._add = func;\n            return this;\n        },\n\n        /**\n         * Callback function when update a data\n         */\n        update: function (func) {\n            this._update = func;\n            return this;\n        },\n\n        /**\n         * Callback function when remove a data\n         */\n        remove: function (func) {\n            this._remove = func;\n            return this;\n        },\n\n        execute: function () {\n            var oldArr = this._old;\n            var newArr = this._new;\n\n            var oldDataIndexMap = {};\n            var newDataIndexMap = {};\n            var oldDataKeyArr = [];\n            var newDataKeyArr = [];\n            var i;\n\n            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this);\n\n            // Travel by inverted order to make sure order consistency\n            // when duplicate keys exists (consider newDataIndex.pop() below).\n            // For performance consideration, these code below do not look neat.\n            for (i = 0; i < oldArr.length; i++) {\n                var key = oldDataKeyArr[i];\n                var idx = newDataIndexMap[key];\n\n                // idx can never be empty array here. see 'set null' logic below.\n                if (idx != null) {\n                    // Consider there is duplicate key (for example, use dataItem.name as key).\n                    // We should make sure every item in newArr and oldArr can be visited.\n                    var len = idx.length;\n                    if (len) {\n                        len === 1 && (newDataIndexMap[key] = null);\n                        idx = idx.unshift();\n                    }\n                    else {\n                        newDataIndexMap[key] = null;\n                    }\n                    this._update && this._update(idx, i);\n                }\n                else {\n                    this._remove && this._remove(i);\n                }\n            }\n\n            for (var i = 0; i < newDataKeyArr.length; i++) {\n                var key = newDataKeyArr[i];\n                if (newDataIndexMap.hasOwnProperty(key)) {\n                    var idx = newDataIndexMap[key];\n                    if (idx == null) {\n                        continue;\n                    }\n                    // idx can never be empty array here. see 'set null' logic above.\n                    if (!idx.length) {\n                        this._add && this._add(idx);\n                    }\n                    else {\n                        for (var j = 0, len = idx.length; j < len; j++) {\n                            this._add && this._add(idx[j]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    function initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n        for (var i = 0; i < arr.length; i++) {\n            // Add prefix to avoid conflict with Object.prototype.\n            var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n            var existence = map[key];\n            if (existence == null) {\n                keyArr.push(key);\n                map[key] = i;\n            }\n            else {\n                if (!existence.length) {\n                    map[key] = existence = [existence];\n                }\n                existence.push(i);\n            }\n        }\n    }\n\n    module.exports = DataDiffer;\n\n\n/***/ }),\n/* 740 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var createListFromArray = __webpack_require__(648);\n    var symbolUtil = __webpack_require__(639);\n    var axisHelper = __webpack_require__(620);\n    var axisModelCommonMixin = __webpack_require__(651);\n    var Model = __webpack_require__(614);\n    var util = __webpack_require__(606);\n\n    module.exports = {\n        /**\n         * Create a muti dimension List structure from seriesModel.\n         * @param  {module:echarts/model/Model} seriesModel\n         * @return {module:echarts/data/List} list\n         */\n        createList: function (seriesModel) {\n            var data = seriesModel.get('data');\n            return createListFromArray(data, seriesModel, seriesModel.ecModel);\n        },\n\n        /**\n         * @see {module:echarts/data/helper/completeDimensions}\n         */\n        completeDimensions: __webpack_require__(631),\n\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @see http://echarts.baidu.com/option.html#series-scatter.symbol\n         * @param {string} symbolDesc\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: symbolUtil.createSymbol,\n\n        /**\n         * Create scale\n         * @param {Array.<number>} dataExtent\n         * @param {Object|module:echarts/Model} option\n         */\n        createScale: function (dataExtent, option) {\n            var axisModel = option;\n            if (!(option instanceof Model)) {\n                axisModel = new Model(option);\n                util.mixin(axisModel, axisModelCommonMixin);\n            }\n\n            var scale = axisHelper.createScaleByModel(axisModel);\n            scale.setExtent(dataExtent[0], dataExtent[1]);\n\n            axisHelper.niceScaleExtent(scale, axisModel);\n            return scale;\n        },\n\n        /**\n         * Mixin common methods to axis model,\n         *\n         * Inlcude methods\n         * `getFormattedLabels() => Array.<string>`\n         * `getCategories() => Array.<string>`\n         * `getMin(origin: boolean) => number`\n         * `getMax(origin: boolean) => number`\n         * `getNeedCrossZero() => boolean`\n         * `setRange(start: number, end: number)`\n         * `resetRange()`\n         */\n        mixinAxisModelCommonMethods: function (Model) {\n            util.mixin(Model, axisModelCommonMixin);\n        }\n    };\n\n\n/***/ }),\n/* 741 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = function (seriesType, ecModel) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var coordSys = seriesModel.coordinateSystem;\n\n            if (!coordSys) {\n                return;\n            }\n\n            var dims = [];\n            var coordDims = coordSys.dimensions;\n            for (var i = 0; i < coordDims.length; i++) {\n                dims.push(seriesModel.coordDimToDataDim(coordSys.dimensions[i])[0]);\n            }\n\n            if (dims.length === 1) {\n                data.each(dims[0], function (x, idx) {\n                    // Also {Array.<number>}, not undefined to avoid if...else... statement\n                    data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n                });\n            }\n            else if (dims.length === 2) {\n                data.each(dims, function (x, y, idx) {\n                    // Also {Array.<number>}, not undefined to avoid if...else... statement\n                    data.setItemLayout(\n                        idx, (isNaN(x) || isNaN(y)) ? [NaN, NaN] : coordSys.dataToPoint([x, y])\n                    );\n                }, true);\n            }\n        });\n    };\n\n\n\n/***/ }),\n/* 742 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var graphic = __webpack_require__(608);\n    var zrUtil = __webpack_require__(606);\n    var PI = Math.PI;\n    /**\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [opts]\n     * @param {string} [opts.text]\n     * @param {string} [opts.color]\n     * @param {string} [opts.textColor]\n     * @return {module:zrender/Element}\n     */\n    module.exports = function (api, opts) {\n        opts = opts || {};\n        zrUtil.defaults(opts, {\n            text: 'loading',\n            color: '#c23531',\n            textColor: '#000',\n            maskColor: 'rgba(255, 255, 255, 0.8)',\n            zlevel: 0\n        });\n        var mask = new graphic.Rect({\n            style: {\n                fill: opts.maskColor\n            },\n            zlevel: opts.zlevel,\n            z: 10000\n        });\n        var arc = new graphic.Arc({\n            shape: {\n                startAngle: -PI / 2,\n                endAngle: -PI / 2 + 0.1,\n                r: 10\n            },\n            style: {\n                stroke: opts.color,\n                lineCap: 'round',\n                lineWidth: 5\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n        var labelRect = new graphic.Rect({\n            style: {\n                fill: 'none',\n                text: opts.text,\n                textPosition: 'right',\n                textDistance: 10,\n                textFill: opts.textColor\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n\n        arc.animateShape(true)\n            .when(1000, {\n                endAngle: PI * 3 / 2\n            })\n            .start('circularInOut');\n        arc.animateShape(true)\n            .when(1000, {\n                startAngle: PI * 3 / 2\n            })\n            .delay(300)\n            .start('circularInOut');\n\n        var group = new graphic.Group();\n        group.add(arc);\n        group.add(labelRect);\n        group.add(mask);\n        // Inject resize\n        group.resize = function () {\n            var cx = api.getWidth() / 2;\n            var cy = api.getHeight() / 2;\n            arc.setShape({\n                cx: cx,\n                cy: cy\n            });\n            var r = arc.shape.r;\n            labelRect.setShape({\n                x: cx - r,\n                y: cy - r,\n                width: r * 2,\n                height: r * 2\n            });\n\n            mask.setShape({\n                x: 0,\n                y: 0,\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n        };\n        group.resize();\n        return group;\n    };\n\n\n/***/ }),\n/* 743 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n\n\n    /**\n     * Caution: If the mechanism should be changed some day, these cases\n     * should be considered:\n     *\n     * (1) In `merge option` mode, if using the same option to call `setOption`\n     * many times, the result should be the same (try our best to ensure that).\n     * (2) In `merge option` mode, if a component has no id/name specified, it\n     * will be merged by index, and the result sequence of the components is\n     * consistent to the original sequence.\n     * (3) `reset` feature (in toolbox). Find detailed info in comments about\n     * `mergeOption` in module:echarts/model/OptionManager.\n     */\n\n    var zrUtil = __webpack_require__(606);\n    var modelUtil = __webpack_require__(609);\n    var Model = __webpack_require__(614);\n    var each = zrUtil.each;\n    var filter = zrUtil.filter;\n    var map = zrUtil.map;\n    var isArray = zrUtil.isArray;\n    var indexOf = zrUtil.indexOf;\n    var isObject = zrUtil.isObject;\n\n    var ComponentModel = __webpack_require__(618);\n\n    var globalDefault = __webpack_require__(745);\n\n    var OPTION_INNER_KEY = '\\0_ec_inner';\n\n    /**\n     * @alias module:echarts/model/Global\n     *\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {Object} theme\n     */\n    var GlobalModel = Model.extend({\n\n        constructor: GlobalModel,\n\n        init: function (option, parentModel, theme, optionManager) {\n            theme = theme || {};\n\n            this.option = null; // Mark as not initialized.\n\n            /**\n             * @type {module:echarts/model/Model}\n             * @private\n             */\n            this._theme = new Model(theme);\n\n            /**\n             * @type {module:echarts/model/OptionManager}\n             */\n            this._optionManager = optionManager;\n        },\n\n        setOption: function (option, optionPreprocessorFuncs) {\n            zrUtil.assert(\n                !(OPTION_INNER_KEY in option),\n                'please use chart.getOption()'\n            );\n\n            this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n            this.resetOption(null);\n        },\n\n        /**\n         * @param {string} type null/undefined: reset all.\n         *                      'recreate': force recreate all.\n         *                      'timeline': only reset timeline option\n         *                      'media': only reset media query option\n         * @return {boolean} Whether option changed.\n         */\n        resetOption: function (type) {\n            var optionChanged = false;\n            var optionManager = this._optionManager;\n\n            if (!type || type === 'recreate') {\n                var baseOption = optionManager.mountOption(type === 'recreate');\n\n                if (!this.option || type === 'recreate') {\n                    initBase.call(this, baseOption);\n                }\n                else {\n                    this.restoreData();\n                    this.mergeOption(baseOption);\n                }\n                optionChanged = true;\n            }\n\n            if (type === 'timeline' || type === 'media') {\n                this.restoreData();\n            }\n\n            if (!type || type === 'recreate' || type === 'timeline') {\n                var timelineOption = optionManager.getTimelineOption(this);\n                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n            }\n\n            if (!type || type === 'recreate' || type === 'media') {\n                var mediaOptions = optionManager.getMediaOption(this, this._api);\n                if (mediaOptions.length) {\n                    each(mediaOptions, function (mediaOption) {\n                        this.mergeOption(mediaOption, optionChanged = true);\n                    }, this);\n                }\n            }\n\n            return optionChanged;\n        },\n\n        /**\n         * @protected\n         */\n        mergeOption: function (newOption) {\n            var option = this.option;\n            var componentsMap = this._componentsMap;\n            var newCptTypes = [];\n\n            // 如果不存在对应的 component model 则直接 merge\n            each(newOption, function (componentOption, mainType) {\n                if (componentOption == null) {\n                    return;\n                }\n\n                if (!ComponentModel.hasClass(mainType)) {\n                    option[mainType] = option[mainType] == null\n                        ? zrUtil.clone(componentOption)\n                        : zrUtil.merge(option[mainType], componentOption, true);\n                }\n                else {\n                    newCptTypes.push(mainType);\n                }\n            });\n\n            // FIXME OPTION 同步是否要改回原来的\n            ComponentModel.topologicalTravel(\n                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\n            );\n\n            this._seriesIndices = this._seriesIndices || [];\n\n            function visitComponent(mainType, dependencies) {\n                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n\n                var mapResult = modelUtil.mappingToExists(\n                    componentsMap.get(mainType), newCptOptionList\n                );\n\n                modelUtil.makeIdAndName(mapResult);\n\n                // Set mainType and complete subType.\n                each(mapResult, function (item, index) {\n                    var opt = item.option;\n                    if (isObject(opt)) {\n                        item.keyInfo.mainType = mainType;\n                        item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n                    }\n                });\n\n                var dependentModels = getComponentsByTypes(\n                    componentsMap, dependencies\n                );\n\n                option[mainType] = [];\n                componentsMap.set(mainType, []);\n\n                each(mapResult, function (resultItem, index) {\n                    var componentModel = resultItem.exist;\n                    var newCptOption = resultItem.option;\n\n                    zrUtil.assert(\n                        isObject(newCptOption) || componentModel,\n                        'Empty component definition'\n                    );\n\n                    // Consider where is no new option and should be merged using {},\n                    // see removeEdgeAndAdd in topologicalTravel and\n                    // ComponentModel.getAllClassMainTypes.\n                    if (!newCptOption) {\n                        componentModel.mergeOption({}, this);\n                        componentModel.optionUpdated({}, false);\n                    }\n                    else {\n                        var ComponentModelClass = ComponentModel.getClass(\n                            mainType, resultItem.keyInfo.subType, true\n                        );\n\n                        if (componentModel && componentModel instanceof ComponentModelClass) {\n                            componentModel.name = resultItem.keyInfo.name;\n                            componentModel.mergeOption(newCptOption, this);\n                            componentModel.optionUpdated(newCptOption, false);\n                        }\n                        else {\n                            // PENDING Global as parent ?\n                            var extraOpt = zrUtil.extend(\n                                {\n                                    dependentModels: dependentModels,\n                                    componentIndex: index\n                                },\n                                resultItem.keyInfo\n                            );\n                            componentModel = new ComponentModelClass(\n                                newCptOption, this, this, extraOpt\n                            );\n                            zrUtil.extend(componentModel, extraOpt);\n                            componentModel.init(newCptOption, this, this, extraOpt);\n                            // Call optionUpdated after init.\n                            // newCptOption has been used as componentModel.option\n                            // and may be merged with theme and default, so pass null\n                            // to avoid confusion.\n                            componentModel.optionUpdated(null, true);\n                        }\n                    }\n\n                    componentsMap.get(mainType)[index] = componentModel;\n                    option[mainType][index] = componentModel.option;\n                }, this);\n\n                // Backup series for filtering.\n                if (mainType === 'series') {\n                    this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n                }\n            }\n        },\n\n        /**\n         * Get option for output (cloned option and inner info removed)\n         * @public\n         * @return {Object}\n         */\n        getOption: function () {\n            var option = zrUtil.clone(this.option);\n\n            each(option, function (opts, mainType) {\n                if (ComponentModel.hasClass(mainType)) {\n                    var opts = modelUtil.normalizeToArray(opts);\n                    for (var i = opts.length - 1; i >= 0; i--) {\n                        // Remove options with inner id.\n                        if (modelUtil.isIdInner(opts[i])) {\n                            opts.splice(i, 1);\n                        }\n                    }\n                    option[mainType] = opts;\n                }\n            });\n\n            delete option[OPTION_INNER_KEY];\n\n            return option;\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        getTheme: function () {\n            return this._theme;\n        },\n\n        /**\n         * @param {string} mainType\n         * @param {number} [idx=0]\n         * @return {module:echarts/model/Component}\n         */\n        getComponent: function (mainType, idx) {\n            var list = this._componentsMap.get(mainType);\n            if (list) {\n                return list[idx || 0];\n            }\n        },\n\n        /**\n         * If none of index and id and name used, return all components with mainType.\n         * @param {Object} condition\n         * @param {string} condition.mainType\n         * @param {string} [condition.subType] If ignore, only query by mainType\n         * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        queryComponents: function (condition) {\n            var mainType = condition.mainType;\n            if (!mainType) {\n                return [];\n            }\n\n            var index = condition.index;\n            var id = condition.id;\n            var name = condition.name;\n\n            var cpts = this._componentsMap.get(mainType);\n\n            if (!cpts || !cpts.length) {\n                return [];\n            }\n\n            var result;\n\n            if (index != null) {\n                if (!isArray(index)) {\n                    index = [index];\n                }\n                result = filter(map(index, function (idx) {\n                    return cpts[idx];\n                }), function (val) {\n                    return !!val;\n                });\n            }\n            else if (id != null) {\n                var isIdArray = isArray(id);\n                result = filter(cpts, function (cpt) {\n                    return (isIdArray && indexOf(id, cpt.id) >= 0)\n                        || (!isIdArray && cpt.id === id);\n                });\n            }\n            else if (name != null) {\n                var isNameArray = isArray(name);\n                result = filter(cpts, function (cpt) {\n                    return (isNameArray && indexOf(name, cpt.name) >= 0)\n                        || (!isNameArray && cpt.name === name);\n                });\n            }\n            else {\n                // Return all components with mainType\n                result = cpts.slice();\n            }\n\n            return filterBySubType(result, condition);\n        },\n\n        /**\n         * The interface is different from queryComponents,\n         * which is convenient for inner usage.\n         *\n         * @usage\n         * var result = findComponents(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series'},\n         *     function (model, index) {...}\n         * );\n         * // result like [component0, componnet1, ...]\n         *\n         * @param {Object} condition\n         * @param {string} condition.mainType Mandatory.\n         * @param {string} [condition.subType] Optional.\n         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n         *        where xxx is mainType.\n         *        If query attribute is null/undefined or has no index/id/name,\n         *        do not filtering by query conditions, which is convenient for\n         *        no-payload situations or when target of action is global.\n         * @param {Function} [condition.filter] parameter: component, return boolean.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        findComponents: function (condition) {\n            var query = condition.query;\n            var mainType = condition.mainType;\n\n            var queryCond = getQueryCond(query);\n            var result = queryCond\n                ? this.queryComponents(queryCond)\n                : this._componentsMap.get(mainType);\n\n            return doFilter(filterBySubType(result, condition));\n\n            function getQueryCond(q) {\n                var indexAttr = mainType + 'Index';\n                var idAttr = mainType + 'Id';\n                var nameAttr = mainType + 'Name';\n                return q && (\n                        q[indexAttr] != null\n                        || q[idAttr] != null\n                        || q[nameAttr] != null\n                    )\n                    ? {\n                        mainType: mainType,\n                        // subType will be filtered finally.\n                        index: q[indexAttr],\n                        id: q[idAttr],\n                        name: q[nameAttr]\n                    }\n                    : null;\n            }\n\n            function doFilter(res) {\n                return condition.filter\n                     ? filter(res, condition.filter)\n                     : res;\n            }\n        },\n\n        /**\n         * @usage\n         * eachComponent('legend', function (legendModel, index) {\n         *     ...\n         * });\n         * eachComponent(function (componentType, model, index) {\n         *     // componentType does not include subType\n         *     // (componentType is 'xxx' but not 'xxx.aa')\n         * });\n         * eachComponent(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n         *     function (model, index) {...}\n         * );\n         * eachComponent(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n         *     function (model, index) {...}\n         * );\n         *\n         * @param {string|Object=} mainType When mainType is object, the definition\n         *                                  is the same as the method 'findComponents'.\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachComponent: function (mainType, cb, context) {\n            var componentsMap = this._componentsMap;\n\n            if (typeof mainType === 'function') {\n                context = cb;\n                cb = mainType;\n                componentsMap.each(function (components, componentType) {\n                    each(components, function (component, index) {\n                        cb.call(context, componentType, component, index);\n                    });\n                });\n            }\n            else if (zrUtil.isString(mainType)) {\n                each(componentsMap.get(mainType), cb, context);\n            }\n            else if (isObject(mainType)) {\n                var queryResult = this.findComponents(mainType);\n                each(queryResult, cb, context);\n            }\n        },\n\n        /**\n         * @param {string} name\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByName: function (name) {\n            var series = this._componentsMap.get('series');\n            return filter(series, function (oneSeries) {\n                return oneSeries.name === name;\n            });\n        },\n\n        /**\n         * @param {number} seriesIndex\n         * @return {module:echarts/model/Series}\n         */\n        getSeriesByIndex: function (seriesIndex) {\n            return this._componentsMap.get('series')[seriesIndex];\n        },\n\n        /**\n         * @param {string} subType\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByType: function (subType) {\n            var series = this._componentsMap.get('series');\n            return filter(series, function (oneSeries) {\n                return oneSeries.subType === subType;\n            });\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeries: function () {\n            return this._componentsMap.get('series').slice();\n        },\n\n        /**\n         * After filtering, series may be different\n         * frome raw series.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.get('series')[rawSeriesIndex];\n                cb.call(context, series, rawSeriesIndex);\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeries: function (cb, context) {\n            each(this._componentsMap.get('series'), cb, context);\n        },\n\n        /**\n         * After filtering, series may be different.\n         * frome raw series.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeriesByType: function (subType, cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.get('series')[rawSeriesIndex];\n                if (series.subType === subType) {\n                    cb.call(context, series, rawSeriesIndex);\n                }\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered of given type.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeriesByType: function (subType, cb, context) {\n            return each(this.getSeriesByType(subType), cb, context);\n        },\n\n        /**\n         * @param {module:echarts/model/Series} seriesModel\n         */\n        isSeriesFiltered: function (seriesModel) {\n            assertSeriesInitialized(this);\n            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getCurrentSeriesIndices: function () {\n            return (this._seriesIndices || []).slice();\n        },\n\n        /**\n         * @param {Function} cb\n         * @param {*} context\n         */\n        filterSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            var filteredSeries = filter(\n                this._componentsMap.get('series'), cb, context\n            );\n            this._seriesIndices = createSeriesIndices(filteredSeries);\n        },\n\n        restoreData: function () {\n            var componentsMap = this._componentsMap;\n\n            this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n\n            var componentTypes = [];\n            componentsMap.each(function (components, componentType) {\n                componentTypes.push(componentType);\n            });\n\n            ComponentModel.topologicalTravel(\n                componentTypes,\n                ComponentModel.getAllClassMainTypes(),\n                function (componentType, dependencies) {\n                    each(componentsMap.get(componentType), function (component) {\n                        component.restoreData();\n                    });\n                }\n            );\n        }\n\n    });\n\n    /**\n     * @inner\n     */\n    function mergeTheme(option, theme) {\n        zrUtil.each(theme, function (themeItem, name) {\n            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n            if (!ComponentModel.hasClass(name)) {\n                if (typeof themeItem === 'object') {\n                    option[name] = !option[name]\n                        ? zrUtil.clone(themeItem)\n                        : zrUtil.merge(option[name], themeItem, false);\n                }\n                else {\n                    if (option[name] == null) {\n                        option[name] = themeItem;\n                    }\n                }\n            }\n        });\n    }\n\n    function initBase(baseOption) {\n        baseOption = baseOption;\n\n        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n        this.option = {};\n        this.option[OPTION_INNER_KEY] = 1;\n\n        /**\n         * Init with series: [], in case of calling findSeries method\n         * before series initialized.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @private\n         */\n        this._componentsMap = zrUtil.createHashMap({series: []});\n\n        /**\n         * Mapping between filtered series list and raw series list.\n         * key: filtered series indices, value: raw series indices.\n         * @type {Array.<nubmer>}\n         * @private\n         */\n        this._seriesIndices = null;\n\n        mergeTheme(baseOption, this._theme.option);\n\n        // TODO Needs clone when merging to the unexisted property\n        zrUtil.merge(baseOption, globalDefault, false);\n\n        this.mergeOption(baseOption);\n    }\n\n    /**\n     * @inner\n     * @param {Array.<string>|string} types model types\n     * @return {Object} key: {string} type, value: {Array.<Object>} models\n     */\n    function getComponentsByTypes(componentsMap, types) {\n        if (!zrUtil.isArray(types)) {\n            types = types ? [types] : [];\n        }\n\n        var ret = {};\n        each(types, function (type) {\n            ret[type] = (componentsMap.get(type) || []).slice();\n        });\n\n        return ret;\n    }\n\n    /**\n     * @inner\n     */\n    function determineSubType(mainType, newCptOption, existComponent) {\n        var subType = newCptOption.type\n            ? newCptOption.type\n            : existComponent\n            ? existComponent.subType\n            // Use determineSubType only when there is no existComponent.\n            : ComponentModel.determineSubType(mainType, newCptOption);\n\n        // tooltip, markline, markpoint may always has no subType\n        return subType;\n    }\n\n    /**\n     * @inner\n     */\n    function createSeriesIndices(seriesModels) {\n        return map(seriesModels, function (series) {\n            return series.componentIndex;\n        }) || [];\n    }\n\n    /**\n     * @inner\n     */\n    function filterBySubType(components, condition) {\n        // Using hasOwnProperty for restrict. Consider\n        // subType is undefined in user payload.\n        return condition.hasOwnProperty('subType')\n            ? filter(components, function (cpt) {\n                return cpt.subType === condition.subType;\n            })\n            : components;\n    }\n\n    /**\n     * @inner\n     */\n    function assertSeriesInitialized(ecModel) {\n        // Components that use _seriesIndices should depends on series component,\n        // which make sure that their initialization is after series.\n        if (__DEV__) {\n            if (!ecModel._seriesIndices) {\n                throw new Error('Option should contains series.');\n            }\n        }\n    }\n\n    zrUtil.mixin(GlobalModel, __webpack_require__(664));\n\n    module.exports = GlobalModel;\n\n\n/***/ }),\n/* 744 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var modelUtil = __webpack_require__(609);\n    var ComponentModel = __webpack_require__(618);\n    var each = zrUtil.each;\n    var clone = zrUtil.clone;\n    var map = zrUtil.map;\n    var merge = zrUtil.merge;\n\n    var QUERY_REG = /^(min|max)?(.+)$/;\n\n    /**\n     * TERM EXPLANATIONS:\n     *\n     * [option]:\n     *\n     *     An object that contains definitions of components. For example:\n     *     var option = {\n     *         title: {...},\n     *         legend: {...},\n     *         visualMap: {...},\n     *         series: [\n     *             {data: [...]},\n     *             {data: [...]},\n     *             ...\n     *         ]\n     *     };\n     *\n     * [rawOption]:\n     *\n     *     An object input to echarts.setOption. 'rawOption' may be an\n     *     'option', or may be an object contains multi-options. For example:\n     *     var option = {\n     *         baseOption: {\n     *             title: {...},\n     *             legend: {...},\n     *             series: [\n     *                 {data: [...]},\n     *                 {data: [...]},\n     *                 ...\n     *             ]\n     *         },\n     *         timeline: {...},\n     *         options: [\n     *             {title: {...}, series: {data: [...]}},\n     *             {title: {...}, series: {data: [...]}},\n     *             ...\n     *         ],\n     *         media: [\n     *             {\n     *                 query: {maxWidth: 320},\n     *                 option: {series: {x: 20}, visualMap: {show: false}}\n     *             },\n     *             {\n     *                 query: {minWidth: 320, maxWidth: 720},\n     *                 option: {series: {x: 500}, visualMap: {show: true}}\n     *             },\n     *             {\n     *                 option: {series: {x: 1200}, visualMap: {show: true}}\n     *             }\n     *         ]\n     *     };\n     *\n     * @alias module:echarts/model/OptionManager\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function OptionManager(api) {\n\n        /**\n         * @private\n         * @type {module:echarts/ExtensionAPI}\n         */\n        this._api = api;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._timelineOptions = [];\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._mediaList = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._mediaDefault;\n\n        /**\n         * -1, means default.\n         * empty means no media.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._currentMediaIndices = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._optionBackup;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._newBaseOption;\n    }\n\n    // timeline.notMerge is not supported in ec3. Firstly there is rearly\n    // case that notMerge is needed. Secondly supporting 'notMerge' requires\n    // rawOption cloned and backuped when timeline changed, which does no\n    // good to performance. What's more, that both timeline and setOption\n    // method supply 'notMerge' brings complex and some problems.\n    // Consider this case:\n    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n    OptionManager.prototype = {\n\n        constructor: OptionManager,\n\n        /**\n         * @public\n         * @param {Object} rawOption Raw option.\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Array.<Function>} optionPreprocessorFuncs\n         * @return {Object} Init option\n         */\n        setOption: function (rawOption, optionPreprocessorFuncs) {\n            rawOption = clone(rawOption, true);\n\n            // FIXME\n            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n            var oldOptionBackup = this._optionBackup;\n            var newParsedOption = parseRawOption.call(\n                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\n            );\n            this._newBaseOption = newParsedOption.baseOption;\n\n            // For setOption at second time (using merge mode);\n            if (oldOptionBackup) {\n                // Only baseOption can be merged.\n                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\n\n                // For simplicity, timeline options and media options do not support merge,\n                // that is, if you `setOption` twice and both has timeline options, the latter\n                // timeline opitons will not be merged to the formers, but just substitude them.\n                if (newParsedOption.timelineOptions.length) {\n                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n                }\n                if (newParsedOption.mediaList.length) {\n                    oldOptionBackup.mediaList = newParsedOption.mediaList;\n                }\n                if (newParsedOption.mediaDefault) {\n                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n                }\n            }\n            else {\n                this._optionBackup = newParsedOption;\n            }\n        },\n\n        /**\n         * @param {boolean} isRecreate\n         * @return {Object}\n         */\n        mountOption: function (isRecreate) {\n            var optionBackup = this._optionBackup;\n\n            // TODO\n            // 如果没有reset功能则不clone。\n\n            this._timelineOptions = map(optionBackup.timelineOptions, clone);\n            this._mediaList = map(optionBackup.mediaList, clone);\n            this._mediaDefault = clone(optionBackup.mediaDefault);\n            this._currentMediaIndices = [];\n\n            return clone(isRecreate\n                // this._optionBackup.baseOption, which is created at the first `setOption`\n                // called, and is merged into every new option by inner method `mergeOption`\n                // each time `setOption` called, can be only used in `isRecreate`, because\n                // its reliability is under suspicion. In other cases option merge is\n                // performed by `model.mergeOption`.\n                ? optionBackup.baseOption : this._newBaseOption\n            );\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object}\n         */\n        getTimelineOption: function (ecModel) {\n            var option;\n            var timelineOptions = this._timelineOptions;\n\n            if (timelineOptions.length) {\n                // getTimelineOption can only be called after ecModel inited,\n                // so we can get currentIndex from timelineModel.\n                var timelineModel = ecModel.getComponent('timeline');\n                if (timelineModel) {\n                    option = clone(\n                        timelineOptions[timelineModel.getCurrentIndex()],\n                        true\n                    );\n                }\n            }\n\n            return option;\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Array.<Object>}\n         */\n        getMediaOption: function (ecModel) {\n            var ecWidth = this._api.getWidth();\n            var ecHeight = this._api.getHeight();\n            var mediaList = this._mediaList;\n            var mediaDefault = this._mediaDefault;\n            var indices = [];\n            var result = [];\n\n            // No media defined.\n            if (!mediaList.length && !mediaDefault) {\n                return result;\n            }\n\n            // Multi media may be applied, the latter defined media has higher priority.\n            for (var i = 0, len = mediaList.length; i < len; i++) {\n                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n                    indices.push(i);\n                }\n            }\n\n            // FIXME\n            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n            if (!indices.length && mediaDefault) {\n                indices = [-1];\n            }\n\n            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n                result = map(indices, function (index) {\n                    return clone(\n                        index === -1 ? mediaDefault.option : mediaList[index].option\n                    );\n                });\n            }\n            // Otherwise return nothing.\n\n            this._currentMediaIndices = indices;\n\n            return result;\n        }\n    };\n\n    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n        var timelineOptions = [];\n        var mediaList = [];\n        var mediaDefault;\n        var baseOption;\n\n        // Compatible with ec2.\n        var timelineOpt = rawOption.timeline;\n\n        if (rawOption.baseOption) {\n            baseOption = rawOption.baseOption;\n        }\n\n        // For timeline\n        if (timelineOpt || rawOption.options) {\n            baseOption = baseOption || {};\n            timelineOptions = (rawOption.options || []).slice();\n        }\n\n        // For media query\n        if (rawOption.media) {\n            baseOption = baseOption || {};\n            var media = rawOption.media;\n            each(media, function (singleMedia) {\n                if (singleMedia && singleMedia.option) {\n                    if (singleMedia.query) {\n                        mediaList.push(singleMedia);\n                    }\n                    else if (!mediaDefault) {\n                        // Use the first media default.\n                        mediaDefault = singleMedia;\n                    }\n                }\n            });\n        }\n\n        // For normal option\n        if (!baseOption) {\n            baseOption = rawOption;\n        }\n\n        // Set timelineOpt to baseOption in ec3,\n        // which is convenient for merge option.\n        if (!baseOption.timeline) {\n            baseOption.timeline = timelineOpt;\n        }\n\n        // Preprocess.\n        each([baseOption].concat(timelineOptions)\n            .concat(zrUtil.map(mediaList, function (media) {\n                return media.option;\n            })),\n            function (option) {\n                each(optionPreprocessorFuncs, function (preProcess) {\n                    preProcess(option, isNew);\n                });\n            }\n        );\n\n        return {\n            baseOption: baseOption,\n            timelineOptions: timelineOptions,\n            mediaDefault: mediaDefault,\n            mediaList: mediaList\n        };\n    }\n\n    /**\n     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n     * Support: width, height, aspectRatio\n     * Can use max or min as prefix.\n     */\n    function applyMediaQuery(query, ecWidth, ecHeight) {\n        var realMap = {\n            width: ecWidth,\n            height: ecHeight,\n            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n        };\n\n        var applicatable = true;\n\n        zrUtil.each(query, function (value, attr) {\n            var matched = attr.match(QUERY_REG);\n\n            if (!matched || !matched[1] || !matched[2]) {\n                return;\n            }\n\n            var operator = matched[1];\n            var realAttr = matched[2].toLowerCase();\n\n            if (!compare(realMap[realAttr], value, operator)) {\n                applicatable = false;\n            }\n        });\n\n        return applicatable;\n    }\n\n    function compare(real, expect, operator) {\n        if (operator === 'min') {\n            return real >= expect;\n        }\n        else if (operator === 'max') {\n            return real <= expect;\n        }\n        else { // Equals\n            return real === expect;\n        }\n    }\n\n    function indicesEquals(indices1, indices2) {\n        // indices is always order by asc and has only finite number.\n        return indices1.join(',') === indices2.join(',');\n    }\n\n    /**\n     * Consider case:\n     * `chart.setOption(opt1);`\n     * Then user do some interaction like dataZoom, dataView changing.\n     * `chart.setOption(opt2);`\n     * Then user press 'reset button' in toolbox.\n     *\n     * After doing that all of the interaction effects should be reset, the\n     * chart should be the same as the result of invoke\n     * `chart.setOption(opt1); chart.setOption(opt2);`.\n     *\n     * Although it is not able ensure that\n     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n     * `chart.setOption(merge(opt1, opt2));` exactly,\n     * this might be the only simple way to implement that feature.\n     *\n     * MEMO: We've considered some other approaches:\n     * 1. Each model handle its self restoration but not uniform treatment.\n     *     (Too complex in logic and error-prone)\n     * 2. Use a shadow ecModel. (Performace expensive)\n     */\n    function mergeOption(oldOption, newOption) {\n        newOption = newOption || {};\n\n        each(newOption, function (newCptOpt, mainType) {\n            if (newCptOpt == null) {\n                return;\n            }\n\n            var oldCptOpt = oldOption[mainType];\n\n            if (!ComponentModel.hasClass(mainType)) {\n                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n            }\n            else {\n                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n\n                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n\n                oldOption[mainType] = map(mapResult, function (item) {\n                    return (item.option && item.exist)\n                        ? merge(item.exist, item.option, true)\n                        : (item.exist || item.option);\n                });\n            }\n        });\n    }\n\n    module.exports = OptionManager;\n\n\n/***/ }),\n/* 745 */\n/***/ (function(module, exports) {\n\n\n    var platform = '';\n    // Navigator not exists in node\n    if (typeof navigator !== 'undefined') {\n        platform = navigator.platform || '';\n    }\n    module.exports = {\n        // 全图默认背景\n        // backgroundColor: 'rgba(0,0,0,0)',\n\n        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n        // 浅色\n        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n        // 深色\n        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\n\n        // 默认需要 Grid 配置项\n        // grid: {},\n        // 主题，主题\n        textStyle: {\n            // color: '#000',\n            // decoration: 'none',\n            // PENDING\n            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n            // fontFamily: 'Arial, Verdana, sans-serif',\n            fontSize: 12,\n            fontStyle: 'normal',\n            fontWeight: 'normal'\n        },\n\n        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n        // Default is source-over\n        blendMode: null,\n\n        animation: 'auto',\n        animationDuration: 1000,\n        animationDurationUpdate: 300,\n        animationEasing: 'exponentialOut',\n        animationEasingUpdate: 'cubicOut',\n\n        animationThreshold: 2000,\n        // Configuration for progressive/incremental rendering\n        progressiveThreshold: 3000,\n        progressive: 400,\n\n        // Threshold of if use single hover layer to optimize.\n        // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n        // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n        // which is unexpected.\n        // see example <echarts/test/heatmap-large.html>.\n        hoverLayerThreshold: 3000,\n\n        // See: module:echarts/scale/Time\n        useUTC: false\n    };\n\n\n/***/ }),\n/* 746 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    module.exports = {\n        getAreaStyle: __webpack_require__(637)(\n            [\n                ['fill', 'color'],\n                ['shadowBlur'],\n                ['shadowOffsetX'],\n                ['shadowOffsetY'],\n                ['opacity'],\n                ['shadowColor']\n            ]\n        )\n    };\n\n\n/***/ }),\n/* 747 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = {\n        getBoxLayoutParams: function () {\n            return {\n                left: this.get('left'),\n                top: this.get('top'),\n                right: this.get('right'),\n                bottom: this.get('bottom'),\n                width: this.get('width'),\n                height: this.get('height')\n            };\n        }\n    };\n\n\n/***/ }),\n/* 748 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var getItemStyle = __webpack_require__(637)(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor'],\n            ['textPosition'],\n            ['textAlign']\n        ]\n    );\n    module.exports = {\n        getItemStyle: function (excludes, includes) {\n            var style = getItemStyle.call(this, excludes, includes);\n            var lineDash = this.getBorderLineDash();\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getBorderLineDash: function () {\n            var lineType = this.get('borderType');\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\n        }\n    };\n\n\n/***/ }),\n/* 749 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var getLineStyle = __webpack_require__(637)(\n        [\n            ['lineWidth', 'width'],\n            ['stroke', 'color'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getLineStyle: function (excludes) {\n            var style = getLineStyle.call(this, excludes);\n            var lineDash = this.getLineDash(style.lineWidth);\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getLineDash: function (lineWidth) {\n            if (lineWidth == null) {\n                lineWidth = 1;\n            }\n            var lineType = this.get('type');\n            var dotSize = Math.max(lineWidth, 2);\n            var dashSize = lineWidth * 4;\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize]);\n        }\n    };\n\n\n/***/ }),\n/* 750 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var textContain = __webpack_require__(621);\n    var graphicUtil = __webpack_require__(608);\n\n    var PATH_COLOR = ['textStyle', 'color'];\n\n    module.exports = {\n        /**\n         * Get color property or get color from option.textStyle.color\n         * @param {boolean} [noDefault]\n         * @return {string}\n         */\n        getTextColor: function (noDefault) {\n            var ecModel = this.ecModel;\n            return this.getShallow('color')\n                || (\n                    (!noDefault && ecModel) ? ecModel.get(PATH_COLOR) : null\n                );\n        },\n\n        /**\n         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n         * @return {string}\n         */\n        getFont: function () {\n            return graphicUtil.getFont({\n                fontStyle: this.getShallow('fontStyle'),\n                fontWeight: this.getShallow('fontWeight'),\n                fontSize: this.getShallow('fontSize'),\n                fontFamily: this.getShallow('fontFamily')\n            }, this.ecModel);\n        },\n\n        getTextRect: function (text) {\n            return textContain.getBoundingRect(\n                text,\n                this.getFont(),\n                this.getShallow('align'),\n                this.getShallow('verticalAlign') || this.getShallow('baseline'),\n                this.getShallow('padding'),\n                this.getShallow('rich'),\n                this.getShallow('truncateText')\n            );\n        }\n    };\n\n\n/***/ }),\n/* 751 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Compatitable with 2.0\n\n\n    var zrUtil = __webpack_require__(606);\n    var compatStyle = __webpack_require__(752);\n\n    function get(opt, path) {\n        path = path.split(',');\n        var obj = opt;\n        for (var i = 0; i < path.length; i++) {\n            obj = obj && obj[path[i]];\n            if (obj == null) {\n                break;\n            }\n        }\n        return obj;\n    }\n\n    function set(opt, path, val, overwrite) {\n        path = path.split(',');\n        var obj = opt;\n        var key;\n        for (var i = 0; i < path.length - 1; i++) {\n            key = path[i];\n            if (obj[key] == null) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        }\n        if (overwrite || obj[path[i]] == null) {\n            obj[path[i]] = val;\n        }\n    }\n\n    function compatLayoutProperties(option) {\n        each(LAYOUT_PROPERTIES, function (prop) {\n            if (prop[0] in option && !(prop[1] in option)) {\n                option[prop[1]] = option[prop[0]];\n            }\n        });\n    }\n\n    var LAYOUT_PROPERTIES = [\n        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\n    ];\n\n    var COMPATITABLE_COMPONENTS = [\n        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\n    ];\n\n    var COMPATITABLE_SERIES = [\n        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\n        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\n        'pie', 'radar', 'sankey', 'scatter', 'treemap'\n    ];\n\n    var each = zrUtil.each;\n\n    module.exports = function (option) {\n        compatStyle(option);\n\n        var series = option.series;\n        each(zrUtil.isArray(series) ? series : [series], function (seriesOpt) {\n            if (!zrUtil.isObject(seriesOpt)) {\n                return;\n            }\n\n            var seriesType = seriesOpt.type;\n\n            if (seriesType === 'pie' || seriesType === 'gauge') {\n                if (seriesOpt.clockWise != null) {\n                    seriesOpt.clockwise = seriesOpt.clockWise;\n                }\n            }\n            if (seriesType === 'gauge') {\n                var pointerColor = get(seriesOpt, 'pointer.color');\n                pointerColor != null\n                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n            }\n\n            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n                    compatLayoutProperties(seriesOpt);\n                    break;\n                }\n            }\n        });\n\n        // dataRange has changed to visualMap\n        if (option.dataRange) {\n            option.visualMap = option.dataRange;\n        }\n\n        each(COMPATITABLE_COMPONENTS, function (componentName) {\n            var options = option[componentName];\n            if (options) {\n                if (!zrUtil.isArray(options)) {\n                    options = [options];\n                }\n                each(options, function (option) {\n                    compatLayoutProperties(option);\n                });\n            }\n        });\n    };\n\n\n/***/ }),\n/* 752 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var modelUtil = __webpack_require__(609);\n\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var POSSIBLE_STYLES = [\n        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\n        'chordStyle', 'label', 'labelLine'\n    ];\n\n    function compatItemStyle(opt) {\n        var itemStyleOpt = opt && opt.itemStyle;\n        if (!itemStyleOpt) {\n            return;\n        }\n        for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n            var styleName = POSSIBLE_STYLES[i];\n            var normalItemStyleOpt = itemStyleOpt.normal;\n            var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n            if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n                opt[styleName] = opt[styleName] || {};\n                if (!opt[styleName].normal) {\n                    opt[styleName].normal = normalItemStyleOpt[styleName];\n                }\n                else {\n                    zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n                }\n                normalItemStyleOpt[styleName] = null;\n            }\n            if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n                opt[styleName] = opt[styleName] || {};\n                if (!opt[styleName].emphasis) {\n                    opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n                }\n                else {\n                    zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n                }\n                emphasisItemStyleOpt[styleName] = null;\n            }\n        }\n    }\n\n    function compatTextStyle(opt, propName) {\n        var labelOptSingle = isObject(opt) && opt[propName];\n        var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n        if (textStyle) {\n            for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n                var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n                if (textStyle.hasOwnProperty(propName)) {\n                    labelOptSingle[propName] = textStyle[propName];\n                }\n            }\n        }\n    }\n\n    function compatLabelTextStyle(labelOpt) {\n        if (isObject(labelOpt)) {\n            compatTextStyle(labelOpt, 'normal');\n            compatTextStyle(labelOpt, 'emphasis');\n        }\n    }\n\n    function processSeries(seriesOpt) {\n        if (!isObject(seriesOpt)) {\n            return;\n        }\n\n        compatItemStyle(seriesOpt);\n        compatLabelTextStyle(seriesOpt.label);\n        // treemap\n        compatLabelTextStyle(seriesOpt.upperLabel);\n        // graph\n        compatLabelTextStyle(seriesOpt.edgeLabel);\n\n        var markPoint = seriesOpt.markPoint;\n        compatItemStyle(markPoint);\n        compatLabelTextStyle(markPoint && markPoint.label);\n\n        var markLine = seriesOpt.markLine;\n        compatItemStyle(seriesOpt.markLine);\n        compatLabelTextStyle(markLine && markLine.label);\n\n        var markArea = seriesOpt.markArea;\n        compatLabelTextStyle(markArea && markArea.label);\n\n        // For gauge\n        compatTextStyle(seriesOpt, 'axisLabel');\n        compatTextStyle(seriesOpt, 'title');\n        compatTextStyle(seriesOpt, 'detail');\n\n        var data = seriesOpt.data;\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                compatItemStyle(data[i]);\n                compatLabelTextStyle(data[i] && data[i].label);\n            }\n            // mark point data\n            var markPoint = seriesOpt.markPoint;\n            if (markPoint && markPoint.data) {\n                var mpData = markPoint.data;\n                for (var i = 0; i < mpData.length; i++) {\n                    compatItemStyle(mpData[i]);\n                    compatLabelTextStyle(mpData[i] && mpData[i].label);\n                }\n            }\n            // mark line data\n            var markLine = seriesOpt.markLine;\n            if (markLine && markLine.data) {\n                var mlData = markLine.data;\n                for (var i = 0; i < mlData.length; i++) {\n                    if (zrUtil.isArray(mlData[i])) {\n                        compatItemStyle(mlData[i][0]);\n                        compatLabelTextStyle(mlData[i][0] && mlData[i][0].label);\n                        compatItemStyle(mlData[i][1]);\n                        compatLabelTextStyle(mlData[i][1] && mlData[i][1].label);\n                    }\n                    else {\n                        compatItemStyle(mlData[i]);\n                        compatLabelTextStyle(mlData[i] && mlData[i].label);\n                    }\n                }\n            }\n        }\n    }\n\n    function toArr(o) {\n        return zrUtil.isArray(o) ? o : o ? [o] : [];\n    }\n\n    function toObj(o) {\n        return (zrUtil.isArray(o) ? o[0] : o) || {};\n    }\n\n    module.exports = function (option) {\n        each(toArr(option.series), function (seriesOpt) {\n            isObject(seriesOpt) && processSeries(seriesOpt);\n        });\n\n        each(\n            ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'],\n            function (axisName) {\n                each(toArr(option[axisName]), function (axisOpt) {\n                    if (axisOpt) {\n                        compatTextStyle(axisOpt, 'axisLabel');\n                        compatTextStyle(axisOpt.axisPointer, 'label');\n                    }\n                });\n            }\n        );\n\n        each(toArr(option.parallel), function (parallelOpt) {\n            var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n            compatTextStyle(parallelAxisDefault, 'axisLabel');\n            compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n        });\n\n        each(toArr(option.calendar), function (calendarOpt) {\n            compatTextStyle(calendarOpt, 'dayLabel');\n            compatTextStyle(calendarOpt, 'monthLabel');\n            compatTextStyle(calendarOpt, 'yearLabel');\n        });\n\n        // radar.name.textStyle\n        each(toArr(option.radar), function (radarOpt) {\n            compatTextStyle(radarOpt, 'name');\n        });\n\n        each(toArr(option.geo), function (geoOpt) {\n            isObject(geoOpt) && compatLabelTextStyle(geoOpt.label);\n        });\n\n        compatLabelTextStyle(toObj(option.timeline).label);\n        compatTextStyle(toObj(option.axisPointer), 'label');\n        compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n    };\n\n\n/***/ }),\n/* 753 */\n/***/ (function(module, exports) {\n\n\n    var samplers = {\n        average: function (frame) {\n            var sum = 0;\n            var count = 0;\n            for (var i = 0; i < frame.length; i++) {\n                if (!isNaN(frame[i])) {\n                    sum += frame[i];\n                    count++;\n                }\n            }\n            // Return NaN if count is 0\n            return count === 0 ? NaN : sum / count;\n        },\n        sum: function (frame) {\n            var sum = 0;\n            for (var i = 0; i < frame.length; i++) {\n                // Ignore NaN\n                sum += frame[i] || 0;\n            }\n            return sum;\n        },\n        max: function (frame) {\n            var max = -Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] > max && (max = frame[i]);\n            }\n            return max;\n        },\n        min: function (frame) {\n            var min = Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] < min && (min = frame[i]);\n            }\n            return min;\n        },\n        // TODO\n        // Median\n        nearest: function (frame) {\n            return frame[0];\n        }\n    };\n\n    var indexSampler = function (frame, value) {\n        return Math.round(frame.length / 2);\n    };\n    module.exports = function (seriesType, ecModel, api) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var sampling = seriesModel.get('sampling');\n            var coordSys = seriesModel.coordinateSystem;\n            // Only cartesian2d support down sampling\n            if (coordSys.type === 'cartesian2d' && sampling) {\n                var baseAxis = coordSys.getBaseAxis();\n                var valueAxis = coordSys.getOtherAxis(baseAxis);\n                var extent = baseAxis.getExtent();\n                // Coordinste system has been resized\n                var size = extent[1] - extent[0];\n                var rate = Math.round(data.count() / size);\n                if (rate > 1) {\n                    var sampler;\n                    if (typeof sampling === 'string') {\n                        sampler = samplers[sampling];\n                    }\n                    else if (typeof sampling === 'function') {\n                        sampler = sampling;\n                    }\n                    if (sampler) {\n                        data = data.downSample(\n                            valueAxis.dim, 1 / rate, sampler, indexSampler\n                        );\n                        seriesModel.setData(data);\n                    }\n                }\n            }\n        }, this);\n    };\n\n\n/***/ }),\n/* 754 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n\n\n    var zrUtil = __webpack_require__(606);\n    var Scale = __webpack_require__(632);\n    var numberUtil = __webpack_require__(610);\n\n    // Use some method of IntervalScale\n    var IntervalScale = __webpack_require__(638);\n\n    var scaleProto = Scale.prototype;\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n    var mathPow = Math.pow;\n\n    var mathLog = Math.log;\n\n    var LogScale = Scale.extend({\n\n        type: 'log',\n\n        base: 10,\n\n        $constructor: function () {\n            Scale.apply(this, arguments);\n            this._originalScale = new IntervalScale();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            var originalScale = this._originalScale;\n            var extent = this._extent;\n            var originalExtent = originalScale.getExtent();\n\n            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n                var powVal = numberUtil.round(mathPow(this.base, val));\n\n                // Fix #4158\n                powVal = (val === extent[0] && originalScale.__fixMin)\n                    ? fixRoundingError(powVal, originalExtent[0])\n                    : powVal;\n                powVal = (val === extent[1] && originalScale.__fixMax)\n                    ? fixRoundingError(powVal, originalExtent[1])\n                    : powVal;\n\n                return powVal;\n            }, this);\n        },\n\n        /**\n         * @param {number} val\n         * @return {string}\n         */\n        getLabel: intervalScaleProto.getLabel,\n\n        /**\n         * @param  {number} val\n         * @return {number}\n         */\n        scale: function (val) {\n            val = scaleProto.scale.call(this, val);\n            return mathPow(this.base, val);\n        },\n\n        /**\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var base = this.base;\n            start = mathLog(start) / mathLog(base);\n            end = mathLog(end) / mathLog(base);\n            intervalScaleProto.setExtent.call(this, start, end);\n        },\n\n        /**\n         * @return {number} end\n         */\n        getExtent: function () {\n            var base = this.base;\n            var extent = scaleProto.getExtent.call(this);\n            extent[0] = mathPow(base, extent[0]);\n            extent[1] = mathPow(base, extent[1]);\n\n            // Fix #4158\n            var originalScale = this._originalScale;\n            var originalExtent = originalScale.getExtent();\n            originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n            originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n\n            return extent;\n        },\n\n        /**\n         * @param  {Array.<number>} extent\n         */\n        unionExtent: function (extent) {\n            this._originalScale.unionExtent(extent);\n\n            var base = this.base;\n            extent[0] = mathLog(extent[0]) / mathLog(base);\n            extent[1] = mathLog(extent[1]) / mathLog(base);\n            scaleProto.unionExtent.call(this, extent);\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, true, function (val) {\n                return val > 0;\n            }));\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         * @param  {number} [approxTickNum = 10] Given approx tick number\n         */\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (span === Infinity || span <= 0) {\n                return;\n            }\n\n            var interval = numberUtil.quantity(span);\n            var err = approxTickNum / span * interval;\n\n            // Filter ticks to get closer to the desired count.\n            if (err <= 0.5) {\n                interval *= 10;\n            }\n\n            // Interval should be integer\n            while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n                interval *= 10;\n            }\n\n            var niceExtent = [\n                numberUtil.round(mathCeil(extent[0] / interval) * interval),\n                numberUtil.round(mathFloor(extent[1] / interval) * interval)\n            ];\n\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @override\n         */\n        niceExtent: function (opt) {\n            intervalScaleProto.niceExtent.call(this, opt);\n\n            var originalScale = this._originalScale;\n            originalScale.__fixMin = opt.fixMin;\n            originalScale.__fixMax = opt.fixMax;\n        }\n\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        LogScale.prototype[methodName] = function (val) {\n            val = mathLog(val) / mathLog(this.base);\n            return scaleProto[methodName].call(this, val);\n        };\n    });\n\n    LogScale.create = function () {\n        return new LogScale();\n    };\n\n    function fixRoundingError(val, originalVal) {\n        return roundingErrorFix(val, getPrecisionSafe(originalVal));\n    }\n\n    module.exports = LogScale;\n\n\n/***/ }),\n/* 755 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n\n// FIXME only one data\n\n\n    var zrUtil = __webpack_require__(606);\n    var Scale = __webpack_require__(632);\n\n    var scaleProto = Scale.prototype;\n\n    var OrdinalScale = Scale.extend({\n\n        type: 'ordinal',\n\n        init: function (data, extent) {\n            this._data = data;\n            this._extent = extent || [0, data.length - 1];\n        },\n\n        parse: function (val) {\n            return typeof val === 'string'\n                ? zrUtil.indexOf(this._data, val)\n                // val might be float.\n                : Math.round(val);\n        },\n\n        contain: function (rank) {\n            rank = this.parse(rank);\n            return scaleProto.contain.call(this, rank)\n                && this._data[rank] != null;\n        },\n\n        /**\n         * Normalize given rank or name to linear [0, 1]\n         * @param {number|string} [val]\n         * @return {number}\n         */\n        normalize: function (val) {\n            return scaleProto.normalize.call(this, this.parse(val));\n        },\n\n        scale: function (val) {\n            return Math.round(scaleProto.scale.call(this, val));\n        },\n\n        /**\n         * @return {Array}\n         */\n        getTicks: function () {\n            var ticks = [];\n            var extent = this._extent;\n            var rank = extent[0];\n\n            while (rank <= extent[1]) {\n                ticks.push(rank);\n                rank++;\n            }\n\n            return ticks;\n        },\n\n        /**\n         * Get item on rank n\n         * @param {number} n\n         * @return {string}\n         */\n        getLabel: function (n) {\n            return this._data[n];\n        },\n\n        /**\n         * @return {number}\n         */\n        count: function () {\n            return this._extent[1] - this._extent[0] + 1;\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, false));\n        },\n\n        niceTicks: zrUtil.noop,\n        niceExtent: zrUtil.noop\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    OrdinalScale.create = function () {\n        return new OrdinalScale();\n    };\n\n    module.exports = OrdinalScale;\n\n\n/***/ }),\n/* 756 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Interval scale\n * @module echarts/coord/scale/Time\n */\n\n\n\n    // [About UTC and local time zone]:\n    // In most cases, `number.parseDate` will treat input data string as local time\n    // (except time zone is specified in time string). And `format.formateTime` returns\n    // local time by default. option.useUTC is false by default. This design have\n    // concidered these common case:\n    // (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n    // in local time by default.\n    // (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n    // as its original time, without any time difference.\n\n    var zrUtil = __webpack_require__(606);\n    var numberUtil = __webpack_require__(610);\n    var formatUtil = __webpack_require__(613);\n    var scaleHelper = __webpack_require__(665);\n\n    var IntervalScale = __webpack_require__(638);\n\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var mathCeil = Math.ceil;\n    var mathFloor = Math.floor;\n    var ONE_SECOND = 1000;\n    var ONE_MINUTE = ONE_SECOND * 60;\n    var ONE_HOUR = ONE_MINUTE * 60;\n    var ONE_DAY = ONE_HOUR * 24;\n\n    // FIXME 公用？\n    var bisect = function (a, x, lo, hi) {\n        while (lo < hi) {\n            var mid = lo + hi >>> 1;\n            if (a[mid][2] < x) {\n                lo = mid + 1;\n            }\n            else {\n                hi  = mid;\n            }\n        }\n        return lo;\n    };\n\n    /**\n     * @alias module:echarts/coord/scale/Time\n     * @constructor\n     */\n    var TimeScale = IntervalScale.extend({\n        type: 'time',\n\n        /**\n         * @override\n         */\n        getLabel: function (val) {\n            var stepLvl = this._stepLvl;\n\n            var date = new Date(val);\n\n            return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n        },\n\n        /**\n         * @override\n         */\n        niceExtent: function (opt) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                // Expand extent\n                extent[0] -= ONE_DAY;\n                extent[1] += ONE_DAY;\n            }\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (extent[1] === -Infinity && extent[0] === Infinity) {\n                var d = new Date();\n                extent[1] = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                extent[0] = extent[1] - ONE_DAY;\n            }\n\n            this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!opt.fixMin) {\n                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!opt.fixMax) {\n                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n            }\n        },\n\n        /**\n         * @override\n         */\n        niceTicks: function (approxTickNum, minInterval, maxInterval) {\n            var timezoneOffset = this.getSetting('useUTC')\n                ? 0 : numberUtil.getTimezoneOffset() * 60 * 1000;\n            approxTickNum = approxTickNum || 10;\n\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            var approxInterval = span / approxTickNum;\n\n            if (minInterval != null && approxInterval < minInterval) {\n                approxInterval = minInterval;\n            }\n            if (maxInterval != null && approxInterval > maxInterval) {\n                approxInterval = maxInterval;\n            }\n\n            var scaleLevelsLen = scaleLevels.length;\n            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n\n            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n            var interval = level[2];\n            // Same with interval scale if span is much larger than 1 year\n            if (level[0] === 'year') {\n                var yearSpan = span / interval;\n\n                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n                // var niceYearSpan = numberUtil.nice(yearSpan, false);\n                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n\n                interval *= yearStep;\n            }\n\n            var niceExtent = [\n                Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset),\n                Math.round(mathFloor((extent[1] - timezoneOffset)/ interval) * interval + timezoneOffset)\n            ];\n\n            scaleHelper.fixExtent(niceExtent, extent);\n\n            this._stepLvl = level;\n            // Interval will be used in getTicks\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        parse: function (val) {\n            // val might be float.\n            return +numberUtil.parseDate(val);\n        }\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        TimeScale.prototype[methodName] = function (val) {\n            return intervalScaleProto[methodName].call(this, this.parse(val));\n        };\n    });\n\n    // Steps from d3\n    var scaleLevels = [\n        // Format       step    interval\n        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\n        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\n        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\n        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\n        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\n        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\n        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\n        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\n        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\n        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\n        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\n        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\n        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\n        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\n        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\n        ['week',        7,      ONE_DAY * 7],        // 7d\n        ['month',       1,      ONE_DAY * 31],       // 1M\n        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\n        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\n        ['year',        1,      ONE_DAY * 380]       // 1Y\n    ];\n\n    /**\n     * @param {module:echarts/model/Model}\n     * @return {module:echarts/scale/Time}\n     */\n    TimeScale.create = function (model) {\n        return new TimeScale({useUTC: model.ecModel.get('useUTC')});\n    };\n\n    module.exports = TimeScale;\n\n\n/***/ }),\n/* 757 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Group = __webpack_require__(634);\n    var componentUtil = __webpack_require__(642);\n    var clazzUtil = __webpack_require__(616);\n\n    var Component = function () {\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewComponent');\n    };\n\n    Component.prototype = {\n\n        constructor: Component,\n\n        init: function (ecModel, api) {},\n\n        render: function (componentModel, ecModel, api, payload) {},\n\n        dispose: function () {}\n\n    };\n\n    var componentProto = Component.prototype;\n    componentProto.updateView\n        = componentProto.updateLayout\n        = componentProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            // Do nothing;\n        };\n    // Enable Component.extend.\n    clazzUtil.enableClassExtend(Component);\n\n    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\n\n    module.exports = Component;\n\n\n/***/ }),\n/* 758 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var Gradient = __webpack_require__(645);\n    module.exports = function (ecModel) {\n        function encodeColor(seriesModel) {\n            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n            var data = seriesModel.getData();\n            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\n\n            // FIXME Set color function or use the platte color\n            data.setVisual('color', color);\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof color === 'function' && !(color instanceof Gradient)) {\n                    data.each(function (idx) {\n                        data.setItemVisual(\n                            idx, 'color', color(seriesModel.getDataParams(idx))\n                        );\n                    });\n                }\n\n                // itemStyle in each data item\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var color = itemModel.get(colorAccessPath, true);\n                    if (color != null) {\n                        data.setItemVisual(idx, 'color', color);\n                    }\n                });\n            }\n        }\n        ecModel.eachRawSeries(encodeColor);\n    };\n\n\n/***/ }),\n/* 759 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(706);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(587)(\"f5f19f26\", content, true);\n\n/***/ }),\n/* 760 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(707);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(587)(\"55fcf9c6\", content, true);\n\n/***/ }),\n/* 761 */,\n/* 762 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"date-range\"\n  }, [_c('group', {\n    staticClass: \"time-group\"\n  }, [_c('datetime', {\n    attrs: {\n      \"format\": \"YYYY-MM-DD\",\n      \"placeholder\": '请选择',\n      \"min-year\": 2010,\n      \"max-year\": 2017,\n      \"title\": '起始时间:',\n      \"clear-text\": \"起始时间\",\n      \"year-row\": \"{value}年\",\n      \"month-row\": \"{value}月\",\n      \"day-row\": \"{value}日\",\n      \"confirm-text\": \"完成\",\n      \"cancel-text\": \"取消\"\n    },\n    on: {\n      \"on-change\": _vm.setStartTime\n    },\n    model: {\n      value: (_vm.dateStartTime),\n      callback: function($$v) {\n        _vm.dateStartTime = $$v\n      },\n      expression: \"dateStartTime\"\n    }\n  })], 1), _vm._v(\" \"), _c('group', {\n    staticClass: \"time-group\"\n  }, [_c('datetime', {\n    attrs: {\n      \"format\": \"YYYY-MM-DD\",\n      \"placeholder\": '请选择',\n      \"min-year\": 2010,\n      \"max-year\": 2017,\n      \"title\": '结束时间:',\n      \"clear-text\": \"结束时间\",\n      \"year-row\": \"{value}年\",\n      \"month-row\": \"{value}月\",\n      \"day-row\": \"{value}日\",\n      \"confirm-text\": \"完成\",\n      \"cancel-text\": \"取消\"\n    },\n    on: {\n      \"on-change\": _vm.setEndTime\n    },\n    model: {\n      value: (_vm.dateEndTime),\n      callback: function($$v) {\n        _vm.dateEndTime = $$v\n      },\n      expression: \"dateEndTime\"\n    }\n  })], 1)], 1)\n},staticRenderFns: []}\n\n/***/ }),\n/* 763 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('a', {\n    staticClass: \"vux-datetime weui-cell\",\n    class: {\n      'weui-cell_access': !_vm.readonly\n    },\n    attrs: {\n      \"data-cancel-text\": '取消',\n      \"data-confirm-text\": '确定',\n      \"href\": \"javascript:\"\n    }\n  }, [_vm._t(\"default\", [_c('div', [_vm._t(\"title\", [_c('p', {\n    style: ({\n      width: _vm.$parent.labelWidth,\n      textAlign: _vm.$parent.labelAlign,\n      marginRight: _vm.$parent.labelMarginRight\n    }),\n    domProps: {\n      \"innerHTML\": _vm._s(_vm.title)\n    }\n  })]), _vm._v(\" \"), (_vm.inlineDesc) ? _c('inline-desc', [_vm._v(_vm._s(_vm.inlineDesc))]) : _vm._e()], 2), _vm._v(\" \"), _c('div', {\n    staticClass: \"weui-cell__ft vux-cell-primary vux-datetime-value\",\n    style: ({\n      textAlign: _vm.valueTextAlign\n    })\n  }, [_vm._v(\"\\n      \" + _vm._s(_vm._value) + \"\\n      \"), _c('icon', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (!_vm.valid),\n      expression: \"!valid\"\n    }],\n    staticClass: \"vux-input-icon\",\n    attrs: {\n      \"type\": \"warn\",\n      \"title\": _vm.firstError\n    }\n  })], 1)])], 2)\n},staticRenderFns: []}\n\n/***/ }),\n/* 764 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(759)\n\nvar Component = __webpack_require__(6)(\n  /* script */\n  __webpack_require__(694),\n  /* template */\n  __webpack_require__(762),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 765 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(760)\n\nvar Component = __webpack_require__(6)(\n  /* script */\n  __webpack_require__(693),\n  /* template */\n  __webpack_require__(763),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 766 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\n\n\n    var util = __webpack_require__(606);\n    var Draggable = __webpack_require__(799);\n\n    var Eventful = __webpack_require__(626);\n\n    var SILENT = 'silent';\n\n    function makeEventPacket(eveType, targetInfo, event) {\n        return {\n            type: eveType,\n            event: event,\n            // target can only be an element that is not silent.\n            target: targetInfo.target,\n            // topTarget can be a silent element.\n            topTarget: targetInfo.topTarget,\n            cancelBubble: false,\n            offsetX: event.zrX,\n            offsetY: event.zrY,\n            gestureEvent: event.gestureEvent,\n            pinchX: event.pinchX,\n            pinchY: event.pinchY,\n            pinchScale: event.pinchScale,\n            wheelDelta: event.zrDelta,\n            zrByTouch: event.zrByTouch\n        };\n    }\n\n    function EmptyProxy () {}\n    EmptyProxy.prototype.dispose = function () {};\n\n    var handlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n    /**\n     * @alias module:zrender/Handler\n     * @constructor\n     * @extends module:zrender/mixin/Eventful\n     * @param {module:zrender/Storage} storage Storage instance.\n     * @param {module:zrender/Painter} painter Painter instance.\n     * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n     * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n     */\n    var Handler = function(storage, painter, proxy, painterRoot) {\n        Eventful.call(this);\n\n        this.storage = storage;\n\n        this.painter = painter;\n\n        this.painterRoot = painterRoot;\n\n        proxy = proxy || new EmptyProxy();\n\n        /**\n         * Proxy of event. can be Dom, WebGLSurface, etc.\n         */\n        this.proxy = proxy;\n\n        // Attach handler\n        proxy.handler = this;\n\n        /**\n         * {target, topTarget, x, y}\n         * @private\n         * @type {Object}\n         */\n        this._hovered = {};\n\n        /**\n         * @private\n         * @type {Date}\n         */\n        this._lastTouchMoment;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastX;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastY;\n\n\n        Draggable.call(this);\n\n        util.each(handlerNames, function (name) {\n            proxy.on && proxy.on(name, this[name], this);\n        }, this);\n    };\n\n    Handler.prototype = {\n\n        constructor: Handler,\n\n        mousemove: function (event) {\n            var x = event.zrX;\n            var y = event.zrY;\n\n            var lastHovered = this._hovered;\n            var lastHoveredTarget = lastHovered.target;\n\n            // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n            // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n            // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n            // See #6198.\n            if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n                lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n                lastHoveredTarget = lastHovered.target;\n            }\n\n            var hovered = this._hovered = this.findHover(x, y);\n            var hoveredTarget = hovered.target;\n\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default');\n\n            // Mouse out on previous hovered element\n            if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(lastHovered, 'mouseout', event);\n            }\n\n            // Mouse moving on one element\n            this.dispatchToElement(hovered, 'mousemove', event);\n\n            // Mouse over on a new element\n            if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(hovered, 'mouseover', event);\n            }\n        },\n\n        mouseout: function (event) {\n            this.dispatchToElement(this._hovered, 'mouseout', event);\n\n            // There might be some doms created by upper layer application\n            // at the same level of painter.getViewportRoot() (e.g., tooltip\n            // dom created by echarts), where 'globalout' event should not\n            // be triggered when mouse enters these doms. (But 'mouseout'\n            // should be triggered at the original hovered element as usual).\n            var element = event.toElement || event.relatedTarget;\n            var innerDom;\n            do {\n                element = element && element.parentNode;\n            }\n            while (element && element.nodeType != 9 && !(\n                innerDom = element === this.painterRoot\n            ));\n\n            !innerDom && this.trigger('globalout', {event: event});\n        },\n\n        /**\n         * Resize\n         */\n        resize: function (event) {\n            this._hovered = {};\n        },\n\n        /**\n         * Dispatch event\n         * @param {string} eventName\n         * @param {event=} eventArgs\n         */\n        dispatch: function (eventName, eventArgs) {\n            var handler = this[eventName];\n            handler && handler.call(this, eventArgs);\n        },\n\n        /**\n         * Dispose\n         */\n        dispose: function () {\n\n            this.proxy.dispose();\n\n            this.storage =\n            this.proxy =\n            this.painter = null;\n        },\n\n        /**\n         * 设置默认的cursor style\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(cursorStyle);\n        },\n\n        /**\n         * 事件分发代理\n         *\n         * @private\n         * @param {Object} targetInfo {target, topTarget} 目标图形元素\n         * @param {string} eventName 事件名称\n         * @param {Object} event 事件对象\n         */\n        dispatchToElement: function (targetInfo, eventName, event) {\n            targetInfo = targetInfo || {};\n            var el = targetInfo.target;\n            if (el && el.silent) {\n                return;\n            }\n            var eventHandler = 'on' + eventName;\n            var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n            while (el) {\n                el[eventHandler]\n                    && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n\n                el.trigger(eventName, eventPacket);\n\n                el = el.parent;\n\n                if (eventPacket.cancelBubble) {\n                    break;\n                }\n            }\n\n            if (!eventPacket.cancelBubble) {\n                // 冒泡到顶级 zrender 对象\n                this.trigger(eventName, eventPacket);\n                // 分发事件到用户自定义层\n                // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n                this.painter && this.painter.eachOtherLayer(function (layer) {\n                    if (typeof(layer[eventHandler]) == 'function') {\n                        layer[eventHandler].call(layer, eventPacket);\n                    }\n                    if (layer.trigger) {\n                        layer.trigger(eventName, eventPacket);\n                    }\n                });\n            }\n        },\n\n        /**\n         * @private\n         * @param {number} x\n         * @param {number} y\n         * @param {module:zrender/graphic/Displayable} exclude\n         * @return {model:zrender/Element}\n         * @method\n         */\n        findHover: function(x, y, exclude) {\n            var list = this.storage.getDisplayList();\n            var out = {x: x, y: y};\n\n            for (var i = list.length - 1; i >= 0 ; i--) {\n                var hoverCheckResult;\n                if (list[i] !== exclude\n                    // getDisplayList may include ignored item in VML mode\n                    && !list[i].ignore\n                    && (hoverCheckResult = isHover(list[i], x, y))\n                ) {\n                    !out.topTarget && (out.topTarget = list[i]);\n                    if (hoverCheckResult !== SILENT) {\n                        out.target = list[i];\n                        break;\n                    }\n                }\n            }\n\n            return out;\n        }\n    };\n\n    // Common handlers\n    util.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        Handler.prototype[name] = function (event) {\n            // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n            var hovered = this.findHover(event.zrX, event.zrY);\n            var hoveredTarget = hovered.target;\n\n            if (name === 'mousedown') {\n                this._downel = hoveredTarget;\n                // In case click triggered before mouseup\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'mosueup') {\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'click') {\n                if (this._downel !== this._upel) {\n                    return;\n                }\n            }\n\n            this.dispatchToElement(hovered, name, event);\n        };\n    });\n\n    function isHover(displayable, x, y) {\n        if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n            var el = displayable;\n            var isSilent;\n            while (el) {\n                // If clipped by ancestor.\n                // FIXME: If clipPath has neither stroke nor fill,\n                // el.clipPath.contain(x, y) will always return false.\n                if (el.clipPath && !el.clipPath.contain(x, y))  {\n                    return false;\n                }\n                if (el.silent) {\n                    isSilent = true;\n                }\n                el = el.parent;\n            }\n            return isSilent ? SILENT : true;\n        }\n\n        return false;\n    }\n\n    util.mixin(Handler, Eventful);\n    util.mixin(Handler, Draggable);\n\n    module.exports = Handler;\n\n\n\n/***/ }),\n/* 767 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var util = __webpack_require__(606);\n    var config = __webpack_require__(633);\n    var Style = __webpack_require__(676);\n    var Pattern = __webpack_require__(675);\n\n    function returnFalse() {\n        return false;\n    }\n\n    /**\n     * 创建dom\n     *\n     * @inner\n     * @param {string} id dom id 待用\n     * @param {string} type dom type，such as canvas, div etc.\n     * @param {Painter} painter painter instance\n     * @param {number} number\n     */\n    function createDom(id, type, painter, dpr) {\n        var newDom = document.createElement(type);\n        var width = painter.getWidth();\n        var height = painter.getHeight();\n\n        var newDomStyle = newDom.style;\n        // 没append呢，请原谅我这样写，清晰~\n        newDomStyle.position = 'absolute';\n        newDomStyle.left = 0;\n        newDomStyle.top = 0;\n        newDomStyle.width = width + 'px';\n        newDomStyle.height = height + 'px';\n        newDom.width = width * dpr;\n        newDom.height = height * dpr;\n\n        // id不作为索引用，避免可能造成的重名，定义为私有属性\n        newDom.setAttribute('data-zr-dom-id', id);\n        return newDom;\n    }\n\n    /**\n     * @alias module:zrender/Layer\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @param {string} id\n     * @param {module:zrender/Painter} painter\n     * @param {number} [dpr]\n     */\n    var Layer = function(id, painter, dpr) {\n        var dom;\n        dpr = dpr || config.devicePixelRatio;\n        if (typeof id === 'string') {\n            dom = createDom(id, 'canvas', painter, dpr);\n        }\n        // Not using isDom because in node it will return false\n        else if (util.isObject(id)) {\n            dom = id;\n            id = dom.id;\n        }\n        this.id = id;\n        this.dom = dom;\n\n        var domStyle = dom.style;\n        if (domStyle) { // Not in node\n            dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n            domStyle['-webkit-user-select'] = 'none';\n            domStyle['user-select'] = 'none';\n            domStyle['-webkit-touch-callout'] = 'none';\n            domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n            domStyle['padding'] = 0;\n            domStyle['margin'] = 0;\n            domStyle['border-width'] = 0;\n        }\n\n        this.domBack = null;\n        this.ctxBack = null;\n\n        this.painter = painter;\n\n        this.config = null;\n\n        // Configs\n        /**\n         * 每次清空画布的颜色\n         * @type {string}\n         * @default 0\n         */\n        this.clearColor = 0;\n        /**\n         * 是否开启动态模糊\n         * @type {boolean}\n         * @default false\n         */\n        this.motionBlur = false;\n        /**\n         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         * @type {number}\n         * @default 0.7\n         */\n        this.lastFrameAlpha = 0.7;\n\n        /**\n         * Layer dpr\n         * @type {number}\n         */\n        this.dpr = dpr;\n    };\n\n    Layer.prototype = {\n\n        constructor: Layer,\n\n        elCount: 0,\n\n        __dirty: true,\n\n        initContext: function () {\n            this.ctx = this.dom.getContext('2d');\n            this.ctx.__currentValues = {};\n            this.ctx.dpr = this.dpr;\n        },\n\n        createBackBuffer: function () {\n            var dpr = this.dpr;\n\n            this.domBack = createDom('back-' + this.id, 'canvas', this.painter, dpr);\n            this.ctxBack = this.domBack.getContext('2d');\n            this.ctxBack.__currentValues = {};\n\n            if (dpr != 1) {\n                this.ctxBack.scale(dpr, dpr);\n            }\n        },\n\n        /**\n         * @param  {number} width\n         * @param  {number} height\n         */\n        resize: function (width, height) {\n            var dpr = this.dpr;\n\n            var dom = this.dom;\n            var domStyle = dom.style;\n            var domBack = this.domBack;\n\n            domStyle.width = width + 'px';\n            domStyle.height = height + 'px';\n\n            dom.width = width * dpr;\n            dom.height = height * dpr;\n\n            if (domBack) {\n                domBack.width = width * dpr;\n                domBack.height = height * dpr;\n\n                if (dpr != 1) {\n                    this.ctxBack.scale(dpr, dpr);\n                }\n            }\n        },\n\n        /**\n         * 清空该层画布\n         * @param {boolean} clearAll Clear all with out motion blur\n         */\n        clear: function (clearAll) {\n            var dom = this.dom;\n            var ctx = this.ctx;\n            var width = dom.width;\n            var height = dom.height;\n\n            var clearColor = this.clearColor;\n            var haveMotionBLur = this.motionBlur && !clearAll;\n            var lastFrameAlpha = this.lastFrameAlpha;\n\n            var dpr = this.dpr;\n\n            if (haveMotionBLur) {\n                if (!this.domBack) {\n                    this.createBackBuffer();\n                }\n\n                this.ctxBack.globalCompositeOperation = 'copy';\n                this.ctxBack.drawImage(\n                    dom, 0, 0,\n                    width / dpr,\n                    height / dpr\n                );\n            }\n\n            ctx.clearRect(0, 0, width, height);\n            if (clearColor) {\n                var clearColorGradientOrPattern;\n                // Gradient\n                if (clearColor.colorStops) {\n                    // Cache canvas gradient\n                    clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n                        x: 0,\n                        y: 0,\n                        width: width,\n                        height: height\n                    });\n\n                    clearColor.__canvasGradient = clearColorGradientOrPattern;\n                }\n                // Pattern\n                else if (clearColor.image) {\n                    clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n                }\n                ctx.save();\n                ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n                ctx.fillRect(0, 0, width, height);\n                ctx.restore();\n            }\n\n            if (haveMotionBLur) {\n                var domBack = this.domBack;\n                ctx.save();\n                ctx.globalAlpha = lastFrameAlpha;\n                ctx.drawImage(domBack, 0, 0, width, height);\n                ctx.restore();\n            }\n        }\n    };\n\n    module.exports = Layer;\n\n\n/***/ }),\n/* 768 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n \n\n    var config = __webpack_require__(633);\n    var util = __webpack_require__(606);\n    var log = __webpack_require__(673);\n    var BoundingRect = __webpack_require__(617);\n    var timsort = __webpack_require__(643);\n\n    var Layer = __webpack_require__(767);\n\n    var requestAnimationFrame = __webpack_require__(669);\n\n    // PENDIGN\n    // Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n    //\n    // Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\n    var MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\n    function parseInt10(val) {\n        return parseInt(val, 10);\n    }\n\n    function isLayerValid(layer) {\n        if (!layer) {\n            return false;\n        }\n\n        if (layer.__builtin__) {\n            return true;\n        }\n\n        if (typeof(layer.resize) !== 'function'\n            || typeof(layer.refresh) !== 'function'\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function preProcessLayer(layer) {\n        layer.__unusedCount++;\n    }\n\n    function postProcessLayer(layer) {\n        if (layer.__unusedCount == 1) {\n            layer.clear();\n        }\n    }\n\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var viewRect = new BoundingRect(0, 0, 0, 0);\n    function isDisplayableCulled(el, width, height) {\n        tmpRect.copy(el.getBoundingRect());\n        if (el.transform) {\n            tmpRect.applyTransform(el.transform);\n        }\n        viewRect.width = width;\n        viewRect.height = height;\n        return !tmpRect.intersect(viewRect);\n    }\n\n    function isClipPathChanged(clipPaths, prevClipPaths) {\n        if (clipPaths == prevClipPaths) { // Can both be null or undefined\n            return false;\n        }\n\n        if (!clipPaths || !prevClipPaths || (clipPaths.length !== prevClipPaths.length)) {\n            return true;\n        }\n        for (var i = 0; i < clipPaths.length; i++) {\n            if (clipPaths[i] !== prevClipPaths[i]) {\n                return true;\n            }\n        }\n    }\n\n    function doClip(clipPaths, ctx) {\n        for (var i = 0; i < clipPaths.length; i++) {\n            var clipPath = clipPaths[i];\n\n            clipPath.setTransform(ctx);\n            ctx.beginPath();\n            clipPath.buildPath(ctx, clipPath.shape);\n            ctx.clip();\n            // Transform back\n            clipPath.restoreTransform(ctx);\n        }\n    }\n\n    function createRoot(width, height) {\n        var domRoot = document.createElement('div');\n\n        // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n        domRoot.style.cssText = [\n            'position:relative',\n            'overflow:hidden',\n            'width:' + width + 'px',\n            'height:' + height + 'px',\n            'padding:0',\n            'margin:0',\n            'border-width:0'\n        ].join(';') + ';';\n\n        return domRoot;\n    }\n\n    /**\n     * @alias module:zrender/Painter\n     * @constructor\n     * @param {HTMLElement} root 绘图容器\n     * @param {module:zrender/Storage} storage\n     * @param {Object} opts\n     */\n    var Painter = function (root, storage, opts) {\n        // In node environment using node-canvas\n        var singleCanvas = !root.nodeName // In node ?\n            || root.nodeName.toUpperCase() === 'CANVAS';\n\n        this._opts = opts = util.extend({}, opts || {});\n\n        /**\n         * @type {number}\n         */\n        this.dpr = opts.devicePixelRatio || config.devicePixelRatio;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._singleCanvas = singleCanvas;\n        /**\n         * 绘图容器\n         * @type {HTMLElement}\n         */\n        this.root = root;\n\n        var rootStyle = root.style;\n\n        if (rootStyle) {\n            rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n            rootStyle['-webkit-user-select'] =\n            rootStyle['user-select'] =\n            rootStyle['-webkit-touch-callout'] = 'none';\n\n            root.innerHTML = '';\n        }\n\n        /**\n         * @type {module:zrender/Storage}\n         */\n        this.storage = storage;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        var zlevelList = this._zlevelList = [];\n\n        /**\n         * @type {Object.<string, module:zrender/Layer>}\n         * @private\n         */\n        var layers = this._layers = {};\n\n        /**\n         * @type {Object.<string, Object>}\n         * @type {private}\n         */\n        this._layerConfig = {};\n\n        if (!singleCanvas) {\n            this._width = this._getSize(0);\n            this._height = this._getSize(1);\n\n            var domRoot = this._domRoot = createRoot(\n                this._width, this._height\n            );\n            root.appendChild(domRoot);\n        }\n        else {\n            if (opts.width != null) {\n                root.width = opts.width;\n            }\n            if (opts.height != null) {\n                root.height = opts.height;\n            }\n            // Use canvas width and height directly\n            var width = root.width;\n            var height = root.height;\n            this._width = width;\n            this._height = height;\n\n            // Create layer if only one given canvas\n            // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n            var mainLayer = new Layer(root, this, 1);\n            mainLayer.initContext();\n            // FIXME Use canvas width and height\n            // mainLayer.resize(width, height);\n            layers[0] = mainLayer;\n            zlevelList.push(0);\n\n            this._domRoot = root;\n        }\n\n        // Layers for progressive rendering\n        this._progressiveLayers = [];\n\n        /**\n         * @type {module:zrender/Layer}\n         * @private\n         */\n        this._hoverlayer;\n\n        this._hoverElements = [];\n    };\n\n    Painter.prototype = {\n\n        constructor: Painter,\n\n        /**\n         * If painter use a single canvas\n         * @return {boolean}\n         */\n        isSingleCanvas: function () {\n            return this._singleCanvas;\n        },\n        /**\n         * @return {HTMLDivElement}\n         */\n        getViewportRoot: function () {\n            return this._domRoot;\n        },\n\n        getViewportRootOffset: function () {\n            var viewportRoot = this.getViewportRoot();\n            if (viewportRoot) {\n                return {\n                    offsetLeft: viewportRoot.offsetLeft || 0,\n                    offsetTop: viewportRoot.offsetTop || 0\n                };\n            }\n        },\n\n        /**\n         * 刷新\n         * @param {boolean} [paintAll=false] 强制绘制所有displayable\n         */\n        refresh: function (paintAll) {\n\n            var list = this.storage.getDisplayList(true);\n\n            var zlevelList = this._zlevelList;\n\n            this._paintList(list, paintAll);\n\n            // Paint custum layers\n            for (var i = 0; i < zlevelList.length; i++) {\n                var z = zlevelList[i];\n                var layer = this._layers[z];\n                if (!layer.__builtin__ && layer.refresh) {\n                    layer.refresh();\n                }\n            }\n\n            this.refreshHover();\n\n            if (this._progressiveLayers.length) {\n                this._startProgessive();\n            }\n\n            return this;\n        },\n\n        addHover: function (el, hoverStyle) {\n            if (el.__hoverMir) {\n                return;\n            }\n            var elMirror = new el.constructor({\n                style: el.style,\n                shape: el.shape\n            });\n            elMirror.__from = el;\n            el.__hoverMir = elMirror;\n            elMirror.setStyle(hoverStyle);\n            this._hoverElements.push(elMirror);\n        },\n\n        removeHover: function (el) {\n            var elMirror = el.__hoverMir;\n            var hoverElements = this._hoverElements;\n            var idx = util.indexOf(hoverElements, elMirror);\n            if (idx >= 0) {\n                hoverElements.splice(idx, 1);\n            }\n            el.__hoverMir = null;\n        },\n\n        clearHover: function (el) {\n            var hoverElements = this._hoverElements;\n            for (var i = 0; i < hoverElements.length; i++) {\n                var from = hoverElements[i].__from;\n                if (from) {\n                    from.__hoverMir = null;\n                }\n            }\n            hoverElements.length = 0;\n        },\n\n        refreshHover: function () {\n            var hoverElements = this._hoverElements;\n            var len = hoverElements.length;\n            var hoverLayer = this._hoverlayer;\n            hoverLayer && hoverLayer.clear();\n\n            if (!len) {\n                return;\n            }\n            timsort(hoverElements, this.storage.displayableSortFunc);\n\n            // Use a extream large zlevel\n            // FIXME?\n            if (!hoverLayer) {\n                hoverLayer = this._hoverlayer = this.getLayer(1e5);\n            }\n\n            var scope = {};\n            hoverLayer.ctx.save();\n            for (var i = 0; i < len;) {\n                var el = hoverElements[i];\n                var originalEl = el.__from;\n                // Original el is removed\n                // PENDING\n                if (!(originalEl && originalEl.__zr)) {\n                    hoverElements.splice(i, 1);\n                    originalEl.__hoverMir = null;\n                    len--;\n                    continue;\n                }\n                i++;\n\n                // Use transform\n                // FIXME style and shape ?\n                if (!originalEl.invisible) {\n                    el.transform = originalEl.transform;\n                    el.invTransform = originalEl.invTransform;\n                    el.__clipPaths = originalEl.__clipPaths;\n                    // el.\n                    this._doPaintEl(el, hoverLayer, true, scope);\n                }\n            }\n            hoverLayer.ctx.restore();\n        },\n\n        _startProgessive: function () {\n            var self = this;\n\n            if (!self._furtherProgressive) {\n                return;\n            }\n\n            // Use a token to stop progress steps triggered by\n            // previous zr.refresh calling.\n            var token = self._progressiveToken = +new Date();\n\n            self._progress++;\n            requestAnimationFrame(step);\n\n            function step() {\n                // In case refreshed or disposed\n                if (token === self._progressiveToken && self.storage) {\n\n                    self._doPaintList(self.storage.getDisplayList());\n\n                    if (self._furtherProgressive) {\n                        self._progress++;\n                        requestAnimationFrame(step);\n                    }\n                    else {\n                        self._progressiveToken = -1;\n                    }\n                }\n            }\n        },\n\n        _clearProgressive: function () {\n            this._progressiveToken = -1;\n            this._progress = 0;\n            util.each(this._progressiveLayers, function (layer) {\n                layer.__dirty && layer.clear();\n            });\n        },\n\n        _paintList: function (list, paintAll) {\n\n            if (paintAll == null) {\n                paintAll = false;\n            }\n\n            this._updateLayerStatus(list);\n\n            this._clearProgressive();\n\n            this.eachBuiltinLayer(preProcessLayer);\n\n            this._doPaintList(list, paintAll);\n\n            this.eachBuiltinLayer(postProcessLayer);\n        },\n\n        _doPaintList: function (list, paintAll) {\n            var currentLayer;\n            var currentZLevel;\n            var ctx;\n\n            // var invTransform = [];\n            var scope;\n\n            var progressiveLayerIdx = 0;\n            var currentProgressiveLayer;\n\n            var width = this._width;\n            var height = this._height;\n            var layerProgress;\n            var frame = this._progress;\n            function flushProgressiveLayer(layer) {\n                var dpr = ctx.dpr || 1;\n                ctx.save();\n                ctx.globalAlpha = 1;\n                ctx.shadowBlur = 0;\n                // Avoid layer don't clear in next progressive frame\n                currentLayer.__dirty = true;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n                ctx.restore();\n            }\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n\n                var elFrame = el.__frame;\n\n                // Flush at current context\n                // PENDING\n                if (elFrame < 0 && currentProgressiveLayer) {\n                    flushProgressiveLayer(currentProgressiveLayer);\n                    currentProgressiveLayer = null;\n                }\n\n                // Change draw layer\n                if (currentZLevel !== elZLevel) {\n                    if (ctx) {\n                        ctx.restore();\n                    }\n\n                    // Reset scope\n                    scope = {};\n\n                    // Only 0 zlevel if only has one canvas\n                    currentZLevel = elZLevel;\n                    currentLayer = this.getLayer(currentZLevel);\n\n                    if (!currentLayer.__builtin__) {\n                        log(\n                            'ZLevel ' + currentZLevel\n                            + ' has been used by unkown layer ' + currentLayer.id\n                        );\n                    }\n\n                    ctx = currentLayer.ctx;\n                    ctx.save();\n\n                    // Reset the count\n                    currentLayer.__unusedCount = 0;\n\n                    if (currentLayer.__dirty || paintAll) {\n                        currentLayer.clear();\n                    }\n                }\n\n                if (!(currentLayer.__dirty || paintAll)) {\n                    continue;\n                }\n\n                if (elFrame >= 0) {\n                    // Progressive layer changed\n                    if (!currentProgressiveLayer) {\n                        currentProgressiveLayer = this._progressiveLayers[\n                            Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)\n                        ];\n\n                        currentProgressiveLayer.ctx.save();\n                        currentProgressiveLayer.renderScope = {};\n\n                        if (currentProgressiveLayer\n                            && (currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress)\n                        ) {\n                            // flushProgressiveLayer(currentProgressiveLayer);\n                            // Quick jump all progressive elements\n                            // All progressive element are not dirty, jump over and flush directly\n                            i = currentProgressiveLayer.__nextIdxNotProg - 1;\n                            // currentProgressiveLayer = null;\n                            continue;\n                        }\n\n                        layerProgress = currentProgressiveLayer.__progress;\n\n                        if (!currentProgressiveLayer.__dirty) {\n                            // Keep rendering\n                            frame = layerProgress;\n                        }\n\n                        currentProgressiveLayer.__progress = frame + 1;\n                    }\n\n                    if (elFrame === frame) {\n                        this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n                    }\n                }\n                else {\n                    this._doPaintEl(el, currentLayer, paintAll, scope);\n                }\n\n                el.__dirty = false;\n            }\n\n            if (currentProgressiveLayer) {\n                flushProgressiveLayer(currentProgressiveLayer);\n            }\n\n            // Restore the lastLayer ctx\n            ctx && ctx.restore();\n            // If still has clipping state\n            // if (scope.prevElClipPaths) {\n            //     ctx.restore();\n            // }\n\n            this._furtherProgressive = false;\n            util.each(this._progressiveLayers, function (layer) {\n                if (layer.__maxProgress >= layer.__progress) {\n                    this._furtherProgressive = true;\n                }\n            }, this);\n        },\n\n        _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n            var ctx = currentLayer.ctx;\n            var m = el.transform;\n            if (\n                (currentLayer.__dirty || forcePaint)\n                // Ignore invisible element\n                && !el.invisible\n                // Ignore transparent element\n                && el.style.opacity !== 0\n                // Ignore scale 0 element, in some environment like node-canvas\n                // Draw a scale 0 element can cause all following draw wrong\n                // And setTransform with scale 0 will cause set back transform failed.\n                && !(m && !m[0] && !m[3])\n                // Ignore culled element\n                && !(el.culling && isDisplayableCulled(el, this._width, this._height))\n            ) {\n\n                var clipPaths = el.__clipPaths;\n\n                // Optimize when clipping on group with several elements\n                if (scope.prevClipLayer !== currentLayer\n                    || isClipPathChanged(clipPaths, scope.prevElClipPaths)\n                ) {\n                    // If has previous clipping state, restore from it\n                    if (scope.prevElClipPaths) {\n                        scope.prevClipLayer.ctx.restore();\n                        scope.prevClipLayer = scope.prevElClipPaths = null;\n\n                        // Reset prevEl since context has been restored\n                        scope.prevEl = null;\n                    }\n                    // New clipping state\n                    if (clipPaths) {\n                        ctx.save();\n                        doClip(clipPaths, ctx);\n                        scope.prevClipLayer = currentLayer;\n                        scope.prevElClipPaths = clipPaths;\n                    }\n                }\n                el.beforeBrush && el.beforeBrush(ctx);\n\n                el.brush(ctx, scope.prevEl || null);\n                scope.prevEl = el;\n\n                el.afterBrush && el.afterBrush(ctx);\n            }\n        },\n\n        /**\n         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n         * @param {number} zlevel\n         * @return {module:zrender/Layer}\n         */\n        getLayer: function (zlevel) {\n            if (this._singleCanvas) {\n                return this._layers[0];\n            }\n\n            var layer = this._layers[zlevel];\n            if (!layer) {\n                // Create a new layer\n                layer = new Layer('zr_' + zlevel, this, this.dpr);\n                layer.__builtin__ = true;\n\n                if (this._layerConfig[zlevel]) {\n                    util.merge(layer, this._layerConfig[zlevel], true);\n                }\n\n                this.insertLayer(zlevel, layer);\n\n                // Context is created after dom inserted to document\n                // Or excanvas will get 0px clientWidth and clientHeight\n                layer.initContext();\n            }\n\n            return layer;\n        },\n\n        insertLayer: function (zlevel, layer) {\n\n            var layersMap = this._layers;\n            var zlevelList = this._zlevelList;\n            var len = zlevelList.length;\n            var prevLayer = null;\n            var i = -1;\n            var domRoot = this._domRoot;\n\n            if (layersMap[zlevel]) {\n                log('ZLevel ' + zlevel + ' has been used already');\n                return;\n            }\n            // Check if is a valid layer\n            if (!isLayerValid(layer)) {\n                log('Layer of zlevel ' + zlevel + ' is not valid');\n                return;\n            }\n\n            if (len > 0 && zlevel > zlevelList[0]) {\n                for (i = 0; i < len - 1; i++) {\n                    if (\n                        zlevelList[i] < zlevel\n                        && zlevelList[i + 1] > zlevel\n                    ) {\n                        break;\n                    }\n                }\n                prevLayer = layersMap[zlevelList[i]];\n            }\n            zlevelList.splice(i + 1, 0, zlevel);\n\n            layersMap[zlevel] = layer;\n\n            // Vitual layer will not directly show on the screen.\n            // (It can be a WebGL layer and assigned to a ZImage element)\n            // But it still under management of zrender.\n            if (!layer.virtual) {\n                if (prevLayer) {\n                    var prevDom = prevLayer.dom;\n                    if (prevDom.nextSibling) {\n                        domRoot.insertBefore(\n                            layer.dom,\n                            prevDom.nextSibling\n                        );\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n                else {\n                    if (domRoot.firstChild) {\n                        domRoot.insertBefore(layer.dom, domRoot.firstChild);\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n            }\n        },\n\n        // Iterate each layer\n        eachLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                cb.call(context, this._layers[z], z);\n            }\n        },\n\n        // Iterate each buildin layer\n        eachBuiltinLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        // Iterate each other layer except buildin layer\n        eachOtherLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (!layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        /**\n         * 获取所有已创建的层\n         * @param {Array.<module:zrender/Layer>} [prevLayer]\n         */\n        getLayers: function () {\n            return this._layers;\n        },\n\n        _updateLayerStatus: function (list) {\n\n            var layers = this._layers;\n            var progressiveLayers = this._progressiveLayers;\n\n            var elCountsLastFrame = {};\n            var progressiveElCountsLastFrame = {};\n\n            this.eachBuiltinLayer(function (layer, z) {\n                elCountsLastFrame[z] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            util.each(progressiveLayers, function (layer, idx) {\n                progressiveElCountsLastFrame[idx] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            var progressiveLayerCount = 0;\n            var currentProgressiveLayer;\n            var lastProgressiveKey;\n            var frameCount = 0;\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var zlevel = this._singleCanvas ? 0 : el.zlevel;\n                var layer = layers[zlevel];\n                var elProgress = el.progressive;\n                if (layer) {\n                    layer.elCount++;\n                    layer.__dirty = layer.__dirty || el.__dirty;\n                }\n\n                /////// Update progressive\n                if (elProgress >= 0) {\n                    // Fix wrong progressive sequence problem.\n                    if (lastProgressiveKey !== elProgress) {\n                        lastProgressiveKey = elProgress;\n                        frameCount++;\n                    }\n                    var elFrame = el.__frame = frameCount - 1;\n                    if (!currentProgressiveLayer) {\n                        var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n                        currentProgressiveLayer = progressiveLayers[idx];\n                        if (!currentProgressiveLayer) {\n                            currentProgressiveLayer = progressiveLayers[idx] = new Layer(\n                                'progressive', this, this.dpr\n                            );\n                            currentProgressiveLayer.initContext();\n                        }\n                        currentProgressiveLayer.__maxProgress = 0;\n                    }\n                    currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n                    currentProgressiveLayer.elCount++;\n\n                    currentProgressiveLayer.__maxProgress = Math.max(\n                        currentProgressiveLayer.__maxProgress, elFrame\n                    );\n\n                    if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n                        // Should keep rendering this  layer because progressive rendering is not finished yet\n                        layer.__dirty = true;\n                    }\n                }\n                else {\n                    el.__frame = -1;\n\n                    if (currentProgressiveLayer) {\n                        currentProgressiveLayer.__nextIdxNotProg = i;\n                        progressiveLayerCount++;\n                        currentProgressiveLayer = null;\n                    }\n                }\n            }\n\n            if (currentProgressiveLayer) {\n                progressiveLayerCount++;\n                currentProgressiveLayer.__nextIdxNotProg = i;\n            }\n\n            // 层中的元素数量有发生变化\n            this.eachBuiltinLayer(function (layer, z) {\n                if (elCountsLastFrame[z] !== layer.elCount) {\n                    layer.__dirty = true;\n                }\n            });\n\n            progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n            util.each(progressiveLayers, function (layer, idx) {\n                if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n                    el.__dirty = true;\n                }\n                if (layer.__dirty) {\n                    layer.__progress = 0;\n                }\n            });\n        },\n\n        /**\n         * 清除hover层外所有内容\n         */\n        clear: function () {\n            this.eachBuiltinLayer(this._clearLayer);\n            return this;\n        },\n\n        _clearLayer: function (layer) {\n            layer.clear();\n        },\n\n        /**\n         * 修改指定zlevel的绘制参数\n         *\n         * @param {string} zlevel\n         * @param {Object} config 配置对象\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\n         * @param {number} [config.lastFrameAlpha=0.7]\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         */\n        configLayer: function (zlevel, config) {\n            if (config) {\n                var layerConfig = this._layerConfig;\n                if (!layerConfig[zlevel]) {\n                    layerConfig[zlevel] = config;\n                }\n                else {\n                    util.merge(layerConfig[zlevel], config, true);\n                }\n\n                var layer = this._layers[zlevel];\n\n                if (layer) {\n                    util.merge(layer, layerConfig[zlevel], true);\n                }\n            }\n        },\n\n        /**\n         * 删除指定层\n         * @param {number} zlevel 层所在的zlevel\n         */\n        delLayer: function (zlevel) {\n            var layers = this._layers;\n            var zlevelList = this._zlevelList;\n            var layer = layers[zlevel];\n            if (!layer) {\n                return;\n            }\n            layer.dom.parentNode.removeChild(layer.dom);\n            delete layers[zlevel];\n\n            zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n        },\n\n        /**\n         * 区域大小变化后重绘\n         */\n        resize: function (width, height) {\n            var domRoot = this._domRoot;\n            // FIXME Why ?\n            domRoot.style.display = 'none';\n\n            // Save input w/h\n            var opts = this._opts;\n            width != null && (opts.width = width);\n            height != null && (opts.height = height);\n\n            width = this._getSize(0);\n            height = this._getSize(1);\n\n            domRoot.style.display = '';\n\n            // 优化没有实际改变的resize\n            if (this._width != width || height != this._height) {\n                domRoot.style.width = width + 'px';\n                domRoot.style.height = height + 'px';\n\n                for (var id in this._layers) {\n                    if (this._layers.hasOwnProperty(id)) {\n                        this._layers[id].resize(width, height);\n                    }\n                }\n                util.each(this._progressiveLayers, function (layer) {\n                    layer.resize(width, height);\n                });\n\n                this.refresh(true);\n            }\n\n            this._width = width;\n            this._height = height;\n\n            return this;\n        },\n\n        /**\n         * 清除单独的一个层\n         * @param {number} zlevel\n         */\n        clearLayer: function (zlevel) {\n            var layer = this._layers[zlevel];\n            if (layer) {\n                layer.clear();\n            }\n        },\n\n        /**\n         * 释放\n         */\n        dispose: function () {\n            this.root.innerHTML = '';\n\n            this.root =\n            this.storage =\n\n            this._domRoot =\n            this._layers = null;\n        },\n\n        /**\n         * Get canvas which has all thing rendered\n         * @param {Object} opts\n         * @param {string} [opts.backgroundColor]\n         */\n        getRenderedCanvas: function (opts) {\n            opts = opts || {};\n            if (this._singleCanvas) {\n                return this._layers[0].dom;\n            }\n\n            var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n            imageLayer.initContext();\n\n            imageLayer.clearColor = opts.backgroundColor;\n            imageLayer.clear();\n\n            var displayList = this.storage.getDisplayList(true);\n\n            var scope = {};\n            var zlevel;\n\n            var self = this;\n            function findAndDrawOtherLayer(smaller, larger) {\n                var zlevelList = self._zlevelList;\n                if (smaller == null) {\n                    smaller = -Infinity;\n                }\n                var intermediateLayer;\n                for (var i = 0; i < zlevelList.length; i++) {\n                    var z = zlevelList[i];\n                    var layer = self._layers[z];\n                    if (!layer.__builtin__ && z > smaller && z < larger) {\n                        intermediateLayer = layer;\n                        break;\n                    }\n                }\n                if (intermediateLayer && intermediateLayer.renderToCanvas) {\n                    imageLayer.ctx.save();\n                    intermediateLayer.renderToCanvas(imageLayer.ctx);\n                    imageLayer.ctx.restore();\n                }\n            }\n            for (var i = 0; i < displayList.length; i++) {\n                var el = displayList[i];\n\n                if (el.zlevel !== zlevel) {\n                    findAndDrawOtherLayer(zlevel, el.zlevel);\n                    zlevel = el.zlevel;\n                }\n                this._doPaintEl(el, imageLayer, true, scope);\n            }\n\n            findAndDrawOtherLayer(zlevel, Infinity);\n\n            return imageLayer.dom;\n        },\n        /**\n         * 获取绘图区域宽度\n         */\n        getWidth: function () {\n            return this._width;\n        },\n\n        /**\n         * 获取绘图区域高度\n         */\n        getHeight: function () {\n            return this._height;\n        },\n\n        _getSize: function (whIdx) {\n            var opts = this._opts;\n            var wh = ['width', 'height'][whIdx];\n            var cwh = ['clientWidth', 'clientHeight'][whIdx];\n            var plt = ['paddingLeft', 'paddingTop'][whIdx];\n            var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n            if (opts[wh] != null && opts[wh] !== 'auto') {\n                return parseFloat(opts[wh]);\n            }\n\n            var root = this.root;\n            // IE8 does not support getComputedStyle, but it use VML.\n            var stl = document.defaultView.getComputedStyle(root);\n\n            return (\n                (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n                - (parseInt10(stl[plt]) || 0)\n                - (parseInt10(stl[prb]) || 0)\n            ) | 0;\n        },\n\n        pathToImage: function (path, dpr) {\n            dpr = dpr || this.dpr;\n\n            var canvas = document.createElement('canvas');\n            var ctx = canvas.getContext('2d');\n            var rect = path.getBoundingRect();\n            var style = path.style;\n            var shadowBlurSize = style.shadowBlur;\n            var shadowOffsetX = style.shadowOffsetX;\n            var shadowOffsetY = style.shadowOffsetY;\n            var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n\n            var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n            var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n            var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n            var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n            var width = rect.width + leftMargin + rightMargin;\n            var height = rect.height + topMargin + bottomMargin;\n\n            canvas.width = width * dpr;\n            canvas.height = height * dpr;\n\n            ctx.scale(dpr, dpr);\n            ctx.clearRect(0, 0, width, height);\n            ctx.dpr = dpr;\n\n            var pathTransform = {\n                position: path.position,\n                rotation: path.rotation,\n                scale: path.scale\n            };\n            path.position = [leftMargin - rect.x, topMargin - rect.y];\n            path.rotation = 0;\n            path.scale = [1, 1];\n            path.updateTransform();\n            if (path) {\n                path.brush(ctx);\n            }\n\n            var ImageShape = __webpack_require__(674);\n            var imgShape = new ImageShape({\n                style: {\n                    x: 0,\n                    y: 0,\n                    image: canvas\n                }\n            });\n\n            if (pathTransform.position != null) {\n                imgShape.position = path.position = pathTransform.position;\n            }\n\n            if (pathTransform.rotation != null) {\n                imgShape.rotation = path.rotation = pathTransform.rotation;\n            }\n\n            if (pathTransform.scale != null) {\n                imgShape.scale = path.scale = pathTransform.scale;\n            }\n\n            return imgShape;\n        }\n    };\n\n    module.exports = Painter;\n\n\n\n/***/ }),\n/* 769 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n\n\n    var util = __webpack_require__(606);\n    var env = __webpack_require__(615);\n\n    var Group = __webpack_require__(634);\n\n    // Use timsort because in most case elements are partially sorted\n    // https://jsfiddle.net/pissang/jr4x7mdm/8/\n    var timsort = __webpack_require__(643);\n\n    function shapeCompareFunc(a, b) {\n        if (a.zlevel === b.zlevel) {\n            if (a.z === b.z) {\n                // if (a.z2 === b.z2) {\n                //     // FIXME Slow has renderidx compare\n                //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n                //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n                //     return a.__renderidx - b.__renderidx;\n                // }\n                return a.z2 - b.z2;\n            }\n            return a.z - b.z;\n        }\n        return a.zlevel - b.zlevel;\n    }\n    /**\n     * 内容仓库 (M)\n     * @alias module:zrender/Storage\n     * @constructor\n     */\n    var Storage = function () {\n        this._roots = [];\n\n        this._displayList = [];\n\n        this._displayListLen = 0;\n    };\n\n    Storage.prototype = {\n\n        constructor: Storage,\n\n        /**\n         * @param  {Function} cb\n         *\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._roots.length; i++) {\n                this._roots[i].traverse(cb, context);\n            }\n        },\n\n        /**\n         * 返回所有图形的绘制队列\n         * @param {boolean} [update=false] 是否在返回前更新该数组\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n         *\n         * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n         * @return {Array.<module:zrender/graphic/Displayable>}\n         */\n        getDisplayList: function (update, includeIgnore) {\n            includeIgnore = includeIgnore || false;\n            if (update) {\n                this.updateDisplayList(includeIgnore);\n            }\n            return this._displayList;\n        },\n\n        /**\n         * 更新图形的绘制队列。\n         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n         */\n        updateDisplayList: function (includeIgnore) {\n            this._displayListLen = 0;\n            var roots = this._roots;\n            var displayList = this._displayList;\n            for (var i = 0, len = roots.length; i < len; i++) {\n                this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n            }\n            displayList.length = this._displayListLen;\n\n            // for (var i = 0, len = displayList.length; i < len; i++) {\n            //     displayList[i].__renderidx = i;\n            // }\n\n            // displayList.sort(shapeCompareFunc);\n            env.canvasSupported && timsort(displayList, shapeCompareFunc);\n        },\n\n        _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n\n            if (el.ignore && !includeIgnore) {\n                return;\n            }\n\n            el.beforeUpdate();\n\n            if (el.__dirty) {\n\n                el.update();\n\n            }\n\n            el.afterUpdate();\n\n            var userSetClipPath = el.clipPath;\n            if (userSetClipPath) {\n\n                // FIXME 效率影响\n                if (clipPaths) {\n                    clipPaths = clipPaths.slice();\n                }\n                else {\n                    clipPaths = [];\n                }\n\n                var currentClipPath = userSetClipPath;\n                var parentClipPath = el;\n                // Recursively add clip path\n                while (currentClipPath) {\n                    // clipPath 的变换是基于使用这个 clipPath 的元素\n                    currentClipPath.parent = parentClipPath;\n                    currentClipPath.updateTransform();\n\n                    clipPaths.push(currentClipPath);\n\n                    parentClipPath = currentClipPath;\n                    currentClipPath = currentClipPath.clipPath;\n                }\n            }\n\n            if (el.isGroup) {\n                var children = el._children;\n\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n\n                    // Force to mark as dirty if group is dirty\n                    // FIXME __dirtyPath ?\n                    if (el.__dirty) {\n                        child.__dirty = true;\n                    }\n\n                    this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n                }\n\n                // Mark group clean here\n                el.__dirty = false;\n\n            }\n            else {\n                el.__clipPaths = clipPaths;\n\n                this._displayList[this._displayListLen++] = el;\n            }\n        },\n\n        /**\n         * 添加图形(Shape)或者组(Group)到根节点\n         * @param {module:zrender/Element} el\n         */\n        addRoot: function (el) {\n            if (el.__storage === this) {\n                return;\n            }\n\n            if (el instanceof Group) {\n                el.addChildrenToStorage(this);\n            }\n\n            this.addToStorage(el);\n            this._roots.push(el);\n        },\n\n        /**\n         * 删除指定的图形(Shape)或者组(Group)\n         * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n         */\n        delRoot: function (el) {\n            if (el == null) {\n                // 不指定el清空\n                for (var i = 0; i < this._roots.length; i++) {\n                    var root = this._roots[i];\n                    if (root instanceof Group) {\n                        root.delChildrenFromStorage(this);\n                    }\n                }\n\n                this._roots = [];\n                this._displayList = [];\n                this._displayListLen = 0;\n\n                return;\n            }\n\n            if (el instanceof Array) {\n                for (var i = 0, l = el.length; i < l; i++) {\n                    this.delRoot(el[i]);\n                }\n                return;\n            }\n\n\n            var idx = util.indexOf(this._roots, el);\n            if (idx >= 0) {\n                this.delFromStorage(el);\n                this._roots.splice(idx, 1);\n                if (el instanceof Group) {\n                    el.delChildrenFromStorage(this);\n                }\n            }\n        },\n\n        addToStorage: function (el) {\n            el.__storage = this;\n            el.dirty(false);\n\n            return this;\n        },\n\n        delFromStorage: function (el) {\n            if (el) {\n                el.__storage = null;\n            }\n\n            return this;\n        },\n\n        /**\n         * 清空并且释放Storage\n         */\n        dispose: function () {\n            this._renderList =\n            this._roots = null;\n        },\n\n        displayableSortFunc: shapeCompareFunc\n    };\n\n    module.exports = Storage;\n\n\n\n/***/ }),\n/* 770 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n\n    var util = __webpack_require__(606);\n    var Dispatcher = __webpack_require__(625).Dispatcher;\n\n    var requestAnimationFrame = __webpack_require__(669);\n\n    var Animator = __webpack_require__(668);\n    /**\n     * @typedef {Object} IZRenderStage\n     * @property {Function} update\n     */\n\n    /**\n     * @alias module:zrender/animation/Animation\n     * @constructor\n     * @param {Object} [options]\n     * @param {Function} [options.onframe]\n     * @param {IZRenderStage} [options.stage]\n     * @example\n     *     var animation = new Animation();\n     *     var obj = {\n     *         x: 100,\n     *         y: 100\n     *     };\n     *     animation.animate(node.position)\n     *         .when(1000, {\n     *             x: 500,\n     *             y: 500\n     *         })\n     *         .when(2000, {\n     *             x: 100,\n     *             y: 100\n     *         })\n     *         .start('spline');\n     */\n    var Animation = function (options) {\n\n        options = options || {};\n\n        this.stage = options.stage || {};\n\n        this.onframe = options.onframe || function() {};\n\n        // private properties\n        this._clips = [];\n\n        this._running = false;\n\n        this._time;\n\n        this._pausedTime;\n\n        this._pauseStart;\n\n        this._paused = false;\n\n        Dispatcher.call(this);\n    };\n\n    Animation.prototype = {\n\n        constructor: Animation,\n        /**\n         * 添加 clip\n         * @param {module:zrender/animation/Clip} clip\n         */\n        addClip: function (clip) {\n            this._clips.push(clip);\n        },\n        /**\n         * 添加 animator\n         * @param {module:zrender/animation/Animator} animator\n         */\n        addAnimator: function (animator) {\n            animator.animation = this;\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.addClip(clips[i]);\n            }\n        },\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Clip} clip\n         */\n        removeClip: function(clip) {\n            var idx = util.indexOf(this._clips, clip);\n            if (idx >= 0) {\n                this._clips.splice(idx, 1);\n            }\n        },\n\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Animator} animator\n         */\n        removeAnimator: function (animator) {\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.removeClip(clips[i]);\n            }\n            animator.animation = null;\n        },\n\n        _update: function() {\n\n            var time = new Date().getTime() - this._pausedTime;\n            var delta = time - this._time;\n            var clips = this._clips;\n            var len = clips.length;\n\n            var deferredEvents = [];\n            var deferredClips = [];\n            for (var i = 0; i < len; i++) {\n                var clip = clips[i];\n                var e = clip.step(time, delta);\n                // Throw out the events need to be called after\n                // stage.update, like destroy\n                if (e) {\n                    deferredEvents.push(e);\n                    deferredClips.push(clip);\n                }\n            }\n\n            // Remove the finished clip\n            for (var i = 0; i < len;) {\n                if (clips[i]._needsRemove) {\n                    clips[i] = clips[len - 1];\n                    clips.pop();\n                    len--;\n                }\n                else {\n                    i++;\n                }\n            }\n\n            len = deferredEvents.length;\n            for (var i = 0; i < len; i++) {\n                deferredClips[i].fire(deferredEvents[i]);\n            }\n\n            this._time = time;\n\n            this.onframe(delta);\n\n            this.trigger('frame', delta);\n\n            if (this.stage.update) {\n                this.stage.update();\n            }\n        },\n\n        _startLoop: function () {\n            var self = this;\n\n            this._running = true;\n\n            function step() {\n                if (self._running) {\n\n                    requestAnimationFrame(step);\n\n                    !self._paused && self._update();\n                }\n            }\n\n            requestAnimationFrame(step);\n        },\n\n        /**\n         * 开始运行动画\n         */\n        start: function () {\n\n            this._time = new Date().getTime();\n            this._pausedTime = 0;\n\n            this._startLoop();\n        },\n        /**\n         * 停止运行动画\n         */\n        stop: function () {\n            this._running = false;\n        },\n\n        /**\n         * Pause\n         */\n        pause: function () {\n            if (!this._paused) {\n                this._pauseStart = new Date().getTime();\n                this._paused = true;\n            }\n        },\n\n        /**\n         * Resume\n         */\n        resume: function () {\n            if (this._paused) {\n                this._pausedTime += (new Date().getTime()) - this._pauseStart;\n                this._paused = false;\n            }\n        },\n\n        /**\n         * 清除所有动画片段\n         */\n        clear: function () {\n            this._clips = [];\n        },\n        /**\n         * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n         * @param  {Object} target\n         * @param  {Object} options\n         * @param  {boolean} [options.loop=false] 是否循环播放动画\n         * @param  {Function} [options.getter=null]\n         *         如果指定getter函数，会通过getter函数取属性值\n         * @param  {Function} [options.setter=null]\n         *         如果指定setter函数，会通过setter函数设置属性值\n         * @return {module:zrender/animation/Animation~Animator}\n         */\n        // TODO Gap\n        animate: function (target, options) {\n            options = options || {};\n\n            var animator = new Animator(\n                target,\n                options.loop,\n                options.getter,\n                options.setter\n            );\n\n            this.addAnimator(animator);\n\n            return animator;\n        }\n    };\n\n    util.mixin(Animation, Dispatcher);\n\n    module.exports = Animation;\n\n\n\n/***/ }),\n/* 771 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\n\n\n    var easingFuncs = __webpack_require__(772);\n\n    function Clip(options) {\n\n        this._target = options.target;\n\n        // 生命周期\n        this._life = options.life || 1000;\n        // 延时\n        this._delay = options.delay || 0;\n        // 开始时间\n        // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n        this._initialized = false;\n\n        // 是否循环\n        this.loop = options.loop == null ? false : options.loop;\n\n        this.gap = options.gap || 0;\n\n        this.easing = options.easing || 'Linear';\n\n        this.onframe = options.onframe;\n        this.ondestroy = options.ondestroy;\n        this.onrestart = options.onrestart;\n\n        this._pausedTime = 0;\n        this._paused = false;\n    }\n\n    Clip.prototype = {\n\n        constructor: Clip,\n\n        step: function (globalTime, deltaTime) {\n            // Set startTime on first step, or _startTime may has milleseconds different between clips\n            // PENDING\n            if (!this._initialized) {\n                this._startTime = globalTime + this._delay;\n                this._initialized = true;\n            }\n\n            if (this._paused) {\n                this._pausedTime += deltaTime;\n                return;\n            }\n\n            var percent = (globalTime - this._startTime - this._pausedTime) / this._life;\n\n            // 还没开始\n            if (percent < 0) {\n                return;\n            }\n\n            percent = Math.min(percent, 1);\n\n            var easing = this.easing;\n            var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n            var schedule = typeof easingFunc === 'function'\n                ? easingFunc(percent)\n                : percent;\n\n            this.fire('frame', schedule);\n\n            // 结束\n            if (percent == 1) {\n                if (this.loop) {\n                    this.restart (globalTime);\n                    // 重新开始周期\n                    // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n                    return 'restart';\n                }\n\n                // 动画完成将这个控制器标识为待删除\n                // 在Animation.update中进行批量删除\n                this._needsRemove = true;\n                return 'destroy';\n            }\n\n            return null;\n        },\n\n        restart: function (globalTime) {\n            var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n            this._startTime = globalTime - remainder + this.gap;\n            this._pausedTime = 0;\n\n            this._needsRemove = false;\n        },\n\n        fire: function (eventType, arg) {\n            eventType = 'on' + eventType;\n            if (this[eventType]) {\n                this[eventType](this._target, arg);\n            }\n        },\n\n        pause: function () {\n            this._paused = true;\n        },\n\n        resume: function () {\n            this._paused = false;\n        }\n    };\n\n    module.exports = Clip;\n\n\n\n/***/ }),\n/* 772 */\n/***/ (function(module, exports) {\n\n/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\n\n    var easing = {\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        linear: function (k) {\n            return k;\n        },\n\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticIn: function (k) {\n            return k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticOut: function (k) {\n            return k * (2 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k;\n            }\n            return -0.5 * (--k * (k - 2) - 1);\n        },\n\n        // 三次方的缓动（t^3）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicIn: function (k) {\n            return k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicOut: function (k) {\n            return --k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k + 2);\n        },\n\n        // 四次方的缓动（t^4）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticIn: function (k) {\n            return k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticOut: function (k) {\n            return 1 - (--k * k * k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k;\n            }\n            return -0.5 * ((k -= 2) * k * k * k - 2);\n        },\n\n        // 五次方的缓动（t^5）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticIn: function (k) {\n            return k * k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticOut: function (k) {\n            return --k * k * k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k * k * k + 2);\n        },\n\n        // 正弦曲线的缓动（sin(t)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalIn: function (k) {\n            return 1 - Math.cos(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalOut: function (k) {\n            return Math.sin(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalInOut: function (k) {\n            return 0.5 * (1 - Math.cos(Math.PI * k));\n        },\n\n        // 指数曲线的缓动（2^t）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialIn: function (k) {\n            return k === 0 ? 0 : Math.pow(1024, k - 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialOut: function (k) {\n            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialInOut: function (k) {\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if ((k *= 2) < 1) {\n                return 0.5 * Math.pow(1024, k - 1);\n            }\n            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n        },\n\n        // 圆形曲线的缓动（sqrt(1-t^2)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularIn: function (k) {\n            return 1 - Math.sqrt(1 - k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularOut: function (k) {\n            return Math.sqrt(1 - (--k * k));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - k * k) - 1);\n            }\n            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n        },\n\n        // 创建类似于弹簧在停止前来回振荡的动画\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticIn: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return -(a * Math.pow(2, 10 * (k -= 1)) *\n                        Math.sin((k - s) * (2 * Math.PI) / p));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return (a * Math.pow(2, -10 * k) *\n                    Math.sin((k - s) * (2 * Math.PI) / p) + 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticInOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            if ((k *= 2) < 1) {\n                return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p));\n            }\n            return a * Math.pow(2, -10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\n        },\n\n        // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backIn: function (k) {\n            var s = 1.70158;\n            return k * k * ((s + 1) * k - s);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backOut: function (k) {\n            var s = 1.70158;\n            return --k * k * ((s + 1) * k + s) + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backInOut: function (k) {\n            var s = 1.70158 * 1.525;\n            if ((k *= 2) < 1) {\n                return 0.5 * (k * k * ((s + 1) * k - s));\n            }\n            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n        },\n\n        // 创建弹跳效果\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceIn: function (k) {\n            return 1 - easing.bounceOut(1 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceOut: function (k) {\n            if (k < (1 / 2.75)) {\n                return 7.5625 * k * k;\n            }\n            else if (k < (2 / 2.75)) {\n                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n            }\n            else if (k < (2.5 / 2.75)) {\n                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n            }\n            else {\n                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n            }\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceInOut: function (k) {\n            if (k < 0.5) {\n                return easing.bounceIn(k * 2) * 0.5;\n            }\n            return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n        }\n    };\n\n    module.exports = easing;\n\n\n\n\n/***/ }),\n/* 773 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var normalizeRadian = __webpack_require__(670).normalizeRadian;\n    var PI2 = Math.PI * 2;\n\n    module.exports = {\n        /**\n         * 圆弧描边包含判断\n         * @param  {number}  cx\n         * @param  {number}  cy\n         * @param  {number}  r\n         * @param  {number}  startAngle\n         * @param  {number}  endAngle\n         * @param  {boolean}  anticlockwise\n         * @param  {number} lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {Boolean}\n         */\n        containStroke: function (\n            cx, cy, r, startAngle, endAngle, anticlockwise,\n            lineWidth, x, y\n        ) {\n\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n\n            x -= cx;\n            y -= cy;\n            var d = Math.sqrt(x * x + y * y);\n\n            if ((d - _l > r) || (d + _l < r)) {\n                return false;\n            }\n            if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n                // Is a circle\n                return true;\n            }\n            if (anticlockwise) {\n                var tmp = startAngle;\n                startAngle = normalizeRadian(endAngle);\n                endAngle = normalizeRadian(tmp);\n            } else {\n                startAngle = normalizeRadian(startAngle);\n                endAngle = normalizeRadian(endAngle);\n            }\n            if (startAngle > endAngle) {\n                endAngle += PI2;\n            }\n\n            var angle = Math.atan2(y, x);\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return (angle >= startAngle && angle <= endAngle)\n                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\n        }\n    };\n\n\n/***/ }),\n/* 774 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var curve = __webpack_require__(622);\n\n    module.exports = {\n        /**\n         * 三次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  x3\n         * @param  {number}  y3\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.cubicProjectPoint(\n                x0, y0, x1, y1, x2, y2, x3, y3,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n/***/ }),\n/* 775 */\n/***/ (function(module, exports) {\n\n\n    module.exports = {\n        /**\n         * 线段包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            var _a = 0;\n            var _b = x0;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l)\n                || (y < y0 - _l && y < y1 - _l)\n                || (x > x0 + _l && x > x1 + _l)\n                || (x < x0 - _l && x < x1 - _l)\n            ) {\n                return false;\n            }\n\n            if (x0 !== x1) {\n                _a = (y0 - y1) / (x0 - x1);\n                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\n            }\n            else {\n                return Math.abs(x - x0) <= _l / 2;\n            }\n            var tmp = _a * x - y + _b;\n            var _s = tmp * tmp / (_a * _a + 1);\n            return _s <= _l / 2 * _l / 2;\n        }\n    };\n\n\n/***/ }),\n/* 776 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var CMD = __webpack_require__(635).CMD;\n    var line = __webpack_require__(775);\n    var cubic = __webpack_require__(774);\n    var quadratic = __webpack_require__(777);\n    var arc = __webpack_require__(773);\n    var normalizeRadian = __webpack_require__(670).normalizeRadian;\n    var curve = __webpack_require__(622);\n\n    var windingLine = __webpack_require__(778);\n\n    var containStroke = line.containStroke;\n\n    var PI2 = Math.PI * 2;\n\n    var EPSILON = 1e-4;\n\n    function isAroundEqual(a, b) {\n        return Math.abs(a - b) < EPSILON;\n    }\n\n    // 临时数组\n    var roots = [-1, -1, -1];\n    var extrema = [-1, -1];\n\n    function swapExtrema() {\n        var tmp = extrema[0];\n        extrema[0] = extrema[1];\n        extrema[1] = tmp;\n    }\n\n    function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2 && y > y3)\n            || (y < y0 && y < y1 && y < y2 && y < y3)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var w = 0;\n            var nExtrema = -1;\n            var y0_, y1_;\n            for (var i = 0; i < nRoots; i++) {\n                var t = roots[i];\n\n                // Avoid winding error when intersection point is the connect point of two line of polygon\n                var unit = (t === 0 || t === 1) ? 0.5 : 1;\n\n                var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n                if (x_ < x) { // Quick reject\n                    continue;\n                }\n                if (nExtrema < 0) {\n                    nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n                    if (extrema[1] < extrema[0] && nExtrema > 1) {\n                        swapExtrema();\n                    }\n                    y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n                    if (nExtrema > 1) {\n                        y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n                    }\n                }\n                if (nExtrema == 2) {\n                    // 分成三段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else if (t < extrema[1]) {\n                        w += y1_ < y0_ ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y1_ ? unit : -unit;\n                    }\n                }\n                else {\n                    // 分成两段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y0_ ? unit : -unit;\n                    }\n                }\n            }\n            return w;\n        }\n    }\n\n    function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2)\n            || (y < y0 && y < y1 && y < y2)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var t = curve.quadraticExtremum(y0, y1, y2);\n            if (t >= 0 && t <= 1) {\n                var w = 0;\n                var y_ = curve.quadraticAt(y0, y1, y2, t);\n                for (var i = 0; i < nRoots; i++) {\n                    // Remove one endpoint.\n                    var unit = (roots[i] === 0 || roots[i] === 1) ? 0.5 : 1;\n\n                    var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n                    if (x_ < x) {   // Quick reject\n                        continue;\n                    }\n                    if (roots[i] < t) {\n                        w += y_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y2 < y_ ? unit : -unit;\n                    }\n                }\n                return w;\n            }\n            else {\n                // Remove one endpoint.\n                var unit = (roots[0] === 0 || roots[0] === 1) ? 0.5 : 1;\n\n                var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n                if (x_ < x) {   // Quick reject\n                    return 0;\n                }\n                return y2 < y0 ? unit : -unit;\n            }\n        }\n    }\n\n    // TODO\n    // Arc 旋转\n    function windingArc(\n        cx, cy, r, startAngle, endAngle, anticlockwise, x, y\n    ) {\n        y -= cy;\n        if (y > r || y < -r) {\n            return 0;\n        }\n        var tmp = Math.sqrt(r * r - y * y);\n        roots[0] = -tmp;\n        roots[1] = tmp;\n\n        var diff = Math.abs(startAngle - endAngle);\n        if (diff < 1e-4) {\n            return 0;\n        }\n        if (diff % PI2 < 1e-4) {\n            // Is a circle\n            startAngle = 0;\n            endAngle = PI2;\n            var dir = anticlockwise ? 1 : -1;\n            if (x >= roots[0] + cx && x <= roots[1] + cx) {\n                return dir;\n            } else {\n                return 0;\n            }\n        }\n\n        if (anticlockwise) {\n            var tmp = startAngle;\n            startAngle = normalizeRadian(endAngle);\n            endAngle = normalizeRadian(tmp);\n        }\n        else {\n            startAngle = normalizeRadian(startAngle);\n            endAngle = normalizeRadian(endAngle);\n        }\n        if (startAngle > endAngle) {\n            endAngle += PI2;\n        }\n\n        var w = 0;\n        for (var i = 0; i < 2; i++) {\n            var x_ = roots[i];\n            if (x_ + cx > x) {\n                var angle = Math.atan2(y, x_);\n                var dir = anticlockwise ? 1 : -1;\n                if (angle < 0) {\n                    angle = PI2 + angle;\n                }\n                if (\n                    (angle >= startAngle && angle <= endAngle)\n                    || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\n                ) {\n                    if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n                        dir = -dir;\n                    }\n                    w += dir;\n                }\n            }\n        }\n        return w;\n    }\n\n    function containPath(data, lineWidth, isStroke, x, y) {\n        var w = 0;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n\n        for (var i = 0; i < data.length;) {\n            var cmd = data[i++];\n            // Begin a new subpath\n            if (cmd === CMD.M && i > 1) {\n                // Close previous subpath\n                if (!isStroke) {\n                    w += windingLine(xi, yi, x0, y0, x, y);\n                }\n                // 如果被任何一个 subpath 包含\n                // if (w !== 0) {\n                //     return true;\n                // }\n            }\n\n            if (i == 1) {\n                // 如果第一个命令是 L, C, Q\n                // 则 previous point 同绘制命令的第一个 point\n                //\n                // 第一个命令为 Arc 的情况下会在后面特殊处理\n                xi = data[i];\n                yi = data[i + 1];\n\n                x0 = xi;\n                y0 = yi;\n            }\n\n            switch (cmd) {\n                case CMD.M:\n                    // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                    // 在 closePath 的时候使用\n                    x0 = data[i++];\n                    y0 = data[i++];\n                    xi = x0;\n                    yi = y0;\n                    break;\n                case CMD.L:\n                    if (isStroke) {\n                        if (containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n                        w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.C:\n                    if (isStroke) {\n                        if (cubic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingCubic(\n                            xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.Q:\n                    if (isStroke) {\n                        if (quadratic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingQuadratic(\n                            xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.A:\n                    // TODO Arc 判断的开销比较大\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var theta = data[i++];\n                    var dTheta = data[i++];\n                    // TODO Arc 旋转\n                    var psi = data[i++];\n                    var anticlockwise = 1 - data[i++];\n                    var x1 = Math.cos(theta) * rx + cx;\n                    var y1 = Math.sin(theta) * ry + cy;\n                    // 不是直接使用 arc 命令\n                    if (i > 1) {\n                        w += windingLine(xi, yi, x1, y1, x, y);\n                    }\n                    else {\n                        // 第一个命令起点还未定义\n                        x0 = x1;\n                        y0 = y1;\n                    }\n                    // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n                    var _x = (x - cx) * ry / rx + cx;\n                    if (isStroke) {\n                        if (arc.containStroke(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            lineWidth, _x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingArc(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            _x, y\n                        );\n                    }\n                    xi = Math.cos(theta + dTheta) * rx + cx;\n                    yi = Math.sin(theta + dTheta) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    var x1 = x0 + width;\n                    var y1 = y0 + height;\n                    if (isStroke) {\n                        if (containStroke(x0, y0, x1, y0, lineWidth, x, y)\n                          || containStroke(x1, y0, x1, y1, lineWidth, x, y)\n                          || containStroke(x1, y1, x0, y1, lineWidth, x, y)\n                          || containStroke(x0, y1, x0, y0, lineWidth, x, y)\n                        ) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // FIXME Clockwise ?\n                        w += windingLine(x1, y0, x1, y1, x, y);\n                        w += windingLine(x0, y1, x0, y0, x, y);\n                    }\n                    break;\n                case CMD.Z:\n                    if (isStroke) {\n                        if (containStroke(\n                            xi, yi, x0, y0, lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // Close a subpath\n                        w += windingLine(xi, yi, x0, y0, x, y);\n                        // 如果被任何一个 subpath 包含\n                        // FIXME subpaths may overlap\n                        // if (w !== 0) {\n                        //     return true;\n                        // }\n                    }\n                    xi = x0;\n                    yi = y0;\n                    break;\n            }\n        }\n        if (!isStroke && !isAroundEqual(yi, y0)) {\n            w += windingLine(xi, yi, x0, y0, x, y) || 0;\n        }\n        return w !== 0;\n    }\n\n    module.exports = {\n        contain: function (pathData, x, y) {\n            return containPath(pathData, 0, false, x, y);\n        },\n\n        containStroke: function (pathData, lineWidth, x, y) {\n            return containPath(pathData, lineWidth, true, x, y);\n        }\n    };\n\n\n/***/ }),\n/* 777 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var curve = __webpack_require__(622);\n\n    module.exports = {\n        /**\n         * 二次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.quadraticProjectPoint(\n                x0, y0, x1, y1, x2, y2,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n/***/ }),\n/* 778 */\n/***/ (function(module, exports) {\n\n\n    module.exports = function windingLine(x0, y0, x1, y1, x, y) {\n        if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\n            return 0;\n        }\n        // Ignore horizontal line\n        if (y1 === y0) {\n            return 0;\n        }\n        var dir = y1 < y0 ? 1 : -1;\n        var t = (y - y0) / (y1 - y0);\n\n        // Avoid winding error when intersection point is the connect point of two line of polygon\n        if (t === 1 || t === 0) {\n            dir = y1 < y0 ? 0.5 : -0.5;\n        }\n\n        var x_ = t * (x1 - x0) + x0;\n\n        return x_ > x ? dir : 0;\n    };\n\n\n/***/ }),\n/* 779 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Only implements needed gestures for mobile.\n */\n\n\n    var eventUtil = __webpack_require__(625);\n\n    var GestureMgr = function () {\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._track = [];\n    };\n\n    GestureMgr.prototype = {\n\n        constructor: GestureMgr,\n\n        recognize: function (event, target, root) {\n            this._doTrack(event, target, root);\n            return this._recognize(event);\n        },\n\n        clear: function () {\n            this._track.length = 0;\n            return this;\n        },\n\n        _doTrack: function (event, target, root) {\n            var touches = event.touches;\n\n            if (!touches) {\n                return;\n            }\n\n            var trackItem = {\n                points: [],\n                touches: [],\n                target: target,\n                event: event\n            };\n\n            for (var i = 0, len = touches.length; i < len; i++) {\n                var touch = touches[i];\n                var pos = eventUtil.clientToLocal(root, touch, {});\n                trackItem.points.push([pos.zrX, pos.zrY]);\n                trackItem.touches.push(touch);\n            }\n\n            this._track.push(trackItem);\n        },\n\n        _recognize: function (event) {\n            for (var eventName in recognizers) {\n                if (recognizers.hasOwnProperty(eventName)) {\n                    var gestureInfo = recognizers[eventName](this._track, event);\n                    if (gestureInfo) {\n                        return gestureInfo;\n                    }\n                }\n            }\n        }\n    };\n\n    function dist(pointPair) {\n        var dx = pointPair[1][0] - pointPair[0][0];\n        var dy = pointPair[1][1] - pointPair[0][1];\n\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    function center(pointPair) {\n        return [\n            (pointPair[0][0] + pointPair[1][0]) / 2,\n            (pointPair[0][1] + pointPair[1][1]) / 2\n        ];\n    }\n\n    var recognizers = {\n\n        pinch: function (track, event) {\n            var trackLen = track.length;\n\n            if (!trackLen) {\n                return;\n            }\n\n            var pinchEnd = (track[trackLen - 1] || {}).points;\n            var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n            if (pinchPre\n                && pinchPre.length > 1\n                && pinchEnd\n                && pinchEnd.length > 1\n            ) {\n                var pinchScale = dist(pinchEnd) / dist(pinchPre);\n                !isFinite(pinchScale) && (pinchScale = 1);\n\n                event.pinchScale = pinchScale;\n\n                var pinchCenter = center(pinchEnd);\n                event.pinchX = pinchCenter[0];\n                event.pinchY = pinchCenter[1];\n\n                return {\n                    type: 'pinch',\n                    target: track[0].target,\n                    event: event\n                };\n            }\n        }\n\n        // Only pinch currently.\n    };\n\n    module.exports = GestureMgr;\n\n\n\n/***/ }),\n/* 780 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\n\n\n    var vec2 = __webpack_require__(611);\n    var curve = __webpack_require__(622);\n\n    var bbox = {};\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n\n    var start = vec2.create();\n    var end = vec2.create();\n    var extremity = vec2.create();\n\n    var PI2 = Math.PI * 2;\n    /**\n     * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n     * @module zrender/core/bbox\n     * @param {Array<Object>} points 顶点数组\n     * @param {number} min\n     * @param {number} max\n     */\n    bbox.fromPoints = function(points, min, max) {\n        if (points.length === 0) {\n            return;\n        }\n        var p = points[0];\n        var left = p[0];\n        var right = p[0];\n        var top = p[1];\n        var bottom = p[1];\n        var i;\n\n        for (i = 1; i < points.length; i++) {\n            p = points[i];\n            left = mathMin(left, p[0]);\n            right = mathMax(right, p[0]);\n            top = mathMin(top, p[1]);\n            bottom = mathMax(bottom, p[1]);\n        }\n\n        min[0] = left;\n        min[1] = top;\n        max[0] = right;\n        max[1] = bottom;\n    };\n\n    /**\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromLine = function (x0, y0, x1, y1, min, max) {\n        min[0] = mathMin(x0, x1);\n        min[1] = mathMin(y0, y1);\n        max[0] = mathMax(x0, x1);\n        max[1] = mathMax(y0, y1);\n    };\n\n    var xDim = [];\n    var yDim = [];\n    /**\n     * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromCubic = function(\n        x0, y0, x1, y1, x2, y2, x3, y3, min, max\n    ) {\n        var cubicExtrema = curve.cubicExtrema;\n        var cubicAt = curve.cubicAt;\n        var i;\n        var n = cubicExtrema(x0, x1, x2, x3, xDim);\n        min[0] = Infinity;\n        min[1] = Infinity;\n        max[0] = -Infinity;\n        max[1] = -Infinity;\n\n        for (i = 0; i < n; i++) {\n            var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n            min[0] = mathMin(x, min[0]);\n            max[0] = mathMax(x, max[0]);\n        }\n        n = cubicExtrema(y0, y1, y2, y3, yDim);\n        for (i = 0; i < n; i++) {\n            var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n            min[1] = mathMin(y, min[1]);\n            max[1] = mathMax(y, max[1]);\n        }\n\n        min[0] = mathMin(x0, min[0]);\n        max[0] = mathMax(x0, max[0]);\n        min[0] = mathMin(x3, min[0]);\n        max[0] = mathMax(x3, max[0]);\n\n        min[1] = mathMin(y0, min[1]);\n        max[1] = mathMax(y0, max[1]);\n        min[1] = mathMin(y3, min[1]);\n        max[1] = mathMax(y3, max[1]);\n    };\n\n    /**\n     * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromQuadratic = function(x0, y0, x1, y1, x2, y2, min, max) {\n        var quadraticExtremum = curve.quadraticExtremum;\n        var quadraticAt = curve.quadraticAt;\n        // Find extremities, where derivative in x dim or y dim is zero\n        var tx =\n            mathMax(\n                mathMin(quadraticExtremum(x0, x1, x2), 1), 0\n            );\n        var ty =\n            mathMax(\n                mathMin(quadraticExtremum(y0, y1, y2), 1), 0\n            );\n\n        var x = quadraticAt(x0, x1, x2, tx);\n        var y = quadraticAt(y0, y1, y2, ty);\n\n        min[0] = mathMin(x0, x2, x);\n        min[1] = mathMin(y0, y2, y);\n        max[0] = mathMax(x0, x2, x);\n        max[1] = mathMax(y0, y2, y);\n    };\n\n    /**\n     * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n     * @method\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x\n     * @param {number} y\n     * @param {number} rx\n     * @param {number} ry\n     * @param {number} startAngle\n     * @param {number} endAngle\n     * @param {number} anticlockwise\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromArc = function (\n        x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max\n    ) {\n        var vec2Min = vec2.min;\n        var vec2Max = vec2.max;\n\n        var diff = Math.abs(startAngle - endAngle);\n\n\n        if (diff % PI2 < 1e-4 && diff > 1e-4) {\n            // Is a circle\n            min[0] = x - rx;\n            min[1] = y - ry;\n            max[0] = x + rx;\n            max[1] = y + ry;\n            return;\n        }\n\n        start[0] = mathCos(startAngle) * rx + x;\n        start[1] = mathSin(startAngle) * ry + y;\n\n        end[0] = mathCos(endAngle) * rx + x;\n        end[1] = mathSin(endAngle) * ry + y;\n\n        vec2Min(min, start, end);\n        vec2Max(max, start, end);\n\n        // Thresh to [0, Math.PI * 2]\n        startAngle = startAngle % (PI2);\n        if (startAngle < 0) {\n            startAngle = startAngle + PI2;\n        }\n        endAngle = endAngle % (PI2);\n        if (endAngle < 0) {\n            endAngle = endAngle + PI2;\n        }\n\n        if (startAngle > endAngle && !anticlockwise) {\n            endAngle += PI2;\n        }\n        else if (startAngle < endAngle && anticlockwise) {\n            startAngle += PI2;\n        }\n        if (anticlockwise) {\n            var tmp = endAngle;\n            endAngle = startAngle;\n            startAngle = tmp;\n        }\n\n        // var number = 0;\n        // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n        for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n            if (angle > startAngle) {\n                extremity[0] = mathCos(angle) * rx + x;\n                extremity[1] = mathSin(angle) * ry + y;\n\n                vec2Min(min, extremity, min);\n                vec2Max(max, extremity, max);\n            }\n        }\n    };\n\n    module.exports = bbox;\n\n\n\n/***/ }),\n/* 781 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var eventTool = __webpack_require__(625);\n    var zrUtil = __webpack_require__(606);\n    var Eventful = __webpack_require__(626);\n    var env = __webpack_require__(615);\n    var GestureMgr = __webpack_require__(779);\n\n    var addEventListener = eventTool.addEventListener;\n    var removeEventListener = eventTool.removeEventListener;\n    var normalizeEvent = eventTool.normalizeEvent;\n\n    var TOUCH_CLICK_DELAY = 300;\n\n    var mouseHandlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n\n    var touchHandlerNames = [\n        'touchstart', 'touchend', 'touchmove'\n    ];\n\n    var pointerEventNames = {\n        pointerdown: 1, pointerup: 1, pointermove: 1, pointerout: 1\n    };\n\n    var pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n        var nm = name.replace('mouse', 'pointer');\n        return pointerEventNames[nm] ? nm : name;\n    });\n\n    function eventNameFix(name) {\n        return (name === 'mousewheel' && env.browser.firefox) ? 'DOMMouseScroll' : name;\n    }\n\n    function processGesture(proxy, event, stage) {\n        var gestureMgr = proxy._gestureMgr;\n\n        stage === 'start' && gestureMgr.clear();\n\n        var gestureInfo = gestureMgr.recognize(\n            event,\n            proxy.handler.findHover(event.zrX, event.zrY, null).target,\n            proxy.dom\n        );\n\n        stage === 'end' && gestureMgr.clear();\n\n        // Do not do any preventDefault here. Upper application do that if necessary.\n        if (gestureInfo) {\n            var type = gestureInfo.type;\n            event.gestureEvent = type;\n\n            proxy.handler.dispatchToElement({target: gestureInfo.target}, type, gestureInfo.event);\n        }\n    }\n\n    // function onMSGestureChange(proxy, event) {\n    //     if (event.translationX || event.translationY) {\n    //         // mousemove is carried by MSGesture to reduce the sensitivity.\n    //         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n    //     }\n    //     if (event.scale !== 1) {\n    //         event.pinchX = event.offsetX;\n    //         event.pinchY = event.offsetY;\n    //         event.pinchScale = event.scale;\n    //         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n    //     }\n    // }\n\n    /**\n     * Prevent mouse event from being dispatched after Touch Events action\n     * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n     * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n     * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n     * Result: Blocking Mouse Events for 700ms.\n     */\n    function setTouchTimer(instance) {\n        instance._touching = true;\n        clearTimeout(instance._touchTimer);\n        instance._touchTimer = setTimeout(function () {\n            instance._touching = false;\n        }, 700);\n    }\n\n\n    var domHandlers = {\n        /**\n         * Mouse move handler\n         * @inner\n         * @param {Event} event\n         */\n        mousemove: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            this.trigger('mousemove', event);\n        },\n\n        /**\n         * Mouse out handler\n         * @inner\n         * @param {Event} event\n         */\n        mouseout: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            var element = event.toElement || event.relatedTarget;\n            if (element != this.dom) {\n                while (element && element.nodeType != 9) {\n                    // 忽略包含在root中的dom引起的mouseOut\n                    if (element === this.dom) {\n                        return;\n                    }\n\n                    element = element.parentNode;\n                }\n            }\n\n            this.trigger('mouseout', event);\n        },\n\n        /**\n         * Touch开始响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchstart: function (event) {\n            // Default mouse behaviour should not be disabled here.\n            // For example, page may needs to be slided.\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            this._lastTouchMoment = new Date();\n\n            processGesture(this, event, 'start');\n\n            // In touch device, trigger `mousemove`(`mouseover`) should\n            // be triggered, and must before `mousedown` triggered.\n            domHandlers.mousemove.call(this, event);\n\n            domHandlers.mousedown.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch移动响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchmove: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'change');\n\n            // Mouse move should always be triggered no matter whether\n            // there is gestrue event, because mouse move and pinch may\n            // be used at the same time.\n            domHandlers.mousemove.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch结束响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchend: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'end');\n\n            domHandlers.mouseup.call(this, event);\n\n            // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n            // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n            // we can conveniently implement \"hover style\" in both PC and touch device just\n            // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n            // to remove \"hover style\" on an element, without any additional code for\n            // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n            // style\" will remain for user view)\n\n            // click event should always be triggered no matter whether\n            // there is gestrue event. System click can not be prevented.\n            if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n                domHandlers.click.call(this, event);\n            }\n\n            setTouchTimer(this);\n        },\n\n        pointerdown: function (event) {\n            domHandlers.mousedown.call(this, event);\n\n            // if (useMSGuesture(this, event)) {\n            //     this._msGesture.addPointer(event.pointerId);\n            // }\n        },\n\n        pointermove: function (event) {\n            // FIXME\n            // pointermove is so sensitive that it always triggered when\n            // tap(click) on touch screen, which affect some judgement in\n            // upper application. So, we dont support mousemove on MS touch\n            // device yet.\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mousemove.call(this, event);\n            }\n        },\n\n        pointerup: function (event) {\n            domHandlers.mouseup.call(this, event);\n        },\n\n        pointerout: function (event) {\n            // pointerout will be triggered when tap on touch screen\n            // (IE11+/Edge on MS Surface) after click event triggered,\n            // which is inconsistent with the mousout behavior we defined\n            // in touchend. So we unify them.\n            // (check domHandlers.touchend for detailed explanation)\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mouseout.call(this, event);\n            }\n        }\n    };\n\n    function isPointerFromTouch(event) {\n        var pointerType = event.pointerType;\n        return pointerType === 'pen' || pointerType === 'touch';\n    }\n\n    // function useMSGuesture(handlerProxy, event) {\n    //     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n    // }\n\n    // Common handlers\n    zrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        domHandlers[name] = function (event) {\n            event = normalizeEvent(this.dom, event);\n            this.trigger(name, event);\n        };\n    });\n\n    /**\n     * 为控制类实例初始化dom 事件处理函数\n     *\n     * @inner\n     * @param {module:zrender/Handler} instance 控制类实例\n     */\n    function initDomHandler(instance) {\n        zrUtil.each(touchHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(pointerHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(mouseHandlerNames, function (name) {\n            instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n        });\n\n        function makeMouseHandler(fn, instance) {\n            return function () {\n                if (instance._touching) {\n                    return;\n                }\n                return fn.apply(instance, arguments);\n            };\n        }\n    }\n\n\n    function HandlerDomProxy(dom) {\n        Eventful.call(this);\n\n        this.dom = dom;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._touching = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._touchTimer;\n\n        /**\n         * @private\n         * @type {module:zrender/core/GestureMgr}\n         */\n        this._gestureMgr = new GestureMgr();\n\n        this._handlers = {};\n\n        initDomHandler(this);\n\n        if (env.pointerEventsSupported) { // Only IE11+/Edge\n            // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n            // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n            // at the same time.\n            // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n            // screen, which do not occurs in pointer event.\n            // So we use pointer event to both detect touch gesture and mouse behavior.\n            mountHandlers(pointerHandlerNames, this);\n\n            // FIXME\n            // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n            // which does not prevent defuault behavior occasionally (which may cause view port\n            // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n            // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n            // touch screen. And we only support click behavior on MS touch screen now.\n\n            // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n            // We dont support touch on IE on win7.\n            // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n            // if (typeof MSGesture === 'function') {\n            //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n            //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n            // }\n        }\n        else {\n            if (env.touchEventsSupported) {\n                mountHandlers(touchHandlerNames, this);\n                // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n                // addEventListener(root, 'mouseout', this._mouseoutHandler);\n            }\n\n            // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n            // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n            // mouse event can not be handle in those devices.\n            // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n            // mouseevent after touch event triggered, see `setTouchTimer`.\n            mountHandlers(mouseHandlerNames, this);\n        }\n\n        function mountHandlers(handlerNames, instance) {\n            zrUtil.each(handlerNames, function (name) {\n                addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n            }, instance);\n        }\n    }\n\n    var handlerDomProxyProto = HandlerDomProxy.prototype;\n    handlerDomProxyProto.dispose = function () {\n        var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n        for (var i = 0; i < handlerNames.length; i++) {\n            var name = handlerNames[i];\n            removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n        }\n    };\n\n    handlerDomProxyProto.setCursor = function (cursorStyle) {\n        this.dom.style.cursor = cursorStyle || 'default';\n    };\n\n    zrUtil.mixin(HandlerDomProxy, Eventful);\n\n    module.exports = HandlerDomProxy;\n\n\n/***/ }),\n/* 782 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// CompoundPath to improve performance\n\n\n    var Path = __webpack_require__(612);\n\n    module.exports = Path.extend({\n\n        type: 'compound',\n\n        shape: {\n\n            paths: null\n        },\n\n        _updatePathDirty: function () {\n            var dirtyPath = this.__dirtyPath;\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                // Mark as dirty if any subpath is dirty\n                dirtyPath = dirtyPath || paths[i].__dirtyPath;\n            }\n            this.__dirtyPath = dirtyPath;\n            this.__dirty = this.__dirty || dirtyPath;\n        },\n\n        beforeBrush: function () {\n            this._updatePathDirty();\n            var paths = this.shape.paths || [];\n            var scale = this.getGlobalScale();\n            // Update path scale\n            for (var i = 0; i < paths.length; i++) {\n                if (!paths[i].path) {\n                    paths[i].createPathProxy();\n                }\n                paths[i].path.setScale(scale[0], scale[1]);\n            }\n        },\n\n        buildPath: function (ctx, shape) {\n            var paths = shape.paths || [];\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].buildPath(ctx, paths[i].shape, true);\n            }\n        },\n\n        afterBrush: function () {\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].__dirtyPath = false;\n            }\n        },\n\n        getBoundingRect: function () {\n            this._updatePathDirty();\n            return Path.prototype.getBoundingRect.call(this);\n        }\n    });\n\n\n/***/ }),\n/* 783 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(606);\n\n    var Gradient = __webpack_require__(645);\n\n    /**\n     * x, y, x2, y2 are all percent from 0 to 1\n     * @param {number} [x=0]\n     * @param {number} [y=0]\n     * @param {number} [x2=1]\n     * @param {number} [y2=0]\n     * @param {Array.<Object>} colorStops\n     * @param {boolean} [globalCoord=false]\n     */\n    var LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'linear', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0 : x;\n\n        this.y = y == null ? 0 : y;\n\n        this.x2 = x2 == null ? 1 : x2;\n\n        this.y2 = y2 == null ? 0 : y2;\n\n        // Can be cloned\n        this.type = 'linear';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    LinearGradient.prototype = {\n\n        constructor: LinearGradient\n    };\n\n    zrUtil.inherits(LinearGradient, Gradient);\n\n    module.exports = LinearGradient;\n\n\n/***/ }),\n/* 784 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(606);\n\n    var Gradient = __webpack_require__(645);\n\n    /**\n     * x, y, r are all percent from 0 to 1\n     * @param {number} [x=0.5]\n     * @param {number} [y=0.5]\n     * @param {number} [r=0.5]\n     * @param {Array.<Object>} [colorStops]\n     * @param {boolean} [globalCoord=false]\n     */\n    var RadialGradient = function (x, y, r, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'radial', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0.5 : x;\n\n        this.y = y == null ? 0.5 : y;\n\n        this.r = r == null ? 0.5 : r;\n\n        // Can be cloned\n        this.type = 'radial';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    RadialGradient.prototype = {\n\n        constructor: RadialGradient\n    };\n\n    zrUtil.inherits(RadialGradient, Gradient);\n\n    module.exports = RadialGradient;\n\n\n/***/ }),\n/* 785 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Text element\n * @module zrender/graphic/Text\n *\n * TODO Wrapping\n *\n * Text not support gradient\n */\n\n\n\n    var Displayable = __webpack_require__(644);\n    var zrUtil = __webpack_require__(606);\n    var textContain = __webpack_require__(621);\n    var textHelper = __webpack_require__(647);\n\n    /**\n     * @alias zrender/graphic/Text\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    var Text = function (opts) {\n        Displayable.call(this, opts);\n    };\n\n    Text.prototype = {\n\n        constructor: Text,\n\n        type: 'text',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n\n            // Optimize, avoid normalize every time.\n            this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n            // Use props with prefix 'text'.\n            style.fill = style.stroke = style.shadowBlur = style.shadowColor =\n                style.shadowOffsetX = style.shadowOffsetY = null;\n\n            var text = style.text;\n            // Convert to string\n            text != null && (text += '');\n\n            // Always bind style\n            style.bind(ctx, this, prevEl);\n\n            if (!textHelper.needDrawText(text, style)) {\n                return;\n            }\n\n            this.setTransform(ctx);\n\n            textHelper.renderText(this, ctx, text, style);\n\n            this.restoreTransform(ctx);\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n\n            // Optimize, avoid normalize every time.\n            this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n            if (!this._rect) {\n                var text = style.text;\n                text != null ? (text += '') : (text = '');\n\n                var rect = textContain.getBoundingRect(\n                    style.text + '',\n                    style.font,\n                    style.textAlign,\n                    style.textVerticalAlign,\n                    style.textPadding,\n                    style.rich\n                );\n\n                rect.x += style.x || 0;\n                rect.y += style.y || 0;\n\n                if (textHelper.getStroke(style.textStroke, style.textLineWidth)) {\n                    var w = style.textLineWidth;\n                    rect.x -= w / 2;\n                    rect.y -= w / 2;\n                    rect.width += w;\n                    rect.height += w;\n                }\n\n                this._rect = rect;\n            }\n\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(Text, Displayable);\n\n    module.exports = Text;\n\n\n/***/ }),\n/* 786 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n\n    var vec2 = __webpack_require__(611);\n    var v2Min = vec2.min;\n    var v2Max = vec2.max;\n    var v2Scale = vec2.scale;\n    var v2Distance = vec2.distance;\n    var v2Add = vec2.add;\n\n    /**\n     * 贝塞尔平滑曲线\n     * @alias module:zrender/shape/util/smoothBezier\n     * @param {Array} points 线段顶点数组\n     * @param {number} smooth 平滑等级, 0-1\n     * @param {boolean} isLoop\n     * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n     *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n     *                           整个折线的包围盒做一个并集用来约束控制点。\n     * @param {Array} 计算出来的控制点数组\n     */\n    module.exports = function (points, smooth, isLoop, constraint) {\n        var cps = [];\n\n        var v = [];\n        var v1 = [];\n        var v2 = [];\n        var prevPoint;\n        var nextPoint;\n\n        var min, max;\n        if (constraint) {\n            min = [Infinity, Infinity];\n            max = [-Infinity, -Infinity];\n            for (var i = 0, len = points.length; i < len; i++) {\n                v2Min(min, min, points[i]);\n                v2Max(max, max, points[i]);\n            }\n            // 与指定的包围盒做并集\n            v2Min(min, min, constraint[0]);\n            v2Max(max, max, constraint[1]);\n        }\n\n        for (var i = 0, len = points.length; i < len; i++) {\n            var point = points[i];\n\n            if (isLoop) {\n                prevPoint = points[i ? i - 1 : len - 1];\n                nextPoint = points[(i + 1) % len];\n            }\n            else {\n                if (i === 0 || i === len - 1) {\n                    cps.push(vec2.clone(points[i]));\n                    continue;\n                }\n                else {\n                    prevPoint = points[i - 1];\n                    nextPoint = points[i + 1];\n                }\n            }\n\n            vec2.sub(v, nextPoint, prevPoint);\n\n            // use degree to scale the handle length\n            v2Scale(v, v, smooth);\n\n            var d0 = v2Distance(point, prevPoint);\n            var d1 = v2Distance(point, nextPoint);\n            var sum = d0 + d1;\n            if (sum !== 0) {\n                d0 /= sum;\n                d1 /= sum;\n            }\n\n            v2Scale(v1, v, -d0);\n            v2Scale(v2, v, d1);\n            var cp0 = v2Add([], point, v1);\n            var cp1 = v2Add([], point, v2);\n            if (constraint) {\n                v2Max(cp0, cp0, min);\n                v2Min(cp0, cp0, max);\n                v2Max(cp1, cp1, min);\n                v2Min(cp1, cp1, max);\n            }\n            cps.push(cp0);\n            cps.push(cp1);\n        }\n\n        if (isLoop) {\n            cps.push(cps.shift());\n        }\n\n        return cps;\n    };\n\n\n\n/***/ }),\n/* 787 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n    var vec2 = __webpack_require__(611);\n\n    /**\n     * @inner\n     */\n    function interpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    /**\n     * @alias module:zrender/shape/util/smoothSpline\n     * @param {Array} points 线段顶点数组\n     * @param {boolean} isLoop\n     * @return {Array}\n     */\n    module.exports = function (points, isLoop) {\n        var len = points.length;\n        var ret = [];\n\n        var distance = 0;\n        for (var i = 1; i < len; i++) {\n            distance += vec2.distance(points[i - 1], points[i]);\n        }\n\n        var segs = distance / 2;\n        segs = segs < len ? len : segs;\n        for (var i = 0; i < segs; i++) {\n            var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n            var idx = Math.floor(pos);\n\n            var w = pos - idx;\n\n            var p0;\n            var p1 = points[idx % len];\n            var p2;\n            var p3;\n            if (!isLoop) {\n                p0 = points[idx === 0 ? idx : idx - 1];\n                p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n                p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n            }\n            else {\n                p0 = points[(idx - 1 + len) % len];\n                p2 = points[(idx + 1) % len];\n                p3 = points[(idx + 2) % len];\n            }\n\n            var w2 = w * w;\n            var w3 = w * w2;\n\n            ret.push([\n                interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\n                interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\n            ]);\n        }\n        return ret;\n    };\n\n\n\n/***/ }),\n/* 788 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\n\n\n\n    var textHelper = __webpack_require__(647);\n    var BoundingRect = __webpack_require__(617);\n\n    var tmpRect = new BoundingRect();\n\n    var RectText = function () {};\n\n    RectText.prototype = {\n\n        constructor: RectText,\n\n        /**\n         * Draw text in a rect with specified position.\n         * @param  {CanvasRenderingContext2D} ctx\n         * @param  {Object} rect Displayable rect\n         */\n        drawRectText: function (ctx, rect) {\n            var style = this.style;\n\n            rect = style.textRect || rect;\n\n            // Optimize, avoid normalize every time.\n            this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n            var text = style.text;\n\n            // Convert to string\n            text != null && (text += '');\n\n            if (!textHelper.needDrawText(text, style)) {\n                return;\n            }\n\n            // FIXME\n            ctx.save();\n\n            // Transform rect to view space\n            var transform = this.transform;\n            if (!style.transformText) {\n                if (transform) {\n                    tmpRect.copy(rect);\n                    tmpRect.applyTransform(transform);\n                    rect = tmpRect;\n                }\n            }\n            else {\n                this.setTransform(ctx);\n            }\n\n            // transformText and textRotation can not be used at the same time.\n            textHelper.renderText(this, ctx, text, style, rect);\n\n            ctx.restore();\n        }\n    };\n\n    module.exports = RectText;\n\n\n/***/ }),\n/* 789 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\n \n\n    module.exports = __webpack_require__(612).extend({\n\n        type: 'arc',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        style: {\n\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r + x, unitY * r + y);\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n        }\n    });\n\n\n/***/ }),\n/* 790 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\n\n\n    var curveTool = __webpack_require__(622);\n    var vec2 = __webpack_require__(611);\n    var quadraticSubdivide = curveTool.quadraticSubdivide;\n    var cubicSubdivide = curveTool.cubicSubdivide;\n    var quadraticAt = curveTool.quadraticAt;\n    var cubicAt = curveTool.cubicAt;\n    var quadraticDerivativeAt = curveTool.quadraticDerivativeAt;\n    var cubicDerivativeAt = curveTool.cubicDerivativeAt;\n\n    var out = [];\n\n    function someVectorAt(shape, t, isTangent) {\n        var cpx2 = shape.cpx2;\n        var cpy2 = shape.cpy2;\n        if (cpx2 === null || cpy2 === null) {\n            return [\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t),\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)\n            ];\n        }\n        else {\n            return [\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t),\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)\n            ];\n        }\n    }\n    module.exports = __webpack_require__(612).extend({\n\n        type: 'bezier-curve',\n\n        shape: {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n            cpx1: 0,\n            cpy1: 0,\n            // cpx2: 0,\n            // cpy2: 0\n\n            // Curve show percent, for animating\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var cpx1 = shape.cpx1;\n            var cpy1 = shape.cpy1;\n            var cpx2 = shape.cpx2;\n            var cpy2 = shape.cpy2;\n            var percent = shape.percent;\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (cpx2 == null || cpy2 == null) {\n                if (percent < 1) {\n                    quadraticSubdivide(\n                        x1, cpx1, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    x2 = out[2];\n                    quadraticSubdivide(\n                        y1, cpy1, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    y2 = out[2];\n                }\n\n                ctx.quadraticCurveTo(\n                    cpx1, cpy1,\n                    x2, y2\n                );\n            }\n            else {\n                if (percent < 1) {\n                    cubicSubdivide(\n                        x1, cpx1, cpx2, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    cpx2 = out[2];\n                    x2 = out[3];\n                    cubicSubdivide(\n                        y1, cpy1, cpy2, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    cpy2 = out[2];\n                    y2 = out[3];\n                }\n                ctx.bezierCurveTo(\n                    cpx1, cpy1,\n                    cpx2, cpy2,\n                    x2, y2\n                );\n            }\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        pointAt: function (t) {\n            return someVectorAt(this.shape, t, false);\n        },\n\n        /**\n         * Get tangent at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        tangentAt: function (t) {\n            var p = someVectorAt(this.shape, t, true);\n            return vec2.normalize(p, p);\n        }\n    });\n\n\n\n/***/ }),\n/* 791 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\n\n\n\n    module.exports = __webpack_require__(612).extend({\n\n        type: 'circle',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0\n        },\n\n\n        buildPath : function (ctx, shape, inBundle) {\n            // Better stroking in ShapeBundle\n            // Always do it may have performence issue ( fill may be 2x more cost)\n            if (inBundle) {\n                ctx.moveTo(shape.cx + shape.r, shape.cy);\n            }\n            // else {\n            //     if (ctx.allocate && !ctx.data.length) {\n            //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n            //     }\n            // }\n            // Better stroking in ShapeBundle\n            // ctx.moveTo(shape.cx + shape.r, shape.cy);\n            ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n        }\n    });\n\n\n\n/***/ }),\n/* 792 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\n\n    module.exports = __webpack_require__(612).extend({\n\n        type: 'line',\n\n        shape: {\n            // Start point\n            x1: 0,\n            y1: 0,\n            // End point\n            x2: 0,\n            y2: 0,\n\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var percent = shape.percent;\n\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (percent < 1) {\n                x2 = x1 * (1 - percent) + x2 * percent;\n                y2 = y1 * (1 - percent) + y2 * percent;\n            }\n            ctx.lineTo(x2, y2);\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} percent\n         * @return {Array.<number>}\n         */\n        pointAt: function (p) {\n            var shape = this.shape;\n            return [\n                shape.x1 * (1 - p) + shape.x2 * p,\n                shape.y1 * (1 - p) + shape.y2 * p\n            ];\n        }\n    });\n\n\n\n/***/ }),\n/* 793 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\n\n\n    var polyHelper = __webpack_require__(678);\n\n    module.exports = __webpack_require__(612).extend({\n        \n        type: 'polygon',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, true);\n        }\n    });\n\n\n/***/ }),\n/* 794 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\n\n\n    var polyHelper = __webpack_require__(678);\n\n    module.exports = __webpack_require__(612).extend({\n        \n        type: 'polyline',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        style: {\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, false);\n        }\n    });\n\n\n/***/ }),\n/* 795 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\n\n\n    var roundRectHelper = __webpack_require__(679);\n\n    module.exports = __webpack_require__(612).extend({\n\n        type: 'rect',\n\n        shape: {\n            // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n            // r缩写为1         相当于 [1, 1, 1, 1]\n            // r缩写为[1]       相当于 [1, 1, 1, 1]\n            // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n            // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n            r: 0,\n\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            if (!shape.r) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, shape);\n            }\n            ctx.closePath();\n            return;\n        }\n    });\n\n\n\n/***/ }),\n/* 796 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\n\n\n    module.exports = __webpack_require__(612).extend({\n\n        type: 'ring',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0,\n            r0: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.cx;\n            var y = shape.cy;\n            var PI2 = Math.PI * 2;\n            ctx.moveTo(x + shape.r, y);\n            ctx.arc(x, y, shape.r, 0, PI2, false);\n            ctx.moveTo(x + shape.r0, y);\n            ctx.arc(x, y, shape.r0, 0, PI2, true);\n        }\n    });\n\n\n\n/***/ }),\n/* 797 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\n\n\n\n    var Path = __webpack_require__(612);\n    var fixClipWithShadow = __webpack_require__(677);\n\n    module.exports = Path.extend({\n\n        type: 'sector',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r0: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        brush: fixClipWithShadow(Path.prototype.brush),\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r0 = Math.max(shape.r0 || 0, 0);\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n\n            ctx.lineTo(unitX * r + x, unitY * r + y);\n\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n\n            ctx.lineTo(\n                Math.cos(endAngle) * r0 + x,\n                Math.sin(endAngle) * r0 + y\n            );\n\n            if (r0 !== 0) {\n                ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n            }\n\n            ctx.closePath();\n        }\n    });\n\n\n\n/***/ }),\n/* 798 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module zrender/mixin/Animatable\n */\n\n\n    var Animator = __webpack_require__(668);\n    var util = __webpack_require__(606);\n    var isString = util.isString;\n    var isFunction = util.isFunction;\n    var isObject = util.isObject;\n    var log = __webpack_require__(673);\n\n    /**\n     * @alias modue:zrender/mixin/Animatable\n     * @constructor\n     */\n    var Animatable = function () {\n\n        /**\n         * @type {Array.<module:zrender/animation/Animator>}\n         * @readOnly\n         */\n        this.animators = [];\n    };\n\n    Animatable.prototype = {\n\n        constructor: Animatable,\n\n        /**\n         * 动画\n         *\n         * @param {string} path The path to fetch value from object, like 'a.b.c'.\n         * @param {boolean} [loop] Whether to loop animation.\n         * @return {module:zrender/animation/Animator}\n         * @example:\n         *     el.animate('style', false)\n         *         .when(1000, {x: 10} )\n         *         .done(function(){ // Animation done })\n         *         .start()\n         */\n        animate: function (path, loop) {\n            var target;\n            var animatingShape = false;\n            var el = this;\n            var zr = this.__zr;\n            if (path) {\n                var pathSplitted = path.split('.');\n                var prop = el;\n                // If animating shape\n                animatingShape = pathSplitted[0] === 'shape';\n                for (var i = 0, l = pathSplitted.length; i < l; i++) {\n                    if (!prop) {\n                        continue;\n                    }\n                    prop = prop[pathSplitted[i]];\n                }\n                if (prop) {\n                    target = prop;\n                }\n            }\n            else {\n                target = el;\n            }\n\n            if (!target) {\n                log(\n                    'Property \"'\n                    + path\n                    + '\" is not existed in element '\n                    + el.id\n                );\n                return;\n            }\n\n            var animators = el.animators;\n\n            var animator = new Animator(target, loop);\n\n            animator.during(function (target) {\n                el.dirty(animatingShape);\n            })\n            .done(function () {\n                // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n                animators.splice(util.indexOf(animators, animator), 1);\n            });\n\n            animators.push(animator);\n\n            // If animate after added to the zrender\n            if (zr) {\n                zr.animation.addAnimator(animator);\n            }\n\n            return animator;\n        },\n\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stopAnimation: function (forwardToLast) {\n            var animators = this.animators;\n            var len = animators.length;\n            for (var i = 0; i < len; i++) {\n                animators[i].stop(forwardToLast);\n            }\n            animators.length = 0;\n\n            return this;\n        },\n\n        /**\n         * @param {Object} target\n         * @param {number} [time=500] Time in ms\n         * @param {string} [easing='linear']\n         * @param {number} [delay=0]\n         * @param {Function} [callback]\n         * @param {Function} [forceAnimate] Prevent stop animation and callback\n         *        immediently when target values are the same as current values.\n         *\n         * @example\n         *  // Animate position\n         *  el.animateTo({\n         *      position: [10, 10]\n         *  }, function () { // done })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n         *  el.animateTo({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100, 'cubicOut', function () { // done })\n         */\n         // TODO Return animation key\n        animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n            // animateTo(target, time, easing, callback);\n            if (isString(delay)) {\n                callback = easing;\n                easing = delay;\n                delay = 0;\n            }\n            // animateTo(target, time, delay, callback);\n            else if (isFunction(easing)) {\n                callback = easing;\n                easing = 'linear';\n                delay = 0;\n            }\n            // animateTo(target, time, callback);\n            else if (isFunction(delay)) {\n                callback = delay;\n                delay = 0;\n            }\n            // animateTo(target, callback)\n            else if (isFunction(time)) {\n                callback = time;\n                time = 500;\n            }\n            // animateTo(target)\n            else if (!time) {\n                time = 500;\n            }\n            // Stop all previous animations\n            this.stopAnimation();\n            this._animateToShallow('', this, target, time, delay, easing, callback);\n\n            // Animators may be removed immediately after start\n            // if there is nothing to animate\n            var animators = this.animators.slice();\n            var count = animators.length;\n            function done() {\n                count--;\n                if (!count) {\n                    callback && callback();\n                }\n            }\n\n            // No animators. This should be checked before animators[i].start(),\n            // because 'done' may be executed immediately if no need to animate.\n            if (!count) {\n                callback && callback();\n            }\n            // Start after all animators created\n            // Incase any animator is done immediately when all animation properties are not changed\n            for (var i = 0; i < animators.length; i++) {\n                animators[i]\n                    .done(done)\n                    .start(easing, forceAnimate);\n            }\n        },\n\n        /**\n         * @private\n         * @param {string} path=''\n         * @param {Object} source=this\n         * @param {Object} target\n         * @param {number} [time=500]\n         * @param {number} [delay=0]\n         *\n         * @example\n         *  // Animate position\n         *  el._animateToShallow({\n         *      position: [10, 10]\n         *  })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms\n         *  el._animateToShallow({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100)\n         */\n        _animateToShallow: function (path, source, target, time, delay) {\n            var objShallow = {};\n            var propertyCount = 0;\n            for (var name in target) {\n                if (!target.hasOwnProperty(name)) {\n                    continue;\n                }\n\n                if (source[name] != null) {\n                    if (isObject(target[name]) && !util.isArrayLike(target[name])) {\n                        this._animateToShallow(\n                            path ? path + '.' + name : name,\n                            source[name],\n                            target[name],\n                            time,\n                            delay\n                        );\n                    }\n                    else {\n                        objShallow[name] = target[name];\n                        propertyCount++;\n                    }\n                }\n                else if (target[name] != null) {\n                    // Attr directly if not has property\n                    // FIXME, if some property not needed for element ?\n                    if (!path) {\n                        this.attr(name, target[name]);\n                    }\n                    else {  // Shape or style\n                        var props = {};\n                        props[path] = {};\n                        props[path][name] = target[name];\n                        this.attr(props);\n                    }\n                }\n            }\n\n            if (propertyCount > 0) {\n                this.animate(path, false)\n                    .when(time == null ? 500 : time, objShallow)\n                    .delay(delay || 0);\n            }\n\n            return this;\n        }\n    };\n\n    module.exports = Animatable;\n\n\n/***/ }),\n/* 799 */\n/***/ (function(module, exports) {\n\n// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\n\n    function Draggable() {\n\n        this.on('mousedown', this._dragStart, this);\n        this.on('mousemove', this._drag, this);\n        this.on('mouseup', this._dragEnd, this);\n        this.on('globalout', this._dragEnd, this);\n        // this._dropTarget = null;\n        // this._draggingTarget = null;\n\n        // this._x = 0;\n        // this._y = 0;\n    }\n\n    Draggable.prototype = {\n\n        constructor: Draggable,\n\n        _dragStart: function (e) {\n            var draggingTarget = e.target;\n            if (draggingTarget && draggingTarget.draggable) {\n                this._draggingTarget = draggingTarget;\n                draggingTarget.dragging = true;\n                this._x = e.offsetX;\n                this._y = e.offsetY;\n\n                this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n            }\n        },\n\n        _drag: function (e) {\n            var draggingTarget = this._draggingTarget;\n            if (draggingTarget) {\n\n                var x = e.offsetX;\n                var y = e.offsetY;\n\n                var dx = x - this._x;\n                var dy = y - this._y;\n                this._x = x;\n                this._y = y;\n\n                draggingTarget.drift(dx, dy, e);\n                this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n\n                var dropTarget = this.findHover(x, y, draggingTarget).target;\n                var lastDropTarget = this._dropTarget;\n                this._dropTarget = dropTarget;\n\n                if (draggingTarget !== dropTarget) {\n                    if (lastDropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n                    }\n                    if (dropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n                    }\n                }\n            }\n        },\n\n        _dragEnd: function (e) {\n            var draggingTarget = this._draggingTarget;\n\n            if (draggingTarget) {\n                draggingTarget.dragging = false;\n            }\n\n            this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n            if (this._dropTarget) {\n                this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n            }\n\n            this._draggingTarget = null;\n            this._dropTarget = null;\n        }\n\n    };\n\n    function param(target, e) {\n        return {target: target, topTarget: e && e.topTarget};\n    }\n\n    module.exports = Draggable;\n\n\n/***/ }),\n/* 800 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Path = __webpack_require__(612);\n    var PathProxy = __webpack_require__(635);\n    var transformPath = __webpack_require__(801);\n\n    // command chars\n    var cc = [\n        'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\n        'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\n    ];\n\n    var mathSqrt = Math.sqrt;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n    var PI = Math.PI;\n\n    var vMag = function(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n    var vRatio = function(u, v) {\n        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n    var vAngle = function(u, v) {\n        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)\n                * Math.acos(vRatio(u, v));\n    };\n\n    function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n        var psi = psiDeg * (PI / 180.0);\n        var xp = mathCos(psi) * (x1 - x2) / 2.0\n                 + mathSin(psi) * (y1 - y2) / 2.0;\n        var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0\n                 + mathCos(psi) * (y1 - y2) / 2.0;\n\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n\n        if (lambda > 1) {\n            rx *= mathSqrt(lambda);\n            ry *= mathSqrt(lambda);\n        }\n\n        var f = (fa === fs ? -1 : 1)\n            * mathSqrt((((rx * rx) * (ry * ry))\n                    - ((rx * rx) * (yp * yp))\n                    - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)\n                    + (ry * ry) * (xp * xp))\n                ) || 0;\n\n        var cxp = f * rx * yp / ry;\n        var cyp = f * -ry * xp / rx;\n\n        var cx = (x1 + x2) / 2.0\n                 + mathCos(psi) * cxp\n                 - mathSin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0\n                + mathSin(psi) * cxp\n                + mathCos(psi) * cyp;\n\n        var theta = vAngle([ 1, 0 ], [ (xp - cxp) / rx, (yp - cyp) / ry ]);\n        var u = [ (xp - cxp) / rx, (yp - cyp) / ry ];\n        var v = [ (-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry ];\n        var dTheta = vAngle(u, v);\n\n        if (vRatio(u, v) <= -1) {\n            dTheta = PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * PI;\n        }\n\n        path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n    }\n\n    function createPathProxyFromString(data) {\n        if (!data) {\n            return [];\n        }\n\n        // command string\n        var cs = data.replace(/-/g, ' -')\n            .replace(/  /g, ' ')\n            .replace(/ /g, ',')\n            .replace(/,,/g, ',');\n\n        var n;\n        // create pipes so that we can split the data\n        for (n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n\n        // create array\n        var arr = cs.split('|');\n        // init context point\n        var cpx = 0;\n        var cpy = 0;\n\n        var path = new PathProxy();\n        var CMD = PathProxy.CMD;\n\n        var prevCmd;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            var off = 0;\n            var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n            var cmd;\n\n            if (p.length > 0 && p[0] === '') {\n                p.shift();\n            }\n\n            for (var i = 0; i < p.length; i++) {\n                p[i] = parseFloat(p[i]);\n            }\n            while (off < p.length && !isNaN(p[off])) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var ctlPtx;\n                var ctlPty;\n\n                var rx;\n                var ry;\n                var psi;\n                var fa;\n                var fs;\n\n                var x1 = cpx;\n                var y1 = cpy;\n\n                // convert l, H, h, V, and v to L\n                switch (c) {\n                    case 'l':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'm':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'C':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]\n                        );\n                        cpx = p[off - 2];\n                        cpy = p[off - 1];\n                        break;\n                    case 'c':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy\n                        );\n                        cpx += p[off - 2];\n                        cpy += p[off - 1];\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = cpx + p[off++];\n                        y1 = cpy + p[off++];\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 'Q':\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'q':\n                        x1 = p[off++] + cpx;\n                        y1 = p[off++] + cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                    case 'a':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                }\n            }\n\n            if (c === 'z' || c === 'Z') {\n                cmd = CMD.Z;\n                path.addData(cmd);\n            }\n\n            prevCmd = cmd;\n        }\n\n        path.toStatic();\n\n        return path;\n    }\n\n    // TODO Optimize double memory cost problem\n    function createPathOptions(str, opts) {\n        var pathProxy = createPathProxyFromString(str);\n        opts = opts || {};\n        opts.buildPath = function (path) {\n            if (path.setData) {\n                path.setData(pathProxy.data);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            }\n            else {\n                var ctx = path;\n                pathProxy.rebuildPath(ctx);\n            }\n        };\n\n        opts.applyTransform = function (m) {\n            transformPath(pathProxy, m);\n\n            this.dirty(true);\n        };\n\n        return opts;\n    }\n\n    module.exports = {\n        /**\n         * Create a Path object from path string data\n         * http://www.w3.org/TR/SVG/paths.html#PathData\n         * @param  {Object} opts Other options\n         */\n        createFromString: function (str, opts) {\n            return new Path(createPathOptions(str, opts));\n        },\n\n        /**\n         * Create a Path class from path string data\n         * @param  {string} str\n         * @param  {Object} opts Other options\n         */\n        extendFromString: function (str, opts) {\n            return Path.extend(createPathOptions(str, opts));\n        },\n\n        /**\n         * Merge multiple paths\n         */\n        // TODO Apply transform\n        // TODO stroke dash\n        // TODO Optimize double memory cost problem\n        mergePath: function (pathEls, opts) {\n            var pathList = [];\n            var len = pathEls.length;\n            for (var i = 0; i < len; i++) {\n                var pathEl = pathEls[i];\n                if (!pathEl.path) {\n                    pathEl.createPathProxy();\n                }\n                if (pathEl.__dirtyPath) {\n                    pathEl.buildPath(pathEl.path, pathEl.shape, true);\n                }\n                pathList.push(pathEl.path);\n            }\n\n            var pathBundle = new Path(opts);\n            // Need path proxy.\n            pathBundle.createPathProxy();\n            pathBundle.buildPath = function (path) {\n                path.appendPath(pathList);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            };\n\n            return pathBundle;\n        }\n    };\n\n\n/***/ }),\n/* 801 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var CMD = __webpack_require__(635).CMD;\n    var vec2 = __webpack_require__(611);\n    var v2ApplyTransform = vec2.applyTransform;\n\n    var points = [[], [], []];\n    var mathSqrt = Math.sqrt;\n    var mathAtan2 = Math.atan2;\n    function transformPath(path, m) {\n        var data = path.data;\n        var cmd;\n        var nPoint;\n        var i;\n        var j;\n        var k;\n        var p;\n\n        var M = CMD.M;\n        var C = CMD.C;\n        var L = CMD.L;\n        var R = CMD.R;\n        var A = CMD.A;\n        var Q = CMD.Q;\n\n        for (i = 0, j = 0; i < data.length;) {\n            cmd = data[i++];\n            j = i;\n            nPoint = 0;\n\n            switch (cmd) {\n                case M:\n                    nPoint = 1;\n                    break;\n                case L:\n                    nPoint = 1;\n                    break;\n                case C:\n                    nPoint = 3;\n                    break;\n                case Q:\n                    nPoint = 2;\n                    break;\n                case A:\n                    var x = m[4];\n                    var y = m[5];\n                    var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n                    var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n                    var angle = mathAtan2(-m[1] / sy, m[0] / sx);\n                    // cx\n                    data[i] *= sx;\n                    data[i++] += x;\n                    // cy\n                    data[i] *= sy;\n                    data[i++] += y;\n                    // Scale rx and ry\n                    // FIXME Assume psi is 0 here\n                    data[i++] *= sx;\n                    data[i++] *= sy;\n\n                    // Start angle\n                    data[i++] += angle;\n                    // end angle\n                    data[i++] += angle;\n                    // FIXME psi\n                    i += 2;\n                    j = i;\n                    break;\n                case R:\n                    // x0, y0\n                    p[0] = data[i++];\n                    p[1] = data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n                    // x1, y1\n                    p[0] += data[i++];\n                    p[1] += data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n            }\n\n            for (k = 0; k < nPoint; k++) {\n                var p = points[k];\n                p[0] = data[i++];\n                p[1] = data[i++];\n\n                v2ApplyTransform(p, p, m);\n                // Write back\n                data[j++] = p[0];\n                data[j++] = p[1];\n            }\n        }\n    }\n\n    module.exports = transformPath;\n\n\n/***/ }),\n/* 802 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*!\n * ZRender, a high performance 2d drawing library.\n *\n * Copyright (c) 2013, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n */\n// Global defines\n\n    var guid = __webpack_require__(672);\n    var env = __webpack_require__(615);\n    var zrUtil = __webpack_require__(606);\n\n    var Handler = __webpack_require__(766);\n    var Storage = __webpack_require__(769);\n    var Animation = __webpack_require__(770);\n    var HandlerProxy = __webpack_require__(781);\n\n    var useVML = !env.canvasSupported;\n\n    var painterCtors = {\n        canvas: __webpack_require__(768)\n    };\n\n    var instances = {};    // ZRender实例map索引\n\n    var zrender = {};\n\n    /**\n     * @type {string}\n     */\n    zrender.version = '3.6.0';\n\n    /**\n     * Initializing a zrender instance\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @return {module:zrender/ZRender}\n     */\n    zrender.init = function (dom, opts) {\n        var zr = new ZRender(guid(), dom, opts);\n        instances[zr.id] = zr;\n        return zr;\n    };\n\n    /**\n     * Dispose zrender instance\n     * @param {module:zrender/ZRender} zr\n     */\n    zrender.dispose = function (zr) {\n        if (zr) {\n            zr.dispose();\n        }\n        else {\n            for (var key in instances) {\n                if (instances.hasOwnProperty(key)) {\n                    instances[key].dispose();\n                }\n            }\n            instances = {};\n        }\n\n        return zrender;\n    };\n\n    /**\n     * Get zrender instance by id\n     * @param {string} id zrender instance id\n     * @return {module:zrender/ZRender}\n     */\n    zrender.getInstance = function (id) {\n        return instances[id];\n    };\n\n    zrender.registerPainter = function (name, Ctor) {\n        painterCtors[name] = Ctor;\n    };\n\n    function delInstance(id) {\n        delete instances[id];\n    }\n\n    /**\n     * @module zrender/ZRender\n     */\n    /**\n     * @constructor\n     * @alias module:zrender/ZRender\n     * @param {string} id\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     */\n    var ZRender = function (id, dom, opts) {\n\n        opts = opts || {};\n\n        /**\n         * @type {HTMLDomElement}\n         */\n        this.dom = dom;\n\n        /**\n         * @type {string}\n         */\n        this.id = id;\n\n        var self = this;\n        var storage = new Storage();\n\n        var rendererType = opts.renderer;\n        // TODO WebGL\n        if (useVML) {\n            if (!painterCtors.vml) {\n                throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n            }\n            rendererType = 'vml';\n        }\n        else if (!rendererType || !painterCtors[rendererType]) {\n            rendererType = 'canvas';\n        }\n        var painter = new painterCtors[rendererType](dom, storage, opts);\n\n        this.storage = storage;\n        this.painter = painter;\n\n        var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n        this.handler = new Handler(storage, painter, handerProxy, painter.root);\n\n        /**\n         * @type {module:zrender/animation/Animation}\n         */\n        this.animation = new Animation({\n            stage: {\n                update: zrUtil.bind(this.flush, this)\n            }\n        });\n        this.animation.start();\n\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._needsRefresh;\n\n        // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n        // FIXME 有点ugly\n        var oldDelFromStorage = storage.delFromStorage;\n        var oldAddToStorage = storage.addToStorage;\n\n        storage.delFromStorage = function (el) {\n            oldDelFromStorage.call(storage, el);\n\n            el && el.removeSelfFromZr(self);\n        };\n\n        storage.addToStorage = function (el) {\n            oldAddToStorage.call(storage, el);\n\n            el.addSelfToZr(self);\n        };\n    };\n\n    ZRender.prototype = {\n\n        constructor: ZRender,\n        /**\n         * 获取实例唯一标识\n         * @return {string}\n         */\n        getId: function () {\n            return this.id;\n        },\n\n        /**\n         * 添加元素\n         * @param  {module:zrender/Element} el\n         */\n        add: function (el) {\n            this.storage.addRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * 删除元素\n         * @param  {module:zrender/Element} el\n         */\n        remove: function (el) {\n            this.storage.delRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Change configuration of layer\n         * @param {string} zLevel\n         * @param {Object} config\n         * @param {string} [config.clearColor=0] Clear color\n         * @param {string} [config.motionBlur=false] If enable motion blur\n         * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n        */\n        configLayer: function (zLevel, config) {\n            this.painter.configLayer(zLevel, config);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Repaint the canvas immediately\n         */\n        refreshImmediately: function () {\n            // var start = new Date();\n            // Clear needsRefresh ahead to avoid something wrong happens in refresh\n            // Or it will cause zrender refreshes again and again.\n            this._needsRefresh = false;\n            this.painter.refresh();\n            /**\n             * Avoid trigger zr.refresh in Element#beforeUpdate hook\n             */\n            this._needsRefresh = false;\n            // var end = new Date();\n\n            // var log = document.getElementById('log');\n            // if (log) {\n            //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n            // }\n        },\n\n        /**\n         * Mark and repaint the canvas in the next frame of browser\n         */\n        refresh: function() {\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Perform all refresh\n         */\n        flush: function () {\n            if (this._needsRefresh) {\n                this.refreshImmediately();\n            }\n            if (this._needsRefreshHover) {\n                this.refreshHoverImmediately();\n            }\n        },\n\n        /**\n         * Add element to hover layer\n         * @param  {module:zrender/Element} el\n         * @param {Object} style\n         */\n        addHover: function (el, style) {\n            if (this.painter.addHover) {\n                this.painter.addHover(el, style);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Add element from hover layer\n         * @param  {module:zrender/Element} el\n         */\n        removeHover: function (el) {\n            if (this.painter.removeHover) {\n                this.painter.removeHover(el);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Clear all hover elements in hover layer\n         * @param  {module:zrender/Element} el\n         */\n        clearHover: function () {\n            if (this.painter.clearHover) {\n                this.painter.clearHover();\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Refresh hover in next frame\n         */\n        refreshHover: function () {\n            this._needsRefreshHover = true;\n        },\n\n        /**\n         * Refresh hover immediately\n         */\n        refreshHoverImmediately: function () {\n            this._needsRefreshHover = false;\n            this.painter.refreshHover && this.painter.refreshHover();\n        },\n\n        /**\n         * Resize the canvas.\n         * Should be invoked when container size is changed\n         * @param {Object} [opts]\n         * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n         * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n         */\n        resize: function(opts) {\n            opts = opts || {};\n            this.painter.resize(opts.width, opts.height);\n            this.handler.resize();\n        },\n\n        /**\n         * Stop and clear all animation immediately\n         */\n        clearAnimation: function () {\n            this.animation.clear();\n        },\n\n        /**\n         * Get container width\n         */\n        getWidth: function() {\n            return this.painter.getWidth();\n        },\n\n        /**\n         * Get container height\n         */\n        getHeight: function() {\n            return this.painter.getHeight();\n        },\n\n        /**\n         * Export the canvas as Base64 URL\n         * @param {string} type\n         * @param {string} [backgroundColor='#fff']\n         * @return {string} Base64 URL\n         */\n        // toDataURL: function(type, backgroundColor) {\n        //     return this.painter.getRenderedCanvas({\n        //         backgroundColor: backgroundColor\n        //     }).toDataURL(type);\n        // },\n\n        /**\n         * Converting a path to image.\n         * It has much better performance of drawing image rather than drawing a vector path.\n         * @param {module:zrender/graphic/Path} e\n         * @param {number} width\n         * @param {number} height\n         */\n        pathToImage: function(e, dpr) {\n            return this.painter.pathToImage(e, dpr);\n        },\n\n        /**\n         * Set default cursor\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            this.handler.setCursorStyle(cursorStyle);\n        },\n\n        /**\n         * Find hovered element\n         * @param {number} x\n         * @param {number} y\n         * @return {Object} {target, topTarget}\n         */\n        findHover: function (x, y) {\n            return this.handler.findHover(x, y);\n        },\n\n        /**\n         * Bind event\n         *\n         * @param {string} eventName Event name\n         * @param {Function} eventHandler Handler function\n         * @param {Object} [context] Context object\n         */\n        on: function(eventName, eventHandler, context) {\n            this.handler.on(eventName, eventHandler, context);\n        },\n\n        /**\n         * Unbind event\n         * @param {string} eventName Event name\n         * @param {Function} [eventHandler] Handler function\n         */\n        off: function(eventName, eventHandler) {\n            this.handler.off(eventName, eventHandler);\n        },\n\n        /**\n         * Trigger event manually\n         *\n         * @param {string} eventName Event name\n         * @param {event=} event Event object\n         */\n        trigger: function (eventName, event) {\n            this.handler.trigger(eventName, event);\n        },\n\n\n        /**\n         * Clear all objects and the canvas.\n         */\n        clear: function () {\n            this.storage.delRoot();\n            this.painter.clear();\n        },\n\n        /**\n         * Dispose self.\n         */\n        dispose: function () {\n            this.animation.stop();\n\n            this.clear();\n            this.storage.dispose();\n            this.painter.dispose();\n            this.handler.dispose();\n\n            this.animation =\n            this.storage =\n            this.painter =\n            this.handler = null;\n\n            delInstance(this.id);\n        }\n    };\n\n    module.exports = zrender;\n\n\n\n/***/ }),\n/* 803 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(76);\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (new __WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */]({\n  name: 'bus'\n}));\n\n/***/ }),\n/* 804 */,\n/* 805 */,\n/* 806 */,\n/* 807 */,\n/* 808 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var echarts = __webpack_require__(607);\n    var zrUtil = __webpack_require__(606);\n    module.exports = function (seriesType, actionInfos) {\n        zrUtil.each(actionInfos, function (actionInfo) {\n            actionInfo.update = 'updateView';\n            /**\n             * @payload\n             * @property {string} seriesName\n             * @property {string} name\n             */\n            echarts.registerAction(actionInfo, function (payload, ecModel) {\n                var selected = {};\n                ecModel.eachComponent(\n                    {mainType: 'series', subType: seriesType, query: payload},\n                    function (seriesModel) {\n                        if (seriesModel[actionInfo.method]) {\n                            seriesModel[actionInfo.method](\n                                payload.name,\n                                payload.dataIndex\n                            );\n                        }\n                        var data = seriesModel.getData();\n                        // Create selected map\n                        data.each(function (idx) {\n                            var name = data.getName(idx);\n                            selected[name] = seriesModel.isSelected(name)\n                                || false;\n                        });\n                    }\n                );\n                return {\n                    name: payload.name,\n                    selected: selected\n                };\n            });\n        });\n    };\n\n\n/***/ }),\n/* 809 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(606);\n\n    __webpack_require__(685);\n\n    __webpack_require__(810);\n    __webpack_require__(811);\n\n    var barLayoutGrid = __webpack_require__(835);\n    var echarts = __webpack_require__(607);\n\n    echarts.registerLayout(zrUtil.curry(barLayoutGrid, 'bar'));\n\n    // Visual coding for legend\n    echarts.registerVisual(function (ecModel) {\n        ecModel.eachSeriesByType('bar', function (seriesModel) {\n            var data = seriesModel.getData();\n            data.setVisual('legendSymbol', 'roundRect');\n        });\n    });\n\n    // In case developer forget to include grid component\n    __webpack_require__(683);\n\n\n/***/ }),\n/* 810 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    module.exports = __webpack_require__(812).extend({\n\n        type: 'series.bar',\n\n        dependencies: ['grid', 'polar'],\n\n        brushSelector: 'rect'\n    });\n\n\n/***/ }),\n/* 811 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var graphic = __webpack_require__(608);\n    var helper = __webpack_require__(814);\n\n    var BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'normal', 'barBorderWidth'];\n\n    // FIXME\n    // Just for compatible with ec2.\n    zrUtil.extend(__webpack_require__(614).prototype, __webpack_require__(813));\n\n    var BarView = __webpack_require__(607).extendChartView({\n\n        type: 'bar',\n\n        render: function (seriesModel, ecModel, api) {\n            var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n            if (coordinateSystemType === 'cartesian2d'\n                || coordinateSystemType === 'polar'\n            ) {\n                this._render(seriesModel, ecModel, api);\n            }\n            else if (__DEV__) {\n                console.warn('Only cartesian2d and polar supported for bar.');\n            }\n\n            return this.group;\n        },\n\n        dispose: zrUtil.noop,\n\n        _render: function (seriesModel, ecModel, api) {\n            var group = this.group;\n            var data = seriesModel.getData();\n            var oldData = this._data;\n\n            var coord = seriesModel.coordinateSystem;\n            var baseAxis = coord.getBaseAxis();\n            var isHorizontalOrRadial;\n\n            if (coord.type === 'cartesian2d') {\n                isHorizontalOrRadial = baseAxis.isHorizontal();\n            }\n            else if (coord.type === 'polar') {\n                isHorizontalOrRadial = baseAxis.dim === 'angle';\n            }\n\n            var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n\n            data.diff(oldData)\n                .add(function (dataIndex) {\n                    if (!data.hasValue(dataIndex)) {\n                        return;\n                    }\n\n                    var itemModel = data.getItemModel(dataIndex);\n                    var layout = getLayout[coord.type](data, dataIndex, itemModel);\n                    var el = elementCreator[coord.type](\n                        data, dataIndex, itemModel, layout, isHorizontalOrRadial, animationModel\n                    );\n                    data.setItemGraphicEl(dataIndex, el);\n                    group.add(el);\n\n                    updateStyle(\n                        el, data, dataIndex, itemModel, layout,\n                        seriesModel, isHorizontalOrRadial, coord.type === 'polar'\n                    );\n                })\n                .update(function (newIndex, oldIndex) {\n                    var el = oldData.getItemGraphicEl(oldIndex);\n\n                    if (!data.hasValue(newIndex)) {\n                        group.remove(el);\n                        return;\n                    }\n\n                    var itemModel = data.getItemModel(newIndex);\n                    var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n                    if (el) {\n                        graphic.updateProps(el, {shape: layout}, animationModel, newIndex);\n                    }\n                    else {\n                        el = elementCreator[coord.type](\n                            data, newIndex, itemModel, layout, isHorizontalOrRadial, animationModel, true\n                        );\n                    }\n\n                    data.setItemGraphicEl(newIndex, el);\n                    // Add back\n                    group.add(el);\n\n                    updateStyle(\n                        el, data, newIndex, itemModel, layout,\n                        seriesModel, isHorizontalOrRadial, coord.type === 'polar'\n                    );\n                })\n                .remove(function (dataIndex) {\n                    var el = oldData.getItemGraphicEl(dataIndex);\n                    if (coord.type === 'cartesian2d') {\n                        el && removeRect(dataIndex, animationModel, el);\n                    }\n                    else {\n                        el && removeSector(dataIndex, animationModel, el);\n                    }\n                })\n                .execute();\n\n            this._data = data;\n        },\n\n        remove: function (ecModel, api) {\n            var group = this.group;\n            var data = this._data;\n            if (ecModel.get('animation')) {\n                if (data) {\n                    data.eachItemGraphicEl(function (el) {\n                        if (el.type === 'sector') {\n                            removeSector(el.dataIndex, ecModel, el);\n                        }\n                        else {\n                            removeRect(el.dataIndex, ecModel, el);\n                        }\n                    });\n                }\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    });\n\n    var elementCreator = {\n\n        cartesian2d: function (\n            data, dataIndex, itemModel, layout, isHorizontal,\n            animationModel, isUpdate\n        ) {\n            var rect = new graphic.Rect({shape: zrUtil.extend({}, layout)});\n\n            // Animation\n            if (animationModel) {\n                var rectShape = rect.shape;\n                var animateProperty = isHorizontal ? 'height' : 'width';\n                var animateTarget = {};\n                rectShape[animateProperty] = 0;\n                animateTarget[animateProperty] = layout[animateProperty];\n                graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n                    shape: animateTarget\n                }, animationModel, dataIndex);\n            }\n\n            return rect;\n        },\n\n        polar: function (\n            data, dataIndex, itemModel, layout, isRadial,\n            animationModel, isUpdate\n        ) {\n            var sector = new graphic.Sector({shape: zrUtil.extend({}, layout)});\n\n            // Animation\n            if (animationModel) {\n                var sectorShape = sector.shape;\n                var animateProperty = isRadial ? 'r' : 'endAngle';\n                var animateTarget = {};\n                sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n                animateTarget[animateProperty] = layout[animateProperty];\n                graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n                    shape: animateTarget\n                }, animationModel, dataIndex);\n            }\n\n            return sector;\n        }\n    };\n\n    function removeRect(dataIndex, animationModel, el) {\n        // Not show text when animating\n        el.style.text = null;\n        graphic.updateProps(el, {\n            shape: {\n                width: 0\n            }\n        }, animationModel, dataIndex, function () {\n            el.parent && el.parent.remove(el);\n        });\n    }\n\n    function removeSector(dataIndex, animationModel, el) {\n        // Not show text when animating\n        el.style.text = null;\n        graphic.updateProps(el, {\n            shape: {\n                r: el.shape.r0\n            }\n        }, animationModel, dataIndex, function () {\n            el.parent && el.parent.remove(el);\n        });\n    }\n\n    var getLayout = {\n        cartesian2d: function (data, dataIndex, itemModel) {\n            var layout = data.getItemLayout(dataIndex);\n            var fixedLineWidth = getLineWidth(itemModel, layout);\n\n            // fix layout with lineWidth\n            var signX = layout.width > 0 ? 1 : -1;\n            var signY = layout.height > 0 ? 1 : -1;\n            return {\n                x: layout.x + signX * fixedLineWidth / 2,\n                y: layout.y + signY * fixedLineWidth / 2,\n                width: layout.width - signX * fixedLineWidth,\n                height: layout.height - signY * fixedLineWidth\n            };\n        },\n\n        polar: function (data, dataIndex, itemModel) {\n            var layout = data.getItemLayout(dataIndex);\n            return {\n                cx: layout.cx,\n                cy: layout.cy,\n                r0: layout.r0,\n                r: layout.r,\n                startAngle: layout.startAngle,\n                endAngle: layout.endAngle\n            };\n        }\n    };\n\n    function updateStyle(\n        el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar\n    ) {\n        var color = data.getItemVisual(dataIndex, 'color');\n        var opacity = data.getItemVisual(dataIndex, 'opacity');\n        var itemStyleModel = itemModel.getModel('itemStyle.normal');\n        var hoverStyle = itemModel.getModel('itemStyle.emphasis').getBarItemStyle();\n\n        if (!isPolar) {\n            el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n        }\n\n        el.useStyle(zrUtil.defaults(\n            {\n                fill: color,\n                opacity: opacity\n            },\n            itemStyleModel.getBarItemStyle()\n        ));\n\n        var cursorStyle = itemModel.getShallow('cursor');\n        cursorStyle && el.attr('cursor', cursorStyle);\n\n        var labelPositionOutside = isHorizontal\n            ? (layout.height > 0 ? 'bottom' : 'top')\n            : (layout.width > 0 ? 'left' : 'right');\n\n        if (!isPolar) {\n            helper.setLabel(\n                el.style, hoverStyle, itemModel, color,\n                seriesModel, dataIndex, labelPositionOutside\n            );\n        }\n\n        graphic.setHoverStyle(el, hoverStyle);\n    }\n\n    // In case width or height are too small.\n    function getLineWidth(itemModel, rawLayout) {\n        var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n        return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n    }\n\n    module.exports = BarView;\n\n\n/***/ }),\n/* 812 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var SeriesModel = __webpack_require__(640);\n    var createListFromArray = __webpack_require__(648);\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.__base_bar__',\n\n        getInitialData: function (option, ecModel) {\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        getMarkerPosition: function (value) {\n            var coordSys = this.coordinateSystem;\n            if (coordSys) {\n                // PENDING if clamp ?\n                var pt = coordSys.dataToPoint(value, true);\n                var data = this.getData();\n                var offset = data.getLayout('offset');\n                var size = data.getLayout('size');\n                var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n                pt[offsetIndex] += offset + size / 2;\n                return pt;\n            }\n            return [NaN, NaN];\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n            // stack: null\n\n            // Cartesian coordinate system\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // 最小高度改为0\n            barMinHeight: 0,\n            // 最小角度为0，仅对极坐标系下的柱状图有效\n            barMinAngle: 0,\n            // cursor: null,\n\n            // barMaxWidth: null,\n            // 默认自适应\n            // barWidth: null,\n            // 柱间距离，默认为柱形宽度的30%，可设固定值\n            // barGap: '30%',\n            // 类目间柱形距离，默认为类目间距的20%，可设固定值\n            // barCategoryGap: '20%',\n            // label: {\n            //     normal: {\n            //         show: false\n            //     }\n            // },\n            itemStyle: {\n                normal: {\n                    // color: '各异'\n                },\n                emphasis: {}\n            }\n        }\n    });\n\n\n/***/ }),\n/* 813 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n\n    var getBarItemStyle = __webpack_require__(637)(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            // Compatitable with 2\n            ['stroke', 'barBorderColor'],\n            ['lineWidth', 'barBorderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getBarItemStyle: function (excludes) {\n            var style = getBarItemStyle.call(this, excludes);\n            if (this.getBorderLineDash) {\n                var lineDash = this.getBorderLineDash();\n                lineDash && (style.lineDash = lineDash);\n            }\n            return style;\n        }\n    };\n\n\n/***/ }),\n/* 814 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var graphic = __webpack_require__(608);\n\n    var helper = {};\n\n    helper.setLabel = function (\n        normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside\n    ) {\n        var labelModel = itemModel.getModel('label.normal');\n        var hoverLabelModel = itemModel.getModel('label.emphasis');\n\n        if (labelModel.get('show')) {\n            setLabel(\n                normalStyle, labelModel, color,\n                zrUtil.retrieve2(\n                    seriesModel.getFormattedLabel(dataIndex, 'normal'),\n                    seriesModel.getRawValue(dataIndex)\n                ),\n                labelPositionOutside\n            );\n        }\n        else {\n            normalStyle.text = null;\n        }\n\n        if (hoverLabelModel.get('show')) {\n            setLabel(\n                hoverStyle, hoverLabelModel, false,\n                seriesModel.getFormattedLabel(dataIndex, 'emphasis'),\n                labelPositionOutside\n            );\n        }\n        else {\n            hoverStyle.text = null;\n        }\n    };\n\n    function setLabel(style, model, defaultColor, labelText, labelPositionOutside) {\n        graphic.setText(style, model, defaultColor);\n        style.text = labelText;\n        if (style.textPosition === 'outside') {\n            style.textPosition = labelPositionOutside;\n        }\n    }\n\n    module.exports = helper;\n\n\n/***/ }),\n/* 815 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var echarts = __webpack_require__(607);\n\n    __webpack_require__(816);\n    __webpack_require__(817);\n\n    echarts.registerVisual(zrUtil.curry(__webpack_require__(687), 'funnel'));\n    echarts.registerLayout(__webpack_require__(818));\n\n    echarts.registerProcessor(zrUtil.curry(__webpack_require__(686), 'funnel'));\n\n\n/***/ }),\n/* 816 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var List = __webpack_require__(630);\n    var modelUtil = __webpack_require__(609);\n    var completeDimensions = __webpack_require__(631);\n\n    var FunnelSeries = __webpack_require__(607).extendSeriesModel({\n\n        type: 'series.funnel',\n\n        init: function (option) {\n            FunnelSeries.superApply(this, 'init', arguments);\n\n            // Enable legend selection for each data item\n            // Use a function instead of direct access because data reference may changed\n            this.legendDataProvider = function () {\n                return this.getRawData();\n            };\n            // Extend labelLine emphasis\n            this._defaultLabelLine(option);\n        },\n\n        getInitialData: function (option, ecModel) {\n            var dimensions = completeDimensions(['value'], option.data);\n            var list = new List(dimensions, this);\n            list.initData(option.data);\n            return list;\n        },\n\n        _defaultLabelLine: function (option) {\n            // Extend labelLine emphasis\n            modelUtil.defaultEmphasis(option.labelLine, ['show']);\n\n            var labelLineNormalOpt = option.labelLine.normal;\n            var labelLineEmphasisOpt = option.labelLine.emphasis;\n            // Not show label line if `label.normal.show = false`\n            labelLineNormalOpt.show = labelLineNormalOpt.show\n                && option.label.normal.show;\n            labelLineEmphasisOpt.show = labelLineEmphasisOpt.show\n                && option.label.emphasis.show;\n        },\n\n        // Overwrite\n        getDataParams: function (dataIndex) {\n            var data = this.getData();\n            var params = FunnelSeries.superCall(this, 'getDataParams', dataIndex);\n            var sum = data.getSum('value');\n            // Percent is 0 if sum is 0\n            params.percent = !sum ? 0 : +(data.get('value', dataIndex) / sum * 100).toFixed(2);\n\n            params.$vars.push('percent');\n            return params;\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            legendHoverLink: true,\n            left: 80,\n            top: 60,\n            right: 80,\n            bottom: 60,\n            // width: {totalWidth} - left - right,\n            // height: {totalHeight} - top - bottom,\n\n            // 默认取数据最小最大值\n            // min: 0,\n            // max: 100,\n            minSize: '0%',\n            maxSize: '100%',\n            sort: 'descending', // 'ascending', 'descending'\n            gap: 0,\n            funnelAlign: 'center',\n            label: {\n                normal: {\n                    show: true,\n                    position: 'outer'\n                    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n                },\n                emphasis: {\n                    show: true\n                }\n            },\n            labelLine: {\n                normal: {\n                    show: true,\n                    length: 20,\n                    lineStyle: {\n                        // color: 各异,\n                        width: 1,\n                        type: 'solid'\n                    }\n                },\n                emphasis: {}\n            },\n            itemStyle: {\n                normal: {\n                    // color: 各异,\n                    borderColor: '#fff',\n                    borderWidth: 1\n                },\n                emphasis: {\n                    // color: 各异,\n                }\n            }\n        }\n    });\n\n    module.exports = FunnelSeries;\n\n\n\n/***/ }),\n/* 817 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var graphic = __webpack_require__(608);\n    var zrUtil = __webpack_require__(606);\n\n    /**\n     * Piece of pie including Sector, Label, LabelLine\n     * @constructor\n     * @extends {module:zrender/graphic/Group}\n     */\n    function FunnelPiece(data, idx) {\n\n        graphic.Group.call(this);\n\n        var polygon = new graphic.Polygon();\n        var labelLine = new graphic.Polyline();\n        var text = new graphic.Text();\n        this.add(polygon);\n        this.add(labelLine);\n        this.add(text);\n\n        this.updateData(data, idx, true);\n\n        // Hover to change label and labelLine\n        function onEmphasis() {\n            labelLine.ignore = labelLine.hoverIgnore;\n            text.ignore = text.hoverIgnore;\n        }\n        function onNormal() {\n            labelLine.ignore = labelLine.normalIgnore;\n            text.ignore = text.normalIgnore;\n        }\n        this.on('emphasis', onEmphasis)\n            .on('normal', onNormal)\n            .on('mouseover', onEmphasis)\n            .on('mouseout', onNormal);\n    }\n\n    var funnelPieceProto = FunnelPiece.prototype;\n\n    var opacityAccessPath = ['itemStyle', 'normal', 'opacity'];\n    funnelPieceProto.updateData = function (data, idx, firstCreate) {\n\n        var polygon = this.childAt(0);\n\n        var seriesModel = data.hostModel;\n        var itemModel = data.getItemModel(idx);\n        var layout = data.getItemLayout(idx);\n        var opacity = data.getItemModel(idx).get(opacityAccessPath);\n        opacity = opacity == null ? 1 : opacity;\n\n        // Reset style\n        polygon.useStyle({});\n\n        if (firstCreate) {\n            polygon.setShape({\n                points: layout.points\n            });\n            polygon.setStyle({ opacity : 0 });\n            graphic.initProps(polygon, {\n                style: {\n                    opacity: opacity\n                }\n            }, seriesModel, idx);\n        }\n        else {\n            graphic.updateProps(polygon, {\n                style: {\n                    opacity: opacity\n                },\n                shape: {\n                    points: layout.points\n                }\n            }, seriesModel, idx);\n        }\n\n        // Update common style\n        var itemStyleModel = itemModel.getModel('itemStyle');\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        polygon.setStyle(\n            zrUtil.defaults(\n                {\n                    lineJoin: 'round',\n                    fill: visualColor\n                },\n                itemStyleModel.getModel('normal').getItemStyle(['opacity'])\n            )\n        );\n        polygon.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n\n        this._updateLabel(data, idx);\n\n        graphic.setHoverStyle(this);\n    };\n\n    funnelPieceProto._updateLabel = function (data, idx) {\n\n        var labelLine = this.childAt(1);\n        var labelText = this.childAt(2);\n\n        var seriesModel = data.hostModel;\n        var itemModel = data.getItemModel(idx);\n        var layout = data.getItemLayout(idx);\n        var labelLayout = layout.label;\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        graphic.updateProps(labelLine, {\n            shape: {\n                points: labelLayout.linePoints || labelLayout.linePoints\n            }\n        }, seriesModel, idx);\n\n        graphic.updateProps(labelText, {\n            style: {\n                x: labelLayout.x,\n                y: labelLayout.y\n            }\n        }, seriesModel, idx);\n        labelText.attr({\n            rotation: labelLayout.rotation,\n            origin: [labelLayout.x, labelLayout.y],\n            z2: 10\n        });\n\n        var labelModel = itemModel.getModel('label.normal');\n        var labelHoverModel = itemModel.getModel('label.emphasis');\n        var labelLineModel = itemModel.getModel('labelLine.normal');\n        var labelLineHoverModel = itemModel.getModel('labelLine.emphasis');\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        graphic.setTextStyle(labelText.style, labelModel, {\n            textAlign: labelLayout.textAlign,\n            textVerticalAlign: labelLayout.verticalAlign,\n            text: zrUtil.retrieve(data.hostModel.getFormattedLabel(idx, 'normal'), data.getName(idx))\n        }, {\n            defaultTextColor: visualColor,\n            autoColor: visualColor,\n            checkInside: function (model, opt) {\n                return labelLayout.inside;\n            }\n        });\n\n        labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n        labelText.hoverIgnore = !labelHoverModel.get('show');\n\n        labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n        labelLine.hoverIgnore = !labelLineHoverModel.get('show');\n\n        // Default use item visual color\n        labelLine.setStyle({\n            stroke: visualColor\n        });\n        labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n\n        labelText.hoverStyle = graphic.setTextStyle({}, labelHoverModel, {\n            text: data.hostModel.getFormattedLabel(idx, 'emphasis')\n        }, {forMerge: true});\n\n        labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n    };\n\n    zrUtil.inherits(FunnelPiece, graphic.Group);\n\n\n    var Funnel = __webpack_require__(641).extend({\n\n        type: 'funnel',\n\n        render: function (seriesModel, ecModel, api) {\n            var data = seriesModel.getData();\n            var oldData = this._data;\n\n            var group = this.group;\n\n            data.diff(oldData)\n                .add(function (idx) {\n                    var funnelPiece = new FunnelPiece(data, idx);\n\n                    data.setItemGraphicEl(idx, funnelPiece);\n\n                    group.add(funnelPiece);\n                })\n                .update(function (newIdx, oldIdx) {\n                    var piePiece = oldData.getItemGraphicEl(oldIdx);\n\n                    piePiece.updateData(data, newIdx);\n\n                    group.add(piePiece);\n                    data.setItemGraphicEl(newIdx, piePiece);\n                })\n                .remove(function (idx) {\n                    var piePiece = oldData.getItemGraphicEl(idx);\n                    group.remove(piePiece);\n                })\n                .execute();\n\n            this._data = data;\n        },\n\n        remove: function () {\n            this.group.removeAll();\n            this._data = null;\n        },\n\n        dispose: function () {}\n    });\n\n    module.exports = Funnel;\n\n\n/***/ }),\n/* 818 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var layout = __webpack_require__(619);\n    var number = __webpack_require__(610);\n\n    var parsePercent = number.parsePercent;\n\n    function getViewRect(seriesModel, api) {\n        return layout.getLayoutRect(\n            seriesModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            }\n        );\n    }\n\n    function getSortedIndices(data, sort) {\n        var valueArr = data.mapArray('value', function (val) {\n            return val;\n        });\n        var indices = [];\n        var isAscending = sort === 'ascending';\n        for (var i = 0, len = data.count(); i < len; i++) {\n            indices[i] = i;\n        }\n\n        // Add custom sortable function & none sortable opetion by \"options.sort\"\n        if (typeof sort === 'function') {\n            indices.sort(sort);\n        } else if (sort !== 'none') {\n            indices.sort(function (a, b) {\n                return isAscending ? valueArr[a] - valueArr[b] : valueArr[b] - valueArr[a];\n            });\n        }\n        return indices;\n    }\n\n    function labelLayout(data) {\n        data.each(function (idx) {\n            var itemModel = data.getItemModel(idx);\n            var labelModel = itemModel.getModel('label.normal');\n            var labelPosition = labelModel.get('position');\n\n            var labelLineModel = itemModel.getModel('labelLine.normal');\n\n            var layout = data.getItemLayout(idx);\n            var points = layout.points;\n\n            var isLabelInside = labelPosition === 'inner'\n                || labelPosition === 'inside' || labelPosition === 'center';\n\n            var textAlign;\n            var textX;\n            var textY;\n            var linePoints;\n\n            if (isLabelInside) {\n                textX = (points[0][0] + points[1][0] + points[2][0] + points[3][0]) / 4;\n                textY = (points[0][1] + points[1][1] + points[2][1] + points[3][1]) / 4;\n                textAlign = 'center';\n                linePoints = [\n                    [textX, textY], [textX, textY]\n                ];\n            }\n            else {\n                var x1;\n                var y1;\n                var x2;\n                var labelLineLen = labelLineModel.get('length');\n                if (labelPosition === 'left') {\n                    // Left side\n                    x1 = (points[3][0] + points[0][0]) / 2;\n                    y1 = (points[3][1] + points[0][1]) / 2;\n                    x2 = x1 - labelLineLen;\n                    textX = x2 - 5;\n                    textAlign = 'right';\n                }\n                else {\n                    // Right side\n                    x1 = (points[1][0] + points[2][0]) / 2;\n                    y1 = (points[1][1] + points[2][1]) / 2;\n                    x2 = x1 + labelLineLen;\n                    textX = x2 + 5;\n                    textAlign = 'left';\n                }\n                var y2 = y1;\n\n                linePoints = [[x1, y1], [x2, y2]];\n                textY = y2;\n            }\n\n            layout.label = {\n                linePoints: linePoints,\n                x: textX,\n                y: textY,\n                verticalAlign: 'middle',\n                textAlign: textAlign,\n                inside: isLabelInside\n            };\n        });\n    }\n\n    module.exports = function (ecModel, api, payload) {\n        ecModel.eachSeriesByType('funnel', function (seriesModel) {\n            var data = seriesModel.getData();\n            var sort = seriesModel.get('sort');\n            var viewRect = getViewRect(seriesModel, api);\n            var indices = getSortedIndices(data, sort);\n\n            var sizeExtent = [\n                parsePercent(seriesModel.get('minSize'), viewRect.width),\n                parsePercent(seriesModel.get('maxSize'), viewRect.width)\n            ];\n            var dataExtent = data.getDataExtent('value');\n            var min = seriesModel.get('min');\n            var max = seriesModel.get('max');\n            if (min == null) {\n                min = Math.min(dataExtent[0], 0);\n            }\n            if (max == null) {\n                max = dataExtent[1];\n            }\n\n            var funnelAlign = seriesModel.get('funnelAlign');\n            var gap = seriesModel.get('gap');\n            var itemHeight = (viewRect.height - gap * (data.count() - 1)) / data.count();\n\n            var y = viewRect.y;\n\n            var getLinePoints = function (idx, offY) {\n                // End point index is data.count() and we assign it 0\n                var val = data.get('value', idx) || 0;\n                var itemWidth = number.linearMap(val, [min, max], sizeExtent, true);\n                var x0;\n                switch (funnelAlign) {\n                    case 'left':\n                        x0 = viewRect.x;\n                        break;\n                    case 'center':\n                        x0 = viewRect.x + (viewRect.width - itemWidth) / 2;\n                        break;\n                    case 'right':\n                        x0 = viewRect.x + viewRect.width - itemWidth;\n                        break;\n                }\n                return [\n                    [x0, offY],\n                    [x0 + itemWidth, offY]\n                ];\n            };\n\n            if (sort === 'ascending') {\n                // From bottom to top\n                itemHeight = -itemHeight;\n                gap = -gap;\n                y += viewRect.height;\n                indices = indices.reverse();\n            }\n\n            for (var i = 0; i < indices.length; i++) {\n                var idx = indices[i];\n                var nextIdx = indices[i + 1];\n                var start = getLinePoints(idx, y);\n                var end = getLinePoints(nextIdx, y + itemHeight);\n\n                y += itemHeight + gap;\n\n                data.setItemLayout(idx, {\n                    points: start.concat(end.slice().reverse())\n                });\n            }\n\n            labelLayout(data);\n        });\n    };\n\n\n\n/***/ }),\n/* 819 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var echarts = __webpack_require__(607);\n\n    __webpack_require__(820);\n    __webpack_require__(821);\n\n    __webpack_require__(808)('pie', [{\n        type: 'pieToggleSelect',\n        event: 'pieselectchanged',\n        method: 'toggleSelected'\n    }, {\n        type: 'pieSelect',\n        event: 'pieselected',\n        method: 'select'\n    }, {\n        type: 'pieUnSelect',\n        event: 'pieunselected',\n        method: 'unSelect'\n    }]);\n\n    echarts.registerVisual(zrUtil.curry(__webpack_require__(687), 'pie'));\n\n    echarts.registerLayout(zrUtil.curry(\n        __webpack_require__(823), 'pie'\n    ));\n\n    echarts.registerProcessor(zrUtil.curry(__webpack_require__(686), 'pie'));\n\n\n/***/ }),\n/* 820 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var List = __webpack_require__(630);\n    var zrUtil = __webpack_require__(606);\n    var modelUtil = __webpack_require__(609);\n    var numberUtil = __webpack_require__(610);\n    var completeDimensions = __webpack_require__(631);\n\n    var dataSelectableMixin = __webpack_require__(829);\n\n    var PieSeries = __webpack_require__(607).extendSeriesModel({\n\n        type: 'series.pie',\n\n        // Overwrite\n        init: function (option) {\n            PieSeries.superApply(this, 'init', arguments);\n\n            // Enable legend selection for each data item\n            // Use a function instead of direct access because data reference may changed\n            this.legendDataProvider = function () {\n                return this.getRawData();\n            };\n\n            this.updateSelectedMap(option.data);\n\n            this._defaultLabelLine(option);\n        },\n\n        // Overwrite\n        mergeOption: function (newOption) {\n            PieSeries.superCall(this, 'mergeOption', newOption);\n            this.updateSelectedMap(this.option.data);\n        },\n\n        getInitialData: function (option, ecModel) {\n            var dimensions = completeDimensions(['value'], option.data);\n            var list = new List(dimensions, this);\n            list.initData(option.data);\n            return list;\n        },\n\n        // Overwrite\n        getDataParams: function (dataIndex) {\n            var data = this.getData();\n            var params = PieSeries.superCall(this, 'getDataParams', dataIndex);\n            // FIXME toFixed?\n\n            var valueList = [];\n            data.each('value', function (value) {\n                valueList.push(value);\n            });\n\n            params.percent = numberUtil.getPercentWithPrecision(\n                valueList,\n                dataIndex,\n                data.hostModel.get('percentPrecision')\n            );\n\n            params.$vars.push('percent');\n            return params;\n        },\n\n        _defaultLabelLine: function (option) {\n            // Extend labelLine emphasis\n            modelUtil.defaultEmphasis(option.labelLine, ['show']);\n\n            var labelLineNormalOpt = option.labelLine.normal;\n            var labelLineEmphasisOpt = option.labelLine.emphasis;\n            // Not show label line if `label.normal.show = false`\n            labelLineNormalOpt.show = labelLineNormalOpt.show\n                && option.label.normal.show;\n            labelLineEmphasisOpt.show = labelLineEmphasisOpt.show\n                && option.label.emphasis.show;\n        },\n\n        defaultOption: {\n            zlevel: 0,\n            z: 2,\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // 默认全局居中\n            center: ['50%', '50%'],\n            radius: [0, '75%'],\n            // 默认顺时针\n            clockwise: true,\n            startAngle: 90,\n            // 最小角度改为0\n            minAngle: 0,\n            // 选中是扇区偏移量\n            selectedOffset: 10,\n\n            // If use strategy to avoid label overlapping\n            avoidLabelOverlap: true,\n            // 选择模式，默认关闭，可选single，multiple\n            // selectedMode: false,\n            // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n            // roseType: null,\n\n            percentPrecision: 2,\n\n            // If still show when all data zero.\n            stillShowZeroSum: true,\n\n            // cursor: null,\n\n            label: {\n                normal: {\n                    // If rotate around circle\n                    rotate: false,\n                    show: true,\n                    // 'outer', 'inside', 'center'\n                    position: 'outer'\n                    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n                    // 默认使用全局文本样式，详见TEXTSTYLE\n                    // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n                },\n                emphasis: {}\n            },\n            // Enabled when label.normal.position is 'outer'\n            labelLine: {\n                normal: {\n                    show: true,\n                    // 引导线两段中的第一段长度\n                    length: 15,\n                    // 引导线两段中的第二段长度\n                    length2: 15,\n                    smooth: false,\n                    lineStyle: {\n                        // color: 各异,\n                        width: 1,\n                        type: 'solid'\n                    }\n                }\n            },\n            itemStyle: {\n                normal: {\n                    borderWidth: 1\n                },\n                emphasis: {}\n            },\n\n            // Animation type canbe expansion, scale\n            animationType: 'expansion',\n\n            animationEasing: 'cubicOut',\n\n            data: []\n        }\n    });\n\n    zrUtil.mixin(PieSeries, dataSelectableMixin);\n\n    module.exports = PieSeries;\n\n\n/***/ }),\n/* 821 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var graphic = __webpack_require__(608);\n    var zrUtil = __webpack_require__(606);\n\n    /**\n     * @param {module:echarts/model/Series} seriesModel\n     * @param {boolean} hasAnimation\n     * @inner\n     */\n    function updateDataSelected(uid, seriesModel, hasAnimation, api) {\n        var data = seriesModel.getData();\n        var dataIndex = this.dataIndex;\n        var name = data.getName(dataIndex);\n        var selectedOffset = seriesModel.get('selectedOffset');\n\n        api.dispatchAction({\n            type: 'pieToggleSelect',\n            from: uid,\n            name: name,\n            seriesId: seriesModel.id\n        });\n\n        data.each(function (idx) {\n            toggleItemSelected(\n                data.getItemGraphicEl(idx),\n                data.getItemLayout(idx),\n                seriesModel.isSelected(data.getName(idx)),\n                selectedOffset,\n                hasAnimation\n            );\n        });\n    }\n\n    /**\n     * @param {module:zrender/graphic/Sector} el\n     * @param {Object} layout\n     * @param {boolean} isSelected\n     * @param {number} selectedOffset\n     * @param {boolean} hasAnimation\n     * @inner\n     */\n    function toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n        var midAngle = (layout.startAngle + layout.endAngle) / 2;\n\n        var dx = Math.cos(midAngle);\n        var dy = Math.sin(midAngle);\n\n        var offset = isSelected ? selectedOffset : 0;\n        var position = [dx * offset, dy * offset];\n\n        hasAnimation\n            // animateTo will stop revious animation like update transition\n            ? el.animate()\n                .when(200, {\n                    position: position\n                })\n                .start('bounceOut')\n            : el.attr('position', position);\n    }\n\n    /**\n     * Piece of pie including Sector, Label, LabelLine\n     * @constructor\n     * @extends {module:zrender/graphic/Group}\n     */\n    function PiePiece(data, idx) {\n\n        graphic.Group.call(this);\n\n        var sector = new graphic.Sector({\n            z2: 2\n        });\n        var polyline = new graphic.Polyline();\n        var text = new graphic.Text();\n        this.add(sector);\n        this.add(polyline);\n        this.add(text);\n\n        this.updateData(data, idx, true);\n\n        // Hover to change label and labelLine\n        function onEmphasis() {\n            polyline.ignore = polyline.hoverIgnore;\n            text.ignore = text.hoverIgnore;\n        }\n        function onNormal() {\n            polyline.ignore = polyline.normalIgnore;\n            text.ignore = text.normalIgnore;\n        }\n        this.on('emphasis', onEmphasis)\n            .on('normal', onNormal)\n            .on('mouseover', onEmphasis)\n            .on('mouseout', onNormal);\n    }\n\n    var piePieceProto = PiePiece.prototype;\n\n    piePieceProto.updateData = function (data, idx, firstCreate) {\n\n        var sector = this.childAt(0);\n\n        var seriesModel = data.hostModel;\n        var itemModel = data.getItemModel(idx);\n        var layout = data.getItemLayout(idx);\n        var sectorShape = zrUtil.extend({}, layout);\n        sectorShape.label = null;\n\n        if (firstCreate) {\n            sector.setShape(sectorShape);\n\n            var animationType = seriesModel.getShallow('animationType');\n            if (animationType === 'scale') {\n                sector.shape.r = layout.r0;\n                graphic.initProps(sector, {\n                    shape: {\n                        r: layout.r\n                    }\n                }, seriesModel, idx);\n            }\n            // Expansion\n            else {\n                sector.shape.endAngle = layout.startAngle;\n                graphic.updateProps(sector, {\n                    shape: {\n                        endAngle: layout.endAngle\n                    }\n                }, seriesModel, idx);\n            }\n\n        }\n        else {\n            graphic.updateProps(sector, {\n                shape: sectorShape\n            }, seriesModel, idx);\n        }\n\n        // Update common style\n        var itemStyleModel = itemModel.getModel('itemStyle');\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        sector.useStyle(\n            zrUtil.defaults(\n                {\n                    lineJoin: 'bevel',\n                    fill: visualColor\n                },\n                itemStyleModel.getModel('normal').getItemStyle()\n            )\n        );\n        sector.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n\n        var cursorStyle = itemModel.getShallow('cursor');\n        cursorStyle && sector.attr('cursor', cursorStyle);\n\n        // Toggle selected\n        toggleItemSelected(\n            this,\n            data.getItemLayout(idx),\n            itemModel.get('selected'),\n            seriesModel.get('selectedOffset'),\n            seriesModel.get('animation')\n        );\n\n        function onEmphasis() {\n            // Sector may has animation of updating data. Force to move to the last frame\n            // Or it may stopped on the wrong shape\n            sector.stopAnimation(true);\n            sector.animateTo({\n                shape: {\n                    r: layout.r + 10\n                }\n            }, 300, 'elasticOut');\n        }\n        function onNormal() {\n            sector.stopAnimation(true);\n            sector.animateTo({\n                shape: {\n                    r: layout.r\n                }\n            }, 300, 'elasticOut');\n        }\n        sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n        if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {\n            sector\n                .on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n\n        this._updateLabel(data, idx);\n\n        graphic.setHoverStyle(this);\n    };\n\n    piePieceProto._updateLabel = function (data, idx) {\n\n        var labelLine = this.childAt(1);\n        var labelText = this.childAt(2);\n\n        var seriesModel = data.hostModel;\n        var itemModel = data.getItemModel(idx);\n        var layout = data.getItemLayout(idx);\n        var labelLayout = layout.label;\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        graphic.updateProps(labelLine, {\n            shape: {\n                points: labelLayout.linePoints || [\n                    [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]\n                ]\n            }\n        }, seriesModel, idx);\n\n        graphic.updateProps(labelText, {\n            style: {\n                x: labelLayout.x,\n                y: labelLayout.y\n            }\n        }, seriesModel, idx);\n        labelText.attr({\n            rotation: labelLayout.rotation,\n            origin: [labelLayout.x, labelLayout.y],\n            z2: 10\n        });\n\n        var labelModel = itemModel.getModel('label.normal');\n        var labelHoverModel = itemModel.getModel('label.emphasis');\n        var labelLineModel = itemModel.getModel('labelLine.normal');\n        var labelLineHoverModel = itemModel.getModel('labelLine.emphasis');\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        graphic.setTextStyle(labelText.style, labelModel, {\n            textVerticalAlign: labelLayout.verticalAlign,\n            textAlign: labelLayout.textAlign,\n            opacity: data.getItemVisual(idx, 'opacity'),\n            text: zrUtil.retrieve(data.hostModel.getFormattedLabel(idx, 'normal'), data.getName(idx))\n        }, {\n            defaultTextColor: visualColor,\n            autoColor: visualColor,\n            checkInside: function (model, opt) {\n                return labelLayout.inside;\n            }\n        });\n\n        labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n        labelText.hoverIgnore = !labelHoverModel.get('show');\n\n        labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n        labelLine.hoverIgnore = !labelLineHoverModel.get('show');\n\n        // Default use item visual color\n        labelLine.setStyle({\n            stroke: visualColor,\n            opacity: data.getItemVisual(idx, 'opacity')\n        });\n        labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n\n        labelText.hoverStyle = graphic.setTextStyle({}, labelHoverModel, {\n            text: data.hostModel.getFormattedLabel(idx, 'emphasis')\n        }, {forMerge: true});\n\n        labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n\n        var smooth = labelLineModel.get('smooth');\n        if (smooth && smooth === true) {\n            smooth = 0.4;\n        }\n        labelLine.setShape({\n            smooth: smooth\n        });\n    };\n\n    zrUtil.inherits(PiePiece, graphic.Group);\n\n\n    // Pie view\n    var Pie = __webpack_require__(641).extend({\n\n        type: 'pie',\n\n        init: function () {\n            var sectorGroup = new graphic.Group();\n            this._sectorGroup = sectorGroup;\n        },\n\n        render: function (seriesModel, ecModel, api, payload) {\n            if (payload && (payload.from === this.uid)) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var oldData = this._data;\n            var group = this.group;\n\n            var hasAnimation = ecModel.get('animation');\n            var isFirstRender = !oldData;\n            var animationType = seriesModel.get('animationType');\n\n            var onSectorClick = zrUtil.curry(\n                updateDataSelected, this.uid, seriesModel, hasAnimation, api\n            );\n\n            var selectedMode = seriesModel.get('selectedMode');\n\n            data.diff(oldData)\n                .add(function (idx) {\n                    var piePiece = new PiePiece(data, idx);\n                    // Default expansion animation\n                    if (isFirstRender && animationType !== 'scale') {\n                        piePiece.eachChild(function (child) {\n                            child.stopAnimation(true);\n                        });\n                    }\n\n                    selectedMode && piePiece.on('click', onSectorClick);\n\n                    data.setItemGraphicEl(idx, piePiece);\n\n                    group.add(piePiece);\n                })\n                .update(function (newIdx, oldIdx) {\n                    var piePiece = oldData.getItemGraphicEl(oldIdx);\n\n                    piePiece.updateData(data, newIdx);\n\n                    piePiece.off('click');\n                    selectedMode && piePiece.on('click', onSectorClick);\n                    group.add(piePiece);\n                    data.setItemGraphicEl(newIdx, piePiece);\n                })\n                .remove(function (idx) {\n                    var piePiece = oldData.getItemGraphicEl(idx);\n                    group.remove(piePiece);\n                })\n                .execute();\n\n            if (\n                hasAnimation && isFirstRender && data.count() > 0\n                // Default expansion animation\n                && animationType !== 'scale'\n            ) {\n                var shape = data.getItemLayout(0);\n                var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n\n                var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n                group.setClipPath(this._createClipPath(\n                    shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel\n                ));\n            }\n\n            this._data = data;\n        },\n\n        dispose: function () {},\n\n        _createClipPath: function (\n            cx, cy, r, startAngle, clockwise, cb, seriesModel\n        ) {\n            var clipPath = new graphic.Sector({\n                shape: {\n                    cx: cx,\n                    cy: cy,\n                    r0: 0,\n                    r: r,\n                    startAngle: startAngle,\n                    endAngle: startAngle,\n                    clockwise: clockwise\n                }\n            });\n\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n                }\n            }, seriesModel, cb);\n\n            return clipPath;\n        },\n\n        /**\n         * @implement\n         */\n        containPoint: function (point, seriesModel) {\n            var data = seriesModel.getData();\n            var itemLayout = data.getItemLayout(0);\n            if (itemLayout) {\n                var dx = point[0] - itemLayout.cx;\n                var dy = point[1] - itemLayout.cy;\n                var radius = Math.sqrt(dx * dx + dy * dy);\n                return radius <= itemLayout.r && radius >= itemLayout.r0;\n            }\n        }\n\n    });\n\n    module.exports = Pie;\n\n\n/***/ }),\n/* 822 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// FIXME emphasis label position is not same with normal label position\n\n\n    var textContain = __webpack_require__(621);\n\n    function adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n        list.sort(function (a, b) {\n            return a.y - b.y;\n        });\n\n        // 压\n        function shiftDown(start, end, delta, dir) {\n            for (var j = start; j < end; j++) {\n                list[j].y += delta;\n                if (j > start\n                    && j + 1 < end\n                    && list[j + 1].y > list[j].y + list[j].height\n                ) {\n                    shiftUp(j, delta / 2);\n                    return;\n                }\n            }\n\n            shiftUp(end - 1, delta / 2);\n        }\n\n        // 弹\n        function shiftUp(end, delta) {\n            for (var j = end; j >= 0; j--) {\n                list[j].y -= delta;\n                if (j > 0\n                    && list[j].y > list[j - 1].y + list[j - 1].height\n                ) {\n                    break;\n                }\n            }\n        }\n\n        function changeX(list, isDownList, cx, cy, r, dir) {\n            var lastDeltaX = dir > 0\n                ? isDownList                // 右侧\n                    ? Number.MAX_VALUE      // 下\n                    : 0                     // 上\n                : isDownList                // 左侧\n                    ? Number.MAX_VALUE      // 下\n                    : 0;                    // 上\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                // Not change x for center label\n                if (list[i].position === 'center') {\n                    continue;\n                }\n                var deltaY = Math.abs(list[i].y - cy);\n                var length = list[i].len;\n                var length2 = list[i].len2;\n                var deltaX = (deltaY < r + length)\n                    ? Math.sqrt(\n                          (r + length + length2) * (r + length + length2)\n                          - deltaY * deltaY\n                      )\n                    : Math.abs(list[i].x - cx);\n                if (isDownList && deltaX >= lastDeltaX) {\n                    // 右下，左下\n                    deltaX = lastDeltaX - 10;\n                }\n                if (!isDownList && deltaX <= lastDeltaX) {\n                    // 右上，左上\n                    deltaX = lastDeltaX + 10;\n                }\n\n                list[i].x = cx + deltaX * dir;\n                lastDeltaX = deltaX;\n            }\n        }\n\n        var lastY = 0;\n        var delta;\n        var len = list.length;\n        var upList = [];\n        var downList = [];\n        for (var i = 0; i < len; i++) {\n            delta = list[i].y - lastY;\n            if (delta < 0) {\n                shiftDown(i, len, -delta, dir);\n            }\n            lastY = list[i].y + list[i].height;\n        }\n        if (viewHeight - lastY < 0) {\n            shiftUp(len - 1, lastY - viewHeight);\n        }\n        for (var i = 0; i < len; i++) {\n            if (list[i].y >= cy) {\n                downList.push(list[i]);\n            }\n            else {\n                upList.push(list[i]);\n            }\n        }\n        changeX(upList, false, cx, cy, r, dir);\n        changeX(downList, true, cx, cy, r, dir);\n    }\n\n    function avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n        var leftList = [];\n        var rightList = [];\n        for (var i = 0; i < labelLayoutList.length; i++) {\n            if (labelLayoutList[i].x < cx) {\n                leftList.push(labelLayoutList[i]);\n            }\n            else {\n                rightList.push(labelLayoutList[i]);\n            }\n        }\n\n        adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n        adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n        for (var i = 0; i < labelLayoutList.length; i++) {\n            var linePoints = labelLayoutList[i].linePoints;\n            if (linePoints) {\n                var dist = linePoints[1][0] - linePoints[2][0];\n                if (labelLayoutList[i].x < cx) {\n                    linePoints[2][0] = labelLayoutList[i].x + 3;\n                }\n                else {\n                    linePoints[2][0] = labelLayoutList[i].x - 3;\n                }\n                linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n                linePoints[1][0] = linePoints[2][0] + dist;\n            }\n        }\n    }\n\n    module.exports = function (seriesModel, r, viewWidth, viewHeight) {\n        var data = seriesModel.getData();\n        var labelLayoutList = [];\n        var cx;\n        var cy;\n        var hasLabelRotate = false;\n\n        data.each(function (idx) {\n            var layout = data.getItemLayout(idx);\n\n            var itemModel = data.getItemModel(idx);\n            var labelModel = itemModel.getModel('label.normal');\n            // Use position in normal or emphasis\n            var labelPosition = labelModel.get('position') || itemModel.get('label.emphasis.position');\n\n            var labelLineModel = itemModel.getModel('labelLine.normal');\n            var labelLineLen = labelLineModel.get('length');\n            var labelLineLen2 = labelLineModel.get('length2');\n\n            var midAngle = (layout.startAngle + layout.endAngle) / 2;\n            var dx = Math.cos(midAngle);\n            var dy = Math.sin(midAngle);\n\n            var textX;\n            var textY;\n            var linePoints;\n            var textAlign;\n\n            cx = layout.cx;\n            cy = layout.cy;\n\n            var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n            if (labelPosition === 'center') {\n                textX = layout.cx;\n                textY = layout.cy;\n                textAlign = 'center';\n            }\n            else {\n                var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n                var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n\n                textX = x1 + dx * 3;\n                textY = y1 + dy * 3;\n\n                if (!isLabelInside) {\n                    // For roseType\n                    var x2 = x1 + dx * (labelLineLen + r - layout.r);\n                    var y2 = y1 + dy * (labelLineLen + r - layout.r);\n                    var x3 = x2 + ((dx < 0 ? -1 : 1) * labelLineLen2);\n                    var y3 = y2;\n\n                    textX = x3 + (dx < 0 ? -5 : 5);\n                    textY = y3;\n                    linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n                }\n\n                textAlign = isLabelInside ? 'center' : (dx > 0 ? 'left' : 'right');\n            }\n            var font = labelModel.getFont();\n\n            var labelRotate = labelModel.get('rotate')\n                ? (dx < 0 ? -midAngle + Math.PI : -midAngle) : 0;\n            var text = seriesModel.getFormattedLabel(idx, 'normal')\n                        || data.getName(idx);\n            var textRect = textContain.getBoundingRect(\n                text, font, textAlign, 'top'\n            );\n            hasLabelRotate = !!labelRotate;\n            layout.label = {\n                x: textX,\n                y: textY,\n                position: labelPosition,\n                height: textRect.height,\n                len: labelLineLen,\n                len2: labelLineLen2,\n                linePoints: linePoints,\n                textAlign: textAlign,\n                verticalAlign: 'middle',\n                rotation: labelRotate,\n                inside: isLabelInside\n            };\n\n            // Not layout the inside label\n            if (!isLabelInside) {\n                labelLayoutList.push(layout.label);\n            }\n        });\n        if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n            avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n        }\n    };\n\n\n/***/ }),\n/* 823 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var numberUtil = __webpack_require__(610);\n    var parsePercent = numberUtil.parsePercent;\n    var labelLayout = __webpack_require__(822);\n    var zrUtil = __webpack_require__(606);\n\n    var PI2 = Math.PI * 2;\n    var RADIAN = Math.PI / 180;\n\n    module.exports = function (seriesType, ecModel, api, payload) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var center = seriesModel.get('center');\n            var radius = seriesModel.get('radius');\n\n            if (!zrUtil.isArray(radius)) {\n                radius = [0, radius];\n            }\n            if (!zrUtil.isArray(center)) {\n                center = [center, center];\n            }\n\n            var width = api.getWidth();\n            var height = api.getHeight();\n            var size = Math.min(width, height);\n            var cx = parsePercent(center[0], width);\n            var cy = parsePercent(center[1], height);\n            var r0 = parsePercent(radius[0], size / 2);\n            var r = parsePercent(radius[1], size / 2);\n\n            var data = seriesModel.getData();\n\n            var startAngle = -seriesModel.get('startAngle') * RADIAN;\n\n            var minAngle = seriesModel.get('minAngle') * RADIAN;\n\n            var validDataCount = 0;\n            data.each('value', function (value) {\n                !isNaN(value) && validDataCount++;\n            });\n\n            var sum = data.getSum('value');\n            // Sum may be 0\n            var unitRadian = Math.PI / (sum || validDataCount) * 2;\n\n            var clockwise = seriesModel.get('clockwise');\n\n            var roseType = seriesModel.get('roseType');\n            var stillShowZeroSum = seriesModel.get('stillShowZeroSum');\n\n            // [0...max]\n            var extent = data.getDataExtent('value');\n            extent[0] = 0;\n\n            // In the case some sector angle is smaller than minAngle\n            var restAngle = PI2;\n            var valueSumLargerThanMinAngle = 0;\n\n            var currentAngle = startAngle;\n            var dir = clockwise ? 1 : -1;\n\n            data.each('value', function (value, idx) {\n                var angle;\n                if (isNaN(value)) {\n                    data.setItemLayout(idx, {\n                        angle: NaN,\n                        startAngle: NaN,\n                        endAngle: NaN,\n                        clockwise: clockwise,\n                        cx: cx,\n                        cy: cy,\n                        r0: r0,\n                        r: roseType\n                            ? NaN\n                            : r\n                    });\n                    return;\n                }\n\n                // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n                if (roseType !== 'area') {\n                    angle = (sum === 0 && stillShowZeroSum)\n                        ? unitRadian : (value * unitRadian);\n                }\n                else {\n                    angle = PI2 / validDataCount;\n                }\n\n                if (angle < minAngle) {\n                    angle = minAngle;\n                    restAngle -= minAngle;\n                }\n                else {\n                    valueSumLargerThanMinAngle += value;\n                }\n\n                var endAngle = currentAngle + dir * angle;\n                data.setItemLayout(idx, {\n                    angle: angle,\n                    startAngle: currentAngle,\n                    endAngle: endAngle,\n                    clockwise: clockwise,\n                    cx: cx,\n                    cy: cy,\n                    r0: r0,\n                    r: roseType\n                        ? numberUtil.linearMap(value, extent, [r0, r])\n                        : r\n                });\n\n                currentAngle = endAngle;\n            }, true);\n\n            // Some sector is constrained by minAngle\n            // Rest sectors needs recalculate angle\n            if (restAngle < PI2 && validDataCount) {\n                // Average the angle if rest angle is not enough after all angles is\n                // Constrained by minAngle\n                if (restAngle <= 1e-3) {\n                    var angle = PI2 / validDataCount;\n                    data.each('value', function (value, idx) {\n                        if (!isNaN(value)) {\n                            var layout = data.getItemLayout(idx);\n                            layout.angle = angle;\n                            layout.startAngle = startAngle + dir * idx * angle;\n                            layout.endAngle = startAngle + dir * (idx + 1) * angle;\n                        }\n                    });\n                }\n                else {\n                    unitRadian = restAngle / valueSumLargerThanMinAngle;\n                    currentAngle = startAngle;\n                    data.each('value', function (value, idx) {\n                        if (!isNaN(value)) {\n                            var layout = data.getItemLayout(idx);\n                            var angle = layout.angle === minAngle\n                                ? minAngle : value * unitRadian;\n                            layout.startAngle = currentAngle;\n                            layout.endAngle = currentAngle + dir * angle;\n                            currentAngle += dir * angle;\n                        }\n                    });\n                }\n            }\n\n            labelLayout(seriesModel, r, width, height);\n        });\n    };\n\n\n/***/ }),\n/* 824 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var echarts = __webpack_require__(607);\n\n    // Must use radar component\n    __webpack_require__(830);\n\n    __webpack_require__(825);\n    __webpack_require__(826);\n\n    echarts.registerVisual(zrUtil.curry(__webpack_require__(687), 'radar'));\n    echarts.registerVisual(zrUtil.curry(\n        __webpack_require__(688), 'radar', 'circle', null\n    ));\n    echarts.registerLayout(__webpack_require__(828));\n\n    echarts.registerProcessor(\n        zrUtil.curry(__webpack_require__(686), 'radar')\n    );\n\n    echarts.registerPreprocessor(__webpack_require__(827));\n\n\n/***/ }),\n/* 825 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var SeriesModel = __webpack_require__(640);\n    var List = __webpack_require__(630);\n    var completeDimensions = __webpack_require__(631);\n    var zrUtil = __webpack_require__(606);\n    var encodeHTML = __webpack_require__(613).encodeHTML;\n\n    var RadarSeries = SeriesModel.extend({\n\n        type: 'series.radar',\n\n        dependencies: ['radar'],\n\n\n        // Overwrite\n        init: function (option) {\n            RadarSeries.superApply(this, 'init', arguments);\n\n            // Enable legend selection for each data item\n            // Use a function instead of direct access because data reference may changed\n            this.legendDataProvider = function () {\n                return this.getRawData();\n            };\n        },\n\n        getInitialData: function (option, ecModel) {\n            var data = option.data || [];\n            var dimensions = completeDimensions(\n                [], data, {extraPrefix: 'indicator_', extraFromZero: true}\n            );\n            var list = new List(dimensions, this);\n            list.initData(data);\n            return list;\n        },\n\n        formatTooltip: function (dataIndex) {\n            var value = this.getRawValue(dataIndex);\n            var coordSys = this.coordinateSystem;\n            var indicatorAxes = coordSys.getIndicatorAxes();\n            var name = this.getData().getName(dataIndex);\n            return encodeHTML(name === '' ? this.name : name) + '<br/>'\n                + zrUtil.map(indicatorAxes, function (axis, idx) {\n                    return encodeHTML(axis.name + ' : ' + value[idx]);\n                }).join('<br />');\n        },\n\n        defaultOption: {\n            zlevel: 0,\n            z: 2,\n            coordinateSystem: 'radar',\n            legendHoverLink: true,\n            radarIndex: 0,\n            lineStyle: {\n                normal: {\n                    width: 2,\n                    type: 'solid'\n                }\n            },\n            label: {\n                normal: {\n                    position: 'top'\n                }\n            },\n            // areaStyle: {\n            // },\n            // itemStyle: {}\n            symbol: 'emptyCircle',\n            symbolSize: 4\n            // symbolRotate: null\n        }\n    });\n\n    module.exports = RadarSeries;\n\n\n/***/ }),\n/* 826 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var graphic = __webpack_require__(608);\n    var zrUtil = __webpack_require__(606);\n    var symbolUtil = __webpack_require__(639);\n\n    function normalizeSymbolSize(symbolSize) {\n        if (!zrUtil.isArray(symbolSize)) {\n            symbolSize = [+symbolSize, +symbolSize];\n        }\n        return symbolSize;\n    }\n    module.exports = __webpack_require__(607).extendChartView({\n        type: 'radar',\n\n        render: function (seriesModel, ecModel, api) {\n            var polar = seriesModel.coordinateSystem;\n            var group = this.group;\n\n            var data = seriesModel.getData();\n            var oldData = this._data;\n\n            function createSymbol(data, idx) {\n                var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n                var color = data.getItemVisual(idx, 'color');\n                if (symbolType === 'none') {\n                    return;\n                }\n                var symbolSize = normalizeSymbolSize(\n                    data.getItemVisual(idx, 'symbolSize')\n                );\n                var symbolPath = symbolUtil.createSymbol(\n                    symbolType, -1, -1, 2, 2, color\n                );\n                symbolPath.attr({\n                    style: {\n                        strokeNoScale: true\n                    },\n                    z2: 100,\n                    scale: [symbolSize[0] / 2, symbolSize[1] / 2]\n                });\n                return symbolPath;\n            }\n\n            function updateSymbols(oldPoints, newPoints, symbolGroup, data, idx, isInit) {\n                // Simply rerender all\n                symbolGroup.removeAll();\n                for (var i = 0; i < newPoints.length - 1; i++) {\n                    var symbolPath = createSymbol(data, idx);\n                    if (symbolPath) {\n                        symbolPath.__dimIdx = i;\n                        if (oldPoints[i]) {\n                            symbolPath.attr('position', oldPoints[i]);\n                            graphic[isInit ? 'initProps' : 'updateProps'](\n                                symbolPath, {\n                                    position: newPoints[i]\n                                }, seriesModel, idx\n                            );\n                        }\n                        else {\n                            symbolPath.attr('position', newPoints[i]);\n                        }\n                        symbolGroup.add(symbolPath);\n                    }\n                }\n            }\n\n            function getInitialPoints(points) {\n                return zrUtil.map(points, function (pt) {\n                    return [polar.cx, polar.cy];\n                });\n            }\n            data.diff(oldData)\n                .add(function (idx) {\n                    var points = data.getItemLayout(idx);\n                    if (!points) {\n                        return;\n                    }\n                    var polygon = new graphic.Polygon();\n                    var polyline = new graphic.Polyline();\n                    var target = {\n                        shape: {\n                            points: points\n                        }\n                    };\n                    polygon.shape.points = getInitialPoints(points);\n                    polyline.shape.points = getInitialPoints(points);\n                    graphic.initProps(polygon, target, seriesModel, idx);\n                    graphic.initProps(polyline, target, seriesModel, idx);\n\n                    var itemGroup = new graphic.Group();\n                    var symbolGroup = new graphic.Group();\n                    itemGroup.add(polyline);\n                    itemGroup.add(polygon);\n                    itemGroup.add(symbolGroup);\n\n                    updateSymbols(\n                        polyline.shape.points, points, symbolGroup, data, idx, true\n                    );\n\n                    data.setItemGraphicEl(idx, itemGroup);\n                })\n                .update(function (newIdx, oldIdx) {\n                    var itemGroup = oldData.getItemGraphicEl(oldIdx);\n                    var polyline = itemGroup.childAt(0);\n                    var polygon = itemGroup.childAt(1);\n                    var symbolGroup = itemGroup.childAt(2);\n                    var target = {\n                        shape: {\n                            points: data.getItemLayout(newIdx)\n                        }\n                    };\n                    if (!target.shape.points) {\n                        return;\n                    }\n                    updateSymbols(\n                        polyline.shape.points, target.shape.points, symbolGroup, data, newIdx, false\n                    );\n\n                    graphic.updateProps(polyline, target, seriesModel);\n                    graphic.updateProps(polygon, target, seriesModel);\n\n                    data.setItemGraphicEl(newIdx, itemGroup);\n                })\n                .remove(function (idx) {\n                    group.remove(oldData.getItemGraphicEl(idx));\n                })\n                .execute();\n\n            data.eachItemGraphicEl(function (itemGroup, idx) {\n                var itemModel = data.getItemModel(idx);\n                var polyline = itemGroup.childAt(0);\n                var polygon = itemGroup.childAt(1);\n                var symbolGroup = itemGroup.childAt(2);\n                var color = data.getItemVisual(idx, 'color');\n\n                group.add(itemGroup);\n\n                polyline.useStyle(\n                    zrUtil.defaults(\n                        itemModel.getModel('lineStyle.normal').getLineStyle(),\n                        {\n                            fill: 'none',\n                            stroke: color\n                        }\n                    )\n                );\n                polyline.hoverStyle = itemModel.getModel('lineStyle.emphasis').getLineStyle();\n\n                var areaStyleModel = itemModel.getModel('areaStyle.normal');\n                var hoverAreaStyleModel = itemModel.getModel('areaStyle.emphasis');\n                var polygonIgnore = areaStyleModel.isEmpty() && areaStyleModel.parentModel.isEmpty();\n                var hoverPolygonIgnore = hoverAreaStyleModel.isEmpty() && hoverAreaStyleModel.parentModel.isEmpty();\n\n                hoverPolygonIgnore = hoverPolygonIgnore && polygonIgnore;\n                polygon.ignore = polygonIgnore;\n\n                polygon.useStyle(\n                    zrUtil.defaults(\n                        areaStyleModel.getAreaStyle(),\n                        {\n                            fill: color,\n                            opacity: 0.7\n                        }\n                    )\n                );\n                polygon.hoverStyle = hoverAreaStyleModel.getAreaStyle();\n\n                var itemStyle = itemModel.getModel('itemStyle.normal').getItemStyle(['color']);\n                var itemHoverStyle = itemModel.getModel('itemStyle.emphasis').getItemStyle();\n                var labelModel = itemModel.getModel('label.normal');\n                var labelHoverModel = itemModel.getModel('label.emphasis');\n                symbolGroup.eachChild(function (symbolPath) {\n                    symbolPath.setStyle(itemStyle);\n                    symbolPath.hoverStyle = zrUtil.clone(itemHoverStyle);\n\n                    var defaultText = data.get(data.dimensions[symbolPath.__dimIdx], idx);\n                    graphic.setText(symbolPath.style, labelModel, color);\n                    symbolPath.setStyle({\n                        text: labelModel.get('show')\n                            ? zrUtil.retrieve(\n                                seriesModel.getFormattedLabel(\n                                    idx, 'normal', null, symbolPath.__dimIdx\n                                ),\n                                defaultText\n                            )\n                            : null\n                    });\n\n                    graphic.setText(symbolPath.hoverStyle, labelHoverModel, true);\n                    symbolPath.hoverStyle.text = labelHoverModel.get('show')\n                        ? seriesModel.getFormattedLabel(\n                            idx, 'emphasis', null, symbolPath.__dimIdx\n                        )\n                        : null;\n                });\n\n                function onEmphasis() {\n                    polygon.attr('ignore', hoverPolygonIgnore);\n                }\n\n                function onNormal() {\n                    polygon.attr('ignore', polygonIgnore);\n                }\n\n                itemGroup.off('mouseover').off('mouseout').off('normal').off('emphasis');\n                itemGroup.on('emphasis', onEmphasis)\n                    .on('mouseover', onEmphasis)\n                    .on('normal', onNormal)\n                    .on('mouseout', onNormal);\n\n                graphic.setHoverStyle(itemGroup);\n            });\n\n            this._data = data;\n        },\n\n        remove: function () {\n            this.group.removeAll();\n            this._data = null;\n        },\n\n        dispose: function () {}\n    });\n\n\n/***/ }),\n/* 827 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Backward compat for radar chart in 2\n\n\n    var zrUtil = __webpack_require__(606);\n\n    module.exports = function (option) {\n        var polarOptArr = option.polar;\n        if (polarOptArr) {\n            if (!zrUtil.isArray(polarOptArr)) {\n                polarOptArr = [polarOptArr];\n            }\n            var polarNotRadar = [];\n            zrUtil.each(polarOptArr, function (polarOpt, idx) {\n                if (polarOpt.indicator) {\n                    if (polarOpt.type && !polarOpt.shape) {\n                        polarOpt.shape = polarOpt.type;\n                    }\n                    option.radar = option.radar || [];\n                    if (!zrUtil.isArray(option.radar)) {\n                        option.radar = [option.radar];\n                    }\n                    option.radar.push(polarOpt);\n                }\n                else {\n                    polarNotRadar.push(polarOpt);\n                }\n            });\n            option.polar = polarNotRadar;\n        }\n        zrUtil.each(option.series, function (seriesOpt) {\n            if (seriesOpt.type === 'radar' && seriesOpt.polarIndex) {\n                seriesOpt.radarIndex = seriesOpt.polarIndex;\n            }\n        });\n    };\n\n\n/***/ }),\n/* 828 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = function (ecModel) {\n        ecModel.eachSeriesByType('radar', function (seriesModel) {\n            var data = seriesModel.getData();\n            var points = [];\n            var coordSys = seriesModel.coordinateSystem;\n            if (!coordSys) {\n                return;\n            }\n\n            function pointsConverter(val, idx) {\n                points[idx] = points[idx] || [];\n                points[idx][i] = coordSys.dataToPoint(val, i);\n            }\n            for (var i = 0; i < coordSys.getIndicatorAxes().length; i++) {\n                var dim = data.dimensions[i];\n                data.each(dim, pointsConverter);\n            }\n\n            data.each(function (idx) {\n                // Close polygon\n                points[idx][0] && points[idx].push(points[idx][0].slice());\n                data.setItemLayout(idx, points[idx]);\n            });\n        });\n    };\n\n\n/***/ }),\n/* 829 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n *\n * @module echarts/chart/helper/DataSelectable\n */\n\n\n    var zrUtil = __webpack_require__(606);\n\n    module.exports = {\n\n        updateSelectedMap: function (targetList) {\n            this._targetList = targetList.slice();\n            this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n                targetMap.set(target.name, target);\n                return targetMap;\n            }, zrUtil.createHashMap());\n        },\n\n        /**\n         * Either name or id should be passed as input here.\n         * If both of them are defined, id is used.\n         *\n         * @param {string|undefined} name name of data\n         * @param {number|undefined} id dataIndex of data\n         */\n        // PENGING If selectedMode is null ?\n        select: function (name, id) {\n            var target = id != null\n                ? this._targetList[id]\n                : this._selectTargetMap.get(name);\n            var selectedMode = this.get('selectedMode');\n            if (selectedMode === 'single') {\n                this._selectTargetMap.each(function (target) {\n                    target.selected = false;\n                });\n            }\n            target && (target.selected = true);\n        },\n\n        /**\n         * Either name or id should be passed as input here.\n         * If both of them are defined, id is used.\n         *\n         * @param {string|undefined} name name of data\n         * @param {number|undefined} id dataIndex of data\n         */\n        unSelect: function (name, id) {\n            var target = id != null\n                ? this._targetList[id]\n                : this._selectTargetMap.get(name);\n            // var selectedMode = this.get('selectedMode');\n            // selectedMode !== 'single' && target && (target.selected = false);\n            target && (target.selected = false);\n        },\n\n        /**\n         * Either name or id should be passed as input here.\n         * If both of them are defined, id is used.\n         *\n         * @param {string|undefined} name name of data\n         * @param {number|undefined} id dataIndex of data\n         */\n        toggleSelected: function (name, id) {\n            var target = id != null\n                ? this._targetList[id]\n                : this._selectTargetMap.get(name);\n            if (target != null) {\n                this[target.selected ? 'unSelect' : 'select'](name, id);\n                return target.selected;\n            }\n        },\n\n        /**\n         * Either name or id should be passed as input here.\n         * If both of them are defined, id is used.\n         *\n         * @param {string|undefined} name name of data\n         * @param {number|undefined} id dataIndex of data\n         */\n        isSelected: function (name, id) {\n            var target = id != null\n                ? this._targetList[id]\n                : this._selectTargetMap.get(name);\n            return target && target.selected;\n        }\n    };\n\n\n/***/ }),\n/* 830 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    __webpack_require__(833);\n    __webpack_require__(834);\n\n    __webpack_require__(831);\n\n\n/***/ }),\n/* 831 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var AxisBuilder = __webpack_require__(649);\n    var zrUtil = __webpack_require__(606);\n    var graphic = __webpack_require__(608);\n\n    var axisBuilderAttrs = [\n        'axisLine', 'axisLabel', 'axisTick', 'axisName'\n    ];\n\n    module.exports = __webpack_require__(607).extendComponentView({\n\n        type: 'radar',\n\n        render: function (radarModel, ecModel, api) {\n            var group = this.group;\n            group.removeAll();\n\n            this._buildAxes(radarModel);\n            this._buildSplitLineAndArea(radarModel);\n        },\n\n        _buildAxes: function (radarModel) {\n            var radar = radarModel.coordinateSystem;\n            var indicatorAxes = radar.getIndicatorAxes();\n            var axisBuilders = zrUtil.map(indicatorAxes, function (indicatorAxis) {\n                var axisBuilder = new AxisBuilder(indicatorAxis.model, {\n                    position: [radar.cx, radar.cy],\n                    rotation: indicatorAxis.angle,\n                    labelDirection: -1,\n                    tickDirection: -1,\n                    nameDirection: 1\n                });\n                return axisBuilder;\n            });\n\n            zrUtil.each(axisBuilders, function (axisBuilder) {\n                zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n                this.group.add(axisBuilder.getGroup());\n            }, this);\n        },\n\n        _buildSplitLineAndArea: function (radarModel) {\n            var radar = radarModel.coordinateSystem;\n            var indicatorAxes = radar.getIndicatorAxes();\n            if (!indicatorAxes.length) {\n                return;\n            }\n            var shape = radarModel.get('shape');\n            var splitLineModel = radarModel.getModel('splitLine');\n            var splitAreaModel = radarModel.getModel('splitArea');\n            var lineStyleModel = splitLineModel.getModel('lineStyle');\n            var areaStyleModel = splitAreaModel.getModel('areaStyle');\n\n            var showSplitLine = splitLineModel.get('show');\n            var showSplitArea = splitAreaModel.get('show');\n            var splitLineColors = lineStyleModel.get('color');\n            var splitAreaColors = areaStyleModel.get('color');\n\n            splitLineColors = zrUtil.isArray(splitLineColors) ? splitLineColors : [splitLineColors];\n            splitAreaColors = zrUtil.isArray(splitAreaColors) ? splitAreaColors : [splitAreaColors];\n\n            var splitLines = [];\n            var splitAreas = [];\n\n            function getColorIndex(areaOrLine, areaOrLineColorList, idx) {\n                var colorIndex = idx % areaOrLineColorList.length;\n                areaOrLine[colorIndex] = areaOrLine[colorIndex] || [];\n                return colorIndex;\n            }\n\n            if (shape === 'circle') {\n                var ticksRadius = indicatorAxes[0].getTicksCoords();\n                var cx = radar.cx;\n                var cy = radar.cy;\n                for (var i = 0; i < ticksRadius.length; i++) {\n                    if (showSplitLine) {\n                        var colorIndex = getColorIndex(splitLines, splitLineColors, i);\n                        splitLines[colorIndex].push(new graphic.Circle({\n                            shape: {\n                                cx: cx,\n                                cy: cy,\n                                r: ticksRadius[i]\n                            }\n                        }));\n                    }\n                    if (showSplitArea && i < ticksRadius.length - 1) {\n                        var colorIndex = getColorIndex(splitAreas, splitAreaColors, i);\n                        splitAreas[colorIndex].push(new graphic.Ring({\n                            shape: {\n                                cx: cx,\n                                cy: cy,\n                                r0: ticksRadius[i],\n                                r: ticksRadius[i + 1]\n                            }\n                        }));\n                    }\n                }\n            }\n            // Polyyon\n            else {\n                var realSplitNumber;\n                var axesTicksPoints = zrUtil.map(indicatorAxes, function (indicatorAxis, idx) {\n                    var ticksCoords = indicatorAxis.getTicksCoords();\n                    realSplitNumber = realSplitNumber == null\n                        ? ticksCoords.length - 1\n                        : Math.min(ticksCoords.length - 1, realSplitNumber);\n                    return zrUtil.map(ticksCoords, function (tickCoord) {\n                        return radar.coordToPoint(tickCoord, idx);\n                    });\n                });\n\n                var prevPoints = [];\n                for (var i = 0; i <= realSplitNumber; i++) {\n                    var points = [];\n                    for (var j = 0; j < indicatorAxes.length; j++) {\n                        points.push(axesTicksPoints[j][i]);\n                    }\n                    // Close\n                    if (points[0]) {\n                        points.push(points[0].slice());\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.error('Can\\'t draw value axis ' + i);\n                        }\n                    }\n\n                    if (showSplitLine) {\n                        var colorIndex = getColorIndex(splitLines, splitLineColors, i);\n                        splitLines[colorIndex].push(new graphic.Polyline({\n                            shape: {\n                                points: points\n                            }\n                        }));\n                    }\n                    if (showSplitArea && prevPoints) {\n                        var colorIndex = getColorIndex(splitAreas, splitAreaColors, i - 1);\n                        splitAreas[colorIndex].push(new graphic.Polygon({\n                            shape: {\n                                points: points.concat(prevPoints)\n                            }\n                        }));\n                    }\n                    prevPoints = points.slice().reverse();\n                }\n            }\n\n            var lineStyle = lineStyleModel.getLineStyle();\n            var areaStyle = areaStyleModel.getAreaStyle();\n            // Add splitArea before splitLine\n            zrUtil.each(splitAreas, function (splitAreas, idx) {\n                this.group.add(graphic.mergePath(\n                    splitAreas, {\n                        style: zrUtil.defaults({\n                            stroke: 'none',\n                            fill: splitAreaColors[idx % splitAreaColors.length]\n                        }, areaStyle),\n                        silent: true\n                    }\n                ));\n            }, this);\n\n            zrUtil.each(splitLines, function (splitLines, idx) {\n                this.group.add(graphic.mergePath(\n                    splitLines, {\n                        style: zrUtil.defaults({\n                            fill: 'none',\n                            stroke: splitLineColors[idx % splitLineColors.length]\n                        }, lineStyle),\n                        silent: true\n                    }\n                ));\n            }, this);\n\n        }\n    });\n\n\n/***/ }),\n/* 832 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var Axis = __webpack_require__(650);\n\n    function IndicatorAxis(dim, scale, radiusExtent) {\n        Axis.call(this, dim, scale, radiusExtent);\n\n        /**\n         * Axis type\n         *  - 'category'\n         *  - 'value'\n         *  - 'time'\n         *  - 'log'\n         * @type {string}\n         */\n        this.type = 'value';\n\n        this.angle = 0;\n\n        /**\n         * Indicator name\n         * @type {string}\n         */\n        this.name = '';\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.model;\n    }\n\n    zrUtil.inherits(IndicatorAxis, Axis);\n\n    module.exports = IndicatorAxis;\n\n\n/***/ }),\n/* 833 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// TODO clockwise\n\n\n    var zrUtil = __webpack_require__(606);\n    var IndicatorAxis = __webpack_require__(832);\n    var IntervalScale = __webpack_require__(638);\n    var numberUtil = __webpack_require__(610);\n    var axisHelper = __webpack_require__(620);\n\n    function Radar(radarModel, ecModel, api) {\n\n        this._model = radarModel;\n        /**\n         * Radar dimensions\n         * @type {Array.<string>}\n         */\n        this.dimensions = [];\n\n        this._indicatorAxes = zrUtil.map(radarModel.getIndicatorModels(), function (indicatorModel, idx) {\n            var dim = 'indicator_' + idx;\n            var indicatorAxis = new IndicatorAxis(dim, new IntervalScale());\n            indicatorAxis.name = indicatorModel.get('name');\n            // Inject model and axis\n            indicatorAxis.model = indicatorModel;\n            indicatorModel.axis = indicatorAxis;\n            this.dimensions.push(dim);\n            return indicatorAxis;\n        }, this);\n\n        this.resize(radarModel, api);\n\n        /**\n         * @type {number}\n         * @readOnly\n         */\n        this.cx;\n        /**\n         * @type {number}\n         * @readOnly\n         */\n        this.cy;\n        /**\n         * @type {number}\n         * @readOnly\n         */\n        this.r;\n        /**\n         * @type {number}\n         * @readOnly\n         */\n        this.startAngle;\n    }\n\n    Radar.prototype.getIndicatorAxes = function () {\n        return this._indicatorAxes;\n    };\n\n    Radar.prototype.dataToPoint = function (value, indicatorIndex) {\n        var indicatorAxis = this._indicatorAxes[indicatorIndex];\n\n        return this.coordToPoint(indicatorAxis.dataToCoord(value), indicatorIndex);\n    };\n\n    Radar.prototype.coordToPoint = function (coord, indicatorIndex) {\n        var indicatorAxis = this._indicatorAxes[indicatorIndex];\n        var angle = indicatorAxis.angle;\n        var x = this.cx + coord * Math.cos(angle);\n        var y = this.cy - coord * Math.sin(angle);\n        return [x, y];\n    };\n\n    Radar.prototype.pointToData = function (pt) {\n        var dx = pt[0] - this.cx;\n        var dy = pt[1] - this.cy;\n        var radius = Math.sqrt(dx * dx + dy * dy);\n        dx /= radius;\n        dy /= radius;\n\n        var radian = Math.atan2(-dy, dx);\n\n        // Find the closest angle\n        // FIXME index can calculated directly\n        var minRadianDiff = Infinity;\n        var closestAxis;\n        var closestAxisIdx = -1;\n        for (var i = 0; i < this._indicatorAxes.length; i++) {\n            var indicatorAxis = this._indicatorAxes[i];\n            var diff = Math.abs(radian - indicatorAxis.angle);\n            if (diff < minRadianDiff) {\n                closestAxis = indicatorAxis;\n                closestAxisIdx = i;\n                minRadianDiff = diff;\n            }\n        }\n\n        return [closestAxisIdx, +(closestAxis && closestAxis.coodToData(radius))];\n    };\n\n    Radar.prototype.resize = function (radarModel, api) {\n        var center = radarModel.get('center');\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n        var viewSize = Math.min(viewWidth, viewHeight) / 2;\n        this.cx = numberUtil.parsePercent(center[0], viewWidth);\n        this.cy = numberUtil.parsePercent(center[1], viewHeight);\n\n        this.startAngle = radarModel.get('startAngle') * Math.PI / 180;\n\n        this.r = numberUtil.parsePercent(radarModel.get('radius'), viewSize);\n\n        zrUtil.each(this._indicatorAxes, function (indicatorAxis, idx) {\n            indicatorAxis.setExtent(0, this.r);\n            var angle = (this.startAngle + idx * Math.PI * 2 / this._indicatorAxes.length);\n            // Normalize to [-PI, PI]\n            angle = Math.atan2(Math.sin(angle), Math.cos(angle));\n            indicatorAxis.angle = angle;\n        }, this);\n    };\n\n    Radar.prototype.update = function (ecModel, api) {\n        var indicatorAxes = this._indicatorAxes;\n        var radarModel = this._model;\n        zrUtil.each(indicatorAxes, function (indicatorAxis) {\n            indicatorAxis.scale.setExtent(Infinity, -Infinity);\n        });\n        ecModel.eachSeriesByType('radar', function (radarSeries, idx) {\n            if (radarSeries.get('coordinateSystem') !== 'radar'\n                || ecModel.getComponent('radar', radarSeries.get('radarIndex')) !== radarModel\n            ) {\n                return;\n            }\n            var data = radarSeries.getData();\n            zrUtil.each(indicatorAxes, function (indicatorAxis) {\n                indicatorAxis.scale.unionExtentFromData(data, indicatorAxis.dim);\n            });\n        }, this);\n\n        var splitNumber = radarModel.get('splitNumber');\n\n        function increaseInterval(interval) {\n            var exp10 = Math.pow(10, Math.floor(Math.log(interval) / Math.LN10));\n            // Increase interval\n            var f = interval / exp10;\n            if (f === 2) {\n                f = 5;\n            }\n            else { // f is 2 or 5\n                f *= 2;\n            }\n            return f * exp10;\n        }\n        // Force all the axis fixing the maxSplitNumber.\n        zrUtil.each(indicatorAxes, function (indicatorAxis, idx) {\n            var rawExtent = axisHelper.getScaleExtent(indicatorAxis.scale, indicatorAxis.model);\n            axisHelper.niceScaleExtent(indicatorAxis.scale, indicatorAxis.model);\n\n            var axisModel = indicatorAxis.model;\n            var scale = indicatorAxis.scale;\n            var fixedMin = axisModel.getMin();\n            var fixedMax = axisModel.getMax();\n            var interval = scale.getInterval();\n\n            if (fixedMin != null && fixedMax != null) {\n                // User set min, max, divide to get new interval\n                scale.setExtent(+fixedMin, +fixedMax);\n                scale.setInterval(\n                    (fixedMax - fixedMin) / splitNumber\n                );\n            }\n            else if (fixedMin != null) {\n                var max;\n                // User set min, expand extent on the other side\n                do {\n                    max = fixedMin + interval * splitNumber;\n                    scale.setExtent(+fixedMin, max);\n                    // Interval must been set after extent\n                    // FIXME\n                    scale.setInterval(interval);\n\n                    interval = increaseInterval(interval);\n                } while (max < rawExtent[1] && isFinite(max) && isFinite(rawExtent[1]));\n            }\n            else if (fixedMax != null) {\n                var min;\n                // User set min, expand extent on the other side\n                do {\n                    min = fixedMax - interval * splitNumber;\n                    scale.setExtent(min, +fixedMax);\n                    scale.setInterval(interval);\n                    interval = increaseInterval(interval);\n                } while (min > rawExtent[0] && isFinite(min) && isFinite(rawExtent[0]));\n            }\n            else {\n                var nicedSplitNumber = scale.getTicks().length - 1;\n                if (nicedSplitNumber > splitNumber) {\n                    interval = increaseInterval(interval);\n                }\n                // PENDING\n                var center = Math.round((rawExtent[0] + rawExtent[1]) / 2 / interval) * interval;\n                var halfSplitNumber = Math.round(splitNumber / 2);\n                scale.setExtent(\n                    numberUtil.round(center - halfSplitNumber * interval),\n                    numberUtil.round(center + (splitNumber - halfSplitNumber) * interval)\n                );\n                scale.setInterval(interval);\n            }\n        });\n    };\n\n    /**\n     * Radar dimensions is based on the data\n     * @type {Array}\n     */\n    Radar.dimensions = [];\n\n    Radar.create = function (ecModel, api) {\n        var radarList = [];\n        ecModel.eachComponent('radar', function (radarModel) {\n            var radar = new Radar(radarModel, ecModel, api);\n            radarList.push(radar);\n            radarModel.coordinateSystem = radar;\n        });\n        ecModel.eachSeriesByType('radar', function (radarSeries) {\n            if (radarSeries.get('coordinateSystem') === 'radar') {\n                // Inject coordinate system\n                radarSeries.coordinateSystem = radarList[radarSeries.get('radarIndex') || 0];\n            }\n        });\n        return radarList;\n    };\n\n    __webpack_require__(636).register('radar', Radar);\n    module.exports = Radar;\n\n\n/***/ }),\n/* 834 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n\n    var axisDefault = __webpack_require__(684);\n    var valueAxisDefault = axisDefault.valueAxis;\n    var Model = __webpack_require__(614);\n    var zrUtil = __webpack_require__(606);\n\n    var axisModelCommonMixin = __webpack_require__(651);\n\n    function defaultsShow(opt, show) {\n        return zrUtil.defaults({\n            show: show\n        }, opt);\n    }\n\n    var RadarModel = __webpack_require__(607).extendComponentModel({\n\n        type: 'radar',\n\n        optionUpdated: function () {\n            var boundaryGap = this.get('boundaryGap');\n            var splitNumber = this.get('splitNumber');\n            var scale = this.get('scale');\n            var axisLine = this.get('axisLine');\n            var axisTick = this.get('axisTick');\n            var axisLabel = this.get('axisLabel');\n            var nameTextStyle = this.get('name');\n            var showName = this.get('name.show');\n            var nameFormatter = this.get('name.formatter');\n            var nameGap = this.get('nameGap');\n            var triggerEvent = this.get('triggerEvent');\n\n            var indicatorModels = zrUtil.map(this.get('indicator') || [], function (indicatorOpt) {\n                // PENDING\n                if (indicatorOpt.max != null && indicatorOpt.max > 0 && !indicatorOpt.min) {\n                    indicatorOpt.min = 0;\n                }\n                else if (indicatorOpt.min != null && indicatorOpt.min < 0 && !indicatorOpt.max) {\n                    indicatorOpt.max = 0;\n                }\n                var iNameTextStyle = nameTextStyle;\n                if(indicatorOpt.color != null) {\n                    iNameTextStyle = zrUtil.defaults({color: indicatorOpt.color}, nameTextStyle);\n                }\n                // Use same configuration\n                indicatorOpt = zrUtil.merge(zrUtil.clone(indicatorOpt), {\n                    boundaryGap: boundaryGap,\n                    splitNumber: splitNumber,\n                    scale: scale,\n                    axisLine: axisLine,\n                    axisTick: axisTick,\n                    axisLabel: axisLabel,\n                    // Competitable with 2 and use text\n                    name: indicatorOpt.text,\n                    nameLocation: 'end',\n                    nameGap: nameGap,\n                    // min: 0,\n                    nameTextStyle: iNameTextStyle,\n                    triggerEvent: triggerEvent\n                }, false);\n                if (!showName) {\n                    indicatorOpt.name = '';\n                }\n                if (typeof nameFormatter === 'string') {\n                    var indName = indicatorOpt.name;\n                    indicatorOpt.name = nameFormatter.replace('{value}', indName != null ? indName : '');\n                }\n                else if (typeof nameFormatter === 'function') {\n                    indicatorOpt.name = nameFormatter(\n                        indicatorOpt.name, indicatorOpt\n                    );\n                }\n                var model = zrUtil.extend(\n                    new Model(indicatorOpt, null, this.ecModel),\n                    axisModelCommonMixin\n                );\n\n                // For triggerEvent.\n                model.mainType = 'radar';\n                model.componentIndex = this.componentIndex;\n\n                return model;\n            }, this);\n\n            this.getIndicatorModels = function () {\n                return indicatorModels;\n            };\n        },\n\n        defaultOption: {\n\n            zlevel: 0,\n\n            z: 0,\n\n            center: ['50%', '50%'],\n\n            radius: '75%',\n\n            startAngle: 90,\n\n            name: {\n                show: true\n                // formatter: null\n                // textStyle: {}\n            },\n\n            boundaryGap: [0, 0],\n\n            splitNumber: 5,\n\n            nameGap: 15,\n\n            scale: false,\n\n            // Polygon or circle\n            shape: 'polygon',\n\n            axisLine: zrUtil.merge(\n                {\n                    lineStyle: {\n                        color: '#bbb'\n                    }\n                },\n                valueAxisDefault.axisLine\n            ),\n            axisLabel: defaultsShow(valueAxisDefault.axisLabel, false),\n            axisTick: defaultsShow(valueAxisDefault.axisTick, false),\n            splitLine: defaultsShow(valueAxisDefault.splitLine, true),\n            splitArea: defaultsShow(valueAxisDefault.splitArea, true),\n\n            // {text, min, max}\n            indicator: []\n        }\n    });\n\n    module.exports = RadarModel;\n\n\n/***/ }),\n/* 835 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var numberUtil = __webpack_require__(610);\n    var parsePercent = numberUtil.parsePercent;\n\n    var STACK_PREFIX = '__ec_stack_';\n\n    function getSeriesStackId(seriesModel) {\n        return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\n    }\n\n    function getAxisKey(axis) {\n        return axis.dim + axis.index;\n    }\n\n    /**\n     * @param {Object} opt\n     * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.\n     * @param {number} opt.count Positive interger.\n     * @param {number} [opt.barWidth]\n     * @param {number} [opt.barMaxWidth]\n     * @param {number} [opt.barGap]\n     * @param {number} [opt.barCategoryGap]\n     * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\n     */\n    function getLayoutOnAxis(opt, api) {\n        var params = [];\n        var baseAxis = opt.axis;\n        var axisKey = 'axis0';\n\n        if (baseAxis.type !== 'category') {\n            return;\n        }\n        var bandWidth = baseAxis.getBandWidth();\n\n        for (var i = 0; i < opt.count || 0; i++) {\n            params.push(zrUtil.defaults({\n                bandWidth: bandWidth,\n                axisKey: axisKey,\n                stackId: STACK_PREFIX + i\n            }, opt));\n        }\n        var widthAndOffsets = doCalBarWidthAndOffset(params, api);\n\n        var result = [];\n        for (var i = 0; i < opt.count; i++) {\n            var item = widthAndOffsets[axisKey][STACK_PREFIX + i];\n            item.offsetCenter = item.offset + item.width / 2;\n            result.push(item);\n        }\n\n        return result;\n    }\n\n    function calBarWidthAndOffset(barSeries, api) {\n        var seriesInfoList = zrUtil.map(barSeries, function (seriesModel) {\n            var data = seriesModel.getData();\n            var cartesian = seriesModel.coordinateSystem;\n            var baseAxis = cartesian.getBaseAxis();\n            var axisExtent = baseAxis.getExtent();\n            var bandWidth = baseAxis.type === 'category'\n                ? baseAxis.getBandWidth()\n                : (Math.abs(axisExtent[1] - axisExtent[0]) / data.count());\n\n            var barWidth = parsePercent(\n                seriesModel.get('barWidth'), bandWidth\n            );\n            var barMaxWidth = parsePercent(\n                seriesModel.get('barMaxWidth'), bandWidth\n            );\n            var barGap = seriesModel.get('barGap');\n            var barCategoryGap = seriesModel.get('barCategoryGap');\n\n            return {\n                bandWidth: bandWidth,\n                barWidth: barWidth,\n                barMaxWidth: barMaxWidth,\n                barGap: barGap,\n                barCategoryGap: barCategoryGap,\n                axisKey: getAxisKey(baseAxis),\n                stackId: getSeriesStackId(seriesModel)\n            };\n        });\n\n        return doCalBarWidthAndOffset(seriesInfoList, api);\n    }\n\n    function doCalBarWidthAndOffset(seriesInfoList, api) {\n        // Columns info on each category axis. Key is cartesian name\n        var columnsMap = {};\n\n        zrUtil.each(seriesInfoList, function (seriesInfo, idx) {\n            var axisKey = seriesInfo.axisKey;\n            var bandWidth = seriesInfo.bandWidth;\n            var columnsOnAxis = columnsMap[axisKey] || {\n                bandWidth: bandWidth,\n                remainedWidth: bandWidth,\n                autoWidthCount: 0,\n                categoryGap: '20%',\n                gap: '30%',\n                stacks: {}\n            };\n            var stacks = columnsOnAxis.stacks;\n            columnsMap[axisKey] = columnsOnAxis;\n\n            var stackId = seriesInfo.stackId;\n\n            if (!stacks[stackId]) {\n                columnsOnAxis.autoWidthCount++;\n            }\n            stacks[stackId] = stacks[stackId] || {\n                width: 0,\n                maxWidth: 0\n            };\n\n            // Caution: In a single coordinate system, these barGrid attributes\n            // will be shared by series. Consider that they have default values,\n            // only the attributes set on the last series will work.\n            // Do not change this fact unless there will be a break change.\n\n            // TODO\n            var barWidth = seriesInfo.barWidth;\n            if (barWidth && !stacks[stackId].width) {\n                // See #6312, do not restrict width.\n                stacks[stackId].width = barWidth;\n                barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n                columnsOnAxis.remainedWidth -= barWidth;\n            }\n\n            var barMaxWidth = seriesInfo.barMaxWidth;\n            barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n            var barGap = seriesInfo.barGap;\n            (barGap != null) && (columnsOnAxis.gap = barGap);\n            var barCategoryGap = seriesInfo.barCategoryGap;\n            (barCategoryGap != null) && (columnsOnAxis.categoryGap = barCategoryGap);\n        });\n\n        var result = {};\n\n        zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n\n            result[coordSysName] = {};\n\n            var stacks = columnsOnAxis.stacks;\n            var bandWidth = columnsOnAxis.bandWidth;\n            var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n            var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n\n            var remainedWidth = columnsOnAxis.remainedWidth;\n            var autoWidthCount = columnsOnAxis.autoWidthCount;\n            var autoWidth = (remainedWidth - categoryGap)\n                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n            autoWidth = Math.max(autoWidth, 0);\n\n            // Find if any auto calculated bar exceeded maxBarWidth\n            zrUtil.each(stacks, function (column, stack) {\n                var maxWidth = column.maxWidth;\n                if (maxWidth && maxWidth < autoWidth) {\n                    maxWidth = Math.min(maxWidth, remainedWidth);\n                    if (column.width) {\n                        maxWidth = Math.min(maxWidth, column.width);\n                    }\n                    remainedWidth -= maxWidth;\n                    column.width = maxWidth;\n                    autoWidthCount--;\n                }\n            });\n\n            // Recalculate width again\n            autoWidth = (remainedWidth - categoryGap)\n                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n            autoWidth = Math.max(autoWidth, 0);\n\n            var widthSum = 0;\n            var lastColumn;\n            zrUtil.each(stacks, function (column, idx) {\n                if (!column.width) {\n                    column.width = autoWidth;\n                }\n                lastColumn = column;\n                widthSum += column.width * (1 + barGapPercent);\n            });\n            if (lastColumn) {\n                widthSum -= lastColumn.width * barGapPercent;\n            }\n\n            var offset = -widthSum / 2;\n            zrUtil.each(stacks, function (column, stackId) {\n                result[coordSysName][stackId] = result[coordSysName][stackId] || {\n                    offset: offset,\n                    width: column.width\n                };\n\n                offset += column.width * (1 + barGapPercent);\n            });\n        });\n\n        return result;\n    }\n\n    /**\n     * @param {string} seriesType\n     * @param {module:echarts/model/Global} ecModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function barLayoutGrid(seriesType, ecModel, api) {\n\n        var barWidthAndOffset = calBarWidthAndOffset(\n            zrUtil.filter(\n                ecModel.getSeriesByType(seriesType),\n                function (seriesModel) {\n                    return !ecModel.isSeriesFiltered(seriesModel)\n                        && seriesModel.coordinateSystem\n                        && seriesModel.coordinateSystem.type === 'cartesian2d';\n                }\n            )\n        );\n\n        var lastStackCoords = {};\n        var lastStackCoordsOrigin = {};\n\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n\n            // Check series coordinate, do layout for cartesian2d only\n            if (seriesModel.coordinateSystem.type !== 'cartesian2d') {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var cartesian = seriesModel.coordinateSystem;\n            var baseAxis = cartesian.getBaseAxis();\n\n            var stackId = getSeriesStackId(seriesModel);\n            var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n            var columnOffset = columnLayoutInfo.offset;\n            var columnWidth = columnLayoutInfo.width;\n            var valueAxis = cartesian.getOtherAxis(baseAxis);\n\n            var barMinHeight = seriesModel.get('barMinHeight') || 0;\n\n            var valueAxisStart = baseAxis.onZero\n                ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0))\n                : valueAxis.getGlobalExtent()[0];\n\n            var coordDims = [\n                seriesModel.coordDimToDataDim('x')[0],\n                seriesModel.coordDimToDataDim('y')[0]\n            ];\n            var coords = data.mapArray(coordDims, function (x, y) {\n                return cartesian.dataToPoint([x, y]);\n            }, true);\n\n            lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n            lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n            data.setLayout({\n                offset: columnOffset,\n                size: columnWidth\n            });\n\n            data.each(seriesModel.coordDimToDataDim(valueAxis.dim)[0], function (value, idx) {\n                if (isNaN(value)) {\n                    return;\n                }\n\n                if (!lastStackCoords[stackId][idx]) {\n                    lastStackCoords[stackId][idx] = {\n                        p: valueAxisStart, // Positive stack\n                        n: valueAxisStart  // Negative stack\n                    };\n                    lastStackCoordsOrigin[stackId][idx] = {\n                        p: valueAxisStart, // Positive stack\n                        n: valueAxisStart  // Negative stack\n                    };\n                }\n                var sign = value >= 0 ? 'p' : 'n';\n                var coord = coords[idx];\n                var lastCoord = lastStackCoords[stackId][idx][sign];\n                var lastCoordOrigin = lastStackCoordsOrigin[stackId][idx][sign];\n                var x;\n                var y;\n                var width;\n                var height;\n\n                if (valueAxis.isHorizontal()) {\n                    x = lastCoord;\n                    y = coord[1] + columnOffset;\n                    width = coord[0] - lastCoordOrigin;\n                    height = columnWidth;\n\n                    lastStackCoordsOrigin[stackId][idx][sign] += width;\n                    if (Math.abs(width) < barMinHeight) {\n                        width = (width < 0 ? -1 : 1) * barMinHeight;\n                    }\n                    lastStackCoords[stackId][idx][sign] += width;\n                }\n                else {\n                    x = coord[0] + columnOffset;\n                    y = lastCoord;\n                    width = columnWidth;\n                    height = coord[1] - lastCoordOrigin;\n\n                    lastStackCoordsOrigin[stackId][idx][sign] += height;\n                    if (Math.abs(height) < barMinHeight) {\n                        // Include zero to has a positive bar\n                        height = (height <= 0 ? -1 : 1) * barMinHeight;\n                    }\n                    lastStackCoords[stackId][idx][sign] += height;\n                }\n\n                data.setItemLayout(idx, {\n                    x: x,\n                    y: y,\n                    width: width,\n                    height: height\n                });\n            }, true);\n\n        }, this);\n    }\n\n    barLayoutGrid.getLayoutOnAxis = getLayoutOnAxis;\n\n    module.exports = barLayoutGrid;\n\n\n/***/ }),\n/* 836 */,\n/* 837 */,\n/* 838 */,\n/* 839 */\n/***/ (function(module, exports, __webpack_require__) {\n\n!function(e,i){ true?module.exports=i(__webpack_require__(607),__webpack_require__(730),__webpack_require__(725),__webpack_require__(809),__webpack_require__(711),__webpack_require__(819),__webpack_require__(815),__webpack_require__(824)):\"function\"==typeof define&&define.amd?define([\"echarts/lib/echarts\",\"echarts/lib/component/tooltip\",\"echarts/lib/component/legend\",\"echarts/lib/chart/bar\",\"echarts/lib/chart/line\",\"echarts/lib/chart/pie\",\"echarts/lib/chart/funnel\",\"echarts/lib/chart/radar\"],i):e.VeChart=i(e.echarts)}(this,function(e){\"use strict\";function i(e){var i=e.innerRows,t=e.dimAxisName,n=e.dimension,a=e.axisVisible;return n.map(function(e){return{type:\"category\",name:t,nameLocation:\"middle\",nameGap:22,data:i.map(function(i){return i[e]}),axisLabel:{formatter:function(e){return String(e)}},show:a}})}function t(e){for(var i=e.meaAxisName,t=e.meaAxisType,n=e.axisVisible,a=e.digit,r=e.scale,o=e.min,s=e.max,l={type:\"value\",axisTick:{show:!1},show:n},c=[],u=0;u<2;u++)!function(e){t[e]?c[e]=Object.assign({},l,{axisLabel:{formatter:function(i){return V(i,t[e],a)}}}):c[e]=Object.assign({},l),c[e].name=i[e]||\"\",c[e].scale=r[e]||!1,c[e].min=o[e]||null,c[e].max=s[e]||null}(u);return c}function n(e){var i=e.axisSite,t=e.isHistogram,n=e.meaAxisType,a=e.digit,r=e.labelMap,o=t?i.right:i.top;return r&&(o=o.map(function(e){return void 0===r[e]?e:r[e]})),{trigger:\"axis\",formatter:function(e){var i=[];return i.push(e[0].name+\"<br>\"),e.forEach(function(e){var t=e.seriesName,r=~o.indexOf(t)?n[1]:n[0];i.push(j(e.color)),i.push(t+\": \"),i.push(V(e.value,r,a)),i.push(\"<br>\")}),i.join(\"\")}}}function a(e){var i=e.innerRows,t=e.metrics,n=e.stack,a=e.axisSite,r=e.isHistogram,o=e.labelMap,s=e.itemStyle,l=e.label,c=e.showLine,u=void 0===c?[]:c,d=[],m={},h=r?a.right:a.top,f=r?\"yAxisIndex\":\"xAxisIndex\",p=n&&E(n);return t.forEach(function(e){m[e]=[]}),i.forEach(function(e){t.forEach(function(i){m[i].push(e[i])})}),!!(d=Object.keys(m).map(function(e){var i=H({name:o&&o[e]||e,type:~u.indexOf(e)?\"line\":\"bar\",data:m[e]},f,~h.indexOf(e)?\"1\":\"0\");return n&&p[e]&&(i.stack=p[e]),l&&(i.label=l),s&&(i.itemStyle=s),i})).length&&d}function r(e){var i=e.metrics,t=e.labelMap,n=e.legendName;return n||t?{data:t?i.map(function(e){return null==t[e]?e:t[e]}):i,formatter:function(e){return n&&n[e]||e}}:{data:i}}function o(e){var i=e.dimension,t=e.rows,n=e.xAxisName,a=e.axisVisible;return i.map(function(e,i){return{type:\"category\",nameLocation:\"middle\",nameGap:22,boundaryGap:!1,name:n[i]||\"\",axisTick:{show:!0,lineStyle:{color:\"#eee\"}},data:t.map(function(i){return i[e]}),axisLabel:{formatter:function(e){return String(e)}},show:a}})}function s(e){var i=e.rows,t=e.axisSite,n=e.metrics,a=e.area,r=e.stack,o=e.nullAddZero,s=e.labelMap,l=e.label,c=e.itemStyle,u=e.lineStyle,d=e.areaStyle,m=[],h={},f=r&&E(r);return n.forEach(function(e){h[e]=[]}),i.forEach(function(e){n.forEach(function(i){var t=null;null!=e[i]?t=e[i]:o&&(t=0),h[i].push(t)})}),n.forEach(function(e){var i={name:s&&s[e]||e,type:\"line\",data:h[e]};a&&(i.areaStyle={normal:{}}),i.yAxisIndex=~t.right.indexOf(e)?1:0,r&&f[e]&&(i.stack=f[e]),l&&(i.label=l),c&&(i.itemStyle=c),u&&(i.lineStyle=u),d&&(i.areaStyle=d),m.push(i)}),!!m.length&&m}function l(e){for(var i=e.yAxisName,t=e.yAxisType,n=e.axisVisible,a=e.scale,r=e.min,o=e.max,s=e.digit,l={type:\"value\",axisTick:{show:!1},show:n},c=[],u=0;u<2;u++)!function(e){t[e]?c[e]=Object.assign({},l,{axisLabel:{formatter:function(i){return V(i,t[e],s)}}}):c[e]=Object.assign({},l),c[e].name=i[e]||\"\",c[e].scale=a[e]||!1,c[e].min=r[e]||null,c[e].max=o[e]||null}(u);return c}function c(e){var i=e.axisSite,t=e.yAxisType,n=e.digit,a=e.labelMap,r=a?i.right.map(function(e){return void 0===a[e]?e:a[e]}):i.right;return{trigger:\"axis\",formatter:function(e){var i=[];return i.push(e[0].name+\"<br>\"),e.forEach(function(e){var a=null,o=~r.indexOf(e.seriesName)?t[1]:t[0];a=V(e.data,o,n),i.push(j(e.color)),i.push(e.seriesName+\": \"+a),i.push(\"<br>\")}),i.join(\"\")}}}function u(e){var i=e.metrics,t=e.legendName,n=e.labelMap;return t||n?{data:n?i.map(function(e){return null==n[e]?e:n[e]}):i,formatter:function(e){return t&&t[e]||e}}:{data:i}}function d(e){var i=e.innerRows,t=e.dataType,n=e.percentShow,a=e.dimension,r=e.metrics,o=e.radius,s=e.offsetY,l=e.selectedMode,c=e.hoverAnimation,u=e.digit,d=e.roseType,m=e.label,h=e.level,f=e.limitShowNum,p=e.isRing,v=[],b={},g=[];h?(h.forEach(function(e,i){e.forEach(function(e){b[e]=i})}),i.forEach(function(e){var i=b[e[a]];void 0!==i&&(g[i]?g[i].push(e):g[i]=[e])})):g.push(i);var x={type:\"pie\",selectedMode:l,hoverAnimation:c,roseType:d,center:[\"50%\",s]},y=g.length;if(g.forEach(function(e,i){var s=Object.assign({data:[]},x),l=o/y;if(i){var c=l+o/(2*y)*(2*i-1),d=c+o/(2*y);s.radius=[c,d]}else s.radius=p?o:l;y>1&&0===i&&(s.label={normal:{position:\"inner\"}}),m&&(s.label=m),n&&(s.label={normal:{show:!0,position:y>1&&0===i?\"inner\":\"outside\",formatter:function(e){var i=[];return i.push(e.name+\":\"),i.push(V(e.value,t,u)),i.push(\"(\"+e.percent+\"%)\"),i.join(\" \")}}}),s.data=e.map(function(e){return{name:e[a],value:e[r]}}),v.push(s)}),f&&f<v[0].data.length){var O=v[0].data,w=0;O.slice(f,O.length).forEach(function(e){w+=e.value}),v[0].data=O.slice(0,f),v[0].data.push({name:\"其他\",value:w})}return v}function m(e){var i=e.innerRows,t=e.dimension,n=e.legendLimit,a=e.level,r=e.limitShowNum,o=[],s=[];if(a)a.forEach(function(e){e.forEach(function(e){s.push(e)})}),o=s;else if(r&&r<i.length){for(var l=0;l<r;l++)o.push(i[l][t]);o.push(\"其他\")}else o=i.map(function(e){return e[t]});return!!o.length&&{data:o,show:o.length<n}}function h(e){var i=e.dataType,t=e.innerRows,n=e.limitShowNum,a=e.digit,r=e.metrics,o=e.dimension,s=0,l=t.map(function(e){return s+=e[r],{name:e[o],value:e[r]}}).slice(n,t.length);return{formatter:function(e){var t=[];return t.push(j(e.color)),n&&\"其他\"===e.name?(t.push(\"其他:\"),l.forEach(function(e){var n=e.name,r=e.value,o=V(r/s,\"percent\");t.push(\"<br>\"+n+\":\"),t.push(V(r,i,a)),t.push(\"(\"+o+\")\")})):(t.push(e.name+\":\"),t.push(V(e.value,i,a)),t.push(\"(\"+e.percent+\"%)\")),t.join(\" \")}}}function f(e,i){return{trigger:\"item\",formatter:function(t){var n=[];return n.push(j(t.color)),n.push(t.name+\": \"+V(t.data.realValue,e,i)),n.join(\"\")}}}function p(e){var i=e.dimension,t=e.metrics,n=e.rows,a=e.sequence,r=e.ascending,o={type:\"funnel\"};n.sort(function(e,t){return a.indexOf(e[i])-a.indexOf(t[i])});var s=!1;n.some(function(e,i){if(i&&e[t]>n[i-1][t])return s=!0,!0});var l=100/n.length;return o.data=s?n.slice().reverse().map(function(e,n){return{name:e[i],value:(n+1)*l,realValue:e[t]}}):n.map(function(e){return{name:e[i],value:e[t],realValue:e[t]}}),r&&(o.sort=\"ascending\"),o}function v(e,i){return{data:e.map(function(e){return e[i]})}}function b(e,i,t){var n=[],a=[];return i.indicator.map(function(i,t){n[t]=e[i.name],a[t]=i.name}),{formatter:function(e){var i=[];return i.push(j(e.color)),i.push(e.seriesName+\"<br />\"),e.data.value.forEach(function(e,r){i.push(a[r]+\": \"),i.push(V(e,n[r],t)+\"<br />\")}),i.join(\"\")}}}function g(e,i){var t={indicator:[],shape:\"circle\",splitNumber:5},n={};return e.forEach(function(e){i.forEach(function(i){n[i]?n[i].push(e[i]):n[i]=[e[i]]})}),t.indicator=Object.keys(n).map(function(e){return{name:e,max:Math.max.apply(null,n[e])}}),t}function x(e){var i=e.rows,t=e.dimension,n=e.metrics,a={};e.radar.indicator.forEach(function(e,i){a[e.name]=i});var r=i.map(function(e){var i={value:[],name:e[t]};return Object.keys(e).forEach(function(t){~n.indexOf(t)&&(i.value[a[t]]=e[t])}),i});return[{name:t,type:\"radar\",data:r}]}function y(e,i){return{trigger:\"axis\",axisPointer:{type:\"shadow\"},formatter:function(t){var n=t[1];return[n.name+\"<br/>\"+n.seriesName+\" :\",\"\"+V(n.value,e,i)].join(\"\")}}}function O(e){var i=e.dimension,t=e.rows,n=e.remainStatus,a=e.totalName,r=e.remainName,o=e.xAxisName,s=e.axisVisible,l=[a].concat(t.map(function(e){return e[i]}));return\"have-remain\"===n&&(l=l.concat([r])),{type:\"category\",name:o,splitLine:{show:!1},data:l,show:s}}function w(e){var i=e.dataType,t=e.yAxisName,n=e.axisVisible,a=e.digit;return{type:\"value\",name:t,axisTick:{show:!1},axisLabel:{formatter:function(e){return V(e,i,a)}},show:n}}function S(e){var i=e.dataType,t=e.rows,n=e.metrics,a=e.totalNum,r=e.remainStatus,o=e.dataSum,s=e.digit,l={type:\"bar\",stack:\"总量\"},c=o,u=a,d=void 0,m=void 0,h=t.map(function(e){return e[n]});\"have-remain\"===r?(d=[0].concat(t.map(function(e){return u-=e[n]})).concat([0]),m=[a].concat(h).concat([a-o])):(d=[0].concat(t.map(function(e){return c-=e[n]})),m=[o].concat(h));var f=[];return f.push(Object.assign({name:\"辅助\",itemStyle:{normal:{opacity:0},emphasis:{opacity:0}},data:d},l)),f.push(Object.assign({name:\"数值\",label:{normal:{show:!0,position:\"top\",formatter:function(e){return V(e.value,i,s)}}},data:m},l)),f}function A(e,i){return i?i>e?\"have-remain\":\"none-remain\":\"not-total\"}e=\"default\"in e?e.default:e,\"function\"!=typeof Object.assign&&(Object.assign=function(e){if(null==e)throw new TypeError(\"Cannot convert undefined or null to object\");e=Object(e);for(var i=1;i<arguments.length;i++){var t=arguments[i];if(null!=t)for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e}),e.registerTheme(\"ve-chart\",{categoryAxis:{axisLine:{show:!1},axisTick:{show:!1},splitLine:{show:!1}},valueAxis:{axisLine:{show:!1}},line:{smooth:!0},grid:{containLabel:!0,left:10,right:10}});var j=function(e){return['<span style=\"',\"background-color:\"+e+\";\",\"display: inline-block;\",\"width: 10px;\",\"height: 10px;\",\"border-radius: 50%;\",\"margin-right:2px;\",'\"></span>'].join(\"\")},N=[\"#19d4ae\",\"#5ab1ef\",\"#fa6e86\",\"#ffb980\",\"#0067a6\",\"#c4b4e4\",\"#d87a80\",\"#9cbbff\",\"#d9d0c7\",\"#87a997\",\"#d49ea2\",\"#5b4947\",\"#7ba3a8\"],k=function(e){var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;if(isNaN(+e))return e;for(var t=[{value:1e18,symbol:\"E\"},{value:1e15,symbol:\"P\"},{value:1e12,symbol:\"T\"},{value:1e9,symbol:\"B\"},{value:1e6,symbol:\"M\"},{value:1e3,symbol:\"k\"}],n=0;n<t.length;n++)if(Math.abs(e)>=t[n].value)return(e/t[n].value).toFixed(i)+t[n].symbol;return e.toString()},T=function(e){return String(e).replace(/^(\\s+|-)?\\d+(?=.?\\d*($|\\s))/g,function(e){return e.replace(/(?=(?!\\b)(\\d{3})+$)/g,\",\")})},V=function(e,i){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:2,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:\"-\";if(null==e||isNaN(e))return n;switch(i){case\"KMB\":return k(e);case\"percent\":return parseFloat((100*e).toFixed(t))+\"%\";case\"normal\":return T(e);default:return e}},E=function(e){var i={};return Object.keys(e).forEach(function(t){e[t].forEach(function(e){i[e]=t})}),i},L=function(e){return JSON.parse(JSON.stringify(e))},M=function(e){return Object.prototype.toString.call(e)},H=function(e,i,t){return i in e?Object.defineProperty(e,i,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[i]=t,e},P=function(e,o,s,l){var c=L(o),u=s.axisSite,d=void 0===u?{top:[]}:u,m=s.dimension,h=void 0===m?[e[0]]:m,f=s.stack,p=void 0===f?{}:f,v=s.axisVisible,b=void 0===v||v,g=s.digit,x=void 0===g?2:g,y=s.dataOrder,O=void 0!==y&&y,w=s.scale,S=void 0===w?[!1,!1]:w,A=s.min,j=void 0===A?[null,null]:A,N=s.max,k=void 0===N?[null,null]:N,T=s.legendName,V=s.labelMap,E=s.label,M=s.itemStyle,H=s.showLine,P=l.tooltipVisible,C=l.legendVisible,R=e.slice();s.metrics?R=s.metrics:R.splice(e.indexOf(h[0]),1);var q=s.xAxisType||[\"normal\",\"normal\"],F=s.xAxisName||[],$=s.yAxisName||\"\";if(O){var _=O.label,Z=O.order;_&&Z?c.sort(function(e,i){return\"desc\"===Z?e[_]-i[_]:i[_]-e[_]}):console.warn(\"Need to provide name and order parameters\")}var z=C&&r({metrics:R,labelMap:V,legendName:T}),B=i({innerRows:c,dimAxisName:$,dimension:h,axisVisible:b}),G=t({meaAxisName:F,meaAxisType:q,axisVisible:b,digit:x,scale:S,min:j,max:k}),I={axisSite:d,isHistogram:!1,meaAxisType:q,digit:x,labelMap:V};return{legend:z,yAxis:B,series:a({innerRows:c,metrics:R,stack:p,axisSite:d,isHistogram:!1,labelMap:V,itemStyle:M,label:E,showLine:H}),xAxis:G,tooltip:P&&n(I)}},C=function(e,o,s,l){var c=L(o),u=s.axisSite,d=void 0===u?{right:[]}:u,m=s.dimension,h=void 0===m?[e[0]]:m,f=s.stack,p=void 0===f?{}:f,v=s.axisVisible,b=void 0===v||v,g=s.digit,x=void 0===g?2:g,y=s.dataOrder,O=void 0!==y&&y,w=s.scale,S=void 0===w?[!1,!1]:w,A=s.min,j=void 0===A?[null,null]:A,N=s.max,k=void 0===N?[null,null]:N,T=s.labelMap,V=s.legendName,E=s.label,M=s.itemStyle,H=s.showLine;if(O){var P=O.label,C=O.order;P&&C?c.sort(function(e,i){return\"desc\"===C?e[P]-i[P]:i[P]-e[P]}):console.warn(\"Need to provide name and order parameters\")}var R=l.tooltipVisible,q=l.legendVisible,F=e.slice();s.metrics?F=s.metrics:F.splice(e.indexOf(h[0]),1);var $=s.yAxisType||[\"normal\",\"normal\"],_=s.yAxisName||[],Z=s.xAxisName||\"\",z=q&&r({metrics:F,labelMap:T,legendName:V}),B=i({innerRows:c,dimAxisName:Z,dimension:h,axisVisible:b}),G={axisSite:d,isHistogram:!0,meaAxisType:$,digit:x,labelMap:T};return{legend:z,yAxis:t({meaAxisName:_,meaAxisType:$,axisVisible:b,digit:x,scale:S,min:j,max:k}),series:a({innerRows:c,metrics:F,stack:p,axisSite:d,isHistogram:!0,labelMap:T,itemStyle:M,label:E,showLine:H}),xAxis:B,tooltip:R&&n(G)}},R=function(e,i,t,n){var a=t.axisSite,r=void 0===a?{right:[]}:a,d=t.yAxisType,m=void 0===d?[\"normal\",\"normal\"]:d,h=t.yAxisName,f=void 0===h?[]:h,p=t.dimension,v=void 0===p?[e[0]]:p,b=t.xAxisName,g=void 0===b?[]:b,x=t.axisVisible,y=void 0===x||x,O=t.area,w=t.stack,S=t.scale,A=void 0===S?[!1,!1]:S,j=t.min,N=void 0===j?[null,null]:j,k=t.max,T=void 0===k?[null,null]:k,V=t.nullAddZero,E=void 0!==V&&V,L=t.digit,M=void 0===L?2:L,H=t.legendName,P=t.labelMap,C=t.label,R=t.itemStyle,q=t.lineStyle,F=t.areaStyle,$=n.tooltipVisible,_=n.legendVisible,Z=e.slice();t.metrics?Z=t.metrics:Z.splice(e.indexOf(v[0]),1);var z=_&&u({metrics:Z,legendName:H,labelMap:P}),B=$&&c({axisSite:r,yAxisType:m,digit:M,labelMap:P}),G=o({dimension:v,rows:i,xAxisName:g,axisVisible:y}),I=l({yAxisName:f,yAxisType:m,axisVisible:y,scale:A,min:N,max:T,digit:M}),Y=s({rows:i,axisSite:r,metrics:Z,area:O,stack:w,nullAddZero:E,labelMap:P,label:C,itemStyle:R,lineStyle:q,areaStyle:F});return!(!G||!Y)&&{legend:z,xAxis:G,series:Y,yAxis:I,tooltip:B}},q=[80,100],F=[20,100],$=function(e,i,t,n,a){var r=L(i),o=t.dataType,s=void 0===o?\"normal\":o,l=t.percentShow,c=t.dimension,u=void 0===c?e[0]:c,f=t.metrics,p=void 0===f?e[1]:f,v=t.roseType,b=void 0!==v&&v,g=t.radius,x=void 0===g?a?b?F:q:100:g,y=t.offsetY,O=void 0===y?200:y,w=t.legendLimit,S=void 0===w?30:w,A=t.selectedMode,j=void 0!==A&&A,N=t.hoverAnimation,k=void 0===N||N,T=t.digit,V=void 0===T?2:T,E=t.label,M=void 0!==E&&E,H=t.level,P=void 0!==H&&H,C=t.limitShowNum,R=void 0===C?0:C,$=n.tooltipVisible,_=n.legendVisible;R&&r.sort(function(e,i){return i[p]-e[p]});var Z={innerRows:r,dimension:u,legendLimit:S,level:P,limitShowNum:R};return{series:d({innerRows:r,dataType:s,percentShow:l,dimension:u,metrics:p,radius:x,offsetY:O,selectedMode:j,hoverAnimation:k,digit:V,roseType:b,label:M,level:P,limitShowNum:R,isRing:a}),legend:_&&m(Z),tooltip:$&&h({dataType:s,innerRows:r,limitShowNum:R,digit:V,metrics:p,dimension:u})}},_=function(e,i,t,n){return $(e,i,t,n,!0)},Z=function(e,i,t,n){var a=e.slice(),r=i.slice(),o=t.dataType,s=void 0===o?\"normal\":o,l=t.dimension,c=void 0===l?a[0]:l,u=t.sequence,d=void 0===u?r.map(function(e){return e[c]}):u,m=t.digit,h=void 0===m?2:m,v=t.ascending,b=n.tooltipVisible,g=n.legendVisible,x=void 0;if(t.metrics)x=t.metrics;else{var y=a.slice();y.splice(a.indexOf(c),1),x=y[0]}return{tooltip:b&&f(s,h),legend:g&&{data:d},series:p({dimension:c,metrics:x,rows:r,sequence:d,ascending:v})}},z=function(e,i,t,n){var a=t.dataType,r=void 0===a?{}:a,o=t.dimension,s=void 0===o?e[0]:o,l=t.digit,c=void 0===l?2:l,u=n.tooltipVisible,d=n.legendVisible,m=e.slice();t.metrics?m=t.metrics:m.splice(e.indexOf(s),1);var h=d&&v(i,s),f=g(i,m);return{legend:h,tooltip:u&&b(r,f,c),radar:f,series:x({rows:i,dimension:s,metrics:m,radar:f})}},B=function(e,i,t,n){var a=t.dataType,r=void 0===a?\"normal\":a,o=t.dimension,s=void 0===o?e[0]:o,l=t.totalName,c=void 0===l?\"总计\":l,u=t.totalNum,d=t.remainName,m=void 0===d?\"其他\":d,h=t.xAxisName,f=void 0===h?s:h,p=t.axisVisible,v=void 0===p||p,b=t.digit,g=void 0===b?2:b,x=n.tooltipVisible,j=e.slice();j.splice(j.indexOf(s),1);var N=j[0],k=N,T=x&&y(r,g),V=i.reduce(function(e,i){return e+Number(i[N])},0).toFixed(2),E=A(V,u);return{tooltip:T,xAxis:O({dimension:s,rows:i,remainStatus:E,totalName:c,remainName:m,xAxisName:f,axisVisible:v}),yAxis:w({dataType:r,yAxisName:k,axisVisible:v,digit:g}),series:S({dataType:r,rows:i,dimension:s,metrics:N,totalNum:u,remainStatus:E,dataSum:V,digit:g})}};return{render:function(){var e=this,i=e.$createElement;return(e._self._c||i)(\"div\",{ref:\"canvas\",staticClass:\"ve-chart\",style:e.canvasStyle})},staticRenderFns:[],name:\"VeChart\",mixins:[{props:{data:{type:[Object,Array],default:function(){return{}}},settings:{type:Object,default:function(){return{}}},width:{type:String,default:\"auto\"},height:{type:String,default:\"400px\"},beforeConfig:{type:Function},afterConfig:{type:Function},afterSetOption:{type:Function},afterSetOptionOnce:{type:Function},events:{type:Object},grid:{type:Object},colors:{type:Array},tooltipVisible:{type:Boolean,default:!0},legendVisible:{type:Boolean,default:!0},legendPosition:{type:String},markLine:{type:Object},markArea:{type:Object},markPoint:{type:Object},visualMap:{type:[Object,Array]},dataZoom:{type:[Object,Array]},toolbox:{type:Object},initOptions:{type:Object,default:function(){return{}}},title:Object,legend:Object,xAxis:Object,yAxis:Object,radar:Object,tooltip:Object,axisPointer:Object,brush:Object,geo:Object,timeline:Object,graphic:Object,series:[Object,Array],backgroundColor:[Object,String],textStyle:Object,animation:Object,theme:Object,themeName:String},watch:{data:{deep:!0,handler:function(e){e&&this.dataHandler(e)}},settings:{deep:!0,handler:function(e){e.type&&this.chartLib&&(this.chartHandler=this.chartLib[e.type]),this.dataHandler(this.data)}}},computed:{canvasStyle:function(){return{width:this.width,height:this.height,position:\"relative\"}},chartColor:function(){return this.colors||this.theme&&this.theme.color||N}},methods:{dataHandler:function(e){if(this.chartHandler){var i=e,t=i.columns,n=i.rows,a={tooltipVisible:this.tooltipVisible,legendVisible:this.legendVisible,echarts:this.echarts,color:this.chartColor};this.beforeConfig&&(e=this.beforeConfig(e));var r=this.chartHandler(t,n,this.settings,a);r&&(\"function\"==typeof r.then?r.then(this.optionsHandler):this.optionsHandler(r))}},optionsHandler:function(e){var i=this;if(this.legendPosition&&e.legend&&(e.legend[this.legendPosition]=10,~[\"left\",\"right\"].indexOf(this.legendPosition)&&(e.legend.top=\"middle\",e.legend.orient=\"vertical\")),this.themeName||(e.color=this.chartColor),[\"grid\",\"dataZoom\",\"visualMap\",\"toolbox\",\"title\",\"legend\",\"xAxis\",\"yAxis\",\"radar\",\"tooltip\",\"axisPointer\",\"brush\",\"geo\",\"timeline\",\"graphic\",\"series\",\"backgroundColor\",\"textStyle\"].forEach(function(t){i[t]&&(e[t]=i[t])}),this.animation&&Object.keys(this.animation).forEach(function(t){e[t]=i.animation[t]}),this.markArea||this.markLine||this.markPoint){var t={markArea:this.markArea,markLine:this.markLine,markPoint:this.markPoint},n=e.series;\"[object Array]\"===M(n)?n.forEach(function(e){i.addMark(e,t)}):\"[object Object]\"===M(n)&&this.addMark(n,t)}this.afterConfig&&(e=this.afterConfig(e)),this.echarts.setOption(e,!0),this.afterSetOption&&this.afterSetOption(this.echarts),this.afterSetOptionOnce&&!this._once.afterSetOptionOnce&&(this._once.afterSetOptionOnce=this.afterSetOptionOnce(this.echarts))},addMark:function(e,i){Object.keys(i).forEach(function(t){i[t]&&(e[t]=i[t])})},init:function(){if(!this.echarts){var e=this.themeName||(this.theme?\"outer-theme\":\"ve-chart\");this.echarts=this.echartsLib.init(this.$refs.canvas,e,this.initOptions),this.data&&this.dataHandler(this.data),this.events&&this.bindEvents()}},bindEvents:function(){var e=this;Object.keys(this.events).forEach(function(i){e.echarts.on(i,e.events[i])})},addWatchToProps:function(){var e=this,i=this._watchers.map(function(e){return e.expression});Object.keys(this.$props).forEach(function(t){if(!~i.indexOf(t)){var n={};\"[object Object]\"===M(t)&&(n.deep=!0),e.$watch(t,function(){e.dataHandler(e.data)},n)}})},registerTheme:function(){e.registerTheme(\"outer-theme\",this.theme)}},created:function(){this.echarts=null,this._once={},this.addWatchToProps(),this.theme&&this.registerTheme()},mounted:function(){this.init(),window.addEventListener(\"resize\",this.echarts.resize)},beforeDestory:function(){window.removeEventListener(\"resize\",this.echarts.resize),this.echarts.dispose()}}],created:function(){this.chartLib={bar:P,histogram:C,line:R,pie:$,ring:_,funnel:Z,radar:z,waterfall:B},this.chartHandler=this.chartLib[this.settings.type],this.echartsLib=e}}});\n\n\n/***/ }),\n/* 840 */,\n/* 841 */,\n/* 842 */,\n/* 843 */,\n/* 844 */,\n/* 845 */,\n/* 846 */,\n/* 847 */,\n/* 848 */,\n/* 849 */,\n/* 850 */,\n/* 851 */,\n/* 852 */,\n/* 853 */,\n/* 854 */,\n/* 855 */,\n/* 856 */,\n/* 857 */,\n/* 858 */,\n/* 859 */,\n/* 860 */,\n/* 861 */,\n/* 862 */,\n/* 863 */,\n/* 864 */,\n/* 865 */,\n/* 866 */,\n/* 867 */,\n/* 868 */,\n/* 869 */,\n/* 870 */,\n/* 871 */,\n/* 872 */,\n/* 873 */,\n/* 874 */,\n/* 875 */,\n/* 876 */,\n/* 877 */,\n/* 878 */,\n/* 879 */,\n/* 880 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_slicedToArray__ = __webpack_require__(210);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_slicedToArray___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_slicedToArray__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_promise__ = __webpack_require__(139);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_promise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_promise__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_regenerator__ = __webpack_require__(96);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_regenerator___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_regenerator__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_asyncToGenerator__ = __webpack_require__(95);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_asyncToGenerator___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_asyncToGenerator__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_extends__ = __webpack_require__(67);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_extends___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_extends__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_v_charts_lib_chart_min__ = __webpack_require__(839);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_v_charts_lib_chart_min___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_v_charts_lib_chart_min__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_base_date_range_date_range__ = __webpack_require__(764);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_base_date_range_date_range___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_base_date_range_date_range__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_components_v_header_v_header__ = __webpack_require__(205);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_components_v_header_v_header___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_components_v_header_v_header__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_base_loading_loading__ = __webpack_require__(208);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_base_loading_loading___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_base_loading_loading__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_vuex__ = __webpack_require__(68);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_common_js_mixin__ = __webpack_require__(628);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_api_config__ = __webpack_require__(69);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_api__ = __webpack_require__(70);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13_common_js_bus__ = __webpack_require__(803);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'analysis-detail',\n  mixins: [__WEBPACK_IMPORTED_MODULE_10_common_js_mixin__[\"a\" /* chartDataMixin */], __WEBPACK_IMPORTED_MODULE_10_common_js_mixin__[\"b\" /* dateMixin */]],\n  props: {},\n  data: function data() {\n    return {\n      chartSettings: {},\n      chartData0: {\n        bars: [],\n        times: []\n      }\n    };\n  },\n\n  computed: __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_extends___default()({}, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9_vuex__[\"a\" /* mapGetters */])(['analysisItem']), __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9_vuex__[\"a\" /* mapGetters */])({\n    selectedItem: 'analysis/selectedItem'\n  })),\n  components: {\n    VeChart: __WEBPACK_IMPORTED_MODULE_5_v_charts_lib_chart_min___default.a,\n    VHeader: __WEBPACK_IMPORTED_MODULE_7_components_v_header_v_header___default.a,\n    Loading: __WEBPACK_IMPORTED_MODULE_8_base_loading_loading___default.a,\n    DateRange: __WEBPACK_IMPORTED_MODULE_6_base_date_range_date_range___default.a\n  },\n  methods: __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_extends___default()({}, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9_vuex__[\"c\" /* mapMutations */])({\n    changeDateSelectedItem: 'analysis/CHANGE_DATE_SELECTED_ITEM'\n  }), {\n    _changeDate: function _changeDate(date) {\n      if (!this.checkTime(date.dateStartTime, date.dateEndTime)) return;\n      var params = {\n        startTime: date.dateStartTime,\n        endTime: date.dateEndTime,\n        selectedItems: JSON.parse(this.selectedItem.q),\n        id: this.selectedItem.id,\n        tag: this.selectedItem.tag\n      };\n      this.changeDateSelectedItem(date);\n      this._concurrent();\n      __WEBPACK_IMPORTED_MODULE_13_common_js_bus__[\"a\" /* default */].$emit('busChangeDate', params);\n    },\n    changeType: function changeType() {\n      this.index++;\n      if (this.index >= this.typeArr.length) {\n        this.index = 0;\n      }\n      this.chartSettings = { type: this.typeArr[this.index] };\n    },\n    _getChart0: function _getChart0() {\n      var _this = this;\n\n      return __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_asyncToGenerator___default()(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_regenerator___default.a.mark(function _callee() {\n        var params;\n        return __WEBPACK_IMPORTED_MODULE_2_babel_runtime_regenerator___default.a.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                params = {\n                  id: _this.selectedItem.id,\n                  q: _this.selectedItem.q,\n                  tag: _this.selectedItem.tag,\n                  startPoTime: _this.selectedItem.startPoTime,\n                  endPoTime: _this.selectedItem.endPoTime\n                };\n                _context.next = 3;\n                return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_12_api__[\"g\" /* getChart0 */])(params).then(function (data) {\n                  if (data.code === __WEBPACK_IMPORTED_MODULE_11_api_config__[\"a\" /* ERR_OK */]) {\n                    return data;\n                  }\n                });\n\n              case 3:\n                return _context.abrupt('return', _context.sent);\n\n              case 4:\n              case 'end':\n                return _context.stop();\n            }\n          }\n        }, _callee, _this);\n      }))();\n    },\n    _concurrent: function _concurrent() {\n      var _this2 = this;\n\n      return __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_asyncToGenerator___default()(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_regenerator___default.a.mark(function _callee2() {\n        var data, _data, chartData0;\n\n        return __WEBPACK_IMPORTED_MODULE_2_babel_runtime_regenerator___default.a.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_promise___default.a.all([_this2._getChart0()]);\n\n              case 2:\n                data = _context2.sent;\n                _data = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_slicedToArray___default()(data, 1), chartData0 = _data[0].obj;\n\n                _this2.chartData0 = chartData0;\n\n              case 5:\n              case 'end':\n                return _context2.stop();\n            }\n          }\n        }, _callee2, _this2);\n      }))();\n    },\n    getTitle: function getTitle(label) {\n      switch (label) {\n        case 'company':\n          {\n            return '企业竞争力分析报告';\n          }\n        case 'product':\n          {\n            return '产品竞争力分析报告';\n          }\n        case 'tenderProduct':\n          {\n            return '产品招标竞争力分析报告';\n          }\n        case 'tenderCompany':\n          {\n            return '企业招标竞争力分析报告';\n          }\n        default:\n          {\n            return '';\n          }\n      }\n    }\n  }),\n  created: function created() {\n    this.typeArr = ['line', 'histogram', 'bar'];\n    this.index = 0;\n    this.chartSettings = {\n      type: this.typeArr[this.index],\n      label: {\n        normal: { show: true }\n      }\n    };\n    this._concurrent();\n    if (!this.selectedItem.id) this.$router.push('/analysis');\n  },\n  mounted: function mounted() {}\n});\n\n/***/ }),\n/* 881 */,\n/* 882 */,\n/* 883 */,\n/* 884 */,\n/* 885 */,\n/* 886 */,\n/* 887 */,\n/* 888 */,\n/* 889 */,\n/* 890 */,\n/* 891 */,\n/* 892 */,\n/* 893 */,\n/* 894 */,\n/* 895 */,\n/* 896 */,\n/* 897 */,\n/* 898 */,\n/* 899 */,\n/* 900 */,\n/* 901 */,\n/* 902 */,\n/* 903 */,\n/* 904 */,\n/* 905 */,\n/* 906 */,\n/* 907 */,\n/* 908 */,\n/* 909 */,\n/* 910 */,\n/* 911 */,\n/* 912 */,\n/* 913 */,\n/* 914 */,\n/* 915 */,\n/* 916 */,\n/* 917 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(586)();\n// imports\n\n\n// module\nexports.push([module.i, \".analysis-detail[data-v-5314579c]{position:fixed;top:0;bottom:0;left:0;right:0;z-index:100;background-color:#fff}.analysis-detail .header .change-btn[data-v-5314579c]{font-size:.373333333333333rem}.analysis-detail .title-wrapper[data-v-5314579c]{padding:.266666666666667rem;line-height:1.5em;display:-webkit-box;display:-webkit-flex;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;flex-direction:column}.analysis-detail .title-wrapper>span[data-v-5314579c]{font-size:.32rem;color:#949697}.analysis-detail .chart[data-v-5314579c]{width:100%}.analysis-detail .chart>.chart-title[data-v-5314579c]{font-size:.373333333333333rem;color:#0b62c9;background-color:rgba(11,98,201,.2);padding:.133333333333333rem .266666666666667rem}.analysis-detail .loading[data-v-5314579c]{position:absolute;top:50%}.analysis-detail .slide-enter-active[data-v-5314579c],.analysis-detail .slide-leave-active[data-v-5314579c]{-webkit-transition:all .3s;transition:all .3s}.analysis-detail .slide-enter[data-v-5314579c],.analysis-detail .slide-leave-to[data-v-5314579c]{-webkit-transform:translate3d(100%,0,0);transform:translate3d(100%,0,0)}\", \"\", {\"version\":3,\"sources\":[\"/Users/yangran/workspace/industries/src/components/analysis-detail/analysis-detail.vue\"],\"names\":[],\"mappings\":\"AAAA,kCACE,eAAgB,AAChB,MAAO,AACP,SAAU,AACV,OAAQ,AACR,QAAS,AACT,YAAa,AACb,qBAAuB,CACxB,AAED,sDACE,6BAAgC,CACjC,AAED,iDACE,4BAA8B,AAC9B,kBAAmB,AACnB,oBAAqB,AACrB,qBAAsB,AACtB,aAAc,AACd,4BAA6B,AAC7B,6BAA8B,AAC9B,8BAA+B,AAC/B,qBAAuB,CACxB,AAED,sDACE,iBAAmB,AACnB,aAAe,CAChB,AAED,yCACE,UAAY,CACb,AAED,sDACE,8BAAgC,AAChC,cAAe,AACf,oCAAsC,AACtC,+CAAmD,CACpD,AAED,2CACE,kBAAmB,AACnB,OAAS,CACV,AAED,4GAEE,2BAA6B,AAC7B,kBAAqB,CACtB,AAED,iGAEE,wCAA2C,AAC3C,+BAAmC,CACpC\",\"file\":\"analysis-detail.vue\",\"sourcesContent\":[\".analysis-detail[data-v-5314579c] {\\n  position: fixed;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  z-index: 100;\\n  background-color: #fff;\\n}\\n\\n.analysis-detail .header .change-btn[data-v-5314579c] {\\n  font-size: 0.373333333333333rem;\\n}\\n\\n.analysis-detail .title-wrapper[data-v-5314579c] {\\n  padding: 0.266666666666667rem;\\n  line-height: 1.5em;\\n  display: -webkit-box;\\n  display: -webkit-flex;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n  -webkit-flex-direction: column;\\n  flex-direction: column;\\n}\\n\\n.analysis-detail .title-wrapper > span[data-v-5314579c] {\\n  font-size: 0.32rem;\\n  color: #949697;\\n}\\n\\n.analysis-detail .chart[data-v-5314579c] {\\n  width: 100%;\\n}\\n\\n.analysis-detail .chart > .chart-title[data-v-5314579c] {\\n  font-size: 0.373333333333333rem;\\n  color: #0b62c9;\\n  background-color: rgba(11,98,201,0.2);\\n  padding: 0.133333333333333rem 0.266666666666667rem;\\n}\\n\\n.analysis-detail .loading[data-v-5314579c] {\\n  position: absolute;\\n  top: 50%;\\n}\\n\\n.analysis-detail .slide-enter-active[data-v-5314579c],\\n.analysis-detail .slide-leave-active[data-v-5314579c] {\\n  -webkit-transition: all 0.3s;\\n  transition: all 0.3s;\\n}\\n\\n.analysis-detail .slide-enter[data-v-5314579c],\\n.analysis-detail .slide-leave-to[data-v-5314579c] {\\n  -webkit-transform: translate3d(100%, 0, 0);\\n  transform: translate3d(100%, 0, 0);\\n}\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n/* 918 */,\n/* 919 */,\n/* 920 */,\n/* 921 */,\n/* 922 */,\n/* 923 */,\n/* 924 */,\n/* 925 */,\n/* 926 */,\n/* 927 */,\n/* 928 */,\n/* 929 */,\n/* 930 */,\n/* 931 */,\n/* 932 */,\n/* 933 */,\n/* 934 */,\n/* 935 */,\n/* 936 */,\n/* 937 */,\n/* 938 */,\n/* 939 */,\n/* 940 */,\n/* 941 */,\n/* 942 */,\n/* 943 */,\n/* 944 */,\n/* 945 */,\n/* 946 */,\n/* 947 */,\n/* 948 */,\n/* 949 */,\n/* 950 */,\n/* 951 */,\n/* 952 */,\n/* 953 */,\n/* 954 */,\n/* 955 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(917);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(587)(\"3016f508\", content, true);\n\n/***/ }),\n/* 956 */,\n/* 957 */,\n/* 958 */,\n/* 959 */,\n/* 960 */,\n/* 961 */,\n/* 962 */,\n/* 963 */,\n/* 964 */,\n/* 965 */,\n/* 966 */,\n/* 967 */,\n/* 968 */,\n/* 969 */,\n/* 970 */,\n/* 971 */,\n/* 972 */,\n/* 973 */,\n/* 974 */,\n/* 975 */,\n/* 976 */,\n/* 977 */,\n/* 978 */,\n/* 979 */,\n/* 980 */,\n/* 981 */,\n/* 982 */,\n/* 983 */,\n/* 984 */,\n/* 985 */,\n/* 986 */,\n/* 987 */,\n/* 988 */,\n/* 989 */,\n/* 990 */,\n/* 991 */,\n/* 992 */,\n/* 993 */,\n/* 994 */,\n/* 995 */,\n/* 996 */,\n/* 997 */,\n/* 998 */,\n/* 999 */,\n/* 1000 */,\n/* 1001 */,\n/* 1002 */,\n/* 1003 */,\n/* 1004 */,\n/* 1005 */,\n/* 1006 */,\n/* 1007 */,\n/* 1008 */,\n/* 1009 */,\n/* 1010 */,\n/* 1011 */,\n/* 1012 */,\n/* 1013 */,\n/* 1014 */,\n/* 1015 */,\n/* 1016 */,\n/* 1017 */,\n/* 1018 */,\n/* 1019 */,\n/* 1020 */,\n/* 1021 */,\n/* 1022 */,\n/* 1023 */,\n/* 1024 */,\n/* 1025 */,\n/* 1026 */,\n/* 1027 */,\n/* 1028 */,\n/* 1029 */,\n/* 1030 */,\n/* 1031 */,\n/* 1032 */,\n/* 1033 */,\n/* 1034 */,\n/* 1035 */,\n/* 1036 */,\n/* 1037 */,\n/* 1038 */,\n/* 1039 */,\n/* 1040 */,\n/* 1041 */,\n/* 1042 */,\n/* 1043 */,\n/* 1044 */,\n/* 1045 */,\n/* 1046 */,\n/* 1047 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('transition', {\n    attrs: {\n      \"name\": \"slide\"\n    }\n  }, [_c('div', {\n    staticClass: \"analysis-detail\"\n  }, [_c('v-header', {\n    staticClass: \"header\",\n    attrs: {\n      \"title\": _vm.getTitle(_vm.analysisItem)\n    }\n  }, [_c('div', {\n    staticClass: \"change-btn\",\n    on: {\n      \"click\": _vm.changeType\n    },\n    slot: \"right\"\n  }, [_vm._v(\"\\n        切换\\n      \")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"title-wrapper\"\n  }, [_c('h2', [_vm._v(_vm._s(_vm.selectedItem.name))]), _vm._v(\" \"), _c('date-range', {\n    attrs: {\n      \"startTime\": _vm._f(\"formatDate\")(_vm.selectedItem.startPoTime),\n      \"endTime\": _vm._f(\"formatDate\")(_vm.selectedItem.endPoTime)\n    },\n    on: {\n      \"changeDate\": _vm._changeDate\n    }\n  })], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"chart\"\n  }, [_c('div', {\n    staticClass: \"chart-title\"\n  }, [_vm._v(\"时间趋势图表\")]), _vm._v(\" \"), _c('ve-chart', {\n    attrs: {\n      \"data\": _vm.normalizLineData(_vm.chartData0),\n      \"settings\": _vm.chartSettings\n    }\n  })], 1), _vm._v(\" \"), _c('loading', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (!_vm.chartData0.times.length),\n      expression: \"!chartData0.times.length\"\n    }],\n    staticClass: \"loading\"\n  })], 1)])\n},staticRenderFns: []}\n\n/***/ })\n]));\n\n\n// WEBPACK FOOTER //\n// industries/js/1.20ac980265e14878ec75.js","\n/* styles */\nrequire(\"!!../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-5314579c\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":true}!stylus-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vux-loader/src/style-loader.js!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./analysis-detail.vue\")\n\nvar Component = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../node_modules/vux-loader/src/script-loader.js!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./analysis-detail.vue\"),\n  /* template */\n  require(\"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-5314579c\\\"}!../../../node_modules/vux-loader/src/before-template-compiler-loader.js!../../../node_modules/vux-loader/src/template-loader.js!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./analysis-detail.vue\"),\n  /* scopeId */\n  \"data-v-5314579c\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/analysis-detail/analysis-detail.vue\n// module id = 591\n// module chunks = 1","/**\n * @module zrender/core/util\n */\n\n\n    // 用于处理merge时无法遍历Date等对象的问题\n    var BUILTIN_OBJECT = {\n        '[object Function]': 1,\n        '[object RegExp]': 1,\n        '[object Date]': 1,\n        '[object Error]': 1,\n        '[object CanvasGradient]': 1,\n        '[object CanvasPattern]': 1,\n        // For node-canvas\n        '[object Image]': 1,\n        '[object Canvas]': 1\n    };\n\n    var TYPED_ARRAY = {\n        '[object Int8Array]': 1,\n        '[object Uint8Array]': 1,\n        '[object Uint8ClampedArray]': 1,\n        '[object Int16Array]': 1,\n        '[object Uint16Array]': 1,\n        '[object Int32Array]': 1,\n        '[object Uint32Array]': 1,\n        '[object Float32Array]': 1,\n        '[object Float64Array]': 1\n    };\n\n    var objToString = Object.prototype.toString;\n\n    var arrayProto = Array.prototype;\n    var nativeForEach = arrayProto.forEach;\n    var nativeFilter = arrayProto.filter;\n    var nativeSlice = arrayProto.slice;\n    var nativeMap = arrayProto.map;\n    var nativeReduce = arrayProto.reduce;\n\n    /**\n     * Those data types can be cloned:\n     *     Plain object, Array, TypedArray, number, string, null, undefined.\n     * Those data types will be assgined using the orginal data:\n     *     BUILTIN_OBJECT\n     * Instance of user defined class will be cloned to a plain object, without\n     * properties in prototype.\n     * Other data types is not supported (not sure what will happen).\n     *\n     * Caution: do not support clone Date, for performance consideration.\n     * (There might be a large number of date in `series.data`).\n     * So date should not be modified in and out of echarts.\n     *\n     * @param {*} source\n     * @return {*} new\n     */\n    function clone(source) {\n        if (source == null || typeof source != 'object') {\n            return source;\n        }\n\n        var result = source;\n        var typeStr = objToString.call(source);\n\n        if (typeStr === '[object Array]') {\n            result = [];\n            for (var i = 0, len = source.length; i < len; i++) {\n                result[i] = clone(source[i]);\n            }\n        }\n        else if (TYPED_ARRAY[typeStr]) {\n            var Ctor = source.constructor;\n            if (source.constructor.from) {\n                result = Ctor.from(source);\n            }\n            else {\n                result = new Ctor(source.length);\n                for (var i = 0, len = source.length; i < len; i++) {\n                    result[i] = clone(source[i]);\n                }\n            }\n        }\n        else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n            result = {};\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    result[key] = clone(source[key]);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overwrite=false]\n     */\n    function merge(target, source, overwrite) {\n        // We should escapse that source is string\n        // and enter for ... in ...\n        if (!isObject(source) || !isObject(target)) {\n            return overwrite ? clone(source) : target;\n        }\n\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                var targetProp = target[key];\n                var sourceProp = source[key];\n\n                if (isObject(sourceProp)\n                    && isObject(targetProp)\n                    && !isArray(sourceProp)\n                    && !isArray(targetProp)\n                    && !isDom(sourceProp)\n                    && !isDom(targetProp)\n                    && !isBuiltInObject(sourceProp)\n                    && !isBuiltInObject(targetProp)\n                    && !isPrimitive(sourceProp)\n                    && !isPrimitive(targetProp)\n                ) {\n                    // 如果需要递归覆盖，就递归调用merge\n                    merge(targetProp, sourceProp, overwrite);\n                }\n                else if (overwrite || !(key in target)) {\n                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n                    // NOTE，在 target[key] 不存在的时候也是直接覆盖\n                    target[key] = clone(source[key], true);\n                }\n            }\n        }\n\n        return target;\n    }\n\n    /**\n     * @param {Array} targetAndSources The first item is target, and the rests are source.\n     * @param {boolean} [overwrite=false]\n     * @return {*} target\n     */\n    function mergeAll(targetAndSources, overwrite) {\n        var result = targetAndSources[0];\n        for (var i = 1, len = targetAndSources.length; i < len; i++) {\n            result = merge(result, targetAndSources[i], overwrite);\n        }\n        return result;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @memberOf module:zrender/core/util\n     */\n    function extend(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overlay=false]\n     * @memberOf module:zrender/core/util\n     */\n    function defaults(target, source, overlay) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)\n                && (overlay ? source[key] != null : target[key] == null)\n            ) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    function createCanvas() {\n        return document.createElement('canvas');\n    }\n    // FIXME\n    var _ctx;\n    function getContext() {\n        if (!_ctx) {\n            // Use util.createCanvas instead of createCanvas\n            // because createCanvas may be overwritten in different environment\n            _ctx = util.createCanvas().getContext('2d');\n        }\n        return _ctx;\n    }\n\n    /**\n     * 查询数组中元素的index\n     * @memberOf module:zrender/core/util\n     */\n    function indexOf(array, value) {\n        if (array) {\n            if (array.indexOf) {\n                return array.indexOf(value);\n            }\n            for (var i = 0, len = array.length; i < len; i++) {\n                if (array[i] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * 构造类继承关系\n     *\n     * @memberOf module:zrender/core/util\n     * @param {Function} clazz 源类\n     * @param {Function} baseClazz 基类\n     */\n    function inherits(clazz, baseClazz) {\n        var clazzPrototype = clazz.prototype;\n        function F() {}\n        F.prototype = baseClazz.prototype;\n        clazz.prototype = new F();\n\n        for (var prop in clazzPrototype) {\n            clazz.prototype[prop] = clazzPrototype[prop];\n        }\n        clazz.prototype.constructor = clazz;\n        clazz.superClass = baseClazz;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Object|Function} target\n     * @param {Object|Function} sorce\n     * @param {boolean} overlay\n     */\n    function mixin(target, source, overlay) {\n        target = 'prototype' in target ? target.prototype : target;\n        source = 'prototype' in source ? source.prototype : source;\n\n        defaults(target, source, overlay);\n    }\n\n    /**\n     * Consider typed array.\n     * @param {Array|TypedArray} data\n     */\n    function isArrayLike(data) {\n        if (! data) {\n            return;\n        }\n        if (typeof data == 'string') {\n            return false;\n        }\n        return typeof data.length == 'number';\n    }\n\n    /**\n     * 数组或对象遍历\n     * @memberOf module:zrender/core/util\n     * @param {Object|Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     */\n    function each(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.forEach && obj.forEach === nativeForEach) {\n            obj.forEach(cb, context);\n        }\n        else if (obj.length === +obj.length) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                cb.call(context, obj[i], i, obj);\n            }\n        }\n        else {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    cb.call(context, obj[key], key, obj);\n                }\n            }\n        }\n    }\n\n    /**\n     * 数组映射\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function map(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.map && obj.map === nativeMap) {\n            return obj.map(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                result.push(cb.call(context, obj[i], i, obj));\n            }\n            return result;\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {Object} [memo]\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function reduce(obj, cb, memo, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.reduce && obj.reduce === nativeReduce) {\n            return obj.reduce(cb, memo, context);\n        }\n        else {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                memo = cb.call(context, memo, obj[i], i, obj);\n            }\n            return memo;\n        }\n    }\n\n    /**\n     * 数组过滤\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function filter(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.filter && obj.filter === nativeFilter) {\n            return obj.filter(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                if (cb.call(context, obj[i], i, obj)) {\n                    result.push(obj[i]);\n                }\n            }\n            return result;\n        }\n    }\n\n    /**\n     * 数组项查找\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function find(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        for (var i = 0, len = obj.length; i < len; i++) {\n            if (cb.call(context, obj[i], i, obj)) {\n                return obj[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @param {*} context\n     * @return {Function}\n     */\n    function bind(func, context) {\n        var args = nativeSlice.call(arguments, 2);\n        return function () {\n            return func.apply(context, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @return {Function}\n     */\n    function curry(func) {\n        var args = nativeSlice.call(arguments, 1);\n        return function () {\n            return func.apply(this, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isArray(value) {\n        return objToString.call(value) === '[object Array]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isString(value) {\n        return objToString.call(value) === '[object String]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isObject(value) {\n        // Avoid a V8 JIT bug in Chrome 19-20.\n        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n        var type = typeof value;\n        return type === 'function' || (!!value && type == 'object');\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isBuiltInObject(value) {\n        return !!BUILTIN_OBJECT[objToString.call(value)];\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isDom(value) {\n        return typeof value === 'object'\n            && typeof value.nodeType === 'number'\n            && typeof value.ownerDocument === 'object';\n    }\n\n    /**\n     * Whether is exactly NaN. Notice isNaN('a') returns true.\n     * @param {*} value\n     * @return {boolean}\n     */\n    function eqNaN(value) {\n        return value !== value;\n    }\n\n    /**\n     * If value1 is not null, then return value1, otherwise judget rest of values.\n     * Low performance.\n     * @memberOf module:zrender/core/util\n     * @return {*} Final value\n     */\n    function retrieve(values) {\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            if (arguments[i] != null) {\n                return arguments[i];\n            }\n        }\n    }\n\n    function retrieve2(value0, value1) {\n        return value0 != null\n            ? value0\n            : value1;\n    }\n\n    function retrieve3(value0, value1, value2) {\n        return value0 != null\n            ? value0\n            : value1 != null\n            ? value1\n            : value2;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} arr\n     * @param {number} startIndex\n     * @param {number} endIndex\n     * @return {Array}\n     */\n    function slice() {\n        return Function.call.apply(nativeSlice, arguments);\n    }\n\n    /**\n     * Normalize css liked array configuration\n     * e.g.\n     *  3 => [3, 3, 3, 3]\n     *  [4, 2] => [4, 2, 4, 2]\n     *  [4, 3, 2] => [4, 3, 2, 3]\n     * @param {number|Array.<number>} val\n     * @return {Array.<number>}\n     */\n    function normalizeCssArray(val) {\n        if (typeof (val) === 'number') {\n            return [val, val, val, val];\n        }\n        var len = val.length;\n        if (len === 2) {\n            // vertical | horizontal\n            return [val[0], val[1], val[0], val[1]];\n        }\n        else if (len === 3) {\n            // top | horizontal | bottom\n            return [val[0], val[1], val[2], val[1]];\n        }\n        return val;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {boolean} condition\n     * @param {string} message\n     */\n    function assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n\n    var primitiveKey = '__ec_primitive__';\n    /**\n     * Set an object as primitive to be ignored traversing children in clone or merge\n     */\n    function setAsPrimitive(obj) {\n        obj[primitiveKey] = true;\n    }\n\n    function isPrimitive(obj) {\n        return obj[primitiveKey];\n    }\n\n    /**\n     * @constructor\n     * @param {Object} obj Only apply `ownProperty`.\n     */\n    function HashMap(obj) {\n        obj && each(obj, function (value, key) {\n            this.set(key, value);\n        }, this);\n    }\n\n    // Add prefix to avoid conflict with Object.prototype.\n    var HASH_MAP_PREFIX = '_ec_';\n    var HASH_MAP_PREFIX_LENGTH = 4;\n\n    HashMap.prototype = {\n        constructor: HashMap,\n        // Do not provide `has` method to avoid defining what is `has`.\n        // (We usually treat `null` and `undefined` as the same, different\n        // from ES6 Map).\n        get: function (key) {\n            return this[HASH_MAP_PREFIX + key];\n        },\n        set: function (key, value) {\n            this[HASH_MAP_PREFIX + key] = value;\n            // Comparing with invocation chaining, `return value` is more commonly\n            // used in this case: `var someVal = map.set('a', genVal());`\n            return value;\n        },\n        // Although util.each can be performed on this hashMap directly, user\n        // should not use the exposed keys, who are prefixed.\n        each: function (cb, context) {\n            context !== void 0 && (cb = bind(cb, context));\n            for (var prefixedKey in this) {\n                this.hasOwnProperty(prefixedKey)\n                    && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n            }\n        },\n        // Do not use this method if performance sensitive.\n        removeKey: function (key) {\n            delete this[key];\n        }\n    };\n\n    function createHashMap(obj) {\n        return new HashMap(obj);\n    }\n\n    var util = {\n        inherits: inherits,\n        mixin: mixin,\n        clone: clone,\n        merge: merge,\n        mergeAll: mergeAll,\n        extend: extend,\n        defaults: defaults,\n        getContext: getContext,\n        createCanvas: createCanvas,\n        indexOf: indexOf,\n        slice: slice,\n        find: find,\n        isArrayLike: isArrayLike,\n        each: each,\n        map: map,\n        reduce: reduce,\n        filter: filter,\n        bind: bind,\n        curry: curry,\n        isArray: isArray,\n        isString: isString,\n        isObject: isObject,\n        isFunction: isFunction,\n        isBuiltInObject: isBuiltInObject,\n        isDom: isDom,\n        eqNaN: eqNaN,\n        retrieve: retrieve,\n        retrieve2: retrieve2,\n        retrieve3: retrieve3,\n        assert: assert,\n        setAsPrimitive: setAsPrimitive,\n        createHashMap: createHashMap,\n        normalizeCssArray: normalizeCssArray,\n        noop: function () {}\n    };\n    module.exports = util;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/util.js\n// module id = 606\n// module chunks = 0 1 2","// Enable DEV mode when using source code without build. which has no __DEV__ variable\n// In build process 'typeof __DEV__' will be replace with 'boolean'\n// So this code will be removed or disabled anyway after built.\nif (typeof __DEV__ === 'undefined') {\n    // In browser\n    if (typeof window !== 'undefined') {\n        window.__DEV__ = true;\n    }\n    // In node\n    else if (typeof global !== 'undefined') {\n        global.__DEV__ = true;\n    }\n}\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\n\n/**\n * @module echarts\n */\n\n\n    var env = require('zrender/lib/core/env');\n\n    var GlobalModel = require('./model/Global');\n    var ExtensionAPI = require('./ExtensionAPI');\n    var CoordinateSystemManager = require('./CoordinateSystem');\n    var OptionManager = require('./model/OptionManager');\n\n    var ComponentModel = require('./model/Component');\n    var SeriesModel = require('./model/Series');\n\n    var ComponentView = require('./view/Component');\n    var ChartView = require('./view/Chart');\n    var graphic = require('./util/graphic');\n    var modelUtil = require('./util/model');\n    var throttle = require('./util/throttle');\n\n    var zrender = require('zrender');\n    var zrUtil = require('zrender/lib/core/util');\n    var colorTool = require('zrender/lib/tool/color');\n    var Eventful = require('zrender/lib/mixin/Eventful');\n    var timsort = require('zrender/lib/core/timsort');\n\n    var each = zrUtil.each;\n    var parseClassType = ComponentModel.parseClassType;\n\n    var PRIORITY_PROCESSOR_FILTER = 1000;\n    var PRIORITY_PROCESSOR_STATISTIC = 5000;\n\n\n    var PRIORITY_VISUAL_LAYOUT = 1000;\n    var PRIORITY_VISUAL_GLOBAL = 2000;\n    var PRIORITY_VISUAL_CHART = 3000;\n    var PRIORITY_VISUAL_COMPONENT = 4000;\n    // FIXME\n    // necessary?\n    var PRIORITY_VISUAL_BRUSH = 5000;\n\n    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n    // where they must not be invoked nestedly, except the only case: invoke\n    // dispatchAction with updateMethod \"none\" in main process.\n    // This flag is used to carry out this rule.\n    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n    var IN_MAIN_PROCESS = '__flagInMainProcess';\n    var HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\n    var OPTION_UPDATED = '__optionUpdated';\n    var ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\n    function createRegisterEventWithLowercaseName(method) {\n        return function (eventName, handler, context) {\n            // Event name is all lowercase\n            eventName = eventName && eventName.toLowerCase();\n            Eventful.prototype[method].call(this, eventName, handler, context);\n        };\n    }\n\n    /**\n     * @module echarts~MessageCenter\n     */\n    function MessageCenter() {\n        Eventful.call(this);\n    }\n    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\n    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\n    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\n    zrUtil.mixin(MessageCenter, Eventful);\n\n    /**\n     * @module echarts~ECharts\n     */\n    function ECharts(dom, theme, opts) {\n        opts = opts || {};\n\n        // Get theme by name\n        if (typeof theme === 'string') {\n            theme = themeStorage[theme];\n        }\n\n        /**\n         * @type {string}\n         */\n        this.id;\n        /**\n         * Group id\n         * @type {string}\n         */\n        this.group;\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        this._dom = dom;\n        /**\n         * @type {module:zrender/ZRender}\n         * @private\n         */\n        var zr = this._zr = zrender.init(dom, {\n            renderer: opts.renderer || 'canvas',\n            devicePixelRatio: opts.devicePixelRatio,\n            width: opts.width,\n            height: opts.height\n        });\n\n        /**\n         * Expect 60 pfs.\n         * @type {Function}\n         * @private\n         */\n        this._throttledZrFlush = throttle.throttle(zrUtil.bind(zr.flush, zr), 17);\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._theme = zrUtil.clone(theme);\n\n        /**\n         * @type {Array.<module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * @type {module:echarts/CoordinateSystem}\n         * @private\n         */\n        this._coordSysMgr = new CoordinateSystemManager();\n\n        /**\n         * @type {module:echarts/ExtensionAPI}\n         * @private\n         */\n        this._api = createExtensionAPI(this);\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:echarts~MessageCenter}\n         * @private\n         */\n        this._messageCenter = new MessageCenter();\n\n        // Init mouse events\n        this._initEvents();\n\n        // In case some people write `window.onresize = chart.resize`\n        this.resize = zrUtil.bind(this.resize, this);\n\n        // Can't dispatch action during rendering procedure\n        this._pendingActions = [];\n        // Sort on demand\n        function prioritySortFunc(a, b) {\n            return a.prio - b.prio;\n        }\n        timsort(visualFuncs, prioritySortFunc);\n        timsort(dataProcessorFuncs, prioritySortFunc);\n\n        zr.animation.on('frame', this._onframe, this);\n\n        // ECharts instance can be used as value.\n        zrUtil.setAsPrimitive(this);\n    }\n\n    var echartsProto = ECharts.prototype;\n\n    echartsProto._onframe = function () {\n        // Lazy update\n        if (this[OPTION_UPDATED]) {\n            var silent = this[OPTION_UPDATED].silent;\n\n            this[IN_MAIN_PROCESS] = true;\n\n            updateMethods.prepareAndUpdate.call(this);\n\n            this[IN_MAIN_PROCESS] = false;\n\n            this[OPTION_UPDATED] = false;\n\n            flushPendingActions.call(this, silent);\n\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n    /**\n     * @return {HTMLElement}\n     */\n    echartsProto.getDom = function () {\n        return this._dom;\n    };\n\n    /**\n     * @return {module:zrender~ZRender}\n     */\n    echartsProto.getZr = function () {\n        return this._zr;\n    };\n\n    /**\n     * Usage:\n     * chart.setOption(option, notMerge, lazyUpdate);\n     * chart.setOption(option, {\n     *     notMerge: ...,\n     *     lazyUpdate: ...,\n     *     silent: ...\n     * });\n     *\n     * @param {Object} option\n     * @param {Object|boolean} [opts] opts or notMerge.\n     * @param {boolean} [opts.notMerge=false]\n     * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n     */\n    echartsProto.setOption = function (option, notMerge, lazyUpdate) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\n        }\n\n        var silent;\n        if (zrUtil.isObject(notMerge)) {\n            lazyUpdate = notMerge.lazyUpdate;\n            silent = notMerge.silent;\n            notMerge = notMerge.notMerge;\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        if (!this._model || notMerge) {\n            var optionManager = new OptionManager(this._api);\n            var theme = this._theme;\n            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n            ecModel.init(null, null, theme, optionManager);\n        }\n\n        this._model.setOption(option, optionPreprocessorFuncs);\n\n        if (lazyUpdate) {\n            this[OPTION_UPDATED] = {silent: silent};\n            this[IN_MAIN_PROCESS] = false;\n        }\n        else {\n            updateMethods.prepareAndUpdate.call(this);\n            // Ensure zr refresh sychronously, and then pixel in canvas can be\n            // fetched after `setOption`.\n            this._zr.flush();\n\n            this[OPTION_UPDATED] = false;\n            this[IN_MAIN_PROCESS] = false;\n\n            flushPendingActions.call(this, silent);\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n\n    /**\n     * @DEPRECATED\n     */\n    echartsProto.setTheme = function () {\n        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n    };\n\n    /**\n     * @return {module:echarts/model/Global}\n     */\n    echartsProto.getModel = function () {\n        return this._model;\n    };\n\n    /**\n     * @return {Object}\n     */\n    echartsProto.getOption = function () {\n        return this._model && this._model.getOption();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getWidth = function () {\n        return this._zr.getWidth();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getHeight = function () {\n        return this._zr.getHeight();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getDevicePixelRatio = function () {\n        return this._zr.painter.dpr || window.devicePixelRatio || 1;\n    };\n\n    /**\n     * Get canvas which has all thing rendered\n     * @param {Object} opts\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getRenderedCanvas = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        opts = opts || {};\n        opts.pixelRatio = opts.pixelRatio || 1;\n        opts.backgroundColor = opts.backgroundColor\n            || this._model.get('backgroundColor');\n        var zr = this._zr;\n        var list = zr.storage.getDisplayList();\n        // Stop animations\n        zrUtil.each(list, function (el) {\n            el.stopAnimation(true);\n        });\n        return zr.painter.getRenderedCanvas(opts);\n    };\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     * @param {string} [opts.excludeComponents]\n     */\n    echartsProto.getDataURL = function (opts) {\n        opts = opts || {};\n        var excludeComponents = opts.excludeComponents;\n        var ecModel = this._model;\n        var excludesComponentViews = [];\n        var self = this;\n\n        each(excludeComponents, function (componentType) {\n            ecModel.eachComponent({\n                mainType: componentType\n            }, function (component) {\n                var view = self._componentsMap[component.__viewId];\n                if (!view.group.ignore) {\n                    excludesComponentViews.push(view);\n                    view.group.ignore = true;\n                }\n            });\n        });\n\n        var url = this.getRenderedCanvas(opts).toDataURL(\n            'image/' + (opts && opts.type || 'png')\n        );\n\n        each(excludesComponentViews, function (view) {\n            view.group.ignore = false;\n        });\n        return url;\n    };\n\n\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getConnectedDataURL = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        var groupId = this.group;\n        var mathMin = Math.min;\n        var mathMax = Math.max;\n        var MAX_NUMBER = Infinity;\n        if (connectedGroups[groupId]) {\n            var left = MAX_NUMBER;\n            var top = MAX_NUMBER;\n            var right = -MAX_NUMBER;\n            var bottom = -MAX_NUMBER;\n            var canvasList = [];\n            var dpr = (opts && opts.pixelRatio) || 1;\n\n            zrUtil.each(instances, function (chart, id) {\n                if (chart.group === groupId) {\n                    var canvas = chart.getRenderedCanvas(\n                        zrUtil.clone(opts)\n                    );\n                    var boundingRect = chart.getDom().getBoundingClientRect();\n                    left = mathMin(boundingRect.left, left);\n                    top = mathMin(boundingRect.top, top);\n                    right = mathMax(boundingRect.right, right);\n                    bottom = mathMax(boundingRect.bottom, bottom);\n                    canvasList.push({\n                        dom: canvas,\n                        left: boundingRect.left,\n                        top: boundingRect.top\n                    });\n                }\n            });\n\n            left *= dpr;\n            top *= dpr;\n            right *= dpr;\n            bottom *= dpr;\n            var width = right - left;\n            var height = bottom - top;\n            var targetCanvas = zrUtil.createCanvas();\n            targetCanvas.width = width;\n            targetCanvas.height = height;\n            var zr = zrender.init(targetCanvas);\n\n            each(canvasList, function (item) {\n                var img = new graphic.Image({\n                    style: {\n                        x: item.left * dpr - left,\n                        y: item.top * dpr - top,\n                        image: item.dom\n                    }\n                });\n                zr.add(img);\n            });\n            zr.refreshImmediately();\n\n            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n        }\n        else {\n            return this.getDataURL(opts);\n        }\n    };\n\n    /**\n     * Convert from logical coordinate system to pixel coordinate system.\n     * See CoordinateSystem#convertToPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId, geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n\n    /**\n     * Convert from pixel coordinate system to logical coordinate system.\n     * See CoordinateSystem#convertFromPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\n    function doConvertPixel(methodName, finder, value) {\n        var ecModel = this._model;\n        var coordSysList = this._coordSysMgr.getCoordinateSystems();\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        for (var i = 0; i < coordSysList.length; i++) {\n            var coordSys = coordSysList[i];\n            if (coordSys[methodName]\n                && (result = coordSys[methodName](ecModel, finder, value)) != null\n            ) {\n                return result;\n            }\n        }\n\n        if (__DEV__) {\n            console.warn(\n                'No coordinate system that supports ' + methodName + ' found by the given finder.'\n            );\n        }\n    }\n\n    /**\n     * Is the specified coordinate systems or components contain the given pixel point.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {boolean} result\n     */\n    echartsProto.containPixel = function (finder, value) {\n        var ecModel = this._model;\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        zrUtil.each(finder, function (models, key) {\n            key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n                var coordSys = model.coordinateSystem;\n                if (coordSys && coordSys.containPoint) {\n                    result |= !!coordSys.containPoint(value);\n                }\n                else if (key === 'seriesModels') {\n                    var view = this._chartsMap[model.__viewId];\n                    if (view && view.containPoint) {\n                        result |= view.containPoint(value, model);\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.warn(key + ': ' + (view\n                                ? 'The found component do not support containPoint.'\n                                : 'No view mapping to the found component.'\n                            ));\n                        }\n                    }\n                }\n                else {\n                    if (__DEV__) {\n                        console.warn(key + ': containPoint is not supported');\n                    }\n                }\n            }, this);\n        }, this);\n\n        return !!result;\n    };\n\n    /**\n     * Get visual from series or data.\n     * @param {string|Object} finder\n     *        If string, e.g., 'series', means {seriesIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            dataIndex / dataIndexInside\n     *        }\n     *        If dataIndex is not specified, series visual will be fetched,\n     *        but not data item visual.\n     *        If all of seriesIndex, seriesId, seriesName are not specified,\n     *        visual will be fetched from first series.\n     * @param {string} visualType 'color', 'symbol', 'symbolSize'\n     */\n    echartsProto.getVisual = function (finder, visualType) {\n        var ecModel = this._model;\n\n        finder = modelUtil.parseFinder(ecModel, finder, {defaultMainType: 'series'});\n\n        var seriesModel = finder.seriesModel;\n\n        if (__DEV__) {\n            if (!seriesModel) {\n                console.warn('There is no specified seires model');\n            }\n        }\n\n        var data = seriesModel.getData();\n\n        var dataIndexInside = finder.hasOwnProperty('dataIndexInside')\n            ? finder.dataIndexInside\n            : finder.hasOwnProperty('dataIndex')\n            ? data.indexOfRawIndex(finder.dataIndex)\n            : null;\n\n        return dataIndexInside != null\n            ? data.getItemVisual(dataIndexInside, visualType)\n            : data.getVisual(visualType);\n    };\n\n    /**\n     * Get view of corresponding component model\n     * @param  {module:echarts/model/Component} componentModel\n     * @return {module:echarts/view/Component}\n     */\n    echartsProto.getViewOfComponentModel = function (componentModel) {\n        return this._componentsMap[componentModel.__viewId];\n    };\n\n    /**\n     * Get view of corresponding series model\n     * @param  {module:echarts/model/Series} seriesModel\n     * @return {module:echarts/view/Chart}\n     */\n    echartsProto.getViewOfSeriesModel = function (seriesModel) {\n        return this._chartsMap[seriesModel.__viewId];\n    };\n\n\n    var updateMethods = {\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        update: function (payload) {\n            // console.profile && console.profile('update');\n\n            var ecModel = this._model;\n            var api = this._api;\n            var coordSysMgr = this._coordSysMgr;\n            var zr = this._zr;\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            // Fixme First time update ?\n            ecModel.restoreData();\n\n            // TODO\n            // Save total ecModel here for undo/redo (after restoring data and before processing data).\n            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n\n            // Create new coordinate system each update\n            // In LineView may save the old coordinate system and use it to get the orignal point\n            coordSysMgr.create(this._model, this._api);\n\n            processData.call(this, ecModel, api);\n\n            stackSeriesData.call(this, ecModel);\n\n            coordSysMgr.update(ecModel, api);\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            doRender.call(this, ecModel, payload);\n\n            // Set background\n            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n\n            var painter = zr.painter;\n            // TODO all use clearColor ?\n            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n                zr.configLayer(0, {\n                    clearColor: backgroundColor\n                });\n            }\n            else {\n                // In IE8\n                if (!env.canvasSupported) {\n                    var colorArr = colorTool.parse(backgroundColor);\n                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\n                    if (colorArr[3] === 0) {\n                        backgroundColor = 'transparent';\n                    }\n                }\n                if (backgroundColor.colorStops || backgroundColor.image) {\n                    // Gradient background\n                    // FIXME Fixed layer？\n                    zr.configLayer(0, {\n                        clearColor: backgroundColor\n                    });\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n\n                    this._dom.style.background = 'transparent';\n                }\n                else {\n                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n                        zr.configLayer(0, {\n                            clearColor: null\n                        });\n                    }\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n\n                    this._dom.style.background = backgroundColor;\n                }\n            }\n\n            each(postUpdateFuncs, function (func) {\n                func(ecModel, api);\n            });\n\n            // console.profile && console.profileEnd('update');\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateView: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateVisual: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload, true);\n\n            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateLayout: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            doLayout.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        prepareAndUpdate: function (payload) {\n            var ecModel = this._model;\n\n            prepareView.call(this, 'component', ecModel);\n\n            prepareView.call(this, 'chart', ecModel);\n\n            updateMethods.update.call(this, payload);\n        }\n    };\n\n    /**\n     * @private\n     */\n    function updateDirectly(ecIns, method, payload, mainType, subType) {\n        var ecModel = ecIns._model;\n\n        // broadcast\n        if (!mainType) {\n            each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n            return;\n        }\n\n        var query = {};\n        query[mainType + 'Id'] = payload[mainType + 'Id'];\n        query[mainType + 'Index'] = payload[mainType + 'Index'];\n        query[mainType + 'Name'] = payload[mainType + 'Name'];\n\n        var condition = {mainType: mainType, query: query};\n        subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n        // If dispatchAction before setOption, do nothing.\n        ecModel && ecModel.eachComponent(condition, function (model, index) {\n            callView(ecIns[\n                mainType === 'series' ? '_chartsMap' : '_componentsMap'\n            ][model.__viewId]);\n        }, ecIns);\n\n        function callView(view) {\n            view && view.__alive && view[method] && view[method](\n                view.__model, ecModel, ecIns._api, payload\n            );\n        }\n    }\n\n    /**\n     * Resize the chart\n     * @param {Object} opts\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @param {boolean} [opts.silent=false]\n     */\n    echartsProto.resize = function (opts) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        this._zr.resize(opts);\n\n        var optionChanged = this._model && this._model.resetOption('media');\n        var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n\n        updateMethods[updateMethod].call(this);\n\n        // Resize loading effect\n        this._loadingFX && this._loadingFX.resize();\n\n        this[IN_MAIN_PROCESS] = false;\n\n        var silent = opts && opts.silent;\n\n        flushPendingActions.call(this, silent);\n\n        triggerUpdatedEvent.call(this, silent);\n    };\n\n    /**\n     * Show loading effect\n     * @param  {string} [name='default']\n     * @param  {Object} [cfg]\n     */\n    echartsProto.showLoading = function (name, cfg) {\n        if (zrUtil.isObject(name)) {\n            cfg = name;\n            name = '';\n        }\n        name = name || 'default';\n\n        this.hideLoading();\n        if (!loadingEffects[name]) {\n            if (__DEV__) {\n                console.warn('Loading effects ' + name + ' not exists.');\n            }\n            return;\n        }\n        var el = loadingEffects[name](this._api, cfg);\n        var zr = this._zr;\n        this._loadingFX = el;\n\n        zr.add(el);\n    };\n\n    /**\n     * Hide loading effect\n     */\n    echartsProto.hideLoading = function () {\n        this._loadingFX && this._zr.remove(this._loadingFX);\n        this._loadingFX = null;\n    };\n\n    /**\n     * @param {Object} eventObj\n     * @return {Object}\n     */\n    echartsProto.makeActionFromEvent = function (eventObj) {\n        var payload = zrUtil.extend({}, eventObj);\n        payload.type = eventActionMap[eventObj.type];\n        return payload;\n    };\n\n    /**\n     * @pubilc\n     * @param {Object} payload\n     * @param {string} [payload.type] Action type\n     * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n     * @param {boolean} [opt.silent=false] Whether trigger events.\n     * @param {boolean} [opt.flush=undefined]\n     *                  true: Flush immediately, and then pixel in canvas can be fetched\n     *                      immediately. Caution: it might affect performance.\n     *                  false: Not not flush.\n     *                  undefined: Auto decide whether perform flush.\n     */\n    echartsProto.dispatchAction = function (payload, opt) {\n        if (!zrUtil.isObject(opt)) {\n            opt = {silent: !!opt};\n        }\n\n        if (!actions[payload.type]) {\n            return;\n        }\n\n        // Avoid dispatch action before setOption. Especially in `connect`.\n        if (!this._model) {\n            return;\n        }\n\n        // May dispatchAction in rendering procedure\n        if (this[IN_MAIN_PROCESS]) {\n            this._pendingActions.push(payload);\n            return;\n        }\n\n        doDispatchAction.call(this, payload, opt.silent);\n\n        if (opt.flush) {\n            this._zr.flush(true);\n        }\n        else if (opt.flush !== false && env.browser.weChat) {\n            // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n            // hang when sliding page (on touch event), which cause that zr does not\n            // refresh util user interaction finished, which is not expected.\n            // But `dispatchAction` may be called too frequently when pan on touch\n            // screen, which impacts performance if do not throttle them.\n            this._throttledZrFlush();\n        }\n\n        flushPendingActions.call(this, opt.silent);\n\n        triggerUpdatedEvent.call(this, opt.silent);\n    };\n\n    function doDispatchAction(payload, silent) {\n        var payloadType = payload.type;\n        var escapeConnect = payload.escapeConnect;\n        var actionWrap = actions[payloadType];\n        var actionInfo = actionWrap.actionInfo;\n\n        var cptType = (actionInfo.update || 'update').split(':');\n        var updateMethod = cptType.pop();\n        cptType = cptType[0] != null && parseClassType(cptType[0]);\n\n        this[IN_MAIN_PROCESS] = true;\n\n        var payloads = [payload];\n        var batched = false;\n        // Batch action\n        if (payload.batch) {\n            batched = true;\n            payloads = zrUtil.map(payload.batch, function (item) {\n                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n                item.batch = null;\n                return item;\n            });\n        }\n\n        var eventObjBatch = [];\n        var eventObj;\n        var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n\n        each(payloads, function (batchItem) {\n            // Action can specify the event by return it.\n            eventObj = actionWrap.action(batchItem, this._model, this._api);\n            // Emit event outside\n            eventObj = eventObj || zrUtil.extend({}, batchItem);\n            // Convert type to eventType\n            eventObj.type = actionInfo.event || eventObj.type;\n            eventObjBatch.push(eventObj);\n\n            // light update does not perform data process, layout and visual.\n            if (isHighDown) {\n                // method, payload, mainType, subType\n                updateDirectly(this, updateMethod, batchItem, 'series');\n            }\n            else if (cptType) {\n                updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n            }\n        }, this);\n\n        if (updateMethod !== 'none' && !isHighDown && !cptType) {\n            // Still dirty\n            if (this[OPTION_UPDATED]) {\n                // FIXME Pass payload ?\n                updateMethods.prepareAndUpdate.call(this, payload);\n                this[OPTION_UPDATED] = false;\n            }\n            else {\n                updateMethods[updateMethod].call(this, payload);\n            }\n        }\n\n        // Follow the rule of action batch\n        if (batched) {\n            eventObj = {\n                type: actionInfo.event || payloadType,\n                escapeConnect: escapeConnect,\n                batch: eventObjBatch\n            };\n        }\n        else {\n            eventObj = eventObjBatch[0];\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n    }\n\n    function flushPendingActions(silent) {\n        var pendingActions = this._pendingActions;\n        while (pendingActions.length) {\n            var payload = pendingActions.shift();\n            doDispatchAction.call(this, payload, silent);\n        }\n    }\n\n    function triggerUpdatedEvent(silent) {\n        !silent && this.trigger('updated');\n    }\n\n    /**\n     * Register event\n     * @method\n     */\n    echartsProto.on = createRegisterEventWithLowercaseName('on');\n    echartsProto.off = createRegisterEventWithLowercaseName('off');\n    echartsProto.one = createRegisterEventWithLowercaseName('one');\n\n    /**\n     * @param {string} methodName\n     * @private\n     */\n    function invokeUpdateMethod(methodName, ecModel, payload) {\n        var api = this._api;\n\n        // Update all components\n        each(this._componentsViews, function (component) {\n            var componentModel = component.__model;\n            component[methodName](componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, component);\n        }, this);\n\n        // Upate all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chart = this._chartsMap[seriesModel.__viewId];\n            chart[methodName](seriesModel, ecModel, api, payload);\n\n            updateZ(seriesModel, chart);\n\n            updateProgressiveAndBlend(seriesModel, chart);\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Post render\n        each(postUpdateFuncs, function (func) {\n            func(ecModel, api);\n        });\n    }\n\n    /**\n     * Prepare view instances of charts and components\n     * @param  {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function prepareView(type, ecModel) {\n        var isComponent = type === 'component';\n        var viewList = isComponent ? this._componentsViews : this._chartsViews;\n        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n        var zr = this._zr;\n\n        for (var i = 0; i < viewList.length; i++) {\n            viewList[i].__alive = false;\n        }\n\n        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n            if (isComponent) {\n                if (componentType === 'series') {\n                    return;\n                }\n            }\n            else {\n                model = componentType;\n            }\n\n            // Consider: id same and type changed.\n            var viewId = '_ec_' + model.id + '_' + model.type;\n            var view = viewMap[viewId];\n            if (!view) {\n                var classType = parseClassType(model.type);\n                var Clazz = isComponent\n                    ? ComponentView.getClass(classType.main, classType.sub)\n                    : ChartView.getClass(classType.sub);\n                if (Clazz) {\n                    view = new Clazz();\n                    view.init(ecModel, this._api);\n                    viewMap[viewId] = view;\n                    viewList.push(view);\n                    zr.add(view.group);\n                }\n                else {\n                    // Error\n                    return;\n                }\n            }\n\n            model.__viewId = view.__id = viewId;\n            view.__alive = true;\n            view.__model = model;\n            view.group.__ecComponentInfo = {\n                mainType: model.mainType,\n                index: model.componentIndex\n            };\n        }, this);\n\n        for (var i = 0; i < viewList.length;) {\n            var view = viewList[i];\n            if (!view.__alive) {\n                zr.remove(view.group);\n                view.dispose(ecModel, this._api);\n                viewList.splice(i, 1);\n                delete viewMap[view.__id];\n                view.__id = view.group.__ecComponentInfo = null;\n            }\n            else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Processor data in each series\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function processData(ecModel, api) {\n        each(dataProcessorFuncs, function (process) {\n            process.func(ecModel, api);\n        });\n    }\n\n    /**\n     * @private\n     */\n    function stackSeriesData(ecModel) {\n        var stackedDataMap = {};\n        ecModel.eachSeries(function (series) {\n            var stack = series.get('stack');\n            var data = series.getData();\n            if (stack && data.type === 'list') {\n                var previousStack = stackedDataMap[stack];\n                // Avoid conflict with Object.prototype\n                if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n                    data.stackedOn = previousStack;\n                }\n                stackedDataMap[stack] = data;\n            }\n        });\n    }\n\n    /**\n     * Layout before each chart render there series, special visual encoding stage\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doLayout(ecModel, payload) {\n        var api = this._api;\n        each(visualFuncs, function (visual) {\n            if (visual.isLayout) {\n                visual.func(ecModel, api, payload);\n            }\n        });\n    }\n\n    /**\n     * Encode visual infomation from data after data processing\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @param {object} layout\n     * @param {boolean} [excludesLayout]\n     * @private\n     */\n    function doVisualEncoding(ecModel, payload, excludesLayout) {\n        var api = this._api;\n        ecModel.clearColorPalette();\n        ecModel.eachSeries(function (seriesModel) {\n            seriesModel.clearColorPalette();\n        });\n        each(visualFuncs, function (visual) {\n            (!excludesLayout || !visual.isLayout)\n                && visual.func(ecModel, api, payload);\n        });\n    }\n\n    /**\n     * Render each chart and component\n     * @private\n     */\n    function doRender(ecModel, payload) {\n        var api = this._api;\n        // Render all components\n        each(this._componentsViews, function (componentView) {\n            var componentModel = componentView.__model;\n            componentView.render(componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, componentView);\n        }, this);\n\n        each(this._chartsViews, function (chart) {\n            chart.__alive = false;\n        }, this);\n\n        // Render all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chartView = this._chartsMap[seriesModel.__viewId];\n            chartView.__alive = true;\n            chartView.render(seriesModel, ecModel, api, payload);\n\n            chartView.group.silent = !!seriesModel.get('silent');\n\n            updateZ(seriesModel, chartView);\n\n            updateProgressiveAndBlend(seriesModel, chartView);\n\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Remove groups of unrendered charts\n        each(this._chartsViews, function (chart) {\n            if (!chart.__alive) {\n                chart.remove(ecModel, api);\n            }\n        }, this);\n    }\n\n    var MOUSE_EVENT_NAMES = [\n        'click', 'dblclick', 'mouseover', 'mouseout', 'mousemove',\n        'mousedown', 'mouseup', 'globalout', 'contextmenu'\n    ];\n    /**\n     * @private\n     */\n    echartsProto._initEvents = function () {\n        each(MOUSE_EVENT_NAMES, function (eveName) {\n            this._zr.on(eveName, function (e) {\n                var ecModel = this.getModel();\n                var el = e.target;\n                var params;\n\n                // no e.target when 'globalout'.\n                if (eveName === 'globalout') {\n                    params = {};\n                }\n                else if (el && el.dataIndex != null) {\n                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                    params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n                }\n                // If element has custom eventData of components\n                else if (el && el.eventData) {\n                    params = zrUtil.extend({}, el.eventData);\n                }\n\n                if (params) {\n                    params.event = e;\n                    params.type = eveName;\n                    this.trigger(eveName, params);\n                }\n\n            }, this);\n        }, this);\n\n        each(eventActionMap, function (actionType, eventType) {\n            this._messageCenter.on(eventType, function (event) {\n                this.trigger(eventType, event);\n            }, this);\n        }, this);\n    };\n\n    /**\n     * @return {boolean}\n     */\n    echartsProto.isDisposed = function () {\n        return this._disposed;\n    };\n\n    /**\n     * Clear\n     */\n    echartsProto.clear = function () {\n        this.setOption({ series: [] }, true);\n    };\n\n    /**\n     * Dispose instance\n     */\n    echartsProto.dispose = function () {\n        if (this._disposed) {\n            if (__DEV__) {\n                console.warn('Instance ' + this.id + ' has been disposed');\n            }\n            return;\n        }\n        this._disposed = true;\n\n        var api = this._api;\n        var ecModel = this._model;\n\n        each(this._componentsViews, function (component) {\n            component.dispose(ecModel, api);\n        });\n        each(this._chartsViews, function (chart) {\n            chart.dispose(ecModel, api);\n        });\n\n        // Dispose after all views disposed\n        this._zr.dispose();\n\n        delete instances[this.id];\n    };\n\n    zrUtil.mixin(ECharts, Eventful);\n\n    function updateHoverLayerStatus(zr, ecModel) {\n        var storage = zr.storage;\n        var elCount = 0;\n        storage.traverse(function (el) {\n            if (!el.isGroup) {\n                elCount++;\n            }\n        });\n        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n            storage.traverse(function (el) {\n                if (!el.isGroup) {\n                    el.useHoverLayer = true;\n                }\n            });\n        }\n    }\n\n    /**\n     * Update chart progressive and blend.\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateProgressiveAndBlend(seriesModel, chartView) {\n        // Progressive configuration\n        var elCount = 0;\n        chartView.group.traverse(function (el) {\n            if (el.type !== 'group' && !el.ignore) {\n                elCount++;\n            }\n        });\n        var frameDrawNum = +seriesModel.get('progressive');\n        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n        if (needProgressive) {\n            chartView.group.traverse(function (el) {\n                // FIXME marker and other components\n                if (!el.isGroup) {\n                    el.progressive = needProgressive ?\n                        Math.floor(elCount++ / frameDrawNum) : -1;\n                    if (needProgressive) {\n                        el.stopAnimation(true);\n                    }\n                }\n            });\n        }\n\n        // Blend configration\n        var blendMode = seriesModel.get('blendMode') || null;\n        if (__DEV__) {\n            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n                console.warn('Only canvas support blendMode');\n            }\n        }\n        chartView.group.traverse(function (el) {\n            // FIXME marker and other components\n            if (!el.isGroup) {\n                el.setStyle('blend', blendMode);\n            }\n        });\n    }\n\n    /**\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateZ(model, view) {\n        var z = model.get('z');\n        var zlevel = model.get('zlevel');\n        // Set z and zlevel\n        view.group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n            }\n        });\n    }\n\n    function createExtensionAPI(ecInstance) {\n        var coordSysMgr = ecInstance._coordSysMgr;\n        return zrUtil.extend(new ExtensionAPI(ecInstance), {\n            // Inject methods\n            getCoordinateSystems: zrUtil.bind(\n                coordSysMgr.getCoordinateSystems, coordSysMgr\n            ),\n            getComponentByElement: function (el) {\n                while (el) {\n                    var modelInfo = el.__ecComponentInfo;\n                    if (modelInfo != null) {\n                        return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n                    }\n                    el = el.parent;\n                }\n            }\n        });\n    }\n\n    /**\n     * @type {Object} key: actionType.\n     * @inner\n     */\n    var actions = {};\n\n    /**\n     * Map eventType to actionType\n     * @type {Object}\n     */\n    var eventActionMap = {};\n\n    /**\n     * Data processor functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var dataProcessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var optionPreprocessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var postUpdateFuncs = [];\n\n    /**\n     * Visual encoding functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var visualFuncs = [];\n    /**\n     * Theme storage\n     * @type {Object.<key, Object>}\n     */\n    var themeStorage = {};\n    /**\n     * Loading effects\n     */\n    var loadingEffects = {};\n\n\n    var instances = {};\n    var connectedGroups = {};\n\n    var idBase = new Date() - 0;\n    var groupIdBase = new Date() - 0;\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n\n    /**\n     * @alias module:echarts\n     */\n    var echarts = {\n        /**\n         * @type {number}\n         */\n        version: '3.7.0',\n        dependencies: {\n            zrender: '3.6.0'\n        }\n    };\n\n    function enableConnect(chart) {\n        var STATUS_PENDING = 0;\n        var STATUS_UPDATING = 1;\n        var STATUS_UPDATED = 2;\n        var STATUS_KEY = '__connectUpdateStatus';\n\n        function updateConnectedChartsStatus(charts, status) {\n            for (var i = 0; i < charts.length; i++) {\n                var otherChart = charts[i];\n                otherChart[STATUS_KEY] = status;\n            }\n        }\n\n        zrUtil.each(eventActionMap, function (actionType, eventType) {\n            chart._messageCenter.on(eventType, function (event) {\n                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n                    if (event && event.escapeConnect) {\n                        return;\n                    }\n\n                    var action = chart.makeActionFromEvent(event);\n                    var otherCharts = [];\n\n                    zrUtil.each(instances, function (otherChart) {\n                        if (otherChart !== chart && otherChart.group === chart.group) {\n                            otherCharts.push(otherChart);\n                        }\n                    });\n\n                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n                    each(otherCharts, function (otherChart) {\n                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n                            otherChart.dispatchAction(action);\n                        }\n                    });\n                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n                }\n            });\n        });\n    }\n\n    /**\n     * @param {HTMLElement} dom\n     * @param {Object} [theme]\n     * @param {Object} opts\n     * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n     * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n     * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n     *                              Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n     *                               Can be 'auto' (the same as null/undefined)\n     */\n    echarts.init = function (dom, theme, opts) {\n        if (__DEV__) {\n            // Check version\n            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\n                throw new Error(\n                    'ZRender ' + zrender.version\n                    + ' is too old for ECharts ' + echarts.version\n                    + '. Current version need ZRender '\n                    + echarts.dependencies.zrender + '+'\n                );\n            }\n\n            if (!dom) {\n                throw new Error('Initialize failed: invalid dom.');\n            }\n        }\n\n        var existInstance = echarts.getInstanceByDom(dom);\n        if (existInstance) {\n            if (__DEV__) {\n                console.warn('There is a chart instance already initialized on the dom.');\n            }\n            return existInstance;\n        }\n\n        if (__DEV__) {\n            if (zrUtil.isDom(dom)\n                && dom.nodeName.toUpperCase() !== 'CANVAS'\n                && (\n                    (!dom.clientWidth && (!opts || opts.width == null))\n                    || (!dom.clientHeight && (!opts || opts.height == null))\n                )\n            ) {\n                console.warn('Can\\'t get dom width or height');\n            }\n        }\n\n        var chart = new ECharts(dom, theme, opts);\n        chart.id = 'ec_' + idBase++;\n        instances[chart.id] = chart;\n\n        if (dom.setAttribute) {\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n        }\n        else {\n            dom[DOM_ATTRIBUTE_KEY] = chart.id;\n        }\n\n        enableConnect(chart);\n\n        return chart;\n    };\n\n    /**\n     * @return {string|Array.<module:echarts~ECharts>} groupId\n     */\n    echarts.connect = function (groupId) {\n        // Is array of charts\n        if (zrUtil.isArray(groupId)) {\n            var charts = groupId;\n            groupId = null;\n            // If any chart has group\n            zrUtil.each(charts, function (chart) {\n                if (chart.group != null) {\n                    groupId = chart.group;\n                }\n            });\n            groupId = groupId || ('g_' + groupIdBase++);\n            zrUtil.each(charts, function (chart) {\n                chart.group = groupId;\n            });\n        }\n        connectedGroups[groupId] = true;\n        return groupId;\n    };\n\n    /**\n     * @DEPRECATED\n     * @return {string} groupId\n     */\n    echarts.disConnect = function (groupId) {\n        connectedGroups[groupId] = false;\n    };\n\n    /**\n     * @return {string} groupId\n     */\n    echarts.disconnect = echarts.disConnect;\n\n    /**\n     * Dispose a chart instance\n     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n     */\n    echarts.dispose = function (chart) {\n        if (typeof chart === 'string') {\n            chart = instances[chart];\n        }\n        else if (!(chart instanceof ECharts)){\n            // Try to treat as dom\n            chart = echarts.getInstanceByDom(chart);\n        }\n        if ((chart instanceof ECharts) && !chart.isDisposed()) {\n            chart.dispose();\n        }\n    };\n\n    /**\n     * @param  {HTMLElement} dom\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceByDom = function (dom) {\n        var key;\n        if (dom.getAttribute) {\n            key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n        }\n        else {\n            key = dom[DOM_ATTRIBUTE_KEY];\n        }\n        return instances[key];\n    };\n\n    /**\n     * @param {string} key\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceById = function (key) {\n        return instances[key];\n    };\n\n    /**\n     * Register theme\n     */\n    echarts.registerTheme = function (name, theme) {\n        themeStorage[name] = theme;\n    };\n\n    /**\n     * Register option preprocessor\n     * @param {Function} preprocessorFunc\n     */\n    echarts.registerPreprocessor = function (preprocessorFunc) {\n        optionPreprocessorFuncs.push(preprocessorFunc);\n    };\n\n    /**\n     * @param {number} [priority=1000]\n     * @param {Function} processorFunc\n     */\n    echarts.registerProcessor = function (priority, processorFunc) {\n        if (typeof priority === 'function') {\n            processorFunc = priority;\n            priority = PRIORITY_PROCESSOR_FILTER;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown processor priority');\n            }\n        }\n        dataProcessorFuncs.push({\n            prio: priority,\n            func: processorFunc\n        });\n    };\n\n    /**\n     * Register postUpdater\n     * @param {Function} postUpdateFunc\n     */\n    echarts.registerPostUpdate = function (postUpdateFunc) {\n        postUpdateFuncs.push(postUpdateFunc);\n    };\n\n    /**\n     * Usage:\n     * registerAction('someAction', 'someEvent', function () { ... });\n     * registerAction('someAction', function () { ... });\n     * registerAction(\n     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n     *     function () { ... }\n     * );\n     *\n     * @param {(string|Object)} actionInfo\n     * @param {string} actionInfo.type\n     * @param {string} [actionInfo.event]\n     * @param {string} [actionInfo.update]\n     * @param {string} [eventName]\n     * @param {Function} action\n     */\n    echarts.registerAction = function (actionInfo, eventName, action) {\n        if (typeof eventName === 'function') {\n            action = eventName;\n            eventName = '';\n        }\n        var actionType = zrUtil.isObject(actionInfo)\n            ? actionInfo.type\n            : ([actionInfo, actionInfo = {\n                event: eventName\n            }][0]);\n\n        // Event name is all lowercase\n        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n        eventName = actionInfo.event;\n\n        // Validate action type and event name.\n        zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n        if (!actions[actionType]) {\n            actions[actionType] = {action: action, actionInfo: actionInfo};\n        }\n        eventActionMap[eventName] = actionType;\n    };\n\n    /**\n     * @param {string} type\n     * @param {*} CoordinateSystem\n     */\n    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\n        CoordinateSystemManager.register(type, CoordinateSystem);\n    };\n\n    /**\n     * Get dimensions of specified coordinate system.\n     * @param {string} type\n     * @return {Array.<string|Object>}\n     */\n    echarts.getCoordinateSystemDimensions = function (type) {\n        var coordSysCreator = CoordinateSystemManager.get(type);\n        if (coordSysCreator) {\n            return coordSysCreator.getDimensionsInfo\n                    ? coordSysCreator.getDimensionsInfo()\n                    : coordSysCreator.dimensions.slice();\n        }\n    };\n\n    /**\n     * Layout is a special stage of visual encoding\n     * Most visual encoding like color are common for different chart\n     * But each chart has it's own layout algorithm\n     *\n     * @param {number} [priority=1000]\n     * @param {Function} layoutFunc\n     */\n    echarts.registerLayout = function (priority, layoutFunc) {\n        if (typeof priority === 'function') {\n            layoutFunc = priority;\n            priority = PRIORITY_VISUAL_LAYOUT;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown layout priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: layoutFunc,\n            isLayout: true\n        });\n    };\n\n    /**\n     * @param {number} [priority=3000]\n     * @param {Function} visualFunc\n     */\n    echarts.registerVisual = function (priority, visualFunc) {\n        if (typeof priority === 'function') {\n            visualFunc = priority;\n            priority = PRIORITY_VISUAL_CHART;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown visual priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: visualFunc\n        });\n    };\n\n    /**\n     * @param {string} name\n     */\n    echarts.registerLoading = function (name, loadingFx) {\n        loadingEffects[name] = loadingFx;\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentModel = function (opts/*, superClass*/) {\n        // var Clazz = ComponentModel;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentView = function (opts/*, superClass*/) {\n        // var Clazz = ComponentView;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentView.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendSeriesModel = function (opts/*, superClass*/) {\n        // var Clazz = SeriesModel;\n        // if (superClass) {\n        //     superClass = 'series.' + superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return SeriesModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendChartView = function (opts/*, superClass*/) {\n        // var Clazz = ChartView;\n        // if (superClass) {\n        //     superClass = superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ChartView.getClass(classType.main, true);\n        // }\n        return ChartView.extend(opts);\n    };\n\n    /**\n     * ZRender need a canvas context to do measureText.\n     * But in node environment canvas may be created by node-canvas.\n     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n     *\n     * Be careful of using it in the browser.\n     *\n     * @param {Function} creator\n     * @example\n     *     var Canvas = require('canvas');\n     *     var echarts = require('echarts');\n     *     echarts.setCanvasCreator(function () {\n     *         // Small size is enough.\n     *         return new Canvas(32, 32);\n     *     });\n     */\n    echarts.setCanvasCreator = function (creator) {\n        zrUtil.createCanvas = creator;\n    };\n\n    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, require('./visual/seriesColor'));\n    echarts.registerPreprocessor(require('./preprocessor/backwardCompat'));\n    echarts.registerLoading('default', require('./loading/default'));\n\n    // Default action\n    echarts.registerAction({\n        type: 'highlight',\n        event: 'highlight',\n        update: 'highlight'\n    }, zrUtil.noop);\n    echarts.registerAction({\n        type: 'downplay',\n        event: 'downplay',\n        update: 'downplay'\n    }, zrUtil.noop);\n\n\n    // --------\n    // Exports\n    // --------\n    echarts.zrender = zrender;\n\n    echarts.List = require('./data/List');\n    echarts.Model = require('./model/Model');\n\n    echarts.Axis = require('./coord/Axis');\n\n    echarts.graphic = require('./util/graphic');\n    echarts.number = require('./util/number');\n    echarts.format = require('./util/format');\n    echarts.throttle = throttle.throttle;\n    echarts.matrix = require('zrender/lib/core/matrix');\n    echarts.vector = require('zrender/lib/core/vector');\n    echarts.color = require('zrender/lib/tool/color');\n\n    echarts.util = {};\n    each([\n            'map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter',\n            'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction',\n            'extend', 'defaults', 'clone', 'merge'\n        ],\n        function (name) {\n            echarts.util[name] = zrUtil[name];\n        }\n    );\n\n    echarts.helper = require('./helper');\n\n\n    // PRIORITY\n    echarts.PRIORITY = {\n        PROCESSOR: {\n            FILTER: PRIORITY_PROCESSOR_FILTER,\n            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n        },\n        VISUAL: {\n            LAYOUT: PRIORITY_VISUAL_LAYOUT,\n            GLOBAL: PRIORITY_VISUAL_GLOBAL,\n            CHART: PRIORITY_VISUAL_CHART,\n            COMPONENT: PRIORITY_VISUAL_COMPONENT,\n            BRUSH: PRIORITY_VISUAL_BRUSH\n        }\n    };\n\n    module.exports = echarts;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/echarts.js\n// module id = 607\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var pathTool = require('zrender/lib/tool/path');\n    var Path = require('zrender/lib/graphic/Path');\n    var colorTool = require('zrender/lib/tool/color');\n    var matrix = require('zrender/lib/core/matrix');\n    var vector = require('zrender/lib/core/vector');\n    var Transformable = require('zrender/lib/mixin/Transformable');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n\n    var round = Math.round;\n    var mathMax = Math.max;\n    var mathMin = Math.min;\n\n    var EMPTY_OBJ = {};\n\n    var graphic = {};\n\n    graphic.Group = require('zrender/lib/container/Group');\n\n    graphic.Image = require('zrender/lib/graphic/Image');\n\n    graphic.Text = require('zrender/lib/graphic/Text');\n\n    graphic.Circle = require('zrender/lib/graphic/shape/Circle');\n\n    graphic.Sector = require('zrender/lib/graphic/shape/Sector');\n\n    graphic.Ring = require('zrender/lib/graphic/shape/Ring');\n\n    graphic.Polygon = require('zrender/lib/graphic/shape/Polygon');\n\n    graphic.Polyline = require('zrender/lib/graphic/shape/Polyline');\n\n    graphic.Rect = require('zrender/lib/graphic/shape/Rect');\n\n    graphic.Line = require('zrender/lib/graphic/shape/Line');\n\n    graphic.BezierCurve = require('zrender/lib/graphic/shape/BezierCurve');\n\n    graphic.Arc = require('zrender/lib/graphic/shape/Arc');\n\n    graphic.CompoundPath = require('zrender/lib/graphic/CompoundPath');\n\n    graphic.LinearGradient = require('zrender/lib/graphic/LinearGradient');\n\n    graphic.RadialGradient = require('zrender/lib/graphic/RadialGradient');\n\n    graphic.BoundingRect = BoundingRect;\n\n    /**\n     * Extend shape with parameters\n     */\n    graphic.extendShape = function (opts) {\n        return Path.extend(opts);\n    };\n\n    /**\n     * Extend path\n     */\n    graphic.extendPath = function (pathData, opts) {\n        return pathTool.extendFromString(pathData, opts);\n    };\n\n    /**\n     * Create a path element from path data string\n     * @param {string} pathData\n     * @param {Object} opts\n     * @param {module:zrender/core/BoundingRect} rect\n     * @param {string} [layout=cover] 'center' or 'cover'\n     */\n    graphic.makePath = function (pathData, opts, rect, layout) {\n        var path = pathTool.createFromString(pathData, opts);\n        var boundingRect = path.getBoundingRect();\n        if (rect) {\n            var aspect = boundingRect.width / boundingRect.height;\n\n            if (layout === 'center') {\n                // Set rect to center, keep width / height ratio.\n                var width = rect.height * aspect;\n                var height;\n                if (width <= rect.width) {\n                    height = rect.height;\n                }\n                else {\n                    width = rect.width;\n                    height = width / aspect;\n                }\n                var cx = rect.x + rect.width / 2;\n                var cy = rect.y + rect.height / 2;\n\n                rect.x = cx - width / 2;\n                rect.y = cy - height / 2;\n                rect.width = width;\n                rect.height = height;\n            }\n\n            graphic.resizePath(path, rect);\n        }\n        return path;\n    };\n\n    graphic.mergePath = pathTool.mergePath,\n\n    /**\n     * Resize a path to fit the rect\n     * @param {module:zrender/graphic/Path} path\n     * @param {Object} rect\n     */\n    graphic.resizePath = function (path, rect) {\n        if (!path.applyTransform) {\n            return;\n        }\n\n        var pathRect = path.getBoundingRect();\n\n        var m = pathRect.calculateTransform(rect);\n\n        path.applyTransform(m);\n    };\n\n    /**\n     * Sub pixel optimize line for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x1]\n     * @param {number} [param.shape.y1]\n     * @param {number} [param.shape.x2]\n     * @param {number} [param.shape.y2]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeLine = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n\n        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n        }\n        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n        }\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize rect for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x]\n     * @param {number} [param.shape.y]\n     * @param {number} [param.shape.width]\n     * @param {number} [param.shape.height]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeRect = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n        var originX = shape.x;\n        var originY = shape.y;\n        var originWidth = shape.width;\n        var originHeight = shape.height;\n        shape.x = subPixelOptimize(shape.x, lineWidth, true);\n        shape.y = subPixelOptimize(shape.y, lineWidth, true);\n        shape.width = Math.max(\n            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\n            originWidth === 0 ? 0 : 1\n        );\n        shape.height = Math.max(\n            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\n            originHeight === 0 ? 0 : 1\n        );\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize for canvas\n     *\n     * @param {number} position Coordinate, such as x, y\n     * @param {number} lineWidth Should be nonnegative integer.\n     * @param {boolean=} positiveOrNegative Default false (negative).\n     * @return {number} Optimized position.\n     */\n    graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\n        // Assure that (position + lineWidth / 2) is near integer edge,\n        // otherwise line will be fuzzy in canvas.\n        var doubledPosition = round(position * 2);\n        return (doubledPosition + round(lineWidth)) % 2 === 0\n            ? doubledPosition / 2\n            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n    };\n\n    function hasFillOrStroke(fillOrStroke) {\n        return fillOrStroke != null && fillOrStroke != 'none';\n    }\n\n    function liftColor(color) {\n        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n    }\n\n    /**\n     * @private\n     */\n    function cacheElementStl(el) {\n        if (el.__hoverStlDirty) {\n            var stroke = el.style.stroke;\n            var fill = el.style.fill;\n\n            // Create hoverStyle on mouseover\n            var hoverStyle = el.__hoverStl;\n            hoverStyle.fill = hoverStyle.fill\n                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n            hoverStyle.stroke = hoverStyle.stroke\n                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n\n            var normalStyle = {};\n            for (var name in hoverStyle) {\n                // See comment in `doSingleEnterHover`.\n                if (hoverStyle[name] != null) {\n                    normalStyle[name] = el.style[name];\n                }\n            }\n\n            el.__normalStl = normalStyle;\n\n            el.__hoverStlDirty = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    function doSingleEnterHover(el) {\n        if (el.__isHover) {\n            return;\n        }\n\n        cacheElementStl(el);\n\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.addHover(el, el.__hoverStl);\n        }\n        else {\n            // styles can be:\n            // {\n            //     label: {\n            //         normal: {\n            //             show: false,\n            //             position: 'outside',\n            //             fontSize: 18\n            //         },\n            //         emphasis: {\n            //             show: true\n            //         }\n            //     }\n            // },\n            // where properties of `emphasis` may not appear in `normal`. We previously use\n            // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n            // But consider rich text and setOption in merge mode, it is impossible to cover\n            // all properties in merge. So we use merge mode when setting style here, where\n            // only properties that is not `null/undefined` can be set. The disadventage:\n            // null/undefined can not be used to remove style any more in `emphasis`.\n            el.style.extendFrom(el.__hoverStl);\n            el.dirty(false);\n            el.z2 += 1;\n        }\n\n        el.__isHover = true;\n    }\n\n    /**\n     * @inner\n     */\n    function doSingleLeaveHover(el) {\n        if (!el.__isHover) {\n            return;\n        }\n\n        var normalStl = el.__normalStl;\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.removeHover(el);\n        }\n        else {\n            // Consider null/undefined value, should use\n            // `setStyle` but not `extendFrom(stl, true)`.\n            normalStl && el.setStyle(normalStl);\n            el.z2 -= 1;\n        }\n\n        el.__isHover = false;\n    }\n\n    /**\n     * @inner\n     */\n    function doEnterHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleEnterHover(child);\n                }\n            })\n            : doSingleEnterHover(el);\n    }\n\n    function doLeaveHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleLeaveHover(child);\n                }\n            })\n            : doSingleLeaveHover(el);\n    }\n\n    /**\n     * @inner\n     */\n    function setElementHoverStl(el, hoverStl) {\n        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n        // Often used when item group has a label element and it's hoverStyle is different\n        el.__hoverStl = el.hoverStyle || hoverStl || {};\n        el.__hoverStlDirty = true;\n\n        if (el.__isHover) {\n            cacheElementStl(el);\n        }\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOver(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOut(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doLeaveHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function enterEmphasis() {\n        this.__isEmphasis = true;\n        doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function leaveEmphasis() {\n        this.__isEmphasis = false;\n        doLeaveHover(this);\n    }\n\n    /**\n     * Set hover style of element.\n     * This method can be called repeatly without side-effects.\n     * @param {module:zrender/Element} el\n     * @param {Object} [hoverStyle]\n     * @param {Object} [opt]\n     * @param {boolean} [opt.hoverSilentOnTouch=false]\n     *        In touch device, mouseover event will be trigger on touchstart event\n     *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n     *        conviniently use hoverStyle when tap on touch screen without additional\n     *        code for compatibility.\n     *        But if the chart/component has select feature, which usually also use\n     *        hoverStyle, there might be conflict between 'select-highlight' and\n     *        'hover-highlight' especially when roam is enabled (see geo for example).\n     *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n     *        on touch device.\n     */\n    graphic.setHoverStyle = function (el, hoverStyle, opt) {\n        el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    setElementHoverStl(child, hoverStyle);\n                }\n            })\n            : setElementHoverStl(el, hoverStyle);\n\n        // Duplicated function will be auto-ignored, see Eventful.js.\n        el.on('mouseover', onElementMouseOver)\n          .on('mouseout', onElementMouseOut);\n\n        // Emphasis, normal can be triggered manually\n        el.on('emphasis', enterEmphasis)\n          .on('normal', leaveEmphasis);\n    };\n\n    /**\n     * Set basic textStyle properties.\n     * @param {Object|module:zrender/graphic/Style} textStyle\n     * @param {module:echarts/model/Model} model\n     * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n     * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n     */\n    graphic.setTextStyle = function (textStyle, textStyleModel, specifiedTextStyle, opt) {\n        setTextStyleCommon(textStyle, textStyleModel, opt);\n        specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n        textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n\n        return textStyle;\n    };\n\n    /**\n     * Set text option in the style\n     * @param {Object} textStyle\n     * @param {module:echarts/model/Model} labelModel\n     * @param {string|boolean} defaultColor Default text color.\n     *        If set as false, it will be processed as a emphasis style.\n     */\n    graphic.setText = function (textStyle, labelModel, defaultColor) {\n        var opt = {isRectText: true};\n        if (defaultColor === false) {\n            opt.forMerge = true;\n        }\n        else {\n            // Support setting color as 'auto' to get visual color.\n            opt.defaultTextColor = opt.autoColor = defaultColor;\n            opt.checkInside = checkInsideForSetText;\n        }\n        setTextStyleCommon(textStyle, labelModel, opt);\n        textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n    };\n\n    function checkInsideForSetText(labelModel, textPosition) {\n        return textPosition && textPosition.indexOf('inside') >= 0;\n    }\n\n    /**\n     * {\n     *      disableBox: boolean, Whether diable drawing box of block (outer most).\n     *      isRectText: boolean,\n     *      autoColor: string, specify a color when color is 'auto',\n     *                 for textFill, textStroke, textBackgroundColor, and textBorderColor,\n     *      defaultTextColor: string,\n     *      checkInside: function, higher priority than `defaultTextColor`.\n     *      forceRich: boolean,\n     *      forMerge: boolean\n     * }\n     */\n    function setTextStyleCommon(textStyle, textStyleModel, opt) {\n        // Consider there will be abnormal when merge hover style to normal style if given default value.\n        opt = opt || EMPTY_OBJ;\n\n        if (opt.isRectText) {\n            var textPosition = textStyleModel.getShallow('position')\n                || (opt.forMerge ? null : 'inside');\n            // 'outside' is not a valid zr textPostion value, but used\n            // in bar series, and magric type should be considered.\n            textPosition === 'outside' && (textPosition = 'top');\n            textStyle.textPosition = textPosition;\n            textStyle.textOffset = textStyleModel.getShallow('offset');\n            var labelRotate = textStyleModel.getShallow('rotate');\n            labelRotate != null && (labelRotate *= Math.PI / 180);\n            textStyle.textRotation = labelRotate;\n            textStyle.textDistance = zrUtil.retrieve2(\n                textStyleModel.getShallow('distance'), opt.forMerge ? null : 5\n            );\n        }\n\n        var ecModel = textStyleModel.ecModel;\n        var globalTextStyle = ecModel && ecModel.option.textStyle;\n\n        // Consider case:\n        // {\n        //     data: [{\n        //         value: 12,\n        //         label: {\n        //             normal: {\n        //                 rich: {\n        //                     // no 'a' here but using parent 'a'.\n        //                 }\n        //             }\n        //         }\n        //     }],\n        //     rich: {\n        //         a: { ... }\n        //     }\n        // }\n        var richItemNames = getRichItemNames(textStyleModel);\n        var richResult;\n        if (richItemNames) {\n            richResult = {};\n            for (var name in richItemNames) {\n                if (richItemNames.hasOwnProperty(name)) {\n                    // Cascade is supported in rich.\n                    var richTextStyle = textStyleModel.getModel(['rich', name]);\n                    // In rich, never `disableBox`.\n                    setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt);\n                }\n            }\n        }\n        textStyle.rich = richResult;\n\n        setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, true);\n\n        if (opt.forceRich && !opt.textStyle) {\n            opt.textStyle = {};\n        }\n\n        return textStyle;\n    }\n\n    // Consider case:\n    // {\n    //     data: [{\n    //         value: 12,\n    //         label: {\n    //             normal: {\n    //                 rich: {\n    //                     // no 'a' here but using parent 'a'.\n    //                 }\n    //             }\n    //         }\n    //     }],\n    //     rich: {\n    //         a: { ... }\n    //     }\n    // }\n    function getRichItemNames(textStyleModel) {\n        // Use object to remove duplicated names.\n        var richItemNameMap;\n        while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n            var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n            if (rich) {\n                richItemNameMap = richItemNameMap || {};\n                for (var name in rich) {\n                    if (rich.hasOwnProperty(name)) {\n                        richItemNameMap[name] = 1;\n                    }\n                }\n            }\n            textStyleModel = textStyleModel.parentModel;\n        }\n        return richItemNameMap;\n    }\n\n    function setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isBlock) {\n        var forMerge = opt.forMerge;\n\n        // In merge mode, default value should not be given.\n        globalTextStyle = !forMerge && globalTextStyle || EMPTY_OBJ;\n\n        var textFill = getAutoColor(textStyleModel.getShallow('color'));\n        var textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'));\n        var textLineWidth = textStyleModel.getShallow('textBorderWidth');\n\n        if (!forMerge) {\n            textFill == null && (textFill = globalTextStyle.color);\n            textStroke == null && (textStroke = globalTextStyle.textBorderColor);\n            textLineWidth == null && (textLineWidth = globalTextStyle.textBorderWidth);\n\n            if (textFill == null\n                && opt.checkInside\n                && opt.checkInside(textStyleModel, textStyle.textPosition)\n            ) {\n                textFill = '#fff';\n                // Consider text with #fff overflow its container.\n                if (textStroke == null) {\n                    textStroke = opt.defaultTextColor;\n                    textLineWidth == null && (textLineWidth = 2);\n                }\n            }\n\n            textFill == null && (textFill = opt.defaultTextColor);\n        }\n\n        textStyle.textFill = textFill;\n        textStyle.textStroke = textStroke;\n        textStyle.textLineWidth = textLineWidth;\n\n        // Do not use `getFont` here, because merge should be supported, where\n        // part of these properties may be changed in emphasis style, and the\n        // others should remain their original value got from normal style.\n        textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n        textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n        textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n        textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n\n        textStyle.textAlign = textStyleModel.getShallow('align');\n        textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign')\n            || textStyleModel.getShallow('baseline');\n\n        textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n        textStyle.textWidth = textStyleModel.getShallow('width');\n        textStyle.textHeight = textStyleModel.getShallow('height');\n        textStyle.textTag = textStyleModel.getShallow('tag');\n\n        if (!isBlock || !opt.disableBox) {\n            textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n            textStyle.textPadding = textStyleModel.getShallow('padding');\n            textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n            textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n            textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n\n            textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n            textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n            textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n            textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n        }\n\n        textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor')\n            || globalTextStyle.textShadowColor;\n        textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur')\n            || globalTextStyle.textShadowBlur;\n        textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX')\n            || globalTextStyle.textShadowOffsetX;\n        textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY')\n            || globalTextStyle.textShadowOffsetY;\n    }\n\n    function getAutoColor(color, opt) {\n        return color !== 'auto' ? color : (opt && opt.autoColor) ? opt.autoColor : null;\n    }\n\n    graphic.getFont = function (opt, ecModel) {\n        // ecModel or default text style model.\n        var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n        return [\n            // FIXME in node-canvas fontWeight is before fontStyle\n            opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '',\n            opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '',\n            (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px',\n            opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'\n        ].join(' ');\n    };\n\n    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n        if (typeof dataIndex === 'function') {\n            cb = dataIndex;\n            dataIndex = null;\n        }\n        // Do not check 'animation' property directly here. Consider this case:\n        // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n        // but its parent model (`seriesModel`) does.\n        var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n        if (animationEnabled) {\n            var postfix = isUpdate ? 'Update' : '';\n            var duration = animatableModel.getShallow('animationDuration' + postfix);\n            var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n            var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n            if (typeof animationDelay === 'function') {\n                animationDelay = animationDelay(\n                    dataIndex,\n                    animatableModel.getAnimationDelayParams\n                        ? animatableModel.getAnimationDelayParams(el, dataIndex)\n                        : null\n                );\n            }\n            if (typeof duration === 'function') {\n                duration = duration(dataIndex);\n            }\n\n            duration > 0\n                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb)\n                : (el.stopAnimation(), el.attr(props), cb && cb());\n        }\n        else {\n            el.stopAnimation();\n            el.attr(props);\n            cb && cb();\n        }\n    }\n\n    /**\n     * Update graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} [cb]\n     * @example\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n     *     // Or\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, function () { console.log('Animation done!'); });\n     */\n    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Init graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} cb\n     */\n    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Get transform matrix of target (param target),\n     * in coordinate of its ancestor (param ancestor)\n     *\n     * @param {module:zrender/mixin/Transformable} target\n     * @param {module:zrender/mixin/Transformable} [ancestor]\n     */\n    graphic.getTransform = function (target, ancestor) {\n        var mat = matrix.identity([]);\n\n        while (target && target !== ancestor) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n\n        return mat;\n    };\n\n    /**\n     * Apply transform to an vertex.\n     * @param {Array.<number>} target [x, y]\n     * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n     *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n     *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {Array.<number>} [x, y]\n     */\n    graphic.applyTransform = function (target, transform, invert) {\n        if (transform && !zrUtil.isArrayLike(transform)) {\n            transform = Transformable.getLocalTransform(transform);\n        }\n\n        if (invert) {\n            transform = matrix.invert([], transform);\n        }\n        return vector.applyTransform([], target, transform);\n    };\n\n    /**\n     * @param {string} direction 'left' 'right' 'top' 'bottom'\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n     */\n    graphic.transformDirection = function (direction, transform, invert) {\n\n        // Pick a base, ensure that transform result will not be (0, 0).\n        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[0]);\n        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[2]);\n\n        var vertex = [\n            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\n            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\n        ];\n\n        vertex = graphic.applyTransform(vertex, transform, invert);\n\n        return Math.abs(vertex[0]) > Math.abs(vertex[1])\n            ? (vertex[0] > 0 ? 'right' : 'left')\n            : (vertex[1] > 0 ? 'bottom' : 'top');\n    };\n\n    /**\n     * Apply group transition animation from g1 to g2.\n     * If no animatableModel, no animation.\n     */\n    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\n        if (!g1 || !g2) {\n            return;\n        }\n\n        function getElMap(g) {\n            var elMap = {};\n            g.traverse(function (el) {\n                if (!el.isGroup && el.anid) {\n                    elMap[el.anid] = el;\n                }\n            });\n            return elMap;\n        }\n        function getAnimatableProps(el) {\n            var obj = {\n                position: vector.clone(el.position),\n                rotation: el.rotation\n            };\n            if (el.shape) {\n                obj.shape = zrUtil.extend({}, el.shape);\n            }\n            return obj;\n        }\n        var elMap1 = getElMap(g1);\n\n        g2.traverse(function (el) {\n            if (!el.isGroup && el.anid) {\n                var oldEl = elMap1[el.anid];\n                if (oldEl) {\n                    var newProp = getAnimatableProps(el);\n                    el.attr(getAnimatableProps(oldEl));\n                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\n                }\n                // else {\n                //     if (el.previousProps) {\n                //         graphic.updateProps\n                //     }\n                // }\n            }\n        });\n    };\n\n    /**\n     * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n     * @param {Object} rect {x, y, width, height}\n     * @return {Array.<Array.<number>>} A new clipped points.\n     */\n    graphic.clipPointsByRect = function (points, rect) {\n        return zrUtil.map(points, function (point) {\n            var x = point[0];\n            x = mathMax(x, rect.x);\n            x = mathMin(x, rect.x + rect.width);\n            var y = point[1];\n            y = mathMax(y, rect.y);\n            y = mathMin(y, rect.y + rect.height);\n            return [x, y];\n        });\n    };\n\n    /**\n     * @param {Object} targetRect {x, y, width, height}\n     * @param {Object} rect {x, y, width, height}\n     * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n     */\n    graphic.clipRectByRect = function (targetRect, rect) {\n        var x = mathMax(targetRect.x, rect.x);\n        var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n        var y = mathMax(targetRect.y, rect.y);\n        var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n        if (x2 >= x && y2 >= y) {\n            return {\n                x: x,\n                y: y,\n                width: x2 - x,\n                height: y2 - y\n            };\n        }\n    };\n\n    /**\n     * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n     * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n     * @param {Object} [rect] {x, y, width, height}\n     * @return {module:zrender/Element} Icon path or image element.\n     */\n    graphic.createIcon = function (iconStr, opt, rect) {\n        opt = zrUtil.extend({rectHover: true}, opt);\n        var style = opt.style = {strokeNoScale: true};\n        rect = rect || {x: -1, y: -1, width: 2, height: 2};\n\n        if (iconStr) {\n            return iconStr.indexOf('image://') === 0\n                ? (\n                    style.image = iconStr.slice(8),\n                    zrUtil.defaults(style, rect),\n                    new graphic.Image(opt)\n                )\n                : (\n                    graphic.makePath(\n                        iconStr.replace('path://', ''),\n                        opt,\n                        rect,\n                        'center'\n                    )\n                );\n        }\n\n    };\n\n    module.exports = graphic;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/graphic.js\n// module id = 608\n// module chunks = 0 1 2","\n\n    var formatUtil = require('./format');\n    var nubmerUtil = require('./number');\n    var Model = require('../model/Model');\n    var zrUtil = require('zrender/lib/core/util');\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var modelUtil = {};\n\n    /**\n     * If value is not array, then translate it to array.\n     * @param  {*} value\n     * @return {Array} [value] or value\n     */\n    modelUtil.normalizeToArray = function (value) {\n        return value instanceof Array\n            ? value\n            : value == null\n            ? []\n            : [value];\n    };\n\n    /**\n     * Sync default option between normal and emphasis like `position` and `show`\n     * In case some one will write code like\n     *     label: {\n     *         normal: {\n     *             show: false,\n     *             position: 'outside',\n     *             fontSize: 18\n     *         },\n     *         emphasis: {\n     *             show: true\n     *         }\n     *     }\n     * @param {Object} opt\n     * @param {Array.<string>} subOpts\n     */\n     modelUtil.defaultEmphasis = function (opt, subOpts) {\n        if (opt) {\n            var emphasisOpt = opt.emphasis = opt.emphasis || {};\n            var normalOpt = opt.normal = opt.normal || {};\n\n            // Default emphasis option from normal\n            for (var i = 0, len = subOpts.length; i < len; i++) {\n                var subOptName = subOpts[i];\n                if (!emphasisOpt.hasOwnProperty(subOptName)\n                    && normalOpt.hasOwnProperty(subOptName)\n                ) {\n                    emphasisOpt[subOptName] = normalOpt[subOptName];\n                }\n            }\n        }\n    };\n\n    modelUtil.TEXT_STYLE_OPTIONS = [\n        'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n        'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth',\n        'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline',\n        'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY',\n        'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY',\n        'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding'\n    ];\n\n    // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n    //     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n    //     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n    //     // FIXME: deprecated, check and remove it.\n    //     'textStyle'\n    // ]);\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method retieves value from data.\n     * @param {string|number|Date|Array|Object} dataItem\n     * @return {number|string|Date|Array.<number|string|Date>}\n     */\n    modelUtil.getDataItemValue = function (dataItem) {\n        // Performance sensitive.\n        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n    };\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method determine if dataItem has extra option besides value\n     * @param {string|number|Date|Array|Object} dataItem\n     */\n    modelUtil.isDataItemOption = function (dataItem) {\n        return isObject(dataItem)\n            && !(dataItem instanceof Array);\n            // // markLine data can be array\n            // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n    };\n\n    /**\n     * This helper method convert value in data.\n     * @param {string|number|Date} value\n     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n     */\n    modelUtil.converDataValue = function (value, dimInfo) {\n        // Performance sensitive.\n        var dimType = dimInfo && dimInfo.type;\n        if (dimType === 'ordinal') {\n            return value;\n        }\n\n        if (dimType === 'time'\n            // spead up when using timestamp\n            && typeof value !== 'number'\n            && value != null\n            && value !== '-'\n        ) {\n            value = +nubmerUtil.parseDate(value);\n        }\n\n        // dimType defaults 'number'.\n        // If dimType is not ordinal and value is null or undefined or NaN or '-',\n        // parse to NaN.\n        return (value == null || value === '')\n            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n    };\n\n    /**\n     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n     * @param {module:echarts/data/List} data\n     * @param {Object} opt\n     * @param {string} [opt.seriesIndex]\n     * @param {Object} [opt.name]\n     * @param {Object} [opt.mainType]\n     * @param {Object} [opt.subType]\n     */\n    modelUtil.createDataFormatModel = function (data, opt) {\n        var model = new Model();\n        zrUtil.mixin(model, modelUtil.dataFormatMixin);\n        model.seriesIndex = opt.seriesIndex;\n        model.name = opt.name || '';\n        model.mainType = opt.mainType;\n        model.subType = opt.subType;\n\n        model.getData = function () {\n            return data;\n        };\n        return model;\n    };\n\n    // PENDING A little ugly\n    modelUtil.dataFormatMixin = {\n        /**\n         * Get params for formatter\n         * @param {number} dataIndex\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getDataParams: function (dataIndex, dataType) {\n            var data = this.getData(dataType);\n            var rawValue = this.getRawValue(dataIndex, dataType);\n            var rawDataIndex = data.getRawIndex(dataIndex);\n            var name = data.getName(dataIndex, true);\n            var itemOpt = data.getRawDataItem(dataIndex);\n            var color = data.getItemVisual(dataIndex, 'color');\n\n            return {\n                componentType: this.mainType,\n                componentSubType: this.subType,\n                seriesType: this.mainType === 'series' ? this.subType : null,\n                seriesIndex: this.seriesIndex,\n                seriesId: this.id,\n                seriesName: this.name,\n                name: name,\n                dataIndex: rawDataIndex,\n                data: itemOpt,\n                dataType: dataType,\n                value: rawValue,\n                color: color,\n                marker: formatUtil.getTooltipMarker(color),\n\n                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n                $vars: ['seriesName', 'name', 'value']\n            };\n        },\n\n        /**\n         * Format label\n         * @param {number} dataIndex\n         * @param {string} [status='normal'] 'normal' or 'emphasis'\n         * @param {string} [dataType]\n         * @param {number} [dimIndex]\n         * @param {string} [labelProp='label']\n         * @return {string}\n         */\n        getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n            status = status || 'normal';\n            var data = this.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var params = this.getDataParams(dataIndex, dataType);\n            if (dimIndex != null && (params.value instanceof Array)) {\n                params.value = params.value[dimIndex];\n            }\n\n            var formatter = itemModel.get([labelProp || 'label', status, 'formatter']);\n\n            if (typeof formatter === 'function') {\n                params.status = status;\n                return formatter(params);\n            }\n            else if (typeof formatter === 'string') {\n                return formatUtil.formatTpl(formatter, params);\n            }\n        },\n\n        /**\n         * Get raw value in option\n         * @param {number} idx\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getRawValue: function (idx, dataType) {\n            var data = this.getData(dataType);\n            var dataItem = data.getRawDataItem(idx);\n            if (dataItem != null) {\n                return (isObject(dataItem) && !(dataItem instanceof Array))\n                    ? dataItem.value : dataItem;\n            }\n        },\n\n        /**\n         * Should be implemented.\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         * @return {string} tooltip string\n         */\n        formatTooltip: zrUtil.noop\n    };\n\n    /**\n     * Mapping to exists for merge.\n     *\n     * @public\n     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n     * @param {Object|Array.<Object>} newCptOptions\n     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          index of which is the same as exists.\n     */\n    modelUtil.mappingToExists = function (exists, newCptOptions) {\n        // Mapping by the order by original option (but not order of\n        // new option) in merge mode. Because we should ensure\n        // some specified index (like xAxisIndex) is consistent with\n        // original option, which is easy to understand, espatially in\n        // media query. And in most case, merge option is used to\n        // update partial option but not be expected to change order.\n        newCptOptions = (newCptOptions || []).slice();\n\n        var result = zrUtil.map(exists || [], function (obj, index) {\n            return {exist: obj};\n        });\n\n        // Mapping by id or name if specified.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            // id has highest priority.\n            for (var i = 0; i < result.length; i++) {\n                if (!result[i].option // Consider name: two map to one.\n                    && cptOption.id != null\n                    && result[i].exist.id === cptOption.id + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n\n            for (var i = 0; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option // Consider name: two map to one.\n                    // Can not match when both ids exist but different.\n                    && (exist.id == null || cptOption.id == null)\n                    && cptOption.name != null\n                    && !modelUtil.isIdInner(cptOption)\n                    && !modelUtil.isIdInner(exist)\n                    && exist.name === cptOption.name + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n        });\n\n        // Otherwise mapping by index.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            var i = 0;\n            for (; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option\n                    // Existing model that already has id should be able to\n                    // mapped to (because after mapping performed model may\n                    // be assigned with a id, whish should not affect next\n                    // mapping), except those has inner id.\n                    && !modelUtil.isIdInner(exist)\n                    // Caution:\n                    // Do not overwrite id. But name can be overwritten,\n                    // because axis use name as 'show label text'.\n                    // 'exist' always has id and name and we dont\n                    // need to check it.\n                    && cptOption.id == null\n                ) {\n                    result[i].option = cptOption;\n                    break;\n                }\n            }\n\n            if (i >= result.length) {\n                result.push({option: cptOption});\n            }\n        });\n\n        return result;\n    };\n\n    /**\n     * Make id and name for mapping result (result of mappingToExists)\n     * into `keyInfo` field.\n     *\n     * @public\n     * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          which order is the same as exists.\n     * @return {Array.<Object>} The input.\n     */\n    modelUtil.makeIdAndName = function (mapResult) {\n        // We use this id to hash component models and view instances\n        // in echarts. id can be specified by user, or auto generated.\n\n        // The id generation rule ensures new view instance are able\n        // to mapped to old instance when setOption are called in\n        // no-merge mode. So we generate model id by name and plus\n        // type in view id.\n\n        // name can be duplicated among components, which is convenient\n        // to specify multi components (like series) by one name.\n\n        // Ensure that each id is distinct.\n        var idMap = zrUtil.createHashMap();\n\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            existCpt && idMap.set(existCpt.id, item);\n        });\n\n        each(mapResult, function (item, index) {\n            var opt = item.option;\n\n            zrUtil.assert(\n                !opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item,\n                'id duplicates: ' + (opt && opt.id)\n            );\n\n            opt && opt.id != null && idMap.set(opt.id, item);\n            !item.keyInfo && (item.keyInfo = {});\n        });\n\n        // Make name and id.\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            var opt = item.option;\n            var keyInfo = item.keyInfo;\n\n            if (!isObject(opt)) {\n                return;\n            }\n\n            // name can be overwitten. Consider case: axis.name = '20km'.\n            // But id generated by name will not be changed, which affect\n            // only in that case: setOption with 'not merge mode' and view\n            // instance will be recreated, which can be accepted.\n            keyInfo.name = opt.name != null\n                ? opt.name + ''\n                : existCpt\n                ? existCpt.name\n                : '\\0-'; // name may be displayed on screen, so use '-'.\n\n            if (existCpt) {\n                keyInfo.id = existCpt.id;\n            }\n            else if (opt.id != null) {\n                keyInfo.id = opt.id + '';\n            }\n            else {\n                // Consider this situatoin:\n                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n                // Series with the same name between optionA and optionB\n                // should be mapped.\n                var idNum = 0;\n                do {\n                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n                }\n                while (idMap.get(keyInfo.id));\n            }\n\n            idMap.set(keyInfo.id, item);\n        });\n    };\n\n    /**\n     * @public\n     * @param {Object} cptOption\n     * @return {boolean}\n     */\n    modelUtil.isIdInner = function (cptOption) {\n        return isObject(cptOption)\n            && cptOption.id\n            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n    };\n\n    /**\n     * A helper for removing duplicate items between batchA and batchB,\n     * and in themselves, and categorize by series.\n     *\n     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n     */\n    modelUtil.compressBatches = function (batchA, batchB) {\n        var mapA = {};\n        var mapB = {};\n\n        makeMap(batchA || [], mapA);\n        makeMap(batchB || [], mapB, mapA);\n\n        return [mapToArray(mapA), mapToArray(mapB)];\n\n        function makeMap(sourceBatch, map, otherMap) {\n            for (var i = 0, len = sourceBatch.length; i < len; i++) {\n                var seriesId = sourceBatch[i].seriesId;\n                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\n                var otherDataIndices = otherMap && otherMap[seriesId];\n\n                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n                    var dataIndex = dataIndices[j];\n\n                    if (otherDataIndices && otherDataIndices[dataIndex]) {\n                        otherDataIndices[dataIndex] = null;\n                    }\n                    else {\n                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n                    }\n                }\n            }\n        }\n\n        function mapToArray(map, isData) {\n            var result = [];\n            for (var i in map) {\n                if (map.hasOwnProperty(i) && map[i] != null) {\n                    if (isData) {\n                        result.push(+i);\n                    }\n                    else {\n                        var dataIndices = mapToArray(map[i], true);\n                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\n                    }\n                }\n            }\n            return result;\n        }\n    };\n\n    /**\n     * @param {module:echarts/data/List} data\n     * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n     *                         each of which can be Array or primary type.\n     * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n     */\n    modelUtil.queryDataIndex = function (data, payload) {\n        if (payload.dataIndexInside != null) {\n            return payload.dataIndexInside;\n        }\n        else if (payload.dataIndex != null) {\n            return zrUtil.isArray(payload.dataIndex)\n                ? zrUtil.map(payload.dataIndex, function (value) {\n                    return data.indexOfRawIndex(value);\n                })\n                : data.indexOfRawIndex(payload.dataIndex);\n        }\n        else if (payload.name != null) {\n            return zrUtil.isArray(payload.name)\n                ? zrUtil.map(payload.name, function (value) {\n                    return data.indexOfName(value);\n                })\n                : data.indexOfName(payload.name);\n        }\n    };\n\n    /**\n     * Enable property storage to any host object.\n     * Notice: Serialization is not supported.\n     *\n     * For example:\n     * var get = modelUitl.makeGetter();\n     *\n     * function some(hostObj) {\n     *      get(hostObj)._someProperty = 1212;\n     *      ...\n     * }\n     *\n     * @return {Function}\n     */\n    modelUtil.makeGetter = (function () {\n        var index = 0;\n        return function () {\n            var key = '\\0__ec_prop_getter_' + index++;\n            return function (hostObj) {\n                return hostObj[key] || (hostObj[key] = {});\n            };\n        };\n    })();\n\n    /**\n     * @param {module:echarts/model/Global} ecModel\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex, seriesId, seriesName,\n     *            geoIndex, geoId, geoName,\n     *            bmapIndex, bmapId, bmapName,\n     *            xAxisIndex, xAxisId, xAxisName,\n     *            yAxisIndex, yAxisId, yAxisName,\n     *            gridIndex, gridId, gridName,\n     *            ... (can be extended)\n     *        }\n     *        Each properties can be number|string|Array.<number>|Array.<string>\n     *        For example, a finder could be\n     *        {\n     *            seriesIndex: 3,\n     *            geoId: ['aa', 'cc'],\n     *            gridName: ['xx', 'rr']\n     *        }\n     *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n     *        If nothing or null/undefined specified, return nothing.\n     * @param {Object} [opt]\n     * @param {string} [opt.defaultMainType]\n     * @param {Array.<string>} [opt.includeMainTypes]\n     * @return {Object} result like:\n     *        {\n     *            seriesModels: [seriesModel1, seriesModel2],\n     *            seriesModel: seriesModel1, // The first model\n     *            geoModels: [geoModel1, geoModel2],\n     *            geoModel: geoModel1, // The first model\n     *            ...\n     *        }\n     */\n    modelUtil.parseFinder = function (ecModel, finder, opt) {\n        if (zrUtil.isString(finder)) {\n            var obj = {};\n            obj[finder + 'Index'] = 0;\n            finder = obj;\n        }\n\n        var defaultMainType = opt && opt.defaultMainType;\n        if (defaultMainType\n            && !has(finder, defaultMainType + 'Index')\n            && !has(finder, defaultMainType + 'Id')\n            && !has(finder, defaultMainType + 'Name')\n        ) {\n            finder[defaultMainType + 'Index'] = 0;\n        }\n\n        var result = {};\n\n        each(finder, function (value, key) {\n            var value = finder[key];\n\n            // Exclude 'dataIndex' and other illgal keys.\n            if (key === 'dataIndex' || key === 'dataIndexInside') {\n                result[key] = value;\n                return;\n            }\n\n            var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n            var mainType = parsedKey[1];\n            var queryType = (parsedKey[2] || '').toLowerCase();\n\n            if (!mainType\n                || !queryType\n                || value == null\n                || (queryType === 'index' && value === 'none')\n                || (opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0)\n            ) {\n                return;\n            }\n\n            var queryParam = {mainType: mainType};\n            if (queryType !== 'index' || value !== 'all') {\n                queryParam[queryType] = value;\n            }\n\n            var models = ecModel.queryComponents(queryParam);\n            result[mainType + 'Models'] = models;\n            result[mainType + 'Model'] = models[0];\n        });\n\n        return result;\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string|number} dataDim\n     * @return {string}\n     */\n    modelUtil.dataDimToCoordDim = function (data, dataDim) {\n        var dimensions = data.dimensions;\n        dataDim = data.getDimension(dataDim);\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimItem = data.getDimensionInfo(dimensions[i]);\n            if (dimItem.name === dataDim) {\n                return dimItem.coordDim;\n            }\n        }\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string} coordDim\n     * @return {Array.<string>} data dimensions on the coordDim.\n     */\n    modelUtil.coordDimToDataDim = function (data, coordDim) {\n        var dataDim = [];\n        each(data.dimensions, function (dimName) {\n            var dimItem = data.getDimensionInfo(dimName);\n            if (dimItem.coordDim === coordDim) {\n                dataDim[dimItem.coordDimIndex] = dimItem.name;\n            }\n        });\n        return dataDim;\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string} otherDim Can be `otherDims`\n     *                        like 'label' or 'tooltip'.\n     * @return {Array.<string>} data dimensions on the otherDim.\n     */\n    modelUtil.otherDimToDataDim = function (data, otherDim) {\n        var dataDim = [];\n        each(data.dimensions, function (dimName) {\n            var dimItem = data.getDimensionInfo(dimName);\n            var otherDims = dimItem.otherDims;\n            var dimIndex = otherDims[otherDim];\n            if (dimIndex != null && dimIndex !== false) {\n                dataDim[dimIndex] = dimItem.name;\n            }\n        });\n        return dataDim;\n    };\n\n    function has(obj, prop) {\n        return obj && obj.hasOwnProperty(prop);\n    }\n\n    module.exports = modelUtil;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/model.js\n// module id = 609\n// module chunks = 0 1 2","/**\n * 数值处理模块\n * @module echarts/util/number\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var number = {};\n\n    var RADIAN_EPSILON = 1e-4;\n\n    function _trim(str) {\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n\n    /**\n     * Linear mapping a value from domain to range\n     * @memberOf module:echarts/util/number\n     * @param  {(number|Array.<number>)} val\n     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n     * @param  {boolean} clamp\n     * @return {(number|Array.<number>}\n     */\n    number.linearMap = function (val, domain, range, clamp) {\n        var subDomain = domain[1] - domain[0];\n        var subRange = range[1] - range[0];\n\n        if (subDomain === 0) {\n            return subRange === 0\n                ? range[0]\n                : (range[0] + range[1]) / 2;\n        }\n\n        // Avoid accuracy problem in edge, such as\n        // 146.39 - 62.83 === 83.55999999999999.\n        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n        // It is a little verbose for efficiency considering this method\n        // is a hotspot.\n        if (clamp) {\n            if (subDomain > 0) {\n                if (val <= domain[0]) {\n                    return range[0];\n                }\n                else if (val >= domain[1]) {\n                    return range[1];\n                }\n            }\n            else {\n                if (val >= domain[0]) {\n                    return range[0];\n                }\n                else if (val <= domain[1]) {\n                    return range[1];\n                }\n            }\n        }\n        else {\n            if (val === domain[0]) {\n                return range[0];\n            }\n            if (val === domain[1]) {\n                return range[1];\n            }\n        }\n\n        return (val - domain[0]) / subDomain * subRange + range[0];\n    };\n\n    /**\n     * Convert a percent string to absolute number.\n     * Returns NaN if percent is not a valid string or number\n     * @memberOf module:echarts/util/number\n     * @param {string|number} percent\n     * @param {number} all\n     * @return {number}\n     */\n    number.parsePercent = function(percent, all) {\n        switch (percent) {\n            case 'center':\n            case 'middle':\n                percent = '50%';\n                break;\n            case 'left':\n            case 'top':\n                percent = '0%';\n                break;\n            case 'right':\n            case 'bottom':\n                percent = '100%';\n                break;\n        }\n        if (typeof percent === 'string') {\n            if (_trim(percent).match(/%$/)) {\n                return parseFloat(percent) / 100 * all;\n            }\n\n            return parseFloat(percent);\n        }\n\n        return percent == null ? NaN : +percent;\n    };\n\n    /**\n     * (1) Fix rounding error of float numbers.\n     * (2) Support return string to avoid scientific notation like '3.5e-7'.\n     *\n     * @param {number} x\n     * @param {number} [precision]\n     * @param {boolean} [returnStr]\n     * @return {number|string}\n     */\n    number.round = function (x, precision, returnStr) {\n        if (precision == null) {\n            precision = 10;\n        }\n        // Avoid range error\n        precision = Math.min(Math.max(0, precision), 20);\n        x = (+x).toFixed(precision);\n        return returnStr ? x : +x;\n    };\n\n    number.asc = function (arr) {\n        arr.sort(function (a, b) {\n            return a - b;\n        });\n        return arr;\n    };\n\n    /**\n     * Get precision\n     * @param {number} val\n     */\n    number.getPrecision = function (val) {\n        val = +val;\n        if (isNaN(val)) {\n            return 0;\n        }\n        // It is much faster than methods converting number to string as follows\n        //      var tmp = val.toString();\n        //      return tmp.length - 1 - tmp.indexOf('.');\n        // especially when precision is low\n        var e = 1;\n        var count = 0;\n        while (Math.round(val * e) / e !== val) {\n            e *= 10;\n            count++;\n        }\n        return count;\n    };\n\n    /**\n     * @param {string|number} val\n     * @return {number}\n     */\n    number.getPrecisionSafe = function (val) {\n        var str = val.toString();\n\n        // Consider scientific notation: '3.4e-12' '3.4e+12'\n        var eIndex = str.indexOf('e');\n        if (eIndex > 0) {\n            var precision = +str.slice(eIndex + 1);\n            return precision < 0 ? -precision : 0;\n        }\n        else {\n            var dotIndex = str.indexOf('.');\n            return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n        }\n    };\n\n    /**\n     * Minimal dicernible data precisioin according to a single pixel.\n     *\n     * @param {Array.<number>} dataExtent\n     * @param {Array.<number>} pixelExtent\n     * @return {number} precision\n     */\n    number.getPixelPrecision = function (dataExtent, pixelExtent) {\n        var log = Math.log;\n        var LN10 = Math.LN10;\n        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n        // toFixed() digits argument must be between 0 and 20.\n        var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n        return !isFinite(precision) ? 20 : precision;\n    };\n\n    /**\n     * Get a data of given precision, assuring the sum of percentages\n     * in valueList is 1.\n     * The largest remainer method is used.\n     * https://en.wikipedia.org/wiki/Largest_remainder_method\n     *\n     * @param {Array.<number>} valueList a list of all data\n     * @param {number} idx index of the data to be processed in valueList\n     * @param {number} precision integer number showing digits of precision\n     * @return {number} percent ranging from 0 to 100\n     */\n    number.getPercentWithPrecision = function (valueList, idx, precision) {\n        if (!valueList[idx]) {\n            return 0;\n        }\n\n        var sum = zrUtil.reduce(valueList, function (acc, val) {\n            return acc + (isNaN(val) ? 0 : val);\n        }, 0);\n        if (sum === 0) {\n            return 0;\n        }\n\n        var digits = Math.pow(10, precision);\n        var votesPerQuota = zrUtil.map(valueList, function (val) {\n            return (isNaN(val) ? 0 : val) / sum * digits * 100;\n        });\n        var targetSeats = digits * 100;\n\n        var seats = zrUtil.map(votesPerQuota, function (votes) {\n            // Assign automatic seats.\n            return Math.floor(votes);\n        });\n        var currentSum = zrUtil.reduce(seats, function (acc, val) {\n            return acc + val;\n        }, 0);\n\n        var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n            return votes - seats[idx];\n        });\n\n        // Has remainding votes.\n        while (currentSum < targetSeats) {\n            // Find next largest remainder.\n            var max = Number.NEGATIVE_INFINITY;\n            var maxId = null;\n            for (var i = 0, len = remainder.length; i < len; ++i) {\n                if (remainder[i] > max) {\n                    max = remainder[i];\n                    maxId = i;\n                }\n            }\n\n            // Add a vote to max remainder.\n            ++seats[maxId];\n            remainder[maxId] = 0;\n            ++currentSum;\n        }\n\n        return seats[idx] / digits;\n    };\n\n    // Number.MAX_SAFE_INTEGER, ie do not support.\n    number.MAX_SAFE_INTEGER = 9007199254740991;\n\n    /**\n     * To 0 - 2 * PI, considering negative radian.\n     * @param {number} radian\n     * @return {number}\n     */\n    number.remRadian = function (radian) {\n        var pi2 = Math.PI * 2;\n        return (radian % pi2 + pi2) % pi2;\n    };\n\n    /**\n     * @param {type} radian\n     * @return {boolean}\n     */\n    number.isRadianAroundZero = function (val) {\n        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n    };\n\n    var TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n    /**\n     * @return {number} in minutes\n     */\n    number.getTimezoneOffset = function () {\n        return (new Date()).getTimezoneOffset();\n    };\n\n    /**\n     * @param {string|Date|number} value These values can be accepted:\n     *   + An instance of Date, represent a time in its own time zone.\n     *   + Or string in a subset of ISO 8601, only including:\n     *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n     *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n     *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n     *     all of which will be treated as local time if time zone is not specified\n     *     (see <https://momentjs.com/>).\n     *   + Or other string format, including (all of which will be treated as loacal time):\n     *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n     *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n     *   + a timestamp, which represent a time in UTC.\n     * @return {Date} date\n     */\n    number.parseDate = function (value) {\n        if (value instanceof Date) {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            // Different browsers parse date in different way, so we parse it manually.\n            // Some other issues:\n            // new Date('1970-01-01') is UTC,\n            // new Date('1970/01/01') and new Date('1970-1-01') is local.\n            // See issue #3623\n            var match = TIME_REG.exec(value);\n\n            if (!match) {\n                // return Invalid Date.\n                return new Date(NaN);\n            }\n\n            var timezoneOffset = number.getTimezoneOffset();\n            var timeOffset = !match[8]\n                ? 0\n                : match[8].toUpperCase() === 'Z'\n                ? timezoneOffset\n                : +match[8].slice(0, 3) * 60 + timezoneOffset;\n\n            // match[n] can only be string or undefined.\n            // But take care of '12' + 1 => '121'.\n            return new Date(\n                +match[1],\n                +(match[2] || 1) - 1,\n                +match[3] || 1,\n                +match[4] || 0,\n                +(match[5] || 0) - timeOffset,\n                +match[6] || 0,\n                +match[7] || 0\n            );\n        }\n        else if (value == null) {\n            return new Date(NaN);\n        }\n\n        return new Date(Math.round(value));\n    };\n\n    /**\n     * Quantity of a number. e.g. 0.1, 1, 10, 100\n     *\n     * @param  {number} val\n     * @return {number}\n     */\n    number.quantity = function (val) {\n        return Math.pow(10, quantityExponent(val));\n    };\n\n    function quantityExponent(val) {\n        return Math.floor(Math.log(val) / Math.LN10);\n    }\n\n    /**\n     * find a “nice” number approximately equal to x. Round the number if round = true,\n     * take ceiling if round = false. The primary observation is that the “nicest”\n     * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n     *\n     * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n     *\n     * @param  {number} val Non-negative value.\n     * @param  {boolean} round\n     * @return {number}\n     */\n    number.nice = function (val, round) {\n        var exponent = quantityExponent(val);\n        var exp10 = Math.pow(10, exponent);\n        var f = val / exp10; // 1 <= f < 10\n        var nf;\n        if (round) {\n            if (f < 1.5) { nf = 1; }\n            else if (f < 2.5) { nf = 2; }\n            else if (f < 4) { nf = 3; }\n            else if (f < 7) { nf = 5; }\n            else { nf = 10; }\n        }\n        else {\n            if (f < 1) { nf = 1; }\n            else if (f < 2) { nf = 2; }\n            else if (f < 3) { nf = 3; }\n            else if (f < 5) { nf = 5; }\n            else { nf = 10; }\n        }\n        val = nf * exp10;\n\n        // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n        // 20 is the uppper bound of toFixed.\n        return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n    };\n\n    /**\n     * Order intervals asc, and split them when overlap.\n     * expect(numberUtil.reformIntervals([\n     *     {interval: [18, 62], close: [1, 1]},\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [1, 1]},\n     *     {interval: [62, 150], close: [1, 1]},\n     *     {interval: [106, 150], close: [1, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ])).toEqual([\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [0, 1]},\n     *     {interval: [18, 62], close: [0, 1]},\n     *     {interval: [62, 150], close: [0, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ]);\n     * @param {Array.<Object>} list, where `close` mean open or close\n     *        of the interval, and Infinity can be used.\n     * @return {Array.<Object>} The origin list, which has been reformed.\n     */\n    number.reformIntervals = function (list) {\n        list.sort(function (a, b) {\n            return littleThan(a, b, 0) ? -1 : 1;\n        });\n\n        var curr = -Infinity;\n        var currClose = 1;\n        for (var i = 0; i < list.length;) {\n            var interval = list[i].interval;\n            var close = list[i].close;\n\n            for (var lg = 0; lg < 2; lg++) {\n                if (interval[lg] <= curr) {\n                    interval[lg] = curr;\n                    close[lg] = !lg ? 1 - currClose : 1;\n                }\n                curr = interval[lg];\n                currClose = close[lg];\n            }\n\n            if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n                list.splice(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n\n        return list;\n\n        function littleThan(a, b, lg) {\n            return a.interval[lg] < b.interval[lg]\n                || (\n                    a.interval[lg] === b.interval[lg]\n                    && (\n                        (a.close[lg] - b.close[lg] === (!lg ? 1 : -1))\n                        || (!lg && littleThan(a, b, 1))\n                    )\n                );\n        }\n    };\n\n    /**\n     * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n     * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n     * subtraction forces infinities to NaN\n     *\n     * @param {*} v\n     * @return {boolean}\n     */\n    number.isNumeric = function (v) {\n        return v - parseFloat(v) >= 0;\n    };\n\n    module.exports = number;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/number.js\n// module id = 610\n// module chunks = 0 1 2","\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n\n    /**\n     * @typedef {Float32Array|Array.<number>} Vector2\n     */\n    /**\n     * 二维向量类\n     * @exports zrender/tool/vector\n     */\n    var vector = {\n        /**\n         * 创建一个向量\n         * @param {number} [x=0]\n         * @param {number} [y=0]\n         * @return {Vector2}\n         */\n        create: function (x, y) {\n            var out = new ArrayCtor(2);\n            if (x == null) {\n                x = 0;\n            }\n            if (y == null) {\n                y = 0;\n            }\n            out[0] = x;\n            out[1] = y;\n            return out;\n        },\n\n        /**\n         * 复制向量数据\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        copy: function (out, v) {\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 克隆一个向量\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        clone: function (v) {\n            var out = new ArrayCtor(2);\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 设置向量的两个项\n         * @param {Vector2} out\n         * @param {number} a\n         * @param {number} b\n         * @return {Vector2} 结果\n         */\n        set: function (out, a, b) {\n            out[0] = a;\n            out[1] = b;\n            return out;\n        },\n\n        /**\n         * 向量相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        add: function (out, v1, v2) {\n            out[0] = v1[0] + v2[0];\n            out[1] = v1[1] + v2[1];\n            return out;\n        },\n\n        /**\n         * 向量缩放后相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} a\n         */\n        scaleAndAdd: function (out, v1, v2, a) {\n            out[0] = v1[0] + v2[0] * a;\n            out[1] = v1[1] + v2[1] * a;\n            return out;\n        },\n\n        /**\n         * 向量相减\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        sub: function (out, v1, v2) {\n            out[0] = v1[0] - v2[0];\n            out[1] = v1[1] - v2[1];\n            return out;\n        },\n\n        /**\n         * 向量长度\n         * @param {Vector2} v\n         * @return {number}\n         */\n        len: function (v) {\n            return Math.sqrt(this.lenSquare(v));\n        },\n\n        /**\n         * 向量长度平方\n         * @param {Vector2} v\n         * @return {number}\n         */\n        lenSquare: function (v) {\n            return v[0] * v[0] + v[1] * v[1];\n        },\n\n        /**\n         * 向量乘法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        mul: function (out, v1, v2) {\n            out[0] = v1[0] * v2[0];\n            out[1] = v1[1] * v2[1];\n            return out;\n        },\n\n        /**\n         * 向量除法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        div: function (out, v1, v2) {\n            out[0] = v1[0] / v2[0];\n            out[1] = v1[1] / v2[1];\n            return out;\n        },\n\n        /**\n         * 向量点乘\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        dot: function (v1, v2) {\n            return v1[0] * v2[0] + v1[1] * v2[1];\n        },\n\n        /**\n         * 向量缩放\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {number} s\n         */\n        scale: function (out, v, s) {\n            out[0] = v[0] * s;\n            out[1] = v[1] * s;\n            return out;\n        },\n\n        /**\n         * 向量归一化\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        normalize: function (out, v) {\n            var d = vector.len(v);\n            if (d === 0) {\n                out[0] = 0;\n                out[1] = 0;\n            }\n            else {\n                out[0] = v[0] / d;\n                out[1] = v[1] / d;\n            }\n            return out;\n        },\n\n        /**\n         * 计算向量间距离\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distance: function (v1, v2) {\n            return Math.sqrt(\n                (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1])\n            );\n        },\n\n        /**\n         * 向量距离平方\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distanceSquare: function (v1, v2) {\n            return (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n        },\n\n        /**\n         * 求负向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        negate: function (out, v) {\n            out[0] = -v[0];\n            out[1] = -v[1];\n            return out;\n        },\n\n        /**\n         * 插值两个点\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} t\n         */\n        lerp: function (out, v1, v2, t) {\n            out[0] = v1[0] + t * (v2[0] - v1[0]);\n            out[1] = v1[1] + t * (v2[1] - v1[1]);\n            return out;\n        },\n\n        /**\n         * 矩阵左乘向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {Vector2} m\n         */\n        applyTransform: function (out, v, m) {\n            var x = v[0];\n            var y = v[1];\n            out[0] = m[0] * x + m[2] * y + m[4];\n            out[1] = m[1] * x + m[3] * y + m[5];\n            return out;\n        },\n        /**\n         * 求两个向量最小值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        min: function (out, v1, v2) {\n            out[0] = Math.min(v1[0], v2[0]);\n            out[1] = Math.min(v1[1], v2[1]);\n            return out;\n        },\n        /**\n         * 求两个向量最大值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        max: function (out, v1, v2) {\n            out[0] = Math.max(v1[0], v2[0]);\n            out[1] = Math.max(v1[1], v2[1]);\n            return out;\n        }\n    };\n\n    vector.length = vector.len;\n    vector.lengthSquare = vector.lenSquare;\n    vector.dist = vector.distance;\n    vector.distSquare = vector.distanceSquare;\n\n    module.exports = vector;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/vector.js\n// module id = 611\n// module chunks = 0 1 2","/**\n * Path element\n * @module zrender/graphic/Path\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var zrUtil = require('../core/util');\n    var PathProxy = require('../core/PathProxy');\n    var pathContain = require('../contain/path');\n\n    var Pattern = require('./Pattern');\n    var getCanvasPattern = Pattern.prototype.getCanvasPattern;\n\n    var abs = Math.abs;\n\n    var pathProxyForDraw = new PathProxy(true);\n    /**\n     * @alias module:zrender/graphic/Path\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function Path(opts) {\n        Displayable.call(this, opts);\n\n        /**\n         * @type {module:zrender/core/PathProxy}\n         * @readOnly\n         */\n        this.path = null;\n    }\n\n    Path.prototype = {\n\n        constructor: Path,\n\n        type: 'path',\n\n        __dirtyPath: true,\n\n        strokeContainThreshold: 5,\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var path = this.path || pathProxyForDraw;\n            var hasStroke = style.hasStroke();\n            var hasFill = style.hasFill();\n            var fill = style.fill;\n            var stroke = style.stroke;\n            var hasFillGradient = hasFill && !!(fill.colorStops);\n            var hasStrokeGradient = hasStroke && !!(stroke.colorStops);\n            var hasFillPattern = hasFill && !!(fill.image);\n            var hasStrokePattern = hasStroke && !!(stroke.image);\n\n            style.bind(ctx, this, prevEl);\n            this.setTransform(ctx);\n\n            if (this.__dirty) {\n                var rect;\n                // Update gradient because bounding rect may changed\n                if (hasFillGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._fillGradient = style.getGradient(ctx, fill, rect);\n                }\n                if (hasStrokeGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._strokeGradient = style.getGradient(ctx, stroke, rect);\n                }\n            }\n            // Use the gradient or pattern\n            if (hasFillGradient) {\n                // PENDING If may have affect the state\n                ctx.fillStyle = this._fillGradient;\n            }\n            else if (hasFillPattern) {\n                ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n            }\n            if (hasStrokeGradient) {\n                ctx.strokeStyle = this._strokeGradient;\n            }\n            else if (hasStrokePattern) {\n                ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n            }\n\n            var lineDash = style.lineDash;\n            var lineDashOffset = style.lineDashOffset;\n\n            var ctxLineDash = !!ctx.setLineDash;\n\n            // Update path sx, sy\n            var scale = this.getGlobalScale();\n            path.setScale(scale[0], scale[1]);\n\n            // Proxy context\n            // Rebuild path in following 2 cases\n            // 1. Path is dirty\n            // 2. Path needs javascript implemented lineDash stroking.\n            //    In this case, lineDash information will not be saved in PathProxy\n            if (this.__dirtyPath\n                || (lineDash && !ctxLineDash && hasStroke)\n            ) {\n                path.beginPath(ctx);\n\n                // Setting line dash before build path\n                if (lineDash && !ctxLineDash) {\n                    path.setLineDash(lineDash);\n                    path.setLineDashOffset(lineDashOffset);\n                }\n\n                this.buildPath(path, this.shape, false);\n\n                // Clear path dirty flag\n                if (this.path) {\n                    this.__dirtyPath = false;\n                }\n            }\n            else {\n                // Replay path building\n                ctx.beginPath();\n                this.path.rebuildPath(ctx);\n            }\n\n            hasFill && path.fill(ctx);\n\n            if (lineDash && ctxLineDash) {\n                ctx.setLineDash(lineDash);\n                ctx.lineDashOffset = lineDashOffset;\n            }\n\n            hasStroke && path.stroke(ctx);\n\n            if (lineDash && ctxLineDash) {\n                // PENDING\n                // Remove lineDash\n                ctx.setLineDash([]);\n            }\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n        // Like in circle\n        buildPath: function (ctx, shapeCfg, inBundle) {},\n\n        createPathProxy: function () {\n            this.path = new PathProxy();\n        },\n\n        getBoundingRect: function () {\n            var rect = this._rect;\n            var style = this.style;\n            var needsUpdateRect = !rect;\n            if (needsUpdateRect) {\n                var path = this.path;\n                if (!path) {\n                    // Create path on demand.\n                    path = this.path = new PathProxy();\n                }\n                if (this.__dirtyPath) {\n                    path.beginPath();\n                    this.buildPath(path, this.shape, false);\n                }\n                rect = path.getBoundingRect();\n            }\n            this._rect = rect;\n\n            if (style.hasStroke()) {\n                // Needs update rect with stroke lineWidth when\n                // 1. Element changes scale or lineWidth\n                // 2. Shape is changed\n                var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n                if (this.__dirty || needsUpdateRect) {\n                    rectWithStroke.copy(rect);\n                    // FIXME Must after updateTransform\n                    var w = style.lineWidth;\n                    // PENDING, Min line width is needed when line is horizontal or vertical\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n\n                    // Only add extra hover lineWidth when there are no fill\n                    if (!style.hasFill()) {\n                        w = Math.max(w, this.strokeContainThreshold || 4);\n                    }\n                    // Consider line width\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        rectWithStroke.width += w / lineScale;\n                        rectWithStroke.height += w / lineScale;\n                        rectWithStroke.x -= w / lineScale / 2;\n                        rectWithStroke.y -= w / lineScale / 2;\n                    }\n                }\n\n                // Return rect with stroke\n                return rectWithStroke;\n            }\n\n            return rect;\n        },\n\n        contain: function (x, y) {\n            var localPos = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            var style = this.style;\n            x = localPos[0];\n            y = localPos[1];\n\n            if (rect.contain(x, y)) {\n                var pathData = this.path.data;\n                if (style.hasStroke()) {\n                    var lineWidth = style.lineWidth;\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        // Only add extra hover lineWidth when there are no fill\n                        if (!style.hasFill()) {\n                            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n                        }\n                        if (pathContain.containStroke(\n                            pathData, lineWidth / lineScale, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                }\n                if (style.hasFill()) {\n                    return pathContain.contain(pathData, x, y);\n                }\n            }\n            return false;\n        },\n\n        /**\n         * @param  {boolean} dirtyPath\n         */\n        dirty: function (dirtyPath) {\n            if (dirtyPath == null) {\n                dirtyPath = true;\n            }\n            // Only mark dirty, not mark clean\n            if (dirtyPath) {\n                this.__dirtyPath = dirtyPath;\n                this._rect = null;\n            }\n\n            this.__dirty = true;\n\n            this.__zr && this.__zr.refresh();\n\n            // Used as a clipping path\n            if (this.__clipTarget) {\n                this.__clipTarget.dirty();\n            }\n        },\n\n        /**\n         * Alias for animate('shape')\n         * @param {boolean} loop\n         */\n        animateShape: function (loop) {\n            return this.animate('shape', loop);\n        },\n\n        // Overwrite attrKV\n        attrKV: function (key, value) {\n            // FIXME\n            if (key === 'shape') {\n                this.setShape(value);\n                this.__dirtyPath = true;\n                this._rect = null;\n            }\n            else {\n                Displayable.prototype.attrKV.call(this, key, value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setShape: function (key, value) {\n            var shape = this.shape;\n            // Path from string may not have shape\n            if (shape) {\n                if (zrUtil.isObject(key)) {\n                    for (var name in key) {\n                        if (key.hasOwnProperty(name)) {\n                            shape[name] = key[name];\n                        }\n                    }\n                }\n                else {\n                    shape[key] = value;\n                }\n                this.dirty(true);\n            }\n            return this;\n        },\n\n        getLineScale: function () {\n            var m = this.transform;\n            // Get the line scale.\n            // Determinant of `m` means how much the area is enlarged by the\n            // transformation. So its square root can be used as a scale factor\n            // for width.\n            return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\n                ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\n                : 1;\n        }\n    };\n\n    /**\n     * 扩展一个 Path element, 比如星形，圆等。\n     * Extend a path element\n     * @param {Object} props\n     * @param {string} props.type Path type\n     * @param {Function} props.init Initialize\n     * @param {Function} props.buildPath Overwrite buildPath method\n     * @param {Object} [props.style] Extended default style config\n     * @param {Object} [props.shape] Extended default shape config\n     */\n    Path.extend = function (defaults) {\n        var Sub = function (opts) {\n            Path.call(this, opts);\n\n            if (defaults.style) {\n                // Extend default style\n                this.style.extendFrom(defaults.style, false);\n            }\n\n            // Extend default shape\n            var defaultShape = defaults.shape;\n            if (defaultShape) {\n                this.shape = this.shape || {};\n                var thisShape = this.shape;\n                for (var name in defaultShape) {\n                    if (\n                        ! thisShape.hasOwnProperty(name)\n                        && defaultShape.hasOwnProperty(name)\n                    ) {\n                        thisShape[name] = defaultShape[name];\n                    }\n                }\n            }\n\n            defaults.init && defaults.init.call(this, opts);\n        };\n\n        zrUtil.inherits(Sub, Path);\n\n        // FIXME 不能 extend position, rotation 等引用对象\n        for (var name in defaults) {\n            // Extending prototype values and methods\n            if (name !== 'style' && name !== 'shape') {\n                Sub.prototype[name] = defaults[name];\n            }\n        }\n\n        return Sub;\n    };\n\n    zrUtil.inherits(Path, Displayable);\n\n    module.exports = Path;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Path.js\n// module id = 612\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('./number');\n    var textContain = require('zrender/lib/contain/text');\n\n    var formatUtil = {};\n\n    /**\n     * 每三位默认加,格式化\n     * @param {string|number} x\n     * @return {string}\n     */\n    formatUtil.addCommas = function (x) {\n        if (isNaN(x)) {\n            return '-';\n        }\n        x = (x + '').split('.');\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\n               + (x.length > 1 ? ('.' + x[1]) : '');\n    };\n\n    /**\n     * @param {string} str\n     * @param {boolean} [upperCaseFirst=false]\n     * @return {string} str\n     */\n    formatUtil.toCamelCase = function (str, upperCaseFirst) {\n        str = (str || '').toLowerCase().replace(/-(.)/g, function(match, group1) {\n            return group1.toUpperCase();\n        });\n\n        if (upperCaseFirst && str) {\n            str = str.charAt(0).toUpperCase() + str.slice(1);\n        }\n\n        return str;\n    };\n\n    formatUtil.normalizeCssArray = zrUtil.normalizeCssArray;\n\n    var encodeHTML = formatUtil.encodeHTML = function (source) {\n        return String(source)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    };\n\n    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\n    var wrapVar = function (varName, seriesIdx) {\n        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n    };\n\n    /**\n     * Template formatter\n     * @param {string} tpl\n     * @param {Array.<Object>|Object} paramsList\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTpl = function (tpl, paramsList, encode) {\n        if (!zrUtil.isArray(paramsList)) {\n            paramsList = [paramsList];\n        }\n        var seriesLen = paramsList.length;\n        if (!seriesLen) {\n            return '';\n        }\n\n        var $vars = paramsList[0].$vars || [];\n        for (var i = 0; i < $vars.length; i++) {\n            var alias = TPL_VAR_ALIAS[i];\n            var val = wrapVar(alias, 0);\n            tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n        }\n        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n            for (var k = 0; k < $vars.length; k++) {\n                var val = paramsList[seriesIdx][$vars[k]];\n                tpl = tpl.replace(\n                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\n                    encode ? encodeHTML(val) : val\n                );\n            }\n        }\n\n        return tpl;\n    };\n\n    /**\n     * simple Template formatter\n     *\n     * @param {string} tpl\n     * @param {Object} param\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTplSimple = function (tpl, param, encode) {\n        zrUtil.each(param, function (value, key) {\n            tpl = tpl.replace(\n                '{' + key + '}',\n                encode ? encodeHTML(value) : value\n            );\n        });\n        return tpl;\n    };\n\n    /**\n     * @param {string} color\n     * @param {string} [extraCssText]\n     * @return {string}\n     */\n    formatUtil.getTooltipMarker = function (color, extraCssText) {\n        return color\n            ? '<span style=\"display:inline-block;margin-right:5px;'\n                + 'border-radius:10px;width:9px;height:9px;background-color:'\n                + formatUtil.encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>'\n            : '';\n    };\n\n    /**\n     * @param {string} str\n     * @return {string}\n     * @inner\n     */\n    var s2d = function (str) {\n        return str < 10 ? ('0' + str) : str;\n    };\n\n    /**\n     * ISO Date format\n     * @param {string} tpl\n     * @param {number} value\n     * @param {boolean} [isUTC=false] Default in local time.\n     *           see `module:echarts/scale/Time`\n     *           and `module:echarts/util/number#parseDate`.\n     * @inner\n     */\n    formatUtil.formatTime = function (tpl, value, isUTC) {\n        if (tpl === 'week'\n            || tpl === 'month'\n            || tpl === 'quarter'\n            || tpl === 'half-year'\n            || tpl === 'year'\n        ) {\n            tpl = 'MM-dd\\nyyyy';\n        }\n\n        var date = numberUtil.parseDate(value);\n        var utc = isUTC ? 'UTC' : '';\n        var y = date['get' + utc + 'FullYear']();\n        var M = date['get' + utc + 'Month']() + 1;\n        var d = date['get' + utc + 'Date']();\n        var h = date['get' + utc + 'Hours']();\n        var m = date['get' + utc + 'Minutes']();\n        var s = date['get' + utc + 'Seconds']();\n\n        tpl = tpl.replace('MM', s2d(M))\n            .replace('M', M)\n            .replace('yyyy', y)\n            .replace('yy', y % 100)\n            .replace('dd', s2d(d))\n            .replace('d', d)\n            .replace('hh', s2d(h))\n            .replace('h', h)\n            .replace('mm', s2d(m))\n            .replace('m', m)\n            .replace('ss', s2d(s))\n            .replace('s', s);\n\n        return tpl;\n    };\n\n    /**\n     * Capital first\n     * @param {string} str\n     * @return {string}\n     */\n    formatUtil.capitalFirst = function (str) {\n        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n    };\n\n    formatUtil.truncateText = textContain.truncateText;\n\n    formatUtil.getTextRect = textContain.getBoundingRect;\n\n    module.exports = formatUtil;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/format.js\n// module id = 613\n// module chunks = 0 1 2","/**\n * @module echarts/model/Model\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazzUtil = require('../util/clazz');\n    var env = require('zrender/lib/core/env');\n\n    /**\n     * @alias module:echarts/model/Model\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} [parentModel]\n     * @param {module:echarts/model/Global} [ecModel]\n     */\n    function Model(option, parentModel, ecModel) {\n        /**\n         * @type {module:echarts/model/Model}\n         * @readOnly\n         */\n        this.parentModel = parentModel;\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        this.option = option;\n\n        // Simple optimization\n        // if (this.init) {\n        //     if (arguments.length <= 4) {\n        //         this.init(option, parentModel, ecModel, extraOpt);\n        //     }\n        //     else {\n        //         this.init.apply(this, arguments);\n        //     }\n        // }\n    }\n\n    Model.prototype = {\n\n        constructor: Model,\n\n        /**\n         * Model 的初始化函数\n         * @param {Object} option\n         */\n        init: null,\n\n        /**\n         * 从新的 Option merge\n         */\n        mergeOption: function (option) {\n            zrUtil.merge(this.option, option, true);\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        get: function (path, ignoreParent) {\n            if (path == null) {\n                return this.option;\n            }\n\n            return doGet(\n                this.option,\n                this.parsePath(path),\n                !ignoreParent && getParent(this, path)\n            );\n        },\n\n        /**\n         * @param {string} key\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        getShallow: function (key, ignoreParent) {\n            var option = this.option;\n\n            var val = option == null ? option : option[key];\n            var parentModel = !ignoreParent && getParent(this, key);\n            if (val == null && parentModel) {\n                val = parentModel.getShallow(key);\n            }\n            return val;\n        },\n\n        /**\n         * @param {string|Array.<string>} [path]\n         * @param {module:echarts/model/Model} [parentModel]\n         * @return {module:echarts/model/Model}\n         */\n        getModel: function (path, parentModel) {\n            var obj = path == null\n                ? this.option\n                : doGet(this.option, path = this.parsePath(path));\n\n            var thisParentModel;\n            parentModel = parentModel || (\n                (thisParentModel = getParent(this, path))\n                    && thisParentModel.getModel(path)\n            );\n\n            return new Model(obj, parentModel, this.ecModel);\n        },\n\n        /**\n         * If model has option\n         */\n        isEmpty: function () {\n            return this.option == null;\n        },\n\n        restoreData: function () {},\n\n        // Pending\n        clone: function () {\n            var Ctor = this.constructor;\n            return new Ctor(zrUtil.clone(this.option));\n        },\n\n        setReadOnly: function (properties) {\n            clazzUtil.setReadOnly(this, properties);\n        },\n\n        // If path is null/undefined, return null/undefined.\n        parsePath: function(path) {\n            if (typeof path === 'string') {\n                path = path.split('.');\n            }\n            return path;\n        },\n\n        /**\n         * @param {Function} getParentMethod\n         *        param {Array.<string>|string} path\n         *        return {module:echarts/model/Model}\n         */\n        customizeGetParent: function (getParentMethod) {\n            clazzUtil.set(this, 'getParent', getParentMethod);\n        },\n\n        isAnimationEnabled: function () {\n            if (!env.node) {\n                if (this.option.animation != null) {\n                    return !!this.option.animation;\n                }\n                else if (this.parentModel) {\n                    return this.parentModel.isAnimationEnabled();\n                }\n            }\n        }\n    };\n\n    function doGet(obj, pathArr, parentModel) {\n        for (var i = 0; i < pathArr.length; i++) {\n            // Ignore empty\n            if (!pathArr[i]) {\n                continue;\n            }\n            // obj could be number/string/... (like 0)\n            obj = (obj && typeof obj === 'object') ? obj[pathArr[i]] : null;\n            if (obj == null) {\n                break;\n            }\n        }\n        if (obj == null && parentModel) {\n            obj = parentModel.get(pathArr);\n        }\n        return obj;\n    }\n\n    // `path` can be null/undefined\n    function getParent(model, path) {\n        var getParentMethod = clazzUtil.get(model, 'getParent');\n        return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n    }\n\n    // Enable Model.extend.\n    clazzUtil.enableClassExtend(Model);\n\n    var mixin = zrUtil.mixin;\n    mixin(Model, require('./mixin/lineStyle'));\n    mixin(Model, require('./mixin/areaStyle'));\n    mixin(Model, require('./mixin/textStyle'));\n    mixin(Model, require('./mixin/itemStyle'));\n\n    module.exports = Model;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Model.js\n// module id = 614\n// module chunks = 0 1 2","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\n\n    var env = {};\n    if (typeof navigator === 'undefined') {\n        // In node\n        env = {\n            browser: {},\n            os: {},\n            node: true,\n            // Assume canvas is supported\n            canvasSupported: true\n        };\n    }\n    else {\n        env = detect(navigator.userAgent);\n    }\n\n    module.exports = env;\n\n    // Zepto.js\n    // (c) 2010-2013 Thomas Fuchs\n    // Zepto.js may be freely distributed under the MIT license.\n\n    function detect(ua) {\n        var os = {};\n        var browser = {};\n        // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n        // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n        // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n        // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n        // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n        // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n        // var touchpad = webos && ua.match(/TouchPad/);\n        // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n        // var silk = ua.match(/Silk\\/([\\d._]+)/);\n        // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n        // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n        // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n        // var playbook = ua.match(/PlayBook/);\n        // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n        var firefox = ua.match(/Firefox\\/([\\d.]+)/);\n        // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n        // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n        var ie = ua.match(/MSIE\\s([\\d.]+)/)\n            // IE 11 Trident/7.0; rv:11.0\n            || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n        var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n        var weChat = (/micromessenger/i).test(ua);\n\n        // Todo: clean this up with a better OS/browser seperation:\n        // - discern (more) between multiple browsers on android\n        // - decide if kindle fire in silk mode is android or not\n        // - Firefox on Android doesn't specify the Android version\n        // - possibly devide in os, device and browser hashes\n\n        // if (browser.webkit = !!webkit) browser.version = webkit[1];\n\n        // if (android) os.android = true, os.version = android[2];\n        // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n        // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n        // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n        // if (webos) os.webos = true, os.version = webos[2];\n        // if (touchpad) os.touchpad = true;\n        // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n        // if (bb10) os.bb10 = true, os.version = bb10[2];\n        // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n        // if (playbook) browser.playbook = true;\n        // if (kindle) os.kindle = true, os.version = kindle[1];\n        // if (silk) browser.silk = true, browser.version = silk[1];\n        // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n        // if (chrome) browser.chrome = true, browser.version = chrome[1];\n        if (firefox) {\n            browser.firefox = true;\n            browser.version = firefox[1];\n        }\n        // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n        // if (webview) browser.webview = true;\n\n        if (ie) {\n            browser.ie = true;\n            browser.version = ie[1];\n        }\n\n        if (edge) {\n            browser.edge = true;\n            browser.version = edge[1];\n        }\n\n        // It is difficult to detect WeChat in Win Phone precisely, because ua can\n        // not be set on win phone. So we do not consider Win Phone.\n        if (weChat) {\n            browser.weChat = true;\n        }\n\n        // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n        //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n        // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n        //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n        //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n        return {\n            browser: browser,\n            os: os,\n            node: false,\n            // 原生canvas支持，改极端点了\n            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n            canvasSupported : document.createElement('canvas').getContext ? true : false,\n            // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n            // works on most browsers\n            // IE10/11 does not support touch event, and MS Edge supports them but not by\n            // default, so we dont check navigator.maxTouchPoints for them here.\n            touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n            // <http://caniuse.com/#search=pointer%20event>.\n            pointerEventsSupported: 'onpointerdown' in window\n                // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n                // events currently. So we dont use that on other browsers unless tested sufficiently.\n                // Although IE 10 supports pointer event, it use old style and is different from the\n                // standard. So we exclude that. (IE 10 is hardly used on touch device)\n                && (browser.edge || (browser.ie && browser.version >= 11))\n        };\n    }\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/env.js\n// module id = 615\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var clazz = {};\n\n    var TYPE_DELIMITER = '.';\n    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n    var MEMBER_PRIFIX = '\\0ec_\\0';\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name] = value;` (can be right-value)\n     * @public\n     */\n    clazz.set = function (host, name, value) {\n        return (host[MEMBER_PRIFIX + name] = value);\n    };\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name];`\n     * @public\n     */\n    clazz.get = function (host, name) {\n        return host[MEMBER_PRIFIX + name];\n    };\n\n    /**\n     * For hidden private class member.\n     * The same behavior as `host.hasOwnProperty(name);`\n     * @public\n     */\n    clazz.hasOwn = function (host, name) {\n        return host.hasOwnProperty(MEMBER_PRIFIX + name);\n    };\n\n    /**\n     * Notice, parseClassType('') should returns {main: '', sub: ''}\n     * @public\n     */\n    var parseClassType = clazz.parseClassType = function (componentType) {\n        var ret = {main: '', sub: ''};\n        if (componentType) {\n            componentType = componentType.split(TYPE_DELIMITER);\n            ret.main = componentType[0] || '';\n            ret.sub = componentType[1] || '';\n        }\n        return ret;\n    };\n\n    /**\n     * @public\n     */\n    function checkClassType(componentType) {\n        zrUtil.assert(\n            /^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType),\n            'componentType \"' + componentType + '\" illegal'\n        );\n    }\n\n    /**\n     * @public\n     */\n    clazz.enableClassExtend = function (RootClass, mandatoryMethods) {\n\n        RootClass.$constructor = RootClass;\n        RootClass.extend = function (proto) {\n\n            if (__DEV__) {\n                zrUtil.each(mandatoryMethods, function (method) {\n                    if (!proto[method]) {\n                        console.warn(\n                            'Method `' + method + '` should be implemented'\n                            + (proto.type ? ' in ' + proto.type : '') + '.'\n                        );\n                    }\n                });\n            }\n\n            var superClass = this;\n            var ExtendedClass = function () {\n                if (!proto.$constructor) {\n                    superClass.apply(this, arguments);\n                }\n                else {\n                    proto.$constructor.apply(this, arguments);\n                }\n            };\n\n            zrUtil.extend(ExtendedClass.prototype, proto);\n\n            ExtendedClass.extend = this.extend;\n            ExtendedClass.superCall = superCall;\n            ExtendedClass.superApply = superApply;\n            zrUtil.inherits(ExtendedClass, this);\n            ExtendedClass.superClass = superClass;\n\n            return ExtendedClass;\n        };\n    };\n\n    // superCall should have class info, which can not be fetch from 'this'.\n    // Consider this case:\n    // class A has method f,\n    // class B inherits class A, overrides method f, f call superApply('f'),\n    // class C inherits class B, do not overrides method f,\n    // then when method of class C is called, dead loop occured.\n    function superCall(context, methodName) {\n        var args = zrUtil.slice(arguments, 2);\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    function superApply(context, methodName, args) {\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    /**\n     * @param {Object} entity\n     * @param {Object} options\n     * @param {boolean} [options.registerWhenExtend]\n     * @public\n     */\n    clazz.enableClassManagement = function (entity, options) {\n        options = options || {};\n\n        /**\n         * Component model classes\n         * key: componentType,\n         * value:\n         *     componentClass, when componentType is 'xxx'\n         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n         * @type {Object}\n         */\n        var storage = {};\n\n        entity.registerClass = function (Clazz, componentType) {\n            if (componentType) {\n                checkClassType(componentType);\n                componentType = parseClassType(componentType);\n\n                if (!componentType.sub) {\n                    if (__DEV__) {\n                        if (storage[componentType.main]) {\n                            console.warn(componentType.main + ' exists.');\n                        }\n                    }\n                    storage[componentType.main] = Clazz;\n                }\n                else if (componentType.sub !== IS_CONTAINER) {\n                    var container = makeContainer(componentType);\n                    container[componentType.sub] = Clazz;\n                }\n            }\n            return Clazz;\n        };\n\n        entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n            var Clazz = storage[componentMainType];\n\n            if (Clazz && Clazz[IS_CONTAINER]) {\n                Clazz = subType ? Clazz[subType] : null;\n            }\n\n            if (throwWhenNotFound && !Clazz) {\n                throw new Error(\n                    !subType\n                        ? componentMainType + '.' + 'type should be specified.'\n                        : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.'\n                );\n            }\n\n            return Clazz;\n        };\n\n        entity.getClassesByMainType = function (componentType) {\n            componentType = parseClassType(componentType);\n\n            var result = [];\n            var obj = storage[componentType.main];\n\n            if (obj && obj[IS_CONTAINER]) {\n                zrUtil.each(obj, function (o, type) {\n                    type !== IS_CONTAINER && result.push(o);\n                });\n            }\n            else {\n                result.push(obj);\n            }\n\n            return result;\n        };\n\n        entity.hasClass = function (componentType) {\n            // Just consider componentType.main.\n            componentType = parseClassType(componentType);\n            return !!storage[componentType.main];\n        };\n\n        /**\n         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n         */\n        entity.getAllClassMainTypes = function () {\n            var types = [];\n            zrUtil.each(storage, function (obj, type) {\n                types.push(type);\n            });\n            return types;\n        };\n\n        /**\n         * If a main type is container and has sub types\n         * @param  {string}  mainType\n         * @return {boolean}\n         */\n        entity.hasSubTypes = function (componentType) {\n            componentType = parseClassType(componentType);\n            var obj = storage[componentType.main];\n            return obj && obj[IS_CONTAINER];\n        };\n\n        entity.parseClassType = parseClassType;\n\n        function makeContainer(componentType) {\n            var container = storage[componentType.main];\n            if (!container || !container[IS_CONTAINER]) {\n                container = storage[componentType.main] = {};\n                container[IS_CONTAINER] = true;\n            }\n            return container;\n        }\n\n        if (options.registerWhenExtend) {\n            var originalExtend = entity.extend;\n            if (originalExtend) {\n                entity.extend = function (proto) {\n                    var ExtendedClass = originalExtend.call(this, proto);\n                    return entity.registerClass(ExtendedClass, proto.type);\n                };\n            }\n        }\n\n        return entity;\n    };\n\n    /**\n     * @param {string|Array.<string>} properties\n     */\n    clazz.setReadOnly = function (obj, properties) {\n        // FIXME It seems broken in IE8 simulation of IE11\n        // if (!zrUtil.isArray(properties)) {\n        //     properties = properties != null ? [properties] : [];\n        // }\n        // zrUtil.each(properties, function (prop) {\n        //     var value = obj[prop];\n\n        //     Object.defineProperty\n        //         && Object.defineProperty(obj, prop, {\n        //             value: value, writable: false\n        //         });\n        //     zrUtil.isArray(obj[prop])\n        //         && Object.freeze\n        //         && Object.freeze(obj[prop]);\n        // });\n    };\n\n    module.exports = clazz;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/clazz.js\n// module id = 616\n// module chunks = 0 1 2","'use strict';\n/**\n * @module echarts/core/BoundingRect\n */\n\n\n    var vec2 = require('./vector');\n    var matrix = require('./matrix');\n\n    var v2ApplyTransform = vec2.applyTransform;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    /**\n     * @alias module:echarts/core/BoundingRect\n     */\n    function BoundingRect(x, y, width, height) {\n\n        if (width < 0) {\n            x = x + width;\n            width = -width;\n        }\n        if (height < 0) {\n            y = y + height;\n            height = -height;\n        }\n\n        /**\n         * @type {number}\n         */\n        this.x = x;\n        /**\n         * @type {number}\n         */\n        this.y = y;\n        /**\n         * @type {number}\n         */\n        this.width = width;\n        /**\n         * @type {number}\n         */\n        this.height = height;\n    }\n\n    BoundingRect.prototype = {\n\n        constructor: BoundingRect,\n\n        /**\n         * @param {module:echarts/core/BoundingRect} other\n         */\n        union: function (other) {\n            var x = mathMin(other.x, this.x);\n            var y = mathMin(other.y, this.y);\n\n            this.width = mathMax(\n                    other.x + other.width,\n                    this.x + this.width\n                ) - x;\n            this.height = mathMax(\n                    other.y + other.height,\n                    this.y + this.height\n                ) - y;\n            this.x = x;\n            this.y = y;\n        },\n\n        /**\n         * @param {Array.<number>} m\n         * @methods\n         */\n        applyTransform: (function () {\n            var lt = [];\n            var rb = [];\n            var lb = [];\n            var rt = [];\n            return function (m) {\n                // In case usage like this\n                // el.getBoundingRect().applyTransform(el.transform)\n                // And element has no transform\n                if (!m) {\n                    return;\n                }\n                lt[0] = lb[0] = this.x;\n                lt[1] = rt[1] = this.y;\n                rb[0] = rt[0] = this.x + this.width;\n                rb[1] = lb[1] = this.y + this.height;\n\n                v2ApplyTransform(lt, lt, m);\n                v2ApplyTransform(rb, rb, m);\n                v2ApplyTransform(lb, lb, m);\n                v2ApplyTransform(rt, rt, m);\n\n                this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n                this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n                var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n                var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n                this.width = maxX - this.x;\n                this.height = maxY - this.y;\n            };\n        })(),\n\n        /**\n         * Calculate matrix of transforming from self to target rect\n         * @param  {module:zrender/core/BoundingRect} b\n         * @return {Array.<number>}\n         */\n        calculateTransform: function (b) {\n            var a = this;\n            var sx = b.width / a.width;\n            var sy = b.height / a.height;\n\n            var m = matrix.create();\n\n            // 矩阵右乘\n            matrix.translate(m, m, [-a.x, -a.y]);\n            matrix.scale(m, m, [sx, sy]);\n            matrix.translate(m, m, [b.x, b.y]);\n\n            return m;\n        },\n\n        /**\n         * @param {(module:echarts/core/BoundingRect|Object)} b\n         * @return {boolean}\n         */\n        intersect: function (b) {\n            if (!b) {\n                return false;\n            }\n\n            if (!(b instanceof BoundingRect)) {\n                // Normalize negative width/height.\n                b = BoundingRect.create(b);\n            }\n\n            var a = this;\n            var ax0 = a.x;\n            var ax1 = a.x + a.width;\n            var ay0 = a.y;\n            var ay1 = a.y + a.height;\n\n            var bx0 = b.x;\n            var bx1 = b.x + b.width;\n            var by0 = b.y;\n            var by1 = b.y + b.height;\n\n            return ! (ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n        },\n\n        contain: function (x, y) {\n            var rect = this;\n            return x >= rect.x\n                && x <= (rect.x + rect.width)\n                && y >= rect.y\n                && y <= (rect.y + rect.height);\n        },\n\n        /**\n         * @return {module:echarts/core/BoundingRect}\n         */\n        clone: function () {\n            return new BoundingRect(this.x, this.y, this.width, this.height);\n        },\n\n        /**\n         * Copy from another rect\n         */\n        copy: function (other) {\n            this.x = other.x;\n            this.y = other.y;\n            this.width = other.width;\n            this.height = other.height;\n        },\n\n        plain: function () {\n            return {\n                x: this.x,\n                y: this.y,\n                width: this.width,\n                height: this.height\n            };\n        }\n    };\n\n    /**\n     * @param {Object|module:zrender/core/BoundingRect} rect\n     * @param {number} rect.x\n     * @param {number} rect.y\n     * @param {number} rect.width\n     * @param {number} rect.height\n     * @return {module:zrender/core/BoundingRect}\n     */\n    BoundingRect.create = function (rect) {\n        return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n    };\n\n    module.exports = BoundingRect;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/BoundingRect.js\n// module id = 617\n// module chunks = 0 1 2","/**\n * Component model\n *\n * @module echarts/model/Component\n */\n\n\n    var Model = require('./Model');\n    var zrUtil = require('zrender/lib/core/util');\n    var arrayPush = Array.prototype.push;\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n    var layout = require('../util/layout');\n\n    /**\n     * @alias module:echarts/model/Component\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {module:echarts/model/Model} ecModel\n     */\n    var ComponentModel = Model.extend({\n\n        type: 'component',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        id: '',\n\n        /**\n         * @readOnly\n         */\n        name: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        mainType: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        subType: '',\n\n        /**\n         * @readOnly\n         * @type {number}\n         */\n        componentIndex: 0,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        ecModel: null,\n\n        /**\n         * key: componentType\n         * value:  Component model list, can not be null.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @readOnly\n         */\n        dependentModels: [],\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        uid: null,\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        $constructor: function (option, parentModel, ecModel, extraOpt) {\n            Model.call(this, option, parentModel, ecModel, extraOpt);\n\n            this.uid = componentUtil.getUID('componentModel');\n        },\n\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n            this.mergeDefaultAndTheme(option, ecModel);\n        },\n\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            var themeModel = ecModel.getTheme();\n            zrUtil.merge(option, themeModel.get(this.mainType));\n            zrUtil.merge(option, this.getDefaultOption());\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (option, extraOpt) {\n            zrUtil.merge(this.option, option, true);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, option, layoutMode);\n            }\n        },\n\n        // Hooker after init or mergeOption\n        optionUpdated: function (newCptOption, isInit) {},\n\n        getDefaultOption: function () {\n            if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n                var optList = [];\n                var Class = this.constructor;\n                while (Class) {\n                    var opt = Class.prototype.defaultOption;\n                    opt && optList.push(opt);\n                    Class = Class.superClass;\n                }\n\n                var defaultOption = {};\n                for (var i = optList.length - 1; i >= 0; i--) {\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n                }\n                clazzUtil.set(this, '__defaultOption', defaultOption);\n            }\n            return clazzUtil.get(this, '__defaultOption');\n        },\n\n        getReferringComponents: function (mainType) {\n            return this.ecModel.queryComponents({\n                mainType: mainType,\n                index: this.get(mainType + 'Index', true),\n                id: this.get(mainType + 'Id', true)\n            });\n        }\n\n    });\n\n    // Reset ComponentModel.extend, add preConstruct.\n    // clazzUtil.enableClassExtend(\n    //     ComponentModel,\n    //     function (option, parentModel, ecModel, extraOpt) {\n    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\n    //         zrUtil.extend(this, extraOpt);\n\n    //         this.uid = componentUtil.getUID('componentModel');\n\n    //         // this.setReadOnly([\n    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n    //         //     'dependentModels', 'componentIndex'\n    //         // ]);\n    //     }\n    // );\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(\n        ComponentModel, {registerWhenExtend: true}\n    );\n    componentUtil.enableSubTypeDefaulter(ComponentModel);\n\n    // Add capability of ComponentModel.topologicalTravel.\n    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\n    function getDependencies(componentType) {\n        var deps = [];\n        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n        });\n        // Ensure main type\n        return zrUtil.map(deps, function (type) {\n            return clazzUtil.parseClassType(type).main;\n        });\n    }\n\n    zrUtil.mixin(ComponentModel, require('./mixin/boxLayout'));\n\n    module.exports = ComponentModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Component.js\n// module id = 618\n// module chunks = 0 1 2","'use strict';\n// Layout helpers for each component positioning\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n    var numberUtil = require('./number');\n    var formatUtil = require('./format');\n    var parsePercent = numberUtil.parsePercent;\n    var each = zrUtil.each;\n\n    var layout = {};\n\n    /**\n     * @public\n     */\n    var LOCATION_PARAMS = layout.LOCATION_PARAMS = [\n        'left', 'right', 'top', 'bottom', 'width', 'height'\n    ];\n\n    /**\n     * @public\n     */\n    var HV_NAMES = layout.HV_NAMES = [\n        ['width', 'left', 'right'],\n        ['height', 'top', 'bottom']\n    ];\n\n    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\n        var x = 0;\n        var y = 0;\n\n        if (maxWidth == null) {\n            maxWidth = Infinity;\n        }\n        if (maxHeight == null) {\n            maxHeight = Infinity;\n        }\n        var currentLineMaxSize = 0;\n\n        group.eachChild(function (child, idx) {\n            var position = child.position;\n            var rect = child.getBoundingRect();\n            var nextChild = group.childAt(idx + 1);\n            var nextChildRect = nextChild && nextChild.getBoundingRect();\n            var nextX;\n            var nextY;\n\n            if (orient === 'horizontal') {\n                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\n                nextX = x + moveX;\n                // Wrap when width exceeds maxWidth or meet a `newline` group\n                // FIXME compare before adding gap?\n                if (nextX > maxWidth || child.newline) {\n                    x = 0;\n                    nextX = moveX;\n                    y += currentLineMaxSize + gap;\n                    currentLineMaxSize = rect.height;\n                }\n                else {\n                    // FIXME: consider rect.y is not `0`?\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n                }\n            }\n            else {\n                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\n                nextY = y + moveY;\n                // Wrap when width exceeds maxHeight or meet a `newline` group\n                if (nextY > maxHeight || child.newline) {\n                    x += currentLineMaxSize + gap;\n                    y = 0;\n                    nextY = moveY;\n                    currentLineMaxSize = rect.width;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n                }\n            }\n\n            if (child.newline) {\n                return;\n            }\n\n            position[0] = x;\n            position[1] = y;\n\n            orient === 'horizontal'\n                ? (x = nextX + gap)\n                : (y = nextY + gap);\n        });\n    }\n\n    /**\n     * VBox or HBox layouting\n     * @param {string} orient\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.box = boxLayout;\n\n    /**\n     * VBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\n\n    /**\n     * HBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\n\n    /**\n     * If x or x2 is not specified or 'center' 'left' 'right',\n     * the width would be as long as possible.\n     * If y or y2 is not specified or 'middle' 'top' 'bottom',\n     * the height would be as long as possible.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.x]\n     * @param {number|string} [positionInfo.y]\n     * @param {number|string} [positionInfo.x2]\n     * @param {number|string} [positionInfo.y2]\n     * @param {Object} containerRect {width, height}\n     * @param {string|number} margin\n     * @return {Object} {width, height}\n     */\n    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var x = parsePercent(positionInfo.x, containerWidth);\n        var y = parsePercent(positionInfo.y, containerHeight);\n        var x2 = parsePercent(positionInfo.x2, containerWidth);\n        var y2 = parsePercent(positionInfo.y2, containerHeight);\n\n        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        return {\n            width: Math.max(x2 - x - margin[1] - margin[3], 0),\n            height: Math.max(y2 - y - margin[0] - margin[2], 0)\n        };\n    };\n\n    /**\n     * Parse position info.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width]\n     * @param {number|string} [positionInfo.height]\n     * @param {number|string} [positionInfo.aspect] Aspect is width / height\n     * @param {Object} containerRect\n     * @param {string|number} [margin]\n     *\n     * @return {module:zrender/core/BoundingRect}\n     */\n    layout.getLayoutRect = function (\n        positionInfo, containerRect, margin\n    ) {\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var left = parsePercent(positionInfo.left, containerWidth);\n        var top = parsePercent(positionInfo.top, containerHeight);\n        var right = parsePercent(positionInfo.right, containerWidth);\n        var bottom = parsePercent(positionInfo.bottom, containerHeight);\n        var width = parsePercent(positionInfo.width, containerWidth);\n        var height = parsePercent(positionInfo.height, containerHeight);\n\n        var verticalMargin = margin[2] + margin[0];\n        var horizontalMargin = margin[1] + margin[3];\n        var aspect = positionInfo.aspect;\n\n        // If width is not specified, calculate width from left and right\n        if (isNaN(width)) {\n            width = containerWidth - right - horizontalMargin - left;\n        }\n        if (isNaN(height)) {\n            height = containerHeight - bottom - verticalMargin - top;\n        }\n\n        if (aspect != null) {\n            // If width and height are not given\n            // 1. Graph should not exceeds the container\n            // 2. Aspect must be keeped\n            // 3. Graph should take the space as more as possible\n            // FIXME\n            // Margin is not considered, because there is no case that both\n            // using margin and aspect so far.\n            if (isNaN(width) && isNaN(height)) {\n                if (aspect > containerWidth / containerHeight) {\n                    width = containerWidth * 0.8;\n                }\n                else {\n                    height = containerHeight * 0.8;\n                }\n            }\n\n            // Calculate width or height with given aspect\n            if (isNaN(width)) {\n                width = aspect * height;\n            }\n            if (isNaN(height)) {\n                height = width / aspect;\n            }\n        }\n\n        // If left is not specified, calculate left from right and width\n        if (isNaN(left)) {\n            left = containerWidth - right - width - horizontalMargin;\n        }\n        if (isNaN(top)) {\n            top = containerHeight - bottom - height - verticalMargin;\n        }\n\n        // Align left and top\n        switch (positionInfo.left || positionInfo.right) {\n            case 'center':\n                left = containerWidth / 2 - width / 2 - margin[3];\n                break;\n            case 'right':\n                left = containerWidth - width - horizontalMargin;\n                break;\n        }\n        switch (positionInfo.top || positionInfo.bottom) {\n            case 'middle':\n            case 'center':\n                top = containerHeight / 2 - height / 2 - margin[0];\n                break;\n            case 'bottom':\n                top = containerHeight - height - verticalMargin;\n                break;\n        }\n        // If something is wrong and left, top, width, height are calculated as NaN\n        left = left || 0;\n        top = top || 0;\n        if (isNaN(width)) {\n            // Width may be NaN if only one value is given except width\n            width = containerWidth - horizontalMargin - left - (right || 0);\n        }\n        if (isNaN(height)) {\n            // Height may be NaN if only one value is given except height\n            height = containerHeight - verticalMargin - top - (bottom || 0);\n        }\n\n        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n        rect.margin = margin;\n        return rect;\n    };\n\n\n    /**\n     * Position a zr element in viewport\n     *  Group position is specified by either\n     *  {left, top}, {right, bottom}\n     *  If all properties exists, right and bottom will be igonred.\n     *\n     * Logic:\n     *     1. Scale (against origin point in parent coord)\n     *     2. Rotate (against origin point in parent coord)\n     *     3. Traslate (with el.position by this method)\n     * So this method only fixes the last step 'Traslate', which does not affect\n     * scaling and rotating.\n     *\n     * If be called repeatly with the same input el, the same result will be gotten.\n     *\n     * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n     * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @param {Object} [opt]\n     * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n     * @param {Array.<number>} [opt.boundingMode='all']\n     *        Specify how to calculate boundingRect when locating.\n     *        'all': Position the boundingRect that is transformed and uioned\n     *               both itself and its descendants.\n     *               This mode simplies confine the elements in the bounding\n     *               of their container (e.g., using 'right: 0').\n     *        'raw': Position the boundingRect that is not transformed and only itself.\n     *               This mode is useful when you want a element can overflow its\n     *               container. (Consider a rotated circle needs to be located in a corner.)\n     *               In this mode positionInfo.width/height can only be number.\n     */\n    layout.positionElement = function (el, positionInfo, containerRect, margin, opt) {\n        var h = !opt || !opt.hv || opt.hv[0];\n        var v = !opt || !opt.hv || opt.hv[1];\n        var boundingMode = opt && opt.boundingMode || 'all';\n\n        if (!h && !v) {\n            return;\n        }\n\n        var rect;\n        if (boundingMode === 'raw') {\n            rect = el.type === 'group'\n                ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0)\n                : el.getBoundingRect();\n        }\n        else {\n            rect = el.getBoundingRect();\n            if (el.needLocalTransform()) {\n                var transform = el.getLocalTransform();\n                // Notice: raw rect may be inner object of el,\n                // which should not be modified.\n                rect = rect.clone();\n                rect.applyTransform(transform);\n            }\n        }\n\n        // The real width and height can not be specified but calculated by the given el.\n        positionInfo = layout.getLayoutRect(\n            zrUtil.defaults(\n                {width: rect.width, height: rect.height},\n                positionInfo\n            ),\n            containerRect,\n            margin\n        );\n\n        // Because 'tranlate' is the last step in transform\n        // (see zrender/core/Transformable#getLocalTransfrom),\n        // we can just only modify el.position to get final result.\n        var elPos = el.position;\n        var dx = h ? positionInfo.x - rect.x : 0;\n        var dy = v ? positionInfo.y - rect.y : 0;\n\n        el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n    };\n\n    /**\n     * @param {Object} option Contains some of the properties in HV_NAMES.\n     * @param {number} hvIdx 0: horizontal; 1: vertical.\n     */\n    layout.sizeCalculable = function (option, hvIdx) {\n        return option[HV_NAMES[hvIdx][0]] != null\n            || (option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null);\n    };\n\n    /**\n     * Consider Case:\n     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n     * through setOption or media query, using normal zrUtil.merge will cause\n     * {right: 0} does not take effect.\n     *\n     * @example\n     * ComponentModel.extend({\n     *     init: function () {\n     *         ...\n     *         var inputPositionParams = layout.getLayoutParams(option);\n     *         this.mergeOption(inputPositionParams);\n     *     },\n     *     mergeOption: function (newOption) {\n     *         newOption && zrUtil.merge(thisOption, newOption, true);\n     *         layout.mergeLayoutParam(thisOption, newOption);\n     *     }\n     * });\n     *\n     * @param {Object} targetOption\n     * @param {Object} newOption\n     * @param {Object|string} [opt]\n     * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n     *  that width (or height) should not be calculated by left and right (or top and bottom).\n     */\n    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\n        !zrUtil.isObject(opt) && (opt = {});\n\n        var ignoreSize = opt.ignoreSize;\n        !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n\n        var hResult = merge(HV_NAMES[0], 0);\n        var vResult = merge(HV_NAMES[1], 1);\n\n        copy(HV_NAMES[0], targetOption, hResult);\n        copy(HV_NAMES[1], targetOption, vResult);\n\n        function merge(names, hvIdx) {\n            var newParams = {};\n            var newValueCount = 0;\n            var merged = {};\n            var mergedValueCount = 0;\n            var enoughParamNumber = 2;\n\n            each(names, function (name) {\n                merged[name] = targetOption[name];\n            });\n            each(names, function (name) {\n                // Consider case: newOption.width is null, which is\n                // set by user for removing width setting.\n                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n                hasValue(newParams, name) && newValueCount++;\n                hasValue(merged, name) && mergedValueCount++;\n            });\n\n            if (ignoreSize[hvIdx]) {\n                // Only one of left/right is premitted to exist.\n                if (hasValue(newOption, names[1])) {\n                    merged[names[2]] = null;\n                }\n                else if (hasValue(newOption, names[2])) {\n                    merged[names[1]] = null;\n                }\n                return merged;\n            }\n\n            // Case: newOption: {width: ..., right: ...},\n            // or targetOption: {right: ...} and newOption: {width: ...},\n            // There is no conflict when merged only has params count\n            // little than enoughParamNumber.\n            if (mergedValueCount === enoughParamNumber || !newValueCount) {\n                return merged;\n            }\n            // Case: newOption: {width: ..., right: ...},\n            // Than we can make sure user only want those two, and ignore\n            // all origin params in targetOption.\n            else if (newValueCount >= enoughParamNumber) {\n                return newParams;\n            }\n            else {\n                // Chose another param from targetOption by priority.\n                for (var i = 0; i < names.length; i++) {\n                    var name = names[i];\n                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n                        newParams[name] = targetOption[name];\n                        break;\n                    }\n                }\n                return newParams;\n            }\n        }\n\n        function hasProp(obj, name) {\n            return obj.hasOwnProperty(name);\n        }\n\n        function hasValue(obj, name) {\n            return obj[name] != null && obj[name] !== 'auto';\n        }\n\n        function copy(names, target, source) {\n            each(names, function (name) {\n                target[name] = source[name];\n            });\n        }\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.getLayoutParams = function (source) {\n        return layout.copyLayoutParams({}, source);\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.copyLayoutParams = function (target, source) {\n        source && target && each(LOCATION_PARAMS, function (name) {\n            source.hasOwnProperty(name) && (target[name] = source[name]);\n        });\n        return target;\n    };\n\n    module.exports = layout;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/layout.js\n// module id = 619\n// module chunks = 0 1 2","\n\n    var OrdinalScale = require('../scale/Ordinal');\n    var IntervalScale = require('../scale/Interval');\n    require('../scale/Time');\n    require('../scale/Log');\n    var Scale = require('../scale/Scale');\n\n    var numberUtil = require('../util/number');\n    var zrUtil = require('zrender/lib/core/util');\n    var textContain = require('zrender/lib/contain/text');\n    var axisHelper = {};\n\n    /**\n     * Get axis scale extent before niced.\n     * Item of returned array can only be number (including Infinity and NaN).\n     */\n    axisHelper.getScaleExtent = function (scale, model) {\n        var scaleType = scale.type;\n\n        var min = model.getMin();\n        var max = model.getMax();\n        var fixMin = min != null;\n        var fixMax = max != null;\n        var originalExtent = scale.getExtent();\n\n        var axisDataLen;\n        var boundaryGap;\n        var span;\n        if (scaleType === 'ordinal') {\n            axisDataLen = (model.get('data') || []).length;\n        }\n        else {\n            boundaryGap = model.get('boundaryGap');\n            if (!zrUtil.isArray(boundaryGap)) {\n                boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n            }\n            if (typeof boundaryGap[0] === 'boolean') {\n                if (__DEV__) {\n                    console.warn('Boolean type for boundaryGap is only '\n                        + 'allowed for ordinal axis. Please use string in '\n                        + 'percentage instead, e.g., \"20%\". Currently, '\n                        + 'boundaryGap is set to be 0.');\n                }\n                boundaryGap = [0, 0];\n            }\n            boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n            boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n            span = (originalExtent[1] - originalExtent[0])\n                || Math.abs(originalExtent[0]);\n        }\n\n        // Notice: When min/max is not set (that is, when there are null/undefined,\n        // which is the most common case), these cases should be ensured:\n        // (1) For 'ordinal', show all axis.data.\n        // (2) For others:\n        //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n        //      disabled).\n        //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n        //      be the result that originalExtent enlarged by boundaryGap.\n        // (3) If no data, it should be ensured that `scale.setBlank` is set.\n\n        // FIXME\n        // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n        // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n        // that the results processed by boundaryGap are positive/negative?\n\n        if (min == null) {\n            min = scaleType === 'ordinal'\n                ? (axisDataLen ? 0 : NaN)\n                : originalExtent[0] - boundaryGap[0] * span;\n        }\n        if (max == null) {\n            max = scaleType === 'ordinal'\n                ? (axisDataLen ? axisDataLen - 1 : NaN)\n                : originalExtent[1] + boundaryGap[1] * span;\n        }\n\n        if (min === 'dataMin') {\n            min = originalExtent[0];\n        }\n        if (max === 'dataMax') {\n            max = originalExtent[1];\n        }\n\n        (min == null || !isFinite(min)) && (min = NaN);\n        (max == null || !isFinite(max)) && (max = NaN);\n\n        scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max));\n\n        // Evaluate if axis needs cross zero\n        if (model.getNeedCrossZero()) {\n            // Axis is over zero and min is not set\n            if (min > 0 && max > 0 && !fixMin) {\n                min = 0;\n            }\n            // Axis is under zero and max is not set\n            if (min < 0 && max < 0 && !fixMax) {\n                max = 0;\n            }\n        }\n\n        return [min, max];\n    };\n\n    axisHelper.niceScaleExtent = function (scale, model) {\n        var extent = axisHelper.getScaleExtent(scale, model);\n        var fixMin = model.getMin() != null;\n        var fixMax = model.getMax() != null;\n        var splitNumber = model.get('splitNumber');\n\n        if (scale.type === 'log') {\n            scale.base = model.get('logBase');\n        }\n\n        var scaleType = scale.type;\n        scale.setExtent(extent[0], extent[1]);\n        scale.niceExtent({\n            splitNumber: splitNumber,\n            fixMin: fixMin,\n            fixMax: fixMax,\n            minInterval: (scaleType === 'interval' || scaleType === 'time')\n                ? model.get('minInterval') : null,\n            maxInterval: (scaleType === 'interval' || scaleType === 'time')\n                ? model.get('maxInterval') : null\n        });\n\n        // If some one specified the min, max. And the default calculated interval\n        // is not good enough. He can specify the interval. It is often appeared\n        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n        // to be 60.\n        // FIXME\n        var interval = model.get('interval');\n        if (interval != null) {\n            scale.setInterval && scale.setInterval(interval);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @param {string} [axisType] Default retrieve from model.type\n     * @return {module:echarts/scale/*}\n     */\n    axisHelper.createScaleByModel = function(model, axisType) {\n        axisType = axisType || model.get('type');\n        if (axisType) {\n            switch (axisType) {\n                // Buildin scale\n                case 'category':\n                    return new OrdinalScale(\n                        model.getCategories(), [Infinity, -Infinity]\n                    );\n                case 'value':\n                    return new IntervalScale();\n                // Extended scale, like time and log\n                default:\n                    return (Scale.getClass(axisType) || IntervalScale).create(model);\n            }\n        }\n    };\n\n    /**\n     * Check if the axis corss 0\n     */\n    axisHelper.ifAxisCrossZero = function (axis) {\n        var dataExtent = axis.scale.getExtent();\n        var min = dataExtent[0];\n        var max = dataExtent[1];\n        return !((min > 0 && max > 0) || (min < 0 && max < 0));\n    };\n\n    /**\n     * @param {Array.<number>} tickCoords In axis self coordinate.\n     * @param {Array.<string>} labels\n     * @param {string} font\n     * @param {boolean} isAxisHorizontal\n     * @return {number}\n     */\n    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\n        // FIXME\n        // 不同角的axis和label，不只是horizontal和vertical.\n\n        var textSpaceTakenRect;\n        var autoLabelInterval = 0;\n        var accumulatedLabelInterval = 0;\n\n        var step = 1;\n        if (labels.length > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.floor(labels.length / 40);\n        }\n\n        for (var i = 0; i < tickCoords.length; i += step) {\n            var tickCoord = tickCoords[i];\n            var rect = textContain.getBoundingRect(\n                labels[i], font, 'center', 'top'\n            );\n            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\n            // FIXME Magic number 1.5\n            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\n            if (!textSpaceTakenRect) {\n                textSpaceTakenRect = rect.clone();\n            }\n            // There is no space for current label;\n            else if (textSpaceTakenRect.intersect(rect)) {\n                accumulatedLabelInterval++;\n                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n            }\n            else {\n                textSpaceTakenRect.union(rect);\n                // Reset\n                accumulatedLabelInterval = 0;\n            }\n        }\n        if (autoLabelInterval === 0 && step > 1) {\n            return step;\n        }\n        return (autoLabelInterval + 1) * step - 1;\n    };\n\n    /**\n     * @param {Object} axis\n     * @param {Function} labelFormatter\n     * @return {Array.<string>}\n     */\n    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\n        var scale = axis.scale;\n        var labels = scale.getTicksLabels();\n        var ticks = scale.getTicks();\n        if (typeof labelFormatter === 'string') {\n            labelFormatter = (function (tpl) {\n                return function (val) {\n                    return tpl.replace('{value}', val != null ? val : '');\n                };\n            })(labelFormatter);\n            // Consider empty array\n            return zrUtil.map(labels, labelFormatter);\n        }\n        else if (typeof labelFormatter === 'function') {\n            return zrUtil.map(ticks, function (tick, idx) {\n                return labelFormatter(\n                    axisHelper.getAxisRawValue(axis, tick),\n                    idx\n                );\n            }, this);\n        }\n        else {\n            return labels;\n        }\n    };\n\n    axisHelper.getAxisRawValue = function (axis, value) {\n        // In category axis with data zoom, tick is not the original\n        // index of axis.data. So tick should not be exposed to user\n        // in category axis.\n        return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n    };\n\n    module.exports = axisHelper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisHelper.js\n// module id = 620\n// module chunks = 0 1 2","\n\n    var util = require('../core/util');\n    var BoundingRect = require('../core/BoundingRect');\n    var imageHelper = require('../graphic/helper/image');\n\n    var textWidthCache = {};\n    var textWidthCacheCounter = 0;\n\n    var TEXT_CACHE_MAX = 5000;\n    var STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\n    var DEFAULT_FONT = '12px sans-serif';\n\n    var retrieve2 = util.retrieve2;\n    var retrieve3 = util.retrieve3;\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @return {number} width\n     */\n    function getTextWidth(text, font) {\n        font = font || DEFAULT_FONT;\n        var key = text + ':' + font;\n        if (textWidthCache[key]) {\n            return textWidthCache[key];\n        }\n\n        var textLines = (text + '').split('\\n');\n        var width = 0;\n\n        for (var i = 0, l = textLines.length; i < l; i++) {\n            // textContain.measureText may be overrided in SVG or VML\n            width = Math.max(textContain.measureText(textLines[i], font).width, width);\n        }\n\n        if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n            textWidthCacheCounter = 0;\n            textWidthCache = {};\n        }\n        textWidthCacheCounter++;\n        textWidthCache[key] = width;\n\n        return width;\n    }\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @param {string} [textAlign='left']\n     * @param {string} [textVerticalAlign='top']\n     * @param {Array.<number>} [textPadding]\n     * @param {Object} [rich]\n     * @param {Object} [truncate]\n     * @return {Object} {x, y, width, height, lineHeight}\n     */\n    function getTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n        return rich\n            ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate)\n            : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n    }\n\n    function getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n        var contentBlock = parsePlainText(text, font, textPadding, truncate);\n        var outerWidth = getTextWidth(text, font);\n        if (textPadding) {\n            outerWidth += textPadding[1] + textPadding[3];\n        }\n        var outerHeight = contentBlock.outerHeight;\n\n        var x = adjustTextX(0, outerWidth, textAlign);\n        var y = adjustTextY(0, outerHeight, textVerticalAlign);\n\n        var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n        rect.lineHeight = contentBlock.lineHeight;\n\n        return rect;\n    }\n\n    function getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n        var contentBlock = parseRichText(text, {\n            rich: rich,\n            truncate: truncate,\n            font: font,\n            textAlign: textAlign,\n            textPadding: textPadding\n        });\n        var outerWidth = contentBlock.outerWidth;\n        var outerHeight = contentBlock.outerHeight;\n\n        var x = adjustTextX(0, outerWidth, textAlign);\n        var y = adjustTextY(0, outerHeight, textVerticalAlign);\n\n        return new BoundingRect(x, y, outerWidth, outerHeight);\n    }\n\n    /**\n     * @public\n     * @param {number} x\n     * @param {number} width\n     * @param {string} [textAlign='left']\n     * @return {number} Adjusted x.\n     */\n    function adjustTextX(x, width, textAlign) {\n        // FIXME Right to left language\n        if (textAlign === 'right') {\n            x -= width;\n        }\n        else if (textAlign === 'center') {\n            x -= width / 2;\n        }\n        return x;\n    }\n\n    /**\n     * @public\n     * @param {number} y\n     * @param {number} height\n     * @param {string} [textVerticalAlign='top']\n     * @return {number} Adjusted y.\n     */\n    function adjustTextY(y, height, textVerticalAlign) {\n        if (textVerticalAlign === 'middle') {\n            y -= height / 2;\n        }\n        else if (textVerticalAlign === 'bottom') {\n            y -= height;\n        }\n        return y;\n    }\n\n    /**\n     * @public\n     * @param {stirng} textPosition\n     * @param {Object} rect {x, y, width, height}\n     * @param {number} distance\n     * @return {Object} {x, y, textAlign, textVerticalAlign}\n     */\n    function adjustTextPositionOnRect(textPosition, rect, distance) {\n\n        var x = rect.x;\n        var y = rect.y;\n\n        var height = rect.height;\n        var width = rect.width;\n        var halfHeight = height / 2;\n\n        var textAlign = 'left';\n        var textVerticalAlign = 'top';\n\n        switch (textPosition) {\n            case 'left':\n                x -= distance;\n                y += halfHeight;\n                textAlign = 'right';\n                textVerticalAlign = 'middle';\n                break;\n            case 'right':\n                x += distance + width;\n                y += halfHeight;\n                textVerticalAlign = 'middle';\n                break;\n            case 'top':\n                x += width / 2;\n                y -= distance;\n                textAlign = 'center';\n                textVerticalAlign = 'bottom';\n                break;\n            case 'bottom':\n                x += width / 2;\n                y += height + distance;\n                textAlign = 'center';\n                break;\n            case 'inside':\n                x += width / 2;\n                y += halfHeight;\n                textAlign = 'center';\n                textVerticalAlign = 'middle';\n                break;\n            case 'insideLeft':\n                x += distance;\n                y += halfHeight;\n                textVerticalAlign = 'middle';\n                break;\n            case 'insideRight':\n                x += width - distance;\n                y += halfHeight;\n                textAlign = 'right';\n                textVerticalAlign = 'middle';\n                break;\n            case 'insideTop':\n                x += width / 2;\n                y += distance;\n                textAlign = 'center';\n                break;\n            case 'insideBottom':\n                x += width / 2;\n                y += height - distance;\n                textAlign = 'center';\n                textVerticalAlign = 'bottom';\n                break;\n            case 'insideTopLeft':\n                x += distance;\n                y += distance;\n                break;\n            case 'insideTopRight':\n                x += width - distance;\n                y += distance;\n                textAlign = 'right';\n                break;\n            case 'insideBottomLeft':\n                x += distance;\n                y += height - distance;\n                textVerticalAlign = 'bottom';\n                break;\n            case 'insideBottomRight':\n                x += width - distance;\n                y += height - distance;\n                textAlign = 'right';\n                textVerticalAlign = 'bottom';\n                break;\n        }\n\n        return {\n            x: x,\n            y: y,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    /**\n     * Show ellipsis if overflow.\n     *\n     * @public\n     * @param  {string} text\n     * @param  {string} containerWidth\n     * @param  {string} font\n     * @param  {number} [ellipsis='...']\n     * @param  {Object} [options]\n     * @param  {number} [options.maxIterations=3]\n     * @param  {number} [options.minChar=0] If truncate result are less\n     *                  then minChar, ellipsis will not show, which is\n     *                  better for user hint in some cases.\n     * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n     * @return {string}\n     */\n    function truncateText(text, containerWidth, font, ellipsis, options) {\n        if (!containerWidth) {\n            return '';\n        }\n\n        var textLines = (text + '').split('\\n');\n        options = prepareTruncateOptions(containerWidth, font, ellipsis, options);\n\n        // FIXME\n        // It is not appropriate that every line has '...' when truncate multiple lines.\n        for (var i = 0, len = textLines.length; i < len; i++) {\n            textLines[i] = truncateSingleLine(textLines[i], options);\n        }\n\n        return textLines.join('\\n');\n    }\n\n    function prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n        options = util.extend({}, options);\n\n        options.font = font;\n        var ellipsis = retrieve2(ellipsis, '...');\n        options.maxIterations = retrieve2(options.maxIterations, 2);\n        var minChar = options.minChar = retrieve2(options.minChar, 0);\n        // FIXME\n        // Other languages?\n        options.cnCharWidth = getTextWidth('国', font);\n        // FIXME\n        // Consider proportional font?\n        var ascCharWidth = options.ascCharWidth = getTextWidth('a', font);\n        options.placeholder = retrieve2(options.placeholder, '');\n\n        // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n        // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n        var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n        for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n            contentWidth -= ascCharWidth;\n        }\n\n        var ellipsisWidth = getTextWidth(ellipsis);\n        if (ellipsisWidth > contentWidth) {\n            ellipsis = '';\n            ellipsisWidth = 0;\n        }\n\n        contentWidth = containerWidth - ellipsisWidth;\n\n        options.ellipsis = ellipsis;\n        options.ellipsisWidth = ellipsisWidth;\n        options.contentWidth = contentWidth;\n        options.containerWidth = containerWidth;\n\n        return options;\n    }\n\n    function truncateSingleLine(textLine, options) {\n        var containerWidth = options.containerWidth;\n        var font = options.font;\n        var contentWidth = options.contentWidth;\n\n        if (!containerWidth) {\n            return '';\n        }\n\n        var lineWidth = getTextWidth(textLine, font);\n\n        if (lineWidth <= containerWidth) {\n            return textLine;\n        }\n\n        for (var j = 0;; j++) {\n            if (lineWidth <= contentWidth || j >= options.maxIterations) {\n                textLine += options.ellipsis;\n                break;\n            }\n\n            var subLength = j === 0\n                ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth)\n                : lineWidth > 0\n                ? Math.floor(textLine.length * contentWidth / lineWidth)\n                : 0;\n\n            textLine = textLine.substr(0, subLength);\n            lineWidth = getTextWidth(textLine, font);\n        }\n\n        if (textLine === '') {\n            textLine = options.placeholder;\n        }\n\n        return textLine;\n    }\n\n    function estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n        var width = 0;\n        var i = 0;\n        for (var len = text.length; i < len && width < contentWidth; i++) {\n            var charCode = text.charCodeAt(i);\n            width += (0 <= charCode && charCode <= 127) ? ascCharWidth : cnCharWidth;\n        }\n        return i;\n    }\n\n    /**\n     * @public\n     * @param {string} font\n     * @return {number} line height\n     */\n    function getLineHeight(font) {\n        // FIXME A rough approach.\n        return getTextWidth('国', font);\n    }\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @return {Object} width\n     */\n    function measureText(text, font) {\n        var ctx = util.getContext();\n        ctx.font = font || DEFAULT_FONT;\n        return ctx.measureText(text);\n    }\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @param {Object} [truncate]\n     * @return {Object} block: {lineHeight, lines, height, outerHeight}\n     *  Notice: for performance, do not calculate outerWidth util needed.\n     */\n    function parsePlainText(text, font, padding, truncate) {\n        text != null && (text += '');\n\n        var lineHeight = getLineHeight(font);\n        var lines = text ? text.split('\\n') : [];\n        var height = lines.length * lineHeight;\n        var outerHeight = height;\n\n        if (padding) {\n            outerHeight += padding[0] + padding[2];\n        }\n\n        if (text && truncate) {\n            var truncOuterHeight = truncate.outerHeight;\n            var truncOuterWidth = truncate.outerWidth;\n            if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n                text = '';\n                lines = [];\n            }\n            else if (truncOuterWidth != null) {\n                var options = prepareTruncateOptions(\n                    truncOuterWidth - (padding ? padding[1] + padding[3] : 0),\n                    font,\n                    truncate.ellipsis,\n                    {minChar: truncate.minChar, placeholder: truncate.placeholder}\n                );\n\n                // FIXME\n                // It is not appropriate that every line has '...' when truncate multiple lines.\n                for (var i = 0, len = lines.length; i < len; i++) {\n                    lines[i] = truncateSingleLine(lines[i], options);\n                }\n            }\n        }\n\n        return {\n            lines: lines,\n            height: height,\n            outerHeight: outerHeight,\n            lineHeight: lineHeight\n        };\n    }\n\n    /**\n     * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n     * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n     *\n     * @public\n     * @param {string} text\n     * @param {Object} style\n     * @return {Object} block\n     * {\n     *      width,\n     *      height,\n     *      lines: [{\n     *          lineHeight,\n     *          width,\n     *          tokens: [[{\n     *              styleName,\n     *              text,\n     *              width,      // include textPadding\n     *              height,     // include textPadding\n     *              textWidth, // pure text width\n     *              textHeight, // pure text height\n     *              lineHeihgt,\n     *              font,\n     *              textAlign,\n     *              textVerticalAlign\n     *          }], [...], ...]\n     *      }, ...]\n     * }\n     * If styleName is undefined, it is plain text.\n     */\n    function parseRichText(text, style) {\n        var contentBlock = {lines: [], width: 0, height: 0};\n\n        text != null && (text += '');\n        if (!text) {\n            return contentBlock;\n        }\n\n        var lastIndex = STYLE_REG.lastIndex = 0;\n        var result;\n        while ((result = STYLE_REG.exec(text)) != null)  {\n            var matchedIndex = result.index;\n            if (matchedIndex > lastIndex) {\n                pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n            }\n            pushTokens(contentBlock, result[2], result[1]);\n            lastIndex = STYLE_REG.lastIndex;\n        }\n\n        if (lastIndex < text.length) {\n            pushTokens(contentBlock, text.substring(lastIndex, text.length));\n        }\n\n        var lines = contentBlock.lines;\n        var contentHeight = 0;\n        var contentWidth = 0;\n        // For `textWidth: 100%`\n        var pendingList = [];\n\n        var stlPadding = style.textPadding;\n\n        var truncate = style.truncate;\n        var truncateWidth = truncate && truncate.outerWidth;\n        var truncateHeight = truncate && truncate.outerHeight;\n        if (stlPadding) {\n            truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n            truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n        }\n\n        // Calculate layout info of tokens.\n        for (var i = 0; i < lines.length; i++) {\n            var line = lines[i];\n            var lineHeight = 0;\n            var lineWidth = 0;\n\n            for (var j = 0; j < line.tokens.length; j++) {\n                var token = line.tokens[j];\n                var tokenStyle = token.styleName && style.rich[token.styleName] || {};\n                // textPadding should not inherit from style.\n                var textPadding = token.textPadding = tokenStyle.textPadding;\n\n                // textFont has been asigned to font by `normalizeStyle`.\n                var font = token.font = tokenStyle.font || style.font;\n\n                // textHeight can be used when textVerticalAlign is specified in token.\n                var tokenHeight = token.textHeight = retrieve2(\n                    // textHeight should not be inherited, consider it can be specified\n                    // as box height of the block.\n                    tokenStyle.textHeight, textContain.getLineHeight(font)\n                );\n                textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n                token.height = tokenHeight;\n                token.lineHeight = retrieve3(\n                    tokenStyle.textLineHeight, style.textLineHeight, tokenHeight\n                );\n\n                token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n                token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n                if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n                    return {lines: [], width: 0, height: 0};\n                }\n\n                token.textWidth = textContain.getWidth(token.text, font);\n                var tokenWidth = tokenStyle.textWidth;\n                var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto';\n\n                // Percent width, can be `100%`, can be used in drawing separate\n                // line when box width is needed to be auto.\n                if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n                    token.percentWidth = tokenWidth;\n                    pendingList.push(token);\n                    tokenWidth = 0;\n                    // Do not truncate in this case, because there is no user case\n                    // and it is too complicated.\n                }\n                else {\n                    if (tokenWidthNotSpecified) {\n                        tokenWidth = token.textWidth;\n\n                        // FIXME: If image is not loaded and textWidth is not specified, calling\n                        // `getBoundingRect()` will not get correct result.\n                        var textBackgroundColor = tokenStyle.textBackgroundColor;\n                        var bgImg = textBackgroundColor && textBackgroundColor.image;\n\n                        // Use cases:\n                        // (1) If image is not loaded, it will be loaded at render phase and call\n                        // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n                        // image, and then the right size will be calculated here at the next tick.\n                        // See `graphic/helper/text.js`.\n                        // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n                        // use `imageHelper.findExistImage` to find cached image.\n                        // `imageHelper.findExistImage` will always be called here before\n                        // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n                        // which ensures that image will not be rendered before correct size calcualted.\n                        if (bgImg) {\n                            bgImg = imageHelper.findExistImage(bgImg);\n                            if (imageHelper.isImageReady(bgImg)) {\n                                tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n                            }\n                        }\n                    }\n\n                    var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n                    tokenWidth += paddingW;\n\n                    var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n                    if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n                        if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n                            token.text = '';\n                            token.textWidth = tokenWidth = 0;\n                        }\n                        else {\n                            token.text = truncateText(\n                                token.text, remianTruncWidth - paddingW, font, truncate.ellipsis,\n                                {minChar: truncate.minChar}\n                            );\n                            token.textWidth = textContain.getWidth(token.text, font);\n                            tokenWidth = token.textWidth + paddingW;\n                        }\n                    }\n                }\n\n                lineWidth += (token.width = tokenWidth);\n                tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n            }\n\n            line.width = lineWidth;\n            line.lineHeight = lineHeight;\n            contentHeight += lineHeight;\n            contentWidth = Math.max(contentWidth, lineWidth);\n        }\n\n        contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n        contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n        if (stlPadding) {\n            contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n            contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n        }\n\n        for (var i = 0; i < pendingList.length; i++) {\n            var token = pendingList[i];\n            var percentWidth = token.percentWidth;\n            // Should not base on outerWidth, because token can not be placed out of padding.\n            token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n        }\n\n        return contentBlock;\n    }\n\n    function pushTokens(block, str, styleName) {\n        var isEmptyStr = str === '';\n        var strs = str.split('\\n');\n        var lines = block.lines;\n\n        for (var i = 0; i < strs.length; i++) {\n            var text = strs[i];\n            var token = {\n                styleName: styleName,\n                text: text,\n                isLineHolder: !text && !isEmptyStr\n            };\n\n            // The first token should be appended to the last line.\n            if (!i) {\n                var tokens = (lines[lines.length - 1] || (lines[0] = {tokens: []})).tokens;\n\n                // Consider cases:\n                // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n                // (which is a placeholder) should be replaced by new token.\n                // (2) A image backage, where token likes {a|}.\n                // (3) A redundant '' will affect textAlign in line.\n                // (4) tokens with the same tplName should not be merged, because\n                // they should be displayed in different box (with border and padding).\n                var tokensLen = tokens.length;\n                (tokensLen === 1 && tokens[0].isLineHolder)\n                    ? (tokens[0] = token)\n                    // Consider text is '', only insert when it is the \"lineHolder\" or\n                    // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n                    : ((text || !tokensLen || isEmptyStr) && tokens.push(token));\n            }\n            // Other tokens always start a new line.\n            else {\n                // If there is '', insert it as a placeholder.\n                lines.push({tokens: [token]});\n            }\n        }\n    }\n\n    function makeFont(style) {\n        // FIXME in node-canvas fontWeight is before fontStyle\n        // Use `fontSize` `fontFamily` to check whether font properties are defined.\n        return (style.fontSize || style.fontFamily) && [\n            style.fontStyle,\n            style.fontWeight,\n            (style.fontSize || 12) + 'px',\n            // If font properties are defined, `fontFamily` should not be ignored.\n            style.fontFamily || 'sans-serif'\n        ].join(' ') || style.textFont || style.font;\n    }\n\n    var textContain = {\n\n        getWidth: getTextWidth,\n\n        getBoundingRect: getTextRect,\n\n        adjustTextPositionOnRect: adjustTextPositionOnRect,\n\n        truncateText: truncateText,\n\n        measureText: measureText,\n\n        getLineHeight: getLineHeight,\n\n        parsePlainText: parsePlainText,\n\n        parseRichText: parseRichText,\n\n        adjustTextX: adjustTextX,\n\n        adjustTextY: adjustTextY,\n\n        makeFont: makeFont,\n\n        DEFAULT_FONT: DEFAULT_FONT\n    };\n\n    module.exports = textContain;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/text.js\n// module id = 621\n// module chunks = 0 1 2","'use strict';\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var vec2 = require('./vector');\n    var v2Create = vec2.create;\n    var v2DistSquare = vec2.distSquare;\n    var mathPow = Math.pow;\n    var mathSqrt = Math.sqrt;\n\n    var EPSILON = 1e-8;\n    var EPSILON_NUMERIC = 1e-4;\n\n    var THREE_SQRT = mathSqrt(3);\n    var ONE_THIRD = 1 / 3;\n\n    // 临时变量\n    var _v0 = v2Create();\n    var _v1 = v2Create();\n    var _v2 = v2Create();\n    // var _v3 = vec2.create();\n\n    function isAroundZero(val) {\n        return val > -EPSILON && val < EPSILON;\n    }\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n    /**\n     * 计算三次贝塞尔值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return onet * onet * (onet * p0 + 3 * t * p1)\n             + t * t * (t * p3 + 3 * onet * p2);\n    }\n\n    /**\n     * 计算三次贝塞尔导数值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicDerivativeAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return 3 * (\n            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\n            + (p3 - p2) * t * t\n        );\n    }\n\n    /**\n     * 计算三次贝塞尔方程根，使用盛金公式\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} val\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function cubicRootAt(p0, p1, p2, p3, val, roots) {\n        // Evaluate roots of cubic functions\n        var a = p3 + 3 * (p1 - p2) - p0;\n        var b = 3 * (p2 - p1 * 2 + p0);\n        var c = 3 * (p1  - p0);\n        var d = p0 - val;\n\n        var A = b * b - 3 * a * c;\n        var B = b * c - 9 * a * d;\n        var C = c * c - 3 * b * d;\n\n        var n = 0;\n\n        if (isAroundZero(A) && isAroundZero(B)) {\n            if (isAroundZero(b)) {\n                roots[0] = 0;\n            }\n            else {\n                var t1 = -c / b;  //t1, t2, t3, b is not zero\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = B * B - 4 * A * C;\n\n            if (isAroundZero(disc)) {\n                var K = B / A;\n                var t1 = -b / a + K;  // t1, a is not zero\n                var t2 = -K / 2;  // t2, t3\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n                if (Y1 < 0) {\n                    Y1 = -mathPow(-Y1, ONE_THIRD);\n                }\n                else {\n                    Y1 = mathPow(Y1, ONE_THIRD);\n                }\n                if (Y2 < 0) {\n                    Y2 = -mathPow(-Y2, ONE_THIRD);\n                }\n                else {\n                    Y2 = mathPow(Y2, ONE_THIRD);\n                }\n                var t1 = (-b - (Y1 + Y2)) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else {\n                var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n                var theta = Math.acos(T) / 3;\n                var ASqrt = mathSqrt(A);\n                var tmp = Math.cos(theta);\n\n                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n                if (t3 >= 0 && t3 <= 1) {\n                    roots[n++] = t3;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算三次贝塞尔方程极限值的位置\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {Array.<number>} extrema\n     * @return {number} 有效数目\n     */\n    function cubicExtrema(p0, p1, p2, p3, extrema) {\n        var b = 6 * p2 - 12 * p1 + 6 * p0;\n        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n        var c = 3 * p1 - 3 * p0;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <=1) {\n                    extrema[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                extrema[0] = -b / (2 * a);\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    extrema[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    extrema[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 细分三次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function cubicSubdivide(p0, p1, p2, p3, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p23 = (p3 - p2) * t + p2;\n\n        var p012 = (p12 - p01) * t + p01;\n        var p123 = (p23 - p12) * t + p12;\n\n        var p0123 = (p123 - p012) * t + p012;\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n        out[3] = p0123;\n        // Seg1\n        out[4] = p0123;\n        out[5] = p123;\n        out[6] = p23;\n        out[7] = p3;\n    }\n\n    /**\n     * 投射点到三次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} [out] 投射点\n     * @return {number}\n     */\n    function cubicProjectPoint(\n        x0, y0, x1, y1, x2, y2, x3, y3,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n        var prev;\n        var next;\n        var d1;\n        var d2;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n            d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            prev = t - interval;\n            next = t + interval;\n            // t - interval\n            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n\n            d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = cubicAt(x0, x1, x2, x3, next);\n                _v2[1] = cubicAt(y0, y1, y2, y3, next);\n                d2 = v2DistSquare(_v2, _v0);\n\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = cubicAt(x0, x1, x2, x3, t);\n            out[1] = cubicAt(y0, y1, y2, y3, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    /**\n     * 计算二次方贝塞尔值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticAt(p0, p1, p2, t) {\n        var onet = 1 - t;\n        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n    }\n\n    /**\n     * 计算二次方贝塞尔导数值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticDerivativeAt(p0, p1, p2, t) {\n        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n    }\n\n    /**\n     * 计算二次方贝塞尔方程根\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function quadraticRootAt(p0, p1, p2, val, roots) {\n        var a = p0 - 2 * p1 + p2;\n        var b = 2 * (p1 - p0);\n        var c = p0 - val;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                var t1 = -b / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算二次贝塞尔方程极限值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @return {number}\n     */\n    function quadraticExtremum(p0, p1, p2) {\n        var divider = p0 + p2 - 2 * p1;\n        if (divider === 0) {\n            // p1 is center of p0 and p2\n            return 0.5;\n        }\n        else {\n            return (p0 - p1) / divider;\n        }\n    }\n\n    /**\n     * 细分二次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function quadraticSubdivide(p0, p1, p2, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p012 = (p12 - p01) * t + p01;\n\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n\n        // Seg1\n        out[3] = p012;\n        out[4] = p12;\n        out[5] = p2;\n    }\n\n    /**\n     * 投射点到二次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} out 投射点\n     * @return {number}\n     */\n    function quadraticProjectPoint(\n        x0, y0, x1, y1, x2, y2,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = quadraticAt(x0, x1, x2, _t);\n            _v1[1] = quadraticAt(y0, y1, y2, _t);\n            var d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            var prev = t - interval;\n            var next = t + interval;\n            // t - interval\n            _v1[0] = quadraticAt(x0, x1, x2, prev);\n            _v1[1] = quadraticAt(y0, y1, y2, prev);\n\n            var d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = quadraticAt(x0, x1, x2, next);\n                _v2[1] = quadraticAt(y0, y1, y2, next);\n                var d2 = v2DistSquare(_v2, _v0);\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = quadraticAt(x0, x1, x2, t);\n            out[1] = quadraticAt(y0, y1, y2, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    module.exports = {\n\n        cubicAt: cubicAt,\n\n        cubicDerivativeAt: cubicDerivativeAt,\n\n        cubicRootAt: cubicRootAt,\n\n        cubicExtrema: cubicExtrema,\n\n        cubicSubdivide: cubicSubdivide,\n\n        cubicProjectPoint: cubicProjectPoint,\n\n        quadraticAt: quadraticAt,\n\n        quadraticDerivativeAt: quadraticDerivativeAt,\n\n        quadraticRootAt: quadraticRootAt,\n\n        quadraticExtremum: quadraticExtremum,\n\n        quadraticSubdivide: quadraticSubdivide,\n\n        quadraticProjectPoint: quadraticProjectPoint\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/curve.js\n// module id = 622\n// module chunks = 0 1 2","\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n    /**\n     * 3x2矩阵操作类\n     * @exports zrender/tool/matrix\n     */\n    var matrix = {\n        /**\n         * 创建一个单位矩阵\n         * @return {Float32Array|Array.<number>}\n         */\n        create : function() {\n            var out = new ArrayCtor(6);\n            matrix.identity(out);\n\n            return out;\n        },\n        /**\n         * 设置矩阵为单位矩阵\n         * @param {Float32Array|Array.<number>} out\n         */\n        identity : function(out) {\n            out[0] = 1;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            out[4] = 0;\n            out[5] = 0;\n            return out;\n        },\n        /**\n         * 复制矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m\n         */\n        copy: function(out, m) {\n            out[0] = m[0];\n            out[1] = m[1];\n            out[2] = m[2];\n            out[3] = m[3];\n            out[4] = m[4];\n            out[5] = m[5];\n            return out;\n        },\n        /**\n         * 矩阵相乘\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m1\n         * @param {Float32Array|Array.<number>} m2\n         */\n        mul : function (out, m1, m2) {\n            // Consider matrix.mul(m, m2, m);\n            // where out is the same as m2.\n            // So use temp variable to escape error.\n            var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n            var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n            var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n            var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n            var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n            var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n            out[0] = out0;\n            out[1] = out1;\n            out[2] = out2;\n            out[3] = out3;\n            out[4] = out4;\n            out[5] = out5;\n            return out;\n        },\n        /**\n         * 平移变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        translate : function(out, a, v) {\n            out[0] = a[0];\n            out[1] = a[1];\n            out[2] = a[2];\n            out[3] = a[3];\n            out[4] = a[4] + v[0];\n            out[5] = a[5] + v[1];\n            return out;\n        },\n        /**\n         * 旋转变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {number} rad\n         */\n        rotate : function(out, a, rad) {\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n            var st = Math.sin(rad);\n            var ct = Math.cos(rad);\n\n            out[0] = aa * ct + ab * st;\n            out[1] = -aa * st + ab * ct;\n            out[2] = ac * ct + ad * st;\n            out[3] = -ac * st + ct * ad;\n            out[4] = ct * atx + st * aty;\n            out[5] = ct * aty - st * atx;\n            return out;\n        },\n        /**\n         * 缩放变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        scale : function(out, a, v) {\n            var vx = v[0];\n            var vy = v[1];\n            out[0] = a[0] * vx;\n            out[1] = a[1] * vy;\n            out[2] = a[2] * vx;\n            out[3] = a[3] * vy;\n            out[4] = a[4] * vx;\n            out[5] = a[5] * vy;\n            return out;\n        },\n        /**\n         * 求逆矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         */\n        invert : function(out, a) {\n\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n\n            var det = aa * ad - ab * ac;\n            if (!det) {\n                return null;\n            }\n            det = 1.0 / det;\n\n            out[0] = ad * det;\n            out[1] = -ab * det;\n            out[2] = -ac * det;\n            out[3] = aa * det;\n            out[4] = (ac * aty - ad * atx) * det;\n            out[5] = (ab * atx - aa * aty) * det;\n            return out;\n        }\n    };\n\n    module.exports = matrix;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/matrix.js\n// module id = 623\n// module chunks = 0 1 2","module.exports = function (date, fmt = 'YYYY-MM-DD HH:mm:ss') {\r\n  if (!date) {\r\n    return ''\r\n  }\r\n  if (typeof date === 'string') {\r\n    date = new Date(date.replace(/-/g, '/'))\r\n  }\r\n  if (typeof date === 'number') {\r\n    date = new Date(date)\r\n  }\r\n  var o = {\r\n    'M+': date.getMonth() + 1,\r\n    'D+': date.getDate(),\r\n    'h+': date.getHours() % 12 === 0 ? 12 : date.getHours() % 12,\r\n    'H+': date.getHours(),\r\n    'm+': date.getMinutes(),\r\n    's+': date.getSeconds(),\r\n    'q+': Math.floor((date.getMonth() + 3) / 3),\r\n    'S': date.getMilliseconds()\r\n  }\r\n  var week = {\r\n    '0': '\\u65e5',\r\n    '1': '\\u4e00',\r\n    '2': '\\u4e8c',\r\n    '3': '\\u4e09',\r\n    '4': '\\u56db',\r\n    '5': '\\u4e94',\r\n    '6': '\\u516d'\r\n  }\r\n  if (/(Y+)/.test(fmt)) {\r\n    fmt = fmt.replace(RegExp.$1, (date.getFullYear() + '').substr(4 - RegExp.$1.length))\r\n  }\r\n  if (/(E+)/.test(fmt)) {\r\n    fmt = fmt.replace(RegExp.$1, ((RegExp.$1.length > 1) ? (RegExp.$1.length > 2 ? '\\u661f\\u671f' : '\\u5468') : '') + week[date.getDay() + ''])\r\n  }\r\n  for (var k in o) {\r\n    if (new RegExp('(' + k + ')').test(fmt)) {\r\n      fmt = fmt.replace(RegExp.$1, (RegExp.$1.length === 1) ? (o[k]) : (('00' + o[k]).substr(('' + o[k]).length)))\r\n    }\r\n  }\r\n  return fmt\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/vux/src/tools/date/format.js","'use strict';\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n\n    var Eventful = require('../mixin/Eventful');\n    var env = require('./env');\n\n    var isDomLevel2 = (typeof window !== 'undefined') && !!window.addEventListener;\n\n    function getBoundingClientRect(el) {\n        // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n        return el.getBoundingClientRect ? el.getBoundingClientRect() : {left: 0, top: 0};\n    }\n\n    // `calculate` is optional, default false\n    function clientToLocal(el, e, out, calculate) {\n        out = out || {};\n\n        // According to the W3C Working Draft, offsetX and offsetY should be relative\n        // to the padding edge of the target element. The only browser using this convention\n        // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n        // not support the properties.\n        // (see http://www.jacklmoore.com/notes/mouse-position/)\n        // In zr painter.dom, padding edge equals to border edge.\n\n        // FIXME\n        // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n        // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n        // is too complex. So css-transfrom dont support in this case temporarily.\n        if (calculate || !env.canvasSupported) {\n            defaultGetZrXY(el, e, out);\n        }\n        // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n        // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n        // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n        // zoom-factor, overflow / opacity layers, transforms ...)\n        // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n        // <https://bugs.jquery.com/ticket/8523#comment:14>\n        // BTW3, In ff, offsetX/offsetY is always 0.\n        else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n            out.zrX = e.layerX;\n            out.zrY = e.layerY;\n        }\n        // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n        else if (e.offsetX != null) {\n            out.zrX = e.offsetX;\n            out.zrY = e.offsetY;\n        }\n        // For some other device, e.g., IOS safari.\n        else {\n            defaultGetZrXY(el, e, out);\n        }\n\n        return out;\n    }\n\n    function defaultGetZrXY(el, e, out) {\n        // This well-known method below does not support css transform.\n        var box = getBoundingClientRect(el);\n        out.zrX = e.clientX - box.left;\n        out.zrY = e.clientY - box.top;\n    }\n\n    /**\n     * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n     * `calculate` is optional, default false.\n     */\n    function normalizeEvent(el, e, calculate) {\n\n        e = e || window.event;\n\n        if (e.zrX != null) {\n            return e;\n        }\n\n        var eventType = e.type;\n        var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n        if (!isTouch) {\n            clientToLocal(el, e, e, calculate);\n            e.zrDelta = (e.wheelDelta) ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n        }\n        else {\n            var touch = eventType != 'touchend'\n                ? e.targetTouches[0]\n                : e.changedTouches[0];\n            touch && clientToLocal(el, touch, e, calculate);\n        }\n\n        return e;\n    }\n\n    function addEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.addEventListener(name, handler);\n        }\n        else {\n            el.attachEvent('on' + name, handler);\n        }\n    }\n\n    function removeEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.removeEventListener(name, handler);\n        }\n        else {\n            el.detachEvent('on' + name, handler);\n        }\n    }\n\n    /**\n     * preventDefault and stopPropagation.\n     * Notice: do not do that in zrender. Upper application\n     * do that if necessary.\n     *\n     * @memberOf module:zrender/core/event\n     * @method\n     * @param {Event} e : event对象\n     */\n    var stop = isDomLevel2\n        ? function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.cancelBubble = true;\n        }\n        : function (e) {\n            e.returnValue = false;\n            e.cancelBubble = true;\n        };\n\n    module.exports = {\n        clientToLocal: clientToLocal,\n        normalizeEvent: normalizeEvent,\n        addEventListener: addEventListener,\n        removeEventListener: removeEventListener,\n\n        stop: stop,\n        // 做向上兼容\n        Dispatcher: Eventful\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/event.js\n// module id = 625\n// module chunks = 0 1 2","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n\n\n    var arrySlice = Array.prototype.slice;\n\n    /**\n     * 事件分发器\n     * @alias module:zrender/mixin/Eventful\n     * @constructor\n     */\n    var Eventful = function () {\n        this._$handlers = {};\n    };\n\n    Eventful.prototype = {\n\n        constructor: Eventful,\n\n        /**\n         * 单次触发绑定，trigger后销毁\n         *\n         * @param {string} event 事件名\n         * @param {Function} handler 响应函数\n         * @param {Object} context\n         */\n        one: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: true,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 绑定事件\n         * @param {string} event 事件名\n         * @param {Function} handler 事件处理函数\n         * @param {Object} [context]\n         */\n        on: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: false,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 是否绑定了事件\n         * @param  {string}  event\n         * @return {boolean}\n         */\n        isSilent: function (event) {\n            var _h = this._$handlers;\n            return _h[event] && _h[event].length;\n        },\n\n        /**\n         * 解绑事件\n         * @param {string} event 事件名\n         * @param {Function} [handler] 事件处理函数\n         */\n        off: function (event, handler) {\n            var _h = this._$handlers;\n\n            if (!event) {\n                this._$handlers = {};\n                return this;\n            }\n\n            if (handler) {\n                if (_h[event]) {\n                    var newList = [];\n                    for (var i = 0, l = _h[event].length; i < l; i++) {\n                        if (_h[event][i]['h'] != handler) {\n                            newList.push(_h[event][i]);\n                        }\n                    }\n                    _h[event] = newList;\n                }\n\n                if (_h[event] && _h[event].length === 0) {\n                    delete _h[event];\n                }\n            }\n            else {\n                delete _h[event];\n            }\n\n            return this;\n        },\n\n        /**\n         * 事件分发\n         *\n         * @param {string} type 事件类型\n         */\n        trigger: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 3) {\n                    args = arrySlice.call(args, 1);\n                }\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(_h[i]['ctx']);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(_h[i]['ctx'], args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 带有context的事件分发, 最后一个参数是事件回调的context\n         * @param {string} type 事件类型\n         */\n        triggerWithContext: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 4) {\n                    args = arrySlice.call(args, 1, args.length - 1);\n                }\n                var ctx = args[args.length - 1];\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(ctx);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(ctx, args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(ctx, args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(ctx, args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        }\n    };\n\n    // 对象可以通过 onxxxx 绑定事件\n    /**\n     * @event module:zrender/mixin/Eventful#onclick\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseout\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousemove\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousewheel\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousedown\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseup\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrag\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragstart\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragend\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragenter\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragleave\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrop\n     * @type {Function}\n     * @default null\n     */\n\n    module.exports = Eventful;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Eventful.js\n// module id = 626\n// module chunks = 0 1 2","/**\n * @module zrender/tool/color\n */\n\n\n    var LRU = require('../core/LRU');\n\n    var kCSSColorTable = {\n        'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\n        'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\n        'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\n        'beige': [245,245,220,1], 'bisque': [255,228,196,1],\n        'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\n        'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\n        'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\n        'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\n        'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\n        'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\n        'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\n        'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\n        'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\n        'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\n        'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\n        'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\n        'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\n        'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\n        'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\n        'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\n        'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\n        'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\n        'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\n        'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\n        'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\n        'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\n        'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\n        'gray': [128,128,128,1], 'green': [0,128,0,1],\n        'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\n        'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\n        'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\n        'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\n        'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\n        'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\n        'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\n        'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\n        'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\n        'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\n        'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\n        'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\n        'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\n        'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\n        'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\n        'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\n        'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\n        'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\n        'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\n        'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\n        'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\n        'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\n        'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\n        'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\n        'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\n        'orange': [255,165,0,1], 'orangered': [255,69,0,1],\n        'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\n        'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\n        'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\n        'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\n        'pink': [255,192,203,1], 'plum': [221,160,221,1],\n        'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\n        'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\n        'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\n        'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\n        'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\n        'sienna': [160,82,45,1], 'silver': [192,192,192,1],\n        'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\n        'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\n        'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\n        'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\n        'teal': [0,128,128,1], 'thistle': [216,191,216,1],\n        'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\n        'violet': [238,130,238,1], 'wheat': [245,222,179,1],\n        'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\n        'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\n    };\n\n    function clampCssByte(i) {  // Clamp to integer 0 .. 255.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 255 ? 255 : i;\n    }\n\n    function clampCssAngle(i) {  // Clamp to integer 0 .. 360.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 360 ? 360 : i;\n    }\n\n    function clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\n        return f < 0 ? 0 : f > 1 ? 1 : f;\n    }\n\n    function parseCssInt(str) {  // int or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssByte(parseFloat(str) / 100 * 255);\n        }\n        return clampCssByte(parseInt(str, 10));\n    }\n\n    function parseCssFloat(str) {  // float or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssFloat(parseFloat(str) / 100);\n        }\n        return clampCssFloat(parseFloat(str));\n    }\n\n    function cssHueToRgb(m1, m2, h) {\n        if (h < 0) {\n            h += 1;\n        }\n        else if (h > 1) {\n            h -= 1;\n        }\n\n        if (h * 6 < 1) {\n            return m1 + (m2 - m1) * h * 6;\n        }\n        if (h * 2 < 1) {\n            return m2;\n        }\n        if (h * 3 < 2) {\n            return m1 + (m2 - m1) * (2/3 - h) * 6;\n        }\n        return m1;\n    }\n\n    function lerp(a, b, p) {\n        return a + (b - a) * p;\n    }\n\n    function setRgba(out, r, g, b, a) {\n        out[0] = r; out[1] = g; out[2] = b; out[3] = a;\n        return out;\n    }\n    function copyRgba(out, a) {\n        out[0] = a[0]; out[1] = a[1]; out[2] = a[2]; out[3] = a[3];\n        return out;\n    }\n    var colorCache = new LRU(20);\n    var lastRemovedArr = null;\n    function putToCache(colorStr, rgbaArr) {\n        // Reuse removed array\n        if (lastRemovedArr) {\n            copyRgba(lastRemovedArr, rgbaArr);\n        }\n        lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || (rgbaArr.slice()));\n    }\n    /**\n     * @param {string} colorStr\n     * @param {Array.<number>} out\n     * @return {Array.<number>}\n     * @memberOf module:zrender/util/color\n     */\n    function parse(colorStr, rgbaArr) {\n        if (!colorStr) {\n            return;\n        }\n        rgbaArr = rgbaArr || [];\n\n        var cached = colorCache.get(colorStr);\n        if (cached) {\n            return copyRgba(rgbaArr, cached);\n        }\n\n        // colorStr may be not string\n        colorStr = colorStr + '';\n        // Remove all whitespace, not compliant, but should just be more accepting.\n        var str = colorStr.replace(/ /g, '').toLowerCase();\n\n        // Color keywords (and transparent) lookup.\n        if (str in kCSSColorTable) {\n            copyRgba(rgbaArr, kCSSColorTable[str]);\n            putToCache(colorStr, rgbaArr);\n            return rgbaArr;\n        }\n\n        // #abc and #abc123 syntax.\n        if (str.charAt(0) === '#') {\n            if (str.length === 4) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xfff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n                    (iv & 0xf0) | ((iv & 0xf0) >> 4),\n                    (iv & 0xf) | ((iv & 0xf) << 4),\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n            else if (str.length === 7) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xffffff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    (iv & 0xff0000) >> 16,\n                    (iv & 0xff00) >> 8,\n                    iv & 0xff,\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n\n            return;\n        }\n        var op = str.indexOf('('), ep = str.indexOf(')');\n        if (op !== -1 && ep + 1 === str.length) {\n            var fname = str.substr(0, op);\n            var params = str.substr(op + 1, ep - (op + 1)).split(',');\n            var alpha = 1;  // To allow case fallthrough.\n            switch (fname) {\n                case 'rgba':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    alpha = parseCssFloat(params.pop()); // jshint ignore:line\n                // Fall through.\n                case 'rgb':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    setRgba(rgbaArr,\n                        parseCssInt(params[0]),\n                        parseCssInt(params[1]),\n                        parseCssInt(params[2]),\n                        alpha\n                    );\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsla':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    params[3] = parseCssFloat(params[3]);\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsl':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                default:\n                    return;\n            }\n        }\n\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return;\n    }\n\n    /**\n     * @param {Array.<number>} hsla\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} rgba\n     */\n    function hsla2rgba(hsla, rgba) {\n        var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parseCssFloat(hsla[1]);\n        var l = parseCssFloat(hsla[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n\n        rgba = rgba || [];\n        setRgba(rgba,\n            clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255),\n            1\n        );\n\n        if (hsla.length === 4) {\n            rgba[3] = hsla[3];\n        }\n\n        return rgba;\n    }\n\n    /**\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} hsla\n     */\n    function rgba2hsla(rgba) {\n        if (!rgba) {\n            return;\n        }\n\n        // RGB from 0 to 255\n        var R = rgba[0] / 255;\n        var G = rgba[1] / 255;\n        var B = rgba[2] / 255;\n\n        var vMin = Math.min(R, G, B); // Min. value of RGB\n        var vMax = Math.max(R, G, B); // Max. value of RGB\n        var delta = vMax - vMin; // Delta RGB value\n\n        var L = (vMax + vMin) / 2;\n        var H;\n        var S;\n        // HSL results from 0 to 1\n        if (delta === 0) {\n            H = 0;\n            S = 0;\n        }\n        else {\n            if (L < 0.5) {\n                S = delta / (vMax + vMin);\n            }\n            else {\n                S = delta / (2 - vMax - vMin);\n            }\n\n            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\n            if (R === vMax) {\n                H = deltaB - deltaG;\n            }\n            else if (G === vMax) {\n                H = (1 / 3) + deltaR - deltaB;\n            }\n            else if (B === vMax) {\n                H = (2 / 3) + deltaG - deltaR;\n            }\n\n            if (H < 0) {\n                H += 1;\n            }\n\n            if (H > 1) {\n                H -= 1;\n            }\n        }\n\n        var hsla = [H * 360, S, L];\n\n        if (rgba[3] != null) {\n            hsla.push(rgba[3]);\n        }\n\n        return hsla;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number} level\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function lift(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            for (var i = 0; i < 3; i++) {\n                if (level < 0) {\n                    colorArr[i] = colorArr[i] * (1 - level) | 0;\n                }\n                else {\n                    colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\n                }\n            }\n            return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function toHex(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\n        }\n    }\n\n    /**\n     * Map value to color. Faster than mapToColor methods because color is represented by rgba array.\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<Array.<number>>} colors List of rgba color array\n     * @param {Array.<number>} [out] Mapped gba color array\n     * @return {Array.<number>} will be null/undefined if input illegal.\n     */\n    function fastMapToColor(normalizedValue, colors, out) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        out = out || [];\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = colors[leftIndex];\n        var rightColor = colors[rightIndex];\n        var dv = value - leftIndex;\n        out[0] = clampCssByte(lerp(leftColor[0], rightColor[0], dv));\n        out[1] = clampCssByte(lerp(leftColor[1], rightColor[1], dv));\n        out[2] = clampCssByte(lerp(leftColor[2], rightColor[2], dv));\n        out[3] = clampCssFloat(lerp(leftColor[3], rightColor[3], dv));\n\n        return out;\n    }\n    /**\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<string>} colors Color list.\n     * @param {boolean=} fullOutput Default false.\n     * @return {(string|Object)} Result color. If fullOutput,\n     *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n     * @memberOf module:zrender/util/color\n     */\n    function mapToColor(normalizedValue, colors, fullOutput) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = parse(colors[leftIndex]);\n        var rightColor = parse(colors[rightIndex]);\n        var dv = value - leftIndex;\n\n        var color = stringify(\n            [\n                clampCssByte(lerp(leftColor[0], rightColor[0], dv)),\n                clampCssByte(lerp(leftColor[1], rightColor[1], dv)),\n                clampCssByte(lerp(leftColor[2], rightColor[2], dv)),\n                clampCssFloat(lerp(leftColor[3], rightColor[3], dv))\n            ],\n            'rgba'\n        );\n\n        return fullOutput\n            ? {\n                color: color,\n                leftIndex: leftIndex,\n                rightIndex: rightIndex,\n                value: value\n            }\n            : color;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} h 0 ~ 360, ignore when null.\n     * @param {number=} s 0 ~ 1, ignore when null.\n     * @param {number=} l 0 ~ 1, ignore when null.\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyHSL(color, h, s, l) {\n        color = parse(color);\n\n        if (color) {\n            color = rgba2hsla(color);\n            h != null && (color[0] = clampCssAngle(h));\n            s != null && (color[1] = parseCssFloat(s));\n            l != null && (color[2] = parseCssFloat(l));\n\n            return stringify(hsla2rgba(color), 'rgba');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} alpha 0 ~ 1\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyAlpha(color, alpha) {\n        color = parse(color);\n\n        if (color && alpha != null) {\n            color[3] = clampCssFloat(alpha);\n            return stringify(color, 'rgba');\n        }\n    }\n\n    /**\n     * @param {Array.<number>} arrColor like [12,33,44,0.4]\n     * @param {string} type 'rgba', 'hsva', ...\n     * @return {string} Result color. (If input illegal, return undefined).\n     */\n    function stringify(arrColor, type) {\n        if (!arrColor || !arrColor.length) {\n            return;\n        }\n        var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n        if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n            colorStr += ',' + arrColor[3];\n        }\n        return type + '(' + colorStr + ')';\n    }\n\n    module.exports = {\n        parse: parse,\n        lift: lift,\n        toHex: toHex,\n        fastMapToColor: fastMapToColor,\n        mapToColor: mapToColor,\n        modifyHSL: modifyHSL,\n        modifyAlpha: modifyAlpha,\n        stringify: stringify\n    };\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/color.js\n// module id = 627\n// module chunks = 0 1 2","import { throttle } from 'common/js/util'\nimport dateFormat from 'vux/src/tools/date/format.js'\n\n\nconst hold = 4000\n\nexport const listLoadMixin = {\nmethods: {\n_refresh: throttle(function () {\nthis.refresh()\n}, hold),\n_loadMore: throttle(function () {\nthis.loadMore()\n}, hold)\n}\n}\n\nexport const chartDataMixin = {\nmethods: {\nnormalizLineData (dataObj) {\nlet obj = {\ncolumns: ['日期'],\nrows: []\n}\ndataObj.bars.forEach(item => {\nobj.columns.push(item.name)\n})\nfor (let i = 0; i < dataObj.times.length; i++) {\nlet o = {}\no['日期'] = dataObj.times[i]\nfor (let j = 0; j < dataObj.bars.length; j++) {\no[dataObj.bars[j].name] = dataObj.bars[j].data[i]\n}\nobj.rows.push(o)\n}\nreturn obj\n}\n}\n}\n\nexport const dateMixin = {\nmethods: {\ncheckTime (startTime, endTime) {\nif (Date.parse(startTime) >= Date.parse(endTime)) {\nthis.$vux.toast.show({\ntext: '起始时间必须小于结束时间',\ntime: 1000,\ntype: 'warn'\n})\nreturn false\n}\nreturn true\n}\n},\nfilters: {\nformatDate: function (date) {\nreturn dateFormat(date, 'YYYY-MM-DD')\n}\n}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/common/js/mixin.js","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Model = require('../../model/Model');\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n\n    var helper = {};\n\n    // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n    // allAxesInfo should be updated when setOption performed.\n    helper.collect = function (ecModel, api) {\n        var result = {\n            /**\n             * key: makeKey(axis.model)\n             * value: {\n             *      axis,\n             *      coordSys,\n             *      axisPointerModel,\n             *      triggerTooltip,\n             *      involveSeries,\n             *      snap,\n             *      seriesModels,\n             *      seriesDataCount\n             * }\n             */\n            axesInfo: {},\n            seriesInvolved: false,\n            /**\n             * key: makeKey(coordSys.model)\n             * value: Object: key makeKey(axis.model), value: axisInfo\n             */\n            coordSysAxesInfo: {},\n            coordSysMap: {}\n        };\n\n        collectAxesInfo(result, ecModel, api);\n\n        // Check seriesInvolved for performance, in case too many series in some chart.\n        result.seriesInvolved && collectSeriesInfo(result, ecModel);\n\n        return result;\n    };\n\n    function collectAxesInfo(result, ecModel, api) {\n        var globalTooltipModel = ecModel.getComponent('tooltip');\n        var globalAxisPointerModel = ecModel.getComponent('axisPointer');\n        // links can only be set on global.\n        var linksOption = globalAxisPointerModel.get('link', true) || [];\n        var linkGroups = [];\n\n        // Collect axes info.\n        each(api.getCoordinateSystems(), function (coordSys) {\n            // Some coordinate system do not support axes, like geo.\n            if (!coordSys.axisPointerEnabled) {\n                return;\n            }\n\n            var coordSysKey = makeKey(coordSys.model);\n            var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n            result.coordSysMap[coordSysKey] = coordSys;\n\n            // Set tooltip (like 'cross') is a convienent way to show axisPointer\n            // for user. So we enable seting tooltip on coordSys model.\n            var coordSysModel = coordSys.model;\n            var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n\n            each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null));\n\n            // If axis tooltip used, choose tooltip axis for each coordSys.\n            // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n            if (coordSys.getTooltipAxes\n                && globalTooltipModel\n                // If tooltip.showContent is set as false, tooltip will not\n                // show but axisPointer will show as normal.\n                && baseTooltipModel.get('show')\n            ) {\n                // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n                // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n                var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n                var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n                var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n                if (triggerAxis || cross) {\n                    each(tooltipAxes.baseAxes, curry(\n                        saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis\n                    ));\n                }\n                if (cross) {\n                    each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n                }\n            }\n\n            // fromTooltip: true | false | 'cross'\n            // triggerTooltip: true | false | null\n            function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n                var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n\n                var axisPointerShow = axisPointerModel.get('show');\n                if (!axisPointerShow || (\n                    axisPointerShow === 'auto'\n                    && !fromTooltip\n                    && !isHandleTrigger(axisPointerModel)\n                )) {\n                    return;\n                }\n\n                if (triggerTooltip == null) {\n                    triggerTooltip = axisPointerModel.get('triggerTooltip');\n                }\n\n                axisPointerModel = fromTooltip\n                    ? makeAxisPointerModel(\n                        axis, baseTooltipModel, globalAxisPointerModel, ecModel,\n                        fromTooltip, triggerTooltip\n                    )\n                    : axisPointerModel;\n\n                var snap = axisPointerModel.get('snap');\n                var key = makeKey(axis.model);\n                var involveSeries = triggerTooltip || snap || axis.type === 'category';\n\n                // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n                var axisInfo = result.axesInfo[key] = {\n                    key: key,\n                    axis: axis,\n                    coordSys: coordSys,\n                    axisPointerModel: axisPointerModel,\n                    triggerTooltip: triggerTooltip,\n                    involveSeries: involveSeries,\n                    snap: snap,\n                    useHandle: isHandleTrigger(axisPointerModel),\n                    seriesModels: []\n                };\n                axesInfoInCoordSys[key] = axisInfo;\n                result.seriesInvolved |= involveSeries;\n\n                var groupIndex = getLinkGroupIndex(linksOption, axis);\n                if (groupIndex != null) {\n                    var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {axesInfo: {}});\n                    linkGroup.axesInfo[key] = axisInfo;\n                    linkGroup.mapper = linksOption[groupIndex].mapper;\n                    axisInfo.linkGroup = linkGroup;\n                }\n            }\n        });\n    }\n\n    function makeAxisPointerModel(\n        axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip\n    ) {\n        var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n        var volatileOption = {};\n\n        each(\n            [\n                'type', 'snap', 'lineStyle', 'shadowStyle', 'label',\n                'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'\n            ],\n            function (field) {\n                volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n            }\n        );\n\n        // category axis do not auto snap, otherwise some tick that do not\n        // has value can not be hovered. value/time/log axis default snap if\n        // triggered from tooltip and trigger tooltip.\n        volatileOption.snap = axis.type !== 'category' && !!triggerTooltip;\n\n        // Compatibel with previous behavior, tooltip axis do not show label by default.\n        // Only these properties can be overrided from tooltip to axisPointer.\n        if (tooltipAxisPointerModel.get('type') === 'cross') {\n            volatileOption.type = 'line';\n        }\n        var labelOption = volatileOption.label || (volatileOption.label = {});\n        // Follow the convention, do not show label when triggered by tooltip by default.\n        labelOption.show == null && (labelOption.show = false);\n\n        if (fromTooltip === 'cross') {\n            // When 'cross', both axes show labels.\n            labelOption.show = true;\n            // If triggerTooltip, this is a base axis, which should better not use cross style\n            // (cross style is dashed by default)\n            if (!triggerTooltip) {\n                var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n                crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n            }\n        }\n\n        return axis.model.getModel(\n            'axisPointer',\n            new Model(volatileOption, globalAxisPointerModel, ecModel)\n        );\n    }\n\n    function collectSeriesInfo(result, ecModel) {\n        // Prepare data for axis trigger\n        ecModel.eachSeries(function (seriesModel) {\n\n            // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n            var coordSys = seriesModel.coordinateSystem;\n            var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n            var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n            if (!coordSys\n                || seriesTooltipTrigger === 'none'\n                || seriesTooltipTrigger === false\n                || seriesTooltipTrigger === 'item'\n                || seriesTooltipShow === false\n                || seriesModel.get('axisPointer.show', true) === false\n            ) {\n                return;\n            }\n\n            each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n                var axis = axisInfo.axis;\n                if (coordSys.getAxis(axis.dim) === axis) {\n                    axisInfo.seriesModels.push(seriesModel);\n                    axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n                    axisInfo.seriesDataCount += seriesModel.getData().count();\n                }\n            });\n\n        }, this);\n    }\n\n    /**\n     * For example:\n     * {\n     *     axisPointer: {\n     *         links: [{\n     *             xAxisIndex: [2, 4],\n     *             yAxisIndex: 'all'\n     *         }, {\n     *             xAxisId: ['a5', 'a7'],\n     *             xAxisName: 'xxx'\n     *         }]\n     *     }\n     * }\n     */\n    function getLinkGroupIndex(linksOption, axis) {\n        var axisModel = axis.model;\n        var dim = axis.dim;\n        for (var i = 0; i < linksOption.length; i++) {\n            var linkOption = linksOption[i] || {};\n            if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id)\n                || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex)\n                || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)\n            ) {\n                return i;\n            }\n        }\n    }\n\n    function checkPropInLink(linkPropValue, axisPropValue) {\n        return linkPropValue === 'all'\n            || (zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0)\n            || linkPropValue === axisPropValue;\n    }\n\n    helper.fixValue = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        if (!axisInfo) {\n            return;\n        }\n\n        var axisPointerModel = axisInfo.axisPointerModel;\n        var scale = axisInfo.axis.scale;\n        var option = axisPointerModel.option;\n        var status = axisPointerModel.get('status');\n        var value = axisPointerModel.get('value');\n\n        // Parse init value for category and time axis.\n        if (value != null) {\n            value = scale.parse(value);\n        }\n\n        var useHandle = isHandleTrigger(axisPointerModel);\n        // If `handle` used, `axisPointer` will always be displayed, so value\n        // and status should be initialized.\n        if (status == null) {\n            option.status = useHandle ? 'show' : 'hide';\n        }\n\n        var extent = scale.getExtent().slice();\n        extent[0] > extent[1] && extent.reverse();\n\n        if (// Pick a value on axis when initializing.\n            value == null\n            // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n            // where we should re-pick a value to keep `handle` displaying normally.\n            || value > extent[1]\n        ) {\n            // Make handle displayed on the end of the axis when init, which looks better.\n            value = extent[1];\n        }\n        if (value < extent[0]) {\n            value = extent[0];\n        }\n\n        option.value = value;\n\n        if (useHandle) {\n            option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n        }\n    };\n\n    helper.getAxisInfo = function (axisModel) {\n        var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n        return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n    };\n\n    helper.getAxisPointerModel = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        return axisInfo && axisInfo.axisPointerModel;\n    };\n\n    function isHandleTrigger(axisPointerModel) {\n        return !!axisPointerModel.get('handle.show');\n    }\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @return {string} unique key\n     */\n    var makeKey = helper.makeKey = function (model) {\n        return model.type + '||' + model.id;\n    };\n\n    module.exports = helper;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/modelHelper.js\n// module id = 629\n// module chunks = 0 1 2","/**\n * List for data storage\n * @module echarts/data/List\n */\n\n\n    var UNDEFINED = 'undefined';\n    var globalObj = typeof window === 'undefined' ? global : window;\n    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\n        ? Array : globalObj.Float64Array;\n    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\n        ? Array : globalObj.Int32Array;\n\n    var dataCtors = {\n        'float': Float64Array,\n        'int': Int32Array,\n        // Ordinal data type can be string or int\n        'ordinal': Array,\n        'number': Array,\n        'time': Array\n    };\n\n    var Model = require('../model/Model');\n    var DataDiffer = require('./DataDiffer');\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var isObject = zrUtil.isObject;\n\n    var TRANSFERABLE_PROPERTIES = [\n        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\n    ];\n\n    function transferProperties(a, b) {\n        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n            if (b.hasOwnProperty(propName)) {\n                a[propName] = b[propName];\n            }\n        });\n\n        a.__wrappedMethods = b.__wrappedMethods;\n    }\n\n    function DefaultDataProvider(dataArray) {\n        this._array = dataArray || [];\n    }\n\n    DefaultDataProvider.prototype.pure = false;\n\n    DefaultDataProvider.prototype.count = function () {\n        return this._array.length;\n    };\n    DefaultDataProvider.prototype.getItem = function (idx) {\n        return this._array[idx];\n    };\n\n    /**\n     * @constructor\n     * @alias module:echarts/data/List\n     *\n     * @param {Array.<string|Object>} dimensions\n     *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n     *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n     * @param {module:echarts/model/Model} hostModel\n     */\n    var List = function (dimensions, hostModel) {\n\n        dimensions = dimensions || ['x', 'y'];\n\n        var dimensionInfos = {};\n        var dimensionNames = [];\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimensionName;\n            var dimensionInfo = {};\n            if (typeof dimensions[i] === 'string') {\n                dimensionName = dimensions[i];\n                dimensionInfo = {\n                    name: dimensionName,\n                    coordDim: dimensionName,\n                    coordDimIndex: 0,\n                    stackable: false,\n                    // Type can be 'float', 'int', 'number'\n                    // Default is number, Precision of float may not enough\n                    type: 'number'\n                };\n            }\n            else {\n                dimensionInfo = dimensions[i];\n                dimensionName = dimensionInfo.name;\n                dimensionInfo.type = dimensionInfo.type || 'number';\n                if (!dimensionInfo.coordDim) {\n                    dimensionInfo.coordDim = dimensionName;\n                    dimensionInfo.coordDimIndex = 0;\n                }\n            }\n            dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n            dimensionNames.push(dimensionName);\n            dimensionInfos[dimensionName] = dimensionInfo;\n        }\n\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        this.dimensions = dimensionNames;\n\n        /**\n         * Infomation of each data dimension, like data type.\n         * @type {Object}\n         */\n        this._dimensionInfos = dimensionInfos;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.hostModel = hostModel;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.dataType;\n\n        /**\n         * Indices stores the indices of data subset after filtered.\n         * This data subset will be used in chart.\n         * @type {Array.<number>}\n         * @readOnly\n         */\n        this.indices = [];\n\n        /**\n         * Data storage\n         * @type {Object.<key, TypedArray|Array>}\n         * @private\n         */\n        this._storage = {};\n\n        /**\n         * @type {Array.<string>}\n         */\n        this._nameList = [];\n        /**\n         * @type {Array.<string>}\n         */\n        this._idList = [];\n\n        /**\n         * Models of data option is stored sparse for optimizing memory cost\n         * @type {Array.<module:echarts/model/Model>}\n         * @private\n         */\n        this._optionModels = [];\n\n        /**\n         * @param {module:echarts/data/List}\n         */\n        this.stackedOn = null;\n\n        /**\n         * Global visual properties after visual coding\n         * @type {Object}\n         * @private\n         */\n        this._visual = {};\n\n        /**\n         * Globel layout properties.\n         * @type {Object}\n         * @private\n         */\n        this._layout = {};\n\n        /**\n         * Item visual properties after visual coding\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemVisuals = [];\n\n        /**\n         * Item layout properties after layout\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemLayouts = [];\n\n        /**\n         * Graphic elemnents\n         * @type {Array.<module:zrender/Element>}\n         * @private\n         */\n        this._graphicEls = [];\n\n        /**\n         * @type {Array.<Array|Object>}\n         * @private\n         */\n        this._rawData;\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._extent;\n    };\n\n    var listProto = List.prototype;\n\n    listProto.type = 'list';\n\n    /**\n     * If each data item has it's own option\n     * @type {boolean}\n     */\n    listProto.hasItemOption = true;\n\n    /**\n     * Get dimension name\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     * @return {string} Concrete dim name.\n     */\n    listProto.getDimension = function (dim) {\n        if (!isNaN(dim)) {\n            dim = this.dimensions[dim] || dim;\n        }\n        return dim;\n    };\n\n    /**\n     * Get type and stackable info of particular dimension\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     */\n    listProto.getDimensionInfo = function (dim) {\n        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n    };\n\n    /**\n     * Initialize from data\n     * @param {Array.<Object|number|Array>} data\n     * @param {Array.<string>} [nameList]\n     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n     */\n    listProto.initData = function (data, nameList, dimValueGetter) {\n        data = data || [];\n\n        var isDataArray = zrUtil.isArray(data);\n        if (isDataArray) {\n            data = new DefaultDataProvider(data);\n        }\n        if (__DEV__) {\n            if (!isDataArray && (typeof data.getItem != 'function' || typeof data.count != 'function')) {\n                throw new Error('Inavlid data provider.');\n            }\n        }\n\n        this._rawData = data;\n\n        // Clear\n        var storage = this._storage = {};\n        var indices = this.indices = [];\n\n        var dimensions = this.dimensions;\n        var dimensionInfoMap = this._dimensionInfos;\n\n        var size = data.count();\n\n        var idList = [];\n        var nameRepeatCount = {};\n        var nameDimIdx;\n\n        nameList = nameList || [];\n\n        // Init storage\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimInfo = dimensionInfoMap[dimensions[i]];\n            dimInfo.otherDims.itemName === 0 && (nameDimIdx = i);\n            var DataCtor = dataCtors[dimInfo.type];\n            storage[dimensions[i]] = new DataCtor(size);\n        }\n\n        var self = this;\n        if (!dimValueGetter) {\n            self.hasItemOption = false;\n        }\n        // Default dim value getter\n        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n            var value = modelUtil.getDataItemValue(dataItem);\n            // If any dataItem is like { value: 10 }\n            if (modelUtil.isDataItemOption(dataItem)) {\n                self.hasItemOption = true;\n            }\n            return modelUtil.converDataValue(\n                (value instanceof Array)\n                    ? value[dimIndex]\n                    // If value is a single number or something else not array.\n                    : value,\n                dimensionInfoMap[dimName]\n            );\n        };\n\n        for (var i = 0; i < size; i++) {\n            // NOTICE: Try not to write things into dataItem\n            var dataItem = data.getItem(i);\n            // Each data item is value\n            // [1, 2]\n            // 2\n            // Bar chart, line chart which uses category axis\n            // only gives the 'y' value. 'x' value is the indices of cateogry\n            // Use a tempValue to normalize the value to be a (x, y) value\n\n            // Store the data by dimensions\n            for (var k = 0; k < dimensions.length; k++) {\n                var dim = dimensions[k];\n                var dimStorage = storage[dim];\n                // PENDING NULL is empty or zero\n                dimStorage[i] = dimValueGetter(dataItem, dim, i, k);\n            }\n\n            indices.push(i);\n        }\n\n        // Use the name in option and create id\n        for (var i = 0; i < size; i++) {\n            var dataItem = data.getItem(i);\n            if (!nameList[i] && dataItem) {\n                if (dataItem.name != null) {\n                    nameList[i] = dataItem.name;\n                }\n                else if (nameDimIdx != null) {\n                    nameList[i] = storage[dimensions[nameDimIdx]][i];\n                }\n            }\n            var name = nameList[i] || '';\n            // Try using the id in option\n            var id = dataItem && dataItem.id;\n\n            if (!id && name) {\n                // Use name as id and add counter to avoid same name\n                nameRepeatCount[name] = nameRepeatCount[name] || 0;\n                id = name;\n                if (nameRepeatCount[name] > 0) {\n                    id += '__ec__' + nameRepeatCount[name];\n                }\n                nameRepeatCount[name]++;\n            }\n            id && (idList[i] = id);\n        }\n\n        this._nameList = nameList;\n        this._idList = idList;\n    };\n\n    /**\n     * @return {number}\n     */\n    listProto.count = function () {\n        return this.indices.length;\n    };\n\n    /**\n     * Get value. Return NaN if idx is out of range.\n     * @param {string} dim Dim must be concrete name.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.get = function (dim, idx, stack) {\n        var storage = this._storage;\n        var dataIndex = this.indices[idx];\n\n        // If value not exists\n        if (dataIndex == null || !storage[dim]) {\n            return NaN;\n        }\n\n        var value = storage[dim][dataIndex];\n        // FIXME ordinal data type is not stackable\n        if (stack) {\n            var dimensionInfo = this._dimensionInfos[dim];\n            if (dimensionInfo && dimensionInfo.stackable) {\n                var stackedOn = this.stackedOn;\n                while (stackedOn) {\n                    // Get no stacked data of stacked on\n                    var stackedValue = stackedOn.get(dim, idx);\n                    // Considering positive stack, negative stack and empty data\n                    if ((value >= 0 && stackedValue > 0)  // Positive stack\n                        || (value <= 0 && stackedValue < 0) // Negative stack\n                    ) {\n                        value += stackedValue;\n                    }\n                    stackedOn = stackedOn.stackedOn;\n                }\n            }\n        }\n        return value;\n    };\n\n    /**\n     * Get value for multi dimensions.\n     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.getValues = function (dimensions, idx, stack) {\n        var values = [];\n\n        if (!zrUtil.isArray(dimensions)) {\n            stack = idx;\n            idx = dimensions;\n            dimensions = this.dimensions;\n        }\n\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            values.push(this.get(dimensions[i], idx, stack));\n        }\n\n        return values;\n    };\n\n    /**\n     * If value is NaN. Inlcuding '-'\n     * @param {string} dim\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.hasValue = function (idx) {\n        var dimensions = this.dimensions;\n        var dimensionInfos = this._dimensionInfos;\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            if (\n                // Ordinal type can be string or number\n                dimensionInfos[dimensions[i]].type !== 'ordinal'\n                && isNaN(this.get(dimensions[i], idx))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * Get extent of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     * @param {Function} filter\n     */\n    listProto.getDataExtent = function (dim, stack, filter) {\n        dim = this.getDimension(dim);\n        var dimData = this._storage[dim];\n        var dimInfo = this.getDimensionInfo(dim);\n        stack = (dimInfo && dimInfo.stackable) && stack;\n        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\n        var value;\n        if (dimExtent) {\n            return dimExtent;\n        }\n        // var dimInfo = this._dimensionInfos[dim];\n        if (dimData) {\n            var min = Infinity;\n            var max = -Infinity;\n            // var isOrdinal = dimInfo.type === 'ordinal';\n            for (var i = 0, len = this.count(); i < len; i++) {\n                value = this.get(dim, i, stack);\n                // FIXME\n                // if (isOrdinal && typeof value === 'string') {\n                //     value = zrUtil.indexOf(dimData, value);\n                // }\n                if (!filter || filter(value, dim, i)) {\n                    value < min && (min = value);\n                    value > max && (max = value);\n                }\n            }\n            return (this._extent[dim + !!stack] = [min, max]);\n        }\n        else {\n            return [Infinity, -Infinity];\n        }\n    };\n\n    /**\n     * Get sum of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getSum = function (dim, stack) {\n        var dimData = this._storage[dim];\n        var sum = 0;\n        if (dimData) {\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var value = this.get(dim, i, stack);\n                if (!isNaN(value)) {\n                    sum += value;\n                }\n            }\n        }\n        return sum;\n    };\n\n    /**\n     * Retreive the index with given value\n     * @param {number} idx\n     * @param {number} value\n     * @return {number}\n     */\n    // FIXME Precision of float value\n    listProto.indexOf = function (dim, value) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var indices = this.indices;\n\n        if (dimData) {\n            for (var i = 0, len = indices.length; i < len; i++) {\n                var rawIndex = indices[i];\n                if (dimData[rawIndex] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given name\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfName = function (name) {\n        var indices = this.indices;\n        var nameList = this._nameList;\n\n        for (var i = 0, len = indices.length; i < len; i++) {\n            var rawIndex = indices[i];\n            if (nameList[rawIndex] === name) {\n                return i;\n            }\n        }\n\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given raw data index\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfRawIndex = function (rawIndex) {\n        // Indices are ascending\n        var indices = this.indices;\n\n        // If rawIndex === dataIndex\n        var rawDataIndex = indices[rawIndex];\n        if (rawDataIndex != null && rawDataIndex === rawIndex) {\n            return rawIndex;\n        }\n\n        var left = 0;\n        var right = indices.length - 1;\n        while (left <= right) {\n            var mid = (left + right) / 2 | 0;\n            if (indices[mid] < rawIndex) {\n                left = mid + 1;\n            }\n            else if (indices[mid] > rawIndex) {\n                right = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index of nearest value\n     * @param {string} dim\n     * @param {number} value\n     * @param {boolean} stack If given value is after stacked\n     * @param {number} [maxDistance=Infinity]\n     * @return {Array.<number>} Considere multiple points has the same value.\n     */\n    listProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var nearestIndices = [];\n\n        if (!dimData) {\n            return nearestIndices;\n        }\n\n        if (maxDistance == null) {\n            maxDistance = Infinity;\n        }\n\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n        for (var i = 0, len = this.count(); i < len; i++) {\n            var diff = value - this.get(dim, i, stack);\n            var dist = Math.abs(diff);\n            if (diff <= maxDistance && dist <= minDist) {\n                // For the case of two data are same on xAxis, which has sequence data.\n                // Show the nearest index\n                // https://github.com/ecomfe/echarts/issues/2869\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    nearestIndices.length = 0;\n                }\n                nearestIndices.push(i);\n            }\n        }\n        return nearestIndices;\n    };\n\n    /**\n     * Get raw data index\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawIndex = function (idx) {\n        var rawIdx = this.indices[idx];\n        return rawIdx == null ? -1 : rawIdx;\n    };\n\n    /**\n     * Get raw data item\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawDataItem = function (idx) {\n        return this._rawData.getItem(this.getRawIndex(idx));\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getName = function (idx) {\n        return this._nameList[this.indices[idx]] || '';\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getId = function (idx) {\n        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\n    };\n\n\n    function normalizeDimensions(dimensions) {\n        if (!zrUtil.isArray(dimensions)) {\n            dimensions = [dimensions];\n        }\n        return dimensions;\n    }\n\n    /**\n     * Data iteration\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     *\n     * @example\n     *  list.each('x', function (x, idx) {});\n     *  list.each(['x', 'y'], function (x, y, idx) {});\n     *  list.each(function (idx) {})\n     */\n    listProto.each = function (dims, cb, stack, context) {\n        if (typeof dims === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dims;\n            dims = [];\n        }\n\n        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n\n        var value = [];\n        var dimSize = dims.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            // Simple optimization\n            switch (dimSize) {\n                case 0:\n                    cb.call(context, i);\n                    break;\n                case 1:\n                    cb.call(context, this.get(dims[0], i, stack), i);\n                    break;\n                case 2:\n                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n                    break;\n                default:\n                    for (var k = 0; k < dimSize; k++) {\n                        value[k] = this.get(dims[k], i, stack);\n                    }\n                    // Index\n                    value[k] = i;\n                    cb.apply(context, value);\n            }\n        }\n    };\n\n    /**\n     * Data filter\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     */\n    listProto.filterSelf = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var newIndices = [];\n        var value = [];\n        var dimSize = dimensions.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            var keep;\n            // Simple optimization\n            if (!dimSize) {\n                keep = cb.call(context, i);\n            }\n            else if (dimSize === 1) {\n                keep = cb.call(\n                    context, this.get(dimensions[0], i, stack), i\n                );\n            }\n            else {\n                for (var k = 0; k < dimSize; k++) {\n                    value[k] = this.get(dimensions[k], i, stack);\n                }\n                value[k] = i;\n                keep = cb.apply(context, value);\n            }\n            if (keep) {\n                newIndices.push(indices[i]);\n            }\n        }\n\n        this.indices = newIndices;\n\n        // Reset data extent\n        this._extent = {};\n\n        return this;\n    };\n\n    /**\n     * Data mapping to a plain array\n     * @param {string|Array.<string>} [dimensions]\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.mapArray = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        var result = [];\n        this.each(dimensions, function () {\n            result.push(cb && cb.apply(this, arguments));\n        }, stack, context);\n        return result;\n    };\n\n    function cloneListForMapAndSample(original, excludeDimensions) {\n        var allDimensions = original.dimensions;\n        var list = new List(\n            zrUtil.map(allDimensions, original.getDimensionInfo, original),\n            original.hostModel\n        );\n        // FIXME If needs stackedOn, value may already been stacked\n        transferProperties(list, original);\n\n        var storage = list._storage = {};\n        var originalStorage = original._storage;\n        // Init storage\n        for (var i = 0; i < allDimensions.length; i++) {\n            var dim = allDimensions[i];\n            var dimStore = originalStorage[dim];\n            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n                storage[dim] = new dimStore.constructor(\n                    originalStorage[dim].length\n                );\n            }\n            else {\n                // Direct reference for other dimensions\n                storage[dim] = originalStorage[dim];\n            }\n        }\n        return list;\n    }\n\n    /**\n     * Data mapping to a new List with given dimensions\n     * @param {string|Array.<string>} dimensions\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.map = function (dimensions, cb, stack, context) {\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var list = cloneListForMapAndSample(this, dimensions);\n        // Following properties are all immutable.\n        // So we can reference to the same value\n        var indices = list.indices = this.indices;\n\n        var storage = list._storage;\n\n        var tmpRetValue = [];\n        this.each(dimensions, function () {\n            var idx = arguments[arguments.length - 1];\n            var retValue = cb && cb.apply(this, arguments);\n            if (retValue != null) {\n                // a number\n                if (typeof retValue === 'number') {\n                    tmpRetValue[0] = retValue;\n                    retValue = tmpRetValue;\n                }\n                for (var i = 0; i < retValue.length; i++) {\n                    var dim = dimensions[i];\n                    var dimStore = storage[dim];\n                    var rawIdx = indices[idx];\n                    if (dimStore) {\n                        dimStore[rawIdx] = retValue[i];\n                    }\n                }\n            }\n        }, stack, context);\n\n        return list;\n    };\n\n    /**\n     * Large data down sampling on given dimension\n     * @param {string} dimension\n     * @param {number} rate\n     * @param {Function} sampleValue\n     * @param {Function} sampleIndex Sample index for name and id\n     */\n    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n        var list = cloneListForMapAndSample(this, [dimension]);\n        var storage = this._storage;\n        var targetStorage = list._storage;\n\n        var originalIndices = this.indices;\n        var indices = list.indices = [];\n\n        var frameValues = [];\n        var frameIndices = [];\n        var frameSize = Math.floor(1 / rate);\n\n        var dimStore = targetStorage[dimension];\n        var len = this.count();\n        // Copy data from original data\n        for (var i = 0; i < storage[dimension].length; i++) {\n            targetStorage[dimension][i] = storage[dimension][i];\n        }\n        for (var i = 0; i < len; i += frameSize) {\n            // Last frame\n            if (frameSize > len - i) {\n                frameSize = len - i;\n                frameValues.length = frameSize;\n            }\n            for (var k = 0; k < frameSize; k++) {\n                var idx = originalIndices[i + k];\n                frameValues[k] = dimStore[idx];\n                frameIndices[k] = idx;\n            }\n            var value = sampleValue(frameValues);\n            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\n            // Only write value on the filtered data\n            dimStore[idx] = value;\n            indices.push(idx);\n        }\n\n        return list;\n    };\n\n    /**\n     * Get model of one data item.\n     *\n     * @param {number} idx\n     */\n    // FIXME Model proxy ?\n    listProto.getItemModel = function (idx) {\n        var hostModel = this.hostModel;\n        idx = this.indices[idx];\n        return new Model(this._rawData.getItem(idx), hostModel, hostModel && hostModel.ecModel);\n    };\n\n    /**\n     * Create a data differ\n     * @param {module:echarts/data/List} otherList\n     * @return {module:echarts/data/DataDiffer}\n     */\n    listProto.diff = function (otherList) {\n        var idList = this._idList;\n        var otherIdList = otherList && otherList._idList;\n        var val;\n        // Use prefix to avoid index to be the same as otherIdList[idx],\n        // which will cause weird udpate animation.\n        var prefix = 'e\\0\\0';\n\n        return new DataDiffer(\n            otherList ? otherList.indices : [],\n            this.indices,\n            function (idx) {\n                return (val = otherIdList[idx]) != null ? val : prefix + idx;\n            },\n            function (idx) {\n                return (val = idList[idx]) != null ? val : prefix + idx;\n            }\n        );\n    };\n    /**\n     * Get visual property.\n     * @param {string} key\n     */\n    listProto.getVisual = function (key) {\n        var visual = this._visual;\n        return visual && visual[key];\n    };\n\n    /**\n     * Set visual property\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setVisual('color', color);\n     *  setVisual({\n     *      'color': color\n     *  });\n     */\n    listProto.setVisual = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setVisual(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._visual = this._visual || {};\n        this._visual[key] = val;\n    };\n\n    /**\n     * Set layout property.\n     * @param {string|Object} key\n     * @param {*} [val]\n     */\n    listProto.setLayout = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setLayout(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._layout[key] = val;\n    };\n\n    /**\n     * Get layout property.\n     * @param  {string} key.\n     * @return {*}\n     */\n    listProto.getLayout = function (key) {\n        return this._layout[key];\n    };\n\n    /**\n     * Get layout of single data item\n     * @param {number} idx\n     */\n    listProto.getItemLayout = function (idx) {\n        return this._itemLayouts[idx];\n    };\n\n    /**\n     * Set layout of single data item\n     * @param {number} idx\n     * @param {Object} layout\n     * @param {boolean=} [merge=false]\n     */\n    listProto.setItemLayout = function (idx, layout, merge) {\n        this._itemLayouts[idx] = merge\n            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\n            : layout;\n    };\n\n    /**\n     * Clear all layout of single data item\n     */\n    listProto.clearItemLayouts = function () {\n        this._itemLayouts.length = 0;\n    };\n\n    /**\n     * Get visual property of single data item\n     * @param {number} idx\n     * @param {string} key\n     * @param {boolean} [ignoreParent=false]\n     */\n    listProto.getItemVisual = function (idx, key, ignoreParent) {\n        var itemVisual = this._itemVisuals[idx];\n        var val = itemVisual && itemVisual[key];\n        if (val == null && !ignoreParent) {\n            // Use global visual property\n            return this.getVisual(key);\n        }\n        return val;\n    };\n\n    /**\n     * Set visual property of single data item\n     *\n     * @param {number} idx\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setItemVisual(0, 'color', color);\n     *  setItemVisual(0, {\n     *      'color': color\n     *  });\n     */\n    listProto.setItemVisual = function (idx, key, value) {\n        var itemVisual = this._itemVisuals[idx] || {};\n        this._itemVisuals[idx] = itemVisual;\n\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    itemVisual[name] = key[name];\n                }\n            }\n            return;\n        }\n        itemVisual[key] = value;\n    };\n\n    /**\n     * Clear itemVisuals and list visual.\n     */\n    listProto.clearAllVisual = function () {\n        this._visual = {};\n        this._itemVisuals = [];\n    };\n\n    var setItemDataAndSeriesIndex = function (child) {\n        child.seriesIndex = this.seriesIndex;\n        child.dataIndex = this.dataIndex;\n        child.dataType = this.dataType;\n    };\n    /**\n     * Set graphic element relative to data. It can be set as null\n     * @param {number} idx\n     * @param {module:zrender/Element} [el]\n     */\n    listProto.setItemGraphicEl = function (idx, el) {\n        var hostModel = this.hostModel;\n\n        if (el) {\n            // Add data index and series index for indexing the data by element\n            // Useful in tooltip\n            el.dataIndex = idx;\n            el.dataType = this.dataType;\n            el.seriesIndex = hostModel && hostModel.seriesIndex;\n            if (el.type === 'group') {\n                el.traverse(setItemDataAndSeriesIndex, el);\n            }\n        }\n\n        this._graphicEls[idx] = el;\n    };\n\n    /**\n     * @param {number} idx\n     * @return {module:zrender/Element}\n     */\n    listProto.getItemGraphicEl = function (idx) {\n        return this._graphicEls[idx];\n    };\n\n    /**\n     * @param {Function} cb\n     * @param {*} context\n     */\n    listProto.eachItemGraphicEl = function (cb, context) {\n        zrUtil.each(this._graphicEls, function (el, idx) {\n            if (el) {\n                cb && cb.call(context, el, idx);\n            }\n        });\n    };\n\n    /**\n     * Shallow clone a new list except visual and layout properties, and graph elements.\n     * New list only change the indices.\n     */\n    listProto.cloneShallow = function () {\n        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n        var list = new List(dimensionInfoList, this.hostModel);\n\n        // FIXME\n        list._storage = this._storage;\n\n        transferProperties(list, this);\n\n\n        // Clone will not change the data extent and indices\n        list.indices = this.indices.slice();\n\n        if (this._extent) {\n            list._extent = zrUtil.extend({}, this._extent);\n        }\n\n        return list;\n    };\n\n    /**\n     * Wrap some method to add more feature\n     * @param {string} methodName\n     * @param {Function} injectFunction\n     */\n    listProto.wrapMethod = function (methodName, injectFunction) {\n        var originalMethod = this[methodName];\n        if (typeof originalMethod !== 'function') {\n            return;\n        }\n        this.__wrappedMethods = this.__wrappedMethods || [];\n        this.__wrappedMethods.push(methodName);\n        this[methodName] = function () {\n            var res = originalMethod.apply(this, arguments);\n            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n        };\n    };\n\n    // Methods that create a new list based on this list should be listed here.\n    // Notice that those method should `RETURN` the new list.\n    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\n    // Methods that change indices of this list should be listed here.\n    listProto.CHANGABLE_METHODS = ['filterSelf'];\n\n    module.exports = List;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/List.js\n// module id = 630\n// module chunks = 0 1 2","/**\n * Complete dimensions by data (guess dimension).\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var each = zrUtil.each;\n    var isString = zrUtil.isString;\n    var defaults = zrUtil.defaults;\n    var normalizeToArray = modelUtil.normalizeToArray;\n\n    var OTHER_DIMS = {tooltip: 1, label: 1, itemName: 1};\n\n    /**\n     * Complete the dimensions array, by user defined `dimension` and `encode`,\n     * and guessing from the data structure.\n     * If no 'value' dimension specified, the first no-named dimension will be\n     * named as 'value'.\n     *\n     * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n     *      provides not only dim template, but also default order.\n     *      `name` of each item provides default coord name.\n     *      [{dimsDef: []}, ...] can be specified to give names.\n     * @param {Array} data Data list. [[1, 2, 3], [2, 3, 4]].\n     * @param {Object} [opt]\n     * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n     *      For example: ['asdf', {name, type}, ...].\n     * @param {Object} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n     * @param {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n     * @param {string} [opt.extraFromZero] If specified, extra dim names will be:\n     *                      extraPrefix + 0, extraPrefix + extraBaseIndex + 1 ...\n     *                      If not specified, extra dim names will be:\n     *                      extraPrefix, extraPrefix + 0, extraPrefix + 1 ...\n     * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n     * @return {Array.<Object>} [{\n     *      name: string mandatory,\n     *      coordDim: string mandatory,\n     *      coordDimIndex: number mandatory,\n     *      type: string optional,\n     *      tooltipName: string optional,\n     *      otherDims: {\n     *          tooltip: number optional,\n     *          label: number optional\n     *      },\n     *      isExtraCoord: boolean true or undefined.\n     *      other props ...\n     * }]\n     */\n    function completeDimensions(sysDims, data, opt) {\n        data = data || [];\n        opt = opt || {};\n        sysDims = (sysDims || []).slice();\n        var dimsDef = (opt.dimsDef || []).slice();\n        var encodeDef = zrUtil.createHashMap(opt.encodeDef);\n        var dataDimNameMap = zrUtil.createHashMap();\n        var coordDimNameMap = zrUtil.createHashMap();\n        // var valueCandidate;\n        var result = [];\n\n        var dimCount = opt.dimCount;\n        if (dimCount == null) {\n            var value0 = retrieveValue(data[0]);\n            dimCount = Math.max(\n                zrUtil.isArray(value0) && value0.length || 1,\n                sysDims.length,\n                dimsDef.length\n            );\n            each(sysDims, function (sysDimItem) {\n                var sysDimItemDimsDef = sysDimItem.dimsDef;\n                sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n            });\n        }\n\n        // Apply user defined dims (`name` and `type`) and init result.\n        for (var i = 0; i < dimCount; i++) {\n            var dimDefItem = isString(dimsDef[i]) ? {name: dimsDef[i]} : (dimsDef[i] || {});\n            var userDimName = dimDefItem.name;\n            var resultItem = result[i] = {otherDims: {}};\n            // Name will be applied later for avoiding duplication.\n            if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n                // Only if `series.dimensions` is defined in option, tooltipName\n                // will be set, and dimension will be diplayed vertically in\n                // tooltip by default.\n                resultItem.name = resultItem.tooltipName = userDimName;\n                dataDimNameMap.set(userDimName, i);\n            }\n            dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n        }\n\n        // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n        encodeDef.each(function (dataDims, coordDim) {\n            dataDims = encodeDef.set(coordDim, normalizeToArray(dataDims).slice());\n            each(dataDims, function (resultDimIdx, coordDimIndex) {\n                // The input resultDimIdx can be dim name or index.\n                isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n                if (resultDimIdx != null && resultDimIdx < dimCount) {\n                    dataDims[coordDimIndex] = resultDimIdx;\n                    applyDim(result[resultDimIdx], coordDim, coordDimIndex);\n                }\n            });\n        });\n\n        // Apply templetes and default order from `sysDims`.\n        var availDimIdx = 0;\n        each(sysDims, function (sysDimItem, sysDimIndex) {\n            var coordDim;\n            var sysDimItem;\n            var sysDimItemDimsDef;\n            var sysDimItemOtherDims;\n            if (isString(sysDimItem)) {\n                coordDim = sysDimItem;\n                sysDimItem = {};\n            }\n            else {\n                coordDim = sysDimItem.name;\n                sysDimItem = zrUtil.clone(sysDimItem);\n                // `coordDimIndex` should not be set directly.\n                sysDimItemDimsDef = sysDimItem.dimsDef;\n                sysDimItemOtherDims = sysDimItem.otherDims;\n                sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex\n                    = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n            }\n\n            var dataDims = normalizeToArray(encodeDef.get(coordDim));\n            // dimensions provides default dim sequences.\n            if (!dataDims.length) {\n                for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n                    while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n                        availDimIdx++;\n                    }\n                    availDimIdx < result.length && dataDims.push(availDimIdx++);\n                }\n            }\n            // Apply templates.\n            each(dataDims, function (resultDimIdx, coordDimIndex) {\n                var resultItem = result[resultDimIdx];\n                applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n                if (resultItem.name == null && sysDimItemDimsDef) {\n                    resultItem.name = resultItem.tooltipName = sysDimItemDimsDef[coordDimIndex];\n                }\n                sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n            });\n        });\n\n        // Make sure the first extra dim is 'value'.\n        var extra = opt.extraPrefix || 'value';\n\n        // Set dim `name` and other `coordDim` and other props.\n        for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n            var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n            var coordDim = resultItem.coordDim;\n\n            coordDim == null && (\n                resultItem.coordDim = genName(extra, coordDimNameMap, opt.extraFromZero),\n                resultItem.coordDimIndex = 0,\n                resultItem.isExtraCoord = true\n            );\n\n            resultItem.name == null && (resultItem.name = genName(\n                resultItem.coordDim,\n                dataDimNameMap\n            ));\n\n            resultItem.type == null && guessOrdinal(data, resultDimIdx)\n                && (resultItem.type = 'ordinal');\n        }\n\n        return result;\n\n        function applyDim(resultItem, coordDim, coordDimIndex) {\n            if (OTHER_DIMS[coordDim]) {\n                resultItem.otherDims[coordDim] = coordDimIndex;\n            }\n            else {\n                resultItem.coordDim = coordDim;\n                resultItem.coordDimIndex = coordDimIndex;\n                coordDimNameMap.set(coordDim, true);\n            }\n        }\n\n        function genName(name, map, fromZero) {\n            if (fromZero || map.get(name) != null) {\n                var i = 0;\n                while (map.get(name + i) != null) {\n                    i++;\n                }\n                name += i;\n            }\n            map.set(name, true);\n            return name;\n        }\n    }\n\n    // The rule should not be complex, otherwise user might not\n    // be able to known where the data is wrong.\n    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n        for (var i = 0, len = data.length; i < len; i++) {\n            var value = retrieveValue(data[i]);\n\n            if (!zrUtil.isArray(value)) {\n                return false;\n            }\n\n            var value = value[dimIndex];\n            // Consider usage convenience, '1', '2' will be treated as \"number\".\n            // `isFinit('')` get `true`.\n            if (value != null && isFinite(value) && value !== '') {\n                return false;\n            }\n            else if (isString(value) && value !== '-') {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    function retrieveValue(o) {\n        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\n    }\n\n    module.exports = completeDimensions;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/helper/completeDimensions.js\n// module id = 631\n// module chunks = 0 1 2","/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n\n    var clazzUtil = require('../util/clazz');\n\n    /**\n     * @param {Object} [setting]\n     */\n    function Scale(setting) {\n        this._setting = setting || {};\n\n        /**\n         * Extent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._extent = [Infinity, -Infinity];\n\n        /**\n         * Step is calculated in adjustExtent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._interval = 0;\n\n        this.init && this.init.apply(this, arguments);\n    }\n\n    var scaleProto = Scale.prototype;\n\n    /**\n     * Parse input val to valid inner number.\n     * @param {*} val\n     * @return {number}\n     */\n    scaleProto.parse = function (val) {\n        // Notice: This would be a trap here, If the implementation\n        // of this method depends on extent, and this method is used\n        // before extent set (like in dataZoom), it would be wrong.\n        // Nevertheless, parse does not depend on extent generally.\n        return val;\n    };\n\n    scaleProto.getSetting = function (name) {\n        return this._setting[name];\n    };\n\n    scaleProto.contain = function (val) {\n        var extent = this._extent;\n        return val >= extent[0] && val <= extent[1];\n    };\n\n    /**\n     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.normalize = function (val) {\n        var extent = this._extent;\n        if (extent[1] === extent[0]) {\n            return 0.5;\n        }\n        return (val - extent[0]) / (extent[1] - extent[0]);\n    };\n\n    /**\n     * Scale normalized value\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.scale = function (val) {\n        var extent = this._extent;\n        return val * (extent[1] - extent[0]) + extent[0];\n    };\n\n    /**\n     * Set extent from data\n     * @param {Array.<number>} other\n     */\n    scaleProto.unionExtent = function (other) {\n        var extent = this._extent;\n        other[0] < extent[0] && (extent[0] = other[0]);\n        other[1] > extent[1] && (extent[1] = other[1]);\n        // not setExtent because in log axis it may transformed to power\n        // this.setExtent(extent[0], extent[1]);\n    };\n\n    /**\n     * Set extent from data\n     * @param {module:echarts/data/List} data\n     * @param {string} dim\n     */\n    scaleProto.unionExtentFromData = function (data, dim) {\n        this.unionExtent(data.getDataExtent(dim, true));\n    };\n\n    /**\n     * Get extent\n     * @return {Array.<number>}\n     */\n    scaleProto.getExtent = function () {\n        return this._extent.slice();\n    };\n\n    /**\n     * Set extent\n     * @param {number} start\n     * @param {number} end\n     */\n    scaleProto.setExtent = function (start, end) {\n        var thisExtent = this._extent;\n        if (!isNaN(start)) {\n            thisExtent[0] = start;\n        }\n        if (!isNaN(end)) {\n            thisExtent[1] = end;\n        }\n    };\n\n    /**\n     * @return {Array.<string>}\n     */\n    scaleProto.getTicksLabels = function () {\n        var labels = [];\n        var ticks = this.getTicks();\n        for (var i = 0; i < ticks.length; i++) {\n            labels.push(this.getLabel(ticks[i]));\n        }\n        return labels;\n    };\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.isBlank = function () {\n        return this._isBlank;\n    },\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.setBlank = function (isBlank) {\n        this._isBlank = isBlank;\n    };\n\n\n    clazzUtil.enableClassExtend(Scale);\n    clazzUtil.enableClassManagement(Scale, {\n        registerWhenExtend: true\n    });\n\n    module.exports = Scale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Scale.js\n// module id = 632\n// module chunks = 0 1 2","\n    var dpr = 1;\n    // If in browser environment\n    if (typeof window !== 'undefined') {\n        dpr = Math.max(window.devicePixelRatio || 1, 1);\n    }\n    /**\n     * config默认配置项\n     * @exports zrender/config\n     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n     */\n    var config = {\n        /**\n         * debug日志选项：catchBrushException为true下有效\n         * 0 : 不生成debug数据，发布用\n         * 1 : 异常抛出，调试用\n         * 2 : 控制台输出，调试用\n         */\n        debugMode: 0,\n\n        // retina 屏幕优化\n        devicePixelRatio: dpr\n    };\n    module.exports = config;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/config.js\n// module id = 633\n// module chunks = 0 1 2","/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/lib/container/Group');\n *     var Circle = require('zrender/lib/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n\n    var zrUtil = require('../core/util');\n    var Element = require('../Element');\n    var BoundingRect = require('../core/BoundingRect');\n\n    /**\n     * @alias module:zrender/graphic/Group\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @extends module:zrender/mixin/Eventful\n     */\n    var Group = function (opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        for (var key in opts) {\n            if (opts.hasOwnProperty(key)) {\n                this[key] = opts[key];\n            }\n        }\n\n        this._children = [];\n\n        this.__storage = null;\n\n        this.__dirty = true;\n    };\n\n    Group.prototype = {\n\n        constructor: Group,\n\n        isGroup: true,\n\n        /**\n         * @type {string}\n         */\n        type: 'group',\n\n        /**\n         * 所有子孙元素是否响应鼠标事件\n         * @name module:/zrender/container/Group#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * @return {Array.<module:zrender/Element>}\n         */\n        children: function () {\n            return this._children.slice();\n        },\n\n        /**\n         * 获取指定 index 的儿子节点\n         * @param  {number} idx\n         * @return {module:zrender/Element}\n         */\n        childAt: function (idx) {\n            return this._children[idx];\n        },\n\n        /**\n         * 获取指定名字的儿子节点\n         * @param  {string} name\n         * @return {module:zrender/Element}\n         */\n        childOfName: function (name) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i].name === name) {\n                    return children[i];\n                }\n             }\n        },\n\n        /**\n         * @return {number}\n         */\n        childCount: function () {\n            return this._children.length;\n        },\n\n        /**\n         * 添加子节点到最后\n         * @param {module:zrender/Element} child\n         */\n        add: function (child) {\n            if (child && child !== this && child.parent !== this) {\n\n                this._children.push(child);\n\n                this._doAdd(child);\n            }\n\n            return this;\n        },\n\n        /**\n         * 添加子节点在 nextSibling 之前\n         * @param {module:zrender/Element} child\n         * @param {module:zrender/Element} nextSibling\n         */\n        addBefore: function (child, nextSibling) {\n            if (child && child !== this && child.parent !== this\n                && nextSibling && nextSibling.parent === this) {\n\n                var children = this._children;\n                var idx = children.indexOf(nextSibling);\n\n                if (idx >= 0) {\n                    children.splice(idx, 0, child);\n                    this._doAdd(child);\n                }\n            }\n\n            return this;\n        },\n\n        _doAdd: function (child) {\n            if (child.parent) {\n                child.parent.remove(child);\n            }\n\n            child.parent = this;\n\n            var storage = this.__storage;\n            var zr = this.__zr;\n            if (storage && storage !== child.__storage) {\n\n                storage.addToStorage(child);\n\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n        },\n\n        /**\n         * 移除子节点\n         * @param {module:zrender/Element} child\n         */\n        remove: function (child) {\n            var zr = this.__zr;\n            var storage = this.__storage;\n            var children = this._children;\n\n            var idx = zrUtil.indexOf(children, child);\n            if (idx < 0) {\n                return this;\n            }\n            children.splice(idx, 1);\n\n            child.parent = null;\n\n            if (storage) {\n\n                storage.delFromStorage(child);\n\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n\n            return this;\n        },\n\n        /**\n         * 移除所有子节点\n         */\n        removeAll: function () {\n            var children = this._children;\n            var storage = this.__storage;\n            var child;\n            var i;\n            for (i = 0; i < children.length; i++) {\n                child = children[i];\n                if (storage) {\n                    storage.delFromStorage(child);\n                    if (child instanceof Group) {\n                        child.delChildrenFromStorage(storage);\n                    }\n                }\n                child.parent = null;\n            }\n            children.length = 0;\n\n            return this;\n        },\n\n        /**\n         * 遍历所有子节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        eachChild: function (cb, context) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                cb.call(context, child, i);\n            }\n            return this;\n        },\n\n        /**\n         * 深度优先遍历所有子孙节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                cb.call(context, child);\n\n                if (child.type === 'group') {\n                    child.traverse(cb, context);\n                }\n            }\n            return this;\n        },\n\n        addChildrenToStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.addToStorage(child);\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n        },\n\n        delChildrenFromStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.delFromStorage(child);\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n        },\n\n        dirty: function () {\n            this.__dirty = true;\n            this.__zr && this.__zr.refresh();\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function (includeChildren) {\n            // TODO Caching\n            var rect = null;\n            var tmpRect = new BoundingRect(0, 0, 0, 0);\n            var children = includeChildren || this._children;\n            var tmpMat = [];\n\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                if (child.ignore || child.invisible) {\n                    continue;\n                }\n\n                var childRect = child.getBoundingRect();\n                var transform = child.getLocalTransform(tmpMat);\n                // TODO\n                // The boundingRect cacluated by transforming original\n                // rect may be bigger than the actual bundingRect when rotation\n                // is used. (Consider a circle rotated aginst its center, where\n                // the actual boundingRect should be the same as that not be\n                // rotated.) But we can not find better approach to calculate\n                // actual boundingRect yet, considering performance.\n                if (transform) {\n                    tmpRect.copy(childRect);\n                    tmpRect.applyTransform(transform);\n                    rect = rect || tmpRect.clone();\n                    rect.union(tmpRect);\n                }\n                else {\n                    rect = rect || childRect.clone();\n                    rect.union(childRect);\n                }\n            }\n            return rect || tmpRect;\n        }\n    };\n\n    zrUtil.inherits(Group, Element);\n\n    module.exports = Group;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/container/Group.js\n// module id = 634\n// module chunks = 0 1 2","'use strict';\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n\n // TODO getTotalLength, getPointAtLength\n\n\n    var curve = require('./curve');\n    var vec2 = require('./vector');\n    var bbox = require('./bbox');\n    var BoundingRect = require('./BoundingRect');\n    var dpr = require('../config').devicePixelRatio;\n\n    var CMD = {\n        M: 1,\n        L: 2,\n        C: 3,\n        Q: 4,\n        A: 5,\n        Z: 6,\n        // Rect\n        R: 7\n    };\n\n    // var CMD_MEM_SIZE = {\n    //     M: 3,\n    //     L: 3,\n    //     C: 7,\n    //     Q: 5,\n    //     A: 9,\n    //     R: 5,\n    //     Z: 1\n    // };\n\n    var min = [];\n    var max = [];\n    var min2 = [];\n    var max2 = [];\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var mathSqrt = Math.sqrt;\n    var mathAbs = Math.abs;\n\n    var hasTypedArray = typeof Float32Array != 'undefined';\n\n    /**\n     * @alias module:zrender/core/PathProxy\n     * @constructor\n     */\n    var PathProxy = function (notSaveData) {\n\n        this._saveData = !(notSaveData || false);\n\n        if (this._saveData) {\n            /**\n             * Path data. Stored as flat array\n             * @type {Array.<Object>}\n             */\n            this.data = [];\n        }\n\n        this._ctx = null;\n    };\n\n    /**\n     * 快速计算Path包围盒（并不是最小包围盒）\n     * @return {Object}\n     */\n    PathProxy.prototype = {\n\n        constructor: PathProxy,\n\n        _xi: 0,\n        _yi: 0,\n\n        _x0: 0,\n        _y0: 0,\n        // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n        _ux: 0,\n        _uy: 0,\n\n        _len: 0,\n\n        _lineDash: null,\n\n        _dashOffset: 0,\n\n        _dashIdx: 0,\n\n        _dashSum: 0,\n\n        /**\n         * @readOnly\n         */\n        setScale: function (sx, sy) {\n            this._ux = mathAbs(1 / dpr / sx) || 0;\n            this._uy = mathAbs(1 / dpr / sy) || 0;\n        },\n\n        getContext: function () {\n            return this._ctx;\n        },\n\n        /**\n         * @param  {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        beginPath: function (ctx) {\n\n            this._ctx = ctx;\n\n            ctx && ctx.beginPath();\n\n            ctx && (this.dpr = ctx.dpr);\n\n            // Reset\n            if (this._saveData) {\n                this._len = 0;\n            }\n\n            if (this._lineDash) {\n                this._lineDash = null;\n\n                this._dashOffset = 0;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        moveTo: function (x, y) {\n            this.addData(CMD.M, x, y);\n            this._ctx && this._ctx.moveTo(x, y);\n\n            // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n            // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n            // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n            // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n            this._x0 = x;\n            this._y0 = y;\n\n            this._xi = x;\n            this._yi = y;\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        lineTo: function (x, y) {\n            var exceedUnit = mathAbs(x - this._xi) > this._ux\n                || mathAbs(y - this._yi) > this._uy\n                // Force draw the first segment\n                || this._len < 5;\n\n            this.addData(CMD.L, x, y);\n\n            if (this._ctx && exceedUnit) {\n                this._needsDash() ? this._dashedLineTo(x, y)\n                    : this._ctx.lineTo(x, y);\n            }\n            if (exceedUnit) {\n                this._xi = x;\n                this._yi = y;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @param  {number} x3\n         * @param  {number} y3\n         * @return {module:zrender/core/PathProxy}\n         */\n        bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n            this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)\n                    : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n            }\n            this._xi = x3;\n            this._yi = y3;\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @return {module:zrender/core/PathProxy}\n         */\n        quadraticCurveTo: function (x1, y1, x2, y2) {\n            this.addData(CMD.Q, x1, y1, x2, y2);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2)\n                    : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n            }\n            this._xi = x2;\n            this._yi = y2;\n            return this;\n        },\n\n        /**\n         * @param  {number} cx\n         * @param  {number} cy\n         * @param  {number} r\n         * @param  {number} startAngle\n         * @param  {number} endAngle\n         * @param  {boolean} anticlockwise\n         * @return {module:zrender/core/PathProxy}\n         */\n        arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n            this.addData(\n                CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1\n            );\n            this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n\n            this._xi = mathCos(endAngle) * r + cx;\n            this._yi = mathSin(endAngle) * r + cx;\n            return this;\n        },\n\n        // TODO\n        arcTo: function (x1, y1, x2, y2, radius) {\n            if (this._ctx) {\n                this._ctx.arcTo(x1, y1, x2, y2, radius);\n            }\n            return this;\n        },\n\n        // TODO\n        rect: function (x, y, w, h) {\n            this._ctx && this._ctx.rect(x, y, w, h);\n            this.addData(CMD.R, x, y, w, h);\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/PathProxy}\n         */\n        closePath: function () {\n            this.addData(CMD.Z);\n\n            var ctx = this._ctx;\n            var x0 = this._x0;\n            var y0 = this._y0;\n            if (ctx) {\n                this._needsDash() && this._dashedLineTo(x0, y0);\n                ctx.closePath();\n            }\n\n            this._xi = x0;\n            this._yi = y0;\n            return this;\n        },\n\n        /**\n         * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n         * stroke 同样\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        fill: function (ctx) {\n            ctx && ctx.fill();\n            this.toStatic();\n        },\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        stroke: function (ctx) {\n            ctx && ctx.stroke();\n            this.toStatic();\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDash: function (lineDash) {\n            if (lineDash instanceof Array) {\n                this._lineDash = lineDash;\n\n                this._dashIdx = 0;\n\n                var lineDashSum = 0;\n                for (var i = 0; i < lineDash.length; i++) {\n                    lineDashSum += lineDash[i];\n                }\n                this._dashSum = lineDashSum;\n            }\n            return this;\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDashOffset: function (offset) {\n            this._dashOffset = offset;\n            return this;\n        },\n\n        /**\n         *\n         * @return {boolean}\n         */\n        len: function () {\n            return this._len;\n        },\n\n        /**\n         * 直接设置 Path 数据\n         */\n        setData: function (data) {\n\n            var len = data.length;\n\n            if (! (this.data && this.data.length == len) && hasTypedArray) {\n                this.data = new Float32Array(len);\n            }\n\n            for (var i = 0; i < len; i++) {\n                this.data[i] = data[i];\n            }\n\n            this._len = len;\n        },\n\n        /**\n         * 添加子路径\n         * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n         */\n        appendPath: function (path) {\n            if (!(path instanceof Array)) {\n                path = [path];\n            }\n            var len = path.length;\n            var appendSize = 0;\n            var offset = this._len;\n            for (var i = 0; i < len; i++) {\n                appendSize += path[i].len();\n            }\n            if (hasTypedArray && (this.data instanceof Float32Array)) {\n                this.data = new Float32Array(offset + appendSize);\n            }\n            for (var i = 0; i < len; i++) {\n                var appendPathData = path[i].data;\n                for (var k = 0; k < appendPathData.length; k++) {\n                    this.data[offset++] = appendPathData[k];\n                }\n            }\n            this._len = offset;\n        },\n\n        /**\n         * 填充 Path 数据。\n         * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n         */\n        addData: function (cmd) {\n            if (!this._saveData) {\n                return;\n            }\n\n            var data = this.data;\n            if (this._len + arguments.length > data.length) {\n                // 因为之前的数组已经转换成静态的 Float32Array\n                // 所以不够用时需要扩展一个新的动态数组\n                this._expandData();\n                data = this.data;\n            }\n            for (var i = 0; i < arguments.length; i++) {\n                data[this._len++] = arguments[i];\n            }\n\n            this._prevCmd = cmd;\n        },\n\n        _expandData: function () {\n            // Only if data is Float32Array\n            if (!(this.data instanceof Array)) {\n                var newData = [];\n                for (var i = 0; i < this._len; i++) {\n                    newData[i] = this.data[i];\n                }\n                this.data = newData;\n            }\n        },\n\n        /**\n         * If needs js implemented dashed line\n         * @return {boolean}\n         * @private\n         */\n        _needsDash: function () {\n            return this._lineDash;\n        },\n\n        _dashedLineTo: function (x1, y1) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var dx = x1 - x0;\n            var dy = y1 - y0;\n            var dist = mathSqrt(dx * dx + dy * dy);\n            var x = x0;\n            var y = y0;\n            var dash;\n            var nDash = lineDash.length;\n            var idx;\n            dx /= dist;\n            dy /= dist;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            x -= offset * dx;\n            y -= offset * dy;\n\n            while ((dx > 0 && x <= x1) || (dx < 0 && x >= x1)\n            || (dx == 0 && ((dy > 0 && y <= y1) || (dy < 0 && y >= y1)))) {\n                idx = this._dashIdx;\n                dash = lineDash[idx];\n                x += dx * dash;\n                y += dy * dash;\n                this._dashIdx = (idx + 1) % nDash;\n                // Skip positive offset\n                if ((dx > 0 && x < x0) || (dx < 0 && x > x0) || (dy > 0 && y < y0) || (dy < 0 && y > y0)) {\n                    continue;\n                }\n                ctx[idx % 2 ? 'moveTo' : 'lineTo'](\n                    dx >= 0 ? mathMin(x, x1) : mathMax(x, x1),\n                    dy >= 0 ? mathMin(y, y1) : mathMax(y, y1)\n                );\n            }\n            // Offset for next lineTo\n            dx = x - x1;\n            dy = y - y1;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        // Not accurate dashed line to\n        _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var t;\n            var dx;\n            var dy;\n            var cubicAt = curve.cubicAt;\n            var bezierLen = 0;\n            var idx = this._dashIdx;\n            var nDash = lineDash.length;\n\n            var x;\n            var y;\n\n            var tmpLen = 0;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            // Bezier approx length\n            for (t = 0; t < 1; t += 0.1) {\n                dx = cubicAt(x0, x1, x2, x3, t + 0.1)\n                    - cubicAt(x0, x1, x2, x3, t);\n                dy = cubicAt(y0, y1, y2, y3, t + 0.1)\n                    - cubicAt(y0, y1, y2, y3, t);\n                bezierLen += mathSqrt(dx * dx + dy * dy);\n            }\n\n            // Find idx after add offset\n            for (; idx < nDash; idx++) {\n                tmpLen += lineDash[idx];\n                if (tmpLen > offset) {\n                    break;\n                }\n            }\n            t = (tmpLen - offset) / bezierLen;\n\n            while (t <= 1) {\n\n                x = cubicAt(x0, x1, x2, x3, t);\n                y = cubicAt(y0, y1, y2, y3, t);\n\n                // Use line to approximate dashed bezier\n                // Bad result if dash is long\n                idx % 2 ? ctx.moveTo(x, y)\n                    : ctx.lineTo(x, y);\n\n                t += lineDash[idx] / bezierLen;\n\n                idx = (idx + 1) % nDash;\n            }\n\n            // Finish the last segment and calculate the new offset\n            (idx % 2 !== 0) && ctx.lineTo(x3, y3);\n            dx = x3 - x;\n            dy = y3 - y;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        _dashedQuadraticTo: function (x1, y1, x2, y2) {\n            // Convert quadratic to cubic using degree elevation\n            var x3 = x2;\n            var y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (this._xi + 2 * x1) / 3;\n            y1 = (this._yi + 2 * y1) / 3;\n\n            this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n        },\n\n        /**\n         * 转成静态的 Float32Array 减少堆内存占用\n         * Convert dynamic array to static Float32Array\n         */\n        toStatic: function () {\n            var data = this.data;\n            if (data instanceof Array) {\n                data.length = this._len;\n                if (hasTypedArray) {\n                    this.data = new Float32Array(data);\n                }\n            }\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function () {\n            min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n            max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n\n            var data = this.data;\n            var xi = 0;\n            var yi = 0;\n            var x0 = 0;\n            var y0 = 0;\n\n            for (var i = 0; i < data.length;) {\n                var cmd = data[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = data[i];\n                    yi = data[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n\n                switch (cmd) {\n                    case CMD.M:\n                        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                        // 在 closePath 的时候使用\n                        x0 = data[i++];\n                        y0 = data[i++];\n                        xi = x0;\n                        yi = y0;\n                        min2[0] = x0;\n                        min2[1] = y0;\n                        max2[0] = x0;\n                        max2[1] = y0;\n                        break;\n                    case CMD.L:\n                        bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.C:\n                        bbox.fromCubic(\n                            xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.Q:\n                        bbox.fromQuadratic(\n                            xi, yi, data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.A:\n                        // TODO Arc 判断的开销比较大\n                        var cx = data[i++];\n                        var cy = data[i++];\n                        var rx = data[i++];\n                        var ry = data[i++];\n                        var startAngle = data[i++];\n                        var endAngle = data[i++] + startAngle;\n                        // TODO Arc 旋转\n                        var psi = data[i++];\n                        var anticlockwise = 1 - data[i++];\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(startAngle) * rx + cx;\n                            y0 = mathSin(startAngle) * ry + cy;\n                        }\n\n                        bbox.fromArc(\n                            cx, cy, rx, ry, startAngle, endAngle,\n                            anticlockwise, min2, max2\n                        );\n\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = data[i++];\n                        y0 = yi = data[i++];\n                        var width = data[i++];\n                        var height = data[i++];\n                        // Use fromLine\n                        bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n                        break;\n                    case CMD.Z:\n                        xi = x0;\n                        yi = y0;\n                        break;\n                }\n\n                // Union\n                vec2.min(min, min, min2);\n                vec2.max(max, max, max2);\n            }\n\n            // No data\n            if (i === 0) {\n                min[0] = min[1] = max[0] = max[1] = 0;\n            }\n\n            return new BoundingRect(\n                min[0], min[1], max[0] - min[0], max[1] - min[1]\n            );\n        },\n\n        /**\n         * Rebuild path from current data\n         * Rebuild path will not consider javascript implemented line dash.\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        rebuildPath: function (ctx) {\n            var d = this.data;\n            var x0, y0;\n            var xi, yi;\n            var x, y;\n            var ux = this._ux;\n            var uy = this._uy;\n            var len = this._len;\n            for (var i = 0; i < len;) {\n                var cmd = d[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = d[i];\n                    yi = d[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n                switch (cmd) {\n                    case CMD.M:\n                        x0 = xi = d[i++];\n                        y0 = yi = d[i++];\n                        ctx.moveTo(xi, yi);\n                        break;\n                    case CMD.L:\n                        x = d[i++];\n                        y = d[i++];\n                        // Not draw too small seg between\n                        if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n                            ctx.lineTo(x, y);\n                            xi = x;\n                            yi = y;\n                        }\n                        break;\n                    case CMD.C:\n                        ctx.bezierCurveTo(\n                            d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]\n                        );\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.Q:\n                        ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.A:\n                        var cx = d[i++];\n                        var cy = d[i++];\n                        var rx = d[i++];\n                        var ry = d[i++];\n                        var theta = d[i++];\n                        var dTheta = d[i++];\n                        var psi = d[i++];\n                        var fs = d[i++];\n                        var r = (rx > ry) ? rx : ry;\n                        var scaleX = (rx > ry) ? 1 : rx / ry;\n                        var scaleY = (rx > ry) ? ry / rx : 1;\n                        var isEllipse = Math.abs(rx - ry) > 1e-3;\n                        var endAngle = theta + dTheta;\n                        if (isEllipse) {\n                            ctx.translate(cx, cy);\n                            ctx.rotate(psi);\n                            ctx.scale(scaleX, scaleY);\n                            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n                            ctx.scale(1 / scaleX, 1 / scaleY);\n                            ctx.rotate(-psi);\n                            ctx.translate(-cx, -cy);\n                        }\n                        else {\n                            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n                        }\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(theta) * rx + cx;\n                            y0 = mathSin(theta) * ry + cy;\n                        }\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = d[i];\n                        y0 = yi = d[i + 1];\n                        ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n                        break;\n                    case CMD.Z:\n                        ctx.closePath();\n                        xi = x0;\n                        yi = y0;\n                }\n            }\n        }\n    };\n\n    PathProxy.CMD = CMD;\n\n    module.exports = PathProxy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/PathProxy.js\n// module id = 635\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var coordinateSystemCreators = {};\n\n    function CoordinateSystemManager() {\n\n        this._coordinateSystems = [];\n    }\n\n    CoordinateSystemManager.prototype = {\n\n        constructor: CoordinateSystemManager,\n\n        create: function (ecModel, api) {\n            var coordinateSystems = [];\n            zrUtil.each(coordinateSystemCreators, function (creater, type) {\n                var list = creater.create(ecModel, api);\n                coordinateSystems = coordinateSystems.concat(list || []);\n            });\n\n            this._coordinateSystems = coordinateSystems;\n        },\n\n        update: function (ecModel, api) {\n            zrUtil.each(this._coordinateSystems, function (coordSys) {\n                // FIXME MUST have\n                coordSys.update && coordSys.update(ecModel, api);\n            });\n        },\n\n        getCoordinateSystems: function () {\n            return this._coordinateSystems.slice();\n        }\n    };\n\n    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n        coordinateSystemCreators[type] = coordinateSystemCreator;\n    };\n\n    CoordinateSystemManager.get = function (type) {\n        return coordinateSystemCreators[type];\n    };\n\n    module.exports = CoordinateSystemManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/CoordinateSystem.js\n// module id = 636\n// module chunks = 0 1 2","// TODO Parse shadow style\n// TODO Only shallow path support\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    module.exports = function (properties) {\n        // Normalize\n        for (var i = 0; i < properties.length; i++) {\n            if (!properties[i][1]) {\n               properties[i][1] = properties[i][0];\n            }\n        }\n        return function (excludes, includes) {\n            var style = {};\n            for (var i = 0; i < properties.length; i++) {\n                var propName = properties[i][1];\n                if ((excludes && zrUtil.indexOf(excludes, propName) >= 0)\n                    || (includes && zrUtil.indexOf(includes, propName) < 0)\n                ) {\n                    continue;\n                }\n                var val = this.getShallow(propName);\n                if (val != null) {\n                    style[properties[i][0]] = val;\n                }\n            }\n            return style;\n        };\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/makeStyleMapper.js\n// module id = 637\n// module chunks = 0 1 2","/**\n * Interval scale\n * @module echarts/scale/Interval\n */\n\n\n\n    var numberUtil = require('../util/number');\n    var formatUtil = require('../util/format');\n    var Scale = require('./Scale');\n    var helper = require('./helper');\n\n    var roundNumber = numberUtil.round;\n\n    /**\n     * @alias module:echarts/coord/scale/Interval\n     * @constructor\n     */\n    var IntervalScale = Scale.extend({\n\n        type: 'interval',\n\n        _interval: 0,\n\n        _intervalPrecision: 2,\n\n        setExtent: function (start, end) {\n            var thisExtent = this._extent;\n            //start,end may be a Number like '25',so...\n            if (!isNaN(start)) {\n                thisExtent[0] = parseFloat(start);\n            }\n            if (!isNaN(end)) {\n                thisExtent[1] = parseFloat(end);\n            }\n        },\n\n        unionExtent: function (other) {\n            var extent = this._extent;\n            other[0] < extent[0] && (extent[0] = other[0]);\n            other[1] > extent[1] && (extent[1] = other[1]);\n\n            // unionExtent may called by it's sub classes\n            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n        },\n        /**\n         * Get interval\n         */\n        getInterval: function () {\n            return this._interval;\n        },\n\n        /**\n         * Set interval\n         */\n        setInterval: function (interval) {\n            this._interval = interval;\n            // Dropped auto calculated niceExtent and use user setted extent\n            // We assume user wan't to set both interval, min, max to get a better result\n            this._niceExtent = this._extent.slice();\n\n            this._intervalPrecision = helper.getIntervalPrecision(interval);\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            return helper.intervalScaleGetTicks(\n                this._interval, this._extent, this._niceExtent, this._intervalPrecision\n            );\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getTicksLabels: function () {\n            var labels = [];\n            var ticks = this.getTicks();\n            for (var i = 0; i < ticks.length; i++) {\n                labels.push(this.getLabel(ticks[i]));\n            }\n            return labels;\n        },\n\n        /**\n         * @param {number} data\n         * @param {Object} [opt]\n         * @param {number|string} [opt.precision] If 'auto', use nice presision.\n         * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n         * @return {string}\n         */\n        getLabel: function (data, opt) {\n            if (data == null) {\n                return '';\n            }\n\n            var precision = opt && opt.precision;\n\n            if (precision == null) {\n                precision = numberUtil.getPrecisionSafe(data) || 0;\n            }\n            else if (precision === 'auto') {\n                // Should be more precise then tick.\n                precision = this._intervalPrecision;\n            }\n\n            // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n            // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n            data = roundNumber(data, precision, true);\n\n            return formatUtil.addCommas(data);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         *\n         * @param {number} [splitNumber = 5] Desired number of ticks\n         * @param {number} [minInterval]\n         * @param {number} [maxInterval]\n         */\n        niceTicks: function (splitNumber, minInterval, maxInterval) {\n            splitNumber = splitNumber || 5;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (!isFinite(span)) {\n                return;\n            }\n            // User may set axis min 0 and data are all negative\n            // FIXME If it needs to reverse ?\n            if (span < 0) {\n                span = -span;\n                extent.reverse();\n            }\n\n            var result = helper.intervalScaleNiceTicks(\n                extent, splitNumber, minInterval, maxInterval\n            );\n\n            this._intervalPrecision = result.intervalPrecision;\n            this._interval = result.interval;\n            this._niceExtent = result.niceTickExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {Object} opt\n         * @param {number} [opt.splitNumber = 5] Given approx tick number\n         * @param {boolean} [opt.fixMin=false]\n         * @param {boolean} [opt.fixMax=false]\n         * @param {boolean} [opt.minInterval]\n         * @param {boolean} [opt.maxInterval]\n         */\n        niceExtent: function (opt) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                if (extent[0] !== 0) {\n                    // Expand extent\n                    var expandSize = extent[0];\n                    // In the fowllowing case\n                    //      Axis has been fixed max 100\n                    //      Plus data are all 100 and axis extent are [100, 100].\n                    // Extend to the both side will cause expanded max is larger than fixed max.\n                    // So only expand to the smaller side.\n                    if (!opt.fixMax) {\n                        extent[1] += expandSize / 2;\n                        extent[0] -= expandSize / 2;\n                    }\n                    else {\n                        extent[0] -= expandSize / 2;\n                    }\n                }\n                else {\n                    extent[1] = 1;\n                }\n            }\n            var span = extent[1] - extent[0];\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (!isFinite(span)) {\n                extent[0] = 0;\n                extent[1] = 1;\n            }\n\n            this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!opt.fixMin) {\n                extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n            }\n            if (!opt.fixMax) {\n                extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n            }\n        }\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    IntervalScale.create = function () {\n        return new IntervalScale();\n    };\n\n    module.exports = IntervalScale;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Interval.js\n// module id = 638\n// module chunks = 0 1 2","'use strict';\n// Symbol factory\n\n\n    var graphic = require('./graphic');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n\n    /**\n     * Triangle shape\n     * @inner\n     */\n    var Triangle = graphic.extendShape({\n        type: 'triangle',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy + height);\n            path.lineTo(cx - width, cy + height);\n            path.closePath();\n        }\n    });\n    /**\n     * Diamond shape\n     * @inner\n     */\n    var Diamond = graphic.extendShape({\n        type: 'diamond',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy);\n            path.lineTo(cx, cy + height);\n            path.lineTo(cx - width, cy);\n            path.closePath();\n        }\n    });\n\n    /**\n     * Pin shape\n     * @inner\n     */\n    var Pin = graphic.extendShape({\n        type: 'pin',\n        shape: {\n            // x, y on the cusp\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (path, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var w = shape.width / 5 * 3;\n            // Height must be larger than width\n            var h = Math.max(w, shape.height);\n            var r = w / 2;\n\n            // Dist on y with tangent point and circle center\n            var dy = r * r / (h - r);\n            var cy = y - h + r + dy;\n            var angle = Math.asin(dy / r);\n            // Dist on x with tangent point and circle center\n            var dx = Math.cos(angle) * r;\n\n            var tanX = Math.sin(angle);\n            var tanY = Math.cos(angle);\n\n            path.arc(\n                x, cy, r,\n                Math.PI - angle,\n                Math.PI * 2 + angle\n            );\n\n            var cpLen = r * 0.6;\n            var cpLen2 = r * 0.7;\n            path.bezierCurveTo(\n                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\n                x, y - cpLen2,\n                x, y\n            );\n            path.bezierCurveTo(\n                x, y - cpLen2,\n                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\n                x - dx, cy + dy\n            );\n            path.closePath();\n        }\n    });\n\n    /**\n     * Arrow shape\n     * @inner\n     */\n    var Arrow = graphic.extendShape({\n\n        type: 'arrow',\n\n        shape: {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var height = shape.height;\n            var width = shape.width;\n            var x = shape.x;\n            var y = shape.y;\n            var dx = width / 3 * 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + dx, y + height);\n            ctx.lineTo(x, y + height / 4 * 3);\n            ctx.lineTo(x - dx, y + height);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n        }\n    });\n\n    /**\n     * Map of path contructors\n     * @type {Object.<string, module:zrender/graphic/Path>}\n     */\n    var symbolCtors = {\n        line: graphic.Line,\n\n        rect: graphic.Rect,\n\n        roundRect: graphic.Rect,\n\n        square: graphic.Rect,\n\n        circle: graphic.Circle,\n\n        diamond: Diamond,\n\n        pin: Pin,\n\n        arrow: Arrow,\n\n        triangle: Triangle\n    };\n\n    var symbolShapeMakers = {\n\n        line: function (x, y, w, h, shape) {\n            // FIXME\n            shape.x1 = x;\n            shape.y1 = y + h / 2;\n            shape.x2 = x + w;\n            shape.y2 = y + h / 2;\n        },\n\n        rect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        roundRect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n            shape.r = Math.min(w, h) / 4;\n        },\n\n        square: function (x, y, w, h, shape) {\n            var size = Math.min(w, h);\n            shape.x = x;\n            shape.y = y;\n            shape.width = size;\n            shape.height = size;\n        },\n\n        circle: function (x, y, w, h, shape) {\n            // Put circle in the center of square\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.r = Math.min(w, h) / 2;\n        },\n\n        diamond: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        pin: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        arrow: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        triangle: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        }\n    };\n\n    var symbolBuildProxies = {};\n    for (var name in symbolCtors) {\n        if (symbolCtors.hasOwnProperty(name)) {\n            symbolBuildProxies[name] = new symbolCtors[name]();\n        }\n    }\n\n    var Symbol = graphic.extendShape({\n\n        type: 'symbol',\n\n        shape: {\n            symbolType: '',\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        beforeBrush: function () {\n            var style = this.style;\n            var shape = this.shape;\n            // FIXME\n            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n                style.textPosition = ['50%', '40%'];\n                style.textAlign = 'center';\n                style.textVerticalAlign = 'middle';\n            }\n        },\n\n        buildPath: function (ctx, shape, inBundle) {\n            var symbolType = shape.symbolType;\n            var proxySymbol = symbolBuildProxies[symbolType];\n            if (shape.symbolType !== 'none') {\n                if (!proxySymbol) {\n                    // Default rect\n                    symbolType = 'rect';\n                    proxySymbol = symbolBuildProxies[symbolType];\n                }\n                symbolShapeMakers[symbolType](\n                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\n                );\n                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n            }\n        }\n    });\n\n    // Provide setColor helper method to avoid determine if set the fill or stroke outside\n    var symbolPathSetColor = function (color) {\n        if (this.type !== 'image') {\n            var symbolStyle = this.style;\n            var symbolShape = this.shape;\n            if (symbolShape && symbolShape.symbolType === 'line') {\n                symbolStyle.stroke = color;\n            }\n            else if (this.__isEmptyBrush) {\n                symbolStyle.stroke = color;\n                symbolStyle.fill = '#fff';\n            }\n            else {\n                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n                symbolStyle.fill && (symbolStyle.fill = color);\n                symbolStyle.stroke && (symbolStyle.stroke = color);\n            }\n            this.dirty(false);\n        }\n    };\n\n    var symbolUtil = {\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @param {string} symbolType\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: function (symbolType, x, y, w, h, color) {\n            // TODO Support image object, DynamicImage.\n\n            var isEmpty = symbolType.indexOf('empty') === 0;\n            if (isEmpty) {\n                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n            }\n            var symbolPath;\n\n            if (symbolType.indexOf('image://') === 0) {\n                symbolPath = new graphic.Image({\n                    style: {\n                        image: symbolType.slice(8),\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n            else if (symbolType.indexOf('path://') === 0) {\n                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\n            }\n            else {\n                symbolPath = new Symbol({\n                    shape: {\n                        symbolType: symbolType,\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n\n            symbolPath.__isEmptyBrush = isEmpty;\n\n            symbolPath.setColor = symbolPathSetColor;\n\n            symbolPath.setColor(color);\n\n            return symbolPath;\n        }\n    };\n\n    module.exports = symbolUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/symbol.js\n// module id = 639\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../util/format');\n    var classUtil = require('../util/clazz');\n    var modelUtil = require('../util/model');\n    var ComponentModel = require('./Component');\n    var colorPaletteMixin = require('./mixin/colorPalette');\n    var env = require('zrender/lib/core/env');\n    var layout = require('../util/layout');\n\n    var set = classUtil.set;\n    var get = classUtil.get;\n    var encodeHTML = formatUtil.encodeHTML;\n    var addCommas = formatUtil.addCommas;\n\n    var SeriesModel = ComponentModel.extend({\n\n        type: 'series.__base__',\n\n        /**\n         * @readOnly\n         */\n        seriesIndex: 0,\n\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\n        coordinateSystem: null,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * Data provided for legend\n         * @type {Function}\n         */\n        // PENDING\n        legendDataProvider: null,\n\n        /**\n         * Access path of color for visual\n         */\n        visualColorAccessPath: 'itemStyle.normal.color',\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            /**\n             * @type {number}\n             * @readOnly\n             */\n            this.seriesIndex = this.componentIndex;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            var data = this.getInitialData(option, ecModel);\n            if (__DEV__) {\n                zrUtil.assert(data, 'getInitialData returned invalid data.');\n            }\n            /**\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n             * @private\n             */\n            set(this, 'dataBeforeProcessed', data);\n\n            // If we reverse the order (make data firstly, and then make\n            // dataBeforeProcessed by cloneShallow), cloneShallow will\n            // cause data.graph.data !== data when using\n            // module:echarts/data/Graph or module:echarts/data/Tree.\n            // See module:echarts/data/helper/linkList\n            this.restoreData();\n        },\n\n        /**\n         * Util for merge default and theme to option\n         * @param  {Object} option\n         * @param  {module:echarts/model/Global} ecModel\n         */\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            zrUtil.merge(\n                option,\n                ecModel.getTheme().get(this.subType)\n            );\n            zrUtil.merge(option, this.getDefaultOption());\n\n            // Default label emphasis `show`\n            modelUtil.defaultEmphasis(option.label, ['show']);\n\n            this.fillDataTextStyle(option.data);\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (newSeriesOption, ecModel) {\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n            this.fillDataTextStyle(newSeriesOption.data);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n            }\n\n            var data = this.getInitialData(newSeriesOption, ecModel);\n            // TODO Merge data?\n            if (data) {\n                set(this, 'data', data);\n                set(this, 'dataBeforeProcessed', data.cloneShallow());\n            }\n        },\n\n        fillDataTextStyle: function (data) {\n            // Default data label emphasis `show`\n            // FIXME Tree structure data ?\n            // FIXME Performance ?\n            if (data) {\n                var props = ['show'];\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] && data[i].label) {\n                        modelUtil.defaultEmphasis(data[i].label, props);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Init a data structure from data related option in series\n         * Must be overwritten\n         */\n        getInitialData: function () {},\n\n        /**\n         * @param {string} [dataType]\n         * @return {module:echarts/data/List}\n         */\n        getData: function (dataType) {\n            var data = get(this, 'data');\n            return dataType == null ? data : data.getLinkedData(dataType);\n        },\n\n        /**\n         * @param {module:echarts/data/List} data\n         */\n        setData: function (data) {\n            set(this, 'data', data);\n        },\n\n        /**\n         * Get data before processed\n         * @return {module:echarts/data/List}\n         */\n        getRawData: function () {\n            return get(this, 'dataBeforeProcessed');\n        },\n\n        /**\n         * Coord dimension to data dimension.\n         *\n         * By default the result is the same as dimensions of series data.\n         * But in some series data dimensions are different from coord dimensions (i.e.\n         * candlestick and boxplot). Override this method to handle those cases.\n         *\n         * Coord dimension to data dimension can be one-to-many\n         *\n         * @param {string} coordDim\n         * @return {Array.<string>} dimensions on the axis.\n         */\n        coordDimToDataDim: function (coordDim) {\n            return modelUtil.coordDimToDataDim(this.getData(), coordDim);\n        },\n\n        /**\n         * Convert data dimension to coord dimension.\n         *\n         * @param {string|number} dataDim\n         * @return {string}\n         */\n        dataDimToCoordDim: function (dataDim) {\n            return modelUtil.dataDimToCoordDim(this.getData(), dataDim);\n        },\n\n        /**\n         * Get base axis if has coordinate system and has axis.\n         * By default use coordSys.getBaseAxis();\n         * Can be overrided for some chart.\n         * @return {type} description\n         */\n        getBaseAxis: function () {\n            var coordSys = this.coordinateSystem;\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n        },\n\n        // FIXME\n        /**\n         * Default tooltip formatter\n         *\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         */\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n            function formatArrayValue(value) {\n                var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n                    var dimItem = data.getDimensionInfo(idx);\n                    return vertially |= dimItem && dimItem.tooltip !== false && dimItem.tooltipName != null;\n                }, 0);\n\n                var result = [];\n                var tooltipDims = modelUtil.otherDimToDataDim(data, 'tooltip');\n\n                tooltipDims.length\n                    ? zrUtil.each(tooltipDims, function (dimIdx) {\n                        setEachItem(data.get(dimIdx, dataIndex), dimIdx);\n                    })\n                    // By default, all dims is used on tooltip.\n                    : zrUtil.each(value, setEachItem);\n\n                function setEachItem(val, dimIdx) {\n                    var dimInfo = data.getDimensionInfo(dimIdx);\n                    // If `dimInfo.tooltip` is not set, show tooltip.\n                    if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n                        return;\n                    }\n                    var dimType = dimInfo.type;\n                    var valStr = (vertially ? '- ' + (dimInfo.tooltipName || dimInfo.name) + ': ' : '')\n                        + (dimType === 'ordinal'\n                            ? val + ''\n                            : dimType === 'time'\n                            ? (multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val))\n                            : addCommas(val)\n                        );\n                    valStr && result.push(encodeHTML(valStr));\n                }\n\n                return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n            }\n\n            var data = get(this, 'data');\n\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = zrUtil.isArray(value)\n                ? formatArrayValue(value) : encodeHTML(addCommas(value));\n            var name = data.getName(dataIndex);\n\n            var color = data.getItemVisual(dataIndex, 'color');\n            if (zrUtil.isObject(color) && color.colorStops) {\n                color = (color.colorStops[0] || {}).color;\n            }\n            color = color || 'transparent';\n\n            var colorEl = formatUtil.getTooltipMarker(color);\n\n            var seriesName = this.name;\n            // FIXME\n            if (seriesName === '\\0-') {\n                // Not show '-'\n                seriesName = '';\n            }\n            seriesName = seriesName\n                ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ')\n                : '';\n            return !multipleSeries\n                ? seriesName + colorEl\n                    + (name\n                        ? encodeHTML(name) + ': ' + formattedValue\n                        : formattedValue\n                    )\n                : colorEl + seriesName + formattedValue;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var animationEnabled = this.getShallow('animation');\n            if (animationEnabled) {\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\n                    animationEnabled = false;\n                }\n            }\n            return animationEnabled;\n        },\n\n        restoreData: function () {\n            set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n        },\n\n        getColorFromPalette: function (name, scope) {\n            var ecModel = this.ecModel;\n            // PENDING\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n            if (!color) {\n                color = ecModel.getColorFromPalette(name, scope);\n            }\n            return color;\n        },\n\n        /**\n         * Get data indices for show tooltip content. See tooltip.\n         * @abstract\n         * @param {Array.<string>|string} dim\n         * @param {Array.<number>} value\n         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n         * @return {Object} {dataIndices, nestestValue}.\n         */\n        getAxisTooltipData: null,\n\n        /**\n         * See tooltip.\n         * @abstract\n         * @param {number} dataIndex\n         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n         */\n        getTooltipPosition: null\n    });\n\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\n    module.exports = SeriesModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Series.js\n// module id = 640\n// module chunks = 0 1 2","\n\n    var Group = require('zrender/lib/container/Group');\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n    var modelUtil = require('../util/model');\n    var zrUtil = require('zrender/lib/core/util');\n\n    function Chart() {\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewChart');\n    }\n\n    Chart.prototype = {\n\n        type: 'chart',\n\n        /**\n         * Init the chart\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        init: function (ecModel, api) {},\n\n        /**\n         * Render the chart\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        render: function (seriesModel, ecModel, api, payload) {},\n\n        /**\n         * Highlight series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        highlight: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n        },\n\n        /**\n         * Downplay series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        downplay: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'normal');\n        },\n\n        /**\n         * Remove self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        remove: function (ecModel, api) {\n            this.group.removeAll();\n        },\n\n        /**\n         * Dispose self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        dispose: function () {}\n\n        /**\n         * The view contains the given point.\n         * @interface\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        // containPoint: function () {}\n\n    };\n\n    var chartProto = Chart.prototype;\n    chartProto.updateView\n        = chartProto.updateLayout\n        = chartProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            this.render(seriesModel, ecModel, api, payload);\n        };\n\n    /**\n     * Set state of single element\n     * @param  {module:zrender/Element} el\n     * @param  {string} state\n     */\n    function elSetState(el, state) {\n        if (el) {\n            el.trigger(state);\n            if (el.type === 'group') {\n                for (var i = 0; i < el.childCount(); i++) {\n                    elSetState(el.childAt(i), state);\n                }\n            }\n        }\n    }\n    /**\n     * @param  {module:echarts/data/List} data\n     * @param  {Object} payload\n     * @param  {string} state 'normal'|'emphasis'\n     * @inner\n     */\n    function toggleHighlight(data, payload, state) {\n        var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n        if (dataIndex != null) {\n            zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n                elSetState(data.getItemGraphicEl(dataIdx), state);\n            });\n        }\n        else {\n            data.eachItemGraphicEl(function (el) {\n                elSetState(el, state);\n            });\n        }\n    }\n\n    // Enable Chart.extend.\n    clazzUtil.enableClassExtend(Chart, ['dispose']);\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\n\n    module.exports = Chart;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/view/Chart.js\n// module id = 641\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazz = require('./clazz');\n\n    var parseClassType = clazz.parseClassType;\n\n    var base = 0;\n\n    var componentUtil = {};\n\n    var DELIMITER = '_';\n\n    /**\n     * @public\n     * @param {string} type\n     * @return {string}\n     */\n    componentUtil.getUID = function (type) {\n        // Considering the case of crossing js context,\n        // use Math.random to make id as unique as possible.\n        return [(type || ''), base++, Math.random()].join(DELIMITER);\n    };\n\n    /**\n     * @inner\n     */\n    componentUtil.enableSubTypeDefaulter = function (entity) {\n\n        var subTypeDefaulters = {};\n\n        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n            componentType = parseClassType(componentType);\n            subTypeDefaulters[componentType.main] = defaulter;\n        };\n\n        entity.determineSubType = function (componentType, option) {\n            var type = option.type;\n            if (!type) {\n                var componentTypeMain = parseClassType(componentType).main;\n                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n                    type = subTypeDefaulters[componentTypeMain](option);\n                }\n            }\n            return type;\n        };\n\n        return entity;\n    };\n\n    /**\n     * Topological travel on Activity Network (Activity On Vertices).\n     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n     *\n     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n     *\n     * If there is circle dependencey, Error will be thrown.\n     *\n     */\n    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\n\n        /**\n         * @public\n         * @param {Array.<string>} targetNameList Target Component type list.\n         *                                           Can be ['aa', 'bb', 'aa.xx']\n         * @param {Array.<string>} fullNameList By which we can build dependency graph.\n         * @param {Function} callback Params: componentType, dependencies.\n         * @param {Object} context Scope of callback.\n         */\n        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n            if (!targetNameList.length) {\n                return;\n            }\n\n            var result = makeDepndencyGraph(fullNameList);\n            var graph = result.graph;\n            var stack = result.noEntryList;\n\n            var targetNameSet = {};\n            zrUtil.each(targetNameList, function (name) {\n                targetNameSet[name] = true;\n            });\n\n            while (stack.length) {\n                var currComponentType = stack.pop();\n                var currVertex = graph[currComponentType];\n                var isInTargetNameSet = !!targetNameSet[currComponentType];\n                if (isInTargetNameSet) {\n                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\n                    delete targetNameSet[currComponentType];\n                }\n                zrUtil.each(\n                    currVertex.successor,\n                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\n                );\n            }\n\n            zrUtil.each(targetNameSet, function () {\n                throw new Error('Circle dependency may exists');\n            });\n\n            function removeEdge(succComponentType) {\n                graph[succComponentType].entryCount--;\n                if (graph[succComponentType].entryCount === 0) {\n                    stack.push(succComponentType);\n                }\n            }\n\n            // Consider this case: legend depends on series, and we call\n            // chart.setOption({series: [...]}), where only series is in option.\n            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n            // not be called, but only sereis.mergeOption is called. Thus legend\n            // have no chance to update its local record about series (like which\n            // name of series is available in legend).\n            function removeEdgeAndAdd(succComponentType) {\n                targetNameSet[succComponentType] = true;\n                removeEdge(succComponentType);\n            }\n        };\n\n        /**\n         * DepndencyGraph: {Object}\n         * key: conponentType,\n         * value: {\n         *     successor: [conponentTypes...],\n         *     originalDeps: [conponentTypes...],\n         *     entryCount: {number}\n         * }\n         */\n        function makeDepndencyGraph(fullNameList) {\n            var graph = {};\n            var noEntryList = [];\n\n            zrUtil.each(fullNameList, function (name) {\n\n                var thisItem = createDependencyGraphItem(graph, name);\n                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n\n                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n                thisItem.entryCount = availableDeps.length;\n                if (thisItem.entryCount === 0) {\n                    noEntryList.push(name);\n                }\n\n                zrUtil.each(availableDeps, function (dependentName) {\n                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n                        thisItem.predecessor.push(dependentName);\n                    }\n                    var thatItem = createDependencyGraphItem(graph, dependentName);\n                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n                        thatItem.successor.push(name);\n                    }\n                });\n            });\n\n            return {graph: graph, noEntryList: noEntryList};\n        }\n\n        function createDependencyGraphItem(graph, name) {\n            if (!graph[name]) {\n                graph[name] = {predecessor: [], successor: []};\n            }\n            return graph[name];\n        }\n\n        function getAvailableDependencies(originalDeps, fullNameList) {\n            var availableDeps = [];\n            zrUtil.each(originalDeps, function (dep) {\n                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n            });\n            return availableDeps;\n        }\n    };\n\n    module.exports = componentUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/component.js\n// module id = 642\n// module chunks = 0 1 2","// https://github.com/mziccard/node-timsort\n\n    var DEFAULT_MIN_MERGE = 32;\n\n    var DEFAULT_MIN_GALLOPING = 7;\n\n    var DEFAULT_TMP_STORAGE_LENGTH = 256;\n\n    function minRunLength(n) {\n        var r = 0;\n\n        while (n >= DEFAULT_MIN_MERGE) {\n            r |= n & 1;\n            n >>= 1;\n        }\n\n        return n + r;\n    }\n\n    function makeAscendingRun(array, lo, hi, compare) {\n        var runHi = lo + 1;\n\n        if (runHi === hi) {\n            return 1;\n        }\n\n        if (compare(array[runHi++], array[lo]) < 0) {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n                runHi++;\n            }\n\n            reverseRun(array, lo, runHi);\n        }\n        else {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n                runHi++;\n            }\n        }\n\n        return runHi - lo;\n    }\n\n    function reverseRun(array, lo, hi) {\n        hi--;\n\n        while (lo < hi) {\n            var t = array[lo];\n            array[lo++] = array[hi];\n            array[hi--] = t;\n        }\n    }\n\n    function binaryInsertionSort(array, lo, hi, start, compare) {\n        if (start === lo) {\n            start++;\n        }\n\n        for (; start < hi; start++) {\n            var pivot = array[start];\n\n            var left = lo;\n            var right = start;\n            var mid;\n\n            while (left < right) {\n                mid = left + right >>> 1;\n\n                if (compare(pivot, array[mid]) < 0) {\n                    right = mid;\n                }\n                else {\n                    left = mid + 1;\n                }\n            }\n\n            var n = start - left;\n\n            switch (n) {\n                case 3:\n                    array[left + 3] = array[left + 2];\n\n                case 2:\n                    array[left + 2] = array[left + 1];\n\n                case 1:\n                    array[left + 1] = array[left];\n                    break;\n                default:\n                    while (n > 0) {\n                        array[left + n] = array[left + n - 1];\n                        n--;\n                    }\n            }\n\n            array[left] = pivot;\n        }\n    }\n\n    function gallopLeft(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) > 0) {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n        else {\n            maxOffset = hint + 1;\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n\n        lastOffset++;\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) > 0) {\n                lastOffset = m + 1;\n            }\n            else {\n                offset = m;\n            }\n        }\n        return offset;\n    }\n\n    function gallopRight(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) < 0) {\n            maxOffset = hint + 1;\n\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n        else {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n\n        lastOffset++;\n\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) < 0) {\n                offset = m;\n            }\n            else {\n                lastOffset = m + 1;\n            }\n        }\n\n        return offset;\n    }\n\n    function TimSort(array, compare) {\n        var minGallop = DEFAULT_MIN_GALLOPING;\n        var length = 0;\n        var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n        var stackLength = 0;\n        var runStart;\n        var runLength;\n        var stackSize = 0;\n\n        length = array.length;\n\n        if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n            tmpStorageLength = length >>> 1;\n        }\n\n        var tmp = [];\n\n        stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n\n        runStart = [];\n        runLength = [];\n\n        function pushRun(_runStart, _runLength) {\n            runStart[stackSize] = _runStart;\n            runLength[stackSize] = _runLength;\n            stackSize += 1;\n        }\n\n        function mergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n                    if (runLength[n - 1] < runLength[n + 1]) {\n                        n--;\n                    }\n                }\n                else if (runLength[n] > runLength[n + 1]) {\n                    break;\n                }\n                mergeAt(n);\n            }\n        }\n\n        function forceMergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n                    n--;\n                }\n\n                mergeAt(n);\n            }\n        }\n\n        function mergeAt(i) {\n            var start1 = runStart[i];\n            var length1 = runLength[i];\n            var start2 = runStart[i + 1];\n            var length2 = runLength[i + 1];\n\n            runLength[i] = length1 + length2;\n\n            if (i === stackSize - 3) {\n                runStart[i + 1] = runStart[i + 2];\n                runLength[i + 1] = runLength[i + 2];\n            }\n\n            stackSize--;\n\n            var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n            start1 += k;\n            length1 -= k;\n\n            if (length1 === 0) {\n                return;\n            }\n\n            length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n            if (length2 === 0) {\n                return;\n            }\n\n            if (length1 <= length2) {\n                mergeLow(start1, length1, start2, length2);\n            }\n            else {\n                mergeHigh(start1, length1, start2, length2);\n            }\n        }\n\n        function mergeLow(start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length1; i++) {\n                tmp[i] = array[start1 + i];\n            }\n\n            var cursor1 = 0;\n            var cursor2 = start2;\n            var dest = start1;\n\n            array[dest++] = array[cursor2++];\n\n            if (--length2 === 0) {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n                return;\n            }\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n                return;\n            }\n\n            var _minGallop = minGallop;\n            var count1, count2, exit;\n\n            while (1) {\n                count1 = 0;\n                count2 = 0;\n                exit = false;\n\n                do {\n                    if (compare(array[cursor2], tmp[cursor1]) < 0) {\n                        array[dest++] = array[cursor2++];\n                        count2++;\n                        count1 = 0;\n\n                        if (--length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest++] = tmp[cursor1++];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n                    if (count1 !== 0) {\n                        for (i = 0; i < count1; i++) {\n                            array[dest + i] = tmp[cursor1 + i];\n                        }\n\n                        dest += count1;\n                        cursor1 += count1;\n                        length1 -= count1;\n                        if (length1 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest++] = array[cursor2++];\n\n                    if (--length2 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n                    if (count2 !== 0) {\n                        for (i = 0; i < count2; i++) {\n                            array[dest + i] = array[cursor2 + i];\n                        }\n\n                        dest += count2;\n                        cursor2 += count2;\n                        length2 -= count2;\n\n                        if (length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    array[dest++] = tmp[cursor1++];\n\n                    if (--length1 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            minGallop < 1 && (minGallop = 1);\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n            }\n            else if (length1 === 0) {\n                throw new Error();\n                // throw new Error('mergeLow preconditions were not respected');\n            }\n            else {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n            }\n        }\n\n        function mergeHigh (start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length2; i++) {\n                tmp[i] = array[start2 + i];\n            }\n\n            var cursor1 = start1 + length1 - 1;\n            var cursor2 = length2 - 1;\n            var dest = start2 + length2 - 1;\n            var customCursor = 0;\n            var customDest = 0;\n\n            array[dest--] = array[cursor1--];\n\n            if (--length1 === 0) {\n                customCursor = dest - (length2 - 1);\n\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n\n                return;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n                return;\n            }\n\n            var _minGallop = minGallop;\n\n            while (true) {\n                var count1 = 0;\n                var count2 = 0;\n                var exit = false;\n\n                do {\n                    if (compare(tmp[cursor2], array[cursor1]) < 0) {\n                        array[dest--] = array[cursor1--];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest--] = tmp[cursor2--];\n                        count2++;\n                        count1 = 0;\n                        if (--length2 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n                    if (count1 !== 0) {\n                        dest -= count1;\n                        cursor1 -= count1;\n                        length1 -= count1;\n                        customDest = dest + 1;\n                        customCursor = cursor1 + 1;\n\n                        for (i = count1 - 1; i >= 0; i--) {\n                            array[customDest + i] = array[customCursor + i];\n                        }\n\n                        if (length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = tmp[cursor2--];\n\n                    if (--length2 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n                    if (count2 !== 0) {\n                        dest -= count2;\n                        cursor2 -= count2;\n                        length2 -= count2;\n                        customDest = dest + 1;\n                        customCursor = cursor2 + 1;\n\n                        for (i = 0; i < count2; i++) {\n                            array[customDest + i] = tmp[customCursor + i];\n                        }\n\n                        if (length2 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = array[cursor1--];\n\n                    if (--length1 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            if (minGallop < 1) {\n                minGallop = 1;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n            }\n            else if (length2 === 0) {\n                throw new Error();\n                // throw new Error('mergeHigh preconditions were not respected');\n            }\n            else {\n                customCursor = dest - (length2 - 1);\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n            }\n        }\n\n        this.mergeRuns = mergeRuns;\n        this.forceMergeRuns = forceMergeRuns;\n        this.pushRun = pushRun;\n    }\n\n    function sort(array, compare, lo, hi) {\n        if (!lo) {\n            lo = 0;\n        }\n        if (!hi) {\n            hi = array.length;\n        }\n\n        var remaining = hi - lo;\n\n        if (remaining < 2) {\n            return;\n        }\n\n        var runLength = 0;\n\n        if (remaining < DEFAULT_MIN_MERGE) {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n            return;\n        }\n\n        var ts = new TimSort(array, compare);\n\n        var minRun = minRunLength(remaining);\n\n        do {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            if (runLength < minRun) {\n                var force = remaining;\n                if (force > minRun) {\n                    force = minRun;\n                }\n\n                binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n                runLength = force;\n            }\n\n            ts.pushRun(lo, runLength);\n            ts.mergeRuns();\n\n            remaining -= runLength;\n            lo += runLength;\n        } while (remaining !== 0);\n\n        ts.forceMergeRuns();\n    }\n\n    module.exports = sort;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/timsort.js\n// module id = 643\n// module chunks = 0 1 2","/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n\n\n    var zrUtil = require('../core/util');\n\n    var Style = require('./Style');\n\n    var Element = require('../Element');\n    var RectText = require('./mixin/RectText');\n    // var Stateful = require('./mixin/Stateful');\n\n    /**\n     * @alias module:zrender/graphic/Displayable\n     * @extends module:zrender/Element\n     * @extends module:zrender/graphic/mixin/RectText\n     */\n    function Displayable(opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        // Extend properties\n        for (var name in opts) {\n            if (\n                opts.hasOwnProperty(name) &&\n                name !== 'style'\n            ) {\n                this[name] = opts[name];\n            }\n        }\n\n        /**\n         * @type {module:zrender/graphic/Style}\n         */\n        this.style = new Style(opts.style, this);\n\n        this._rect = null;\n        // Shapes for cascade clipping.\n        this.__clipPaths = [];\n\n        // FIXME Stateful must be mixined after style is setted\n        // Stateful.call(this, opts);\n    }\n\n    Displayable.prototype = {\n\n        constructor: Displayable,\n\n        type: 'displayable',\n\n        /**\n         * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n         * Dirty flag. From which painter will determine if this displayable object needs brush\n         * @name module:zrender/graphic/Displayable#__dirty\n         * @type {boolean}\n         */\n        __dirty: true,\n\n        /**\n         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n         * If ignore drawing of the displayable object. Mouse event will still be triggered\n         * @name module:/zrender/graphic/Displayable#invisible\n         * @type {boolean}\n         * @default false\n         */\n        invisible: false,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z: 0,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z2: 0,\n\n        /**\n         * z层level，决定绘画在哪层canvas中\n         * @name module:/zrender/graphic/Displayable#zlevel\n         * @type {number}\n         * @default 0\n         */\n        zlevel: 0,\n\n        /**\n         * 是否可拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        draggable: false,\n\n        /**\n         * 是否正在拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        dragging: false,\n\n        /**\n         * 是否相应鼠标事件\n         * @name module:/zrender/graphic/Displayable#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * If enable culling\n         * @type {boolean}\n         * @default false\n         */\n        culling: false,\n\n        /**\n         * Mouse cursor when hovered\n         * @name module:/zrender/graphic/Displayable#cursor\n         * @type {string}\n         */\n        cursor: 'pointer',\n\n        /**\n         * If hover area is bounding rect\n         * @name module:/zrender/graphic/Displayable#rectHover\n         * @type {string}\n         */\n        rectHover: false,\n\n        /**\n         * Render the element progressively when the value >= 0,\n         * usefull for large data.\n         * @type {number}\n         */\n        progressive: -1,\n\n        beforeBrush: function (ctx) {},\n\n        afterBrush: function (ctx) {},\n\n        /**\n         * 图形绘制方法\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        // Interface\n        brush: function (ctx, prevEl) {},\n\n        /**\n         * 获取最小包围盒\n         * @return {module:zrender/core/BoundingRect}\n         */\n        // Interface\n        getBoundingRect: function () {},\n\n        /**\n         * 判断坐标 x, y 是否在图形上\n         * If displayable element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        contain: function (x, y) {\n            return this.rectContain(x, y);\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            cb.call(context, this);\n        },\n\n        /**\n         * 判断坐标 x, y 是否在图形的包围盒上\n         * If bounding rect of element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        rectContain: function (x, y) {\n            var coord = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            return rect.contain(coord[0], coord[1]);\n        },\n\n        /**\n         * 标记图形元素为脏，并且在下一帧重绘\n         * Mark displayable element dirty and refresh next frame\n         */\n        dirty: function () {\n            this.__dirty = true;\n\n            this._rect = null;\n\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * 图形是否会触发事件\n         * If displayable object binded any event\n         * @return {boolean}\n         */\n        // TODO, 通过 bind 绑定的事件\n        // isSilent: function () {\n        //     return !(\n        //         this.hoverable || this.draggable\n        //         || this.onmousemove || this.onmouseover || this.onmouseout\n        //         || this.onmousedown || this.onmouseup || this.onclick\n        //         || this.ondragenter || this.ondragover || this.ondragleave\n        //         || this.ondrop\n        //     );\n        // },\n        /**\n         * Alias for animate('style')\n         * @param {boolean} loop\n         */\n        animateStyle: function (loop) {\n            return this.animate('style', loop);\n        },\n\n        attrKV: function (key, value) {\n            if (key !== 'style') {\n                Element.prototype.attrKV.call(this, key, value);\n            }\n            else {\n                this.style.set(value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setStyle: function (key, value) {\n            this.style.set(key, value);\n            this.dirty(false);\n            return this;\n        },\n\n        /**\n         * Use given style object\n         * @param  {Object} obj\n         */\n        useStyle: function (obj) {\n            this.style = new Style(obj, this);\n            this.dirty(false);\n            return this;\n        }\n    };\n\n    zrUtil.inherits(Displayable, Element);\n\n    zrUtil.mixin(Displayable, RectText);\n    // zrUtil.mixin(Displayable, Stateful);\n\n    module.exports = Displayable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Displayable.js\n// module id = 644\n// module chunks = 0 1 2","\n\n    /**\n     * @param {Array.<Object>} colorStops\n     */\n    var Gradient = function (colorStops) {\n\n        this.colorStops = colorStops || [];\n\n    };\n\n    Gradient.prototype = {\n\n        constructor: Gradient,\n\n        addColorStop: function (offset, color) {\n            this.colorStops.push({\n\n                offset: offset,\n\n                color: color\n            });\n        }\n\n    };\n\n    module.exports = Gradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Gradient.js\n// module id = 645\n// module chunks = 0 1 2","\n\n    var LRU = require('../../core/LRU');\n    var globalImageCache = new LRU(50);\n\n    var helper = {};\n\n    /**\n     * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n     * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n     */\n    helper.findExistImage = function (newImageOrSrc) {\n        if (typeof newImageOrSrc === 'string') {\n            var cachedImgObj = globalImageCache.get(newImageOrSrc);\n            return cachedImgObj && cachedImgObj.image;\n        }\n        else {\n            return newImageOrSrc;\n        }\n    };\n\n    /**\n     * Caution: User should cache loaded images, but not just count on LRU.\n     * Consider if required images more than LRU size, will dead loop occur?\n     *\n     * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n     * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n     * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n     * @param {Function} [cb] params: (image, cbPayload)\n     * @param {Object} [cbPayload] Payload on cb calling.\n     * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n     */\n    helper.createOrUpdateImage = function (newImageOrSrc, image, hostEl, cb, cbPayload) {\n        if (!newImageOrSrc) {\n            return image;\n        }\n        else if (typeof newImageOrSrc === 'string') {\n\n            // Image should not be loaded repeatly.\n            if ((image && image.__zrImageSrc === newImageOrSrc) || !hostEl) {\n                return image;\n            }\n\n            // Only when there is no existent image or existent image src\n            // is different, this method is responsible for load.\n            var cachedImgObj = globalImageCache.get(newImageOrSrc);\n\n            var pendingWrap = {hostEl: hostEl, cb: cb, cbPayload: cbPayload};\n\n            if (cachedImgObj) {\n                image = cachedImgObj.image;\n                !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n            }\n            else {\n                !image && (image = new Image());\n                image.onload = imageOnLoad;\n\n                globalImageCache.put(\n                    newImageOrSrc,\n                    image.__cachedImgObj = {\n                        image: image,\n                        pending: [pendingWrap]\n                    }\n                );\n\n                image.src = image.__zrImageSrc = newImageOrSrc;\n            }\n\n            return image;\n        }\n        // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n        else {\n            return newImageOrSrc;\n        }\n    };\n\n    function imageOnLoad() {\n        var cachedImgObj = this.__cachedImgObj;\n        this.onload = this.__cachedImgObj = null;\n\n        for (var i = 0; i < cachedImgObj.pending.length; i++) {\n            var pendingWrap = cachedImgObj.pending[i];\n            var cb = pendingWrap.cb;\n            cb && cb(this, pendingWrap.cbPayload);\n            pendingWrap.hostEl.dirty();\n        }\n        cachedImgObj.pending.length = 0;\n    }\n\n    var isImageReady = helper.isImageReady = function (image) {\n        return image && image.width && image.height;\n    };\n\n    module.exports = helper;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/image.js\n// module id = 646\n// module chunks = 0 1 2","\n\n    var textContain = require('../../contain/text');\n    var util = require('../../core/util');\n    var roundRectHelper = require('./roundRect');\n    var imageHelper = require('./image');\n\n    var retrieve3 = util.retrieve3;\n    var retrieve2 = util.retrieve2;\n\n    // TODO: Have not support 'start', 'end' yet.\n    var VALID_TEXT_ALIGN = {left: 1, right: 1, center: 1};\n    var VALID_TEXT_VERTICAL_ALIGN = {top: 1, bottom: 1, middle: 1};\n\n    var helper = {};\n\n    /**\n     * @param {module:zrender/graphic/Style} style\n     * @return {module:zrender/graphic/Style} The input style.\n     */\n    helper.normalizeTextStyle = function (style) {\n        normalizeStyle(style);\n        util.each(style.rich, normalizeStyle);\n        return style;\n    };\n\n    function normalizeStyle(style) {\n        if (style) {\n\n            style.font = textContain.makeFont(style);\n\n            var textAlign = style.textAlign;\n            textAlign === 'middle' && (textAlign = 'center');\n            style.textAlign = (\n                textAlign == null || VALID_TEXT_ALIGN[textAlign]\n            ) ? textAlign : 'left';\n\n            // Compatible with textBaseline.\n            var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n            textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n            style.textVerticalAlign = (\n                textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign]\n            ) ? textVerticalAlign : 'top';\n\n            var textPadding = style.textPadding;\n            if (textPadding) {\n                style.textPadding = util.normalizeCssArray(style.textPadding);\n            }\n        }\n    }\n\n    /**\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {string} text\n     * @param {module:zrender/graphic/Style} style\n     * @param {Object|boolean} [rect] {x, y, width, height}\n     *                  If set false, rect text is not used.\n     */\n    helper.renderText = function (hostEl, ctx, text, style, rect) {\n        style.rich\n            ? renderRichText(hostEl, ctx, text, style, rect)\n            : renderPlainText(hostEl, ctx, text, style, rect);\n    };\n\n    function renderPlainText(hostEl, ctx, text, style, rect) {\n        var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n\n        var textPadding = style.textPadding;\n\n        var contentBlock = hostEl.__textCotentBlock;\n        if (!contentBlock || hostEl.__dirty) {\n            contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(\n                text, font, textPadding, style.truncate\n            );\n        }\n\n        var outerHeight = contentBlock.outerHeight;\n\n        var textLines = contentBlock.lines;\n        var lineHeight = contentBlock.lineHeight;\n\n        var boxPos = getBoxPosition(outerHeight, style, rect);\n        var baseX = boxPos.baseX;\n        var baseY = boxPos.baseY;\n        var textAlign = boxPos.textAlign;\n        var textVerticalAlign = boxPos.textVerticalAlign;\n\n        // Origin of textRotation should be the base point of text drawing.\n        applyTextRotation(ctx, style, rect, baseX, baseY);\n\n        var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n        var textX = baseX;\n        var textY = boxY;\n\n        var needDrawBg = needDrawBackground(style);\n        if (needDrawBg || textPadding) {\n            // Consider performance, do not call getTextWidth util necessary.\n            var textWidth = textContain.getWidth(text, font);\n            var outerWidth = textWidth;\n            textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n            var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n\n            needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n            if (textPadding) {\n                textX = getTextXForPadding(baseX, textAlign, textPadding);\n                textY += textPadding[0];\n            }\n        }\n\n        setCtx(ctx, 'textAlign', textAlign || 'left');\n        // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n        // text will offset downward a little bit in font \"Microsoft YaHei\".\n        setCtx(ctx, 'textBaseline', 'middle');\n\n        // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n        setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n        setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n        setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n        setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0);\n\n        // `textBaseline` is set as 'middle'.\n        textY += lineHeight / 2;\n\n        var textLineWidth = style.textLineWidth;\n        var textStroke = getStroke(style.textStroke, textLineWidth);\n        var textFill = getFill(style.textFill);\n\n        if (textStroke) {\n            setCtx(ctx, 'lineWidth', textLineWidth);\n            setCtx(ctx, 'strokeStyle', textStroke);\n        }\n        if (textFill) {\n            setCtx(ctx, 'fillStyle', textFill);\n        }\n\n        for (var i = 0; i < textLines.length; i++) {\n            // Fill after stroke so the outline will not cover the main part.\n            textStroke && ctx.strokeText(textLines[i], textX, textY);\n            textFill && ctx.fillText(textLines[i], textX, textY);\n            textY += lineHeight;\n        }\n    }\n\n    function renderRichText(hostEl, ctx, text, style, rect) {\n        var contentBlock = hostEl.__textCotentBlock;\n\n        if (!contentBlock || hostEl.__dirty) {\n            contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n        }\n\n        drawRichText(hostEl, ctx, contentBlock, style, rect);\n    }\n\n    function drawRichText(hostEl, ctx, contentBlock, style, rect) {\n        var contentWidth = contentBlock.width;\n        var outerWidth = contentBlock.outerWidth;\n        var outerHeight = contentBlock.outerHeight;\n        var textPadding = style.textPadding;\n\n        var boxPos = getBoxPosition(outerHeight, style, rect);\n        var baseX = boxPos.baseX;\n        var baseY = boxPos.baseY;\n        var textAlign = boxPos.textAlign;\n        var textVerticalAlign = boxPos.textVerticalAlign;\n\n        // Origin of textRotation should be the base point of text drawing.\n        applyTextRotation(ctx, style, rect, baseX, baseY);\n\n        var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n        var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n        var xLeft = boxX;\n        var lineTop = boxY;\n        if (textPadding) {\n            xLeft += textPadding[3];\n            lineTop += textPadding[0];\n        }\n        var xRight = xLeft + contentWidth;\n\n        needDrawBackground(style) && drawBackground(\n            hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight\n        );\n\n        for (var i = 0; i < contentBlock.lines.length; i++) {\n            var line = contentBlock.lines[i];\n            var tokens = line.tokens;\n            var tokenCount = tokens.length;\n            var lineHeight = line.lineHeight;\n            var usedWidth = line.width;\n\n            var leftIndex = 0;\n            var lineXLeft = xLeft;\n            var lineXRight = xRight;\n            var rightIndex = tokenCount - 1;\n            var token;\n\n            while (\n                leftIndex < tokenCount\n                && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')\n            ) {\n                placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n                usedWidth -= token.width;\n                lineXLeft += token.width;\n                leftIndex++;\n            }\n\n            while (\n                rightIndex >= 0\n                && (token = tokens[rightIndex], token.textAlign === 'right')\n            ) {\n                placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n                usedWidth -= token.width;\n                lineXRight -= token.width;\n                rightIndex--;\n            }\n\n            // The other tokens are placed as textAlign 'center' if there is enough space.\n            lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n            while (leftIndex <= rightIndex) {\n                token = tokens[leftIndex];\n                // Consider width specified by user, use 'center' rather than 'left'.\n                placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n                lineXLeft += token.width;\n                leftIndex++;\n            }\n\n            lineTop += lineHeight;\n        }\n    }\n\n    function applyTextRotation(ctx, style, rect, x, y) {\n        // textRotation only apply in RectText.\n        if (rect && style.textRotation) {\n            var origin = style.textOrigin;\n            if (origin === 'center') {\n                x = rect.width / 2 + rect.x;\n                y = rect.height / 2 + rect.y;\n            }\n            else if (origin) {\n                x = origin[0] + rect.x;\n                y = origin[1] + rect.y;\n            }\n\n            ctx.translate(x, y);\n            // Positive: anticlockwise\n            ctx.rotate(-style.textRotation);\n            ctx.translate(-x, -y);\n        }\n    }\n\n    function placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n        var tokenStyle = style.rich[token.styleName] || {};\n\n        // 'ctx.textBaseline' is always set as 'middle', for sake of\n        // the bias of \"Microsoft YaHei\".\n        var textVerticalAlign = token.textVerticalAlign;\n        var y = lineTop + lineHeight / 2;\n        if (textVerticalAlign === 'top') {\n            y = lineTop + token.height / 2;\n        }\n        else if (textVerticalAlign === 'bottom') {\n            y = lineTop + lineHeight - token.height / 2;\n        }\n\n        !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(\n            hostEl,\n            ctx,\n            tokenStyle,\n            textAlign === 'right'\n                ? x - token.width\n                : textAlign === 'center'\n                ? x - token.width / 2\n                : x,\n            y - token.height / 2,\n            token.width,\n            token.height\n        );\n\n        var textPadding = token.textPadding;\n        if (textPadding) {\n            x = getTextXForPadding(x, textAlign, textPadding);\n            y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n        }\n\n        setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n        setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n        setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n        setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n\n        setCtx(ctx, 'textAlign', textAlign);\n        // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n        // text will offset downward a little bit in font \"Microsoft YaHei\".\n        setCtx(ctx, 'textBaseline', 'middle');\n\n        setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n\n        var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textLineWidth);\n        var textFill = getFill(tokenStyle.textFill || style.textFill);\n        var textLineWidth = retrieve2(tokenStyle.textLineWidth, style.textLineWidth);\n\n        // Fill after stroke so the outline will not cover the main part.\n        if (textStroke) {\n            setCtx(ctx, 'lineWidth', textLineWidth);\n            setCtx(ctx, 'strokeStyle', textStroke);\n            ctx.strokeText(token.text, x, y);\n        }\n        if (textFill) {\n            setCtx(ctx, 'fillStyle', textFill);\n            ctx.fillText(token.text, x, y);\n        }\n    }\n\n    function needDrawBackground(style) {\n        return style.textBackgroundColor\n            || (style.textBorderWidth && style.textBorderColor);\n    }\n\n    // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n    // shape: {x, y, width, height}\n    function drawBackground(hostEl, ctx, style, x, y, width, height) {\n        var textBackgroundColor = style.textBackgroundColor;\n        var textBorderWidth = style.textBorderWidth;\n        var textBorderColor = style.textBorderColor;\n        var isPlainBg = util.isString(textBackgroundColor);\n\n        setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n        setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n        setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n        setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n        if (isPlainBg || (textBorderWidth && textBorderColor)) {\n            ctx.beginPath();\n            var textBorderRadius = style.textBorderRadius;\n            if (!textBorderRadius) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, {\n                    x: x, y: y, width: width, height: height, r: textBorderRadius\n                });\n            }\n            ctx.closePath();\n        }\n\n        if (isPlainBg) {\n            setCtx(ctx, 'fillStyle', textBackgroundColor);\n            ctx.fill();\n        }\n        else if (util.isObject(textBackgroundColor)) {\n            var image = textBackgroundColor.image;\n\n            image = imageHelper.createOrUpdateImage(\n                image, null, hostEl, onBgImageLoaded, textBackgroundColor\n            );\n            if (image && imageHelper.isImageReady(image)) {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n\n        if (textBorderWidth && textBorderColor) {\n            setCtx(ctx, 'lineWidth', textBorderWidth);\n            setCtx(ctx, 'strokeStyle', textBorderColor);\n            ctx.stroke();\n        }\n    }\n\n    function onBgImageLoaded(image, textBackgroundColor) {\n        // Replace image, so that `contain/text.js#parseRichText`\n        // will get correct result in next tick.\n        textBackgroundColor.image = image;\n    }\n\n    function getBoxPosition(blockHeiht, style, rect) {\n        var baseX = style.x || 0;\n        var baseY = style.y || 0;\n        var textAlign = style.textAlign;\n        var textVerticalAlign = style.textVerticalAlign;\n\n        // Text position represented by coord\n        if (rect) {\n            var textPosition = style.textPosition;\n            if (textPosition instanceof Array) {\n                // Percent\n                baseX = rect.x + parsePercent(textPosition[0], rect.width);\n                baseY = rect.y + parsePercent(textPosition[1], rect.height);\n            }\n            else {\n                var res = textContain.adjustTextPositionOnRect(\n                    textPosition, rect, style.textDistance\n                );\n                baseX = res.x;\n                baseY = res.y;\n                // Default align and baseline when has textPosition\n                textAlign = textAlign || res.textAlign;\n                textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n            }\n\n            // textOffset is only support in RectText, otherwise\n            // we have to adjust boundingRect for textOffset.\n            var textOffset = style.textOffset;\n            if (textOffset) {\n                baseX += textOffset[0];\n                baseY += textOffset[1];\n            }\n        }\n\n        return {\n            baseX: baseX,\n            baseY: baseY,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    function setCtx(ctx, prop, value) {\n        // FIXME ??? performance try\n        // if (ctx.__currentValues[prop] !== value) {\n            ctx[prop] = ctx.__currentValues[prop] = value;\n        // }\n        return ctx[prop];\n    }\n\n    /**\n     * @param {string} [stroke] If specified, do not check style.textStroke.\n     * @param {string} [lineWidth] If specified, do not check style.textStroke.\n     * @param {number} style\n     */\n    var getStroke = helper.getStroke = function (stroke, lineWidth) {\n        return (stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none')\n            ? null\n            // TODO pattern and gradient?\n            : (stroke.image || stroke.colorStops)\n            ? '#000'\n            : stroke;\n    };\n\n    var getFill = helper.getFill = function (fill) {\n        return (fill == null || fill === 'none')\n            ? null\n            // TODO pattern and gradient?\n            : (fill.image || fill.colorStops)\n            ? '#000'\n            : fill;\n    };\n\n    function parsePercent(value, maxValue) {\n        if (typeof value === 'string') {\n            if (value.lastIndexOf('%') >= 0) {\n                return parseFloat(value) / 100 * maxValue;\n            }\n            return parseFloat(value);\n        }\n        return value;\n    }\n\n    function getTextXForPadding(x, textAlign, textPadding) {\n        return textAlign === 'right'\n            ? (x - textPadding[1])\n            : textAlign === 'center'\n            ? (x + textPadding[3] / 2 - textPadding[1] / 2)\n            : (x + textPadding[3]);\n    }\n\n    /**\n     * @param {string} text\n     * @param {module:zrender/Style} style\n     * @return {boolean}\n     */\n    helper.needDrawText = function (text, style) {\n        return text != null\n            && (text\n                || style.textBackgroundColor\n                || (style.textBorderWidth && style.textBorderColor)\n                || style.textPadding\n            );\n    };\n\n    module.exports = helper;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/text.js\n// module id = 647\n// module chunks = 0 1 2","'use strict';\n\n\n    var List = require('../../data/List');\n    var completeDimensions = require('../../data/helper/completeDimensions');\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var CoordinateSystem = require('../../CoordinateSystem');\n    var getDataItemValue = modelUtil.getDataItemValue;\n    var converDataValue = modelUtil.converDataValue;\n\n    function firstDataNotNull(data) {\n        var i = 0;\n        while (i < data.length && data[i] == null) {\n            i++;\n        }\n        return data[i];\n    }\n    function ifNeedCompleteOrdinalData(data) {\n        var sampleItem = firstDataNotNull(data);\n        return sampleItem != null\n            && !zrUtil.isArray(getDataItemValue(sampleItem));\n    }\n\n    /**\n     * Helper function to create a list from option data\n     */\n    function createListFromArray(data, seriesModel, ecModel) {\n        // If data is undefined\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        var coordSysName = seriesModel.get('coordinateSystem');\n        var creator = creators[coordSysName];\n        var registeredCoordSys = CoordinateSystem.get(coordSysName);\n        var completeDimOpt = {\n            encodeDef: seriesModel.get('encode'),\n            dimsDef: seriesModel.get('dimensions')\n        };\n\n        // FIXME\n        var axesInfo = creator && creator(data, seriesModel, ecModel, completeDimOpt);\n        var dimensions = axesInfo && axesInfo.dimensions;\n        if (!dimensions) {\n            // Get dimensions from registered coordinate system\n            dimensions = (registeredCoordSys && (\n                registeredCoordSys.getDimensionsInfo\n                    ? registeredCoordSys.getDimensionsInfo()\n                    : registeredCoordSys.dimensions.slice()\n            )) || ['x', 'y'];\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n        }\n\n        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n\n        var list = new List(dimensions, seriesModel);\n\n        var nameList = createNameList(axesInfo, data);\n\n        var categories = {};\n        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\n            ? function (itemOpt, dimName, dataIndex, dimIndex) {\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                // Use dataIndex as ordinal value in categoryAxis\n                return dimIndex === categoryIndex\n                    ? dataIndex\n                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n            }\n            : function (itemOpt, dimName, dataIndex, dimIndex) {\n                var value = getDataItemValue(itemOpt);\n                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n                if (categoryAxesModels && categoryAxesModels[dimName]) {\n                    // If given value is a category string\n                    if (typeof val === 'string') {\n                        // Lazy get categories\n                        categories[dimName] = categories[dimName]\n                            || categoryAxesModels[dimName].getCategories();\n                        val = zrUtil.indexOf(categories[dimName], val);\n                        if (val < 0 && !isNaN(val)) {\n                            // In case some one write '1', '2' istead of 1, 2\n                            val = +val;\n                        }\n                    }\n                }\n                return val;\n            };\n\n        list.hasItemOption = false;\n        list.initData(data, nameList, dimValueGetter);\n\n        return list;\n    }\n\n    function isStackable(axisType) {\n        return axisType !== 'category' && axisType !== 'time';\n    }\n\n    function getDimTypeByAxis(axisType) {\n        return axisType === 'category'\n            ? 'ordinal'\n            : axisType === 'time'\n            ? 'time'\n            : 'float';\n    }\n\n    /**\n     * Creaters for each coord system.\n     */\n    var creators = {\n\n        cartesian2d: function (data, seriesModel, ecModel, completeDimOpt) {\n\n            var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n                return ecModel.queryComponents({\n                    mainType: name,\n                    index: seriesModel.get(name + 'Index'),\n                    id: seriesModel.get(name + 'Id')\n                })[0];\n            });\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            if (__DEV__) {\n                if (!xAxisModel) {\n                    throw new Error('xAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('xAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n                if (!yAxisModel) {\n                    throw new Error('yAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('yAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'x',\n                    type: getDimTypeByAxis(xAxisType),\n                    stackable: isStackable(xAxisType)\n                },\n                {\n                    name: 'y',\n                    // If two category axes\n                    type: getDimTypeByAxis(yAxisType),\n                    stackable: isStackable(yAxisType)\n                }\n            ];\n\n            var isXAxisCateogry = xAxisType === 'category';\n            var isYAxisCategory = yAxisType === 'category';\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isXAxisCateogry) {\n                categoryAxesModels.x = xAxisModel;\n            }\n            if (isYAxisCategory) {\n                categoryAxesModels.y = yAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        singleAxis: function (data, seriesModel, ecModel, completeDimOpt) {\n\n            var singleAxisModel = ecModel.queryComponents({\n                mainType: 'singleAxis',\n                index: seriesModel.get('singleAxisIndex'),\n                id: seriesModel.get('singleAxisId')\n            })[0];\n\n            if (__DEV__) {\n                if (!singleAxisModel) {\n                    throw new Error('singleAxis should be specified.');\n                }\n            }\n\n            var singleAxisType = singleAxisModel.get('type');\n            var isCategory = singleAxisType === 'category';\n\n            var dimensions = [{\n                name: 'single',\n                type: getDimTypeByAxis(singleAxisType),\n                stackable: isStackable(singleAxisType)\n            }];\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isCategory) {\n                categoryAxesModels.single = singleAxisModel;\n            }\n\n            return {\n                dimensions: dimensions,\n                categoryIndex: isCategory ? 0 : -1,\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        polar: function (data, seriesModel, ecModel, completeDimOpt) {\n            var polarModel = ecModel.queryComponents({\n                mainType: 'polar',\n                index: seriesModel.get('polarIndex'),\n                id: seriesModel.get('polarId')\n            })[0];\n\n            var angleAxisModel = polarModel.findAxisModel('angleAxis');\n            var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n\n            if (__DEV__) {\n                if (!angleAxisModel) {\n                    throw new Error('angleAxis option not found');\n                }\n                if (!radiusAxisModel) {\n                    throw new Error('radiusAxis option not found');\n                }\n            }\n\n            var radiusAxisType = radiusAxisModel.get('type');\n            var angleAxisType = angleAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'radius',\n                    type: getDimTypeByAxis(radiusAxisType),\n                    stackable: isStackable(radiusAxisType)\n                },\n                {\n                    name: 'angle',\n                    type: getDimTypeByAxis(angleAxisType),\n                    stackable: isStackable(angleAxisType)\n                }\n            ];\n            var isAngleAxisCateogry = angleAxisType === 'category';\n            var isRadiusAxisCateogry = radiusAxisType === 'category';\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isRadiusAxisCateogry) {\n                categoryAxesModels.radius = radiusAxisModel;\n            }\n            if (isAngleAxisCateogry) {\n                categoryAxesModels.angle = angleAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        geo: function (data, seriesModel, ecModel, completeDimOpt) {\n            // TODO Region\n            // 多个散点图系列在同一个地区的时候\n            return {\n                dimensions: completeDimensions([\n                    {name: 'lng'},\n                    {name: 'lat'}\n                ], data, completeDimOpt)\n            };\n        }\n    };\n\n    function createNameList(result, data) {\n        var nameList = [];\n\n        var categoryDim = result && result.dimensions[result.categoryIndex];\n        var categoryAxisModel;\n        if (categoryDim) {\n            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n        }\n\n        if (categoryAxisModel) {\n            // FIXME Two category axis\n            var categories = categoryAxisModel.getCategories();\n            if (categories) {\n                var dataLen = data.length;\n                // Ordered data is given explicitly like\n                // [[3, 0.2], [1, 0.3], [2, 0.15]]\n                // or given scatter data,\n                // pick the category\n                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n                    nameList = [];\n                    for (var i = 0; i < dataLen; i++) {\n                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\n                    }\n                }\n                else {\n                    nameList = categories.slice(0);\n                }\n            }\n        }\n\n        return nameList;\n    }\n\n    module.exports = createListFromArray;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/createListFromArray.js\n// module id = 648\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../../util/format');\n    var graphic = require('../../util/graphic');\n    var Model = require('../../model/Model');\n    var numberUtil = require('../../util/number');\n    var remRadian = numberUtil.remRadian;\n    var isRadianAroundZero = numberUtil.isRadianAroundZero;\n    var vec2 = require('zrender/lib/core/vector');\n    var matrix = require('zrender/lib/core/matrix');\n    var v2ApplyTransform = vec2.applyTransform;\n    var retrieve = zrUtil.retrieve;\n\n    var PI = Math.PI;\n\n    function makeAxisEventDataBase(axisModel) {\n        var eventData = {\n            componentType: axisModel.mainType\n        };\n        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n        return eventData;\n    }\n\n    /**\n     * A final axis is translated and rotated from a \"standard axis\".\n     * So opt.position and opt.rotation is required.\n     *\n     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n     * for example: (0, 0) ------------> (0, 50)\n     *\n     * nameDirection or tickDirection or labelDirection is 1 means tick\n     * or label is below the standard axis, whereas is -1 means above\n     * the standard axis. labelOffset means offset between label and axis,\n     * which is useful when 'onZero', where axisLabel is in the grid and\n     * label in outside grid.\n     *\n     * Tips: like always,\n     * positive rotation represents anticlockwise, and negative rotation\n     * represents clockwise.\n     * The direction of position coordinate is the same as the direction\n     * of screen coordinate.\n     *\n     * Do not need to consider axis 'inverse', which is auto processed by\n     * axis extent.\n     *\n     * @param {module:zrender/container/Group} group\n     * @param {Object} axisModel\n     * @param {Object} opt Standard axis parameters.\n     * @param {Array.<number>} opt.position [x, y]\n     * @param {number} opt.rotation by radian\n     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle'.\n     * @param {number} [opt.tickDirection=1] 1 or -1\n     * @param {number} [opt.labelDirection=1] 1 or -1\n     * @param {number} [opt.labelOffset=0] Usefull when onZero.\n     * @param {string} [opt.axisLabelShow] default get from axisModel.\n     * @param {string} [opt.axisName] default get from axisModel.\n     * @param {number} [opt.axisNameAvailableWidth]\n     * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n     * @param {number} [opt.labelInterval] Default label interval when label\n     *                                     interval from model is null or 'auto'.\n     * @param {number} [opt.strokeContainThreshold] Default label interval when label\n     * @param {number} [opt.nameTruncateMaxWidth]\n     */\n    var AxisBuilder = function (axisModel, opt) {\n\n        /**\n         * @readOnly\n         */\n        this.opt = opt;\n\n        /**\n         * @readOnly\n         */\n        this.axisModel = axisModel;\n\n        // Default value\n        zrUtil.defaults(\n            opt,\n            {\n                labelOffset: 0,\n                nameDirection: 1,\n                tickDirection: 1,\n                labelDirection: 1,\n                silent: true\n            }\n        );\n\n        /**\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        // FIXME Not use a seperate text group?\n        var dumbGroup = new graphic.Group({\n            position: opt.position.slice(),\n            rotation: opt.rotation\n        });\n\n        // this.group.add(dumbGroup);\n        // this._dumbGroup = dumbGroup;\n\n        dumbGroup.updateTransform();\n        this._transform = dumbGroup.transform;\n\n        this._dumbGroup = dumbGroup;\n    };\n\n    AxisBuilder.prototype = {\n\n        constructor: AxisBuilder,\n\n        hasBuilder: function (name) {\n            return !!builders[name];\n        },\n\n        add: function (name) {\n            builders[name].call(this);\n        },\n\n        getGroup: function () {\n            return this.group;\n        }\n\n    };\n\n    var builders = {\n\n        /**\n         * @private\n         */\n        axisLine: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisLine.show')) {\n                return;\n            }\n\n            var extent = this.axisModel.axis.getExtent();\n\n            var matrix = this._transform;\n            var pt1 = [extent[0], 0];\n            var pt2 = [extent[1], 0];\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n\n            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                // Id for animation\n                anid: 'line',\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.extend(\n                    {lineCap: 'round'},\n                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\n                ),\n                strokeContainThreshold: opt.strokeContainThreshold || 5,\n                silent: true,\n                z2: 1\n            })));\n        },\n\n        /**\n         * @private\n         */\n        axisTick: function () {\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n\n            if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n                return;\n            }\n\n            var tickModel = axisModel.getModel('axisTick');\n            var opt = this.opt;\n\n            var lineStyleModel = tickModel.getModel('lineStyle');\n            var tickLen = tickModel.get('length');\n\n            var tickInterval = getInterval(tickModel, opt.labelInterval);\n            var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\n            var ticks = axis.scale.getTicks();\n\n            var pt1 = [];\n            var pt2 = [];\n            var matrix = this._transform;\n\n            for (var i = 0; i < ticksCoords.length; i++) {\n                // Only ordinal scale support tick interval\n                if (ifIgnoreOnTick(axis, i, tickInterval)) {\n                     continue;\n                }\n\n                var tickCoord = ticksCoords[i];\n\n                pt1[0] = tickCoord;\n                pt1[1] = 0;\n                pt2[0] = tickCoord;\n                pt2[1] = opt.tickDirection * tickLen;\n\n                if (matrix) {\n                    v2ApplyTransform(pt1, pt1, matrix);\n                    v2ApplyTransform(pt2, pt2, matrix);\n                }\n                // Tick line, Not use group transform to have better line draw\n                this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                    // Id for animation\n                    anid: 'tick_' + ticks[i],\n\n                    shape: {\n                        x1: pt1[0],\n                        y1: pt1[1],\n                        x2: pt2[0],\n                        y2: pt2[1]\n                    },\n                    style: zrUtil.defaults(\n                        lineStyleModel.getLineStyle(),\n                        {\n                            stroke: axisModel.get('axisLine.lineStyle.color')\n                        }\n                    ),\n                    z2: 2,\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @private\n         */\n        axisLabel: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n            var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n            if (!show || axis.scale.isBlank()) {\n                return;\n            }\n\n            var labelModel = axisModel.getModel('axisLabel');\n            var labelMargin = labelModel.get('margin');\n            var ticks = axis.scale.getTicks();\n            var labels = axisModel.getFormattedLabels();\n\n            // Special label rotate.\n            var labelRotation = (\n                retrieve(opt.labelRotate, labelModel.get('rotate')) || 0\n            ) * PI / 180;\n\n            var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n            var categoryData = axisModel.get('data');\n\n            var textEls = [];\n            var silent = isSilent(axisModel);\n            var triggerEvent = axisModel.get('triggerEvent');\n\n            zrUtil.each(ticks, function (tickVal, index) {\n                if (ifIgnoreOnTick(axis, index, opt.labelInterval)) {\n                     return;\n                }\n\n                var itemLabelModel = labelModel;\n                if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n                    itemLabelModel = new Model(\n                        categoryData[tickVal].textStyle, labelModel, axisModel.ecModel\n                    );\n                }\n\n                var textColor = itemLabelModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color');\n\n                var tickCoord = axis.dataToCoord(tickVal);\n                var pos = [\n                    tickCoord,\n                    opt.labelOffset + opt.labelDirection * labelMargin\n                ];\n                var labelStr = axis.scale.getLabel(tickVal);\n\n                var textEl = new graphic.Text({\n                    // Id for animation\n                    anid: 'label_' + tickVal,\n                    position: pos,\n                    rotation: labelLayout.rotation,\n                    silent: silent,\n                    z2: 10\n                });\n\n                graphic.setTextStyle(textEl.style, itemLabelModel, {\n                    text: labels[index],\n                    textAlign: itemLabelModel.getShallow('align', true)\n                        || labelLayout.textAlign,\n                    textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true)\n                        || itemLabelModel.getShallow('baseline', true)\n                        || labelLayout.textVerticalAlign,\n                    textFill: typeof textColor === 'function'\n                        ? textColor(\n                            // (1) In category axis with data zoom, tick is not the original\n                            // index of axis.data. So tick should not be exposed to user\n                            // in category axis.\n                            // (2) Compatible with previous version, which always returns labelStr.\n                            // But in interval scale labelStr is like '223,445', which maked\n                            // user repalce ','. So we modify it to return original val but remain\n                            // it as 'string' to avoid error in replacing.\n                            axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal,\n                            index\n                        )\n                        : textColor\n                });\n\n                // Pack data for mouse event\n                if (triggerEvent) {\n                    textEl.eventData = makeAxisEventDataBase(axisModel);\n                    textEl.eventData.targetType = 'axisLabel';\n                    textEl.eventData.value = labelStr;\n                }\n\n                // FIXME\n                this._dumbGroup.add(textEl);\n                textEl.updateTransform();\n\n                textEls.push(textEl);\n                this.group.add(textEl);\n\n                textEl.decomposeTransform();\n\n            }, this);\n\n            fixMinMaxLabelShow(axisModel, textEls);\n        },\n\n        /**\n         * @private\n         */\n        axisName: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var name = retrieve(opt.axisName, axisModel.get('name'));\n\n            if (!name) {\n                return;\n            }\n\n            var nameLocation = axisModel.get('nameLocation');\n            var nameDirection = opt.nameDirection;\n            var textStyleModel = axisModel.getModel('nameTextStyle');\n            var gap = axisModel.get('nameGap') || 0;\n\n            var extent = this.axisModel.axis.getExtent();\n            var gapSignal = extent[0] > extent[1] ? -1 : 1;\n            var pos = [\n                nameLocation === 'start'\n                    ? extent[0] - gapSignal * gap\n                    : nameLocation === 'end'\n                    ? extent[1] + gapSignal * gap\n                    : (extent[0] + extent[1]) / 2, // 'middle'\n                // Reuse labelOffset.\n                nameLocation === 'middle' ? opt.labelOffset + nameDirection * gap : 0\n            ];\n\n            var labelLayout;\n\n            var nameRotation = axisModel.get('nameRotate');\n            if (nameRotation != null) {\n                nameRotation = nameRotation * PI / 180; // To radian.\n            }\n\n            var axisNameAvailableWidth;\n\n            if (nameLocation === 'middle') {\n                labelLayout = innerTextLayout(\n                    opt.rotation,\n                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n                    nameDirection\n                );\n            }\n            else {\n                labelLayout = endTextLayout(\n                    opt, nameLocation, nameRotation || 0, extent\n                );\n\n                axisNameAvailableWidth = opt.axisNameAvailableWidth;\n                if (axisNameAvailableWidth != null) {\n                    axisNameAvailableWidth = Math.abs(\n                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\n                    );\n                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n                }\n            }\n\n            var textFont = textStyleModel.getFont();\n\n            var truncateOpt = axisModel.get('nameTruncate', true) || {};\n            var ellipsis = truncateOpt.ellipsis;\n            var maxWidth = retrieve(\n                opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth\n            );\n            // FIXME\n            // truncate rich text? (consider performance)\n            var truncatedText = (ellipsis != null && maxWidth != null)\n                ? formatUtil.truncateText(\n                    name, maxWidth, textFont, ellipsis,\n                    {minChar: 2, placeholder: truncateOpt.placeholder}\n                )\n                : name;\n\n            var tooltipOpt = axisModel.get('tooltip', true);\n\n            var mainType = axisModel.mainType;\n            var formatterParams = {\n                componentType: mainType,\n                name: name,\n                $vars: ['name']\n            };\n            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n\n            var textEl = new graphic.Text({\n                // Id for animation\n                anid: 'name',\n\n                __fullText: name,\n                __truncatedText: truncatedText,\n\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: isSilent(axisModel),\n                z2: 1,\n                tooltip: (tooltipOpt && tooltipOpt.show)\n                    ? zrUtil.extend({\n                        content: name,\n                        formatter: function () {\n                            return name;\n                        },\n                        formatterParams: formatterParams\n                    }, tooltipOpt)\n                    : null\n            });\n\n            graphic.setTextStyle(textEl.style, textStyleModel, {\n                text: truncatedText,\n                textFont: textFont,\n                textFill: textStyleModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color'),\n                textAlign: labelLayout.textAlign,\n                textVerticalAlign: labelLayout.textVerticalAlign\n            });\n\n            if (axisModel.get('triggerEvent')) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisName';\n                textEl.eventData.name = name;\n            }\n\n            // FIXME\n            this._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            this.group.add(textEl);\n\n            textEl.decomposeTransform();\n        }\n\n    };\n\n    /**\n     * @public\n     * @static\n     * @param {Object} opt\n     * @param {number} axisRotation in radian\n     * @param {number} textRotation in radian\n     * @param {number} direction\n     * @return {Object} {\n     *  rotation, // according to axis\n     *  textAlign,\n     *  textVerticalAlign\n     * }\n     */\n    var innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n        var rotationDiff = remRadian(textRotation - axisRotation);\n        var textAlign;\n        var textVerticalAlign;\n\n        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n\n            if (rotationDiff > 0 && rotationDiff < PI) {\n                textAlign = direction > 0 ? 'right' : 'left';\n            }\n            else {\n                textAlign = direction > 0 ? 'left' : 'right';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    };\n\n    function endTextLayout(opt, textPosition, textRotate, extent) {\n        var rotationDiff = remRadian(textRotate - opt.rotation);\n        var textAlign;\n        var textVerticalAlign;\n        var inverse = extent[0] > extent[1];\n        var onLeft = (textPosition === 'start' && !inverse)\n            || (textPosition !== 'start' && inverse);\n\n        if (isRadianAroundZero(rotationDiff - PI / 2)) {\n            textVerticalAlign = onLeft ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n            textVerticalAlign = onLeft ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n                textAlign = onLeft ? 'left' : 'right';\n            }\n            else {\n                textAlign = onLeft ? 'right' : 'left';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    function isSilent(axisModel) {\n        var tooltipOpt = axisModel.get('tooltip');\n        return axisModel.get('silent')\n            // Consider mouse cursor, add these restrictions.\n            || !(\n                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\n            );\n    }\n\n    function fixMinMaxLabelShow(axisModel, textEls) {\n        // If min or max are user set, we need to check\n        // If the tick on min(max) are overlap on their neighbour tick\n        // If they are overlapped, we need to hide the min(max) tick label\n        var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n        var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n        var firstLabel = textEls[0];\n        var nextLabel = textEls[1];\n        var lastLabel = textEls[textEls.length - 1];\n        var prevLabel = textEls[textEls.length - 2];\n\n        if (showMinLabel === false) {\n            firstLabel.ignore = true;\n        }\n        else if (axisModel.getMin() != null && isTwoLabelOverlapped(firstLabel, nextLabel)) {\n            showMinLabel ? (nextLabel.ignore = true) : (firstLabel.ignore = true);\n        }\n\n        if (showMaxLabel === false) {\n            lastLabel.ignore = true;\n        }\n        else if (axisModel.getMax() != null && isTwoLabelOverlapped(prevLabel, lastLabel)) {\n            showMaxLabel ? (prevLabel.ignore = true) : (lastLabel.ignore = true);\n        }\n    }\n\n    function isTwoLabelOverlapped(current, next, labelLayout) {\n        // current and next has the same rotation.\n        var firstRect = current && current.getBoundingRect().clone();\n        var nextRect = next && next.getBoundingRect().clone();\n\n        if (!firstRect || !nextRect) {\n            return;\n        }\n\n        // When checking intersect of two rotated labels, we use mRotationBack\n        // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n        var mRotationBack = matrix.identity([]);\n        matrix.rotate(mRotationBack, mRotationBack, -current.rotation);\n\n        firstRect.applyTransform(matrix.mul([], mRotationBack, current.getLocalTransform()));\n        nextRect.applyTransform(matrix.mul([], mRotationBack, next.getLocalTransform()));\n\n        return firstRect.intersect(nextRect);\n    }\n\n\n    /**\n     * @static\n     */\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval) {\n        var rawTick;\n        var scale = axis.scale;\n        return scale.type === 'ordinal'\n            && (\n                typeof interval === 'function'\n                    ? (\n                        rawTick = scale.getTicks()[i],\n                        !interval(rawTick, scale.getLabel(rawTick))\n                    )\n                    : i % (interval + 1)\n            );\n    };\n\n    /**\n     * @static\n     */\n    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n        var interval = model.get('interval');\n        if (interval == null || interval == 'auto') {\n            interval = labelInterval;\n        }\n        return interval;\n    };\n\n    module.exports = AxisBuilder;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/AxisBuilder.js\n// module id = 649\n// module chunks = 0 1 2","\n\n    var numberUtil = require('../util/number');\n    var linearMap = numberUtil.linearMap;\n    var zrUtil = require('zrender/lib/core/util');\n    var axisHelper = require('./axisHelper');\n\n    function fixExtentWithBands(extent, nTick) {\n        var size = extent[1] - extent[0];\n        var len = nTick;\n        var margin = size / len / 2;\n        extent[0] += margin;\n        extent[1] -= margin;\n    }\n\n    var normalizedExtent = [0, 1];\n    /**\n     * @name module:echarts/coord/CartesianAxis\n     * @constructor\n     */\n    var Axis = function (dim, scale, extent) {\n\n        /**\n         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n         * @type {string}\n         */\n        this.dim = dim;\n\n        /**\n         * Axis scale\n         * @type {module:echarts/coord/scale/*}\n         */\n        this.scale = scale;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        this._extent = extent || [0, 0];\n\n        /**\n         * @type {boolean}\n         */\n        this.inverse = false;\n\n        /**\n         * Usually true when axis has a ordinal scale\n         * @type {boolean}\n         */\n        this.onBand = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._labelInterval;\n    };\n\n    Axis.prototype = {\n\n        constructor: Axis,\n\n        /**\n         * If axis extent contain given coord\n         * @param {number} coord\n         * @return {boolean}\n         */\n        contain: function (coord) {\n            var extent = this._extent;\n            var min = Math.min(extent[0], extent[1]);\n            var max = Math.max(extent[0], extent[1]);\n            return coord >= min && coord <= max;\n        },\n\n        /**\n         * If axis extent contain given data\n         * @param {number} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.contain(this.dataToCoord(data));\n        },\n\n        /**\n         * Get coord extent.\n         * @return {Array.<number>}\n         */\n        getExtent: function () {\n            return this._extent.slice();\n        },\n\n        /**\n         * Get precision used for formatting\n         * @param {Array.<number>} [dataExtent]\n         * @return {number}\n         */\n        getPixelPrecision: function (dataExtent) {\n            return numberUtil.getPixelPrecision(\n                dataExtent || this.scale.getExtent(),\n                this._extent\n            );\n        },\n\n        /**\n         * Set coord extent\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var extent = this._extent;\n            extent[0] = start;\n            extent[1] = end;\n        },\n\n        /**\n         * Convert data to coord. Data is the rank if it has a ordinal scale\n         * @param {number} data\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        dataToCoord: function (data, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n            data = scale.normalize(data);\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            return linearMap(data, normalizedExtent, extent, clamp);\n        },\n\n        /**\n         * Convert coord to data. Data is the rank if it has a ordinal scale\n         * @param {number} coord\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        coordToData: function (coord, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            var t = linearMap(coord, extent, normalizedExtent, clamp);\n\n            return this.scale.scale(t);\n        },\n\n        /**\n         * Convert pixel point to data in axis\n         * @param {Array.<number>} point\n         * @param  {boolean} clamp\n         * @return {number} data\n         */\n        pointToData: function (point, clamp) {\n            // Should be implemented in derived class if necessary.\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicksCoords: function (alignWithLabel) {\n            if (this.onBand && !alignWithLabel) {\n                var bands = this.getBands();\n                var coords = [];\n                for (var i = 0; i < bands.length; i++) {\n                    coords.push(bands[i][0]);\n                }\n                if (bands[i - 1]) {\n                    coords.push(bands[i - 1][1]);\n                }\n                return coords;\n            }\n            else {\n                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n            }\n        },\n\n        /**\n         * Coords of labels are on the ticks or on the middle of bands\n         * @return {Array.<number>}\n         */\n        getLabelsCoords: function () {\n            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n        },\n\n        /**\n         * Get bands.\n         *\n         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n         * |---1---|---2---|---3---|---4---|.\n         *\n         * @return {Array}\n         */\n         // FIXME Situation when labels is on ticks\n        getBands: function () {\n            var extent = this.getExtent();\n            var bands = [];\n            var len = this.scale.count();\n            var start = extent[0];\n            var end = extent[1];\n            var span = end - start;\n\n            for (var i = 0; i < len; i++) {\n                bands.push([\n                    span * i / len + start,\n                    span * (i + 1) / len + start\n                ]);\n            }\n            return bands;\n        },\n\n        /**\n         * Get width of band\n         * @return {number}\n         */\n        getBandWidth: function () {\n            var axisExtent = this._extent;\n            var dataExtent = this.scale.getExtent();\n\n            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\n            // Fix #2728, avoid NaN when only one data.\n            len === 0 && (len = 1);\n\n            var size = Math.abs(axisExtent[1] - axisExtent[0]);\n\n            return Math.abs(size) / len;\n        },\n\n        /**\n         * Get interval of the axis label.\n         * @return {number}\n         */\n        getLabelInterval: function () {\n            var labelInterval = this._labelInterval;\n            if (!labelInterval) {\n                var axisModel = this.model;\n                var labelModel = axisModel.getModel('axisLabel');\n                var interval = labelModel.get('interval');\n                if (!(this.type === 'category' && interval === 'auto')) {\n                    labelInterval = interval === 'auto' ? 0 : interval;\n                }\n                else if (this.isHorizontal){\n                    labelInterval = axisHelper.getAxisLabelInterval(\n                        zrUtil.map(this.scale.getTicks(), this.dataToCoord, this),\n                        axisModel.getFormattedLabels(),\n                        labelModel.getFont(),\n                        this.isHorizontal()\n                    );\n                }\n                this._labelInterval = labelInterval;\n            }\n            return labelInterval;\n        }\n\n    };\n\n    module.exports = Axis;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/Axis.js\n// module id = 650\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var axisHelper = require('./axisHelper');\n\n    function getName(obj) {\n        if (zrUtil.isObject(obj) && obj.value != null) {\n            return obj.value;\n        }\n        else {\n            return obj + '';\n        }\n    }\n\n    module.exports = {\n\n        /**\n         * Format labels\n         * @return {Array.<string>}\n         */\n        getFormattedLabels: function () {\n            return axisHelper.getFormattedLabels(\n                this.axis,\n                this.get('axisLabel.formatter')\n            );\n        },\n\n        /**\n         * Get categories\n         */\n        getCategories: function () {\n            return this.get('type') === 'category'\n                && zrUtil.map(this.get('data'), getName);\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n         */\n        getMin: function (origin) {\n            var option = this.option;\n            var min = (!origin && option.rangeStart != null)\n                ? option.rangeStart : option.min;\n\n            if (this.axis && min != null && min !== 'dataMin' && !zrUtil.eqNaN(min)) {\n                min = this.axis.scale.parse(min);\n            }\n            return min;\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n         */\n        getMax: function (origin) {\n            var option = this.option;\n            var max = (!origin && option.rangeEnd != null)\n                ? option.rangeEnd : option.max;\n\n            if (this.axis && max != null && max !== 'dataMax' && !zrUtil.eqNaN(max)) {\n                max = this.axis.scale.parse(max);\n            }\n            return max;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        getNeedCrossZero: function () {\n            var option = this.option;\n            return (option.rangeStart != null || option.rangeEnd != null)\n                ? false : !option.scale;\n        },\n\n        /**\n         * Should be implemented by each axis model if necessary.\n         * @return {module:echarts/model/Component} coordinate system model\n         */\n        getCoordSysModel: zrUtil.noop,\n\n        /**\n         * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n         * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n         */\n        setRange: function (rangeStart, rangeEnd) {\n            this.option.rangeStart = rangeStart;\n            this.option.rangeEnd = rangeEnd;\n        },\n\n        /**\n         * Reset range\n         */\n        resetRange: function () {\n            // rangeStart and rangeEnd is readonly.\n            this.option.rangeStart = this.option.rangeEnd = null;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisModelCommonMixin.js\n// module id = 651\n// module chunks = 0 1 2","/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var symbolUtil = require('../../util/symbol');\n    var graphic = require('../../util/graphic');\n    var numberUtil = require('../../util/number');\n    var labelHelper = require('./labelHelper');\n\n    function getSymbolSize(data, idx) {\n        var symbolSize = data.getItemVisual(idx, 'symbolSize');\n        return symbolSize instanceof Array\n            ? symbolSize.slice()\n            : [+symbolSize, +symbolSize];\n    }\n\n    function getScale(symbolSize) {\n        return [symbolSize[0] / 2, symbolSize[1] / 2];\n    }\n\n    /**\n     * @constructor\n     * @alias {module:echarts/chart/helper/Symbol}\n     * @param {module:echarts/data/List} data\n     * @param {number} idx\n     * @extends {module:zrender/graphic/Group}\n     */\n    function Symbol(data, idx, seriesScope) {\n        graphic.Group.call(this);\n\n        this.updateData(data, idx, seriesScope);\n    }\n\n    var symbolProto = Symbol.prototype;\n\n    function driftSymbol(dx, dy) {\n        this.parent.drift(dx, dy);\n    }\n\n    symbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n        // Remove paths created before\n        this.removeAll();\n\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // var symbolPath = symbolUtil.createSymbol(\n        //     symbolType, -0.5, -0.5, 1, 1, color\n        // );\n        // If width/height are set too small (e.g., set to 1) on ios10\n        // and macOS Sierra, a circle stroke become a rect, no matter what\n        // the scale is set. So we set width/height as 2. See #4150.\n        var symbolPath = symbolUtil.createSymbol(\n            symbolType, -1, -1, 2, 2, color\n        );\n\n        symbolPath.attr({\n            z2: 100,\n            culling: true,\n            scale: [0, 0]\n        });\n        // Rewrite drift method\n        symbolPath.drift = driftSymbol;\n\n        graphic.initProps(symbolPath, {\n            scale: getScale(symbolSize)\n        }, seriesModel, idx);\n        this._symbolType = symbolType;\n\n        this.add(symbolPath);\n    };\n\n    /**\n     * Stop animation\n     * @param {boolean} toLastFrame\n     */\n    symbolProto.stopSymbolAnimation = function (toLastFrame) {\n        this.childAt(0).stopAnimation(toLastFrame);\n    };\n\n    /**\n     * Get symbol path element\n     */\n    symbolProto.getSymbolPath = function () {\n        return this.childAt(0);\n    };\n\n    /**\n     * Get scale(aka, current symbol size).\n     * Including the change caused by animation\n     */\n    symbolProto.getScale = function () {\n        return this.childAt(0).scale;\n    };\n\n    /**\n     * Highlight symbol\n     */\n    symbolProto.highlight = function () {\n        this.childAt(0).trigger('emphasis');\n    };\n\n    /**\n     * Downplay symbol\n     */\n    symbolProto.downplay = function () {\n        this.childAt(0).trigger('normal');\n    };\n\n    /**\n     * @param {number} zlevel\n     * @param {number} z\n     */\n    symbolProto.setZ = function (zlevel, z) {\n        var symbolPath = this.childAt(0);\n        symbolPath.zlevel = zlevel;\n        symbolPath.z = z;\n    };\n\n    symbolProto.setDraggable = function (draggable) {\n        var symbolPath = this.childAt(0);\n        symbolPath.draggable = draggable;\n        symbolPath.cursor = draggable ? 'move' : 'pointer';\n    };\n\n    /**\n     * Update symbol properties\n     * @param  {module:echarts/data/List} data\n     * @param  {number} idx\n     */\n    symbolProto.updateData = function (data, idx, seriesScope) {\n        this.silent = false;\n\n        var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n        var seriesModel = data.hostModel;\n        var symbolSize = getSymbolSize(data, idx);\n\n        if (symbolType !== this._symbolType) {\n            this._createSymbol(symbolType, data, idx, symbolSize);\n        }\n        else {\n            var symbolPath = this.childAt(0);\n            symbolPath.silent = false;\n            graphic.updateProps(symbolPath, {\n                scale: getScale(symbolSize)\n            }, seriesModel, idx);\n        }\n        this._updateCommon(data, idx, symbolSize, seriesScope);\n        this._seriesModel = seriesModel;\n    };\n\n    // Update common properties\n    var normalStyleAccessPath = ['itemStyle', 'normal'];\n    var emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n    var normalLabelAccessPath = ['label', 'normal'];\n    var emphasisLabelAccessPath = ['label', 'emphasis'];\n\n    symbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n        var symbolPath = this.childAt(0);\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // Reset style\n        if (symbolPath.type !== 'image') {\n            symbolPath.useStyle({\n                strokeNoScale: true\n            });\n        }\n\n        seriesScope = seriesScope || null;\n\n        var itemStyle = seriesScope && seriesScope.itemStyle;\n        var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n        var symbolRotate = seriesScope && seriesScope.symbolRotate;\n        var symbolOffset = seriesScope && seriesScope.symbolOffset;\n        var labelModel = seriesScope && seriesScope.labelModel;\n        var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n        var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n        var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n        if (!seriesScope || data.hasItemOption) {\n            var itemModel = data.getItemModel(idx);\n\n            // Color must be excluded.\n            // Because symbol provide setColor individually to set fill and stroke\n            itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n            hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n\n            symbolRotate = itemModel.getShallow('symbolRotate');\n            symbolOffset = itemModel.getShallow('symbolOffset');\n\n            labelModel = itemModel.getModel(normalLabelAccessPath);\n            hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n            hoverAnimation = itemModel.getShallow('hoverAnimation');\n            cursorStyle = itemModel.getShallow('cursor');\n        }\n        else {\n            hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n        }\n\n        var elStyle = symbolPath.style;\n\n        symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n        if (symbolOffset) {\n            symbolPath.attr('position', [\n                numberUtil.parsePercent(symbolOffset[0], symbolSize[0]),\n                numberUtil.parsePercent(symbolOffset[1], symbolSize[1])\n            ]);\n        }\n\n        cursorStyle && symbolPath.attr('cursor', cursorStyle);\n\n        // PENDING setColor before setStyle!!!\n        symbolPath.setColor(color);\n\n        symbolPath.setStyle(itemStyle);\n\n        var opacity = data.getItemVisual(idx, 'opacity');\n        if (opacity != null) {\n            elStyle.opacity = opacity;\n        }\n\n        var valueDim = labelHelper.findLabelValueDim(data);\n\n        if (valueDim != null) {\n            graphic.setText(elStyle, labelModel, color);\n            var normalText = seriesModel.getFormattedLabel(idx, 'normal');\n            var value = data.get(valueDim, idx);\n            elStyle.text = labelModel.getShallow('show')\n                ? zrUtil.retrieve2(\n                    normalText,\n                    value\n                )\n                : null;\n\n            graphic.setText(hoverItemStyle, hoverLabelModel, false);\n            hoverItemStyle.text = hoverLabelModel.getShallow('show')\n                ? zrUtil.retrieve3(\n                    seriesModel.getFormattedLabel(idx, 'emphasis'),\n                    normalText,\n                    value\n                )\n                : null;\n        }\n\n        symbolPath.off('mouseover')\n            .off('mouseout')\n            .off('emphasis')\n            .off('normal');\n\n        symbolPath.hoverStyle = hoverItemStyle;\n\n        graphic.setHoverStyle(symbolPath);\n\n        var scale = getScale(symbolSize);\n\n        if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n            var onEmphasis = function() {\n                var ratio = scale[1] / scale[0];\n                this.animateTo({\n                    scale: [\n                        Math.max(scale[0] * 1.1, scale[0] + 3),\n                        Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)\n                    ]\n                }, 400, 'elasticOut');\n            };\n            var onNormal = function() {\n                this.animateTo({\n                    scale: scale\n                }, 400, 'elasticOut');\n            };\n            symbolPath.on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n    };\n\n    symbolProto.fadeOut = function (cb) {\n        var symbolPath = this.childAt(0);\n        // Avoid mistaken hover when fading out\n        this.silent = symbolPath.silent = true;\n        // Not show text when animating\n        symbolPath.style.text = null;\n        graphic.updateProps(symbolPath, {\n            scale: [0, 0]\n        }, this._seriesModel, this.dataIndex, cb);\n    };\n\n    zrUtil.inherits(Symbol, graphic.Group);\n\n    module.exports = Symbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/Symbol.js\n// module id = 657\n// module chunks = 0 1 2","\n\n    var axisPointerModelHelper = require('../axisPointer/modelHelper');\n\n    /**\n     * Base class of AxisView.\n     */\n    var AxisView = require('../../echarts').extendComponentView({\n\n        type: 'axis',\n\n        /**\n         * @private\n         */\n        _axisPointer: null,\n\n        /**\n         * @protected\n         * @type {string}\n         */\n        axisPointerClass: null,\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n            // FIXME\n            // This process should proformed after coordinate systems updated\n            // (axis scale updated), and should be performed each time update.\n            // So put it here temporarily, although it is not appropriate to\n            // put a model-writing procedure in `view`.\n            this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n\n            AxisView.superApply(this, 'render', arguments);\n\n            updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n        },\n\n        /**\n         * Action handler.\n         * @public\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/model/Global} ecModel\n         * @param {module:echarts/ExtensionAPI} api\n         * @param {Object} payload\n         */\n        updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n            updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            var axisPointer = this._axisPointer;\n            axisPointer && axisPointer.remove(api);\n            AxisView.superApply(this, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            disposeAxisPointer(this, api);\n            AxisView.superApply(this, 'dispose', arguments);\n        }\n\n    });\n\n    function updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n        var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n        if (!Clazz) {\n            return;\n        }\n        var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n        axisPointerModel\n            ? (axisView._axisPointer || (axisView._axisPointer = new Clazz()))\n                .render(axisModel, axisPointerModel, api, forceRender)\n            : disposeAxisPointer(axisView, api);\n    }\n\n    function disposeAxisPointer(axisView, ecModel, api) {\n        var axisPointer = axisView._axisPointer;\n        axisPointer && axisPointer.dispose(ecModel, api);\n        axisView._axisPointer = null;\n    }\n\n    var axisPointerClazz = [];\n\n    AxisView.registerAxisPointerClass = function (type, clazz) {\n        if (__DEV__) {\n            if (axisPointerClazz[type]) {\n                throw new Error('axisPointer ' + type + ' exists');\n            }\n        }\n        axisPointerClazz[type] = clazz;\n    };\n\n    AxisView.getAxisPointerClass = function (type) {\n        return type && axisPointerClazz[type];\n    };\n\n    module.exports = AxisView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/AxisView.js\n// module id = 658\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var helper = {};\n\n    /**\n     * @param {Object} opt {labelInside}\n     * @return {Object} {\n     *  position, rotation, labelDirection, labelOffset,\n     *  tickDirection, labelRotate, labelInterval, z2\n     * }\n     */\n    helper.layout = function (gridModel, axisModel, opt) {\n        opt = opt || {};\n        var grid = gridModel.coordinateSystem;\n        var axis = axisModel.axis;\n        var layout = {};\n\n        var rawAxisPosition = axis.position;\n        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n        var axisDim = axis.dim;\n\n        var rect = grid.getRect();\n        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n        var idx = {left: 0, right: 1, top: 0, bottom: 1, onZero: 2};\n        var axisOffset = axisModel.get('offset') || 0;\n\n        var posBound = axisDim === 'x'\n            ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset]\n            : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n        if (axis.onZero) {\n            var otherAxis = grid.getAxis(axisDim === 'x' ? 'y' : 'x', axis.onZeroAxisIndex);\n            var onZeroCoord = otherAxis.toGlobalCoord(otherAxis.dataToCoord(0));\n            posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n        }\n\n        // Axis position\n        layout.position = [\n            axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0],\n            axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]\n        ];\n\n        // Axis rotation\n        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\n\n        // Tick and label direction, x y is axisDim\n        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\n\n        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n        layout.labelOffset = axis.onZero ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n        if (axisModel.get('axisTick.inside')) {\n            layout.tickDirection = -layout.tickDirection;\n        }\n        if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n            layout.labelDirection = -layout.labelDirection;\n        }\n\n        // Special label rotation\n        var labelRotate = axisModel.get('axisLabel.rotate');\n        layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate;\n\n        // label interval when auto mode.\n        layout.labelInterval = axis.getLabelInterval();\n\n        // Over splitLine and splitArea\n        layout.z2 = 1;\n\n        return layout;\n    };\n\n    module.exports = helper;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/cartesianAxisHelper.js\n// module id = 659\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n\n    /**\n     * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n     * @param {module:echarts/model/Global} ecModel\n     * @return {Object} {point: [x, y], el: ...} point Will not be null.\n     */\n    module.exports = function (finder, ecModel) {\n        var point = [];\n        var seriesIndex = finder.seriesIndex;\n        var seriesModel;\n        if (seriesIndex == null || !(\n            seriesModel = ecModel.getSeriesByIndex(seriesIndex)\n        )) {\n            return {point: []};\n        }\n\n        var data = seriesModel.getData();\n        var dataIndex = modelUtil.queryDataIndex(data, finder);\n        if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n            return {point: []};\n        }\n\n        var el = data.getItemGraphicEl(dataIndex);\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (seriesModel.getTooltipPosition) {\n            point = seriesModel.getTooltipPosition(dataIndex) || [];\n        }\n        else if (coordSys && coordSys.dataToPoint) {\n            point = coordSys.dataToPoint(\n                data.getValues(\n                    zrUtil.map(coordSys.dimensions, function (dim) {\n                        return seriesModel.coordDimToDataDim(dim)[0];\n                    }), dataIndex, true\n                )\n            ) || [];\n        }\n        else if (el) {\n            // Use graphic bounding rect\n            var rect = el.getBoundingRect().clone();\n            rect.applyTransform(el.transform);\n            point = [\n                rect.x + rect.width / 2,\n                rect.y + rect.height / 2\n            ];\n        }\n\n        return {point: point, el: el};\n    };\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/findPointFromSeries.js\n// module id = 660\n// module chunks = 0 1 2","\n\n    var env = require('zrender/lib/core/env');\n    var zrUtil = require('zrender/lib/core/util');\n    var get = require('../../util/model').makeGetter();\n\n    var each = zrUtil.each;\n\n    var globalListener = {};\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Function} handler\n     *      param: {string} currTrigger\n     *      param: {Array.<number>} point\n     */\n    globalListener.register = function (key, api, handler) {\n        if (env.node) {\n            return;\n        }\n\n        var zr = api.getZr();\n        get(zr).records || (get(zr).records = {});\n\n        initGlobalListeners(zr, api);\n\n        var record = get(zr).records[key] || (get(zr).records[key] = {});\n        record.handler = handler;\n    };\n\n    function initGlobalListeners(zr, api) {\n        if (get(zr).initialized) {\n            return;\n        }\n\n        get(zr).initialized = true;\n\n        useHandler('click', zrUtil.curry(doEnter, 'click'));\n        useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove'));\n        // useHandler('mouseout', onLeave);\n        useHandler('globalout', onLeave);\n\n        function useHandler(eventType, cb) {\n            zr.on(eventType, function (e) {\n                var dis = makeDispatchAction(api);\n\n                each(get(zr).records, function (record) {\n                    record && cb(record, e, dis.dispatchAction);\n                });\n\n                dispatchTooltipFinally(dis.pendings, api);\n            });\n        }\n    }\n\n    function dispatchTooltipFinally(pendings, api) {\n        var showLen = pendings.showTip.length;\n        var hideLen = pendings.hideTip.length;\n\n        var actuallyPayload;\n        if (showLen) {\n            actuallyPayload = pendings.showTip[showLen - 1];\n        }\n        else if (hideLen) {\n            actuallyPayload = pendings.hideTip[hideLen - 1];\n        }\n        if (actuallyPayload) {\n            actuallyPayload.dispatchAction = null;\n            api.dispatchAction(actuallyPayload);\n        }\n    }\n\n    function onLeave(record, e, dispatchAction) {\n        record.handler('leave', null, dispatchAction);\n    }\n\n    function doEnter(currTrigger, record, e, dispatchAction) {\n        record.handler(currTrigger, e, dispatchAction);\n    }\n\n    function makeDispatchAction(api) {\n        var pendings = {\n            showTip: [],\n            hideTip: []\n        };\n        // FIXME\n        // better approach?\n        // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n        // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n        // So we have to add \"final stage\" to merge those dispatched actions.\n        var dispatchAction = function (payload) {\n            var pendingList = pendings[payload.type];\n            if (pendingList) {\n                pendingList.push(payload);\n            }\n            else {\n                payload.dispatchAction = dispatchAction;\n                api.dispatchAction(payload);\n            }\n        };\n\n        return {\n            dispatchAction: dispatchAction,\n            pendings: pendings\n        };\n    }\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    globalListener.unregister = function (key, api) {\n        if (env.node) {\n            return;\n        }\n        var zr = api.getZr();\n        var record = (get(zr).records || {})[key];\n        if (record) {\n            get(zr).records[key] = null;\n        }\n    };\n\n    module.exports = globalListener;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/globalListener.js\n// module id = 661\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var textContain = require('zrender/lib/contain/text');\n    var formatUtil = require('../../util/format');\n    var matrix = require('zrender/lib/core/matrix');\n    var axisHelper = require('../../coord/axisHelper');\n    var AxisBuilder = require('../axis/AxisBuilder');\n\n    var helper = {};\n\n    /**\n     * @param {module:echarts/model/Model} axisPointerModel\n     */\n    helper.buildElStyle = function (axisPointerModel) {\n        var axisPointerType = axisPointerModel.get('type');\n        var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n        var style;\n        if (axisPointerType === 'line') {\n            style = styleModel.getLineStyle();\n            style.fill = null;\n        }\n        else if (axisPointerType === 'shadow') {\n            style = styleModel.getAreaStyle();\n            style.stroke = null;\n        }\n        return style;\n    };\n\n    /**\n     * @param {Function} labelPos {align, verticalAlign, position}\n     */\n    helper.buildLabelElOption = function (\n        elOption, axisModel, axisPointerModel, api, labelPos\n    ) {\n        var value = axisPointerModel.get('value');\n        var text = helper.getValueLabel(\n            value, axisModel.axis, axisModel.ecModel,\n            axisPointerModel.get('seriesDataIndices'),\n            {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            }\n        );\n        var labelModel = axisPointerModel.getModel('label');\n        var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n\n        var font = labelModel.getFont();\n        var textRect = textContain.getBoundingRect(text, font);\n\n        var position = labelPos.position;\n        var width = textRect.width + paddings[1] + paddings[3];\n        var height = textRect.height + paddings[0] + paddings[2];\n\n        // Adjust by align.\n        var align = labelPos.align;\n        align === 'right' && (position[0] -= width);\n        align === 'center' && (position[0] -= width / 2);\n        var verticalAlign = labelPos.verticalAlign;\n        verticalAlign === 'bottom' && (position[1] -= height);\n        verticalAlign === 'middle' && (position[1] -= height / 2);\n\n        // Not overflow ec container\n        confineInContainer(position, width, height, api);\n\n        var bgColor = labelModel.get('backgroundColor');\n        if (!bgColor || bgColor === 'auto') {\n            bgColor = axisModel.get('axisLine.lineStyle.color');\n        }\n\n        elOption.label = {\n            shape: {x: 0, y: 0, width: width, height: height, r: labelModel.get('borderRadius')},\n            position: position.slice(),\n            // TODO: rich\n            style: {\n                text: text,\n                textFont: font,\n                textFill: labelModel.getTextColor(),\n                textPosition: 'inside',\n                fill: bgColor,\n                stroke: labelModel.get('borderColor') || 'transparent',\n                lineWidth: labelModel.get('borderWidth') || 0,\n                shadowBlur: labelModel.get('shadowBlur'),\n                shadowColor: labelModel.get('shadowColor'),\n                shadowOffsetX: labelModel.get('shadowOffsetX'),\n                shadowOffsetY: labelModel.get('shadowOffsetY')\n            },\n            // Lable should be over axisPointer.\n            z2: 10\n        };\n    };\n\n    // Do not overflow ec container\n    function confineInContainer(position, width, height, api) {\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n        position[0] = Math.min(position[0] + width, viewWidth) - width;\n        position[1] = Math.min(position[1] + height, viewHeight) - height;\n        position[0] = Math.max(position[0], 0);\n        position[1] = Math.max(position[1], 0);\n    }\n\n    /**\n     * @param {number} value\n     * @param {module:echarts/coord/Axis} axis\n     * @param {module:echarts/model/Global} ecModel\n     * @param {Object} opt\n     * @param {Array.<Object>} seriesDataIndices\n     * @param {number|string} opt.precision 'auto' or a number\n     * @param {string|Function} opt.formatter label formatter\n     */\n    helper.getValueLabel = function (value, axis, ecModel, seriesDataIndices, opt) {\n        var text = axis.scale.getLabel(\n            // If `precision` is set, width can be fixed (like '12.00500'), which\n            // helps to debounce when when moving label.\n            value, {precision: opt.precision}\n        );\n        var formatter = opt.formatter;\n\n        if (formatter) {\n            var params = {\n                value: axisHelper.getAxisRawValue(axis, value),\n                seriesData: []\n            };\n            zrUtil.each(seriesDataIndices, function (idxItem) {\n                var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                var dataIndex = idxItem.dataIndexInside;\n                var dataParams = series && series.getDataParams(dataIndex);\n                dataParams && params.seriesData.push(dataParams);\n            });\n\n            if (zrUtil.isString(formatter)) {\n                text = formatter.replace('{value}', text);\n            }\n            else if (zrUtil.isFunction(formatter)) {\n                text = formatter(params);\n            }\n        }\n\n        return text;\n    };\n\n    /**\n     * @param {module:echarts/coord/Axis} axis\n     * @param {number} value\n     * @param {Object} layoutInfo {\n     *  rotation, position, labelOffset, labelDirection, labelMargin\n     * }\n     */\n    helper.getTransformedPosition = function (axis, value, layoutInfo) {\n        var transform = matrix.create();\n        matrix.rotate(transform, transform, layoutInfo.rotation);\n        matrix.translate(transform, transform, layoutInfo.position);\n\n        return graphic.applyTransform([\n            axis.dataToCoord(value),\n            (layoutInfo.labelOffset || 0)\n                + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)\n        ], transform);\n    };\n\n    helper.buildCartesianSingleLabelElOption = function (\n        value, elOption, layoutInfo, axisModel, axisPointerModel, api\n    ) {\n        var textLayout = AxisBuilder.innerTextLayout(\n            layoutInfo.rotation, 0, layoutInfo.labelDirection\n        );\n        layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n        helper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n            position: helper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n            align: textLayout.textAlign,\n            verticalAlign: textLayout.textVerticalAlign\n        });\n    };\n\n    /**\n     * @param {Array.<number>} p1\n     * @param {Array.<number>} p2\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeLineShape = function (p1, p2, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x1: p1[xDimIndex],\n            y1: p1[1 - xDimIndex],\n            x2: p2[xDimIndex],\n            y2: p2[1 - xDimIndex]\n        };\n    };\n\n    /**\n     * @param {Array.<number>} xy\n     * @param {Array.<number>} wh\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeRectShape = function (xy, wh, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x: xy[xDimIndex],\n            y: xy[1 - xDimIndex],\n            width: wh[xDimIndex],\n            height: wh[1 - xDimIndex]\n        };\n    };\n\n    helper.makeSectorShape = function (cx, cy, r0, r, startAngle, endAngle) {\n        return {\n            cx: cx,\n            cy: cy,\n            r0: r0,\n            r: r,\n            startAngle: startAngle,\n            endAngle: endAngle,\n            clockwise: true\n        };\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/viewHelper.js\n// module id = 662\n// module chunks = 0 1 2","'use strict';\n\n\n    var ComponentModel = require('../../model/Component');\n    var zrUtil = require('zrender/lib/core/util');\n    var axisModelCreator = require('../axisModelCreator');\n\n    var AxisModel = ComponentModel.extend({\n\n        type: 'cartesian2dAxis',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Axis2D}\n         */\n        axis: null,\n\n        /**\n         * @override\n         */\n        init: function () {\n            AxisModel.superApply(this, 'init', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function () {\n            AxisModel.superApply(this, 'mergeOption', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        restoreData: function () {\n            AxisModel.superApply(this, 'restoreData', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         * @return {module:echarts/model/Component}\n         */\n        getCoordSysModel: function () {\n            return this.ecModel.queryComponents({\n                mainType: 'grid',\n                index: this.option.gridIndex,\n                id: this.option.gridId\n            })[0];\n        }\n\n    });\n\n    function getAxisType(axisDim, option) {\n        // Default axis with data is category axis\n        return option.type || (option.data ? 'category' : 'value');\n    }\n\n    zrUtil.merge(AxisModel.prototype, require('../axisModelCommonMixin'));\n\n    var extraOption = {\n        // gridIndex: 0,\n        // gridId: '',\n\n        // Offset is for multiple axis on the same position\n        offset: 0\n    };\n\n    axisModelCreator('x', AxisModel, getAxisType, extraOption);\n    axisModelCreator('y', AxisModel, getAxisType, extraOption);\n\n    module.exports = AxisModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/AxisModel.js\n// module id = 663\n// module chunks = 0 1 2","\n\n    var classUtil = require('../../util/clazz');\n    var set = classUtil.set;\n    var get = classUtil.get;\n\n    module.exports = {\n        clearColorPalette: function () {\n            set(this, 'colorIdx', 0);\n            set(this, 'colorNameMap', {});\n        },\n\n        getColorFromPalette: function (name, scope) {\n            scope = scope || this;\n            var colorIdx = get(scope, 'colorIdx') || 0;\n            var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {});\n            // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n            if (colorNameMap.hasOwnProperty(name)) {\n                return colorNameMap[name];\n            }\n            var colorPalette = this.get('color', true) || [];\n            if (!colorPalette.length) {\n                return;\n            }\n\n            var color = colorPalette[colorIdx];\n            if (name) {\n                colorNameMap[name] = color;\n            }\n            set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n\n            return color;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/colorPalette.js\n// module id = 664\n// module chunks = 0 1 2","/**\n * For testable.\n */\n\n\n    var numberUtil = require('../util/number');\n\n    var roundNumber = numberUtil.round;\n\n    var helper = {};\n\n    /**\n     * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n     *                                Should be extent[0] < extent[1].\n     * @param {number} splitNumber splitNumber should be >= 1.\n     * @param {number} [minInterval]\n     * @param {number} [maxInterval]\n     * @return {Object} {interval, intervalPrecision, niceTickExtent}\n     */\n    helper.intervalScaleNiceTicks = function (extent, splitNumber, minInterval, maxInterval) {\n        var result = {};\n        var span = extent[1] - extent[0];\n\n        var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n        if (minInterval != null && interval < minInterval) {\n            interval = result.interval = minInterval;\n        }\n        if (maxInterval != null && interval > maxInterval) {\n            interval = result.interval = maxInterval;\n        }\n        // Tow more digital for tick.\n        var precision = result.intervalPrecision = helper.getIntervalPrecision(interval);\n        // Niced extent inside original extent\n        var niceTickExtent = result.niceTickExtent = [\n            roundNumber(Math.ceil(extent[0] / interval) * interval, precision),\n            roundNumber(Math.floor(extent[1] / interval) * interval, precision)\n        ];\n\n        helper.fixExtent(niceTickExtent, extent);\n\n        return result;\n    };\n\n    /**\n     * @param {number} interval\n     * @return {number} interval precision\n     */\n    helper.getIntervalPrecision = function (interval) {\n        // Tow more digital for tick.\n        return numberUtil.getPrecisionSafe(interval) + 2;\n    };\n\n    function clamp(niceTickExtent, idx, extent) {\n        niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n    }\n\n    // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n    helper.fixExtent = function (niceTickExtent, extent) {\n        !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n        !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n        clamp(niceTickExtent, 0, extent);\n        clamp(niceTickExtent, 1, extent);\n        if (niceTickExtent[0] > niceTickExtent[1]) {\n            niceTickExtent[0] = niceTickExtent[1];\n        }\n    };\n\n    helper.intervalScaleGetTicks = function (interval, extent, niceTickExtent, intervalPrecision) {\n        var ticks = [];\n\n        // If interval is 0, return [];\n        if (!interval) {\n            return ticks;\n        }\n\n        // Consider this case: using dataZoom toolbox, zoom and zoom.\n        var safeLimit = 10000;\n\n        if (extent[0] < niceTickExtent[0]) {\n            ticks.push(extent[0]);\n        }\n        var tick = niceTickExtent[0];\n\n        while (tick <= niceTickExtent[1]) {\n            ticks.push(tick);\n            // Avoid rounding error\n            tick = roundNumber(tick + interval, intervalPrecision);\n            if (tick === ticks[ticks.length - 1]) {\n                // Consider out of safe float point, e.g.,\n                // -3711126.9907707 + 2e-10 === -3711126.9907707\n                break;\n            }\n            if (ticks.length > safeLimit) {\n                return [];\n            }\n        }\n        // Consider this case: the last item of ticks is smaller\n        // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n        if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n            ticks.push(extent[1]);\n        }\n\n        return ticks;\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/helper.js\n// module id = 665\n// module chunks = 0 1 2","\n\n    var lib = {};\n\n    var ORIGIN_METHOD = '\\0__throttleOriginMethod';\n    var RATE = '\\0__throttleRate';\n    var THROTTLE_TYPE = '\\0__throttleType';\n\n    /**\n     * @public\n     * @param {(Function)} fn\n     * @param {number} [delay=0] Unit: ms.\n     * @param {boolean} [debounce=false]\n     *        true: If call interval less than `delay`, only the last call works.\n     *        false: If call interval less than `delay, call works on fixed rate.\n     * @return {(Function)} throttled fn.\n     */\n    lib.throttle = function (fn, delay, debounce) {\n\n        var currCall;\n        var lastCall = 0;\n        var lastExec = 0;\n        var timer = null;\n        var diff;\n        var scope;\n        var args;\n        var debounceNextCall;\n\n        delay = delay || 0;\n\n        function exec() {\n            lastExec = (new Date()).getTime();\n            timer = null;\n            fn.apply(scope, args || []);\n        }\n\n        var cb = function () {\n            currCall = (new Date()).getTime();\n            scope = this;\n            args = arguments;\n            var thisDelay = debounceNextCall || delay;\n            var thisDebounce = debounceNextCall || debounce;\n            debounceNextCall = null;\n            diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n\n            clearTimeout(timer);\n\n            if (thisDebounce) {\n                timer = setTimeout(exec, thisDelay);\n            }\n            else {\n                if (diff >= 0) {\n                    exec();\n                }\n                else {\n                    timer = setTimeout(exec, -diff);\n                }\n            }\n\n            lastCall = currCall;\n        };\n\n        /**\n         * Clear throttle.\n         * @public\n         */\n        cb.clear = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n\n        /**\n         * Enable debounce once.\n         */\n        cb.debounceNextCall = function (debounceDelay) {\n            debounceNextCall = debounceDelay;\n        };\n\n        return cb;\n    };\n\n    /**\n     * Create throttle method or update throttle rate.\n     *\n     * @example\n     * ComponentView.prototype.render = function () {\n     *     ...\n     *     throttle.createOrUpdate(\n     *         this,\n     *         '_dispatchAction',\n     *         this.model.get('throttle'),\n     *         'fixRate'\n     *     );\n     * };\n     * ComponentView.prototype.remove = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     * ComponentView.prototype.dispose = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     * @param {number} [rate]\n     * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n     * @return {Function} throttled function.\n     */\n    lib.createOrUpdate = function (obj, fnAttr, rate, throttleType) {\n        var fn = obj[fnAttr];\n\n        if (!fn) {\n            return;\n        }\n\n        var originFn = fn[ORIGIN_METHOD] || fn;\n        var lastThrottleType = fn[THROTTLE_TYPE];\n        var lastRate = fn[RATE];\n\n        if (lastRate !== rate || lastThrottleType !== throttleType) {\n            if (rate == null || !throttleType) {\n                return (obj[fnAttr] = originFn);\n            }\n\n            fn = obj[fnAttr] = lib.throttle(\n                originFn, rate, throttleType === 'debounce'\n            );\n            fn[ORIGIN_METHOD] = originFn;\n            fn[THROTTLE_TYPE] = throttleType;\n            fn[RATE] = rate;\n        }\n\n        return fn;\n    };\n\n    /**\n     * Clear throttle. Example see throttle.createOrUpdate.\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     */\n    lib.clear = function (obj, fnAttr) {\n        var fn = obj[fnAttr];\n        if (fn && fn[ORIGIN_METHOD]) {\n            obj[fnAttr] = fn[ORIGIN_METHOD];\n        }\n    };\n\n    module.exports = lib;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/throttle.js\n// module id = 666\n// module chunks = 0 1 2","'use strict';\n/**\n * @module zrender/Element\n */\n\n\n    var guid = require('./core/guid');\n    var Eventful = require('./mixin/Eventful');\n    var Transformable = require('./mixin/Transformable');\n    var Animatable = require('./mixin/Animatable');\n    var zrUtil = require('./core/util');\n\n    /**\n     * @alias module:zrender/Element\n     * @constructor\n     * @extends {module:zrender/mixin/Animatable}\n     * @extends {module:zrender/mixin/Transformable}\n     * @extends {module:zrender/mixin/Eventful}\n     */\n    var Element = function (opts) {\n\n        Transformable.call(this, opts);\n        Eventful.call(this, opts);\n        Animatable.call(this, opts);\n\n        /**\n         * 画布元素ID\n         * @type {string}\n         */\n        this.id = opts.id || guid();\n    };\n\n    Element.prototype = {\n\n        /**\n         * 元素类型\n         * Element type\n         * @type {string}\n         */\n        type: 'element',\n\n        /**\n         * 元素名字\n         * Element name\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n         * ZRender instance will be assigned when element is associated with zrender\n         * @name module:/zrender/Element#__zr\n         * @type {module:zrender/ZRender}\n         */\n        __zr: null,\n\n        /**\n         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n         * If ignore drawing and events of the element object\n         * @name module:/zrender/Element#ignore\n         * @type {boolean}\n         * @default false\n         */\n        ignore: false,\n\n        /**\n         * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n         * 该路径会继承被裁减对象的变换\n         * @type {module:zrender/graphic/Path}\n         * @see http://www.w3.org/TR/2dcontext/#clipping-region\n         * @readOnly\n         */\n        clipPath: null,\n\n        /**\n         * Drift element\n         * @param  {number} dx dx on the global space\n         * @param  {number} dy dy on the global space\n         */\n        drift: function (dx, dy) {\n            switch (this.draggable) {\n                case 'horizontal':\n                    dy = 0;\n                    break;\n                case 'vertical':\n                    dx = 0;\n                    break;\n            }\n\n            var m = this.transform;\n            if (!m) {\n                m = this.transform = [1, 0, 0, 1, 0, 0];\n            }\n            m[4] += dx;\n            m[5] += dy;\n\n            this.decomposeTransform();\n            this.dirty(false);\n        },\n\n        /**\n         * Hook before update\n         */\n        beforeUpdate: function () {},\n        /**\n         * Hook after update\n         */\n        afterUpdate: function () {},\n        /**\n         * Update each frame\n         */\n        update: function () {\n            this.updateTransform();\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {},\n\n        /**\n         * @protected\n         */\n        attrKV: function (key, value) {\n            if (key === 'position' || key === 'scale' || key === 'origin') {\n                // Copy the array\n                if (value) {\n                    var target = this[key];\n                    if (!target) {\n                        target = this[key] = [];\n                    }\n                    target[0] = value[0];\n                    target[1] = value[1];\n                }\n            }\n            else {\n                this[key] = value;\n            }\n        },\n\n        /**\n         * Hide the element\n         */\n        hide: function () {\n            this.ignore = true;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * Show the element\n         */\n        show: function () {\n            this.ignore = false;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * @param {string|Object} key\n         * @param {*} value\n         */\n        attr: function (key, value) {\n            if (typeof key === 'string') {\n                this.attrKV(key, value);\n            }\n            else if (zrUtil.isObject(key)) {\n                for (var name in key) {\n                    if (key.hasOwnProperty(name)) {\n                        this.attrKV(name, key[name]);\n                    }\n                }\n            }\n\n            this.dirty(false);\n\n            return this;\n        },\n\n        /**\n         * @param {module:zrender/graphic/Path} clipPath\n         */\n        setClipPath: function (clipPath) {\n            var zr = this.__zr;\n            if (zr) {\n                clipPath.addSelfToZr(zr);\n            }\n\n            // Remove previous clip path\n            if (this.clipPath && this.clipPath !== clipPath) {\n                this.removeClipPath();\n            }\n\n            this.clipPath = clipPath;\n            clipPath.__zr = zr;\n            clipPath.__clipTarget = this;\n\n            this.dirty(false);\n        },\n\n        /**\n         */\n        removeClipPath: function () {\n            var clipPath = this.clipPath;\n            if (clipPath) {\n                if (clipPath.__zr) {\n                    clipPath.removeSelfFromZr(clipPath.__zr);\n                }\n\n                clipPath.__zr = null;\n                clipPath.__clipTarget = null;\n                this.clipPath = null;\n\n                this.dirty(false);\n            }\n        },\n\n        /**\n         * Add self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        addSelfToZr: function (zr) {\n            this.__zr = zr;\n            // 添加动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.addAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.addSelfToZr(zr);\n            }\n        },\n\n        /**\n         * Remove self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        removeSelfFromZr: function (zr) {\n            this.__zr = null;\n            // 移除动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.removeAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.removeSelfFromZr(zr);\n            }\n        }\n    };\n\n    zrUtil.mixin(Element, Animatable);\n    zrUtil.mixin(Element, Transformable);\n    zrUtil.mixin(Element, Eventful);\n\n    module.exports = Element;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Element.js\n// module id = 667\n// module chunks = 0 1 2","/**\n * @module echarts/animation/Animator\n */\n\n\n    var Clip = require('./Clip');\n    var color = require('../tool/color');\n    var util = require('../core/util');\n    var isArrayLike = util.isArrayLike;\n\n    var arraySlice = Array.prototype.slice;\n\n    function defaultGetter(target, key) {\n        return target[key];\n    }\n\n    function defaultSetter(target, key, value) {\n        target[key] = value;\n    }\n\n    /**\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} percent\n     * @return {number}\n     */\n    function interpolateNumber(p0, p1, percent) {\n        return (p1 - p0) * percent + p0;\n    }\n\n    /**\n     * @param  {string} p0\n     * @param  {string} p1\n     * @param  {number} percent\n     * @return {string}\n     */\n    function interpolateString(p0, p1, percent) {\n        return percent > 0.5 ? p1 : p0;\n    }\n\n    /**\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {number} percent\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function interpolateArray(p0, p1, percent, out, arrDim) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = interpolateNumber(p0[i], p1[i], percent);\n            }\n        }\n        else {\n            var len2 = len && p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = interpolateNumber(\n                        p0[i][j], p1[i][j], percent\n                    );\n                }\n            }\n        }\n    }\n\n    // arr0 is source array, arr1 is target array.\n    // Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n    function fillArr(arr0, arr1, arrDim) {\n        var arr0Len = arr0.length;\n        var arr1Len = arr1.length;\n        if (arr0Len !== arr1Len) {\n            // FIXME Not work for TypedArray\n            var isPreviousLarger = arr0Len > arr1Len;\n            if (isPreviousLarger) {\n                // Cut the previous\n                arr0.length = arr1Len;\n            }\n            else {\n                // Fill the previous\n                for (var i = arr0Len; i < arr1Len; i++) {\n                    arr0.push(\n                        arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i])\n                    );\n                }\n            }\n        }\n        // Handling NaN value\n        var len2 = arr0[0] && arr0[0].length;\n        for (var i = 0; i < arr0.length; i++) {\n            if (arrDim === 1) {\n                if (isNaN(arr0[i])) {\n                    arr0[i] = arr1[i];\n                }\n            }\n            else {\n                for (var j = 0; j < len2; j++) {\n                    if (isNaN(arr0[i][j])) {\n                        arr0[i][j] = arr1[i][j];\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @param  {Array} arr0\n     * @param  {Array} arr1\n     * @param  {number} arrDim\n     * @return {boolean}\n     */\n    function isArraySame(arr0, arr1, arrDim) {\n        if (arr0 === arr1) {\n            return true;\n        }\n        var len = arr0.length;\n        if (len !== arr1.length) {\n            return false;\n        }\n        if (arrDim === 1) {\n            for (var i = 0; i < len; i++) {\n                if (arr0[i] !== arr1[i]) {\n                    return false;\n                }\n            }\n        }\n        else {\n            var len2 = arr0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    if (arr0[i][j] !== arr1[i][j]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Catmull Rom interpolate array\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {Array} p2\n     * @param  {Array} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function catmullRomInterpolateArray(\n        p0, p1, p2, p3, t, t2, t3, out, arrDim\n    ) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = catmullRomInterpolate(\n                    p0[i], p1[i], p2[i], p3[i], t, t2, t3\n                );\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = catmullRomInterpolate(\n                        p0[i][j], p1[i][j], p2[i][j], p3[i][j],\n                        t, t2, t3\n                    );\n                }\n            }\n        }\n    }\n\n    /**\n     * Catmull Rom interpolate number\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @return {number}\n     */\n    function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    function cloneValue(value) {\n        if (isArrayLike(value)) {\n            var len = value.length;\n            if (isArrayLike(value[0])) {\n                var ret = [];\n                for (var i = 0; i < len; i++) {\n                    ret.push(arraySlice.call(value[i]));\n                }\n                return ret;\n            }\n\n            return arraySlice.call(value);\n        }\n\n        return value;\n    }\n\n    function rgba2String(rgba) {\n        rgba[0] = Math.floor(rgba[0]);\n        rgba[1] = Math.floor(rgba[1]);\n        rgba[2] = Math.floor(rgba[2]);\n\n        return 'rgba(' + rgba.join(',') + ')';\n    }\n\n    function getArrayDim(keyframes) {\n        var lastValue = keyframes[keyframes.length - 1].value;\n        return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n    }\n\n    function createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n        var getter = animator._getter;\n        var setter = animator._setter;\n        var useSpline = easing === 'spline';\n\n        var trackLen = keyframes.length;\n        if (!trackLen) {\n            return;\n        }\n        // Guess data type\n        var firstVal = keyframes[0].value;\n        var isValueArray = isArrayLike(firstVal);\n        var isValueColor = false;\n        var isValueString = false;\n\n        // For vertices morphing\n        var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n\n        var trackMaxTime;\n        // Sort keyframe as ascending\n        keyframes.sort(function(a, b) {\n            return a.time - b.time;\n        });\n\n        trackMaxTime = keyframes[trackLen - 1].time;\n        // Percents of each keyframe\n        var kfPercents = [];\n        // Value of each keyframe\n        var kfValues = [];\n        var prevValue = keyframes[0].value;\n        var isAllValueEqual = true;\n        for (var i = 0; i < trackLen; i++) {\n            kfPercents.push(keyframes[i].time / trackMaxTime);\n            // Assume value is a color when it is a string\n            var value = keyframes[i].value;\n\n            // Check if value is equal, deep check if value is array\n            if (!((isValueArray && isArraySame(value, prevValue, arrDim))\n                || (!isValueArray && value === prevValue))) {\n                isAllValueEqual = false;\n            }\n            prevValue = value;\n\n            // Try converting a string to a color array\n            if (typeof value == 'string') {\n                var colorArray = color.parse(value);\n                if (colorArray) {\n                    value = colorArray;\n                    isValueColor = true;\n                }\n                else {\n                    isValueString = true;\n                }\n            }\n            kfValues.push(value);\n        }\n        if (!forceAnimate && isAllValueEqual) {\n            return;\n        }\n\n        var lastValue = kfValues[trackLen - 1];\n        // Polyfill array and NaN value\n        for (var i = 0; i < trackLen - 1; i++) {\n            if (isValueArray) {\n                fillArr(kfValues[i], lastValue, arrDim);\n            }\n            else {\n                if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n                    kfValues[i] = lastValue;\n                }\n            }\n        }\n        isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim);\n\n        // Cache the key of last frame to speed up when\n        // animation playback is sequency\n        var lastFrame = 0;\n        var lastFramePercent = 0;\n        var start;\n        var w;\n        var p0;\n        var p1;\n        var p2;\n        var p3;\n\n        if (isValueColor) {\n            var rgba = [0, 0, 0, 0];\n        }\n\n        var onframe = function (target, percent) {\n            // Find the range keyframes\n            // kf1-----kf2---------current--------kf3\n            // find kf2 and kf3 and do interpolation\n            var frame;\n            // In the easing function like elasticOut, percent may less than 0\n            if (percent < 0) {\n                frame = 0;\n            }\n            else if (percent < lastFramePercent) {\n                // Start from next key\n                // PENDING start from lastFrame ?\n                start = Math.min(lastFrame + 1, trackLen - 1);\n                for (frame = start; frame >= 0; frame--) {\n                    if (kfPercents[frame] <= percent) {\n                        break;\n                    }\n                }\n                // PENDING really need to do this ?\n                frame = Math.min(frame, trackLen - 2);\n            }\n            else {\n                for (frame = lastFrame; frame < trackLen; frame++) {\n                    if (kfPercents[frame] > percent) {\n                        break;\n                    }\n                }\n                frame = Math.min(frame - 1, trackLen - 2);\n            }\n            lastFrame = frame;\n            lastFramePercent = percent;\n\n            var range = (kfPercents[frame + 1] - kfPercents[frame]);\n            if (range === 0) {\n                return;\n            }\n            else {\n                w = (percent - kfPercents[frame]) / range;\n            }\n            if (useSpline) {\n                p1 = kfValues[frame];\n                p0 = kfValues[frame === 0 ? frame : frame - 1];\n                p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n                p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n                if (isValueArray) {\n                    catmullRomInterpolateArray(\n                        p0, p1, p2, p3, w, w * w, w * w * w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        value = catmullRomInterpolateArray(\n                            p0, p1, p2, p3, w, w * w, w * w * w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(p1, p2, w);\n                    }\n                    else {\n                        value = catmullRomInterpolate(\n                            p0, p1, p2, p3, w, w * w, w * w * w\n                        );\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n            else {\n                if (isValueArray) {\n                    interpolateArray(\n                        kfValues[frame], kfValues[frame + 1], w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        interpolateArray(\n                            kfValues[frame], kfValues[frame + 1], w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    else {\n                        value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n        };\n\n        var clip = new Clip({\n            target: animator._target,\n            life: trackMaxTime,\n            loop: animator._loop,\n            delay: animator._delay,\n            onframe: onframe,\n            ondestroy: oneTrackDone\n        });\n\n        if (easing && easing !== 'spline') {\n            clip.easing = easing;\n        }\n\n        return clip;\n    }\n\n    /**\n     * @alias module:zrender/animation/Animator\n     * @constructor\n     * @param {Object} target\n     * @param {boolean} loop\n     * @param {Function} getter\n     * @param {Function} setter\n     */\n    var Animator = function(target, loop, getter, setter) {\n        this._tracks = {};\n        this._target = target;\n\n        this._loop = loop || false;\n\n        this._getter = getter || defaultGetter;\n        this._setter = setter || defaultSetter;\n\n        this._clipCount = 0;\n\n        this._delay = 0;\n\n        this._doneList = [];\n\n        this._onframeList = [];\n\n        this._clipList = [];\n    };\n\n    Animator.prototype = {\n        /**\n         * 设置动画关键帧\n         * @param  {number} time 关键帧时间，单位是ms\n         * @param  {Object} props 关键帧的属性值，key-value表示\n         * @return {module:zrender/animation/Animator}\n         */\n        when: function(time /* ms */, props) {\n            var tracks = this._tracks;\n            for (var propName in props) {\n                if (!props.hasOwnProperty(propName)) {\n                    continue;\n                }\n\n                if (!tracks[propName]) {\n                    tracks[propName] = [];\n                    // Invalid value\n                    var value = this._getter(this._target, propName);\n                    if (value == null) {\n                        // zrLog('Invalid property ' + propName);\n                        continue;\n                    }\n                    // If time is 0\n                    //  Then props is given initialize value\n                    // Else\n                    //  Initialize value from current prop value\n                    if (time !== 0) {\n                        tracks[propName].push({\n                            time: 0,\n                            value: cloneValue(value)\n                        });\n                    }\n                }\n                tracks[propName].push({\n                    time: time,\n                    value: props[propName]\n                });\n            }\n            return this;\n        },\n        /**\n         * 添加动画每一帧的回调函数\n         * @param  {Function} callback\n         * @return {module:zrender/animation/Animator}\n         */\n        during: function (callback) {\n            this._onframeList.push(callback);\n            return this;\n        },\n\n        pause: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].pause();\n            }\n            this._paused = true;\n        },\n\n        resume: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].resume();\n            }\n            this._paused = false;\n        },\n\n        isPaused: function () {\n            return !!this._paused;\n        },\n\n        _doneCallback: function () {\n            // Clear all tracks\n            this._tracks = {};\n            // Clear all clips\n            this._clipList.length = 0;\n\n            var doneList = this._doneList;\n            var len = doneList.length;\n            for (var i = 0; i < len; i++) {\n                doneList[i].call(this);\n            }\n        },\n        /**\n         * 开始执行动画\n         * @param  {string|Function} [easing]\n         *         动画缓动函数，详见{@link module:zrender/animation/easing}\n         * @param  {boolean} forceAnimate\n         * @return {module:zrender/animation/Animator}\n         */\n        start: function (easing, forceAnimate) {\n\n            var self = this;\n            var clipCount = 0;\n\n            var oneTrackDone = function() {\n                clipCount--;\n                if (!clipCount) {\n                    self._doneCallback();\n                }\n            };\n\n            var lastClip;\n            for (var propName in this._tracks) {\n                if (!this._tracks.hasOwnProperty(propName)) {\n                    continue;\n                }\n                var clip = createTrackClip(\n                    this, easing, oneTrackDone,\n                    this._tracks[propName], propName, forceAnimate\n                );\n                if (clip) {\n                    this._clipList.push(clip);\n                    clipCount++;\n\n                    // If start after added to animation\n                    if (this.animation) {\n                        this.animation.addClip(clip);\n                    }\n\n                    lastClip = clip;\n                }\n            }\n\n            // Add during callback on the last clip\n            if (lastClip) {\n                var oldOnFrame = lastClip.onframe;\n                lastClip.onframe = function (target, percent) {\n                    oldOnFrame(target, percent);\n\n                    for (var i = 0; i < self._onframeList.length; i++) {\n                        self._onframeList[i](target, percent);\n                    }\n                };\n            }\n\n            // This optimization will help the case that in the upper application\n            // the view may be refreshed frequently, where animation will be\n            // called repeatly but nothing changed.\n            if (!clipCount) {\n                this._doneCallback();\n            }\n            return this;\n        },\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stop: function (forwardToLast) {\n            var clipList = this._clipList;\n            var animation = this.animation;\n            for (var i = 0; i < clipList.length; i++) {\n                var clip = clipList[i];\n                if (forwardToLast) {\n                    // Move to last frame before stop\n                    clip.onframe(this._target, 1);\n                }\n                animation && animation.removeClip(clip);\n            }\n            clipList.length = 0;\n        },\n        /**\n         * 设置动画延迟开始的时间\n         * @param  {number} time 单位ms\n         * @return {module:zrender/animation/Animator}\n         */\n        delay: function (time) {\n            this._delay = time;\n            return this;\n        },\n        /**\n         * 添加动画结束的回调\n         * @param  {Function} cb\n         * @return {module:zrender/animation/Animator}\n         */\n        done: function(cb) {\n            if (cb) {\n                this._doneList.push(cb);\n            }\n            return this;\n        },\n\n        /**\n         * @return {Array.<module:zrender/animation/Clip>}\n         */\n        getClips: function () {\n            return this._clipList;\n        }\n    };\n\n    module.exports = Animator;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Animator.js\n// module id = 668\n// module chunks = 0 1 2","\n\n    module.exports = (typeof window !== 'undefined' &&\n                ((window.requestAnimationFrame && window.requestAnimationFrame.bind(window))\n                // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\n                || (window.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window))\n                || window.mozRequestAnimationFrame\n                || window.webkitRequestAnimationFrame)\n            )\n            || function (func) {\n                setTimeout(func, 16);\n            };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/requestAnimationFrame.js\n// module id = 669\n// module chunks = 0 1 2","\n\n    var PI2 = Math.PI * 2;\n    module.exports = {\n        normalizeRadian: function(angle) {\n            angle %= PI2;\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return angle;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/util.js\n// module id = 670\n// module chunks = 0 1 2","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n\n    /**\n     * Simple double linked list. Compared with array, it has O(1) remove operation.\n     * @constructor\n     */\n    var LinkedList = function () {\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.head = null;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.tail = null;\n\n        this._len = 0;\n    };\n\n    var linkedListProto = LinkedList.prototype;\n    /**\n     * Insert a new value at the tail\n     * @param  {} val\n     * @return {module:zrender/core/LRU~Entry}\n     */\n    linkedListProto.insert = function (val) {\n        var entry = new Entry(val);\n        this.insertEntry(entry);\n        return entry;\n    };\n\n    /**\n     * Insert an entry at the tail\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.insertEntry = function (entry) {\n        if (!this.head) {\n            this.head = this.tail = entry;\n        }\n        else {\n            this.tail.next = entry;\n            entry.prev = this.tail;\n            entry.next = null;\n            this.tail = entry;\n        }\n        this._len++;\n    };\n\n    /**\n     * Remove entry.\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.remove = function (entry) {\n        var prev = entry.prev;\n        var next = entry.next;\n        if (prev) {\n            prev.next = next;\n        }\n        else {\n            // Is head\n            this.head = next;\n        }\n        if (next) {\n            next.prev = prev;\n        }\n        else {\n            // Is tail\n            this.tail = prev;\n        }\n        entry.next = entry.prev = null;\n        this._len--;\n    };\n\n    /**\n     * @return {number}\n     */\n    linkedListProto.len = function () {\n        return this._len;\n    };\n\n    /**\n     * Clear list\n     */\n    linkedListProto.clear = function () {\n        this.head = this.tail = null;\n        this._len = 0;\n    };\n\n    /**\n     * @constructor\n     * @param {} val\n     */\n    var Entry = function (val) {\n        /**\n         * @type {}\n         */\n        this.value = val;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.next;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.prev;\n    };\n\n    /**\n     * LRU Cache\n     * @constructor\n     * @alias module:zrender/core/LRU\n     */\n    var LRU = function (maxSize) {\n\n        this._list = new LinkedList();\n\n        this._map = {};\n\n        this._maxSize = maxSize || 10;\n\n        this._lastRemovedEntry = null;\n    };\n\n    var LRUProto = LRU.prototype;\n\n    /**\n     * @param  {string} key\n     * @param  {} value\n     * @return {} Removed value\n     */\n    LRUProto.put = function (key, value) {\n        var list = this._list;\n        var map = this._map;\n        var removed = null;\n        if (map[key] == null) {\n            var len = list.len();\n            // Reuse last removed entry\n            var entry = this._lastRemovedEntry;\n\n            if (len >= this._maxSize && len > 0) {\n                // Remove the least recently used\n                var leastUsedEntry = list.head;\n                list.remove(leastUsedEntry);\n                delete map[leastUsedEntry.key];\n\n                removed = leastUsedEntry.value;\n                this._lastRemovedEntry = leastUsedEntry;\n            }\n\n            if (entry) {\n                entry.value = value;\n            }\n            else {\n                entry = new Entry(value);\n            }\n            entry.key = key;\n            list.insertEntry(entry);\n            map[key] = entry;\n        }\n\n        return removed;\n    };\n\n    /**\n     * @param  {string} key\n     * @return {}\n     */\n    LRUProto.get = function (key) {\n        var entry = this._map[key];\n        var list = this._list;\n        if (entry != null) {\n            // Put the latest used entry in the tail\n            if (entry !== list.tail) {\n                list.remove(entry);\n                list.insertEntry(entry);\n            }\n\n            return entry.value;\n        }\n    };\n\n    /**\n     * Clear the cache\n     */\n    LRUProto.clear = function () {\n        this._list.clear();\n        this._map = {};\n    };\n\n    module.exports = LRU;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/LRU.js\n// module id = 671\n// module chunks = 0 1 2","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\n\n\n    var idStart = 0x0907;\n\n    module.exports = function () {\n        return idStart++;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/guid.js\n// module id = 672\n// module chunks = 0 1 2","\n        var config = require('../config');\n\n        /**\n         * @exports zrender/tool/log\n         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n         */\n        module.exports = function() {\n            if (config.debugMode === 0) {\n                return;\n            }\n            else if (config.debugMode == 1) {\n                for (var k in arguments) {\n                    throw new Error(arguments[k]);\n                }\n            }\n            else if (config.debugMode > 1) {\n                for (var k in arguments) {\n                    console.log(arguments[k]);\n                }\n            }\n        };\n\n        /* for debug\n        return function(mes) {\n            document.getElementById('wrong-message').innerHTML =\n                mes + ' ' + (new Date() - 0)\n                + '<br/>'\n                + document.getElementById('wrong-message').innerHTML;\n        };\n        */\n    \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/log.js\n// module id = 673\n// module chunks = 0 1 2","/**\n * Image element\n * @module zrender/graphic/Image\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var BoundingRect = require('../core/BoundingRect');\n    var zrUtil = require('../core/util');\n    var imageHelper = require('./helper/image');\n\n    /**\n     * @alias zrender/graphic/Image\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function ZImage(opts) {\n        Displayable.call(this, opts);\n    }\n\n    ZImage.prototype = {\n\n        constructor: ZImage,\n\n        type: 'image',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var src = style.image;\n\n            // Must bind each time\n            style.bind(ctx, this, prevEl);\n\n            var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this);\n\n            if (!image || !imageHelper.isImageReady(image)) {\n                return;\n            }\n\n            // 图片已经加载完成\n            // if (image.nodeName.toUpperCase() == 'IMG') {\n            //     if (!image.complete) {\n            //         return;\n            //     }\n            // }\n            // Else is canvas\n\n            var x = style.x || 0;\n            var y = style.y || 0;\n            var width = style.width;\n            var height = style.height;\n            var aspect = image.width / image.height;\n            if (width == null && height != null) {\n                // Keep image/height ratio\n                width = height * aspect;\n            }\n            else if (height == null && width != null) {\n                height = width / aspect;\n            }\n            else if (width == null && height == null) {\n                width = image.width;\n                height = image.height;\n            }\n\n            // 设置transform\n            this.setTransform(ctx);\n\n            if (style.sWidth && style.sHeight) {\n                var sx = style.sx || 0;\n                var sy = style.sy || 0;\n                ctx.drawImage(\n                    image,\n                    sx, sy, style.sWidth, style.sHeight,\n                    x, y, width, height\n                );\n            }\n            else if (style.sx && style.sy) {\n                var sx = style.sx;\n                var sy = style.sy;\n                var sWidth = width - sx;\n                var sHeight = height - sy;\n                ctx.drawImage(\n                    image,\n                    sx, sy, sWidth, sHeight,\n                    x, y, width, height\n                );\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (! this._rect) {\n                this._rect = new BoundingRect(\n                    style.x || 0, style.y || 0, style.width || 0, style.height || 0\n                );\n            }\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(ZImage, Displayable);\n\n    module.exports = ZImage;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Image.js\n// module id = 674\n// module chunks = 0 1 2","\n\n    var Pattern = function (image, repeat) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {image: ...}`, where this constructor will not be called.\n\n        this.image = image;\n        this.repeat = repeat;\n\n        // Can be cloned\n        this.type = 'pattern';\n    };\n\n    Pattern.prototype.getCanvasPattern = function (ctx) {\n        return ctx.createPattern(this.image, this.repeat || 'repeat');\n    };\n\n    module.exports = Pattern;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Pattern.js\n// module id = 675\n// module chunks = 0 1 2","/**\n * @module zrender/graphic/Style\n */\n\n\n    var textHelper = require('./helper/text');\n\n    var STYLE_COMMON_PROPS = [\n        ['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'],\n        ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]\n    ];\n\n    // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n    // var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\n    var Style = function (opts, host) {\n        this.extendFrom(opts, false);\n        this.host = host;\n    };\n\n    function createLinearGradient(ctx, obj, rect) {\n        var x = obj.x == null ? 0 : obj.x;\n        var x2 = obj.x2 == null ? 1 : obj.x2;\n        var y = obj.y == null ? 0 : obj.y;\n        var y2 = obj.y2 == null ? 0 : obj.y2;\n\n        if (!obj.global) {\n            x = x * rect.width + rect.x;\n            x2 = x2 * rect.width + rect.x;\n            y = y * rect.height + rect.y;\n            y2 = y2 * rect.height + rect.y;\n        }\n\n        var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n\n        return canvasGradient;\n    }\n\n    function createRadialGradient(ctx, obj, rect) {\n        var width = rect.width;\n        var height = rect.height;\n        var min = Math.min(width, height);\n\n        var x = obj.x == null ? 0.5 : obj.x;\n        var y = obj.y == null ? 0.5 : obj.y;\n        var r = obj.r == null ? 0.5 : obj.r;\n        if (!obj.global) {\n            x = x * width + rect.x;\n            y = y * height + rect.y;\n            r = r * min;\n        }\n\n        var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n\n        return canvasGradient;\n    }\n\n\n    Style.prototype = {\n\n        constructor: Style,\n\n        /**\n         * @type {module:zrender/graphic/Displayable}\n         */\n        host: null,\n\n        /**\n         * @type {string}\n         */\n        fill: '#000000',\n\n        /**\n         * @type {string}\n         */\n        stroke: null,\n\n        /**\n         * @type {number}\n         */\n        opacity: 1,\n\n        /**\n         * @type {Array.<number>}\n         */\n        lineDash: null,\n\n        /**\n         * @type {number}\n         */\n        lineDashOffset: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetY: 0,\n\n        /**\n         * @type {number}\n         */\n        lineWidth: 1,\n\n        /**\n         * If stroke ignore scale\n         * @type {Boolean}\n         */\n        strokeNoScale: false,\n\n        // Bounding rect text configuration\n        // Not affected by element transform\n        /**\n         * @type {string}\n         */\n        text: null,\n\n        /**\n         * If `fontSize` or `fontFamily` exists, `font` will be reset by\n         * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n         * So do not visit it directly in upper application (like echarts),\n         * but use `contain/text#makeFont` instead.\n         * @type {string}\n         */\n        font: null,\n\n        /**\n         * The same as font. Use font please.\n         * @deprecated\n         * @type {string}\n         */\n        textFont: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * @type {string}\n         */\n        fontStyle: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * @type {string}\n         */\n        fontWeight: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * Should be 12 but not '12px'.\n         * @type {number}\n         */\n        fontSize: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * @type {string}\n         */\n        fontFamily: null,\n\n        /**\n         * Reserved for special functinality, like 'hr'.\n         * @type {string}\n         */\n        textTag: null,\n\n        /**\n         * @type {string}\n         */\n        textFill: '#000',\n\n        /**\n         * @type {string}\n         */\n        textStroke: null,\n\n        /**\n         * @type {number}\n         */\n        textWidth: null,\n\n        /**\n         * Only for textBackground.\n         * @type {number}\n         */\n        textHeight: null,\n\n        /**\n         * textStroke may be set as some color as a default\n         * value in upper applicaion, where the default value\n         * of textLineWidth should be 0 to make sure that\n         * user can choose to do not use text stroke.\n         * @type {number}\n         */\n        textLineWidth: 0,\n\n        /**\n         * @type {number}\n         */\n        textLineHeight: null,\n\n        /**\n         * 'inside', 'left', 'right', 'top', 'bottom'\n         * [x, y]\n         * Based on x, y of rect.\n         * @type {string|Array.<number>}\n         * @default 'inside'\n         */\n        textPosition: 'inside',\n\n        /**\n         * If not specified, use the boundingRect of a `displayable`.\n         * @type {Object}\n         */\n        textRect: null,\n\n        /**\n         * [x, y]\n         * @type {Array.<number>}\n         */\n        textOffset: null,\n\n        /**\n         * @type {string}\n         */\n        textAlign: null,\n\n        /**\n         * @type {string}\n         */\n        textVerticalAlign: null,\n\n        /**\n         * @type {number}\n         */\n        textDistance: 5,\n\n        /**\n         * @type {string}\n         */\n        textShadowColor: 'transparent',\n\n        /**\n         * @type {number}\n         */\n        textShadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        textShadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        textShadowOffsetY: 0,\n\n        /**\n         * @type {string}\n         */\n        textBoxShadowColor: 'transparent',\n\n        /**\n         * @type {number}\n         */\n        textBoxShadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        textBoxShadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        textBoxShadowOffsetY: 0,\n\n        /**\n         * Whether transform text.\n         * Only useful in Path and Image element\n         * @type {boolean}\n         */\n        transformText: false,\n\n        /**\n         * Text rotate around position of Path or Image\n         * Only useful in Path and Image element and transformText is false.\n         */\n        textRotation: 0,\n\n        /**\n         * Text origin of text rotation, like [10, 40].\n         * Based on x, y of rect.\n         * Useful in label rotation of circular symbol.\n         * By default, this origin is textPosition.\n         * Can be 'center'.\n         * @type {string|Array.<number>}\n         */\n        textOrigin: null,\n\n        /**\n         * @type {string}\n         */\n        textBackgroundColor: null,\n\n        /**\n         * @type {string}\n         */\n        textBorderColor: null,\n\n        /**\n         * @type {number}\n         */\n        textBorderWidth: 0,\n\n        /**\n         * @type {number}\n         */\n        textBorderRadius: 0,\n\n        /**\n         * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n         * @type {number|Array.<number>}\n         */\n        textPadding: null,\n\n        /**\n         * Text styles for rich text.\n         * @type {Object}\n         */\n        rich: null,\n\n        /**\n         * {outerWidth, outerHeight, ellipsis, placeholder}\n         * @type {Object}\n         */\n        truncate: null,\n\n        /**\n         * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n         * @type {string}\n         */\n        blend: null,\n\n        normalize: function () {\n            textHelper.normalizeTextStyle(this);\n        },\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        bind: function (ctx, el, prevEl) {\n            var style = this;\n            var prevStyle = prevEl && prevEl.style;\n            var firstDraw = !prevStyle;\n\n            for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n                var prop = STYLE_COMMON_PROPS[i];\n                var styleName = prop[0];\n\n                if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n                    // FIXME Invalid property value will cause style leak from previous element.\n                    ctx[styleName] = style[styleName] || prop[1];\n                }\n            }\n\n            if ((firstDraw || style.fill !== prevStyle.fill)) {\n                ctx.fillStyle = style.fill;\n            }\n            if ((firstDraw || style.stroke !== prevStyle.stroke)) {\n                ctx.strokeStyle = style.stroke;\n            }\n            if ((firstDraw || style.opacity !== prevStyle.opacity)) {\n                ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n            }\n\n            if ((firstDraw || style.blend !== prevStyle.blend)) {\n                ctx.globalCompositeOperation = style.blend || 'source-over';\n            }\n            if (this.hasStroke()) {\n                var lineWidth = style.lineWidth;\n                ctx.lineWidth = lineWidth / (\n                    (this.strokeNoScale && el && el.getLineScale) ? el.getLineScale() : 1\n                );\n            }\n        },\n\n        hasFill: function () {\n            var fill = this.fill;\n            return fill != null && fill !== 'none';\n        },\n\n        hasStroke: function () {\n            var stroke = this.stroke;\n            return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n        },\n\n        /**\n         * Extend from other style\n         * @param {zrender/graphic/Style} otherStyle\n         * @param {boolean} overwrite true: overwrirte any way.\n         *                            false: overwrite only when !target.hasOwnProperty\n         *                            others: overwrite when property is not null/undefined.\n         */\n        extendFrom: function (otherStyle, overwrite) {\n            if (otherStyle) {\n                for (var name in otherStyle) {\n                    if (otherStyle.hasOwnProperty(name)\n                        && (overwrite === true\n                            || (\n                                overwrite === false\n                                    ? !this.hasOwnProperty(name)\n                                    : otherStyle[name] != null\n                            )\n                        )\n                    ) {\n                        this[name] = otherStyle[name];\n                    }\n                }\n            }\n        },\n\n        /**\n         * Batch setting style with a given object\n         * @param {Object|string} obj\n         * @param {*} [obj]\n         */\n        set: function (obj, value) {\n            if (typeof obj === 'string') {\n                this[obj] = value;\n            }\n            else {\n                this.extendFrom(obj, true);\n            }\n        },\n\n        /**\n         * Clone\n         * @return {zrender/graphic/Style} [description]\n         */\n        clone: function () {\n            var newStyle = new this.constructor();\n            newStyle.extendFrom(this, true);\n            return newStyle;\n        },\n\n        getGradient: function (ctx, obj, rect) {\n            var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n            var canvasGradient = method(ctx, obj, rect);\n            var colorStops = obj.colorStops;\n            for (var i = 0; i < colorStops.length; i++) {\n                canvasGradient.addColorStop(\n                    colorStops[i].offset, colorStops[i].color\n                );\n            }\n            return canvasGradient;\n        }\n\n    };\n\n    var styleProto = Style.prototype;\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n        var prop = STYLE_COMMON_PROPS[i];\n        if (!(prop[0] in styleProto)) {\n            styleProto[prop[0]] = prop[1];\n        }\n    }\n\n    // Provide for others\n    Style.getGradient = styleProto.getGradient;\n\n    module.exports = Style;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Style.js\n// module id = 676\n// module chunks = 0 1 2","\n\n    var env = require('../../core/env');\n\n    // Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n    // where exception \"unexpected call to method or property access\"\n    // might be thrown when calling ctx.fill or ctx.stroke after a path\n    // whose area size is zero is drawn and ctx.clip() is called and\n    // shadowBlur is set. See #4572, #3112, #5777.\n    // (e.g.,\n    //  ctx.moveTo(10, 10);\n    //  ctx.lineTo(20, 10);\n    //  ctx.closePath();\n    //  ctx.clip();\n    //  ctx.shadowBlur = 10;\n    //  ...\n    //  ctx.fill();\n    // )\n\n    var shadowTemp = [\n        ['shadowBlur', 0],\n        ['shadowColor', '#000'],\n        ['shadowOffsetX', 0],\n        ['shadowOffsetY', 0]\n    ];\n\n    module.exports = function (orignalBrush) {\n\n        // version string can be: '11.0'\n        return (env.browser.ie && env.browser.version >= 11)\n\n            ? function () {\n                var clipPaths = this.__clipPaths;\n                var style = this.style;\n                var modified;\n\n                if (clipPaths) {\n                    for (var i = 0; i < clipPaths.length; i++) {\n                        var clipPath = clipPaths[i];\n                        var shape = clipPath && clipPath.shape;\n                        var type = clipPath && clipPath.type;\n\n                        if (shape && (\n                            (type === 'sector' && shape.startAngle === shape.endAngle)\n                            || (type === 'rect' && (!shape.width || !shape.height))\n                        )) {\n                            for (var j = 0; j < shadowTemp.length; j++) {\n                                // It is save to put shadowTemp static, because shadowTemp\n                                // will be all modified each item brush called.\n                                shadowTemp[j][2] = style[shadowTemp[j][0]];\n                                style[shadowTemp[j][0]] = shadowTemp[j][1];\n                            }\n                            modified = true;\n                            break;\n                        }\n                    }\n                }\n\n                orignalBrush.apply(this, arguments);\n\n                if (modified) {\n                    for (var j = 0; j < shadowTemp.length; j++) {\n                        style[shadowTemp[j][0]] = shadowTemp[j][2];\n                    }\n                }\n            }\n\n            : orignalBrush;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/fixClipWithShadow.js\n// module id = 677\n// module chunks = 0 1 2","\n\n    var smoothSpline = require('./smoothSpline');\n    var smoothBezier = require('./smoothBezier');\n\n    module.exports = {\n        buildPath: function (ctx, shape, closePath) {\n            var points = shape.points;\n            var smooth = shape.smooth;\n            if (points && points.length >= 2) {\n                if (smooth && smooth !== 'spline') {\n                    var controlPoints = smoothBezier(\n                        points, smooth, closePath, shape.smoothConstraint\n                    );\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    var len = points.length;\n                    for (var i = 0; i < (closePath ? len : len - 1); i++) {\n                        var cp1 = controlPoints[i * 2];\n                        var cp2 = controlPoints[i * 2 + 1];\n                        var p = points[(i + 1) % len];\n                        ctx.bezierCurveTo(\n                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\n                        );\n                    }\n                }\n                else {\n                    if (smooth === 'spline') {\n                        points = smoothSpline(points, closePath);\n                    }\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    for (var i = 1, l = points.length; i < l; i++) {\n                        ctx.lineTo(points[i][0], points[i][1]);\n                    }\n                }\n\n                closePath && ctx.closePath();\n            }\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/poly.js\n// module id = 678\n// module chunks = 0 1 2","\n\n    module.exports = {\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            var r = shape.r;\n            var r1;\n            var r2;\n            var r3;\n            var r4;\n\n            // Convert width and height to positive for better borderRadius\n            if (width < 0) {\n                x = x + width;\n                width = -width;\n            }\n            if (height < 0) {\n                y = y + height;\n                height = -height;\n            }\n\n            if (typeof r === 'number') {\n                r1 = r2 = r3 = r4 = r;\n            }\n            else if (r instanceof Array) {\n                if (r.length === 1) {\n                    r1 = r2 = r3 = r4 = r[0];\n                }\n                else if (r.length === 2) {\n                    r1 = r3 = r[0];\n                    r2 = r4 = r[1];\n                }\n                else if (r.length === 3) {\n                    r1 = r[0];\n                    r2 = r4 = r[1];\n                    r3 = r[2];\n                }\n                else {\n                    r1 = r[0];\n                    r2 = r[1];\n                    r3 = r[2];\n                    r4 = r[3];\n                }\n            }\n            else {\n                r1 = r2 = r3 = r4 = 0;\n            }\n\n            var total;\n            if (r1 + r2 > width) {\n                total = r1 + r2;\n                r1 *= width / total;\n                r2 *= width / total;\n            }\n            if (r3 + r4 > width) {\n                total = r3 + r4;\n                r3 *= width / total;\n                r4 *= width / total;\n            }\n            if (r2 + r3 > height) {\n                total = r2 + r3;\n                r2 *= height / total;\n                r3 *= height / total;\n            }\n            if (r1 + r4 > height) {\n                total = r1 + r4;\n                r1 *= height / total;\n                r4 *= height / total;\n            }\n            ctx.moveTo(x + r1, y);\n            ctx.lineTo(x + width - r2, y);\n            r2 !== 0 && ctx.quadraticCurveTo(\n                x + width, y, x + width, y + r2\n            );\n            ctx.lineTo(x + width, y + height - r3);\n            r3 !== 0 && ctx.quadraticCurveTo(\n                x + width, y + height, x + width - r3, y + height\n            );\n            ctx.lineTo(x + r4, y + height);\n            r4 !== 0 && ctx.quadraticCurveTo(\n                x, y + height, x, y + height - r4\n            );\n            ctx.lineTo(x, y + r1);\n            r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/roundRect.js\n// module id = 679\n// module chunks = 0 1 2","'use strict';\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\n\n\n    var matrix = require('../core/matrix');\n    var vector = require('../core/vector');\n    var mIdentity = matrix.identity;\n\n    var EPSILON = 5e-5;\n\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n\n    /**\n     * @alias module:zrender/mixin/Transformable\n     * @constructor\n     */\n    var Transformable = function (opts) {\n        opts = opts || {};\n        // If there are no given position, rotation, scale\n        if (!opts.position) {\n            /**\n             * 平移\n             * @type {Array.<number>}\n             * @default [0, 0]\n             */\n            this.position = [0, 0];\n        }\n        if (opts.rotation == null) {\n            /**\n             * 旋转\n             * @type {Array.<number>}\n             * @default 0\n             */\n            this.rotation = 0;\n        }\n        if (!opts.scale) {\n            /**\n             * 缩放\n             * @type {Array.<number>}\n             * @default [1, 1]\n             */\n            this.scale = [1, 1];\n        }\n        /**\n         * 旋转和缩放的原点\n         * @type {Array.<number>}\n         * @default null\n         */\n        this.origin = this.origin || null;\n    };\n\n    var transformableProto = Transformable.prototype;\n    transformableProto.transform = null;\n\n    /**\n     * 判断是否需要有坐标变换\n     * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n     */\n    transformableProto.needLocalTransform = function () {\n        return isNotAroundZero(this.rotation)\n            || isNotAroundZero(this.position[0])\n            || isNotAroundZero(this.position[1])\n            || isNotAroundZero(this.scale[0] - 1)\n            || isNotAroundZero(this.scale[1] - 1);\n    };\n\n    transformableProto.updateTransform = function () {\n        var parent = this.parent;\n        var parentHasTransform = parent && parent.transform;\n        var needLocalTransform = this.needLocalTransform();\n\n        var m = this.transform;\n        if (!(needLocalTransform || parentHasTransform)) {\n            m && mIdentity(m);\n            return;\n        }\n\n        m = m || matrix.create();\n\n        if (needLocalTransform) {\n            this.getLocalTransform(m);\n        }\n        else {\n            mIdentity(m);\n        }\n\n        // 应用父节点变换\n        if (parentHasTransform) {\n            if (needLocalTransform) {\n                matrix.mul(m, parent.transform, m);\n            }\n            else {\n                matrix.copy(m, parent.transform);\n            }\n        }\n        // 保存这个变换矩阵\n        this.transform = m;\n\n        this.invTransform = this.invTransform || matrix.create();\n        matrix.invert(this.invTransform, m);\n    };\n\n    transformableProto.getLocalTransform = function (m) {\n        return Transformable.getLocalTransform(this, m);\n    };\n\n    /**\n     * 将自己的transform应用到context上\n     * @param {CanvasRenderingContext2D} ctx\n     */\n    transformableProto.setTransform = function (ctx) {        \n        var m = this.transform;\n        var dpr = ctx.dpr || 1;\n        if (m) {\n            ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n        }\n        else {\n            ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n        }\n    };\n\n    transformableProto.restoreTransform = function (ctx) {\n        var dpr = ctx.dpr || 1;\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n    };\n\n    var tmpTransform = [];\n\n    /**\n     * 分解`transform`矩阵到`position`, `rotation`, `scale`\n     */\n    transformableProto.decomposeTransform = function () {\n        if (!this.transform) {\n            return;\n        }\n        var parent = this.parent;\n        var m = this.transform;\n        if (parent && parent.transform) {\n            // Get local transform and decompose them to position, scale, rotation\n            matrix.mul(tmpTransform, parent.invTransform, m);\n            m = tmpTransform;\n        }\n        var sx = m[0] * m[0] + m[1] * m[1];\n        var sy = m[2] * m[2] + m[3] * m[3];\n        var position = this.position;\n        var scale = this.scale;\n        if (isNotAroundZero(sx - 1)) {\n            sx = Math.sqrt(sx);\n        }\n        if (isNotAroundZero(sy - 1)) {\n            sy = Math.sqrt(sy);\n        }\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        position[0] = m[4];\n        position[1] = m[5];\n        scale[0] = sx;\n        scale[1] = sy;\n        this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n    };\n\n    /**\n     * Get global scale\n     * @return {Array.<number>}\n     */\n    transformableProto.getGlobalScale = function () {\n        var m = this.transform;\n        if (!m) {\n            return [1, 1];\n        }\n        var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        return [sx, sy];\n    };\n    /**\n     * 变换坐标位置到 shape 的局部坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToLocal = function (x, y) {\n        var v2 = [x, y];\n        var invTransform = this.invTransform;\n        if (invTransform) {\n            vector.applyTransform(v2, v2, invTransform);\n        }\n        return v2;\n    };\n\n    /**\n     * 变换局部坐标位置到全局坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToGlobal = function (x, y) {\n        var v2 = [x, y];\n        var transform = this.transform;\n        if (transform) {\n            vector.applyTransform(v2, v2, transform);\n        }\n        return v2;\n    };\n\n    /**\n     * @static\n     * @param {Object} target\n     * @param {Array.<number>} target.origin\n     * @param {number} target.rotation\n     * @param {Array.<number>} target.position\n     * @param {Array.<number>} [m]\n     */\n    Transformable.getLocalTransform = function (target, m) {\n        m = m || [];\n        mIdentity(m);\n\n        var origin = target.origin;\n        var scale = target.scale || [1, 1];\n        var rotation = target.rotation || 0;\n        var position = target.position || [0, 0];\n\n        if (origin) {\n            // Translate to origin\n            m[4] -= origin[0];\n            m[5] -= origin[1];\n        }\n        matrix.scale(m, m, scale);\n        if (rotation) {\n            matrix.rotate(m, m, rotation);\n        }\n        if (origin) {\n            // Translate back from origin\n            m[4] += origin[0];\n            m[5] += origin[1];\n        }\n\n        m[4] += position[0];\n        m[5] += position[1];\n\n        return m;\n    };\n\n    module.exports = Transformable;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Transformable.js\n// module id = 680\n// module chunks = 0 1 2","'use strict';\n\n\n    var graphic = require('../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n\n    require('../coord/cartesian/Grid');\n\n    require('./axis');\n\n    // Grid view\n    echarts.extendComponentView({\n\n        type: 'grid',\n\n        render: function (gridModel, ecModel) {\n            this.group.removeAll();\n            if (gridModel.get('show')) {\n                this.group.add(new graphic.Rect({\n                    shape: gridModel.coordinateSystem.getRect(),\n                    style: zrUtil.defaults({\n                        fill: gridModel.get('backgroundColor')\n                    }, gridModel.getItemStyle()),\n                    silent: true,\n                    z2: -1\n                }));\n            }\n        }\n\n    });\n\n    echarts.registerPreprocessor(function (option) {\n        // Only create grid when need\n        if (option.xAxis && option.yAxis && !option.grid) {\n            option.grid = {};\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/gridSimple.js\n// module id = 683\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var defaultOption = {\n        show: true,\n        zlevel: 0,                  // 一级层叠\n        z: 0,                       // 二级层叠\n        // 反向坐标轴\n        inverse: false,\n\n        // 坐标轴名字，默认为空\n        name: '',\n        // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n        nameLocation: 'end',\n        // 坐标轴名字旋转，degree。\n        nameRotate: null, // Adapt to axis rotate, when nameLocation is 'middle'.\n        nameTruncate: {\n            maxWidth: null,\n            ellipsis: '...',\n            placeholder: '.'\n        },\n        // 坐标轴文字样式，默认取全局样式\n        nameTextStyle: {},\n        // 文字与轴线距离\n        nameGap: 15,\n\n        silent: false, // Default false to support tooltip.\n        triggerEvent: false, // Default false to avoid legacy user event listener fail.\n\n        tooltip: {\n            show: false\n        },\n\n        axisPointer: {},\n\n        // 坐标轴线\n        axisLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            onZero: true,\n            onZeroAxisIndex: null,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                color: '#333',\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // 属性show控制显示与否，默认显示\n            show: true,\n            // 控制小标记是否在grid里\n            inside: false,\n            // 属性length控制线长\n            length: 5,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                width: 1\n            }\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            show: true,\n            // 控制文本标签是否在grid里\n            inside: false,\n            rotate: 0,\n            showMinLabel: null, // true | false | null (auto)\n            showMaxLabel: null, // true | false | null (auto)\n            margin: 8,\n            // formatter: null,\n            // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n            fontSize: 12\n        },\n        // 分隔线\n        splitLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            // 属性lineStyle（详见lineStyle）控制线条样式\n            lineStyle: {\n                color: ['#ccc'],\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 分隔区域\n        splitArea: {\n            // 默认不显示，属性show控制显示与否\n            show: false,\n            // 属性areaStyle（详见areaStyle）控制区域样式\n            areaStyle: {\n                color: ['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']\n            }\n        }\n    };\n\n    var categoryAxis = zrUtil.merge({\n        // 类目起始和结束两端空白策略\n        boundaryGap: true,\n        // splitArea: {\n            // show: false\n        // },\n        splitLine: {\n            show: false\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // If tick is align with label when boundaryGap is true\n            alignWithLabel: false,\n            interval: 'auto'\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            interval: 'auto'\n        }\n    }, defaultOption);\n\n    var valueAxis = zrUtil.merge({\n        // 数值起始和结束两端空白策略\n        boundaryGap: [0, 0],\n        // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n        // min: null,\n        // 最大值，设置成 'dataMax' 则从数据中计算最大值\n        // max: null,\n        // Readonly prop, specifies start value of the range when using data zoom.\n        // rangeStart: null\n        // Readonly prop, specifies end value of the range when using data zoom.\n        // rangeEnd: null\n        // 脱离0值比例，放大聚焦到最终_min，_max区间\n        // scale: false,\n        // 分割段数，默认为5\n        splitNumber: 5\n        // Minimum interval\n        // minInterval: null\n        // maxInterval: null\n    }, defaultOption);\n\n    // FIXME\n    var timeAxis = zrUtil.defaults({\n        scale: true,\n        min: 'dataMin',\n        max: 'dataMax'\n    }, valueAxis);\n\n    var logAxis = zrUtil.defaults({\n        scale: true,\n        logBase: 10\n    }, valueAxis);\n\n    module.exports = {\n        categoryAxis: categoryAxis,\n        valueAxis: valueAxis,\n        timeAxis: timeAxis,\n        logAxis: logAxis\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisDefault.js\n// module id = 684\n// module chunks = 0 1 2","/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\nvar factory = exports;\n\n    var layout = require('../../util/layout');\n    var axisHelper = require('../../coord/axisHelper');\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Cartesian2D = require('./Cartesian2D');\n    var Axis2D = require('./Axis2D');\n\n    var each = zrUtil.each;\n\n    var ifAxisCrossZero = axisHelper.ifAxisCrossZero;\n    var niceScaleExtent = axisHelper.niceScaleExtent;\n\n    // 依赖 GridModel, AxisModel 做预处理\n    require('./GridModel');\n\n    /**\n     * Check if the axis is used in the specified grid\n     * @inner\n     */\n    function isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n        return axisModel.getCoordSysModel() === gridModel;\n    }\n\n    function getLabelUnionRect(axis) {\n        var axisModel = axis.model;\n        var labels = axisModel.getFormattedLabels();\n        var axisLabelModel = axisModel.getModel('axisLabel');\n        var rect;\n        var step = 1;\n        var labelCount = labels.length;\n        if (labelCount > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.ceil(labelCount / 40);\n        }\n        for (var i = 0; i < labelCount; i += step) {\n            if (!axis.isLabelIgnored(i)) {\n                var singleRect = axisLabelModel.getTextRect(labels[i]);\n                // FIXME consider label rotate\n                rect ? rect.union(singleRect) : (rect = singleRect);\n            }\n        }\n        return rect;\n    }\n\n    function Grid(gridModel, ecModel, api) {\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n         * @private\n         */\n        this._coordsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n         * @private\n         */\n        this._coordsList = [];\n\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesList = [];\n\n        this._initCartesian(gridModel, ecModel, api);\n\n        this.model = gridModel;\n    }\n\n    var gridProto = Grid.prototype;\n\n    gridProto.type = 'grid';\n\n    gridProto.axisPointerEnabled = true;\n\n    gridProto.getRect = function () {\n        return this._rect;\n    };\n\n    gridProto.update = function (ecModel, api) {\n\n        var axesMap = this._axesMap;\n\n        this._updateScale(ecModel, this.model);\n\n        each(axesMap.x, function (xAxis) {\n            niceScaleExtent(xAxis.scale, xAxis.model);\n        });\n        each(axesMap.y, function (yAxis) {\n            niceScaleExtent(yAxis.scale, yAxis.model);\n        });\n        each(axesMap.x, function (xAxis) {\n            fixAxisOnZero(axesMap, 'y', xAxis);\n        });\n        each(axesMap.y, function (yAxis) {\n            fixAxisOnZero(axesMap, 'x', yAxis);\n        });\n\n        // Resize again if containLabel is enabled\n        // FIXME It may cause getting wrong grid size in data processing stage\n        this.resize(this.model, api);\n    };\n\n    function fixAxisOnZero(axesMap, otherAxisDim, axis) {\n        // onZero can not be enabled in these two situations:\n        // 1. When any other axis is a category axis.\n        // 2. When no axis is cross 0 point.\n        var axes = axesMap[otherAxisDim];\n\n        if (!axis.onZero) {\n            return;\n        }\n\n        var onZeroAxisIndex = axis.onZeroAxisIndex;\n\n        // If target axis is specified.\n        if (onZeroAxisIndex != null) {\n            var otherAxis = axes[onZeroAxisIndex];\n            if (otherAxis && canNotOnZeroToAxis(otherAxis)) {\n                axis.onZero = false;\n            }\n            return;\n        }\n\n        for (var idx in axes) {\n            if (axes.hasOwnProperty(idx)) {\n                var otherAxis = axes[idx];\n                if (otherAxis && !canNotOnZeroToAxis(otherAxis)) {\n                    onZeroAxisIndex = +idx;\n                    break;\n                }\n            }\n        }\n\n        if (onZeroAxisIndex == null) {\n            axis.onZero = false;\n        }\n        axis.onZeroAxisIndex = onZeroAxisIndex;\n    }\n\n    function canNotOnZeroToAxis(axis) {\n        return axis.type === 'category' || axis.type === 'time' || !ifAxisCrossZero(axis);\n    }\n\n    /**\n     * Resize the grid\n     * @param {module:echarts/coord/cartesian/GridModel} gridModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    gridProto.resize = function (gridModel, api, ignoreContainLabel) {\n\n        var gridRect = layout.getLayoutRect(\n            gridModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n\n        this._rect = gridRect;\n\n        var axesList = this._axesList;\n\n        adjustAxes();\n\n        // Minus label size\n        if (!ignoreContainLabel && gridModel.get('containLabel')) {\n            each(axesList, function (axis) {\n                if (!axis.model.get('axisLabel.inside')) {\n                    var labelUnionRect = getLabelUnionRect(axis);\n                    if (labelUnionRect) {\n                        var dim = axis.isHorizontal() ? 'height' : 'width';\n                        var margin = axis.model.get('axisLabel.margin');\n                        gridRect[dim] -= labelUnionRect[dim] + margin;\n                        if (axis.position === 'top') {\n                            gridRect.y += labelUnionRect.height + margin;\n                        }\n                        else if (axis.position === 'left')  {\n                            gridRect.x += labelUnionRect.width + margin;\n                        }\n                    }\n                }\n            });\n\n            adjustAxes();\n        }\n\n        function adjustAxes() {\n            each(axesList, function (axis) {\n                var isHorizontal = axis.isHorizontal();\n                var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n                var idx = axis.inverse ? 1 : 0;\n                axis.setExtent(extent[idx], extent[1 - idx]);\n                updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n            });\n        }\n    };\n\n    /**\n     * @param {string} axisType\n     * @param {number} [axisIndex]\n     */\n    gridProto.getAxis = function (axisType, axisIndex) {\n        var axesMapOnDim = this._axesMap[axisType];\n        if (axesMapOnDim != null) {\n            if (axisIndex == null) {\n                // Find first axis\n                for (var name in axesMapOnDim) {\n                    if (axesMapOnDim.hasOwnProperty(name)) {\n                        return axesMapOnDim[name];\n                    }\n                }\n            }\n            return axesMapOnDim[axisIndex];\n        }\n    };\n\n    /**\n     * @return {Array.<module:echarts/coord/Axis>}\n     */\n    gridProto.getAxes = function () {\n        return this._axesList.slice();\n    };\n\n    /**\n     * Usage:\n     *      grid.getCartesian(xAxisIndex, yAxisIndex);\n     *      grid.getCartesian(xAxisIndex);\n     *      grid.getCartesian(null, yAxisIndex);\n     *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n     *\n     * @param {number|Object} [xAxisIndex]\n     * @param {number} [yAxisIndex]\n     */\n    gridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n        if (xAxisIndex != null && yAxisIndex != null) {\n            var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n            return this._coordsMap[key];\n        }\n\n        if (zrUtil.isObject(xAxisIndex)) {\n            yAxisIndex = xAxisIndex.yAxisIndex;\n            xAxisIndex = xAxisIndex.xAxisIndex;\n        }\n        // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n        for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n            if (coordList[i].getAxis('x').index === xAxisIndex\n                || coordList[i].getAxis('y').index === yAxisIndex\n            ) {\n                return coordList[i];\n            }\n        }\n    };\n\n    gridProto.getCartesians = function () {\n        return this._coordsList.slice();\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertToPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.dataToPoint(value)\n            : target.axis\n            ? target.axis.toGlobalCoord(target.axis.dataToCoord(value))\n            : null;\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertFromPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.pointToData(value)\n            : target.axis\n            ? target.axis.coordToData(target.axis.toLocalCoord(value))\n            : null;\n    };\n\n    /**\n     * @inner\n     */\n    gridProto._findConvertTarget = function (ecModel, finder) {\n        var seriesModel = finder.seriesModel;\n        var xAxisModel = finder.xAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('xAxis')[0]);\n        var yAxisModel = finder.yAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('yAxis')[0]);\n        var gridModel = finder.gridModel;\n        var coordsList = this._coordsList;\n        var cartesian;\n        var axis;\n\n        if (seriesModel) {\n            cartesian = seriesModel.coordinateSystem;\n            zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n        }\n        else if (xAxisModel && yAxisModel) {\n            cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n        }\n        else if (xAxisModel) {\n            axis = this.getAxis('x', xAxisModel.componentIndex);\n        }\n        else if (yAxisModel) {\n            axis = this.getAxis('y', yAxisModel.componentIndex);\n        }\n        // Lowest priority.\n        else if (gridModel) {\n            var grid = gridModel.coordinateSystem;\n            if (grid === this) {\n                cartesian = this._coordsList[0];\n            }\n        }\n\n        return {cartesian: cartesian, axis: axis};\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.containPoint = function (point) {\n        var coord = this._coordsList[0];\n        if (coord) {\n            return coord.containPoint(point);\n        }\n    };\n\n    /**\n     * Initialize cartesian coordinate systems\n     * @private\n     */\n    gridProto._initCartesian = function (gridModel, ecModel, api) {\n        var axisPositionUsed = {\n            left: false,\n            right: false,\n            top: false,\n            bottom: false\n        };\n\n        var axesMap = {\n            x: {},\n            y: {}\n        };\n        var axesCount = {\n            x: 0,\n            y: 0\n        };\n\n        /// Create axis\n        ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n        ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n        if (!axesCount.x || !axesCount.y) {\n            // Roll back when there no either x or y axis\n            this._axesMap = {};\n            this._axesList = [];\n            return;\n        }\n\n        this._axesMap = axesMap;\n\n        /// Create cartesian2d\n        each(axesMap.x, function (xAxis, xAxisIndex) {\n            each(axesMap.y, function (yAxis, yAxisIndex) {\n                var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n                var cartesian = new Cartesian2D(key);\n\n                cartesian.grid = this;\n                cartesian.model = gridModel;\n\n                this._coordsMap[key] = cartesian;\n                this._coordsList.push(cartesian);\n\n                cartesian.addAxis(xAxis);\n                cartesian.addAxis(yAxis);\n            }, this);\n        }, this);\n\n        function createAxisCreator(axisType) {\n            return function (axisModel, idx) {\n                if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n                    return;\n                }\n\n                var axisPosition = axisModel.get('position');\n                if (axisType === 'x') {\n                    // Fix position\n                    if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n                        // Default bottom of X\n                        axisPosition = 'bottom';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n                        }\n                    }\n                }\n                else {\n                    // Fix position\n                    if (axisPosition !== 'left' && axisPosition !== 'right') {\n                        // Default left of Y\n                        axisPosition = 'left';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n                        }\n                    }\n                }\n                axisPositionUsed[axisPosition] = true;\n\n                var axis = new Axis2D(\n                    axisType, axisHelper.createScaleByModel(axisModel),\n                    [0, 0],\n                    axisModel.get('type'),\n                    axisPosition\n                );\n\n                var isCategory = axis.type === 'category';\n                axis.onBand = isCategory && axisModel.get('boundaryGap');\n                axis.inverse = axisModel.get('inverse');\n\n                axis.onZero = axisModel.get('axisLine.onZero');\n                axis.onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex');\n\n                // Inject axis into axisModel\n                axisModel.axis = axis;\n\n                // Inject axisModel into axis\n                axis.model = axisModel;\n\n                // Inject grid info axis\n                axis.grid = this;\n\n                // Index of axis, can be used as key\n                axis.index = idx;\n\n                this._axesList.push(axis);\n\n                axesMap[axisType][idx] = axis;\n                axesCount[axisType]++;\n            };\n        }\n    };\n\n    /**\n     * Update cartesian properties from series\n     * @param  {module:echarts/model/Option} option\n     * @private\n     */\n    gridProto._updateScale = function (ecModel, gridModel) {\n        // Reset scale\n        zrUtil.each(this._axesList, function (axis) {\n            axis.scale.setExtent(Infinity, -Infinity);\n        });\n        ecModel.eachSeries(function (seriesModel) {\n            if (isCartesian2D(seriesModel)) {\n                var axesModels = findAxesModels(seriesModel, ecModel);\n                var xAxisModel = axesModels[0];\n                var yAxisModel = axesModels[1];\n\n                if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel)\n                    || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)\n                 ) {\n                    return;\n                }\n\n                var cartesian = this.getCartesian(\n                    xAxisModel.componentIndex, yAxisModel.componentIndex\n                );\n                var data = seriesModel.getData();\n                var xAxis = cartesian.getAxis('x');\n                var yAxis = cartesian.getAxis('y');\n\n                if (data.type === 'list') {\n                    unionExtent(data, xAxis, seriesModel);\n                    unionExtent(data, yAxis, seriesModel);\n                }\n            }\n        }, this);\n\n        function unionExtent(data, axis, seriesModel) {\n            each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n                axis.scale.unionExtentFromData(data, dim);\n            });\n        }\n    };\n\n    /**\n     * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n     * @return {Object} {baseAxes: [], otherAxes: []}\n     */\n    gridProto.getTooltipAxes = function (dim) {\n        var baseAxes = [];\n        var otherAxes = [];\n\n        each(this.getCartesians(), function (cartesian) {\n            var baseAxis = (dim != null && dim !== 'auto')\n                ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n            var otherAxis = cartesian.getOtherAxis(baseAxis);\n            zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n            zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n        });\n\n        return {baseAxes: baseAxes, otherAxes: otherAxes};\n    };\n\n    /**\n     * @inner\n     */\n    function updateAxisTransfrom(axis, coordBase) {\n        var axisExtent = axis.getExtent();\n        var axisExtentSum = axisExtent[0] + axisExtent[1];\n\n        // Fast transform\n        axis.toGlobalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord + coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n        axis.toLocalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord - coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n    }\n\n    var axesTypes = ['xAxis', 'yAxis'];\n    /**\n     * @inner\n     */\n    function findAxesModels(seriesModel, ecModel) {\n        return zrUtil.map(axesTypes, function (axisType) {\n            var axisModel = seriesModel.getReferringComponents(axisType)[0];\n\n            if (__DEV__) {\n                if (!axisModel) {\n                    throw new Error(axisType + ' \"' + zrUtil.retrieve(\n                        seriesModel.get(axisType + 'Index'),\n                        seriesModel.get(axisType + 'Id'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n            return axisModel;\n        });\n    }\n\n    /**\n     * @inner\n     */\n    function isCartesian2D(seriesModel) {\n        return seriesModel.get('coordinateSystem') === 'cartesian2d';\n    }\n\n    Grid.create = function (ecModel, api) {\n        var grids = [];\n        ecModel.eachComponent('grid', function (gridModel, idx) {\n            var grid = new Grid(gridModel, ecModel, api);\n            grid.name = 'grid_' + idx;\n            // dataSampling requires axis extent, so resize\n            // should be performed in create stage.\n            grid.resize(gridModel, api, true);\n\n            gridModel.coordinateSystem = grid;\n\n            grids.push(grid);\n        });\n\n        // Inject the coordinateSystems into seriesModel\n        ecModel.eachSeries(function (seriesModel) {\n            if (!isCartesian2D(seriesModel)) {\n                return;\n            }\n\n            var axesModels = findAxesModels(seriesModel, ecModel);\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            var gridModel = xAxisModel.getCoordSysModel();\n\n            if (__DEV__) {\n                if (!gridModel) {\n                    throw new Error(\n                        'Grid \"' + zrUtil.retrieve(\n                            xAxisModel.get('gridIndex'),\n                            xAxisModel.get('gridId'),\n                            0\n                        ) + '\" not found'\n                    );\n                }\n                if (xAxisModel.getCoordSysModel() !== yAxisModel.getCoordSysModel()) {\n                    throw new Error('xAxis and yAxis must use the same grid');\n                }\n            }\n\n            var grid = gridModel.coordinateSystem;\n\n            seriesModel.coordinateSystem = grid.getCartesian(\n                xAxisModel.componentIndex, yAxisModel.componentIndex\n            );\n        });\n\n        return grids;\n    };\n\n    // For deciding which dimensions to use when creating list data\n    Grid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\n\n    require('../../CoordinateSystem').register('cartesian2d', Grid);\n\n    module.exports = Grid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Grid.js\n// module id = 685\n// module chunks = 0 1 2","\n    module.exports = function (seriesType, ecModel) {\n        var legendModels = ecModel.findComponents({\n            mainType: 'legend'\n        });\n        if (!legendModels || !legendModels.length) {\n            return;\n        }\n        ecModel.eachSeriesByType(seriesType, function (series) {\n            var data = series.getData();\n            data.filterSelf(function (idx) {\n                var name = data.getName(idx);\n                // If in any legend component the status is not selected.\n                for (var i = 0; i < legendModels.length; i++) {\n                    if (!legendModels[i].isSelected(name)) {\n                        return false;\n                    }\n                }\n                return true;\n            }, this);\n        }, this);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/processor/dataFilter.js\n// module id = 686\n// module chunks = 0 1","// Pick color from palette for each data item.\n// Applicable for charts that require applying color palette\n// in data level (like pie, funnel, chord).\n\n\n    module.exports = function (seriesType, ecModel) {\n        // Pie and funnel may use diferrent scope\n        var paletteScope = {};\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var dataAll = seriesModel.getRawData();\n            var idxMap = {};\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                var data = seriesModel.getData();\n                data.each(function (idx) {\n                    var rawIdx = data.getRawIndex(idx);\n                    idxMap[rawIdx] = idx;\n                });\n                dataAll.each(function (rawIdx) {\n                    var filteredIdx = idxMap[rawIdx];\n\n                    // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n                    var singleDataColor = filteredIdx != null\n                        && data.getItemVisual(filteredIdx, 'color', true);\n\n                    if (!singleDataColor) {\n                        // FIXME Performance\n                        var itemModel = dataAll.getItemModel(rawIdx);\n                        var color = itemModel.get('itemStyle.normal.color')\n                            || seriesModel.getColorFromPalette(dataAll.getName(rawIdx), paletteScope);\n                        // Legend may use the visual info in data before processed\n                        dataAll.setItemVisual(rawIdx, 'color', color);\n\n                        // Data is not filtered\n                        if (filteredIdx != null) {\n                            data.setItemVisual(filteredIdx, 'color', color);\n                        }\n                    }\n                    else {\n                        // Set data all color for legend\n                        dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n                    }\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/visual/dataColor.js\n// module id = 687\n// module chunks = 0 1","\n\n    module.exports = function (seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n\n        // Encoding visual for all series include which is filtered for legend drawing\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n\n            var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n            var symbolSize = seriesModel.get('symbolSize');\n\n            data.setVisual({\n                legendSymbol: legendSymbol || symbolType,\n                symbol: symbolType,\n                symbolSize: symbolSize\n            });\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof symbolSize === 'function') {\n                    data.each(function (idx) {\n                        var rawValue = seriesModel.getRawValue(idx);\n                        // FIXME\n                        var params = seriesModel.getDataParams(idx);\n                        data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n                    });\n                }\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var itemSymbolType = itemModel.getShallow('symbol', true);\n                    var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n                    // If has item symbol\n                    if (itemSymbolType != null) {\n                        data.setItemVisual(idx, 'symbol', itemSymbolType);\n                    }\n                    if (itemSymbolSize != null) {\n                        // PENDING Transform symbolSize ?\n                        data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n                    }\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/visual/symbol.js\n// module id = 688\n// module chunks = 0 1 2","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Icon from '../icon'\nimport Picker from './datetimepicker'\nimport Group from '../group'\nimport InlineDesc from '../inline-desc'\nimport Uuid from '../../mixins/uuid'\nimport format from '../../tools/date/format'\n\nexport default {\n  name: 'datetime',\n  mixins: [Uuid],\n  components: {\n    Group,\n    InlineDesc,\n    Icon\n  },\n  props: {\n    format: {\n      type: String,\n      default: 'YYYY-MM-DD'\n    },\n    title: String,\n    value: {\n      type: String,\n      default: ''\n    },\n    inlineDesc: String,\n    placeholder: String,\n    minYear: Number,\n    maxYear: Number,\n    confirmText: String,\n    cancelText: String,\n    clearText: String,\n    yearRow: {\n      type: String,\n      default: '{value}'\n    },\n    monthRow: {\n      type: String,\n      default: '{value}'\n    },\n    dayRow: {\n      type: String,\n      default: '{value}'\n    },\n    hourRow: {\n      type: String,\n      default: '{value}'\n    },\n    minuteRow: {\n      type: String,\n      default: '{value}'\n    },\n    required: {\n      type: Boolean,\n      default: false\n    },\n    minHour: {\n      type: Number,\n      default: 0\n    },\n    maxHour: {\n      type: Number,\n      default: 23\n    },\n    startDate: String,\n    endDate: String,\n    valueTextAlign: String,\n    displayFormat: Function,\n    readonly: Boolean,\n    hourList: Array,\n    minuteList: Array,\n    show: Boolean,\n    defaultSelectedValue: String\n  },\n  created () {\n    this.isFirstSetValue = false\n    this.currentValue = this.value\n  },\n  data () {\n    return {\n      currentValue: null,\n      valid: true,\n      errors: {}\n    }\n  },\n  mounted () {\n    const uuid = this.uuid\n    this.$el.setAttribute('id', `vux-datetime-${uuid}`)\n    if (!this.readonly) {\n      this.$nextTick(() => {\n        this.render()\n      })\n    }\n  },\n  computed: {\n    _value () {\n      if (!this.currentValue) {\n        return this.placeholder || ''\n      } else {\n        return this.displayFormat ? this.displayFormat(this.currentValue) : this.currentValue\n      }\n    },\n    pickerOptions () {\n      const _this = this\n      const options = {\n        trigger: '#vux-datetime-' + this.uuid,\n        format: this.format,\n        value: this.currentValue,\n        output: '.vux-datetime-value',\n        confirmText: _this.getButtonText('confirm'),\n        cancelText: _this.getButtonText('cancel'),\n        clearText: _this.clearText,\n        yearRow: this.yearRow,\n        monthRow: this.monthRow,\n        dayRow: this.dayRow,\n        hourRow: this.hourRow,\n        minuteRow: this.minuteRow,\n        minHour: this.minHour,\n        maxHour: this.maxHour,\n        startDate: this.startDate,\n        endDate: this.endDate,\n        hourList: this.hourList,\n        minuteList: this.minuteList,\n        defaultSelectedValue: this.defaultSelectedValue,\n        onSelect (type, val, wholeValue) {\n          if (_this.picker && _this.picker.config.renderInline) {\n            _this.$emit('input', wholeValue)\n            _this.$emit('on-change', wholeValue)\n          }\n        },\n        onConfirm (value) {\n          _this.currentValue = value\n        },\n        onClear (value) {\n          _this.$emit('on-clear', value)\n        },\n        onHide () {\n          _this.$emit('update:show', false)\n          _this.validate()\n          _this.$emit('on-hide')\n        },\n        onShow () {\n          _this.$emit('update:show', true)\n          _this.$emit('on-show')\n        }\n      }\n      if (this.minYear) {\n        options.minYear = this.minYear\n      }\n      if (this.maxYear) {\n        options.maxYear = this.maxYear\n      }\n      return options\n    },\n    firstError () {\n      let key = Object.keys(this.errors)[0]\n      return this.errors[key]\n    }\n  },\n  methods: {\n    getButtonText (type) {\n      if (type === 'cancel' && this.cancelText) {\n        return this.cancelText\n      } else if (type === 'confirm' && this.confirmText) {\n        return this.confirmText\n      }\n      return this.$el.getAttribute(`data-${type}-text`)\n    },\n    render () {\n      this.$nextTick(() => {\n        this.picker && this.picker.destroy()\n        this.picker = new Picker(this.pickerOptions)\n      })\n    },\n    validate () {\n      if (!this.currentValue && this.required) {\n        this.valid = false\n        this.errors.required = '必填'\n        return\n      }\n      this.valid = true\n      this.errors = {}\n    }\n  },\n  watch: {\n    readonly (val) {\n      if (val) {\n        this.picker && this.picker.destroy()\n      } else {\n        this.render()\n      }\n    },\n    show (val) {\n      if (val) {\n        this.picker && this.picker.show(this.currentValue)\n      }\n    },\n    currentValue (val, oldVal) {\n      this.$emit('input', val)\n      if (!this.isFirstSetValue) {\n        this.isFirstSetValue = true\n        oldVal && this.$emit('on-change', val)\n      } else {\n        this.$emit('on-change', val)\n      }\n      this.validate()\n    },\n    startDate () {\n      this.render()\n    },\n    endDate () {\n      this.render()\n    },\n    format (val) {\n      if (this.currentValue) {\n        this.currentValue = format(this.currentValue, val)\n      }\n      this.render()\n    },\n    value (val) {\n      // do not force render when renderInline is true\n      if (this.picker && this.picker.config.renderInline) {\n        this.currentValue = val\n        return\n      }\n      if (this.currentValue !== val) {\n        this.currentValue = val\n        this.render()\n      }\n    }\n  },\n  beforeDestroy () {\n    this.picker && this.picker.destroy()\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/vux/src/components/datetime/index.vue","\nimport Datetime from 'vux/src/components/datetime/index.vue'\nimport Group from 'vux/src/components/group/index.vue'\n\n\nexport default {\nname: 'date-range',\nmixins: [],\nprops: {\nstartTime: {\ntype: String,\ndefault: ''\n},\nendTime: {\ntype: String,\ndefault: ''\n}\n},\ndata () {\nreturn {\ndateStartTime: '',\ndateEndTime: ''\n}\n},\ncomputed: {\n},\ncomponents: {\nGroup,\nDatetime\n},\nwatch: {},\nmethods: {\nsetStartTime () {\n\nthis.$emit('changeDate', {\ndateStartTime: this.dateStartTime,\ndateEndTime: this.dateEndTime\n})\n},\nsetEndTime () {\n\nthis.$emit('changeDate', {\ndateStartTime: this.dateStartTime,\ndateEndTime: this.dateEndTime\n})\n},\ncheckTime () {\nif (Date.parse(this.dateStartTime) >= Date.parse(this.dateEndTime)) {\nthis.$vux.toast.show({\ntext: '起始时间必须小于结束时间',\ntime: 1000,\ntype: 'warn'\n})\nreturn false\n}\nreturn true\n}\n},\ncreated () {\nthis.dateStartTime = this.startTime\nthis.dateEndTime = this.endTime\n},\nmounted () {\n}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/base/date-range/date-range.vue","import Scroller from '../picker/scroller'\nimport { each, trimZero, addZero, getMaxDay, parseRow, parseDate, getElement, toElement, removeElement } from './util'\nimport { getYears, getMonths, getDays } from './makeData'\n\nconst MASK_TEMPLATE = '<div class=\"dp-mask\"></div>'\n\nconst TEMPLATE = `<div class=\"dp-container\">\n  <div class=\"dp-header\">\n    <div class=\"dp-item dp-left vux-datetime-cancel\" data-role=\"cancel\">cancel</div>\n    <div class=\"dp-item vux-datetime-clear\" data-role=\"clear\"></div>\n    <div class=\"dp-item dp-right vux-datetime-confirm\" data-role=\"confirm\">ok</div>\n  </div>\n  <div class=\"dp-content\">\n    <div class=\"dp-item\" data-role=\"year\"></div>\n    <div class=\"dp-item\" data-role=\"month\"></div>\n    <div class=\"dp-item\" data-role=\"day\"></div>\n    <div class=\"dp-item\" data-role=\"hour\"></div>\n    <div class=\"dp-item\" data-role=\"minute\"></div>\n  </div>\n</div>`\n\nconst SHOW_ANIMATION_TIME = 100 // ms\nconst SHOW_CONTAINER_TIME = 300\n\nconst TYPE_MAP = {\n  year: ['YYYY'],\n  month: ['MM', 'M'],\n  day: ['DD', 'D'],\n  hour: ['HH', 'H'],\n  minute: ['mm', 'm']\n}\n\nlet MASK = null\n\nlet CURRENT_PICKER\n\nconst NOW = new Date()\n\nconst DEFAULT_CONFIG = {\n  template: TEMPLATE,\n  trigger: null,\n  output: null,\n  currentYear: NOW.getFullYear(),\n  currentMonth: NOW.getMonth() + 1,\n  minYear: 2000,\n  maxYear: 2030,\n  minHour: 0,\n  maxHour: 23,\n  hourList: null,\n  minuteList: null,\n  startDate: null,\n  endDate: null,\n  yearRow: '{value}',\n  monthRow: '{value}',\n  dayRow: '{value}',\n  hourRow: '{value}',\n  minuteRow: '{value}',\n  format: 'YYYY-MM-DD',\n  value: NOW.getFullYear() + '-' + (NOW.getMonth() + 1) + '-' + NOW.getDate(),\n  onSelect () {},\n  onConfirm () {},\n  onClear () {},\n  onShow () {},\n  onHide () {},\n  confirmText: 'ok',\n  clearText: '',\n  cancelText: 'cancel',\n  destroyOnHide: false,\n  renderInline: false\n}\n\nfunction renderScroller (el, data, value, fn) {\n  data = data.map(one => {\n    one.value = one.value + ''\n    return one\n  })\n  return new Scroller(el, {\n    data,\n    defaultValue: value + '',\n    onSelect: fn\n  })\n}\n\nfunction showMask () {\n  if (!MASK) {\n    MASK = toElement(MASK_TEMPLATE)\n    document.body.appendChild(MASK)\n\n    MASK.addEventListener('click', function () {\n      CURRENT_PICKER && CURRENT_PICKER.hide()\n    }, false)\n  }\n\n  MASK.style.display = 'block'\n\n  setTimeout(function () {\n    MASK && (MASK.style.opacity = 0.5)\n  }, 0)\n}\n\nfunction hideMask () {\n  if (!MASK) {\n    return\n  }\n\n  MASK.style.opacity = 0\n\n  setTimeout(function () {\n    MASK && (MASK.style.display = 'none')\n  }, SHOW_ANIMATION_TIME)\n}\n\nfunction DatetimePicker (config) {\n  const self = this\n  self.config = {}\n  self.value = config.value || ''\n  each(DEFAULT_CONFIG, function (key, val) {\n    self.config[key] = config[key] || val\n  })\n\n  this.renderInline = self.config.renderInline\n\n  if (config.defaultSelectedValue && !config.value) {\n    self.config.value = config.defaultSelectedValue\n  }\n\n  if (typeof this.config.startDate === 'string') {\n    this.config.startDate = new Date(this.config.startDate.replace(/-/g, '/'))\n  }\n\n  if (typeof this.config.endDate === 'string') {\n    this.config.endDate = new Date(this.config.endDate.replace(/-/g, '/'))\n  }\n\n  if (this.config.startDate && !this.config.endDate) {\n    this.config.endDate = new Date('2030-12-31')\n  }\n\n  this.reMakeData = !!this.config.startDate && !!this.config.endDate\n\n  if (!this.renderInline) {\n    let trigger = self.config.trigger\n\n    this.triggerHandler = function (e) {\n      e.preventDefault()\n      self.show(self.value)\n    }\n    if (trigger) {\n      trigger = self.trigger = getElement(trigger)\n      this.trigger = trigger\n      this.trigger.addEventListener('click', this.triggerHandler, false)\n    }\n  }\n}\n\nDatetimePicker.prototype = {\n\n  _show (newValueMap) {\n    const self = this\n\n    self.container.style.display = 'block'\n\n    if (this.renderInline) {\n      self.container.classList.add('vux-datetime-view')\n    }\n\n    each(TYPE_MAP, function (type) {\n      self[type + 'Scroller'] && self[type + 'Scroller'].select(trimZero(newValueMap[type]), false)\n    })\n\n    setTimeout(function () {\n      self.container.style['-webkit-transform'] = 'translateY(0)'\n      self.container.style.transform = 'translateY(0)'\n    }, 0)\n  },\n  show (value) {\n    const self = this\n    const config = self.config\n    CURRENT_PICKER = self\n    const valueMap = self.valueMap = parseDate(config.format, value || config.value)\n    let newValueMap = {}\n\n    each(TYPE_MAP, function (type, list) {\n      newValueMap[type] = list.length === 1 ? valueMap[list[0]] : (valueMap[list[0]] || valueMap[list[1]])\n    })\n\n    if (self.container) {\n      self._show(newValueMap)\n    } else {\n      const container = self.container = toElement(config.template)\n      if (!self.renderInline) {\n        document.body.appendChild(container)\n\n        self.container.style.display = 'block'\n      } else {\n        document.querySelector(self.config.trigger).appendChild(container)\n      }\n\n      each(TYPE_MAP, function (type) {\n        const div = self.find('[data-role=' + type + ']')\n        if (newValueMap[type] === undefined) {\n          removeElement(div)\n          return\n        }\n        let data\n        if (type === 'day') {\n          data = self._makeData(type, trimZero(newValueMap.year), trimZero(newValueMap.month))\n        } else {\n          data = self._makeData(type)\n        }\n\n        self[type + 'Scroller'] = renderScroller(div, data, trimZero(newValueMap[type]), function (currentValue) {\n          config.onSelect.call(self, type, currentValue, self.getValue())\n          let currentDay\n          if (type === 'year') {\n            const currentMonth = self.monthScroller ? self.monthScroller.value : config.currentMonth\n            self._setMonthScroller(currentValue, currentMonth)\n            if (self.dayScroller) {\n              currentDay = self.dayScroller.value\n              self._setDayScroller(currentValue, currentMonth, currentDay)\n            }\n          } else if (type === 'month') {\n            const currentYear = self.yearScroller ? self.yearScroller.value : config.currentYear\n            if (self.dayScroller) {\n              currentDay = self.dayScroller.value\n              self._setDayScroller(currentYear, currentValue, currentDay)\n            }\n          }\n        })\n      })\n\n      if (!self.renderText && !self.renderInline) {\n        if (self.config.confirmText) {\n          self.find('[data-role=confirm]').innerText = self.config.confirmText\n        }\n\n        if (self.config.cancelText) {\n          self.find('[data-role=cancel]').innerText = self.config.cancelText\n        }\n        if (self.config.clearText) {\n          self.find('[data-role=clear]').innerText = self.config.clearText\n        }\n        self.renderText = true\n      }\n\n      this._show(newValueMap)\n\n      self.find('[data-role=cancel]').addEventListener('click', function (e) {\n        e.preventDefault()\n        self.hide()\n      }, false)\n\n      self.find('[data-role=confirm]').addEventListener('click', function (e) {\n        e.preventDefault()\n        self.confirm()\n      }, false)\n\n      if (self.config.clearText) {\n        self.find('[data-role=clear]').addEventListener('click', function (e) {\n          e.preventDefault()\n          self.clear()\n        }, false)\n      }\n    }\n\n    if (!this.renderInline) {\n      showMask()\n      config.onShow.call(self)\n    }\n  },\n\n  _makeData (type, year, month) {\n    const config = this.config\n    const valueMap = this.valueMap\n    const list = TYPE_MAP[type]\n    let data = []\n    let min\n    let max\n\n    if (type === 'year') {\n      min = config.minYear\n      max = config.maxYear\n      if (this.reMakeData) {\n        const { minYear, maxYear } = getYears(this.config.startDate, this.config.endDate)\n        min = minYear\n        max = maxYear\n      }\n    } else if (type === 'month') {\n      min = 1\n      max = 12\n      if (this.reMakeData) {\n        const { minMonth, maxMonth } = getMonths(this.config.startDate, this.config.endDate, this.yearScroller.value * 1)\n        min = Math.max(min, minMonth)\n        max = Math.min(max, maxMonth)\n      }\n    } else if (type === 'day') {\n      min = 1\n      max = getMaxDay(year, month)\n      if (this.reMakeData) {\n        const { minDay, maxDay } = getDays(this.config.startDate, this.config.endDate, this.yearScroller.value * 1, this.monthScroller.value * 1)\n        min = Math.max(min, minDay)\n        max = Math.min(max, maxDay)\n      }\n    } else if (type === 'hour') {\n      min = this.config.minHour\n      max = this.config.maxHour\n    } else if (type === 'minute') {\n      min = 0\n      max = 59\n    }\n    for (let i = min; i <= max; i++) {\n      let name\n      if (type === 'year') {\n        name = parseRow(config.yearRow, i)\n      } else {\n        const val = valueMap[list[0]] ? addZero(i) : i\n        name = parseRow(config[type + 'Row'], val)\n      }\n      data.push({\n        name: name,\n        value: i\n      })\n    }\n    if (type === 'hour' && this.config.hourList) {\n      data = this.config.hourList.map(hour => {\n        return {\n          name: parseRow(config['hourRow'], hour),\n          value: addZero(hour)\n        }\n      })\n    }\n    if (type === 'minute' && this.config.minuteList) {\n      data = this.config.minuteList.map(minute => {\n        return {\n          name: parseRow(config['minuteRow'], minute),\n          value: addZero(minute)\n        }\n      })\n    }\n    return data\n  },\n\n  // after year change\n  _setMonthScroller (currentValue, month) {\n    const self = this\n    this.monthScroller.destroy()\n    const div = self.find('[data-role=month]')\n    self.monthScroller = renderScroller(div, self._makeData('month'), month, function (currentValue) {\n      self.config.onSelect.call(self, 'month', currentValue, self.getValue())\n      const currentYear = self.yearScroller ? self.yearScroller.value : self.config.currentYear\n      if (self.dayScroller) {\n        const currentDay = self.dayScroller.value\n        self._setDayScroller(currentYear, currentValue, currentDay)\n      }\n    })\n  },\n\n  _setDayScroller (year, month, day) {\n    const self = this\n    const maxDay = getMaxDay(year, month)\n    if (day > maxDay) {\n      day = maxDay\n    }\n    self.dayScroller.destroy()\n    const div = self.find('[data-role=day]')\n    self.dayScroller = renderScroller(div, self._makeData('day', year, month), day, function (currentValue) {\n      self.config.onSelect.call(self, 'day', currentValue, self.getValue())\n    })\n  },\n\n  find (selector) {\n    return this.container.querySelector(selector)\n  },\n\n  hide () {\n    if (!this.container) {\n      return\n    }\n    const self = this\n    self.container.style.removeProperty('transform')\n    self.container.style.removeProperty('-webkit-transform')\n\n    setTimeout(function () {\n      self.container && (self.container.style.display = 'none')\n    }, SHOW_CONTAINER_TIME)\n\n    hideMask()\n\n    self.config.onHide.call(self)\n    if (self.config.destroyOnHide) {\n      setTimeout(() => {\n        self.destroy()\n      }, 500)\n    }\n  },\n\n  select (type, value) {\n    this[type + 'Scroller'].select(value, false)\n  },\n\n  destroy () {\n    const self = this\n    this.trigger && this.trigger.removeEventListener('click', this.triggerHandler, false)\n    removeElement(MASK)\n    removeElement(self.container)\n    MASK = null\n    self.container = null\n  },\n\n  getValue () {\n    const self = this\n    const config = self.config\n\n    let value = config.format\n\n    function formatValue (scroller, expr1, expr2) {\n      if (scroller) {\n        const val = scroller.value\n        if (expr1) {\n          value = value.replace(new RegExp(expr1, 'g'), addZero(val))\n        }\n        if (expr2) {\n          value = value.replace(new RegExp(expr2, 'g'), trimZero(val))\n        }\n      }\n    }\n\n    each(TYPE_MAP, function (key, list) {\n      formatValue(self[key + 'Scroller'], list[0], list[1])\n    })\n\n    return value\n  },\n\n  confirm () {\n    const value = this.getValue()\n    this.value = value\n\n    if (this.config.onConfirm.call(this, value) === false) {\n      return\n    }\n\n    this.hide()\n  },\n\n  clear () {\n    const value = this.getValue()\n\n    if (this.config.onClear.call(this, value) === false) {\n      return\n    }\n\n    this.hide()\n  }\n}\n\nexport default DatetimePicker\n\n\n\n// WEBPACK FOOTER //\n// ./~/vux/src/components/datetime/datetimepicker.js","module.exports = function (date, fmt = 'YYYY-MM-DD HH:mm:ss') {\n  var o = {\n    'M+': date.getMonth() + 1,\n    'D+': date.getDate(),\n    'h+': date.getHours() % 12 === 0 ? 12 : date.getHours() % 12,\n    'H+': date.getHours(),\n    'm+': date.getMinutes(),\n    's+': date.getSeconds(),\n    'q+': Math.floor((date.getMonth() + 3) / 3),\n    'S': date.getMilliseconds()\n  }\n  var week = {\n    '0': '\\u65e5',\n    '1': '\\u4e00',\n    '2': '\\u4e8c',\n    '3': '\\u4e09',\n    '4': '\\u56db',\n    '5': '\\u4e94',\n    '6': '\\u516d'\n  }\n  if (/(Y+)/.test(fmt)) {\n    fmt = fmt.replace(RegExp.$1, (date.getFullYear() + '').substr(4 - RegExp.$1.length))\n  }\n  if (/(E+)/.test(fmt)) {\n    fmt = fmt.replace(RegExp.$1, ((RegExp.$1.length > 1) ? (RegExp.$1.length > 2 ? '\\u661f\\u671f' : '\\u5468') : '') + week[date.getDay() + ''])\n  }\n  for (var k in o) {\n    if (new RegExp('(' + k + ')').test(fmt)) {\n      fmt = fmt.replace(RegExp.$1, (RegExp.$1.length === 1) ? (o[k]) : (('00' + o[k]).substr(('' + o[k]).length)))\n    }\n  }\n  return fmt\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/vux/src/components/datetime/format.js","function isLeapYear (year) {\n  return year % 100 !== 0 && year % 4 === 0 || year % 400 === 0\n}\n\nfunction getMaxDay (year, month) {\n  year = parseFloat(year)\n  month = parseFloat(month)\n  if (month === 2) {\n    return isLeapYear(year) ? 29 : 28\n  }\n  return [4, 6, 9, 11].indexOf(month) >= 0 ? 30 : 31\n}\n\nfunction getYears (startDate, endDate) {\n  let startYear = startDate.getFullYear()\n  const endYear = endDate.getFullYear()\n  let rs = []\n  while (startYear <= endYear) {\n    rs.push(startYear)\n    startYear++\n  }\n  return {\n    minYear: rs[0],\n    maxYear: rs[rs.length - 1]\n  }\n}\n\nfunction getMonths (startDate, endDate, year) {\n  const startYear = startDate.getFullYear()\n  const endYear = endDate.getFullYear()\n  const startMonth = startDate.getMonth() + 1\n  const endMonth = endDate.getMonth() + 1\n  let start = 1\n  let end = 12\n  if (year === startYear) {\n    start = startMonth\n  }\n  if (year === endYear) {\n    end = endMonth\n  }\n  return {\n    minMonth: start,\n    maxMonth: end\n  }\n}\n\nfunction getDays (startDate, endDate, year, month) {\n  const startYear = startDate.getFullYear()\n  const endYear = endDate.getFullYear()\n  const startMonth = startDate.getMonth() + 1\n  const endMonth = endDate.getMonth() + 1\n  const startDay = startDate.getDate()\n  const endDay = endDate.getDate()\n\n  let start = 1\n  let end = getMaxDay(year, month)\n\n  if (year === startYear && month === startMonth) {\n    start = startDay\n  }\n  if (year === endYear && month === endMonth) {\n    end = endDay\n  }\n  return {\n    minDay: start,\n    maxDay: end\n  }\n}\n\nexport {\n  getYears,\n  getMonths,\n  getDays\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/vux/src/components/datetime/makeData.js","import formater from './format'\n\nexport function each (obj, fn) {\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      if (fn.call(obj[key], key, obj[key]) === false) {\n        break\n      }\n    }\n  }\n}\n\nexport function trimZero (val) {\n  val = String(val)\n  val = val ? parseFloat(val.replace(/^0+/g, '')) : ''\n  val = val || 0\n  val = val + ''\n  return val\n}\n\nexport function addZero (val) {\n  val = String(val)\n  return val.length < 2 ? '0' + val : val\n}\n\nexport function isLeapYear (year) {\n  return year % 100 !== 0 && year % 4 === 0 || year % 400 === 0\n}\n\nexport function getMaxDay (year, month) {\n  year = parseFloat(year)\n  month = parseFloat(month)\n  if (month === 2) {\n    return isLeapYear(year) ? 29 : 28\n  }\n  return [4, 6, 9, 11].indexOf(month) >= 0 ? 30 : 31\n}\n\nexport function parseRow (tmpl, value) {\n  return tmpl.replace(/\\{value\\}/g, value)\n}\n\n// parse Date String\nexport function parseDate (format, value) {\n  const formatParts = format.split(/[^A-Za-z]+/)\n  let valueParts = value.split(/\\D+/)\n  if (formatParts.length !== valueParts.length) {\n    // if it is error date, use current date\n    const date = formater(new Date(), format)\n    valueParts = date.split(/\\D+/)\n  }\n\n  let result = {}\n\n  for (let i = 0; i < formatParts.length; i++) {\n    if (formatParts[i]) {\n      result[formatParts[i]] = valueParts[i]\n    }\n  }\n  return result\n}\n\nexport function getElement (expr) {\n  return (typeof expr === 'string') ? document.querySelector(expr) : expr\n}\n\nexport function toElement (html) {\n  const tempContainer = document.createElement('div')\n  tempContainer.innerHTML = html\n  return tempContainer.firstElementChild\n}\n\nexport function removeElement (el) {\n  el && el.parentNode.removeChild(el)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/vux/src/components/datetime/util.js","export default {\n  created () {\n    this.uuid = Math.random().toString(36).substring(3, 8)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/vux/src/mixins/uuid.js","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".date-range{display:-webkit-box;display:-webkit-flex;display:flex}.date-range .time-group{-webkit-box-flex:1;-webkit-flex:1 50%;flex:1 50%}.date-range .time-group .vux-no-group-title{padding-left:.243333333333333rem}.date-range .time-group .vux-no-group-title>a{padding:.121666666666667rem 0;font-size:.373333333333333rem}.date-range .time-group .vux-no-group-title>a .vux-datetime-value:after{display:none}\", \"\", {\"version\":3,\"sources\":[\"/Users/yangran/workspace/industries/src/base/date-range/date-range.vue\"],\"names\":[],\"mappings\":\"AAAA,YACE,oBAAqB,AACrB,qBAAsB,AACtB,YAAc,CACf,AAED,wBACE,mBAAoB,AACpB,mBAAoB,AACpB,UAAY,CACb,AAED,4CACE,gCAAmC,CACpC,AAED,8CACE,8BAAgC,AAChC,6BAAgC,CACjC,AAED,wEACE,YAAc,CACf\",\"file\":\"date-range.vue\",\"sourcesContent\":[\".date-range {\\n  display: -webkit-box;\\n  display: -webkit-flex;\\n  display: flex;\\n}\\n\\n.date-range .time-group {\\n  -webkit-box-flex: 1;\\n  -webkit-flex: 1 50%;\\n  flex: 1 50%;\\n}\\n\\n.date-range .time-group .vux-no-group-title {\\n  padding-left: 0.243333333333333rem;\\n}\\n\\n.date-range .time-group .vux-no-group-title > a {\\n  padding: 0.121666666666667rem 0;\\n  font-size: 0.373333333333333rem;\\n}\\n\\n.date-range .time-group .vux-no-group-title > a .vux-datetime-value::after {\\n  display: none;\\n}\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-50759951\",\"scoped\":false,\"hasInlineConfig\":true}!./~/stylus-loader?{\"sourceMap\":true}!./~/vux-loader/src/style-loader.js!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/base/date-range/date-range.vue\n// module id = 706\n// module chunks = 0 1 20","exports = module.exports = require(\"../../../../css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".dp-container.vux-datetime-view{position:static;-webkit-transition:none;transition:none}.dp-container.vux-datetime-view .dp-header{display:none}.vux-datetime-clear{text-align:center}.scroller-component{display:block;position:relative;height:6.346667rem;overflow:hidden;width:100%}.scroller-content{z-index:-1}.scroller-content,.scroller-mask{position:absolute;left:0;top:0;width:100%}.scroller-mask{height:100%;margin:0 auto;z-index:3;background-image:-webkit-linear-gradient(top,hsla(0,0%,100%,.95),hsla(0,0%,100%,.6)),-webkit-linear-gradient(bottom,hsla(0,0%,100%,.95),hsla(0,0%,100%,.6));background-image:linear-gradient(180deg,hsla(0,0%,100%,.95),hsla(0,0%,100%,.6)),linear-gradient(0deg,hsla(0,0%,100%,.95),hsla(0,0%,100%,.6));background-position:top,bottom;background-size:100% 2.72rem;background-repeat:no-repeat}.scroller-item{text-align:center;font-size:.426667rem;height:.906667rem;line-height:.906667rem;color:#000}.scroller-indicator{width:100%;height:.906667rem;position:absolute;left:0;top:2.72rem;z-index:3;background-image:-webkit-linear-gradient(top,#d0d0d0,#d0d0d0,transparent,transparent),-webkit-linear-gradient(bottom,#d0d0d0,#d0d0d0,transparent,transparent);background-image:linear-gradient(180deg,#d0d0d0,#d0d0d0,transparent,transparent),linear-gradient(0deg,#d0d0d0,#d0d0d0,transparent,transparent);background-position:top,bottom;background-size:100% .026667rem;background-repeat:no-repeat}.dp-container{bottom:0;z-index:10000;background-color:#fff;display:none;-webkit-transition:-webkit-transform .3s ease;transition:-webkit-transform .3s ease;transition:transform .3s ease;transition:transform .3s ease,-webkit-transform .3s ease;-webkit-transform:translateY(100%);transform:translateY(100%)}.dp-container,.dp-mask{position:fixed;width:100%;left:0}.dp-mask{z-index:998;height:100%;top:0;opacity:0;-webkit-transition:opacity .1s ease;transition:opacity .1s ease;background-color:#000;z-index:9999}.dp-header{display:-webkit-box;display:-webkit-flex;display:flex;width:100%;box-align:center;-webkit-box-align:center;-webkit-align-items:center;align-items:center;background-image:-webkit-linear-gradient(top,#e7e7e7,#e7e7e7,transparent,transparent);background-image:linear-gradient(180deg,#e7e7e7,#e7e7e7,transparent,transparent);background-position:bottom;background-size:100% .026667rem;background-repeat:no-repeat}.dp-header .dp-item{color:#04be02;font-size:.426667rem;height:1.173333rem;line-height:1.173333rem;cursor:pointer}.dp-header .dp-item.dp-left{color:#828282}.dp-header .dp-item.dp-right{color:#04be02}.dp-content{display:-webkit-box;display:-webkit-flex;display:flex;width:100%;box-align:center;-webkit-box-align:center;-webkit-align-items:center;align-items:center;padding:.266667rem 0}.dp-content .dp-item,.dp-header .dp-item{box-sizing:border-box;-webkit-box-flex:1;-webkit-flex:1;flex:1}.vux-datetime-cancel{text-align:left;padding-left:.4rem}.vux-datetime-confirm{text-align:right;padding-right:.4rem}.vux-datetime{color:#000}.vux-datetime .vux-input-icon{float:right}.vux-cell-primary{-webkit-box-flex:1;-webkit-flex:1;flex:1}\", \"\", {\"version\":3,\"sources\":[\"/Users/yangran/workspace/industries/node_modules/vux/src/components/datetime/index.vue\"],\"names\":[],\"mappings\":\"AA0IA,gCACE,gBAAiB,AACjB,wBAAyB,AACzB,eAAiB,CAClB,AAED,2CACE,YAAc,CACf,AAED,oBACE,iBAAmB,CACpB,AAED,oBACE,cAAe,AACf,kBAAmB,AACnB,mBAAoB,AACpB,gBAAiB,AACjB,UAAY,CACb,AAED,kBAKE,UAAY,CACb,AAED,iCAPE,kBAAmB,AACnB,OAAQ,AACR,MAAO,AACP,UAAY,CAiBb,AAbD,eAIE,YAAa,AACb,cAAe,AAEf,UAAW,AACX,4JAA0L,AAC1L,6IAAgL,AAChL,+BAAiC,AACjC,6BAA8B,AAC9B,2BAA6B,CAC9B,AAED,eACE,kBAAmB,AACnB,qBAAuB,AACvB,kBAAoB,AACpB,uBAAyB,AACzB,UAAY,CACb,AAED,oBACE,WAAY,AACZ,kBAAoB,AACpB,kBAAmB,AACnB,OAAQ,AACR,YAAa,AACb,UAAW,AACX,8JAAwK,AACxK,+IAA8J,AAC9J,+BAAiC,AACjC,gCAAkC,AAClC,2BAA6B,CAC9B,AAED,cAIE,SAAU,AACV,cAAe,AACf,sBAAuB,AACvB,aAAc,AACd,8CAAgD,AAChD,sCAAwC,AACxC,8BAAgC,AAChC,yDAA6D,AAC7D,mCAAoC,AACpC,0BAA4B,CAC7B,AAED,uBAfE,eAAgB,AAChB,WAAY,AACZ,MAAQ,CAyBT,AAZD,SACE,YAAa,AAGb,YAAa,AAEb,MAAO,AACP,UAAW,AACX,oCAAsC,AACtC,4BAA8B,AAC9B,sBAAuB,AACvB,YAAc,CACf,AAED,WACE,oBAAqB,AACrB,qBAAsB,AACtB,aAAc,AACd,WAAY,AACZ,iBAAkB,AAClB,yBAA0B,AAC1B,2BAA4B,AAC5B,mBAAoB,AACpB,sFAA2F,AAC3F,iFAAyF,AACzF,2BAA4B,AAC5B,gCAAkC,AAClC,2BAA6B,CAC9B,AAED,oBACE,cAAe,AACf,qBAAuB,AACvB,mBAAoB,AACpB,wBAAyB,AACzB,cAAgB,CACjB,AAED,4BACE,aAAe,CAChB,AAED,6BACE,aAAe,CAChB,AAED,YACE,oBAAqB,AACrB,qBAAsB,AACtB,aAAc,AACd,WAAY,AACZ,iBAAkB,AAClB,yBAA0B,AAC1B,2BAA4B,AAC5B,mBAAoB,AACpB,oBAAuB,CACxB,AAED,yCAEE,sBAAuB,AACvB,mBAAoB,AACpB,eAAgB,AAChB,MAAQ,CACT,AAED,qBACE,gBAAiB,AACjB,kBAAqB,CACtB,AAED,sBACE,iBAAkB,AAClB,mBAAsB,CACvB,AAED,cACE,UAAY,CACb,AAED,8BACE,WAAa,CACd,AAED,kBACE,mBAAoB,AACpB,eAAgB,AAChB,MAAQ,CACT\",\"file\":\"index.vue\",\"sourcesContent\":[\"/**\\n* actionsheet\\n*/\\n\\n/**\\n* datetime\\n*/\\n\\n/**\\n* tabbar\\n*/\\n\\n/**\\n* tab\\n*/\\n\\n/**\\n* dialog\\n*/\\n\\n/**\\n* x-number\\n*/\\n\\n/**\\n* checkbox\\n*/\\n\\n/**\\n* check-icon\\n*/\\n\\n/**\\n* Cell\\n*/\\n\\n/**\\n* Mask\\n*/\\n\\n/**\\n* Range\\n*/\\n\\n/**\\n* Tabbar\\n*/\\n\\n/**\\n* Header\\n*/\\n\\n/**\\n* Timeline\\n*/\\n\\n/**\\n* Switch\\n*/\\n\\n/**\\n* Button\\n*/\\n\\n/**\\n* swipeout\\n*/\\n\\n/**\\n* Cell\\n*/\\n\\n/**\\n* Badge\\n*/\\n\\n/**\\n* Popover\\n*/\\n\\n/**\\n* Button tab\\n*/\\n\\n/* alias */\\n\\n/**\\n* Swiper\\n*/\\n\\n/**\\n* checklist\\n*/\\n\\n/**\\n* popup-picker\\n*/\\n\\n/**\\n* popup\\n*/\\n\\n/**\\n* form-preview\\n*/\\n\\n/**\\n* load-more\\n*/\\n\\n/**\\n* sticky\\n*/\\n\\n/**\\n* group\\n*/\\n\\n/**\\n* toast\\n*/\\n\\n/**\\n* icon\\n*/\\n\\n/**\\n* calendar\\n*/\\n\\n/**\\n* search\\n*/\\n\\n/**\\n* radio\\n*/\\n\\n.dp-container.vux-datetime-view {\\n  position: static;\\n  -webkit-transition: none;\\n  transition: none;\\n}\\n\\n.dp-container.vux-datetime-view .dp-header {\\n  display: none;\\n}\\n\\n.vux-datetime-clear {\\n  text-align: center;\\n}\\n\\n.scroller-component {\\n  display: block;\\n  position: relative;\\n  height: 6.346667rem;\\n  overflow: hidden;\\n  width: 100%;\\n}\\n\\n.scroller-content {\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  width: 100%;\\n  z-index: -1;\\n}\\n\\n.scroller-mask {\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n  height: 100%;\\n  margin: 0 auto;\\n  width: 100%;\\n  z-index: 3;\\n  background-image: -webkit-linear-gradient(top, rgba(255, 255, 255, 0.95), rgba(255, 255, 255, 0.6)), -webkit-linear-gradient(bottom, rgba(255, 255, 255, 0.95), rgba(255, 255, 255, 0.6));\\n  background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0.95), rgba(255, 255, 255, 0.6)), linear-gradient(to top, rgba(255, 255, 255, 0.95), rgba(255, 255, 255, 0.6));\\n  background-position: top, bottom;\\n  background-size: 100% 2.72rem;\\n  background-repeat: no-repeat;\\n}\\n\\n.scroller-item {\\n  text-align: center;\\n  font-size: 0.426667rem;\\n  height: 0.906667rem;\\n  line-height: 0.906667rem;\\n  color: #000;\\n}\\n\\n.scroller-indicator {\\n  width: 100%;\\n  height: 0.906667rem;\\n  position: absolute;\\n  left: 0;\\n  top: 2.72rem;\\n  z-index: 3;\\n  background-image: -webkit-linear-gradient(top, #d0d0d0, #d0d0d0, transparent, transparent), -webkit-linear-gradient(bottom, #d0d0d0, #d0d0d0, transparent, transparent);\\n  background-image: linear-gradient(to bottom, #d0d0d0, #d0d0d0, transparent, transparent), linear-gradient(to top, #d0d0d0, #d0d0d0, transparent, transparent);\\n  background-position: top, bottom;\\n  background-size: 100% 0.026667rem;\\n  background-repeat: no-repeat;\\n}\\n\\n.dp-container {\\n  position: fixed;\\n  width: 100%;\\n  left: 0;\\n  bottom: 0;\\n  z-index: 10000;\\n  background-color: #fff;\\n  display: none;\\n  -webkit-transition: -webkit-transform 0.3s ease;\\n  transition: -webkit-transform 0.3s ease;\\n  transition: transform 0.3s ease;\\n  transition: transform 0.3s ease, -webkit-transform 0.3s ease;\\n  -webkit-transform: translateY(100%);\\n  transform: translateY(100%);\\n}\\n\\n.dp-mask {\\n  z-index: 998;\\n  position: fixed;\\n  width: 100%;\\n  height: 100%;\\n  left: 0;\\n  top: 0;\\n  opacity: 0;\\n  -webkit-transition: opacity 0.1s ease;\\n  transition: opacity 0.1s ease;\\n  background-color: #000;\\n  z-index: 9999;\\n}\\n\\n.dp-header {\\n  display: -webkit-box;\\n  display: -webkit-flex;\\n  display: flex;\\n  width: 100%;\\n  box-align: center;\\n  -webkit-box-align: center;\\n  -webkit-align-items: center;\\n  align-items: center;\\n  background-image: -webkit-linear-gradient(top, #e7e7e7, #e7e7e7, transparent, transparent);\\n  background-image: linear-gradient(to bottom, #e7e7e7, #e7e7e7, transparent, transparent);\\n  background-position: bottom;\\n  background-size: 100% 0.026667rem;\\n  background-repeat: no-repeat;\\n}\\n\\n.dp-header .dp-item {\\n  color: #04BE02;\\n  font-size: 0.426667rem;\\n  height: 1.173333rem;\\n  line-height: 1.173333rem;\\n  cursor: pointer;\\n}\\n\\n.dp-header .dp-item.dp-left {\\n  color: #828282;\\n}\\n\\n.dp-header .dp-item.dp-right {\\n  color: #04BE02;\\n}\\n\\n.dp-content {\\n  display: -webkit-box;\\n  display: -webkit-flex;\\n  display: flex;\\n  width: 100%;\\n  box-align: center;\\n  -webkit-box-align: center;\\n  -webkit-align-items: center;\\n  align-items: center;\\n  padding: 0.266667rem 0;\\n}\\n\\n.dp-header .dp-item,\\n.dp-content .dp-item {\\n  box-sizing: border-box;\\n  -webkit-box-flex: 1;\\n  -webkit-flex: 1;\\n  flex: 1;\\n}\\n\\n.vux-datetime-cancel {\\n  text-align: left;\\n  padding-left: 0.4rem;\\n}\\n\\n.vux-datetime-confirm {\\n  text-align: right;\\n  padding-right: 0.4rem;\\n}\\n\\n.vux-datetime {\\n  color: #000;\\n}\\n\\n.vux-datetime .vux-input-icon {\\n  float: right;\\n}\\n\\n.vux-cell-primary {\\n  -webkit-box-flex: 1;\\n  -webkit-flex: 1;\\n  flex: 1;\\n}\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-57308446\",\"scoped\":false,\"hasInlineConfig\":true}!./~/vux-loader/src/after-less-loader.js!./~/less-loader?{\"sourceMap\":true}!./~/vux-loader/src/style-loader.js!./~/vue-loader/lib/selector.js?type=styles&index=0!./~/vux/src/components/datetime/index.vue\n// module id = 707\n// module chunks = 0 1 20","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var echartsAPIList = [\n        'getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed',\n        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption',\n        'getViewOfComponentModel', 'getViewOfSeriesModel'\n    ];\n    // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\n    function ExtensionAPI(chartInstance) {\n        zrUtil.each(echartsAPIList, function (name) {\n            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n        }, this);\n    }\n\n    module.exports = ExtensionAPI;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/ExtensionAPI.js\n// module id = 708\n// module chunks = 0 1 2","/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n\n    var graphic = require('../../util/graphic');\n    var Symbol = require('./Symbol');\n\n    /**\n     * @constructor\n     * @alias module:echarts/chart/helper/SymbolDraw\n     * @param {module:zrender/graphic/Group} [symbolCtor]\n     */\n    function SymbolDraw(symbolCtor) {\n        this.group = new graphic.Group();\n\n        this._symbolCtor = symbolCtor || Symbol;\n    }\n\n    var symbolDrawProto = SymbolDraw.prototype;\n\n    function symbolNeedsDraw(data, idx, isIgnore) {\n        var point = data.getItemLayout(idx);\n        // Is an object\n        // if (point && point.hasOwnProperty('point')) {\n        //     point = point.point;\n        // }\n        return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx))\n                    && data.getItemVisual(idx, 'symbol') !== 'none';\n    }\n    /**\n     * Update symbols draw by new data\n     * @param {module:echarts/data/List} data\n     * @param {Array.<boolean>} [isIgnore]\n     */\n    symbolDrawProto.updateData = function (data, isIgnore) {\n        var group = this.group;\n        var seriesModel = data.hostModel;\n        var oldData = this._data;\n\n        var SymbolCtor = this._symbolCtor;\n\n        var seriesScope = {\n            itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n            hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n            symbolRotate: seriesModel.get('symbolRotate'),\n            symbolOffset: seriesModel.get('symbolOffset'),\n            hoverAnimation: seriesModel.get('hoverAnimation'),\n\n            labelModel: seriesModel.getModel('label.normal'),\n            hoverLabelModel: seriesModel.getModel('label.emphasis'),\n            cursorStyle: seriesModel.get('cursor')\n        };\n\n        data.diff(oldData)\n            .add(function (newIdx) {\n                var point = data.getItemLayout(newIdx);\n                if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n                    symbolEl.attr('position', point);\n                    data.setItemGraphicEl(newIdx, symbolEl);\n                    group.add(symbolEl);\n                }\n            })\n            .update(function (newIdx, oldIdx) {\n                var symbolEl = oldData.getItemGraphicEl(oldIdx);\n                var point = data.getItemLayout(newIdx);\n                if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    group.remove(symbolEl);\n                    return;\n                }\n                if (!symbolEl) {\n                    symbolEl = new SymbolCtor(data, newIdx);\n                    symbolEl.attr('position', point);\n                }\n                else {\n                    symbolEl.updateData(data, newIdx, seriesScope);\n                    graphic.updateProps(symbolEl, {\n                        position: point\n                    }, seriesModel);\n                }\n\n                // Add back\n                group.add(symbolEl);\n\n                data.setItemGraphicEl(newIdx, symbolEl);\n            })\n            .remove(function (oldIdx) {\n                var el = oldData.getItemGraphicEl(oldIdx);\n                el && el.fadeOut(function () {\n                    group.remove(el);\n                });\n            })\n            .execute();\n\n        this._data = data;\n    };\n\n    symbolDrawProto.updateLayout = function () {\n        var data = this._data;\n        if (data) {\n            // Not use animation\n            data.eachItemGraphicEl(function (el, idx) {\n                var point = data.getItemLayout(idx);\n                el.attr('position', point);\n            });\n        }\n    };\n\n    symbolDrawProto.remove = function (enableAnimation) {\n        var group = this.group;\n        var data = this._data;\n        if (data) {\n            if (enableAnimation) {\n                data.eachItemGraphicEl(function (el) {\n                    el.fadeOut(function () {\n                        group.remove(el);\n                    });\n                });\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    };\n\n    module.exports = SymbolDraw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/SymbolDraw.js\n// module id = 709\n// module chunks = 0 1 2","/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var graphic = require('../../util/graphic');\n    var modelUtil = require('../../util/model');\n\n    var helper = {};\n\n    helper.findLabelValueDim = function (data) {\n        var valueDim;\n        var labelDims = modelUtil.otherDimToDataDim(data, 'label');\n\n        if (labelDims.length) {\n            valueDim = labelDims[0];\n        }\n        else {\n            // Get last value dim\n            var dimensions = data.dimensions.slice();\n            var dataType;\n            while (dimensions.length && (\n                valueDim = dimensions.pop(),\n                dataType = data.getDimensionInfo(valueDim).type,\n                dataType === 'ordinal' || dataType === 'time'\n            )) {} // jshint ignore:line\n        }\n\n        return valueDim;\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/labelHelper.js\n// module id = 710\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n    var PRIORITY = echarts.PRIORITY;\n\n    require('./line/LineSeries');\n    require('./line/LineView');\n\n    echarts.registerVisual(zrUtil.curry(\n        require('../visual/symbol'), 'line', 'circle', 'line'\n    ));\n    echarts.registerLayout(zrUtil.curry(\n        require('../layout/points'), 'line'\n    ));\n\n    // Down sample after filter\n    echarts.registerProcessor(PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(\n        require('../processor/dataSample'), 'line'\n    ));\n\n    // In case developer forget to include grid component\n    require('../component/gridSimple');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line.js\n// module id = 711\n// module chunks = 0 1 2","'use strict';\n\n\n    var createListFromArray = require('../helper/createListFromArray');\n    var SeriesModel = require('../../model/Series');\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.line',\n\n        dependencies: ['grid', 'polar'],\n\n        getInitialData: function (option, ecModel) {\n            if (__DEV__) {\n                var coordSys = option.coordinateSystem;\n                if (coordSys !== 'polar' && coordSys !== 'cartesian2d') {\n                    throw new Error('Line not support coordinateSystem besides cartesian and polar');\n                }\n            }\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // stack: null\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // polarIndex: 0,\n\n            // If clip the overflow value\n            clipOverflow: true,\n            // cursor: null,\n\n            label: {\n                normal: {\n                    position: 'top'\n                }\n            },\n            // itemStyle: {\n            //     normal: {},\n            //     emphasis: {}\n            // },\n            lineStyle: {\n                normal: {\n                    width: 2,\n                    type: 'solid'\n                }\n            },\n            // areaStyle: {},\n            // false, 'start', 'end', 'middle'\n            step: false,\n\n            // Disabled if step is true\n            smooth: false,\n            smoothMonotone: null,\n            // 拐点图形类型\n            symbol: 'emptyCircle',\n            // 拐点图形大小\n            symbolSize: 4,\n            // 拐点图形旋转控制\n            symbolRotate: null,\n\n            // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n            showSymbol: true,\n            // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n            showAllSymbol: false,\n\n            // 是否连接断点\n            connectNulls: false,\n\n            // 数据过滤，'average', 'max', 'min', 'sum'\n            sampling: 'none',\n\n            animationEasing: 'linear',\n\n            // Disable progressive\n            progressive: 0,\n            hoverLayerThreshold: Infinity\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/LineSeries.js\n// module id = 712\n// module chunks = 0 1 2","'use strict';\n// FIXME step not support polar\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var SymbolDraw = require('../helper/SymbolDraw');\n    var Symbol = require('../helper/Symbol');\n    var lineAnimationDiff = require('./lineAnimationDiff');\n    var graphic = require('../../util/graphic');\n    var modelUtil = require('../../util/model');\n    var polyHelper = require('./poly');\n    var ChartView = require('../../view/Chart');\n\n    function isPointsSame(points1, points2) {\n        if (points1.length !== points2.length) {\n            return;\n        }\n        for (var i = 0; i < points1.length; i++) {\n            var p1 = points1[i];\n            var p2 = points2[i];\n            if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n                return;\n            }\n        }\n        return true;\n    }\n\n    function getSmooth(smooth) {\n        return typeof (smooth) === 'number' ? smooth : (smooth ? 0.3 : 0);\n    }\n\n    function getAxisExtentWithGap(axis) {\n        var extent = axis.getGlobalExtent();\n        if (axis.onBand) {\n            // Remove extra 1px to avoid line miter in clipped edge\n            var halfBandWidth = axis.getBandWidth() / 2 - 1;\n            var dir = extent[1] > extent[0] ? 1 : -1;\n            extent[0] += dir * halfBandWidth;\n            extent[1] -= dir * halfBandWidth;\n        }\n        return extent;\n    }\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n    /**\n     * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n     * @param {module:echarts/data/List} data\n     * @param {Array.<Array.<number>>} points\n     * @private\n     */\n    function getStackedOnPoints(coordSys, data) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        return data.mapArray([valueDim], function (val, idx) {\n            var stackedOnSameSign;\n            var stackedOn = data.stackedOn;\n            // Find first stacked value with same sign\n            while (stackedOn &&\n                sign(stackedOn.get(valueDim, idx)) === sign(val)\n            ) {\n                stackedOnSameSign = stackedOn;\n                break;\n            }\n            var stackedData = [];\n            stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n            stackedData[1 - baseDataOffset] = stackedOnSameSign\n                ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n            return coordSys.dataToPoint(stackedData);\n        }, true);\n    }\n\n    function createGridClipShape(cartesian, hasAnimation, seriesModel) {\n        var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n        var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n        var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n\n        var x = Math.min(xExtent[0], xExtent[1]);\n        var y = Math.min(yExtent[0], yExtent[1]);\n        var width = Math.max(xExtent[0], xExtent[1]) - x;\n        var height = Math.max(yExtent[0], yExtent[1]) - y;\n        var lineWidth = seriesModel.get('lineStyle.normal.width') || 2;\n        // Expand clip shape to avoid clipping when line value exceeds axis\n        var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n        if (isHorizontal) {\n            y -= expandSize;\n            height += expandSize * 2;\n        }\n        else {\n            x -= expandSize;\n            width += expandSize * 2;\n        }\n\n        var clipPath = new graphic.Rect({\n            shape: {\n                x: x,\n                y: y,\n                width: width,\n                height: height\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n            graphic.initProps(clipPath, {\n                shape: {\n                    width: width,\n                    height: height\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createPolarClipShape(polar, hasAnimation, seriesModel) {\n        var angleAxis = polar.getAngleAxis();\n        var radiusAxis = polar.getRadiusAxis();\n\n        var radiusExtent = radiusAxis.getExtent();\n        var angleExtent = angleAxis.getExtent();\n\n        var RADIAN = Math.PI / 180;\n\n        var clipPath = new graphic.Sector({\n            shape: {\n                cx: polar.cx,\n                cy: polar.cy,\n                r0: radiusExtent[0],\n                r: radiusExtent[1],\n                startAngle: -angleExtent[0] * RADIAN,\n                endAngle: -angleExtent[1] * RADIAN,\n                clockwise: angleAxis.inverse\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: -angleExtent[1] * RADIAN\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createClipShape(coordSys, hasAnimation, seriesModel) {\n        return coordSys.type === 'polar'\n            ? createPolarClipShape(coordSys, hasAnimation, seriesModel)\n            : createGridClipShape(coordSys, hasAnimation, seriesModel);\n    }\n\n    function turnPointsIntoStep(points, coordSys, stepTurnAt) {\n        var baseAxis = coordSys.getBaseAxis();\n        var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n\n        var stepPoints = [];\n        for (var i = 0; i < points.length - 1; i++) {\n            var nextPt = points[i + 1];\n            var pt = points[i];\n            stepPoints.push(pt);\n\n            var stepPt = [];\n            switch (stepTurnAt) {\n                case 'end':\n                    stepPt[baseIndex] = nextPt[baseIndex];\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n                    break;\n                case 'middle':\n                    // default is start\n                    var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n                    var stepPt2 = [];\n                    stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n                    stepPoints.push(stepPt);\n                    stepPoints.push(stepPt2);\n                    break;\n                default:\n                    stepPt[baseIndex] = pt[baseIndex];\n                    stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n            }\n        }\n        // Last points\n        points[i] && stepPoints.push(points[i]);\n        return stepPoints;\n    }\n\n    function getVisualGradient(data, coordSys) {\n        var visualMetaList = data.getVisual('visualMeta');\n        if (!visualMetaList || !visualMetaList.length || !data.count()) {\n            // When data.count() is 0, gradient range can not be calculated.\n            return;\n        }\n\n        var visualMeta;\n        for (var i = visualMetaList.length - 1; i >= 0; i--) {\n            // Can only be x or y\n            if (visualMetaList[i].dimension < 2) {\n                visualMeta = visualMetaList[i];\n                break;\n            }\n        }\n        if (!visualMeta || coordSys.type !== 'cartesian2d') {\n            if (__DEV__) {\n                console.warn('Visual map on line style only support x or y dimension.');\n            }\n            return;\n        }\n\n        // If the area to be rendered is bigger than area defined by LinearGradient,\n        // the canvas spec prescribes that the color of the first stop and the last\n        // stop should be used. But if two stops are added at offset 0, in effect\n        // browsers use the color of the second stop to render area outside\n        // LinearGradient. So we can only infinitesimally extend area defined in\n        // LinearGradient to render `outerColors`.\n\n        var dimension = visualMeta.dimension;\n        var dimName = data.dimensions[dimension];\n        var axis = coordSys.getAxis(dimName);\n\n        // dataToCoor mapping may not be linear, but must be monotonic.\n        var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n            return {\n                coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n                color: stop.color\n            };\n        });\n        var stopLen = colorStops.length;\n        var outerColors = visualMeta.outerColors.slice();\n\n        if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n            colorStops.reverse();\n            outerColors.reverse();\n        }\n\n        var tinyExtent = 10; // Arbitrary value: 10px\n        var minCoord = colorStops[0].coord - tinyExtent;\n        var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n        var coordSpan = maxCoord - minCoord;\n\n        if (coordSpan < 1e-3) {\n            return 'transparent';\n        }\n\n        zrUtil.each(colorStops, function (stop) {\n            stop.offset = (stop.coord - minCoord) / coordSpan;\n        });\n        colorStops.push({\n            offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n            color: outerColors[1] || 'transparent'\n        });\n        colorStops.unshift({ // notice colorStops.length have been changed.\n            offset: stopLen ? colorStops[0].offset : 0.5,\n            color: outerColors[0] || 'transparent'\n        });\n\n        // zrUtil.each(colorStops, function (colorStop) {\n        //     // Make sure each offset has rounded px to avoid not sharp edge\n        //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n        // });\n\n        var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n        gradient[dimName] = minCoord;\n        gradient[dimName + '2'] = maxCoord;\n\n        return gradient;\n    }\n\n    module.exports = ChartView.extend({\n\n        type: 'line',\n\n        init: function () {\n            var lineGroup = new graphic.Group();\n\n            var symbolDraw = new SymbolDraw();\n            this.group.add(symbolDraw.group);\n\n            this._symbolDraw = symbolDraw;\n            this._lineGroup = lineGroup;\n        },\n\n        render: function (seriesModel, ecModel, api) {\n            var coordSys = seriesModel.coordinateSystem;\n            var group = this.group;\n            var data = seriesModel.getData();\n            var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n            var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n\n            var points = data.mapArray(data.getItemLayout, true);\n\n            var isCoordSysPolar = coordSys.type === 'polar';\n            var prevCoordSys = this._coordSys;\n\n            var symbolDraw = this._symbolDraw;\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n\n            var lineGroup = this._lineGroup;\n\n            var hasAnimation = seriesModel.get('animation');\n\n            var isAreaChart = !areaStyleModel.isEmpty();\n            var stackedOnPoints = getStackedOnPoints(coordSys, data);\n\n            var showSymbol = seriesModel.get('showSymbol');\n\n            var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol')\n                && this._getSymbolIgnoreFunc(data, coordSys);\n\n            // Remove temporary symbols\n            var oldData = this._data;\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            // Remove previous created symbols if showSymbol changed to false\n            if (!showSymbol) {\n                symbolDraw.remove();\n            }\n\n            group.add(lineGroup);\n\n            // FIXME step not support polar\n            var step = !isCoordSysPolar && seriesModel.get('step');\n            // Initialization animation or coordinate system changed\n            if (\n                !(polyline && prevCoordSys.type === coordSys.type && step === this._step)\n            ) {\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                if (step) {\n                    // TODO If stacked series is not step\n                    points = turnPointsIntoStep(points, coordSys, step);\n                    stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                }\n\n                polyline = this._newPolyline(points, coordSys, hasAnimation);\n                if (isAreaChart) {\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n            }\n            else {\n                if (isAreaChart && !polygon) {\n                    // If areaStyle is added\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                else if (polygon && !isAreaChart) {\n                    // If areaStyle is removed\n                    lineGroup.remove(polygon);\n                    polygon = this._polygon = null;\n                }\n\n                // Update clipPath\n                lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel));\n\n                // Always update, or it is wrong in the case turning on legend\n                // because points are not changed\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                // Stop symbol animation and sync with line points\n                // FIXME performance?\n                data.eachItemGraphicEl(function (el) {\n                    el.stopAnimation(true);\n                });\n\n                // In the case data zoom triggerred refreshing frequently\n                // Data may not change if line has a category axis. So it should animate nothing\n                if (!isPointsSame(this._stackedOnPoints, stackedOnPoints)\n                    || !isPointsSame(this._points, points)\n                ) {\n                    if (hasAnimation) {\n                        this._updateAnimation(\n                            data, stackedOnPoints, coordSys, api, step\n                        );\n                    }\n                    else {\n                        // Not do it in update with animation\n                        if (step) {\n                            // TODO If stacked series is not step\n                            points = turnPointsIntoStep(points, coordSys, step);\n                            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                        }\n\n                        polyline.setShape({\n                            points: points\n                        });\n                        polygon && polygon.setShape({\n                            points: points,\n                            stackedOnPoints: stackedOnPoints\n                        });\n                    }\n                }\n            }\n\n            var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n\n            polyline.useStyle(zrUtil.defaults(\n                // Use color in lineStyle first\n                lineStyleModel.getLineStyle(),\n                {\n                    fill: 'none',\n                    stroke: visualColor,\n                    lineJoin: 'bevel'\n                }\n            ));\n\n            var smooth = seriesModel.get('smooth');\n            smooth = getSmooth(seriesModel.get('smooth'));\n            polyline.setShape({\n                smooth: smooth,\n                smoothMonotone: seriesModel.get('smoothMonotone'),\n                connectNulls: seriesModel.get('connectNulls')\n            });\n\n            if (polygon) {\n                var stackedOn = data.stackedOn;\n                var stackedOnSmooth = 0;\n\n                polygon.useStyle(zrUtil.defaults(\n                    areaStyleModel.getAreaStyle(),\n                    {\n                        fill: visualColor,\n                        opacity: 0.7,\n                        lineJoin: 'bevel'\n                    }\n                ));\n\n                if (stackedOn) {\n                    var stackedOnSeries = stackedOn.hostModel;\n                    stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n                }\n\n                polygon.setShape({\n                    smooth: smooth,\n                    stackedOnSmooth: stackedOnSmooth,\n                    smoothMonotone: seriesModel.get('smoothMonotone'),\n                    connectNulls: seriesModel.get('connectNulls')\n                });\n            }\n\n            this._data = data;\n            // Save the coordinate system for transition animation when data changed\n            this._coordSys = coordSys;\n            this._stackedOnPoints = stackedOnPoints;\n            this._points = points;\n            this._step = step;\n        },\n\n        dispose: function () {},\n\n        highlight: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n            if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (!symbol) {\n                    // Create a temporary symbol if it is not exists\n                    var pt = data.getItemLayout(dataIndex);\n                    if (!pt) {\n                        // Null data\n                        return;\n                    }\n                    symbol = new Symbol(data, dataIndex);\n                    symbol.position = pt;\n                    symbol.setZ(\n                        seriesModel.get('zlevel'),\n                        seriesModel.get('z')\n                    );\n                    symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n                    symbol.__temp = true;\n                    data.setItemGraphicEl(dataIndex, symbol);\n\n                    // Stop scale animation\n                    symbol.stopSymbolAnimation(true);\n\n                    this.group.add(symbol);\n                }\n                symbol.highlight();\n            }\n            else {\n                // Highlight whole series\n                ChartView.prototype.highlight.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        downplay: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n            if (dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (symbol) {\n                    if (symbol.__temp) {\n                        data.setItemGraphicEl(dataIndex, null);\n                        this.group.remove(symbol);\n                    }\n                    else {\n                        symbol.downplay();\n                    }\n                }\n            }\n            else {\n                // FIXME\n                // can not downplay completely.\n                // Downplay whole series\n                ChartView.prototype.downplay.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolyline: function (points) {\n            var polyline = this._polyline;\n            // Remove previous created polyline\n            if (polyline) {\n                this._lineGroup.remove(polyline);\n            }\n\n            polyline = new polyHelper.Polyline({\n                shape: {\n                    points: points\n                },\n                silent: true,\n                z2: 10\n            });\n\n            this._lineGroup.add(polyline);\n\n            this._polyline = polyline;\n\n            return polyline;\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} stackedOnPoints\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolygon: function (points, stackedOnPoints) {\n            var polygon = this._polygon;\n            // Remove previous created polygon\n            if (polygon) {\n                this._lineGroup.remove(polygon);\n            }\n\n            polygon = new polyHelper.Polygon({\n                shape: {\n                    points: points,\n                    stackedOnPoints: stackedOnPoints\n                },\n                silent: true\n            });\n\n            this._lineGroup.add(polygon);\n\n            this._polygon = polygon;\n            return polygon;\n        },\n        /**\n         * @private\n         */\n        _getSymbolIgnoreFunc: function (data, coordSys) {\n            var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n            // `getLabelInterval` is provided by echarts/component/axis\n            if (categoryAxis && categoryAxis.isLabelIgnored) {\n                return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n            }\n        },\n\n        /**\n         * @private\n         */\n        // FIXME Two value axis\n        _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n            var seriesModel = data.hostModel;\n\n            var diff = lineAnimationDiff(\n                this._data, data,\n                this._stackedOnPoints, stackedOnPoints,\n                this._coordSys, coordSys\n            );\n\n            var current = diff.current;\n            var stackedOnCurrent = diff.stackedOnCurrent;\n            var next = diff.next;\n            var stackedOnNext = diff.stackedOnNext;\n            if (step) {\n                // TODO If stacked series is not step\n                current = turnPointsIntoStep(diff.current, coordSys, step);\n                stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n                next = turnPointsIntoStep(diff.next, coordSys, step);\n                stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n            }\n            // `diff.current` is subset of `current` (which should be ensured by\n            // turnPointsIntoStep), so points in `__points` can be updated when\n            // points in `current` are update during animation.\n            polyline.shape.__points = diff.current;\n            polyline.shape.points = current;\n\n            graphic.updateProps(polyline, {\n                shape: {\n                    points: next\n                }\n            }, seriesModel);\n\n            if (polygon) {\n                polygon.setShape({\n                    points: current,\n                    stackedOnPoints: stackedOnCurrent\n                });\n                graphic.updateProps(polygon, {\n                    shape: {\n                        points: next,\n                        stackedOnPoints: stackedOnNext\n                    }\n                }, seriesModel);\n            }\n\n            var updatedDataInfo = [];\n            var diffStatus = diff.status;\n\n            for (var i = 0; i < diffStatus.length; i++) {\n                var cmd = diffStatus[i].cmd;\n                if (cmd === '=') {\n                    var el = data.getItemGraphicEl(diffStatus[i].idx1);\n                    if (el) {\n                        updatedDataInfo.push({\n                            el: el,\n                            ptIdx: i    // Index of points\n                        });\n                    }\n                }\n            }\n\n            if (polyline.animators && polyline.animators.length) {\n                polyline.animators[0].during(function () {\n                    for (var i = 0; i < updatedDataInfo.length; i++) {\n                        var el = updatedDataInfo[i].el;\n                        el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n                    }\n                });\n            }\n        },\n\n        remove: function (ecModel) {\n            var group = this.group;\n            var oldData = this._data;\n            this._lineGroup.removeAll();\n            this._symbolDraw.remove(true);\n            // Remove temporary created elements when highlighting\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            this._polyline =\n            this._polygon =\n            this._coordSys =\n            this._points =\n            this._stackedOnPoints =\n            this._data = null;\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/LineView.js\n// module id = 713\n// module chunks = 0 1 2","\n\n    // var arrayDiff = require('zrender/lib/core/arrayDiff');\n    // 'zrender/core/arrayDiff' has been used before, but it did\n    // not do well in performance when roam with fixed dataZoom window.\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n\n    function getStackedOnPoint(coordSys, data, idx) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        var stackedOnSameSign;\n        var stackedOn = data.stackedOn;\n        var val = data.get(valueDim, idx);\n        // Find first stacked value with same sign\n        while (stackedOn &&\n            sign(stackedOn.get(valueDim, idx)) === sign(val)\n        ) {\n            stackedOnSameSign = stackedOn;\n            break;\n        }\n        var stackedData = [];\n        stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n        stackedData[1 - baseDataOffset] = stackedOnSameSign\n            ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n        return coordSys.dataToPoint(stackedData);\n    }\n\n    // function convertToIntId(newIdList, oldIdList) {\n    //     // Generate int id instead of string id.\n    //     // Compare string maybe slow in score function of arrDiff\n\n    //     // Assume id in idList are all unique\n    //     var idIndicesMap = {};\n    //     var idx = 0;\n    //     for (var i = 0; i < newIdList.length; i++) {\n    //         idIndicesMap[newIdList[i]] = idx;\n    //         newIdList[i] = idx++;\n    //     }\n    //     for (var i = 0; i < oldIdList.length; i++) {\n    //         var oldId = oldIdList[i];\n    //         // Same with newIdList\n    //         if (idIndicesMap[oldId]) {\n    //             oldIdList[i] = idIndicesMap[oldId];\n    //         }\n    //         else {\n    //             oldIdList[i] = idx++;\n    //         }\n    //     }\n    // }\n\n    function diffData(oldData, newData) {\n        var diffResult = [];\n\n        newData.diff(oldData)\n            .add(function (idx) {\n                diffResult.push({cmd: '+', idx: idx});\n            })\n            .update(function (newIdx, oldIdx) {\n                diffResult.push({cmd: '=', idx: oldIdx, idx1: newIdx});\n            })\n            .remove(function (idx) {\n                diffResult.push({cmd: '-', idx: idx});\n            })\n            .execute();\n\n        return diffResult;\n    }\n\n    module.exports = function (\n        oldData, newData,\n        oldStackedOnPoints, newStackedOnPoints,\n        oldCoordSys, newCoordSys\n    ) {\n        var diff = diffData(oldData, newData);\n\n        // var newIdList = newData.mapArray(newData.getId);\n        // var oldIdList = oldData.mapArray(oldData.getId);\n\n        // convertToIntId(newIdList, oldIdList);\n\n        // // FIXME One data ?\n        // diff = arrayDiff(oldIdList, newIdList);\n\n        var currPoints = [];\n        var nextPoints = [];\n        // Points for stacking base line\n        var currStackedPoints = [];\n        var nextStackedPoints = [];\n\n        var status = [];\n        var sortedIndices = [];\n        var rawIndices = [];\n        var dims = newCoordSys.dimensions;\n        for (var i = 0; i < diff.length; i++) {\n            var diffItem = diff[i];\n            var pointAdded = true;\n\n            // FIXME, animation is not so perfect when dataZoom window moves fast\n            // Which is in case remvoing or add more than one data in the tail or head\n            switch (diffItem.cmd) {\n                case '=':\n                    var currentPt = oldData.getItemLayout(diffItem.idx);\n                    var nextPt = newData.getItemLayout(diffItem.idx1);\n                    // If previous data is NaN, use next point directly\n                    if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n                        currentPt = nextPt.slice();\n                    }\n                    currPoints.push(currentPt);\n                    nextPoints.push(nextPt);\n\n                    currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n                    nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n\n                    rawIndices.push(newData.getRawIndex(diffItem.idx1));\n                    break;\n                case '+':\n                    var idx = diffItem.idx;\n                    currPoints.push(\n                        oldCoordSys.dataToPoint([\n                            newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)\n                        ])\n                    );\n\n                    nextPoints.push(newData.getItemLayout(idx).slice());\n\n                    currStackedPoints.push(\n                        getStackedOnPoint(oldCoordSys, newData, idx)\n                    );\n                    nextStackedPoints.push(newStackedOnPoints[idx]);\n\n                    rawIndices.push(newData.getRawIndex(idx));\n                    break;\n                case '-':\n                    var idx = diffItem.idx;\n                    var rawIndex = oldData.getRawIndex(idx);\n                    // Data is replaced. In the case of dynamic data queue\n                    // FIXME FIXME FIXME\n                    if (rawIndex !== idx) {\n                        currPoints.push(oldData.getItemLayout(idx));\n                        nextPoints.push(newCoordSys.dataToPoint([\n                            oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)\n                        ]));\n\n                        currStackedPoints.push(oldStackedOnPoints[idx]);\n                        nextStackedPoints.push(\n                            getStackedOnPoint(\n                                newCoordSys, oldData, idx\n                            )\n                        );\n\n                        rawIndices.push(rawIndex);\n                    }\n                    else {\n                        pointAdded = false;\n                    }\n            }\n\n            // Original indices\n            if (pointAdded) {\n                status.push(diffItem);\n                sortedIndices.push(sortedIndices.length);\n            }\n        }\n\n        // Diff result may be crossed if all items are changed\n        // Sort by data index\n        sortedIndices.sort(function (a, b) {\n            return rawIndices[a] - rawIndices[b];\n        });\n\n        var sortedCurrPoints = [];\n        var sortedNextPoints = [];\n\n        var sortedCurrStackedPoints = [];\n        var sortedNextStackedPoints = [];\n\n        var sortedStatus = [];\n        for (var i = 0; i < sortedIndices.length; i++) {\n            var idx = sortedIndices[i];\n            sortedCurrPoints[i] = currPoints[idx];\n            sortedNextPoints[i] = nextPoints[idx];\n\n            sortedCurrStackedPoints[i] = currStackedPoints[idx];\n            sortedNextStackedPoints[i] = nextStackedPoints[idx];\n\n            sortedStatus[i] = status[idx];\n        }\n\n        return {\n            current: sortedCurrPoints,\n            next: sortedNextPoints,\n\n            stackedOnCurrent: sortedCurrStackedPoints,\n            stackedOnNext: sortedNextStackedPoints,\n\n            status: sortedStatus\n        };\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/lineAnimationDiff.js\n// module id = 714\n// module chunks = 0 1 2","// Poly path support NaN point\n\n\n    var Path = require('zrender/lib/graphic/Path');\n    var vec2 = require('zrender/lib/core/vector');\n    var fixClipWithShadow = require('zrender/lib/graphic/helper/fixClipWithShadow');\n\n    var vec2Min = vec2.min;\n    var vec2Max = vec2.max;\n\n    var scaleAndAdd = vec2.scaleAndAdd;\n    var v2Copy = vec2.copy;\n\n    // Temporary variable\n    var v = [];\n    var cp0 = [];\n    var cp1 = [];\n\n    function isPointNull(p) {\n        return isNaN(p[0]) || isNaN(p[1]);\n    }\n\n    function drawSegment(\n        ctx, points, start, segLen, allLen,\n        dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls\n    ) {\n        var prevIdx = 0;\n        var idx = start;\n        for (var k = 0; k < segLen; k++) {\n            var p = points[idx];\n            if (idx >= allLen || idx < 0) {\n                break;\n            }\n            if (isPointNull(p)) {\n                if (connectNulls) {\n                    idx += dir;\n                    continue;\n                }\n                break;\n            }\n\n            if (idx === start) {\n                ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n                v2Copy(cp0, p);\n            }\n            else {\n                if (smooth > 0) {\n                    var nextIdx = idx + dir;\n                    var nextP = points[nextIdx];\n                    if (connectNulls) {\n                        // Find next point not null\n                        while (nextP && isPointNull(points[nextIdx])) {\n                            nextIdx += dir;\n                            nextP = points[nextIdx];\n                        }\n                    }\n\n                    var ratioNextSeg = 0.5;\n                    var prevP = points[prevIdx];\n                    var nextP = points[nextIdx];\n                    // Last point\n                    if (!nextP || isPointNull(nextP)) {\n                        v2Copy(cp1, p);\n                    }\n                    else {\n                        // If next data is null in not connect case\n                        if (isPointNull(nextP) && !connectNulls) {\n                            nextP = p;\n                        }\n\n                        vec2.sub(v, nextP, prevP);\n\n                        var lenPrevSeg;\n                        var lenNextSeg;\n                        if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n                            var dim = smoothMonotone === 'x' ? 0 : 1;\n                            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n                            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n                        }\n                        else {\n                            lenPrevSeg = vec2.dist(p, prevP);\n                            lenNextSeg = vec2.dist(p, nextP);\n                        }\n\n                        // Use ratio of seg length\n                        ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n\n                        scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n                    }\n                    // Smooth constraint\n                    vec2Min(cp0, cp0, smoothMax);\n                    vec2Max(cp0, cp0, smoothMin);\n                    vec2Min(cp1, cp1, smoothMax);\n                    vec2Max(cp1, cp1, smoothMin);\n\n                    ctx.bezierCurveTo(\n                        cp0[0], cp0[1],\n                        cp1[0], cp1[1],\n                        p[0], p[1]\n                    );\n                    // cp0 of next segment\n                    scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n                }\n                else {\n                    ctx.lineTo(p[0], p[1]);\n                }\n            }\n\n            prevIdx = idx;\n            idx += dir;\n        }\n\n        return k;\n    }\n\n    function getBoundingBox(points, smoothConstraint) {\n        var ptMin = [Infinity, Infinity];\n        var ptMax = [-Infinity, -Infinity];\n        if (smoothConstraint) {\n            for (var i = 0; i < points.length; i++) {\n                var pt = points[i];\n                if (pt[0] < ptMin[0]) { ptMin[0] = pt[0]; }\n                if (pt[1] < ptMin[1]) { ptMin[1] = pt[1]; }\n                if (pt[0] > ptMax[0]) { ptMax[0] = pt[0]; }\n                if (pt[1] > ptMax[1]) { ptMax[1] = pt[1]; }\n            }\n        }\n        return {\n            min: smoothConstraint ? ptMin : ptMax,\n            max: smoothConstraint ? ptMax : ptMin\n        };\n    }\n\n    module.exports = {\n\n        Polyline: Path.extend({\n\n            type: 'ec-polyline',\n\n            shape: {\n                points: [],\n\n                smooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            style: {\n                fill: null,\n\n                stroke: '#000'\n            },\n\n            brush: fixClipWithShadow(Path.prototype.brush),\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n\n                var i = 0;\n                var len = points.length;\n\n                var result = getBoundingBox(points, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    i += drawSegment(\n                        ctx, points, i, len, len,\n                        1, result.min, result.max, shape.smooth,\n                        shape.smoothMonotone, shape.connectNulls\n                    ) + 1;\n                }\n            }\n        }),\n\n        Polygon: Path.extend({\n\n            type: 'ec-polygon',\n\n            shape: {\n                points: [],\n\n                // Offset between stacked base points and points\n                stackedOnPoints: [],\n\n                smooth: 0,\n\n                stackedOnSmooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            brush: fixClipWithShadow(Path.prototype.brush),\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n                var stackedOnPoints = shape.stackedOnPoints;\n\n                var i = 0;\n                var len = points.length;\n                var smoothMonotone = shape.smoothMonotone;\n                var bbox = getBoundingBox(points, shape.smoothConstraint);\n                var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    var k = drawSegment(\n                        ctx, points, i, len, len,\n                        1, bbox.min, bbox.max, shape.smooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    drawSegment(\n                        ctx, stackedOnPoints, i + k - 1, k, len,\n                        -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    i += k + 1;\n\n                    ctx.closePath();\n                }\n            }\n        })\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/poly.js\n// module id = 715\n// module chunks = 0 1 2","'use strict';\n// TODO boundaryGap\n\n\n    require('../coord/cartesian/AxisModel');\n\n    require('./axis/CartesianAxisView');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis.js\n// module id = 716\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var AxisBuilder = require('./AxisBuilder');\n    var AxisView = require('./AxisView');\n    var cartesianAxisHelper = require('./cartesianAxisHelper');\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\n    var getInterval = AxisBuilder.getInterval;\n\n    var axisBuilderAttrs = [\n        'axisLine', 'axisLabel', 'axisTick', 'axisName'\n    ];\n    var selfBuilderAttrs = [\n        'splitArea', 'splitLine'\n    ];\n\n    // function getAlignWithLabel(model, axisModel) {\n    //     var alignWithLabel = model.get('alignWithLabel');\n    //     if (alignWithLabel === 'auto') {\n    //         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n    //     }\n    //     return alignWithLabel;\n    // }\n\n    var CartesianAxisView = AxisView.extend({\n\n        type: 'cartesianAxis',\n\n        axisPointerClass: 'CartesianAxisPointer',\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n\n            this.group.removeAll();\n\n            var oldAxisGroup = this._axisGroup;\n            this._axisGroup = new graphic.Group();\n\n            this.group.add(this._axisGroup);\n\n            if (!axisModel.get('show')) {\n                return;\n            }\n\n            var gridModel = axisModel.getCoordSysModel();\n\n            var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n\n            var axisBuilder = new AxisBuilder(axisModel, layout);\n\n            zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n            this._axisGroup.add(axisBuilder.getGroup());\n\n            zrUtil.each(selfBuilderAttrs, function (name) {\n                if (axisModel.get(name + '.show')) {\n                    this['_' + name](axisModel, gridModel, layout.labelInterval);\n                }\n            }, this);\n\n            graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n\n            CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitLine: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.scale.isBlank()) {\n                return;\n            }\n\n            var splitLineModel = axisModel.getModel('splitLine');\n            var lineStyleModel = splitLineModel.getModel('lineStyle');\n            var lineColors = lineStyleModel.get('color');\n\n            var lineInterval = getInterval(splitLineModel, labelInterval);\n\n            lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n            var isHorizontal = axis.isHorizontal();\n\n            var lineCount = 0;\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitLineModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var p1 = [];\n            var p2 = [];\n            // Simple optimization\n            // Batching the lines if color are the same\n            var lineStyle = lineStyleModel.getLineStyle();\n            for (var i = 0; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, lineInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                if (isHorizontal) {\n                    p1[0] = tickCoord;\n                    p1[1] = gridRect.y;\n                    p2[0] = tickCoord;\n                    p2[1] = gridRect.y + gridRect.height;\n                }\n                else {\n                    p1[0] = gridRect.x;\n                    p1[1] = tickCoord;\n                    p2[0] = gridRect.x + gridRect.width;\n                    p2[1] = tickCoord;\n                }\n\n                var colorIndex = (lineCount++) % lineColors.length;\n                this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n                    anid: 'line_' + ticks[i],\n\n                    shape: {\n                        x1: p1[0],\n                        y1: p1[1],\n                        x2: p2[0],\n                        y2: p2[1]\n                    },\n                    style: zrUtil.defaults({\n                        stroke: lineColors[colorIndex]\n                    }, lineStyle),\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitArea: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.scale.isBlank()) {\n                return;\n            }\n\n            var splitAreaModel = axisModel.getModel('splitArea');\n            var areaStyleModel = splitAreaModel.getModel('areaStyle');\n            var areaColors = areaStyleModel.get('color');\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitAreaModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var prevX = axis.toGlobalCoord(ticksCoords[0]);\n            var prevY = axis.toGlobalCoord(ticksCoords[0]);\n\n            var count = 0;\n\n            var areaInterval = getInterval(splitAreaModel, labelInterval);\n\n            var areaStyle = areaStyleModel.getAreaStyle();\n            areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n            for (var i = 1; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, areaInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                var x;\n                var y;\n                var width;\n                var height;\n                if (axis.isHorizontal()) {\n                    x = prevX;\n                    y = gridRect.y;\n                    width = tickCoord - x;\n                    height = gridRect.height;\n                }\n                else {\n                    x = gridRect.x;\n                    y = prevY;\n                    width = gridRect.width;\n                    height = tickCoord - y;\n                }\n\n                var colorIndex = (count++) % areaColors.length;\n                this._axisGroup.add(new graphic.Rect({\n                    anid: 'area_' + ticks[i],\n\n                    shape: {\n                        x: x,\n                        y: y,\n                        width: width,\n                        height: height\n                    },\n                    style: zrUtil.defaults({\n                        fill: areaColors[colorIndex]\n                    }, areaStyle),\n                    silent: true\n                }));\n\n                prevX = x + width;\n                prevY = y + height;\n            }\n        }\n    });\n\n    CartesianAxisView.extend({\n        type: 'xAxis'\n    });\n    CartesianAxisView.extend({\n        type: 'yAxis'\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/CartesianAxisView.js\n// module id = 717\n// module chunks = 0 1 2","\n\n    var echarts = require('../echarts');\n    var axisPointerModelHelper = require('./axisPointer/modelHelper');\n    var axisTrigger = require('./axisPointer/axisTrigger');\n    var zrUtil = require('zrender/lib/core/util');\n\n    require('./axisPointer/AxisPointerModel');\n    require('./axisPointer/AxisPointerView');\n\n    // CartesianAxisPointer is not supposed to be required here. But consider\n    // echarts.simple.js and online build tooltip, which only require gridSimple,\n    // CartesianAxisPointer should be able to required somewhere.\n    require('./axisPointer/CartesianAxisPointer');\n\n    echarts.registerPreprocessor(function (option) {\n        // Always has a global axisPointerModel for default setting.\n        if (option) {\n            (!option.axisPointer || option.axisPointer.length === 0)\n                && (option.axisPointer = {});\n\n            var link = option.axisPointer.link;\n            // Normalize to array to avoid object mergin. But if link\n            // is not set, remain null/undefined, otherwise it will\n            // override existent link setting.\n            if (link && !zrUtil.isArray(link)) {\n                option.axisPointer.link = [link];\n            }\n        }\n    });\n\n    // This process should proformed after coordinate systems created\n    // and series data processed. So put it on statistic processing stage.\n    echarts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n        // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n        // allAxesInfo should be updated when setOption performed.\n        ecModel.getComponent('axisPointer').coordSysAxesInfo\n            = axisPointerModelHelper.collect(ecModel, api);\n    });\n\n    // Broadcast to all views.\n    echarts.registerAction({\n        type: 'updateAxisPointer',\n        event: 'updateAxisPointer',\n        update: ':updateAxisPointer'\n    }, axisTrigger);\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer.js\n// module id = 718\n// module chunks = 0 1 2","\n\n    var echarts = require('../../echarts');\n\n    var AxisPointerModel = echarts.extendComponentModel({\n\n        type: 'axisPointer',\n\n        coordSysAxesInfo: null,\n\n        defaultOption: {\n            // 'auto' means that show when triggered by tooltip or handle.\n            show: 'auto',\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: null, // set default in AxisPonterView.js\n\n            zlevel: 0,\n            z: 50,\n\n            type: 'line',\n            // axispointer triggered by tootip determine snap automatically,\n            // see `modelHelper`.\n            snap: false,\n            triggerTooltip: true,\n\n            value: null,\n            status: null, // Init value depends on whether handle is used.\n\n            // [group0, group1, ...]\n            // Each group can be: {\n            //      mapper: function () {},\n            //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n            //      xAxisId: ...,\n            //      yAxisName: ...,\n            //      angleAxisIndex: ...\n            // }\n            // mapper: can be ignored.\n            //      input: {axisInfo, value}\n            //      output: {axisInfo, value}\n            link: [],\n\n            // Do not set 'auto' here, otherwise global animation: false\n            // will not effect at this axispointer.\n            animation: null,\n            animationDurationUpdate: 200,\n\n            lineStyle: {\n                color: '#aaa',\n                width: 1,\n                type: 'solid'\n            },\n\n            shadowStyle: {\n                color: 'rgba(150,150,150,0.3)'\n            },\n\n            label: {\n                show: true,\n                formatter: null, // string | Function\n                precision: 'auto', // Or a number like 0, 1, 2 ...\n                margin: 3,\n                color: '#fff',\n                padding: [5, 7, 5, 7],\n                backgroundColor: 'auto', // default: axis line color\n                borderColor: null,\n                borderWidth: 0,\n                shadowBlur: 3,\n                shadowColor: '#aaa'\n                // Considering applicability, common style should\n                // better not have shadowOffset.\n                // shadowOffsetX: 0,\n                // shadowOffsetY: 2\n            },\n\n            handle: {\n                show: false,\n                icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z', // jshint ignore:line\n                size: 45,\n                // handle margin is from symbol center to axis, which is stable when circular move.\n                margin: 50,\n                // color: '#1b8bbd'\n                // color: '#2f4554'\n                color: '#333',\n                shadowBlur: 3,\n                shadowColor: '#aaa',\n                shadowOffsetX: 0,\n                shadowOffsetY: 2,\n\n                // For mobile performance\n                throttle: 40\n            }\n        }\n\n    });\n\n    module.exports = AxisPointerModel;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/AxisPointerModel.js\n// module id = 719\n// module chunks = 0 1 2","\n\n    var globalListener = require('./globalListener');\n\n    var AxisPonterView = require('../../echarts').extendComponentView({\n\n        type: 'axisPointer',\n\n        render: function (globalAxisPointerModel, ecModel, api) {\n            var globalTooltipModel = ecModel.getComponent('tooltip');\n            var triggerOn = globalAxisPointerModel.get('triggerOn')\n                || (globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click');\n\n            // Register global listener in AxisPointerView to enable\n            // AxisPointerView to be independent to Tooltip.\n            globalListener.register(\n                'axisPointer',\n                api,\n                function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none'\n                        && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)\n                    ) {\n                        dispatchAction({\n                            type: 'updateAxisPointer',\n                            currTrigger: currTrigger,\n                            x: e && e.offsetX,\n                            y: e && e.offsetY\n                        });\n                    }\n                }\n            );\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            globalListener.disopse(api.getZr(), 'axisPointer');\n            AxisPonterView.superApply(this._model, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            globalListener.unregister('axisPointer', api);\n            AxisPonterView.superApply(this._model, 'dispose', arguments);\n        }\n\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/AxisPointerView.js\n// module id = 720\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazzUtil = require('../../util/clazz');\n    var graphic = require('../../util/graphic');\n    var get = require('../../util/model').makeGetter();\n    var axisPointerModelHelper = require('./modelHelper');\n    var eventTool = require('zrender/lib/core/event');\n    var throttle = require('../../util/throttle');\n\n    var clone = zrUtil.clone;\n    var bind = zrUtil.bind;\n\n    /**\n     * Base axis pointer class in 2D.\n     * Implemenents {module:echarts/component/axis/IAxisPointer}.\n     */\n    function BaseAxisPointer () {\n    }\n\n    BaseAxisPointer.prototype = {\n\n        /**\n         * @private\n         */\n        _group: null,\n\n        /**\n         * @private\n         */\n        _lastGraphicKey: null,\n\n        /**\n         * @private\n         */\n        _handle: null,\n\n        /**\n         * @private\n         */\n        _dragging: false,\n\n        /**\n         * @private\n         */\n        _lastValue: null,\n\n        /**\n         * @private\n         */\n        _lastStatus: null,\n\n        /**\n         * @private\n         */\n        _payloadInfo: null,\n\n        /**\n         * In px, arbitrary value. Do not set too small,\n         * no animation is ok for most cases.\n         * @protected\n         */\n        animationThreshold: 15,\n\n        /**\n         * @implement\n         */\n        render: function (axisModel, axisPointerModel, api, forceRender) {\n            var value = axisPointerModel.get('value');\n            var status = axisPointerModel.get('status');\n\n            // Bind them to `this`, not in closure, otherwise they will not\n            // be replaced when user calling setOption in not merge mode.\n            this._axisModel = axisModel;\n            this._axisPointerModel = axisPointerModel;\n            this._api = api;\n\n            // Optimize: `render` will be called repeatly during mouse move.\n            // So it is power consuming if performing `render` each time,\n            // especially on mobile device.\n            if (!forceRender\n                && this._lastValue === value\n                && this._lastStatus === status\n            ) {\n                return;\n            }\n            this._lastValue = value;\n            this._lastStatus = status;\n\n            var group = this._group;\n            var handle = this._handle;\n\n            if (!status || status === 'hide') {\n                // Do not clear here, for animation better.\n                group && group.hide();\n                handle && handle.hide();\n                return;\n            }\n            group && group.show();\n            handle && handle.show();\n\n            // Otherwise status is 'show'\n            var elOption = {};\n            this.makeElOption(elOption, value, axisModel, axisPointerModel, api);\n\n            // Enable change axis pointer type.\n            var graphicKey = elOption.graphicKey;\n            if (graphicKey !== this._lastGraphicKey) {\n                this.clear(api);\n            }\n            this._lastGraphicKey = graphicKey;\n\n            var moveAnimation = this._moveAnimation =\n                this.determineAnimation(axisModel, axisPointerModel);\n\n            if (!group) {\n                group = this._group = new graphic.Group();\n                this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n                this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n                api.getZr().add(group);\n            }\n            else {\n                var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n                this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n                this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n            }\n\n            updateMandatoryProps(group, axisPointerModel, true);\n\n            this._renderHandle(value);\n        },\n\n        /**\n         * @implement\n         */\n        remove: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @implement\n         */\n        dispose: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @protected\n         */\n        determineAnimation: function (axisModel, axisPointerModel) {\n            var animation = axisPointerModel.get('animation');\n            var axis = axisModel.axis;\n            var isCategoryAxis = axis.type === 'category';\n            var useSnap = axisPointerModel.get('snap');\n\n            // Value axis without snap always do not snap.\n            if (!useSnap && !isCategoryAxis) {\n                return false;\n            }\n\n            if (animation === 'auto' || animation == null) {\n                var animationThreshold = this.animationThreshold;\n                if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n                    return true;\n                }\n\n                // It is important to auto animation when snap used. Consider if there is\n                // a dataZoom, animation will be disabled when too many points exist, while\n                // it will be enabled for better visual effect when little points exist.\n                if (useSnap) {\n                    var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n                    var axisExtent = axis.getExtent();\n                    // Approximate band width\n                    return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n                }\n\n                return false;\n            }\n\n            return animation === true;\n        },\n\n        /**\n         * add {pointer, label, graphicKey} to elOption\n         * @protected\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            // Shoule be implemenented by sub-class.\n        },\n\n        /**\n         * @protected\n         */\n        createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n            var pointerOption = elOption.pointer;\n            if (pointerOption) {\n                var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](\n                    clone(elOption.pointer)\n                );\n                group.add(pointerEl);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n            if (elOption.label) {\n                var labelEl = get(group).labelEl = new graphic.Rect(\n                    clone(elOption.label)\n                );\n\n                group.add(labelEl);\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updatePointerEl: function (group, elOption, updateProps) {\n            var pointerEl = get(group).pointerEl;\n            if (pointerEl) {\n                pointerEl.setStyle(elOption.pointer.style);\n                updateProps(pointerEl, {shape: elOption.pointer.shape});\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n            var labelEl = get(group).labelEl;\n            if (labelEl) {\n                labelEl.setStyle(elOption.label.style);\n                updateProps(labelEl, {\n                    // Consider text length change in vertical axis, animation should\n                    // be used on shape, otherwise the effect will be weird.\n                    shape: elOption.label.shape,\n                    position: elOption.label.position\n                });\n\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _renderHandle: function (value) {\n            if (this._dragging || !this.updateHandleTransform) {\n                return;\n            }\n\n            var axisPointerModel = this._axisPointerModel;\n            var zr = this._api.getZr();\n            var handle = this._handle;\n            var handleModel = axisPointerModel.getModel('handle');\n\n            var status = axisPointerModel.get('status');\n            if (!handleModel.get('show') || !status || status === 'hide') {\n                handle && zr.remove(handle);\n                this._handle = null;\n                return;\n            }\n\n            var isInit;\n            if (!this._handle) {\n                isInit = true;\n                handle = this._handle = graphic.createIcon(\n                    handleModel.get('icon'), \n                    {\n                        cursor: 'move',\n                        draggable: true,\n                        onmousemove: function (e) {\n                            // Fot mobile devicem, prevent screen slider on the button.\n                            eventTool.stop(e.event);\n                        },\n                        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n                        drift: bind(this._onHandleDragMove, this),\n                        ondragend: bind(this._onHandleDragEnd, this)\n                    }\n                );\n                zr.add(handle);\n            }\n\n            updateMandatoryProps(handle, axisPointerModel, false);\n\n            // update style\n            var includeStyles = [\n                'color', 'borderColor', 'borderWidth', 'opacity',\n                'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'\n            ];\n            handle.setStyle(handleModel.getItemStyle(null, includeStyles));\n\n            // update position\n            var handleSize = handleModel.get('size');\n            if (!zrUtil.isArray(handleSize)) {\n                handleSize = [handleSize, handleSize];\n            }\n            handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n\n            throttle.createOrUpdate(\n                this,\n                '_doDispatchAxisPointer',\n                handleModel.get('throttle') || 0,\n                'fixRate'\n            );\n\n            this._moveHandleToValue(value, isInit);\n        },\n\n        /**\n         * @private\n         */\n        _moveHandleToValue: function (value, isInit) {\n            updateProps(\n                this._axisPointerModel,\n                !isInit && this._moveAnimation,\n                this._handle,\n                getHandleTransProps(this.getHandleTransform(\n                    value, this._axisModel, this._axisPointerModel\n                ))\n            );\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragMove: function (dx, dy) {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            this._dragging = true;\n\n            // Persistent for throttle.\n            var trans = this.updateHandleTransform(\n                getHandleTransProps(handle),\n                [dx, dy],\n                this._axisModel,\n                this._axisPointerModel\n            );\n            this._payloadInfo = trans;\n\n            handle.stopAnimation();\n            handle.attr(getHandleTransProps(trans));\n            get(handle).lastProp = null;\n\n            this._doDispatchAxisPointer();\n        },\n\n        /**\n         * Throttled method.\n         * @private\n         */\n        _doDispatchAxisPointer: function () {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var payloadInfo = this._payloadInfo;\n            var axisModel = this._axisModel;\n            this._api.dispatchAction({\n                type: 'updateAxisPointer',\n                x: payloadInfo.cursorPoint[0],\n                y: payloadInfo.cursorPoint[1],\n                tooltipOption: payloadInfo.tooltipOption,\n                axesInfo: [{\n                    axisDim: axisModel.axis.dim,\n                    axisIndex: axisModel.componentIndex\n                }]\n            });\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragEnd: function (moveAnimation) {\n            this._dragging = false;\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var value = this._axisPointerModel.get('value');\n            // Consider snap or categroy axis, handle may be not consistent with\n            // axisPointer. So move handle to align the exact value position when\n            // drag ended.\n            this._moveHandleToValue(value);\n\n            // For the effect: tooltip will be shown when finger holding on handle\n            // button, and will be hidden after finger left handle button.\n            this._api.dispatchAction({\n                type: 'hideTip'\n            });\n        },\n\n        /**\n         * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {number} value\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0}\n         */\n        getHandleTransform: null,\n\n        /**\n         * * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {Object} transform {position, rotation}\n         * @param {Array.<number>} delta [dx, dy]\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n         */\n        updateHandleTransform: null,\n\n        /**\n         * @private\n         */\n        clear: function (api) {\n            this._lastValue = null;\n            this._lastStatus = null;\n\n            var zr = api.getZr();\n            var group = this._group;\n            var handle = this._handle;\n            if (zr && group) {\n                this._lastGraphicKey = null;\n                group && zr.remove(group);\n                handle && zr.remove(handle);\n                this._group = null;\n                this._handle = null;\n                this._payloadInfo = null;\n            }\n        },\n\n        /**\n         * @protected\n         */\n        doClear: function () {\n            // Implemented by sub-class if necessary.\n        },\n\n        /**\n         * @protected\n         * @param {Array.<number>} xy\n         * @param {Array.<number>} wh\n         * @param {number} [xDimIndex=0] or 1\n         */\n        buildLabel: function (xy, wh, xDimIndex) {\n            xDimIndex = xDimIndex || 0;\n            return {\n                x: xy[xDimIndex],\n                y: xy[1 - xDimIndex],\n                width: wh[xDimIndex],\n                height: wh[1 - xDimIndex]\n            };\n        }\n    };\n\n    BaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\n\n    function updateProps(animationModel, moveAnimation, el, props) {\n        // Animation optimize.\n        if (!propsEqual(get(el).lastProp, props)) {\n            get(el).lastProp = props;\n            moveAnimation\n                ? graphic.updateProps(el, props, animationModel)\n                : (el.stopAnimation(), el.attr(props));\n        }\n    }\n\n    function propsEqual(lastProps, newProps) {\n        if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n            var equals = true;\n            zrUtil.each(newProps, function (item, key) {\n                equals = equals && propsEqual(lastProps[key], item);\n            });\n            return !!equals;\n        }\n        else {\n            return lastProps === newProps;\n        }\n    }\n\n    function updateLabelShowHide(labelEl, axisPointerModel) {\n        labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n    }\n\n    function getHandleTransProps(trans) {\n        return {\n            position: trans.position.slice(),\n            rotation: trans.rotation || 0\n        };\n    }\n\n    function updateMandatoryProps(group, axisPointerModel, silent) {\n        var z = axisPointerModel.get('z');\n        var zlevel = axisPointerModel.get('zlevel');\n\n        group && group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n                el.silent = silent;\n            }\n        });\n    }\n\n    clazzUtil.enableClassExtend(BaseAxisPointer);\n\n    module.exports = BaseAxisPointer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/BaseAxisPointer.js\n// module id = 721\n// module chunks = 0 1 2","'use strict';\n\n\n    var graphic = require('../../util/graphic');\n    var BaseAxisPointer = require('./BaseAxisPointer');\n    var viewHelper = require('./viewHelper');\n    var cartesianAxisHelper = require('../axis/cartesianAxisHelper');\n    var AxisView = require('../axis/AxisView');\n\n    var CartesianAxisPointer = BaseAxisPointer.extend({\n\n        /**\n         * @override\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisPointerType = axisPointerModel.get('type');\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n            if (axisPointerType && axisPointerType !== 'none') {\n                var elStyle = viewHelper.buildElStyle(axisPointerModel);\n                var pointerOption = pointerShapeBuilder[axisPointerType](\n                    axis, pixelValue, otherExtent, elStyle\n                );\n                pointerOption.style = elStyle;\n                elOption.graphicKey = pointerOption.type;\n                elOption.pointer = pointerOption;\n            }\n\n            var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n            viewHelper.buildCartesianSingleLabelElOption(\n                value, elOption, layoutInfo, axisModel, axisPointerModel, api\n            );\n        },\n\n        /**\n         * @override\n         */\n        getHandleTransform: function (value, axisModel, axisPointerModel) {\n            var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n                labelInside: false\n            });\n            layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n            return {\n                position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n                rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n            };\n        },\n\n        /**\n         * @override\n         */\n        updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisExtent = axis.getGlobalExtent(true);\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var dimIndex = axis.dim === 'x' ? 0 : 1;\n\n            var currPosition = transform.position;\n            currPosition[dimIndex] += delta[dimIndex];\n            currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n            currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n\n            var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n            var cursorPoint = [cursorOtherValue, cursorOtherValue];\n            cursorPoint[dimIndex] = currPosition[dimIndex];\n\n            // Make tooltip do not overlap axisPointer and in the middle of the grid.\n            var tooltipOptions = [{verticalAlign: 'middle'}, {align: 'center'}];\n\n            return {\n                position: currPosition,\n                rotation: transform.rotation,\n                cursorPoint: cursorPoint,\n                tooltipOption: tooltipOptions[dimIndex]\n            };\n        }\n\n    });\n\n    function getCartesian(grid, axis) {\n        var opt = {};\n        opt[axis.dim + 'AxisIndex'] = axis.index;\n        return grid.getCartesian(opt);\n    }\n\n    var pointerShapeBuilder = {\n\n        line: function (axis, pixelValue, otherExtent, elStyle) {\n            var targetShape = viewHelper.makeLineShape(\n                [pixelValue, otherExtent[0]],\n                [pixelValue, otherExtent[1]],\n                getAxisDimIndex(axis)\n            );\n            graphic.subPixelOptimizeLine({\n                shape: targetShape,\n                style: elStyle\n            });\n            return {\n                type: 'Line',\n                shape: targetShape\n            };\n        },\n\n        shadow: function (axis, pixelValue, otherExtent, elStyle) {\n            var bandWidth = axis.getBandWidth();\n            var span = otherExtent[1] - otherExtent[0];\n            return {\n                type: 'Rect',\n                shape: viewHelper.makeRectShape(\n                    [pixelValue - bandWidth / 2, otherExtent[0]],\n                    [bandWidth, span],\n                    getAxisDimIndex(axis)\n                )\n            };\n        }\n    };\n\n    function getAxisDimIndex(axis) {\n        return axis.dim === 'x' ? 0 : 1;\n    }\n\n    AxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\n\n    module.exports = CartesianAxisPointer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/CartesianAxisPointer.js\n// module id = 722\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var modelHelper = require('./modelHelper');\n    var findPointFromSeries = require('./findPointFromSeries');\n\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n    var get = modelUtil.makeGetter();\n\n    /**\n     * Basic logic: check all axis, if they do not demand show/highlight,\n     * then hide/downplay them.\n     *\n     * @param {Object} coordSysAxesInfo\n     * @param {Object} payload\n     * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n     * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n     *              trigger axisPointer and tooltip.\n     * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n     *              trigger axisPointer and tooltip.\n     * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n     * @param {Object} [payload.dataIndex] finder, restrict target axes.\n     * @param {Object} [payload.axesInfo] finder, restrict target axes.\n     *        [{\n     *          axisDim: 'x'|'y'|'angle'|...,\n     *          axisIndex: ...,\n     *          value: ...\n     *        }, ...]\n     * @param {Function} [payload.dispatchAction]\n     * @param {Object} [payload.tooltipOption]\n     * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n     *        which can be specified in dispatchAction\n     * @param {module:echarts/model/Global} ecModel\n     * @param {module:echarts/ExtensionAPI} api\n     * @return {Object} content of event obj for echarts.connect.\n     */\n    function axisTrigger(payload, ecModel, api) {\n        var currTrigger = payload.currTrigger;\n        var point = [payload.x, payload.y];\n        var finder = payload;\n        var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n        var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n        // Pending\n        // See #6121. But we are not able to reproduce it yet.\n        if (!coordSysAxesInfo) {\n            return;\n        }\n\n        if (illegalPoint(point)) {\n            // Used in the default behavior of `connection`: use the sample seriesIndex\n            // and dataIndex. And also used in the tooltipView trigger.\n            point = findPointFromSeries({\n                seriesIndex: finder.seriesIndex,\n                // Do not use dataIndexInside from other ec instance.\n                // FIXME: auto detect it?\n                dataIndex: finder.dataIndex\n            }, ecModel).point;\n        }\n        var isIllegalPoint = illegalPoint(point);\n\n        // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n        // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n        // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n        // and dataIndex.\n        var inputAxesInfo = finder.axesInfo;\n\n        var axesInfo = coordSysAxesInfo.axesInfo;\n        var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n        var outputFinder = {};\n\n        var showValueMap = {};\n        var dataByCoordSys = {list: [], map: {}};\n        var updaters = {\n            showPointer: curry(showPointer, showValueMap),\n            showTooltip: curry(showTooltip, dataByCoordSys)\n        };\n\n        // Process for triggered axes.\n        each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n            // If a point given, it must be contained by the coordinate system.\n            var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n\n            each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n                var axis = axisInfo.axis;\n                var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo);\n                // If no inputAxesInfo, no axis is restricted.\n                if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n                    var val = inputAxisInfo && inputAxisInfo.value;\n                    if (val == null && !isIllegalPoint) {\n                        val = axis.pointToData(point);\n                    }\n                    val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n                }\n            });\n        });\n\n        // Process for linked axes.\n        var linkTriggers = {};\n        each(axesInfo, function (tarAxisInfo, tarKey) {\n            var linkGroup = tarAxisInfo.linkGroup;\n\n            // If axis has been triggered in the previous stage, it should not be triggered by link.\n            if (linkGroup && !showValueMap[tarKey]) {\n                each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n                    var srcValItem = showValueMap[srcKey];\n                    // If srcValItem exist, source axis is triggered, so link to target axis.\n                    if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n                        var val = srcValItem.value;\n                        linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(\n                            val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo)\n                        )));\n                        linkTriggers[tarAxisInfo.key] = val;\n                    }\n                });\n            }\n        });\n        each(linkTriggers, function (val, tarKey) {\n            processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n        });\n\n        updateModelActually(showValueMap, axesInfo, outputFinder);\n        dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n        dispatchHighDownActually(axesInfo, dispatchAction, api);\n\n        return outputFinder;\n    }\n\n    function processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n        var axis = axisInfo.axis;\n\n        if (axis.scale.isBlank() || !axis.containData(newValue)) {\n            return;\n        }\n\n        if (!axisInfo.involveSeries) {\n            updaters.showPointer(axisInfo, newValue);\n            return;\n        }\n\n        // Heavy calculation. So put it after axis.containData checking.\n        var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n        var payloadBatch = payloadInfo.payloadBatch;\n        var snapToValue = payloadInfo.snapToValue;\n\n        // Fill content of event obj for echarts.connect.\n        // By defualt use the first involved series data as a sample to connect.\n        if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n            zrUtil.extend(outputFinder, payloadBatch[0]);\n        }\n\n        // If no linkSource input, this process is for collecting link\n        // target, where snap should not be accepted.\n        if (!dontSnap && axisInfo.snap) {\n            if (axis.containData(snapToValue) && snapToValue != null) {\n                newValue = snapToValue;\n            }\n        }\n\n        updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder);\n        // Tooltip should always be snapToValue, otherwise there will be\n        // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n        updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n    }\n\n    function buildPayloadsBySeries(value, axisInfo) {\n        var axis = axisInfo.axis;\n        var dim = axis.dim;\n        var snapToValue = value;\n        var payloadBatch = [];\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n\n        each(axisInfo.seriesModels, function (series, idx) {\n            var dataDim = series.coordDimToDataDim(dim);\n            var seriesNestestValue;\n            var dataIndices;\n\n            if (series.getAxisTooltipData) {\n                var result = series.getAxisTooltipData(dataDim, value, axis);\n                dataIndices = result.dataIndices;\n                seriesNestestValue = result.nestestValue;\n            }\n            else {\n                dataIndices = series.getData().indicesOfNearest(\n                    dataDim[0],\n                    value,\n                    // Add a threshold to avoid find the wrong dataIndex\n                    // when data length is not same.\n                    false, axis.type === 'category' ? 0.5 : null\n                );\n                if (!dataIndices.length) {\n                    return;\n                }\n                seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n            }\n\n            if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n                return;\n            }\n\n            var diff = value - seriesNestestValue;\n            var dist = Math.abs(diff);\n            // Consider category case\n            if (dist <= minDist) {\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    snapToValue = seriesNestestValue;\n                    payloadBatch.length = 0;\n                }\n                each(dataIndices, function (dataIndex) {\n                    payloadBatch.push({\n                        seriesIndex: series.seriesIndex,\n                        dataIndexInside: dataIndex,\n                        dataIndex: series.getData().getRawIndex(dataIndex)\n                    });\n                });\n            }\n        });\n\n        return {\n            payloadBatch: payloadBatch,\n            snapToValue: snapToValue\n        };\n    }\n\n    function showPointer(showValueMap, axisInfo, value, payloadBatch) {\n        showValueMap[axisInfo.key] = {value: value, payloadBatch: payloadBatch};\n    }\n\n    function showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n        var payloadBatch = payloadInfo.payloadBatch;\n        var axis = axisInfo.axis;\n        var axisModel = axis.model;\n        var axisPointerModel = axisInfo.axisPointerModel;\n\n        // If no data, do not create anything in dataByCoordSys,\n        // whose length will be used to judge whether dispatch action.\n        if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n            return;\n        }\n\n        var coordSysModel = axisInfo.coordSys.model;\n        var coordSysKey = modelHelper.makeKey(coordSysModel);\n        var coordSysItem = dataByCoordSys.map[coordSysKey];\n        if (!coordSysItem) {\n            coordSysItem = dataByCoordSys.map[coordSysKey] = {\n                coordSysId: coordSysModel.id,\n                coordSysIndex: coordSysModel.componentIndex,\n                coordSysType: coordSysModel.type,\n                coordSysMainType: coordSysModel.mainType,\n                dataByAxis: []\n            };\n            dataByCoordSys.list.push(coordSysItem);\n        }\n\n        coordSysItem.dataByAxis.push({\n            axisDim: axis.dim,\n            axisIndex: axisModel.componentIndex,\n            axisType: axisModel.type,\n            axisId: axisModel.id,\n            value: value,\n            // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n            // depends that all models have been updated. So it should not be performed\n            // here. Considering axisPointerModel used here is volatile, which is hard\n            // to be retrieve in TooltipView, we prepare parameters here.\n            valueLabelOpt: {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            },\n            seriesDataIndices: payloadBatch.slice()\n        });\n    }\n\n    function updateModelActually(showValueMap, axesInfo, outputFinder) {\n        var outputAxesInfo = outputFinder.axesInfo = [];\n        // Basic logic: If no 'show' required, 'hide' this axisPointer.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            var valItem = showValueMap[key];\n\n            if (valItem) {\n                !axisInfo.useHandle && (option.status = 'show');\n                option.value = valItem.value;\n                // For label formatter param and highlight.\n                option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n            }\n            // When always show (e.g., handle used), remain\n            // original value and status.\n            else {\n                // If hide, value still need to be set, consider\n                // click legend to toggle axis blank.\n                !axisInfo.useHandle && (option.status = 'hide');\n            }\n\n            // If status is 'hide', should be no info in payload.\n            option.status === 'show' && outputAxesInfo.push({\n                axisDim: axisInfo.axis.dim,\n                axisIndex: axisInfo.axis.model.componentIndex,\n                value: option.value\n            });\n        });\n    }\n\n    function dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n        // Basic logic: If no showTip required, hideTip will be dispatched.\n        if (illegalPoint(point) || !dataByCoordSys.list.length) {\n            dispatchAction({type: 'hideTip'});\n            return;\n        }\n\n        // In most case only one axis (or event one series is used). It is\n        // convinient to fetch payload.seriesIndex and payload.dataIndex\n        // dirtectly. So put the first seriesIndex and dataIndex of the first\n        // axis on the payload.\n        var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n\n        dispatchAction({\n            type: 'showTip',\n            escapeConnect: true,\n            x: point[0],\n            y: point[1],\n            tooltipOption: payload.tooltipOption,\n            position: payload.position,\n            dataIndexInside: sampleItem.dataIndexInside,\n            dataIndex: sampleItem.dataIndex,\n            seriesIndex: sampleItem.seriesIndex,\n            dataByCoordSys: dataByCoordSys.list\n        });\n    }\n\n    function dispatchHighDownActually(axesInfo, dispatchAction, api) {\n        // FIXME\n        // highlight status modification shoule be a stage of main process?\n        // (Consider confilct (e.g., legend and axisPointer) and setOption)\n\n        var zr = api.getZr();\n        var highDownKey = 'axisPointerLastHighlights';\n        var lastHighlights = get(zr)[highDownKey] || {};\n        var newHighlights = get(zr)[highDownKey] = {};\n\n        // Update highlight/downplay status according to axisPointer model.\n        // Build hash map and remove duplicate incidentally.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n                var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n                newHighlights[key] = batchItem;\n            });\n        });\n\n        // Diff.\n        var toHighlight = [];\n        var toDownplay = [];\n        zrUtil.each(lastHighlights, function (batchItem, key) {\n            !newHighlights[key] && toDownplay.push(batchItem);\n        });\n        zrUtil.each(newHighlights, function (batchItem, key) {\n            !lastHighlights[key] && toHighlight.push(batchItem);\n        });\n\n        toDownplay.length && api.dispatchAction({\n            type: 'downplay', escapeConnect: true, batch: toDownplay\n        });\n        toHighlight.length && api.dispatchAction({\n            type: 'highlight', escapeConnect: true, batch: toHighlight\n        });\n    }\n\n    function findInputAxisInfo(inputAxesInfo, axisInfo) {\n        for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n            var inputAxisInfo = inputAxesInfo[i];\n            if (axisInfo.axis.dim === inputAxisInfo.axisDim\n                && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex\n            ) {\n                return inputAxisInfo;\n            }\n        }\n    }\n\n    function makeMapperParam(axisInfo) {\n        var axisModel = axisInfo.axis.model;\n        var item = {};\n        var dim = item.axisDim = axisInfo.axis.dim;\n        item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n        item.axisName = item[dim + 'AxisName'] = axisModel.name;\n        item.axisId = item[dim + 'AxisId'] = axisModel.id;\n        return item;\n    }\n\n    function illegalPoint(point) {\n        return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n    }\n\n    module.exports = axisTrigger;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/axisTrigger.js\n// module id = 723\n// module chunks = 0 1 2","\n    // List layout\n    var layout = require('../../util/layout');\n    var formatUtil = require('../../util/format');\n    var graphic = require('../../util/graphic');\n\n    module.exports = {\n        /**\n         * Layout list like component.\n         * It will box layout each items in group of component and then position the whole group in the viewport\n         * @param {module:zrender/group/Group} group\n         * @param {module:echarts/model/Component} componentModel\n         * @param {module:echarts/ExtensionAPI}\n         */\n        layout: function (group, componentModel, api) {\n            var boxLayoutParams = componentModel.getBoxLayoutParams();\n            var padding = componentModel.get('padding');\n            var viewportSize = {width: api.getWidth(), height: api.getHeight()};\n\n            var rect = layout.getLayoutRect(\n                boxLayoutParams,\n                viewportSize,\n                padding\n            );\n\n            layout.box(\n                componentModel.get('orient'),\n                group,\n                componentModel.get('itemGap'),\n                rect.width,\n                rect.height\n            );\n\n            layout.positionElement(\n                group,\n                boxLayoutParams,\n                viewportSize,\n                padding\n            );\n        },\n\n        makeBackground: function (rect, componentModel) {\n            var padding = formatUtil.normalizeCssArray(\n                componentModel.get('padding')\n            );\n            var style = componentModel.getItemStyle(['color', 'opacity']);\n            style.fill = componentModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: rect.x - padding[3],\n                    y: rect.y - padding[0],\n                    width: rect.width + padding[1] + padding[3],\n                    height: rect.height + padding[0] + padding[2],\n                    r: componentModel.get('borderRadius')\n                },\n                style: style,\n                silent: true,\n                z2: -1\n            });\n            // FIXME\n            // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n            // and background rect when setting like `left: 0`, `top: 0`.\n            // graphic.subPixelOptimizeRect(rect);\n\n            return rect;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/helper/listComponent.js\n// module id = 724\n// module chunks = 0 1 2","\n\n    // Do not contain scrollable legend, for sake of file size.\n\n    require('./legend/LegendModel');\n    require('./legend/legendAction');\n    require('./legend/LegendView');\n\n    var echarts = require('../echarts');\n    // Series Filter\n    echarts.registerProcessor(require('./legend/legendFilter'));\n\n    require('../model/Component').registerSubTypeDefaulter('legend', function () {\n        // Default 'plain' when no type specified.\n        return 'plain';\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend.js\n// module id = 725\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Model = require('../../model/Model');\n\n    var LegendModel = require('../../echarts').extendComponentModel({\n\n        type: 'legend.plain',\n\n        dependencies: ['series'],\n\n        layoutMode: {\n            type: 'box',\n            // legend.width/height are maxWidth/maxHeight actually,\n            // whereas realy width/height is calculated by its content.\n            // (Setting {left: 10, right: 10} does not make sense).\n            // So consider the case:\n            // `setOption({legend: {left: 10});`\n            // then `setOption({legend: {right: 10});`\n            // The previous `left` should be cleared by setting `ignoreSize`.\n            ignoreSize: true\n        },\n\n        init: function (option, parentModel, ecModel) {\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            option.selected = option.selected || {};\n        },\n\n        mergeOption: function (option) {\n            LegendModel.superCall(this, 'mergeOption', option);\n        },\n\n        optionUpdated: function () {\n            this._updateData(this.ecModel);\n\n            var legendData = this._data;\n\n            // If selectedMode is single, try to select one\n            if (legendData[0] && this.get('selectedMode') === 'single') {\n                var hasSelected = false;\n                // If has any selected in option.selected\n                for (var i = 0; i < legendData.length; i++) {\n                    var name = legendData[i].get('name');\n                    if (this.isSelected(name)) {\n                        // Force to unselect others\n                        this.select(name);\n                        hasSelected = true;\n                        break;\n                    }\n                }\n                // Try select the first if selectedMode is single\n                !hasSelected && this.select(legendData[0].get('name'));\n            }\n        },\n\n        _updateData: function (ecModel) {\n            var legendData = zrUtil.map(this.get('data') || [], function (dataItem) {\n                // Can be string or number\n                if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n                    dataItem = {\n                        name: dataItem\n                    };\n                }\n                return new Model(dataItem, this, this.ecModel);\n            }, this);\n            this._data = legendData;\n\n            var availableNames = zrUtil.map(ecModel.getSeries(), function (series) {\n                return series.name;\n            });\n            ecModel.eachSeries(function (seriesModel) {\n                if (seriesModel.legendDataProvider) {\n                    var data = seriesModel.legendDataProvider();\n                    availableNames = availableNames.concat(data.mapArray(data.getName));\n                }\n            });\n            /**\n             * @type {Array.<string>}\n             * @private\n             */\n            this._availableNames = availableNames;\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Model>}\n         */\n        getData: function () {\n            return this._data;\n        },\n\n        /**\n         * @param {string} name\n         */\n        select: function (name) {\n            var selected = this.option.selected;\n            var selectedMode = this.get('selectedMode');\n            if (selectedMode === 'single') {\n                var data = this._data;\n                zrUtil.each(data, function (dataItem) {\n                    selected[dataItem.get('name')] = false;\n                });\n            }\n            selected[name] = true;\n        },\n\n        /**\n         * @param {string} name\n         */\n        unSelect: function (name) {\n            if (this.get('selectedMode') !== 'single') {\n                this.option.selected[name] = false;\n            }\n        },\n\n        /**\n         * @param {string} name\n         */\n        toggleSelected: function (name) {\n            var selected = this.option.selected;\n            // Default is true\n            if (!selected.hasOwnProperty(name)) {\n                selected[name] = true;\n            }\n            this[selected[name] ? 'unSelect' : 'select'](name);\n        },\n\n        /**\n         * @param {string} name\n         */\n        isSelected: function (name) {\n            var selected = this.option.selected;\n            return !(selected.hasOwnProperty(name) && !selected[name])\n                && zrUtil.indexOf(this._availableNames, name) >= 0;\n        },\n\n        defaultOption: {\n            // 一级层叠\n            zlevel: 0,\n            // 二级层叠\n            z: 4,\n            show: true,\n\n            // 布局方式，默认为水平布局，可选为：\n            // 'horizontal' | 'vertical'\n            orient: 'horizontal',\n\n            left: 'center',\n            // right: 'center',\n\n            top: 0,\n            // bottom: null,\n\n            // 水平对齐\n            // 'auto' | 'left' | 'right'\n            // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n            align: 'auto',\n\n            backgroundColor: 'rgba(0,0,0,0)',\n            // 图例边框颜色\n            borderColor: '#ccc',\n            borderRadius: 0,\n            // 图例边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n            // 图例内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n            // 各个item之间的间隔，单位px，默认为10，\n            // 横向布局时为水平间隔，纵向布局时为纵向间隔\n            itemGap: 10,\n            // 图例图形宽度\n            itemWidth: 25,\n            // 图例图形高度\n            itemHeight: 14,\n\n            // 图例关闭时候的颜色\n            inactiveColor: '#ccc',\n\n            textStyle: {\n                // 图例文字颜色\n                color: '#333'\n            },\n            // formatter: '',\n            // 选择模式，默认开启图例开关\n            selectedMode: true,\n            // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n            // selected: null,\n            // 图例内容（详见legend.data，数组中每一项代表一个item\n            // data: [],\n\n            // Tooltip 相关配置\n            tooltip: {\n                show: false\n            }\n        }\n    });\n\n    module.exports = LegendModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend/LegendModel.js\n// module id = 726\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var symbolCreator = require('../../util/symbol');\n    var graphic = require('../../util/graphic');\n    var listComponentHelper = require('../helper/listComponent');\n    var layoutUtil = require('../../util/layout');\n\n    var curry = zrUtil.curry;\n    var each = zrUtil.each;\n    var Group = graphic.Group;\n\n    module.exports = require('../../echarts').extendComponentView({\n\n        type: 'legend.plain',\n\n        newlineDisabled: false,\n\n        /**\n         * @override\n         */\n        init: function () {\n\n            /**\n             * @private\n             * @type {module:zrender/container/Group}\n             */\n            this.group.add(this._contentGroup = new Group());\n\n            /**\n             * @private\n             * @type {module:zrender/Element}\n             */\n            this._backgroundEl;\n        },\n\n        /**\n         * @protected\n         */\n        getContentGroup: function () {\n            return this._contentGroup;\n        },\n\n        /**\n         * @override\n         */\n        render: function (legendModel, ecModel, api) {\n\n            this.resetInner();\n\n            if (!legendModel.get('show', true)) {\n                return;\n            }\n\n            var itemAlign = legendModel.get('align');\n            if (!itemAlign || itemAlign === 'auto') {\n                itemAlign = (\n                    legendModel.get('left') === 'right'\n                    && legendModel.get('orient') === 'vertical'\n                ) ? 'right' : 'left';\n            }\n\n            this.renderInner(itemAlign, legendModel, ecModel, api);\n\n            // Perform layout.\n            var positionInfo = legendModel.getBoxLayoutParams();\n            var viewportSize = {width: api.getWidth(), height: api.getHeight()};\n            var padding = legendModel.get('padding');\n\n            var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n            var mainRect = this.layoutInner(legendModel, itemAlign, maxSize);\n\n            // Place mainGroup, based on the calculated `mainRect`.\n            var layoutRect = layoutUtil.getLayoutRect(\n                zrUtil.defaults({width: mainRect.width, height: mainRect.height}, positionInfo),\n                viewportSize,\n                padding\n            );\n            this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]);\n\n            // Render background after group is layout.\n            this.group.add(\n                this._backgroundEl = listComponentHelper.makeBackground(mainRect, legendModel)\n            );\n        },\n\n        /**\n         * @protected\n         */\n        resetInner: function () {\n            this.getContentGroup().removeAll();\n            this._backgroundEl && this.group.remove(this._backgroundEl);\n        },\n\n        /**\n         * @protected\n         */\n        renderInner: function (itemAlign, legendModel, ecModel, api) {\n            var contentGroup = this.getContentGroup();\n            var legendDrawnMap = zrUtil.createHashMap();\n            var selectMode = legendModel.get('selectedMode');\n\n            each(legendModel.getData(), function (itemModel, dataIndex) {\n                var name = itemModel.get('name');\n\n                // Use empty string or \\n as a newline string\n                if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n                    contentGroup.add(new Group({\n                        newline: true\n                    }));\n                    return;\n                }\n\n                var seriesModel = ecModel.getSeriesByName(name)[0];\n\n                if (legendDrawnMap.get(name)) {\n                    // Have been drawed\n                    return;\n                }\n\n                // Series legend\n                if (seriesModel) {\n                    var data = seriesModel.getData();\n                    var color = data.getVisual('color');\n\n                    // If color is a callback function\n                    if (typeof color === 'function') {\n                        // Use the first data\n                        color = color(seriesModel.getDataParams(0));\n                    }\n\n                    // Using rect symbol defaultly\n                    var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n                    var symbolType = data.getVisual('symbol');\n\n                    var itemGroup = this._createItem(\n                        name, dataIndex, itemModel, legendModel,\n                        legendSymbolType, symbolType,\n                        itemAlign, color,\n                        selectMode\n                    );\n\n                    itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                        .on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api))\n                        .on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n\n                    legendDrawnMap.set(name, true);\n                }\n                else {\n                    // Data legend of pie, funnel\n                    ecModel.eachRawSeries(function (seriesModel) {\n                        // In case multiple series has same data name\n                        if (legendDrawnMap.get(name)) {\n                            return;\n                        }\n                        if (seriesModel.legendDataProvider) {\n                            var data = seriesModel.legendDataProvider();\n                            var idx = data.indexOfName(name);\n                            if (idx < 0) {\n                                return;\n                            }\n\n                            var color = data.getItemVisual(idx, 'color');\n\n                            var legendSymbolType = 'roundRect';\n\n                            var itemGroup = this._createItem(\n                                name, dataIndex, itemModel, legendModel,\n                                legendSymbolType, null,\n                                itemAlign, color,\n                                selectMode\n                            );\n\n                            itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                                // FIXME Should not specify the series name\n                                .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api))\n                                .on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n\n                            legendDrawnMap.set(name, true);\n                        }\n                    }, this);\n                }\n\n                if (__DEV__) {\n                    if (!legendDrawnMap.get(name)) {\n                        console.warn(name + ' series not exists. Legend data should be same with series name or data name.');\n                    }\n                }\n            }, this);\n        },\n\n        _createItem: function (\n            name, dataIndex, itemModel, legendModel,\n            legendSymbolType, symbolType,\n            itemAlign, color, selectMode\n        ) {\n            var itemWidth = legendModel.get('itemWidth');\n            var itemHeight = legendModel.get('itemHeight');\n            var inactiveColor = legendModel.get('inactiveColor');\n\n            var isSelected = legendModel.isSelected(name);\n            var itemGroup = new Group();\n\n            var textStyleModel = itemModel.getModel('textStyle');\n\n            var itemIcon = itemModel.get('icon');\n\n            var tooltipModel = itemModel.getModel('tooltip');\n            var legendGlobalTooltipModel = tooltipModel.parentModel;\n\n            // Use user given icon first\n            legendSymbolType = itemIcon || legendSymbolType;\n            itemGroup.add(symbolCreator.createSymbol(\n                legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor\n            ));\n\n            // Compose symbols\n            // PENDING\n            if (!itemIcon && symbolType\n                // At least show one symbol, can't be all none\n                && ((symbolType !== legendSymbolType) || symbolType == 'none')\n            ) {\n                var size = itemHeight * 0.8;\n                if (symbolType === 'none') {\n                    symbolType = 'circle';\n                }\n                // Put symbol in the center\n                itemGroup.add(symbolCreator.createSymbol(\n                    symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size,\n                    isSelected ? color : inactiveColor\n                ));\n            }\n\n            var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n            var textAlign = itemAlign;\n\n            var formatter = legendModel.get('formatter');\n            var content = name;\n            if (typeof formatter === 'string' && formatter) {\n                content = formatter.replace('{name}', name != null ? name : '');\n            }\n            else if (typeof formatter === 'function') {\n                content = formatter(name);\n            }\n\n            itemGroup.add(new graphic.Text({\n                style: graphic.setTextStyle({}, textStyleModel, {\n                    text: content,\n                    x: textX,\n                    y: itemHeight / 2,\n                    textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n                    textAlign: textAlign,\n                    textVerticalAlign: 'middle'\n                })\n            }));\n\n            // Add a invisible rect to increase the area of mouse hover\n            var hitRect = new graphic.Rect({\n                shape: itemGroup.getBoundingRect(),\n                invisible: true,\n                tooltip: tooltipModel.get('show') ? zrUtil.extend({\n                    content: name,\n                    // Defaul formatter\n                    formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n                        return name;\n                    },\n                    formatterParams: {\n                        componentType: 'legend',\n                        legendIndex: legendModel.componentIndex,\n                        name: name,\n                        $vars: ['name']\n                    }\n                }, tooltipModel.option) : null\n            });\n            itemGroup.add(hitRect);\n\n            itemGroup.eachChild(function (child) {\n                child.silent = true;\n            });\n\n            hitRect.silent = !selectMode;\n\n            this.getContentGroup().add(itemGroup);\n\n            graphic.setHoverStyle(itemGroup);\n\n            itemGroup.__legendDataIndex = dataIndex;\n\n            return itemGroup;\n        },\n\n        /**\n         * @protected\n         */\n        layoutInner: function (legendModel, itemAlign, maxSize) {\n            var contentGroup = this.getContentGroup();\n\n            // Place items in contentGroup.\n            layoutUtil.box(\n                legendModel.get('orient'),\n                contentGroup,\n                legendModel.get('itemGap'),\n                maxSize.width,\n                maxSize.height\n            );\n\n            var contentRect = contentGroup.getBoundingRect();\n            contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n\n            return this.group.getBoundingRect();\n        }\n\n    });\n\n    function dispatchSelectAction(name, api) {\n        api.dispatchAction({\n            type: 'legendToggleSelect',\n            name: name\n        });\n    }\n\n    function dispatchHighlightAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'highlight',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n    function dispatchDownplayAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'downplay',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend/LegendView.js\n// module id = 727\n// module chunks = 0 1 2","/**\n * @file Legend action\n */\n\n\n    var echarts = require('../../echarts');\n    var zrUtil = require('zrender/lib/core/util');\n\n    function legendSelectActionHandler(methodName, payload, ecModel) {\n        var selectedMap = {};\n        var isToggleSelect = methodName === 'toggleSelected';\n        var isSelected;\n        // Update all legend components\n        ecModel.eachComponent('legend', function (legendModel) {\n            if (isToggleSelect && isSelected != null) {\n                // Force other legend has same selected status\n                // Or the first is toggled to true and other are toggled to false\n                // In the case one legend has some item unSelected in option. And if other legend\n                // doesn't has the item, they will assume it is selected.\n                legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n            }\n            else {\n                legendModel[methodName](payload.name);\n                isSelected = legendModel.isSelected(payload.name);\n            }\n            var legendData = legendModel.getData();\n            zrUtil.each(legendData, function (model) {\n                var name = model.get('name');\n                // Wrap element\n                if (name === '\\n' || name === '') {\n                    return;\n                }\n                var isItemSelected = legendModel.isSelected(name);\n                if (selectedMap.hasOwnProperty(name)) {\n                    // Unselected if any legend is unselected\n                    selectedMap[name] = selectedMap[name] && isItemSelected;\n                }\n                else {\n                    selectedMap[name] = isItemSelected;\n                }\n            });\n        });\n        // Return the event explicitly\n        return {\n            name: payload.name,\n            selected: selectedMap\n        };\n    }\n    /**\n     * @event legendToggleSelect\n     * @type {Object}\n     * @property {string} type 'legendToggleSelect'\n     * @property {string} [from]\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendToggleSelect', 'legendselectchanged',\n        zrUtil.curry(legendSelectActionHandler, 'toggleSelected')\n    );\n\n    /**\n     * @event legendSelect\n     * @type {Object}\n     * @property {string} type 'legendSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendSelect', 'legendselected',\n        zrUtil.curry(legendSelectActionHandler, 'select')\n    );\n\n    /**\n     * @event legendUnSelect\n     * @type {Object}\n     * @property {string} type 'legendUnSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendUnSelect', 'legendunselected',\n        zrUtil.curry(legendSelectActionHandler, 'unSelect')\n    );\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend/legendAction.js\n// module id = 728\n// module chunks = 0 1 2","\n   module.exports = function (ecModel) {\n        var legendModels = ecModel.findComponents({\n            mainType: 'legend'\n        });\n        if (legendModels && legendModels.length) {\n            ecModel.filterSeries(function (series) {\n                // If in any legend component the status is not selected.\n                // Because in legend series is assumed selected when it is not in the legend data.\n                for (var i = 0; i < legendModels.length; i++) {\n                    if (!legendModels[i].isSelected(series.name)) {\n                        return false;\n                    }\n                }\n                return true;\n            });\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend/legendFilter.js\n// module id = 729\n// module chunks = 0 1 2","// FIXME Better way to pack data in graphic element\n\n\n    require('./axisPointer');\n\n    require('./tooltip/TooltipModel');\n\n    require('./tooltip/TooltipView');\n\n\n    // Show tip action\n    /**\n     * @action\n     * @property {string} type\n     * @property {number} seriesIndex\n     * @property {number} dataIndex\n     * @property {number} [x]\n     * @property {number} [y]\n     */\n    require('../echarts').registerAction(\n        {\n            type: 'showTip',\n            event: 'showTip',\n            update: 'tooltip:manuallyShowTip'\n        },\n        // noop\n        function () {}\n    );\n    // Hide tip action\n    require('../echarts').registerAction(\n        {\n            type: 'hideTip',\n            event: 'hideTip',\n            update: 'tooltip:manuallyHideTip'\n        },\n        // noop\n        function () {}\n    );\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip.js\n// module id = 730\n// module chunks = 0 1 2","/**\n * @module echarts/component/tooltip/TooltipContent\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var zrColor = require('zrender/lib/tool/color');\n    var eventUtil = require('zrender/lib/core/event');\n    var formatUtil = require('../../util/format');\n    var each = zrUtil.each;\n    var toCamelCase = formatUtil.toCamelCase;\n    var env = require('zrender/lib/core/env');\n\n    var vendors = ['', '-webkit-', '-moz-', '-o-'];\n\n    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n\n    /**\n     * @param {number} duration\n     * @return {string}\n     * @inner\n     */\n    function assembleTransition(duration) {\n        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\n                            + 'top ' + duration + 's ' + transitionCurve;\n        return zrUtil.map(vendors, function (vendorPrefix) {\n            return vendorPrefix + 'transition:' + transitionText;\n        }).join(';');\n    }\n\n    /**\n     * @param {Object} textStyle\n     * @return {string}\n     * @inner\n     */\n    function assembleFont(textStyleModel) {\n        var cssText = [];\n\n        var fontSize = textStyleModel.get('fontSize');\n        var color = textStyleModel.getTextColor();\n\n        color && cssText.push('color:' + color);\n\n        cssText.push('font:' + textStyleModel.getFont());\n\n        fontSize &&\n            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n\n        each(['decoration', 'align'], function (name) {\n            var val = textStyleModel.get(name);\n            val && cssText.push('text-' + name + ':' + val);\n        });\n\n        return cssText.join(';');\n    }\n\n    /**\n     * @param {Object} tooltipModel\n     * @return {string}\n     * @inner\n     */\n    function assembleCssText(tooltipModel) {\n\n        var cssText = [];\n\n        var transitionDuration = tooltipModel.get('transitionDuration');\n        var backgroundColor = tooltipModel.get('backgroundColor');\n        var textStyleModel = tooltipModel.getModel('textStyle');\n        var padding = tooltipModel.get('padding');\n\n        // Animation transition. Do not animate when transitionDuration is 0.\n        transitionDuration &&\n            cssText.push(assembleTransition(transitionDuration));\n\n        if (backgroundColor) {\n            if (env.canvasSupported) {\n                cssText.push('background-Color:' + backgroundColor);\n            }\n            else {\n                // for ie\n                cssText.push(\n                    'background-Color:#' + zrColor.toHex(backgroundColor)\n                );\n                cssText.push('filter:alpha(opacity=70)');\n            }\n        }\n\n        // Border style\n        each(['width', 'color', 'radius'], function (name) {\n            var borderName = 'border-' + name;\n            var camelCase = toCamelCase(borderName);\n            var val = tooltipModel.get(camelCase);\n            val != null &&\n                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n        });\n\n        // Text style\n        cssText.push(assembleFont(textStyleModel));\n\n        // Padding\n        if (padding != null) {\n            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n        }\n\n        return cssText.join(';') + ';';\n    }\n\n    /**\n     * @alias module:echarts/component/tooltip/TooltipContent\n     * @constructor\n     */\n    function TooltipContent(container, api) {\n        var el = document.createElement('div');\n        var zr = this._zr = api.getZr();\n\n        this.el = el;\n\n        this._x = api.getWidth() / 2;\n        this._y = api.getHeight() / 2;\n\n        container.appendChild(el);\n\n        this._container = container;\n\n        this._show = false;\n\n        /**\n         * @private\n         */\n        this._hideTimeout;\n\n        var self = this;\n        el.onmouseenter = function () {\n            // clear the timeout in hideLater and keep showing tooltip\n            if (self._enterable) {\n                clearTimeout(self._hideTimeout);\n                self._show = true;\n            }\n            self._inContent = true;\n        };\n        el.onmousemove = function (e) {\n            e = e || window.event;\n            if (!self._enterable) {\n                // Try trigger zrender event to avoid mouse\n                // in and out shape too frequently\n                var handler = zr.handler;\n                eventUtil.normalizeEvent(container, e, true);\n                handler.dispatch('mousemove', e);\n            }\n        };\n        el.onmouseleave = function () {\n            if (self._enterable) {\n                if (self._show) {\n                    self.hideLater(self._hideDelay);\n                }\n            }\n            self._inContent = false;\n        };\n    }\n\n    TooltipContent.prototype = {\n\n        constructor: TooltipContent,\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _enterable: true,\n\n        /**\n         * Update when tooltip is rendered\n         */\n        update: function () {\n            // FIXME\n            // Move this logic to ec main?\n            var container = this._container;\n            var stl = container.currentStyle\n                || document.defaultView.getComputedStyle(container);\n            var domStyle = container.style;\n            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n                domStyle.position = 'relative';\n            }\n            // Hide the tooltip\n            // PENDING\n            // this.hide();\n        },\n\n        show: function (tooltipModel) {\n            clearTimeout(this._hideTimeout);\n            var el = this.el;\n\n            el.style.cssText = gCssText + assembleCssText(tooltipModel)\n                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\n                + (tooltipModel.get('extraCssText') || '');\n\n            el.style.display = el.innerHTML ?  'block' : 'none';\n\n            this._show = true;\n        },\n\n        setContent: function (content) {\n            this.el.innerHTML = content == null ? '' : content;\n        },\n\n        setEnterable: function (enterable) {\n            this._enterable = enterable;\n        },\n\n        getSize: function () {\n            var el = this.el;\n            return [el.clientWidth, el.clientHeight];\n        },\n\n        moveTo: function (x, y) {\n            // xy should be based on canvas root. But tooltipContent is\n            // the sibling of canvas root. So padding of ec container\n            // should be considered here.\n            var zr = this._zr;\n            var viewportRootOffset;\n            if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n                x += viewportRootOffset.offsetLeft;\n                y += viewportRootOffset.offsetTop;\n            }\n\n            var style = this.el.style;\n            style.left = x + 'px';\n            style.top = y + 'px';\n\n            this._x = x;\n            this._y = y;\n        },\n\n        hide: function () {\n            this.el.style.display = 'none';\n            this._show = false;\n        },\n\n        hideLater: function (time) {\n            if (this._show && !(this._inContent && this._enterable)) {\n                if (time) {\n                    this._hideDelay = time;\n                    // Set show false to avoid invoke hideLater mutiple times\n                    this._show = false;\n                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n                }\n                else {\n                    this.hide();\n                }\n            }\n        },\n\n        isShow: function () {\n            return this._show;\n        }\n    };\n\n    module.exports = TooltipContent;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipContent.js\n// module id = 731\n// module chunks = 0 1 2","\n\n    require('../../echarts').extendComponentModel({\n\n        type: 'tooltip',\n\n        dependencies: ['axisPointer'],\n\n        defaultOption: {\n            zlevel: 0,\n\n            z: 8,\n\n            show: true,\n\n            // tooltip主体内容\n            showContent: true,\n\n            // 'trigger' only works on coordinate system.\n            // 'item' | 'axis' | 'none'\n            trigger: 'item',\n\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: 'mousemove|click',\n\n            alwaysShowContent: false,\n\n            displayMode: 'single', // 'single' | 'multipleByCoordSys'\n\n            // 位置 {Array} | {Function}\n            // position: null\n            // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n            // align: null,\n            // verticalAlign: null,\n\n            // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n            confine: false,\n\n            // 内容格式器：{string}（Template） ¦ {Function}\n            // formatter: null\n\n            showDelay: 0,\n\n            // 隐藏延迟，单位ms\n            hideDelay: 100,\n\n            // 动画变换时间，单位s\n            transitionDuration: 0.4,\n\n            enterable: false,\n\n            // 提示背景颜色，默认为透明度为0.7的黑色\n            backgroundColor: 'rgba(50,50,50,0.7)',\n\n            // 提示边框颜色\n            borderColor: '#333',\n\n            // 提示边框圆角，单位px，默认为4\n            borderRadius: 4,\n\n            // 提示边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 提示内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // Extra css text\n            extraCssText: '',\n\n            // 坐标轴指示器，坐标轴触发有效\n            axisPointer: {\n                // 默认为直线\n                // 可选为：'line' | 'shadow' | 'cross'\n                type: 'line',\n\n                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n                // 极坐标系会默认选择 angle 轴\n                axis: 'auto',\n\n                animation: 'auto',\n                animationDurationUpdate: 200,\n                animationEasingUpdate: 'exponentialOut',\n\n                crossStyle: {\n                    color: '#999',\n                    width: 1,\n                    type: 'dashed',\n\n                    // TODO formatter\n                    textStyle: {}\n                }\n\n                // lineStyle and shadowStyle should not be specified here,\n                // otherwise it will always override those styles on option.axisPointer.\n            },\n            textStyle: {\n                color: '#fff',\n                fontSize: 14\n            }\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipModel.js\n// module id = 732\n// module chunks = 0 1 2","\n\n    var TooltipContent = require('./TooltipContent');\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../../util/format');\n    var numberUtil = require('../../util/number');\n    var graphic = require('../../util/graphic');\n    var findPointFromSeries = require('../axisPointer/findPointFromSeries');\n    var layoutUtil = require('../../util/layout');\n    var env = require('zrender/lib/core/env');\n    var Model = require('../../model/Model');\n    var globalListener = require('../axisPointer/globalListener');\n    var axisHelper = require('../../coord/axisHelper');\n    var axisPointerViewHelper = require('../axisPointer/viewHelper');\n\n    var bind = zrUtil.bind;\n    var each = zrUtil.each;\n    var parsePercent = numberUtil.parsePercent;\n\n\n    var proxyRect = new graphic.Rect({\n        shape: {x: -1, y: -1, width: 2, height: 2}\n    });\n\n    require('../../echarts').extendComponentView({\n\n        type: 'tooltip',\n\n        init: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var tooltipContent = new TooltipContent(api.getDom(), api);\n            this._tooltipContent = tooltipContent;\n        },\n\n        render: function (tooltipModel, ecModel, api) {\n            if (env.node) {\n                return;\n            }\n\n            // Reset\n            this.group.removeAll();\n\n            /**\n             * @private\n             * @type {module:echarts/component/tooltip/TooltipModel}\n             */\n            this._tooltipModel = tooltipModel;\n\n            /**\n             * @private\n             * @type {module:echarts/model/Global}\n             */\n            this._ecModel = ecModel;\n\n            /**\n             * @private\n             * @type {module:echarts/ExtensionAPI}\n             */\n            this._api = api;\n\n            /**\n             * Should be cleaned when render.\n             * @private\n             * @type {Array.<Array.<Object>>}\n             */\n            this._lastDataByCoordSys = null;\n\n            /**\n             * @private\n             * @type {boolean}\n             */\n            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n\n            var tooltipContent = this._tooltipContent;\n            tooltipContent.update();\n            tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n            this._initGlobalListener();\n\n            this._keepShow();\n        },\n\n        _initGlobalListener: function () {\n            var tooltipModel = this._tooltipModel;\n            var triggerOn = tooltipModel.get('triggerOn');\n\n            globalListener.register(\n                'itemTooltip',\n                this._api,\n                bind(function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none') {\n                        if (triggerOn.indexOf(currTrigger) >= 0) {\n                            this._tryShow(e, dispatchAction);\n                        }\n                        else if (currTrigger === 'leave') {\n                            this._hide(dispatchAction);\n                        }\n                    }\n                }, this)\n            );\n        },\n\n        _keepShow: function () {\n            var tooltipModel = this._tooltipModel;\n            var ecModel = this._ecModel;\n            var api = this._api;\n\n            // Try to keep the tooltip show when refreshing\n            if (this._lastX != null\n                && this._lastY != null\n                // When user is willing to control tooltip totally using API,\n                // self.manuallyShowTip({x, y}) might cause tooltip hide,\n                // which is not expected.\n                && tooltipModel.get('triggerOn') !== 'none'\n            ) {\n                var self = this;\n                clearTimeout(this._refreshUpdateTimeout);\n                this._refreshUpdateTimeout = setTimeout(function () {\n                    // Show tip next tick after other charts are rendered\n                    // In case highlight action has wrong result\n                    // FIXME\n                    self.manuallyShowTip(tooltipModel, ecModel, api, {\n                        x: self._lastX,\n                        y: self._lastY\n                    });\n                });\n            }\n        },\n\n        /**\n         * Show tip manually by\n         * dispatchAction({\n         *     type: 'showTip',\n         *     x: 10,\n         *     y: 10\n         * });\n         * Or\n         * dispatchAction({\n         *      type: 'showTip',\n         *      seriesIndex: 0,\n         *      dataIndex or dataIndexInside or name\n         * });\n         *\n         *  TODO Batch\n         */\n        manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n            if (payload.from === this.uid || env.node) {\n                return;\n            }\n\n            var dispatchAction = makeDispatchAction(payload, api);\n\n            // Reset ticket\n            this._ticket = '';\n\n            // When triggered from axisPointer.\n            var dataByCoordSys = payload.dataByCoordSys;\n\n            if (payload.tooltip && payload.x != null && payload.y != null) {\n                var el = proxyRect;\n                el.position = [payload.x, payload.y];\n                el.update();\n                el.tooltip = payload.tooltip;\n                // Manually show tooltip while view is not using zrender elements.\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    target: el\n                }, dispatchAction);\n            }\n            else if (dataByCoordSys) {\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    event: {},\n                    dataByCoordSys: payload.dataByCoordSys,\n                    tooltipOption: payload.tooltipOption\n                }, dispatchAction);\n            }\n            else if (payload.seriesIndex != null) {\n\n                if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n                    return;\n                }\n\n                var pointInfo = findPointFromSeries(payload, ecModel);\n                var cx = pointInfo.point[0];\n                var cy = pointInfo.point[1];\n                if (cx != null && cy != null) {\n                    this._tryShow({\n                        offsetX: cx,\n                        offsetY: cy,\n                        position: payload.position,\n                        target: pointInfo.el,\n                        event: {}\n                    }, dispatchAction);\n                }\n            }\n            else if (payload.x != null && payload.y != null) {\n                // FIXME\n                // should wrap dispatchAction like `axisPointer/globalListener` ?\n                api.dispatchAction({\n                    type: 'updateAxisPointer',\n                    x: payload.x,\n                    y: payload.y\n                });\n\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    target: api.getZr().findHover(payload.x, payload.y).target,\n                    event: {}\n                }, dispatchAction);\n            }\n        },\n\n        manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n            var tooltipContent = this._tooltipContent;\n\n            if (!this._alwaysShowContent) {\n                tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n            }\n\n            this._lastX = this._lastY = null;\n\n            if (payload.from !== this.uid) {\n                this._hide(makeDispatchAction(payload, api));\n            }\n        },\n\n        // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n        // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n        // and tooltip.\n        _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n            var seriesIndex = payload.seriesIndex;\n            var dataIndex = payload.dataIndex;\n            var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n            if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n                return;\n            }\n\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n            if (!seriesModel) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                seriesModel,\n                (seriesModel.coordinateSystem || {}).model,\n                tooltipModel\n            ]);\n\n            if (tooltipModel.get('trigger') !== 'axis') {\n                return;\n            }\n\n            api.dispatchAction({\n                type: 'updateAxisPointer',\n                seriesIndex: seriesIndex,\n                dataIndex: dataIndex,\n                position: payload.position\n            });\n\n            return true;\n        },\n\n        _tryShow: function (e, dispatchAction) {\n            var el = e.target;\n            var tooltipModel = this._tooltipModel;\n\n            if (!tooltipModel) {\n                return;\n            }\n\n            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n            this._lastX = e.offsetX;\n            this._lastY = e.offsetY;\n\n            var dataByCoordSys = e.dataByCoordSys;\n            if (dataByCoordSys && dataByCoordSys.length) {\n                this._showAxisTooltip(dataByCoordSys, e);\n            }\n            // Always show item tooltip if mouse is on the element with dataIndex\n            else if (el && el.dataIndex != null) {\n                this._lastDataByCoordSys = null;\n                this._showSeriesItemTooltip(e, el, dispatchAction);\n            }\n            // Tooltip provided directly. Like legend.\n            else if (el && el.tooltip) {\n                this._lastDataByCoordSys = null;\n                this._showComponentItemTooltip(e, el, dispatchAction);\n            }\n            else {\n                this._lastDataByCoordSys = null;\n                this._hide(dispatchAction);\n            }\n        },\n\n        _showOrMove: function (tooltipModel, cb) {\n            // showDelay is used in this case: tooltip.enterable is set\n            // as true. User intent to move mouse into tooltip and click\n            // something. `showDelay` makes it easyer to enter the content\n            // but tooltip do not move immediately.\n            var delay = tooltipModel.get('showDelay');\n            cb = zrUtil.bind(cb, this);\n            clearTimeout(this._showTimout);\n            delay > 0\n                ? (this._showTimout = setTimeout(cb, delay))\n                : cb();\n        },\n\n        _showAxisTooltip: function (dataByCoordSys, e) {\n            var ecModel = this._ecModel;\n            var globalTooltipModel = this._tooltipModel;\n            var point = [e.offsetX, e.offsetY];\n            var singleDefaultHTML = [];\n            var singleParamsList = [];\n            var singleTooltipModel = buildTooltipModel([\n                e.tooltipOption,\n                globalTooltipModel\n            ]);\n\n            each(dataByCoordSys, function (itemCoordSys) {\n                // var coordParamList = [];\n                // var coordDefaultHTML = [];\n                // var coordTooltipModel = buildTooltipModel([\n                //     e.tooltipOption,\n                //     itemCoordSys.tooltipOption,\n                //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n                //     globalTooltipModel\n                // ]);\n                // var displayMode = coordTooltipModel.get('displayMode');\n                // var paramsList = displayMode === 'single' ? singleParamsList : [];\n\n                each(itemCoordSys.dataByAxis, function (item) {\n                    var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n                    var axisValue = item.value;\n                    var seriesDefaultHTML = [];\n\n                    if (!axisModel || axisValue == null) {\n                        return;\n                    }\n\n                    var valueLabel = axisPointerViewHelper.getValueLabel(\n                        axisValue, axisModel.axis, ecModel,\n                        item.seriesDataIndices,\n                        item.valueLabelOpt\n                    );\n\n                    zrUtil.each(item.seriesDataIndices, function (idxItem) {\n                        var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                        var dataIndex = idxItem.dataIndexInside;\n                        var dataParams = series && series.getDataParams(dataIndex);\n                        dataParams.axisDim = item.axisDim;\n                        dataParams.axisIndex = item.axisIndex;\n                        dataParams.axisType = item.axisType;\n                        dataParams.axisId = item.axisId;\n                        dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n                        dataParams.axisValueLabel = valueLabel;\n\n                        if (dataParams) {\n                            singleParamsList.push(dataParams);\n                            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n                        }\n                    });\n\n                    // Default tooltip content\n                    // FIXME\n                    // (1) shold be the first data which has name?\n                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n                    var firstLine = valueLabel;\n                    singleDefaultHTML.push(\n                        (firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '')\n                        + seriesDefaultHTML.join('<br />')\n                    );\n                });\n            }, this);\n\n            // In most case, the second axis is shown upper than the first one.\n            singleDefaultHTML.reverse();\n            singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n\n            var positionExpr = e.position;\n            this._showOrMove(singleTooltipModel, function () {\n                if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n                    this._updatePosition(\n                        singleTooltipModel,\n                        positionExpr,\n                        point[0], point[1],\n                        this._tooltipContent,\n                        singleParamsList\n                    );\n                }\n                else {\n                    this._showTooltipContent(\n                        singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(),\n                        point[0], point[1], positionExpr\n                    );\n                }\n            });\n\n            // Do not trigger events here, because this branch only be entered\n            // from dispatchAction.\n        },\n\n        _showSeriesItemTooltip: function (e, el, dispatchAction) {\n            var ecModel = this._ecModel;\n            // Use dataModel in element if possible\n            // Used when mouseover on a element like markPoint or edge\n            // In which case, the data is not main data in series.\n            var seriesIndex = el.seriesIndex;\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n            // For example, graph link.\n            var dataModel = el.dataModel || seriesModel;\n            var dataIndex = el.dataIndex;\n            var dataType = el.dataType;\n            var data = dataModel.getData();\n\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                dataModel,\n                seriesModel && (seriesModel.coordinateSystem || {}).model,\n                this._tooltipModel\n            ]);\n\n            var tooltipTrigger = tooltipModel.get('trigger');\n            if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n                return;\n            }\n\n            var params = dataModel.getDataParams(dataIndex, dataType);\n            var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n            var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n            this._showOrMove(tooltipModel, function () {\n                this._showTooltipContent(\n                    tooltipModel, defaultHtml, params, asyncTicket,\n                    e.offsetX, e.offsetY, e.position, e.target\n                );\n            });\n\n            // FIXME\n            // duplicated showtip if manuallyShowTip is called from dispatchAction.\n            dispatchAction({\n                type: 'showTip',\n                dataIndexInside: dataIndex,\n                dataIndex: data.getRawIndex(dataIndex),\n                seriesIndex: seriesIndex,\n                from: this.uid\n            });\n        },\n\n        _showComponentItemTooltip: function (e, el, dispatchAction) {\n            var tooltipOpt = el.tooltip;\n            if (typeof tooltipOpt === 'string') {\n                var content = tooltipOpt;\n                tooltipOpt = {\n                    content: content,\n                    // Fixed formatter\n                    formatter: content\n                };\n            }\n            var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n            var defaultHtml = subTooltipModel.get('content');\n            var asyncTicket = Math.random();\n\n            // Do not check whether `trigger` is 'none' here, because `trigger`\n            // only works on cooridinate system. In fact, we have not found case\n            // that requires setting `trigger` nothing on component yet.\n\n            this._showOrMove(subTooltipModel, function () {\n                this._showTooltipContent(\n                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\n                    asyncTicket, e.offsetX, e.offsetY, e.position, el\n                );\n            });\n\n            // If not dispatch showTip, tip may be hide triggered by axis.\n            dispatchAction({\n                type: 'showTip',\n                from: this.uid\n            });\n        },\n\n        _showTooltipContent: function (\n            tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el\n        ) {\n            // Reset ticket\n            this._ticket = '';\n\n            if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n                return;\n            }\n\n            var tooltipContent = this._tooltipContent;\n\n            var formatter = tooltipModel.get('formatter');\n            positionExpr = positionExpr || tooltipModel.get('position');\n            var html = defaultHtml;\n\n            if (formatter && typeof formatter === 'string') {\n                html = formatUtil.formatTpl(formatter, params, true);\n            }\n            else if (typeof formatter === 'function') {\n                var callback = bind(function (cbTicket, html) {\n                    if (cbTicket === this._ticket) {\n                        tooltipContent.setContent(html);\n                        this._updatePosition(\n                            tooltipModel, positionExpr, x, y, tooltipContent, params, el\n                        );\n                    }\n                }, this);\n                this._ticket = asyncTicket;\n                html = formatter(params, asyncTicket, callback);\n            }\n\n            tooltipContent.setContent(html);\n            tooltipContent.show(tooltipModel);\n\n            this._updatePosition(\n                tooltipModel, positionExpr, x, y, tooltipContent, params, el\n            );\n        },\n\n        /**\n         * @param  {string|Function|Array.<number>|Object} positionExpr\n         * @param  {number} x Mouse x\n         * @param  {number} y Mouse y\n         * @param  {boolean} confine Whether confine tooltip content in view rect.\n         * @param  {Object|<Array.<Object>} params\n         * @param  {module:zrender/Element} el target element\n         * @param  {module:echarts/ExtensionAPI} api\n         * @return {Array.<number>}\n         */\n        _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n            var viewWidth = this._api.getWidth();\n            var viewHeight = this._api.getHeight();\n            positionExpr = positionExpr || tooltipModel.get('position');\n\n            var contentSize = content.getSize();\n            var align = tooltipModel.get('align');\n            var vAlign = tooltipModel.get('verticalAlign');\n            var rect = el && el.getBoundingRect().clone();\n            el && rect.applyTransform(el.transform);\n\n            if (typeof positionExpr === 'function') {\n                // Callback of position can be an array or a string specify the position\n                positionExpr = positionExpr([x, y], params, content.el, rect, {\n                    viewSize: [viewWidth, viewHeight],\n                    contentSize: contentSize.slice()\n                });\n            }\n\n            if (zrUtil.isArray(positionExpr)) {\n                x = parsePercent(positionExpr[0], viewWidth);\n                y = parsePercent(positionExpr[1], viewHeight);\n            }\n            else if (zrUtil.isObject(positionExpr)) {\n                positionExpr.width = contentSize[0];\n                positionExpr.height = contentSize[1];\n                var layoutRect = layoutUtil.getLayoutRect(\n                    positionExpr, {width: viewWidth, height: viewHeight}\n                );\n                x = layoutRect.x;\n                y = layoutRect.y;\n                align = null;\n                // When positionExpr is left/top/right/bottom,\n                // align and verticalAlign will not work.\n                vAlign = null;\n            }\n            // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n            else if (typeof positionExpr === 'string' && el) {\n                var pos = calcTooltipPosition(\n                    positionExpr, rect, contentSize\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n            else {\n                var pos = refixTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n            vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n            if (tooltipModel.get('confine')) {\n                var pos = confineTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            content.moveTo(x, y);\n        },\n\n        // FIXME\n        // Should we remove this but leave this to user?\n        _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n            var lastCoordSys = this._lastDataByCoordSys;\n            var contentNotChanged = !!lastCoordSys\n                && lastCoordSys.length === dataByCoordSys.length;\n\n            contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n                var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n                var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n                var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n                contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n\n                contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n                    var thisItem = thisDataByAxis[indexAxis] || {};\n                    var lastIndices = lastItem.seriesDataIndices || [];\n                    var newIndices = thisItem.seriesDataIndices || [];\n\n                    contentNotChanged &=\n                        lastItem.value === thisItem.value\n                        && lastItem.axisType === thisItem.axisType\n                        && lastItem.axisId === thisItem.axisId\n                        && lastIndices.length === newIndices.length;\n\n                    contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n                        var newIdxItem = newIndices[j];\n                        contentNotChanged &=\n                            lastIdxItem.seriesIndex === newIdxItem.seriesIndex\n                            && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n                    });\n                });\n            });\n\n            this._lastDataByCoordSys = dataByCoordSys;\n\n            return !!contentNotChanged;\n        },\n\n        _hide: function (dispatchAction) {\n            // Do not directly hideLater here, because this behavior may be prevented\n            // in dispatchAction when showTip is dispatched.\n\n            // FIXME\n            // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n            this._lastDataByCoordSys = null;\n            dispatchAction({\n                type: 'hideTip',\n                from: this.uid\n            });\n        },\n\n        dispose: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            this._tooltipContent.hide();\n            globalListener.unregister('itemTooltip', api);\n        }\n    });\n\n\n    /**\n     * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n     * From top to bottom. (the last one should be globalTooltipModel);\n     */\n    function buildTooltipModel(modelCascade) {\n        var resultModel = modelCascade.pop();\n        while (modelCascade.length) {\n            var tooltipOpt = modelCascade.pop();\n            if (tooltipOpt) {\n                if (tooltipOpt instanceof Model) {\n                    tooltipOpt = tooltipOpt.get('tooltip', true);\n                }\n                // In each data item tooltip can be simply write:\n                // {\n                //  value: 10,\n                //  tooltip: 'Something you need to know'\n                // }\n                if (typeof tooltipOpt === 'string') {\n                    tooltipOpt = {formatter: tooltipOpt};\n                }\n                resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n            }\n        }\n        return resultModel;\n    }\n\n    function makeDispatchAction(payload, api) {\n        return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n    }\n\n    function refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n        var size = getOuterSize(el);\n        var width = size.width;\n        var height = size.height;\n\n        if (gapH != null) {\n            if (x + width + gapH > viewWidth) {\n                x -= width + gapH;\n            }\n            else {\n                x += gapH;\n            }\n        }\n        if (gapV != null) {\n            if (y + height + gapV > viewHeight) {\n                y -= height + gapV;\n            }\n            else {\n                y += gapV;\n            }\n        }\n        return [x, y];\n    }\n\n    function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var size = getOuterSize(el);\n        var width = size.width;\n        var height = size.height;\n\n        x = Math.min(x + width, viewWidth) - width;\n        y = Math.min(y + height, viewHeight) - height;\n        x = Math.max(x, 0);\n        y = Math.max(y, 0);\n\n        return [x, y];\n    }\n\n    function getOuterSize(el) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        // Consider browser compatibility.\n        // IE8 does not support getComputedStyle.\n        if (document.defaultView && document.defaultView.getComputedStyle) {\n            var stl = document.defaultView.getComputedStyle(el);\n            if (stl) {\n                width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10)\n                    + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n                height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10)\n                    + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n            }\n        }\n\n        return {width: width, height: height};\n    }\n\n    function calcTooltipPosition(position, rect, contentSize) {\n        var domWidth = contentSize[0];\n        var domHeight = contentSize[1];\n        var gap = 5;\n        var x = 0;\n        var y = 0;\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n        switch (position) {\n            case 'inside':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'top':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y - domHeight - gap;\n                break;\n            case 'bottom':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight + gap;\n                break;\n            case 'left':\n                x = rect.x - domWidth - gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'right':\n                x = rect.x + rectWidth + gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n        }\n        return [x, y];\n    }\n\n    function isCenterAlign(align) {\n        return align === 'center' || align === 'middle';\n    }\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipView.js\n// module id = 733\n// module chunks = 0 1 2","\n\n    var axisDefault = require('./axisDefault');\n    var zrUtil = require('zrender/lib/core/util');\n    var ComponentModel = require('../model/Component');\n    var layout = require('../util/layout');\n\n    // FIXME axisType is fixed ?\n    var AXIS_TYPES = ['value', 'category', 'time', 'log'];\n\n    /**\n     * Generate sub axis model class\n     * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n     * @param {module:echarts/model/Component} BaseAxisModelClass\n     * @param {Function} axisTypeDefaulter\n     * @param {Object} [extraDefaultOption]\n     */\n    module.exports = function (axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n\n        zrUtil.each(AXIS_TYPES, function (axisType) {\n\n            BaseAxisModelClass.extend({\n\n                type: axisName + 'Axis.' + axisType,\n\n                mergeDefaultAndTheme: function (option, ecModel) {\n                    var layoutMode = this.layoutMode;\n                    var inputPositionParams = layoutMode\n                        ? layout.getLayoutParams(option) : {};\n\n                    var themeModel = ecModel.getTheme();\n                    zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n                    zrUtil.merge(option, this.getDefaultOption());\n\n                    option.type = axisTypeDefaulter(axisName, option);\n\n                    if (layoutMode) {\n                        layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n                    }\n                },\n\n                defaultOption: zrUtil.mergeAll(\n                    [\n                        {},\n                        axisDefault[axisType + 'Axis'],\n                        extraDefaultOption\n                    ],\n                    true\n                )\n            });\n        });\n\n        ComponentModel.registerSubTypeDefaulter(\n            axisName + 'Axis',\n            zrUtil.curry(axisTypeDefaulter, axisName)\n        );\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisModelCreator.js\n// module id = 734\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Axis = require('../Axis');\n\n    /**\n     * Extend axis 2d\n     * @constructor module:echarts/coord/cartesian/Axis2D\n     * @extends {module:echarts/coord/cartesian/Axis}\n     * @param {string} dim\n     * @param {*} scale\n     * @param {Array.<number>} coordExtent\n     * @param {string} axisType\n     * @param {string} position\n     */\n    var Axis2D = function (dim, scale, coordExtent, axisType, position) {\n        Axis.call(this, dim, scale, coordExtent);\n        /**\n         * Axis type\n         *  - 'category'\n         *  - 'value'\n         *  - 'time'\n         *  - 'log'\n         * @type {string}\n         */\n        this.type = axisType || 'value';\n\n        /**\n         * Axis position\n         *  - 'top'\n         *  - 'bottom'\n         *  - 'left'\n         *  - 'right'\n         */\n        this.position = position || 'bottom';\n    };\n\n    Axis2D.prototype = {\n\n        constructor: Axis2D,\n\n        /**\n         * Index of axis, can be used as key\n         */\n        index: 0,\n        /**\n         * If axis is on the zero position of the other axis\n         * @type {boolean}\n         */\n        onZero: false,\n\n        /**\n         * Axis model\n         * @param {module:echarts/coord/cartesian/AxisModel}\n         */\n        model: null,\n\n        isHorizontal: function () {\n            var position = this.position;\n            return position === 'top' || position === 'bottom';\n        },\n\n        /**\n         * Each item cooresponds to this.getExtent(), which\n         * means globalExtent[0] may greater than globalExtent[1],\n         * unless `asc` is input.\n         *\n         * @param {boolean} [asc]\n         * @return {Array.<number>}\n         */\n        getGlobalExtent: function (asc) {\n            var ret = this.getExtent();\n            ret[0] = this.toGlobalCoord(ret[0]);\n            ret[1] = this.toGlobalCoord(ret[1]);\n            asc && ret[0] > ret[1] && ret.reverse();\n            return ret;\n        },\n\n        getOtherAxis: function () {\n            this.grid.getOtherAxis();\n        },\n\n        /**\n         * If label is ignored.\n         * Automatically used when axis is category and label can not be all shown\n         * @param  {number}  idx\n         * @return {boolean}\n         */\n        isLabelIgnored: function (idx) {\n            if (this.type === 'category') {\n                var labelInterval = this.getLabelInterval();\n                return ((typeof labelInterval === 'function')\n                    && !labelInterval(idx, this.scale.getLabel(idx)))\n                    || idx % (labelInterval + 1);\n            }\n        },\n\n        /**\n         * @override\n         */\n        pointToData: function (point, clamp) {\n            return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n        },\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var localCoord = axis.toLocalCoord(80);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toLocalCoord: null,\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var globalCoord = axis.toLocalCoord(40);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toGlobalCoord: null\n\n    };\n    zrUtil.inherits(Axis2D, Axis);\n\n    module.exports = Axis2D;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Axis2D.js\n// module id = 735\n// module chunks = 0 1 2","'use strict';\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    function dimAxisMapper(dim) {\n        return this._axes[dim];\n    }\n\n    /**\n     * @alias module:echarts/coord/Cartesian\n     * @constructor\n     */\n    var Cartesian = function (name) {\n        this._axes = {};\n\n        this._dimList = [];\n\n        /**\n         * @type {string}\n         */\n        this.name = name || '';\n    };\n\n    Cartesian.prototype = {\n\n        constructor: Cartesian,\n\n        type: 'cartesian',\n\n        /**\n         * Get axis\n         * @param  {number|string} dim\n         * @return {module:echarts/coord/Cartesian~Axis}\n         */\n        getAxis: function (dim) {\n            return this._axes[dim];\n        },\n\n        /**\n         * Get axes list\n         * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n         */\n        getAxes: function () {\n            return zrUtil.map(this._dimList, dimAxisMapper, this);\n        },\n\n        /**\n         * Get axes list by given scale type\n         */\n        getAxesByScale: function (scaleType) {\n            scaleType = scaleType.toLowerCase();\n            return zrUtil.filter(\n                this.getAxes(),\n                function (axis) {\n                    return axis.scale.type === scaleType;\n                }\n            );\n        },\n\n        /**\n         * Add axis\n         * @param {module:echarts/coord/Cartesian.Axis}\n         */\n        addAxis: function (axis) {\n            var dim = axis.dim;\n\n            this._axes[dim] = axis;\n\n            this._dimList.push(dim);\n        },\n\n        /**\n         * Convert data to coord in nd space\n         * @param {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        dataToCoord: function (val) {\n            return this._dataCoordConvert(val, 'dataToCoord');\n        },\n\n        /**\n         * Convert coord in nd space to data\n         * @param  {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        coordToData: function (val) {\n            return this._dataCoordConvert(val, 'coordToData');\n        },\n\n        _dataCoordConvert: function (input, method) {\n            var dimList = this._dimList;\n\n            var output = input instanceof Array ? [] : {};\n\n            for (var i = 0; i < dimList.length; i++) {\n                var dim = dimList[i];\n                var axis = this._axes[dim];\n\n                output[dim] = axis[method](input[dim]);\n            }\n\n            return output;\n        }\n    };\n\n    module.exports = Cartesian;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Cartesian.js\n// module id = 736\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Cartesian = require('./Cartesian');\n\n    function Cartesian2D(name) {\n\n        Cartesian.call(this, name);\n    }\n\n    Cartesian2D.prototype = {\n\n        constructor: Cartesian2D,\n\n        type: 'cartesian2d',\n\n        /**\n         * @type {Array.<string>}\n         * @readOnly\n         */\n        dimensions: ['x', 'y'],\n\n        /**\n         * Base axis will be used on stacking.\n         *\n         * @return {module:echarts/coord/cartesian/Axis2D}\n         */\n        getBaseAxis: function () {\n            return this.getAxesByScale('ordinal')[0]\n                || this.getAxesByScale('time')[0]\n                || this.getAxis('x');\n        },\n\n        /**\n         * If contain point\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        containPoint: function (point) {\n            var axisX = this.getAxis('x');\n            var axisY = this.getAxis('y');\n            return axisX.contain(axisX.toLocalCoord(point[0]))\n                && axisY.contain(axisY.toLocalCoord(point[1]));\n        },\n\n        /**\n         * If contain data\n         * @param {Array.<number>} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.getAxis('x').containData(data[0])\n                && this.getAxis('y').containData(data[1]);\n        },\n\n        /**\n         * @param {Array.<number>} data\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        dataToPoint: function (data, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)),\n                yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))\n            ];\n        },\n\n        /**\n         * @param {Array.<number>} point\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        pointToData: function (point, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp),\n                yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)\n            ];\n        },\n\n        /**\n         * Get other axis\n         * @param {module:echarts/coord/cartesian/Axis2D} axis\n         */\n        getOtherAxis: function (axis) {\n            return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n        }\n\n    };\n\n    zrUtil.inherits(Cartesian2D, Cartesian);\n\n    module.exports = Cartesian2D;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Cartesian2D.js\n// module id = 737\n// module chunks = 0 1 2","'use strict';\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\n\n\n    require('./AxisModel');\n\n    var ComponentModel = require('../../model/Component');\n\n    module.exports = ComponentModel.extend({\n\n        type: 'grid',\n\n        dependencies: ['xAxis', 'yAxis'],\n\n        layoutMode: 'box',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Grid}\n         */\n        coordinateSystem: null,\n\n        defaultOption: {\n            show: false,\n            zlevel: 0,\n            z: 0,\n            left: '10%',\n            top: 60,\n            right: '10%',\n            bottom: 60,\n            // If grid size contain label\n            containLabel: false,\n            // width: {totalWidth} - left - right,\n            // height: {totalHeight} - top - bottom,\n            backgroundColor: 'rgba(0,0,0,0)',\n            borderWidth: 1,\n            borderColor: '#ccc'\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/GridModel.js\n// module id = 738\n// module chunks = 0 1 2","'use strict';\n\n\n    function defaultKeyGetter(item) {\n        return item;\n    }\n\n    /**\n     * @param {Array} oldArr\n     * @param {Array} newArr\n     * @param {Function} oldKeyGetter\n     * @param {Function} newKeyGetter\n     * @param {Object} [context] Can be visited by this.context in callback.\n     */\n    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n        this._old = oldArr;\n        this._new = newArr;\n\n        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n\n        this.context = context;\n    }\n\n    DataDiffer.prototype = {\n\n        constructor: DataDiffer,\n\n        /**\n         * Callback function when add a data\n         */\n        add: function (func) {\n            this._add = func;\n            return this;\n        },\n\n        /**\n         * Callback function when update a data\n         */\n        update: function (func) {\n            this._update = func;\n            return this;\n        },\n\n        /**\n         * Callback function when remove a data\n         */\n        remove: function (func) {\n            this._remove = func;\n            return this;\n        },\n\n        execute: function () {\n            var oldArr = this._old;\n            var newArr = this._new;\n\n            var oldDataIndexMap = {};\n            var newDataIndexMap = {};\n            var oldDataKeyArr = [];\n            var newDataKeyArr = [];\n            var i;\n\n            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this);\n\n            // Travel by inverted order to make sure order consistency\n            // when duplicate keys exists (consider newDataIndex.pop() below).\n            // For performance consideration, these code below do not look neat.\n            for (i = 0; i < oldArr.length; i++) {\n                var key = oldDataKeyArr[i];\n                var idx = newDataIndexMap[key];\n\n                // idx can never be empty array here. see 'set null' logic below.\n                if (idx != null) {\n                    // Consider there is duplicate key (for example, use dataItem.name as key).\n                    // We should make sure every item in newArr and oldArr can be visited.\n                    var len = idx.length;\n                    if (len) {\n                        len === 1 && (newDataIndexMap[key] = null);\n                        idx = idx.unshift();\n                    }\n                    else {\n                        newDataIndexMap[key] = null;\n                    }\n                    this._update && this._update(idx, i);\n                }\n                else {\n                    this._remove && this._remove(i);\n                }\n            }\n\n            for (var i = 0; i < newDataKeyArr.length; i++) {\n                var key = newDataKeyArr[i];\n                if (newDataIndexMap.hasOwnProperty(key)) {\n                    var idx = newDataIndexMap[key];\n                    if (idx == null) {\n                        continue;\n                    }\n                    // idx can never be empty array here. see 'set null' logic above.\n                    if (!idx.length) {\n                        this._add && this._add(idx);\n                    }\n                    else {\n                        for (var j = 0, len = idx.length; j < len; j++) {\n                            this._add && this._add(idx[j]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    function initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n        for (var i = 0; i < arr.length; i++) {\n            // Add prefix to avoid conflict with Object.prototype.\n            var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n            var existence = map[key];\n            if (existence == null) {\n                keyArr.push(key);\n                map[key] = i;\n            }\n            else {\n                if (!existence.length) {\n                    map[key] = existence = [existence];\n                }\n                existence.push(i);\n            }\n        }\n    }\n\n    module.exports = DataDiffer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/DataDiffer.js\n// module id = 739\n// module chunks = 0 1 2","\n\n    var createListFromArray = require('./chart/helper/createListFromArray');\n    var symbolUtil = require('./util/symbol');\n    var axisHelper = require('./coord/axisHelper');\n    var axisModelCommonMixin = require('./coord/axisModelCommonMixin');\n    var Model = require('./model/Model');\n    var util = require('zrender/lib/core/util');\n\n    module.exports = {\n        /**\n         * Create a muti dimension List structure from seriesModel.\n         * @param  {module:echarts/model/Model} seriesModel\n         * @return {module:echarts/data/List} list\n         */\n        createList: function (seriesModel) {\n            var data = seriesModel.get('data');\n            return createListFromArray(data, seriesModel, seriesModel.ecModel);\n        },\n\n        /**\n         * @see {module:echarts/data/helper/completeDimensions}\n         */\n        completeDimensions: require('./data/helper/completeDimensions'),\n\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @see http://echarts.baidu.com/option.html#series-scatter.symbol\n         * @param {string} symbolDesc\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: symbolUtil.createSymbol,\n\n        /**\n         * Create scale\n         * @param {Array.<number>} dataExtent\n         * @param {Object|module:echarts/Model} option\n         */\n        createScale: function (dataExtent, option) {\n            var axisModel = option;\n            if (!(option instanceof Model)) {\n                axisModel = new Model(option);\n                util.mixin(axisModel, axisModelCommonMixin);\n            }\n\n            var scale = axisHelper.createScaleByModel(axisModel);\n            scale.setExtent(dataExtent[0], dataExtent[1]);\n\n            axisHelper.niceScaleExtent(scale, axisModel);\n            return scale;\n        },\n\n        /**\n         * Mixin common methods to axis model,\n         *\n         * Inlcude methods\n         * `getFormattedLabels() => Array.<string>`\n         * `getCategories() => Array.<string>`\n         * `getMin(origin: boolean) => number`\n         * `getMax(origin: boolean) => number`\n         * `getNeedCrossZero() => boolean`\n         * `setRange(start: number, end: number)`\n         * `resetRange()`\n         */\n        mixinAxisModelCommonMethods: function (Model) {\n            util.mixin(Model, axisModelCommonMixin);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/helper.js\n// module id = 740\n// module chunks = 0 1 2","\n\n    module.exports = function (seriesType, ecModel) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var coordSys = seriesModel.coordinateSystem;\n\n            if (!coordSys) {\n                return;\n            }\n\n            var dims = [];\n            var coordDims = coordSys.dimensions;\n            for (var i = 0; i < coordDims.length; i++) {\n                dims.push(seriesModel.coordDimToDataDim(coordSys.dimensions[i])[0]);\n            }\n\n            if (dims.length === 1) {\n                data.each(dims[0], function (x, idx) {\n                    // Also {Array.<number>}, not undefined to avoid if...else... statement\n                    data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n                });\n            }\n            else if (dims.length === 2) {\n                data.each(dims, function (x, y, idx) {\n                    // Also {Array.<number>}, not undefined to avoid if...else... statement\n                    data.setItemLayout(\n                        idx, (isNaN(x) || isNaN(y)) ? [NaN, NaN] : coordSys.dataToPoint([x, y])\n                    );\n                }, true);\n            }\n        });\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/layout/points.js\n// module id = 741\n// module chunks = 0 1 2","\n\n    var graphic = require('../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var PI = Math.PI;\n    /**\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [opts]\n     * @param {string} [opts.text]\n     * @param {string} [opts.color]\n     * @param {string} [opts.textColor]\n     * @return {module:zrender/Element}\n     */\n    module.exports = function (api, opts) {\n        opts = opts || {};\n        zrUtil.defaults(opts, {\n            text: 'loading',\n            color: '#c23531',\n            textColor: '#000',\n            maskColor: 'rgba(255, 255, 255, 0.8)',\n            zlevel: 0\n        });\n        var mask = new graphic.Rect({\n            style: {\n                fill: opts.maskColor\n            },\n            zlevel: opts.zlevel,\n            z: 10000\n        });\n        var arc = new graphic.Arc({\n            shape: {\n                startAngle: -PI / 2,\n                endAngle: -PI / 2 + 0.1,\n                r: 10\n            },\n            style: {\n                stroke: opts.color,\n                lineCap: 'round',\n                lineWidth: 5\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n        var labelRect = new graphic.Rect({\n            style: {\n                fill: 'none',\n                text: opts.text,\n                textPosition: 'right',\n                textDistance: 10,\n                textFill: opts.textColor\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n\n        arc.animateShape(true)\n            .when(1000, {\n                endAngle: PI * 3 / 2\n            })\n            .start('circularInOut');\n        arc.animateShape(true)\n            .when(1000, {\n                startAngle: PI * 3 / 2\n            })\n            .delay(300)\n            .start('circularInOut');\n\n        var group = new graphic.Group();\n        group.add(arc);\n        group.add(labelRect);\n        group.add(mask);\n        // Inject resize\n        group.resize = function () {\n            var cx = api.getWidth() / 2;\n            var cy = api.getHeight() / 2;\n            arc.setShape({\n                cx: cx,\n                cy: cy\n            });\n            var r = arc.shape.r;\n            labelRect.setShape({\n                x: cx - r,\n                y: cy - r,\n                width: r * 2,\n                height: r * 2\n            });\n\n            mask.setShape({\n                x: 0,\n                y: 0,\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n        };\n        group.resize();\n        return group;\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/loading/default.js\n// module id = 742\n// module chunks = 0 1 2","/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n\n\n    /**\n     * Caution: If the mechanism should be changed some day, these cases\n     * should be considered:\n     *\n     * (1) In `merge option` mode, if using the same option to call `setOption`\n     * many times, the result should be the same (try our best to ensure that).\n     * (2) In `merge option` mode, if a component has no id/name specified, it\n     * will be merged by index, and the result sequence of the components is\n     * consistent to the original sequence.\n     * (3) `reset` feature (in toolbox). Find detailed info in comments about\n     * `mergeOption` in module:echarts/model/OptionManager.\n     */\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var Model = require('./Model');\n    var each = zrUtil.each;\n    var filter = zrUtil.filter;\n    var map = zrUtil.map;\n    var isArray = zrUtil.isArray;\n    var indexOf = zrUtil.indexOf;\n    var isObject = zrUtil.isObject;\n\n    var ComponentModel = require('./Component');\n\n    var globalDefault = require('./globalDefault');\n\n    var OPTION_INNER_KEY = '\\0_ec_inner';\n\n    /**\n     * @alias module:echarts/model/Global\n     *\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {Object} theme\n     */\n    var GlobalModel = Model.extend({\n\n        constructor: GlobalModel,\n\n        init: function (option, parentModel, theme, optionManager) {\n            theme = theme || {};\n\n            this.option = null; // Mark as not initialized.\n\n            /**\n             * @type {module:echarts/model/Model}\n             * @private\n             */\n            this._theme = new Model(theme);\n\n            /**\n             * @type {module:echarts/model/OptionManager}\n             */\n            this._optionManager = optionManager;\n        },\n\n        setOption: function (option, optionPreprocessorFuncs) {\n            zrUtil.assert(\n                !(OPTION_INNER_KEY in option),\n                'please use chart.getOption()'\n            );\n\n            this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n            this.resetOption(null);\n        },\n\n        /**\n         * @param {string} type null/undefined: reset all.\n         *                      'recreate': force recreate all.\n         *                      'timeline': only reset timeline option\n         *                      'media': only reset media query option\n         * @return {boolean} Whether option changed.\n         */\n        resetOption: function (type) {\n            var optionChanged = false;\n            var optionManager = this._optionManager;\n\n            if (!type || type === 'recreate') {\n                var baseOption = optionManager.mountOption(type === 'recreate');\n\n                if (!this.option || type === 'recreate') {\n                    initBase.call(this, baseOption);\n                }\n                else {\n                    this.restoreData();\n                    this.mergeOption(baseOption);\n                }\n                optionChanged = true;\n            }\n\n            if (type === 'timeline' || type === 'media') {\n                this.restoreData();\n            }\n\n            if (!type || type === 'recreate' || type === 'timeline') {\n                var timelineOption = optionManager.getTimelineOption(this);\n                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n            }\n\n            if (!type || type === 'recreate' || type === 'media') {\n                var mediaOptions = optionManager.getMediaOption(this, this._api);\n                if (mediaOptions.length) {\n                    each(mediaOptions, function (mediaOption) {\n                        this.mergeOption(mediaOption, optionChanged = true);\n                    }, this);\n                }\n            }\n\n            return optionChanged;\n        },\n\n        /**\n         * @protected\n         */\n        mergeOption: function (newOption) {\n            var option = this.option;\n            var componentsMap = this._componentsMap;\n            var newCptTypes = [];\n\n            // 如果不存在对应的 component model 则直接 merge\n            each(newOption, function (componentOption, mainType) {\n                if (componentOption == null) {\n                    return;\n                }\n\n                if (!ComponentModel.hasClass(mainType)) {\n                    option[mainType] = option[mainType] == null\n                        ? zrUtil.clone(componentOption)\n                        : zrUtil.merge(option[mainType], componentOption, true);\n                }\n                else {\n                    newCptTypes.push(mainType);\n                }\n            });\n\n            // FIXME OPTION 同步是否要改回原来的\n            ComponentModel.topologicalTravel(\n                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\n            );\n\n            this._seriesIndices = this._seriesIndices || [];\n\n            function visitComponent(mainType, dependencies) {\n                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n\n                var mapResult = modelUtil.mappingToExists(\n                    componentsMap.get(mainType), newCptOptionList\n                );\n\n                modelUtil.makeIdAndName(mapResult);\n\n                // Set mainType and complete subType.\n                each(mapResult, function (item, index) {\n                    var opt = item.option;\n                    if (isObject(opt)) {\n                        item.keyInfo.mainType = mainType;\n                        item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n                    }\n                });\n\n                var dependentModels = getComponentsByTypes(\n                    componentsMap, dependencies\n                );\n\n                option[mainType] = [];\n                componentsMap.set(mainType, []);\n\n                each(mapResult, function (resultItem, index) {\n                    var componentModel = resultItem.exist;\n                    var newCptOption = resultItem.option;\n\n                    zrUtil.assert(\n                        isObject(newCptOption) || componentModel,\n                        'Empty component definition'\n                    );\n\n                    // Consider where is no new option and should be merged using {},\n                    // see removeEdgeAndAdd in topologicalTravel and\n                    // ComponentModel.getAllClassMainTypes.\n                    if (!newCptOption) {\n                        componentModel.mergeOption({}, this);\n                        componentModel.optionUpdated({}, false);\n                    }\n                    else {\n                        var ComponentModelClass = ComponentModel.getClass(\n                            mainType, resultItem.keyInfo.subType, true\n                        );\n\n                        if (componentModel && componentModel instanceof ComponentModelClass) {\n                            componentModel.name = resultItem.keyInfo.name;\n                            componentModel.mergeOption(newCptOption, this);\n                            componentModel.optionUpdated(newCptOption, false);\n                        }\n                        else {\n                            // PENDING Global as parent ?\n                            var extraOpt = zrUtil.extend(\n                                {\n                                    dependentModels: dependentModels,\n                                    componentIndex: index\n                                },\n                                resultItem.keyInfo\n                            );\n                            componentModel = new ComponentModelClass(\n                                newCptOption, this, this, extraOpt\n                            );\n                            zrUtil.extend(componentModel, extraOpt);\n                            componentModel.init(newCptOption, this, this, extraOpt);\n                            // Call optionUpdated after init.\n                            // newCptOption has been used as componentModel.option\n                            // and may be merged with theme and default, so pass null\n                            // to avoid confusion.\n                            componentModel.optionUpdated(null, true);\n                        }\n                    }\n\n                    componentsMap.get(mainType)[index] = componentModel;\n                    option[mainType][index] = componentModel.option;\n                }, this);\n\n                // Backup series for filtering.\n                if (mainType === 'series') {\n                    this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n                }\n            }\n        },\n\n        /**\n         * Get option for output (cloned option and inner info removed)\n         * @public\n         * @return {Object}\n         */\n        getOption: function () {\n            var option = zrUtil.clone(this.option);\n\n            each(option, function (opts, mainType) {\n                if (ComponentModel.hasClass(mainType)) {\n                    var opts = modelUtil.normalizeToArray(opts);\n                    for (var i = opts.length - 1; i >= 0; i--) {\n                        // Remove options with inner id.\n                        if (modelUtil.isIdInner(opts[i])) {\n                            opts.splice(i, 1);\n                        }\n                    }\n                    option[mainType] = opts;\n                }\n            });\n\n            delete option[OPTION_INNER_KEY];\n\n            return option;\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        getTheme: function () {\n            return this._theme;\n        },\n\n        /**\n         * @param {string} mainType\n         * @param {number} [idx=0]\n         * @return {module:echarts/model/Component}\n         */\n        getComponent: function (mainType, idx) {\n            var list = this._componentsMap.get(mainType);\n            if (list) {\n                return list[idx || 0];\n            }\n        },\n\n        /**\n         * If none of index and id and name used, return all components with mainType.\n         * @param {Object} condition\n         * @param {string} condition.mainType\n         * @param {string} [condition.subType] If ignore, only query by mainType\n         * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        queryComponents: function (condition) {\n            var mainType = condition.mainType;\n            if (!mainType) {\n                return [];\n            }\n\n            var index = condition.index;\n            var id = condition.id;\n            var name = condition.name;\n\n            var cpts = this._componentsMap.get(mainType);\n\n            if (!cpts || !cpts.length) {\n                return [];\n            }\n\n            var result;\n\n            if (index != null) {\n                if (!isArray(index)) {\n                    index = [index];\n                }\n                result = filter(map(index, function (idx) {\n                    return cpts[idx];\n                }), function (val) {\n                    return !!val;\n                });\n            }\n            else if (id != null) {\n                var isIdArray = isArray(id);\n                result = filter(cpts, function (cpt) {\n                    return (isIdArray && indexOf(id, cpt.id) >= 0)\n                        || (!isIdArray && cpt.id === id);\n                });\n            }\n            else if (name != null) {\n                var isNameArray = isArray(name);\n                result = filter(cpts, function (cpt) {\n                    return (isNameArray && indexOf(name, cpt.name) >= 0)\n                        || (!isNameArray && cpt.name === name);\n                });\n            }\n            else {\n                // Return all components with mainType\n                result = cpts.slice();\n            }\n\n            return filterBySubType(result, condition);\n        },\n\n        /**\n         * The interface is different from queryComponents,\n         * which is convenient for inner usage.\n         *\n         * @usage\n         * var result = findComponents(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series'},\n         *     function (model, index) {...}\n         * );\n         * // result like [component0, componnet1, ...]\n         *\n         * @param {Object} condition\n         * @param {string} condition.mainType Mandatory.\n         * @param {string} [condition.subType] Optional.\n         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n         *        where xxx is mainType.\n         *        If query attribute is null/undefined or has no index/id/name,\n         *        do not filtering by query conditions, which is convenient for\n         *        no-payload situations or when target of action is global.\n         * @param {Function} [condition.filter] parameter: component, return boolean.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        findComponents: function (condition) {\n            var query = condition.query;\n            var mainType = condition.mainType;\n\n            var queryCond = getQueryCond(query);\n            var result = queryCond\n                ? this.queryComponents(queryCond)\n                : this._componentsMap.get(mainType);\n\n            return doFilter(filterBySubType(result, condition));\n\n            function getQueryCond(q) {\n                var indexAttr = mainType + 'Index';\n                var idAttr = mainType + 'Id';\n                var nameAttr = mainType + 'Name';\n                return q && (\n                        q[indexAttr] != null\n                        || q[idAttr] != null\n                        || q[nameAttr] != null\n                    )\n                    ? {\n                        mainType: mainType,\n                        // subType will be filtered finally.\n                        index: q[indexAttr],\n                        id: q[idAttr],\n                        name: q[nameAttr]\n                    }\n                    : null;\n            }\n\n            function doFilter(res) {\n                return condition.filter\n                     ? filter(res, condition.filter)\n                     : res;\n            }\n        },\n\n        /**\n         * @usage\n         * eachComponent('legend', function (legendModel, index) {\n         *     ...\n         * });\n         * eachComponent(function (componentType, model, index) {\n         *     // componentType does not include subType\n         *     // (componentType is 'xxx' but not 'xxx.aa')\n         * });\n         * eachComponent(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n         *     function (model, index) {...}\n         * );\n         * eachComponent(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n         *     function (model, index) {...}\n         * );\n         *\n         * @param {string|Object=} mainType When mainType is object, the definition\n         *                                  is the same as the method 'findComponents'.\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachComponent: function (mainType, cb, context) {\n            var componentsMap = this._componentsMap;\n\n            if (typeof mainType === 'function') {\n                context = cb;\n                cb = mainType;\n                componentsMap.each(function (components, componentType) {\n                    each(components, function (component, index) {\n                        cb.call(context, componentType, component, index);\n                    });\n                });\n            }\n            else if (zrUtil.isString(mainType)) {\n                each(componentsMap.get(mainType), cb, context);\n            }\n            else if (isObject(mainType)) {\n                var queryResult = this.findComponents(mainType);\n                each(queryResult, cb, context);\n            }\n        },\n\n        /**\n         * @param {string} name\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByName: function (name) {\n            var series = this._componentsMap.get('series');\n            return filter(series, function (oneSeries) {\n                return oneSeries.name === name;\n            });\n        },\n\n        /**\n         * @param {number} seriesIndex\n         * @return {module:echarts/model/Series}\n         */\n        getSeriesByIndex: function (seriesIndex) {\n            return this._componentsMap.get('series')[seriesIndex];\n        },\n\n        /**\n         * @param {string} subType\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByType: function (subType) {\n            var series = this._componentsMap.get('series');\n            return filter(series, function (oneSeries) {\n                return oneSeries.subType === subType;\n            });\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeries: function () {\n            return this._componentsMap.get('series').slice();\n        },\n\n        /**\n         * After filtering, series may be different\n         * frome raw series.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.get('series')[rawSeriesIndex];\n                cb.call(context, series, rawSeriesIndex);\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeries: function (cb, context) {\n            each(this._componentsMap.get('series'), cb, context);\n        },\n\n        /**\n         * After filtering, series may be different.\n         * frome raw series.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeriesByType: function (subType, cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.get('series')[rawSeriesIndex];\n                if (series.subType === subType) {\n                    cb.call(context, series, rawSeriesIndex);\n                }\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered of given type.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeriesByType: function (subType, cb, context) {\n            return each(this.getSeriesByType(subType), cb, context);\n        },\n\n        /**\n         * @param {module:echarts/model/Series} seriesModel\n         */\n        isSeriesFiltered: function (seriesModel) {\n            assertSeriesInitialized(this);\n            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getCurrentSeriesIndices: function () {\n            return (this._seriesIndices || []).slice();\n        },\n\n        /**\n         * @param {Function} cb\n         * @param {*} context\n         */\n        filterSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            var filteredSeries = filter(\n                this._componentsMap.get('series'), cb, context\n            );\n            this._seriesIndices = createSeriesIndices(filteredSeries);\n        },\n\n        restoreData: function () {\n            var componentsMap = this._componentsMap;\n\n            this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n\n            var componentTypes = [];\n            componentsMap.each(function (components, componentType) {\n                componentTypes.push(componentType);\n            });\n\n            ComponentModel.topologicalTravel(\n                componentTypes,\n                ComponentModel.getAllClassMainTypes(),\n                function (componentType, dependencies) {\n                    each(componentsMap.get(componentType), function (component) {\n                        component.restoreData();\n                    });\n                }\n            );\n        }\n\n    });\n\n    /**\n     * @inner\n     */\n    function mergeTheme(option, theme) {\n        zrUtil.each(theme, function (themeItem, name) {\n            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n            if (!ComponentModel.hasClass(name)) {\n                if (typeof themeItem === 'object') {\n                    option[name] = !option[name]\n                        ? zrUtil.clone(themeItem)\n                        : zrUtil.merge(option[name], themeItem, false);\n                }\n                else {\n                    if (option[name] == null) {\n                        option[name] = themeItem;\n                    }\n                }\n            }\n        });\n    }\n\n    function initBase(baseOption) {\n        baseOption = baseOption;\n\n        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n        this.option = {};\n        this.option[OPTION_INNER_KEY] = 1;\n\n        /**\n         * Init with series: [], in case of calling findSeries method\n         * before series initialized.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @private\n         */\n        this._componentsMap = zrUtil.createHashMap({series: []});\n\n        /**\n         * Mapping between filtered series list and raw series list.\n         * key: filtered series indices, value: raw series indices.\n         * @type {Array.<nubmer>}\n         * @private\n         */\n        this._seriesIndices = null;\n\n        mergeTheme(baseOption, this._theme.option);\n\n        // TODO Needs clone when merging to the unexisted property\n        zrUtil.merge(baseOption, globalDefault, false);\n\n        this.mergeOption(baseOption);\n    }\n\n    /**\n     * @inner\n     * @param {Array.<string>|string} types model types\n     * @return {Object} key: {string} type, value: {Array.<Object>} models\n     */\n    function getComponentsByTypes(componentsMap, types) {\n        if (!zrUtil.isArray(types)) {\n            types = types ? [types] : [];\n        }\n\n        var ret = {};\n        each(types, function (type) {\n            ret[type] = (componentsMap.get(type) || []).slice();\n        });\n\n        return ret;\n    }\n\n    /**\n     * @inner\n     */\n    function determineSubType(mainType, newCptOption, existComponent) {\n        var subType = newCptOption.type\n            ? newCptOption.type\n            : existComponent\n            ? existComponent.subType\n            // Use determineSubType only when there is no existComponent.\n            : ComponentModel.determineSubType(mainType, newCptOption);\n\n        // tooltip, markline, markpoint may always has no subType\n        return subType;\n    }\n\n    /**\n     * @inner\n     */\n    function createSeriesIndices(seriesModels) {\n        return map(seriesModels, function (series) {\n            return series.componentIndex;\n        }) || [];\n    }\n\n    /**\n     * @inner\n     */\n    function filterBySubType(components, condition) {\n        // Using hasOwnProperty for restrict. Consider\n        // subType is undefined in user payload.\n        return condition.hasOwnProperty('subType')\n            ? filter(components, function (cpt) {\n                return cpt.subType === condition.subType;\n            })\n            : components;\n    }\n\n    /**\n     * @inner\n     */\n    function assertSeriesInitialized(ecModel) {\n        // Components that use _seriesIndices should depends on series component,\n        // which make sure that their initialization is after series.\n        if (__DEV__) {\n            if (!ecModel._seriesIndices) {\n                throw new Error('Option should contains series.');\n            }\n        }\n    }\n\n    zrUtil.mixin(GlobalModel, require('./mixin/colorPalette'));\n\n    module.exports = GlobalModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Global.js\n// module id = 743\n// module chunks = 0 1 2","/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var ComponentModel = require('./Component');\n    var each = zrUtil.each;\n    var clone = zrUtil.clone;\n    var map = zrUtil.map;\n    var merge = zrUtil.merge;\n\n    var QUERY_REG = /^(min|max)?(.+)$/;\n\n    /**\n     * TERM EXPLANATIONS:\n     *\n     * [option]:\n     *\n     *     An object that contains definitions of components. For example:\n     *     var option = {\n     *         title: {...},\n     *         legend: {...},\n     *         visualMap: {...},\n     *         series: [\n     *             {data: [...]},\n     *             {data: [...]},\n     *             ...\n     *         ]\n     *     };\n     *\n     * [rawOption]:\n     *\n     *     An object input to echarts.setOption. 'rawOption' may be an\n     *     'option', or may be an object contains multi-options. For example:\n     *     var option = {\n     *         baseOption: {\n     *             title: {...},\n     *             legend: {...},\n     *             series: [\n     *                 {data: [...]},\n     *                 {data: [...]},\n     *                 ...\n     *             ]\n     *         },\n     *         timeline: {...},\n     *         options: [\n     *             {title: {...}, series: {data: [...]}},\n     *             {title: {...}, series: {data: [...]}},\n     *             ...\n     *         ],\n     *         media: [\n     *             {\n     *                 query: {maxWidth: 320},\n     *                 option: {series: {x: 20}, visualMap: {show: false}}\n     *             },\n     *             {\n     *                 query: {minWidth: 320, maxWidth: 720},\n     *                 option: {series: {x: 500}, visualMap: {show: true}}\n     *             },\n     *             {\n     *                 option: {series: {x: 1200}, visualMap: {show: true}}\n     *             }\n     *         ]\n     *     };\n     *\n     * @alias module:echarts/model/OptionManager\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function OptionManager(api) {\n\n        /**\n         * @private\n         * @type {module:echarts/ExtensionAPI}\n         */\n        this._api = api;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._timelineOptions = [];\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._mediaList = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._mediaDefault;\n\n        /**\n         * -1, means default.\n         * empty means no media.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._currentMediaIndices = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._optionBackup;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._newBaseOption;\n    }\n\n    // timeline.notMerge is not supported in ec3. Firstly there is rearly\n    // case that notMerge is needed. Secondly supporting 'notMerge' requires\n    // rawOption cloned and backuped when timeline changed, which does no\n    // good to performance. What's more, that both timeline and setOption\n    // method supply 'notMerge' brings complex and some problems.\n    // Consider this case:\n    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n    OptionManager.prototype = {\n\n        constructor: OptionManager,\n\n        /**\n         * @public\n         * @param {Object} rawOption Raw option.\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Array.<Function>} optionPreprocessorFuncs\n         * @return {Object} Init option\n         */\n        setOption: function (rawOption, optionPreprocessorFuncs) {\n            rawOption = clone(rawOption, true);\n\n            // FIXME\n            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n            var oldOptionBackup = this._optionBackup;\n            var newParsedOption = parseRawOption.call(\n                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\n            );\n            this._newBaseOption = newParsedOption.baseOption;\n\n            // For setOption at second time (using merge mode);\n            if (oldOptionBackup) {\n                // Only baseOption can be merged.\n                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\n\n                // For simplicity, timeline options and media options do not support merge,\n                // that is, if you `setOption` twice and both has timeline options, the latter\n                // timeline opitons will not be merged to the formers, but just substitude them.\n                if (newParsedOption.timelineOptions.length) {\n                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n                }\n                if (newParsedOption.mediaList.length) {\n                    oldOptionBackup.mediaList = newParsedOption.mediaList;\n                }\n                if (newParsedOption.mediaDefault) {\n                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n                }\n            }\n            else {\n                this._optionBackup = newParsedOption;\n            }\n        },\n\n        /**\n         * @param {boolean} isRecreate\n         * @return {Object}\n         */\n        mountOption: function (isRecreate) {\n            var optionBackup = this._optionBackup;\n\n            // TODO\n            // 如果没有reset功能则不clone。\n\n            this._timelineOptions = map(optionBackup.timelineOptions, clone);\n            this._mediaList = map(optionBackup.mediaList, clone);\n            this._mediaDefault = clone(optionBackup.mediaDefault);\n            this._currentMediaIndices = [];\n\n            return clone(isRecreate\n                // this._optionBackup.baseOption, which is created at the first `setOption`\n                // called, and is merged into every new option by inner method `mergeOption`\n                // each time `setOption` called, can be only used in `isRecreate`, because\n                // its reliability is under suspicion. In other cases option merge is\n                // performed by `model.mergeOption`.\n                ? optionBackup.baseOption : this._newBaseOption\n            );\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object}\n         */\n        getTimelineOption: function (ecModel) {\n            var option;\n            var timelineOptions = this._timelineOptions;\n\n            if (timelineOptions.length) {\n                // getTimelineOption can only be called after ecModel inited,\n                // so we can get currentIndex from timelineModel.\n                var timelineModel = ecModel.getComponent('timeline');\n                if (timelineModel) {\n                    option = clone(\n                        timelineOptions[timelineModel.getCurrentIndex()],\n                        true\n                    );\n                }\n            }\n\n            return option;\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Array.<Object>}\n         */\n        getMediaOption: function (ecModel) {\n            var ecWidth = this._api.getWidth();\n            var ecHeight = this._api.getHeight();\n            var mediaList = this._mediaList;\n            var mediaDefault = this._mediaDefault;\n            var indices = [];\n            var result = [];\n\n            // No media defined.\n            if (!mediaList.length && !mediaDefault) {\n                return result;\n            }\n\n            // Multi media may be applied, the latter defined media has higher priority.\n            for (var i = 0, len = mediaList.length; i < len; i++) {\n                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n                    indices.push(i);\n                }\n            }\n\n            // FIXME\n            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n            if (!indices.length && mediaDefault) {\n                indices = [-1];\n            }\n\n            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n                result = map(indices, function (index) {\n                    return clone(\n                        index === -1 ? mediaDefault.option : mediaList[index].option\n                    );\n                });\n            }\n            // Otherwise return nothing.\n\n            this._currentMediaIndices = indices;\n\n            return result;\n        }\n    };\n\n    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n        var timelineOptions = [];\n        var mediaList = [];\n        var mediaDefault;\n        var baseOption;\n\n        // Compatible with ec2.\n        var timelineOpt = rawOption.timeline;\n\n        if (rawOption.baseOption) {\n            baseOption = rawOption.baseOption;\n        }\n\n        // For timeline\n        if (timelineOpt || rawOption.options) {\n            baseOption = baseOption || {};\n            timelineOptions = (rawOption.options || []).slice();\n        }\n\n        // For media query\n        if (rawOption.media) {\n            baseOption = baseOption || {};\n            var media = rawOption.media;\n            each(media, function (singleMedia) {\n                if (singleMedia && singleMedia.option) {\n                    if (singleMedia.query) {\n                        mediaList.push(singleMedia);\n                    }\n                    else if (!mediaDefault) {\n                        // Use the first media default.\n                        mediaDefault = singleMedia;\n                    }\n                }\n            });\n        }\n\n        // For normal option\n        if (!baseOption) {\n            baseOption = rawOption;\n        }\n\n        // Set timelineOpt to baseOption in ec3,\n        // which is convenient for merge option.\n        if (!baseOption.timeline) {\n            baseOption.timeline = timelineOpt;\n        }\n\n        // Preprocess.\n        each([baseOption].concat(timelineOptions)\n            .concat(zrUtil.map(mediaList, function (media) {\n                return media.option;\n            })),\n            function (option) {\n                each(optionPreprocessorFuncs, function (preProcess) {\n                    preProcess(option, isNew);\n                });\n            }\n        );\n\n        return {\n            baseOption: baseOption,\n            timelineOptions: timelineOptions,\n            mediaDefault: mediaDefault,\n            mediaList: mediaList\n        };\n    }\n\n    /**\n     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n     * Support: width, height, aspectRatio\n     * Can use max or min as prefix.\n     */\n    function applyMediaQuery(query, ecWidth, ecHeight) {\n        var realMap = {\n            width: ecWidth,\n            height: ecHeight,\n            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n        };\n\n        var applicatable = true;\n\n        zrUtil.each(query, function (value, attr) {\n            var matched = attr.match(QUERY_REG);\n\n            if (!matched || !matched[1] || !matched[2]) {\n                return;\n            }\n\n            var operator = matched[1];\n            var realAttr = matched[2].toLowerCase();\n\n            if (!compare(realMap[realAttr], value, operator)) {\n                applicatable = false;\n            }\n        });\n\n        return applicatable;\n    }\n\n    function compare(real, expect, operator) {\n        if (operator === 'min') {\n            return real >= expect;\n        }\n        else if (operator === 'max') {\n            return real <= expect;\n        }\n        else { // Equals\n            return real === expect;\n        }\n    }\n\n    function indicesEquals(indices1, indices2) {\n        // indices is always order by asc and has only finite number.\n        return indices1.join(',') === indices2.join(',');\n    }\n\n    /**\n     * Consider case:\n     * `chart.setOption(opt1);`\n     * Then user do some interaction like dataZoom, dataView changing.\n     * `chart.setOption(opt2);`\n     * Then user press 'reset button' in toolbox.\n     *\n     * After doing that all of the interaction effects should be reset, the\n     * chart should be the same as the result of invoke\n     * `chart.setOption(opt1); chart.setOption(opt2);`.\n     *\n     * Although it is not able ensure that\n     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n     * `chart.setOption(merge(opt1, opt2));` exactly,\n     * this might be the only simple way to implement that feature.\n     *\n     * MEMO: We've considered some other approaches:\n     * 1. Each model handle its self restoration but not uniform treatment.\n     *     (Too complex in logic and error-prone)\n     * 2. Use a shadow ecModel. (Performace expensive)\n     */\n    function mergeOption(oldOption, newOption) {\n        newOption = newOption || {};\n\n        each(newOption, function (newCptOpt, mainType) {\n            if (newCptOpt == null) {\n                return;\n            }\n\n            var oldCptOpt = oldOption[mainType];\n\n            if (!ComponentModel.hasClass(mainType)) {\n                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n            }\n            else {\n                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n\n                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n\n                oldOption[mainType] = map(mapResult, function (item) {\n                    return (item.option && item.exist)\n                        ? merge(item.exist, item.option, true)\n                        : (item.exist || item.option);\n                });\n            }\n        });\n    }\n\n    module.exports = OptionManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/OptionManager.js\n// module id = 744\n// module chunks = 0 1 2","\n    var platform = '';\n    // Navigator not exists in node\n    if (typeof navigator !== 'undefined') {\n        platform = navigator.platform || '';\n    }\n    module.exports = {\n        // 全图默认背景\n        // backgroundColor: 'rgba(0,0,0,0)',\n\n        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n        // 浅色\n        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n        // 深色\n        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\n\n        // 默认需要 Grid 配置项\n        // grid: {},\n        // 主题，主题\n        textStyle: {\n            // color: '#000',\n            // decoration: 'none',\n            // PENDING\n            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n            // fontFamily: 'Arial, Verdana, sans-serif',\n            fontSize: 12,\n            fontStyle: 'normal',\n            fontWeight: 'normal'\n        },\n\n        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n        // Default is source-over\n        blendMode: null,\n\n        animation: 'auto',\n        animationDuration: 1000,\n        animationDurationUpdate: 300,\n        animationEasing: 'exponentialOut',\n        animationEasingUpdate: 'cubicOut',\n\n        animationThreshold: 2000,\n        // Configuration for progressive/incremental rendering\n        progressiveThreshold: 3000,\n        progressive: 400,\n\n        // Threshold of if use single hover layer to optimize.\n        // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n        // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n        // which is unexpected.\n        // see example <echarts/test/heatmap-large.html>.\n        hoverLayerThreshold: 3000,\n\n        // See: module:echarts/scale/Time\n        useUTC: false\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/globalDefault.js\n// module id = 745\n// module chunks = 0 1 2","\n    module.exports = {\n        getAreaStyle: require('./makeStyleMapper')(\n            [\n                ['fill', 'color'],\n                ['shadowBlur'],\n                ['shadowOffsetX'],\n                ['shadowOffsetY'],\n                ['opacity'],\n                ['shadowColor']\n            ]\n        )\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/areaStyle.js\n// module id = 746\n// module chunks = 0 1 2","\n\n    module.exports = {\n        getBoxLayoutParams: function () {\n            return {\n                left: this.get('left'),\n                top: this.get('top'),\n                right: this.get('right'),\n                bottom: this.get('bottom'),\n                width: this.get('width'),\n                height: this.get('height')\n            };\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/boxLayout.js\n// module id = 747\n// module chunks = 0 1 2","\n    var getItemStyle = require('./makeStyleMapper')(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor'],\n            ['textPosition'],\n            ['textAlign']\n        ]\n    );\n    module.exports = {\n        getItemStyle: function (excludes, includes) {\n            var style = getItemStyle.call(this, excludes, includes);\n            var lineDash = this.getBorderLineDash();\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getBorderLineDash: function () {\n            var lineType = this.get('borderType');\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/itemStyle.js\n// module id = 748\n// module chunks = 0 1 2","\n    var getLineStyle = require('./makeStyleMapper')(\n        [\n            ['lineWidth', 'width'],\n            ['stroke', 'color'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getLineStyle: function (excludes) {\n            var style = getLineStyle.call(this, excludes);\n            var lineDash = this.getLineDash(style.lineWidth);\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getLineDash: function (lineWidth) {\n            if (lineWidth == null) {\n                lineWidth = 1;\n            }\n            var lineType = this.get('type');\n            var dotSize = Math.max(lineWidth, 2);\n            var dashSize = lineWidth * 4;\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize]);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/lineStyle.js\n// module id = 749\n// module chunks = 0 1 2","\n\n    var textContain = require('zrender/lib/contain/text');\n    var graphicUtil = require('../../util/graphic');\n\n    var PATH_COLOR = ['textStyle', 'color'];\n\n    module.exports = {\n        /**\n         * Get color property or get color from option.textStyle.color\n         * @param {boolean} [noDefault]\n         * @return {string}\n         */\n        getTextColor: function (noDefault) {\n            var ecModel = this.ecModel;\n            return this.getShallow('color')\n                || (\n                    (!noDefault && ecModel) ? ecModel.get(PATH_COLOR) : null\n                );\n        },\n\n        /**\n         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n         * @return {string}\n         */\n        getFont: function () {\n            return graphicUtil.getFont({\n                fontStyle: this.getShallow('fontStyle'),\n                fontWeight: this.getShallow('fontWeight'),\n                fontSize: this.getShallow('fontSize'),\n                fontFamily: this.getShallow('fontFamily')\n            }, this.ecModel);\n        },\n\n        getTextRect: function (text) {\n            return textContain.getBoundingRect(\n                text,\n                this.getFont(),\n                this.getShallow('align'),\n                this.getShallow('verticalAlign') || this.getShallow('baseline'),\n                this.getShallow('padding'),\n                this.getShallow('rich'),\n                this.getShallow('truncateText')\n            );\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/textStyle.js\n// module id = 750\n// module chunks = 0 1 2","// Compatitable with 2.0\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var compatStyle = require('./helper/compatStyle');\n\n    function get(opt, path) {\n        path = path.split(',');\n        var obj = opt;\n        for (var i = 0; i < path.length; i++) {\n            obj = obj && obj[path[i]];\n            if (obj == null) {\n                break;\n            }\n        }\n        return obj;\n    }\n\n    function set(opt, path, val, overwrite) {\n        path = path.split(',');\n        var obj = opt;\n        var key;\n        for (var i = 0; i < path.length - 1; i++) {\n            key = path[i];\n            if (obj[key] == null) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        }\n        if (overwrite || obj[path[i]] == null) {\n            obj[path[i]] = val;\n        }\n    }\n\n    function compatLayoutProperties(option) {\n        each(LAYOUT_PROPERTIES, function (prop) {\n            if (prop[0] in option && !(prop[1] in option)) {\n                option[prop[1]] = option[prop[0]];\n            }\n        });\n    }\n\n    var LAYOUT_PROPERTIES = [\n        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\n    ];\n\n    var COMPATITABLE_COMPONENTS = [\n        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\n    ];\n\n    var COMPATITABLE_SERIES = [\n        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\n        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\n        'pie', 'radar', 'sankey', 'scatter', 'treemap'\n    ];\n\n    var each = zrUtil.each;\n\n    module.exports = function (option) {\n        compatStyle(option);\n\n        var series = option.series;\n        each(zrUtil.isArray(series) ? series : [series], function (seriesOpt) {\n            if (!zrUtil.isObject(seriesOpt)) {\n                return;\n            }\n\n            var seriesType = seriesOpt.type;\n\n            if (seriesType === 'pie' || seriesType === 'gauge') {\n                if (seriesOpt.clockWise != null) {\n                    seriesOpt.clockwise = seriesOpt.clockWise;\n                }\n            }\n            if (seriesType === 'gauge') {\n                var pointerColor = get(seriesOpt, 'pointer.color');\n                pointerColor != null\n                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n            }\n\n            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n                    compatLayoutProperties(seriesOpt);\n                    break;\n                }\n            }\n        });\n\n        // dataRange has changed to visualMap\n        if (option.dataRange) {\n            option.visualMap = option.dataRange;\n        }\n\n        each(COMPATITABLE_COMPONENTS, function (componentName) {\n            var options = option[componentName];\n            if (options) {\n                if (!zrUtil.isArray(options)) {\n                    options = [options];\n                }\n                each(options, function (option) {\n                    compatLayoutProperties(option);\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/preprocessor/backwardCompat.js\n// module id = 751\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var POSSIBLE_STYLES = [\n        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\n        'chordStyle', 'label', 'labelLine'\n    ];\n\n    function compatItemStyle(opt) {\n        var itemStyleOpt = opt && opt.itemStyle;\n        if (!itemStyleOpt) {\n            return;\n        }\n        for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n            var styleName = POSSIBLE_STYLES[i];\n            var normalItemStyleOpt = itemStyleOpt.normal;\n            var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n            if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n                opt[styleName] = opt[styleName] || {};\n                if (!opt[styleName].normal) {\n                    opt[styleName].normal = normalItemStyleOpt[styleName];\n                }\n                else {\n                    zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n                }\n                normalItemStyleOpt[styleName] = null;\n            }\n            if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n                opt[styleName] = opt[styleName] || {};\n                if (!opt[styleName].emphasis) {\n                    opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n                }\n                else {\n                    zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n                }\n                emphasisItemStyleOpt[styleName] = null;\n            }\n        }\n    }\n\n    function compatTextStyle(opt, propName) {\n        var labelOptSingle = isObject(opt) && opt[propName];\n        var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n        if (textStyle) {\n            for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n                var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n                if (textStyle.hasOwnProperty(propName)) {\n                    labelOptSingle[propName] = textStyle[propName];\n                }\n            }\n        }\n    }\n\n    function compatLabelTextStyle(labelOpt) {\n        if (isObject(labelOpt)) {\n            compatTextStyle(labelOpt, 'normal');\n            compatTextStyle(labelOpt, 'emphasis');\n        }\n    }\n\n    function processSeries(seriesOpt) {\n        if (!isObject(seriesOpt)) {\n            return;\n        }\n\n        compatItemStyle(seriesOpt);\n        compatLabelTextStyle(seriesOpt.label);\n        // treemap\n        compatLabelTextStyle(seriesOpt.upperLabel);\n        // graph\n        compatLabelTextStyle(seriesOpt.edgeLabel);\n\n        var markPoint = seriesOpt.markPoint;\n        compatItemStyle(markPoint);\n        compatLabelTextStyle(markPoint && markPoint.label);\n\n        var markLine = seriesOpt.markLine;\n        compatItemStyle(seriesOpt.markLine);\n        compatLabelTextStyle(markLine && markLine.label);\n\n        var markArea = seriesOpt.markArea;\n        compatLabelTextStyle(markArea && markArea.label);\n\n        // For gauge\n        compatTextStyle(seriesOpt, 'axisLabel');\n        compatTextStyle(seriesOpt, 'title');\n        compatTextStyle(seriesOpt, 'detail');\n\n        var data = seriesOpt.data;\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                compatItemStyle(data[i]);\n                compatLabelTextStyle(data[i] && data[i].label);\n            }\n            // mark point data\n            var markPoint = seriesOpt.markPoint;\n            if (markPoint && markPoint.data) {\n                var mpData = markPoint.data;\n                for (var i = 0; i < mpData.length; i++) {\n                    compatItemStyle(mpData[i]);\n                    compatLabelTextStyle(mpData[i] && mpData[i].label);\n                }\n            }\n            // mark line data\n            var markLine = seriesOpt.markLine;\n            if (markLine && markLine.data) {\n                var mlData = markLine.data;\n                for (var i = 0; i < mlData.length; i++) {\n                    if (zrUtil.isArray(mlData[i])) {\n                        compatItemStyle(mlData[i][0]);\n                        compatLabelTextStyle(mlData[i][0] && mlData[i][0].label);\n                        compatItemStyle(mlData[i][1]);\n                        compatLabelTextStyle(mlData[i][1] && mlData[i][1].label);\n                    }\n                    else {\n                        compatItemStyle(mlData[i]);\n                        compatLabelTextStyle(mlData[i] && mlData[i].label);\n                    }\n                }\n            }\n        }\n    }\n\n    function toArr(o) {\n        return zrUtil.isArray(o) ? o : o ? [o] : [];\n    }\n\n    function toObj(o) {\n        return (zrUtil.isArray(o) ? o[0] : o) || {};\n    }\n\n    module.exports = function (option) {\n        each(toArr(option.series), function (seriesOpt) {\n            isObject(seriesOpt) && processSeries(seriesOpt);\n        });\n\n        each(\n            ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'],\n            function (axisName) {\n                each(toArr(option[axisName]), function (axisOpt) {\n                    if (axisOpt) {\n                        compatTextStyle(axisOpt, 'axisLabel');\n                        compatTextStyle(axisOpt.axisPointer, 'label');\n                    }\n                });\n            }\n        );\n\n        each(toArr(option.parallel), function (parallelOpt) {\n            var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n            compatTextStyle(parallelAxisDefault, 'axisLabel');\n            compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n        });\n\n        each(toArr(option.calendar), function (calendarOpt) {\n            compatTextStyle(calendarOpt, 'dayLabel');\n            compatTextStyle(calendarOpt, 'monthLabel');\n            compatTextStyle(calendarOpt, 'yearLabel');\n        });\n\n        // radar.name.textStyle\n        each(toArr(option.radar), function (radarOpt) {\n            compatTextStyle(radarOpt, 'name');\n        });\n\n        each(toArr(option.geo), function (geoOpt) {\n            isObject(geoOpt) && compatLabelTextStyle(geoOpt.label);\n        });\n\n        compatLabelTextStyle(toObj(option.timeline).label);\n        compatTextStyle(toObj(option.axisPointer), 'label');\n        compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/preprocessor/helper/compatStyle.js\n// module id = 752\n// module chunks = 0 1 2","\n    var samplers = {\n        average: function (frame) {\n            var sum = 0;\n            var count = 0;\n            for (var i = 0; i < frame.length; i++) {\n                if (!isNaN(frame[i])) {\n                    sum += frame[i];\n                    count++;\n                }\n            }\n            // Return NaN if count is 0\n            return count === 0 ? NaN : sum / count;\n        },\n        sum: function (frame) {\n            var sum = 0;\n            for (var i = 0; i < frame.length; i++) {\n                // Ignore NaN\n                sum += frame[i] || 0;\n            }\n            return sum;\n        },\n        max: function (frame) {\n            var max = -Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] > max && (max = frame[i]);\n            }\n            return max;\n        },\n        min: function (frame) {\n            var min = Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] < min && (min = frame[i]);\n            }\n            return min;\n        },\n        // TODO\n        // Median\n        nearest: function (frame) {\n            return frame[0];\n        }\n    };\n\n    var indexSampler = function (frame, value) {\n        return Math.round(frame.length / 2);\n    };\n    module.exports = function (seriesType, ecModel, api) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var sampling = seriesModel.get('sampling');\n            var coordSys = seriesModel.coordinateSystem;\n            // Only cartesian2d support down sampling\n            if (coordSys.type === 'cartesian2d' && sampling) {\n                var baseAxis = coordSys.getBaseAxis();\n                var valueAxis = coordSys.getOtherAxis(baseAxis);\n                var extent = baseAxis.getExtent();\n                // Coordinste system has been resized\n                var size = extent[1] - extent[0];\n                var rate = Math.round(data.count() / size);\n                if (rate > 1) {\n                    var sampler;\n                    if (typeof sampling === 'string') {\n                        sampler = samplers[sampling];\n                    }\n                    else if (typeof sampling === 'function') {\n                        sampler = sampling;\n                    }\n                    if (sampler) {\n                        data = data.downSample(\n                            valueAxis.dim, 1 / rate, sampler, indexSampler\n                        );\n                        seriesModel.setData(data);\n                    }\n                }\n            }\n        }, this);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/processor/dataSample.js\n// module id = 753\n// module chunks = 0 1 2","/**\n * Log scale\n * @module echarts/scale/Log\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Scale = require('./Scale');\n    var numberUtil = require('../util/number');\n\n    // Use some method of IntervalScale\n    var IntervalScale = require('./Interval');\n\n    var scaleProto = Scale.prototype;\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n    var mathPow = Math.pow;\n\n    var mathLog = Math.log;\n\n    var LogScale = Scale.extend({\n\n        type: 'log',\n\n        base: 10,\n\n        $constructor: function () {\n            Scale.apply(this, arguments);\n            this._originalScale = new IntervalScale();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            var originalScale = this._originalScale;\n            var extent = this._extent;\n            var originalExtent = originalScale.getExtent();\n\n            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n                var powVal = numberUtil.round(mathPow(this.base, val));\n\n                // Fix #4158\n                powVal = (val === extent[0] && originalScale.__fixMin)\n                    ? fixRoundingError(powVal, originalExtent[0])\n                    : powVal;\n                powVal = (val === extent[1] && originalScale.__fixMax)\n                    ? fixRoundingError(powVal, originalExtent[1])\n                    : powVal;\n\n                return powVal;\n            }, this);\n        },\n\n        /**\n         * @param {number} val\n         * @return {string}\n         */\n        getLabel: intervalScaleProto.getLabel,\n\n        /**\n         * @param  {number} val\n         * @return {number}\n         */\n        scale: function (val) {\n            val = scaleProto.scale.call(this, val);\n            return mathPow(this.base, val);\n        },\n\n        /**\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var base = this.base;\n            start = mathLog(start) / mathLog(base);\n            end = mathLog(end) / mathLog(base);\n            intervalScaleProto.setExtent.call(this, start, end);\n        },\n\n        /**\n         * @return {number} end\n         */\n        getExtent: function () {\n            var base = this.base;\n            var extent = scaleProto.getExtent.call(this);\n            extent[0] = mathPow(base, extent[0]);\n            extent[1] = mathPow(base, extent[1]);\n\n            // Fix #4158\n            var originalScale = this._originalScale;\n            var originalExtent = originalScale.getExtent();\n            originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n            originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n\n            return extent;\n        },\n\n        /**\n         * @param  {Array.<number>} extent\n         */\n        unionExtent: function (extent) {\n            this._originalScale.unionExtent(extent);\n\n            var base = this.base;\n            extent[0] = mathLog(extent[0]) / mathLog(base);\n            extent[1] = mathLog(extent[1]) / mathLog(base);\n            scaleProto.unionExtent.call(this, extent);\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, true, function (val) {\n                return val > 0;\n            }));\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         * @param  {number} [approxTickNum = 10] Given approx tick number\n         */\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (span === Infinity || span <= 0) {\n                return;\n            }\n\n            var interval = numberUtil.quantity(span);\n            var err = approxTickNum / span * interval;\n\n            // Filter ticks to get closer to the desired count.\n            if (err <= 0.5) {\n                interval *= 10;\n            }\n\n            // Interval should be integer\n            while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n                interval *= 10;\n            }\n\n            var niceExtent = [\n                numberUtil.round(mathCeil(extent[0] / interval) * interval),\n                numberUtil.round(mathFloor(extent[1] / interval) * interval)\n            ];\n\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @override\n         */\n        niceExtent: function (opt) {\n            intervalScaleProto.niceExtent.call(this, opt);\n\n            var originalScale = this._originalScale;\n            originalScale.__fixMin = opt.fixMin;\n            originalScale.__fixMax = opt.fixMax;\n        }\n\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        LogScale.prototype[methodName] = function (val) {\n            val = mathLog(val) / mathLog(this.base);\n            return scaleProto[methodName].call(this, val);\n        };\n    });\n\n    LogScale.create = function () {\n        return new LogScale();\n    };\n\n    function fixRoundingError(val, originalVal) {\n        return roundingErrorFix(val, getPrecisionSafe(originalVal));\n    }\n\n    module.exports = LogScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Log.js\n// module id = 754\n// module chunks = 0 1 2","/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n\n// FIXME only one data\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Scale = require('./Scale');\n\n    var scaleProto = Scale.prototype;\n\n    var OrdinalScale = Scale.extend({\n\n        type: 'ordinal',\n\n        init: function (data, extent) {\n            this._data = data;\n            this._extent = extent || [0, data.length - 1];\n        },\n\n        parse: function (val) {\n            return typeof val === 'string'\n                ? zrUtil.indexOf(this._data, val)\n                // val might be float.\n                : Math.round(val);\n        },\n\n        contain: function (rank) {\n            rank = this.parse(rank);\n            return scaleProto.contain.call(this, rank)\n                && this._data[rank] != null;\n        },\n\n        /**\n         * Normalize given rank or name to linear [0, 1]\n         * @param {number|string} [val]\n         * @return {number}\n         */\n        normalize: function (val) {\n            return scaleProto.normalize.call(this, this.parse(val));\n        },\n\n        scale: function (val) {\n            return Math.round(scaleProto.scale.call(this, val));\n        },\n\n        /**\n         * @return {Array}\n         */\n        getTicks: function () {\n            var ticks = [];\n            var extent = this._extent;\n            var rank = extent[0];\n\n            while (rank <= extent[1]) {\n                ticks.push(rank);\n                rank++;\n            }\n\n            return ticks;\n        },\n\n        /**\n         * Get item on rank n\n         * @param {number} n\n         * @return {string}\n         */\n        getLabel: function (n) {\n            return this._data[n];\n        },\n\n        /**\n         * @return {number}\n         */\n        count: function () {\n            return this._extent[1] - this._extent[0] + 1;\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, false));\n        },\n\n        niceTicks: zrUtil.noop,\n        niceExtent: zrUtil.noop\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    OrdinalScale.create = function () {\n        return new OrdinalScale();\n    };\n\n    module.exports = OrdinalScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Ordinal.js\n// module id = 755\n// module chunks = 0 1 2","/**\n * Interval scale\n * @module echarts/coord/scale/Time\n */\n\n\n\n    // [About UTC and local time zone]:\n    // In most cases, `number.parseDate` will treat input data string as local time\n    // (except time zone is specified in time string). And `format.formateTime` returns\n    // local time by default. option.useUTC is false by default. This design have\n    // concidered these common case:\n    // (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n    // in local time by default.\n    // (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n    // as its original time, without any time difference.\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('../util/number');\n    var formatUtil = require('../util/format');\n    var scaleHelper = require('./helper');\n\n    var IntervalScale = require('./Interval');\n\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var mathCeil = Math.ceil;\n    var mathFloor = Math.floor;\n    var ONE_SECOND = 1000;\n    var ONE_MINUTE = ONE_SECOND * 60;\n    var ONE_HOUR = ONE_MINUTE * 60;\n    var ONE_DAY = ONE_HOUR * 24;\n\n    // FIXME 公用？\n    var bisect = function (a, x, lo, hi) {\n        while (lo < hi) {\n            var mid = lo + hi >>> 1;\n            if (a[mid][2] < x) {\n                lo = mid + 1;\n            }\n            else {\n                hi  = mid;\n            }\n        }\n        return lo;\n    };\n\n    /**\n     * @alias module:echarts/coord/scale/Time\n     * @constructor\n     */\n    var TimeScale = IntervalScale.extend({\n        type: 'time',\n\n        /**\n         * @override\n         */\n        getLabel: function (val) {\n            var stepLvl = this._stepLvl;\n\n            var date = new Date(val);\n\n            return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n        },\n\n        /**\n         * @override\n         */\n        niceExtent: function (opt) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                // Expand extent\n                extent[0] -= ONE_DAY;\n                extent[1] += ONE_DAY;\n            }\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (extent[1] === -Infinity && extent[0] === Infinity) {\n                var d = new Date();\n                extent[1] = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                extent[0] = extent[1] - ONE_DAY;\n            }\n\n            this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!opt.fixMin) {\n                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!opt.fixMax) {\n                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n            }\n        },\n\n        /**\n         * @override\n         */\n        niceTicks: function (approxTickNum, minInterval, maxInterval) {\n            var timezoneOffset = this.getSetting('useUTC')\n                ? 0 : numberUtil.getTimezoneOffset() * 60 * 1000;\n            approxTickNum = approxTickNum || 10;\n\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            var approxInterval = span / approxTickNum;\n\n            if (minInterval != null && approxInterval < minInterval) {\n                approxInterval = minInterval;\n            }\n            if (maxInterval != null && approxInterval > maxInterval) {\n                approxInterval = maxInterval;\n            }\n\n            var scaleLevelsLen = scaleLevels.length;\n            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n\n            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n            var interval = level[2];\n            // Same with interval scale if span is much larger than 1 year\n            if (level[0] === 'year') {\n                var yearSpan = span / interval;\n\n                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n                // var niceYearSpan = numberUtil.nice(yearSpan, false);\n                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n\n                interval *= yearStep;\n            }\n\n            var niceExtent = [\n                Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset),\n                Math.round(mathFloor((extent[1] - timezoneOffset)/ interval) * interval + timezoneOffset)\n            ];\n\n            scaleHelper.fixExtent(niceExtent, extent);\n\n            this._stepLvl = level;\n            // Interval will be used in getTicks\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        parse: function (val) {\n            // val might be float.\n            return +numberUtil.parseDate(val);\n        }\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        TimeScale.prototype[methodName] = function (val) {\n            return intervalScaleProto[methodName].call(this, this.parse(val));\n        };\n    });\n\n    // Steps from d3\n    var scaleLevels = [\n        // Format       step    interval\n        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\n        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\n        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\n        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\n        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\n        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\n        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\n        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\n        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\n        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\n        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\n        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\n        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\n        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\n        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\n        ['week',        7,      ONE_DAY * 7],        // 7d\n        ['month',       1,      ONE_DAY * 31],       // 1M\n        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\n        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\n        ['year',        1,      ONE_DAY * 380]       // 1Y\n    ];\n\n    /**\n     * @param {module:echarts/model/Model}\n     * @return {module:echarts/scale/Time}\n     */\n    TimeScale.create = function (model) {\n        return new TimeScale({useUTC: model.ecModel.get('useUTC')});\n    };\n\n    module.exports = TimeScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Time.js\n// module id = 756\n// module chunks = 0 1 2","\n\n    var Group = require('zrender/lib/container/Group');\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n\n    var Component = function () {\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewComponent');\n    };\n\n    Component.prototype = {\n\n        constructor: Component,\n\n        init: function (ecModel, api) {},\n\n        render: function (componentModel, ecModel, api, payload) {},\n\n        dispose: function () {}\n\n    };\n\n    var componentProto = Component.prototype;\n    componentProto.updateView\n        = componentProto.updateLayout\n        = componentProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            // Do nothing;\n        };\n    // Enable Component.extend.\n    clazzUtil.enableClassExtend(Component);\n\n    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\n\n    module.exports = Component;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/view/Component.js\n// module id = 757\n// module chunks = 0 1 2","\n    var Gradient = require('zrender/lib/graphic/Gradient');\n    module.exports = function (ecModel) {\n        function encodeColor(seriesModel) {\n            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n            var data = seriesModel.getData();\n            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\n\n            // FIXME Set color function or use the platte color\n            data.setVisual('color', color);\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof color === 'function' && !(color instanceof Gradient)) {\n                    data.each(function (idx) {\n                        data.setItemVisual(\n                            idx, 'color', color(seriesModel.getDataParams(idx))\n                        );\n                    });\n                }\n\n                // itemStyle in each data item\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var color = itemModel.get(colorAccessPath, true);\n                    if (color != null) {\n                        data.setItemVisual(idx, 'color', color);\n                    }\n                });\n            }\n        }\n        ecModel.eachRawSeries(encodeColor);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/visual/seriesColor.js\n// module id = 758\n// module chunks = 0 1 2","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-50759951\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":true}!../../../node_modules/stylus-loader/index.js?{\\\"sourceMap\\\":true}!../../../node_modules/vux-loader/src/style-loader.js!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./date-range.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"f5f19f26\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/vue-style-loader!./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-50759951\",\"scoped\":false,\"hasInlineConfig\":true}!./~/stylus-loader?{\"sourceMap\":true}!./~/vux-loader/src/style-loader.js!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/base/date-range/date-range.vue\n// module id = 759\n// module chunks = 0 1 20","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-57308446\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":true}!../../../../vux-loader/src/after-less-loader.js!../../../../less-loader/index.js?{\\\"sourceMap\\\":true}!../../../../vux-loader/src/style-loader.js!../../../../vue-loader/lib/selector.js?type=styles&index=0!./index.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../../vue-style-loader/lib/addStylesClient.js\")(\"55fcf9c6\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/vue-style-loader!./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-57308446\",\"scoped\":false,\"hasInlineConfig\":true}!./~/vux-loader/src/after-less-loader.js!./~/less-loader?{\"sourceMap\":true}!./~/vux-loader/src/style-loader.js!./~/vue-loader/lib/selector.js?type=styles&index=0!./~/vux/src/components/datetime/index.vue\n// module id = 760\n// module chunks = 0 1 20","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"date-range\"\n  }, [_c('group', {\n    staticClass: \"time-group\"\n  }, [_c('datetime', {\n    attrs: {\n      \"format\": \"YYYY-MM-DD\",\n      \"placeholder\": '请选择',\n      \"min-year\": 2010,\n      \"max-year\": 2017,\n      \"title\": '起始时间:',\n      \"clear-text\": \"起始时间\",\n      \"year-row\": \"{value}年\",\n      \"month-row\": \"{value}月\",\n      \"day-row\": \"{value}日\",\n      \"confirm-text\": \"完成\",\n      \"cancel-text\": \"取消\"\n    },\n    on: {\n      \"on-change\": _vm.setStartTime\n    },\n    model: {\n      value: (_vm.dateStartTime),\n      callback: function($$v) {\n        _vm.dateStartTime = $$v\n      },\n      expression: \"dateStartTime\"\n    }\n  })], 1), _vm._v(\" \"), _c('group', {\n    staticClass: \"time-group\"\n  }, [_c('datetime', {\n    attrs: {\n      \"format\": \"YYYY-MM-DD\",\n      \"placeholder\": '请选择',\n      \"min-year\": 2010,\n      \"max-year\": 2017,\n      \"title\": '结束时间:',\n      \"clear-text\": \"结束时间\",\n      \"year-row\": \"{value}年\",\n      \"month-row\": \"{value}月\",\n      \"day-row\": \"{value}日\",\n      \"confirm-text\": \"完成\",\n      \"cancel-text\": \"取消\"\n    },\n    on: {\n      \"on-change\": _vm.setEndTime\n    },\n    model: {\n      value: (_vm.dateEndTime),\n      callback: function($$v) {\n        _vm.dateEndTime = $$v\n      },\n      expression: \"dateEndTime\"\n    }\n  })], 1)], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-50759951\"}!./~/vux-loader/src/before-template-compiler-loader.js!./~/vux-loader/src/template-loader.js!./~/vue-loader/lib/selector.js?type=template&index=0!./src/base/date-range/date-range.vue\n// module id = 762\n// module chunks = 0 1 20","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('a', {\n    staticClass: \"vux-datetime weui-cell\",\n    class: {\n      'weui-cell_access': !_vm.readonly\n    },\n    attrs: {\n      \"data-cancel-text\": '取消',\n      \"data-confirm-text\": '确定',\n      \"href\": \"javascript:\"\n    }\n  }, [_vm._t(\"default\", [_c('div', [_vm._t(\"title\", [_c('p', {\n    style: ({\n      width: _vm.$parent.labelWidth,\n      textAlign: _vm.$parent.labelAlign,\n      marginRight: _vm.$parent.labelMarginRight\n    }),\n    domProps: {\n      \"innerHTML\": _vm._s(_vm.title)\n    }\n  })]), _vm._v(\" \"), (_vm.inlineDesc) ? _c('inline-desc', [_vm._v(_vm._s(_vm.inlineDesc))]) : _vm._e()], 2), _vm._v(\" \"), _c('div', {\n    staticClass: \"weui-cell__ft vux-cell-primary vux-datetime-value\",\n    style: ({\n      textAlign: _vm.valueTextAlign\n    })\n  }, [_vm._v(\"\\n      \" + _vm._s(_vm._value) + \"\\n      \"), _c('icon', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (!_vm.valid),\n      expression: \"!valid\"\n    }],\n    staticClass: \"vux-input-icon\",\n    attrs: {\n      \"type\": \"warn\",\n      \"title\": _vm.firstError\n    }\n  })], 1)])], 2)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-57308446\"}!./~/vux-loader/src/before-template-compiler-loader.js!./~/vux-loader/src/template-loader.js!./~/vue-loader/lib/selector.js?type=template&index=0!./~/vux/src/components/datetime/index.vue\n// module id = 763\n// module chunks = 0 1 20","\n/* styles */\nrequire(\"!!../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-50759951\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":true}!stylus-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vux-loader/src/style-loader.js!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./date-range.vue\")\n\nvar Component = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../node_modules/vux-loader/src/script-loader.js!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./date-range.vue\"),\n  /* template */\n  require(\"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-50759951\\\"}!../../../node_modules/vux-loader/src/before-template-compiler-loader.js!../../../node_modules/vux-loader/src/template-loader.js!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./date-range.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/base/date-range/date-range.vue\n// module id = 764\n// module chunks = 0 1 20","\n/* styles */\nrequire(\"!!../../../../extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-57308446\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":true}!../../../../vux-loader/src/after-less-loader.js!less-loader?{\\\"sourceMap\\\":true}!../../../../vux-loader/src/style-loader.js!../../../../vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n\nvar Component = require(\"!../../../../vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../../vux-loader/src/script-loader.js!../../../../vue-loader/lib/selector?type=script&index=0!./index.vue\"),\n  /* template */\n  require(\"!!../../../../vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-57308446\\\"}!../../../../vux-loader/src/before-template-compiler-loader.js!../../../../vux-loader/src/template-loader.js!../../../../vue-loader/lib/selector?type=template&index=0!./index.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vux/src/components/datetime/index.vue\n// module id = 765\n// module chunks = 0 1 20","'use strict';\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\n\n\n    var util = require('./core/util');\n    var Draggable = require('./mixin/Draggable');\n\n    var Eventful = require('./mixin/Eventful');\n\n    var SILENT = 'silent';\n\n    function makeEventPacket(eveType, targetInfo, event) {\n        return {\n            type: eveType,\n            event: event,\n            // target can only be an element that is not silent.\n            target: targetInfo.target,\n            // topTarget can be a silent element.\n            topTarget: targetInfo.topTarget,\n            cancelBubble: false,\n            offsetX: event.zrX,\n            offsetY: event.zrY,\n            gestureEvent: event.gestureEvent,\n            pinchX: event.pinchX,\n            pinchY: event.pinchY,\n            pinchScale: event.pinchScale,\n            wheelDelta: event.zrDelta,\n            zrByTouch: event.zrByTouch\n        };\n    }\n\n    function EmptyProxy () {}\n    EmptyProxy.prototype.dispose = function () {};\n\n    var handlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n    /**\n     * @alias module:zrender/Handler\n     * @constructor\n     * @extends module:zrender/mixin/Eventful\n     * @param {module:zrender/Storage} storage Storage instance.\n     * @param {module:zrender/Painter} painter Painter instance.\n     * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n     * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n     */\n    var Handler = function(storage, painter, proxy, painterRoot) {\n        Eventful.call(this);\n\n        this.storage = storage;\n\n        this.painter = painter;\n\n        this.painterRoot = painterRoot;\n\n        proxy = proxy || new EmptyProxy();\n\n        /**\n         * Proxy of event. can be Dom, WebGLSurface, etc.\n         */\n        this.proxy = proxy;\n\n        // Attach handler\n        proxy.handler = this;\n\n        /**\n         * {target, topTarget, x, y}\n         * @private\n         * @type {Object}\n         */\n        this._hovered = {};\n\n        /**\n         * @private\n         * @type {Date}\n         */\n        this._lastTouchMoment;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastX;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastY;\n\n\n        Draggable.call(this);\n\n        util.each(handlerNames, function (name) {\n            proxy.on && proxy.on(name, this[name], this);\n        }, this);\n    };\n\n    Handler.prototype = {\n\n        constructor: Handler,\n\n        mousemove: function (event) {\n            var x = event.zrX;\n            var y = event.zrY;\n\n            var lastHovered = this._hovered;\n            var lastHoveredTarget = lastHovered.target;\n\n            // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n            // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n            // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n            // See #6198.\n            if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n                lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n                lastHoveredTarget = lastHovered.target;\n            }\n\n            var hovered = this._hovered = this.findHover(x, y);\n            var hoveredTarget = hovered.target;\n\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default');\n\n            // Mouse out on previous hovered element\n            if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(lastHovered, 'mouseout', event);\n            }\n\n            // Mouse moving on one element\n            this.dispatchToElement(hovered, 'mousemove', event);\n\n            // Mouse over on a new element\n            if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(hovered, 'mouseover', event);\n            }\n        },\n\n        mouseout: function (event) {\n            this.dispatchToElement(this._hovered, 'mouseout', event);\n\n            // There might be some doms created by upper layer application\n            // at the same level of painter.getViewportRoot() (e.g., tooltip\n            // dom created by echarts), where 'globalout' event should not\n            // be triggered when mouse enters these doms. (But 'mouseout'\n            // should be triggered at the original hovered element as usual).\n            var element = event.toElement || event.relatedTarget;\n            var innerDom;\n            do {\n                element = element && element.parentNode;\n            }\n            while (element && element.nodeType != 9 && !(\n                innerDom = element === this.painterRoot\n            ));\n\n            !innerDom && this.trigger('globalout', {event: event});\n        },\n\n        /**\n         * Resize\n         */\n        resize: function (event) {\n            this._hovered = {};\n        },\n\n        /**\n         * Dispatch event\n         * @param {string} eventName\n         * @param {event=} eventArgs\n         */\n        dispatch: function (eventName, eventArgs) {\n            var handler = this[eventName];\n            handler && handler.call(this, eventArgs);\n        },\n\n        /**\n         * Dispose\n         */\n        dispose: function () {\n\n            this.proxy.dispose();\n\n            this.storage =\n            this.proxy =\n            this.painter = null;\n        },\n\n        /**\n         * 设置默认的cursor style\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(cursorStyle);\n        },\n\n        /**\n         * 事件分发代理\n         *\n         * @private\n         * @param {Object} targetInfo {target, topTarget} 目标图形元素\n         * @param {string} eventName 事件名称\n         * @param {Object} event 事件对象\n         */\n        dispatchToElement: function (targetInfo, eventName, event) {\n            targetInfo = targetInfo || {};\n            var el = targetInfo.target;\n            if (el && el.silent) {\n                return;\n            }\n            var eventHandler = 'on' + eventName;\n            var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n            while (el) {\n                el[eventHandler]\n                    && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n\n                el.trigger(eventName, eventPacket);\n\n                el = el.parent;\n\n                if (eventPacket.cancelBubble) {\n                    break;\n                }\n            }\n\n            if (!eventPacket.cancelBubble) {\n                // 冒泡到顶级 zrender 对象\n                this.trigger(eventName, eventPacket);\n                // 分发事件到用户自定义层\n                // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n                this.painter && this.painter.eachOtherLayer(function (layer) {\n                    if (typeof(layer[eventHandler]) == 'function') {\n                        layer[eventHandler].call(layer, eventPacket);\n                    }\n                    if (layer.trigger) {\n                        layer.trigger(eventName, eventPacket);\n                    }\n                });\n            }\n        },\n\n        /**\n         * @private\n         * @param {number} x\n         * @param {number} y\n         * @param {module:zrender/graphic/Displayable} exclude\n         * @return {model:zrender/Element}\n         * @method\n         */\n        findHover: function(x, y, exclude) {\n            var list = this.storage.getDisplayList();\n            var out = {x: x, y: y};\n\n            for (var i = list.length - 1; i >= 0 ; i--) {\n                var hoverCheckResult;\n                if (list[i] !== exclude\n                    // getDisplayList may include ignored item in VML mode\n                    && !list[i].ignore\n                    && (hoverCheckResult = isHover(list[i], x, y))\n                ) {\n                    !out.topTarget && (out.topTarget = list[i]);\n                    if (hoverCheckResult !== SILENT) {\n                        out.target = list[i];\n                        break;\n                    }\n                }\n            }\n\n            return out;\n        }\n    };\n\n    // Common handlers\n    util.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        Handler.prototype[name] = function (event) {\n            // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n            var hovered = this.findHover(event.zrX, event.zrY);\n            var hoveredTarget = hovered.target;\n\n            if (name === 'mousedown') {\n                this._downel = hoveredTarget;\n                // In case click triggered before mouseup\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'mosueup') {\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'click') {\n                if (this._downel !== this._upel) {\n                    return;\n                }\n            }\n\n            this.dispatchToElement(hovered, name, event);\n        };\n    });\n\n    function isHover(displayable, x, y) {\n        if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n            var el = displayable;\n            var isSilent;\n            while (el) {\n                // If clipped by ancestor.\n                // FIXME: If clipPath has neither stroke nor fill,\n                // el.clipPath.contain(x, y) will always return false.\n                if (el.clipPath && !el.clipPath.contain(x, y))  {\n                    return false;\n                }\n                if (el.silent) {\n                    isSilent = true;\n                }\n                el = el.parent;\n            }\n            return isSilent ? SILENT : true;\n        }\n\n        return false;\n    }\n\n    util.mixin(Handler, Eventful);\n    util.mixin(Handler, Draggable);\n\n    module.exports = Handler;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Handler.js\n// module id = 766\n// module chunks = 0 1 2","/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var util = require('./core/util');\n    var config = require('./config');\n    var Style = require('./graphic/Style');\n    var Pattern = require('./graphic/Pattern');\n\n    function returnFalse() {\n        return false;\n    }\n\n    /**\n     * 创建dom\n     *\n     * @inner\n     * @param {string} id dom id 待用\n     * @param {string} type dom type，such as canvas, div etc.\n     * @param {Painter} painter painter instance\n     * @param {number} number\n     */\n    function createDom(id, type, painter, dpr) {\n        var newDom = document.createElement(type);\n        var width = painter.getWidth();\n        var height = painter.getHeight();\n\n        var newDomStyle = newDom.style;\n        // 没append呢，请原谅我这样写，清晰~\n        newDomStyle.position = 'absolute';\n        newDomStyle.left = 0;\n        newDomStyle.top = 0;\n        newDomStyle.width = width + 'px';\n        newDomStyle.height = height + 'px';\n        newDom.width = width * dpr;\n        newDom.height = height * dpr;\n\n        // id不作为索引用，避免可能造成的重名，定义为私有属性\n        newDom.setAttribute('data-zr-dom-id', id);\n        return newDom;\n    }\n\n    /**\n     * @alias module:zrender/Layer\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @param {string} id\n     * @param {module:zrender/Painter} painter\n     * @param {number} [dpr]\n     */\n    var Layer = function(id, painter, dpr) {\n        var dom;\n        dpr = dpr || config.devicePixelRatio;\n        if (typeof id === 'string') {\n            dom = createDom(id, 'canvas', painter, dpr);\n        }\n        // Not using isDom because in node it will return false\n        else if (util.isObject(id)) {\n            dom = id;\n            id = dom.id;\n        }\n        this.id = id;\n        this.dom = dom;\n\n        var domStyle = dom.style;\n        if (domStyle) { // Not in node\n            dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n            domStyle['-webkit-user-select'] = 'none';\n            domStyle['user-select'] = 'none';\n            domStyle['-webkit-touch-callout'] = 'none';\n            domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n            domStyle['padding'] = 0;\n            domStyle['margin'] = 0;\n            domStyle['border-width'] = 0;\n        }\n\n        this.domBack = null;\n        this.ctxBack = null;\n\n        this.painter = painter;\n\n        this.config = null;\n\n        // Configs\n        /**\n         * 每次清空画布的颜色\n         * @type {string}\n         * @default 0\n         */\n        this.clearColor = 0;\n        /**\n         * 是否开启动态模糊\n         * @type {boolean}\n         * @default false\n         */\n        this.motionBlur = false;\n        /**\n         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         * @type {number}\n         * @default 0.7\n         */\n        this.lastFrameAlpha = 0.7;\n\n        /**\n         * Layer dpr\n         * @type {number}\n         */\n        this.dpr = dpr;\n    };\n\n    Layer.prototype = {\n\n        constructor: Layer,\n\n        elCount: 0,\n\n        __dirty: true,\n\n        initContext: function () {\n            this.ctx = this.dom.getContext('2d');\n            this.ctx.__currentValues = {};\n            this.ctx.dpr = this.dpr;\n        },\n\n        createBackBuffer: function () {\n            var dpr = this.dpr;\n\n            this.domBack = createDom('back-' + this.id, 'canvas', this.painter, dpr);\n            this.ctxBack = this.domBack.getContext('2d');\n            this.ctxBack.__currentValues = {};\n\n            if (dpr != 1) {\n                this.ctxBack.scale(dpr, dpr);\n            }\n        },\n\n        /**\n         * @param  {number} width\n         * @param  {number} height\n         */\n        resize: function (width, height) {\n            var dpr = this.dpr;\n\n            var dom = this.dom;\n            var domStyle = dom.style;\n            var domBack = this.domBack;\n\n            domStyle.width = width + 'px';\n            domStyle.height = height + 'px';\n\n            dom.width = width * dpr;\n            dom.height = height * dpr;\n\n            if (domBack) {\n                domBack.width = width * dpr;\n                domBack.height = height * dpr;\n\n                if (dpr != 1) {\n                    this.ctxBack.scale(dpr, dpr);\n                }\n            }\n        },\n\n        /**\n         * 清空该层画布\n         * @param {boolean} clearAll Clear all with out motion blur\n         */\n        clear: function (clearAll) {\n            var dom = this.dom;\n            var ctx = this.ctx;\n            var width = dom.width;\n            var height = dom.height;\n\n            var clearColor = this.clearColor;\n            var haveMotionBLur = this.motionBlur && !clearAll;\n            var lastFrameAlpha = this.lastFrameAlpha;\n\n            var dpr = this.dpr;\n\n            if (haveMotionBLur) {\n                if (!this.domBack) {\n                    this.createBackBuffer();\n                }\n\n                this.ctxBack.globalCompositeOperation = 'copy';\n                this.ctxBack.drawImage(\n                    dom, 0, 0,\n                    width / dpr,\n                    height / dpr\n                );\n            }\n\n            ctx.clearRect(0, 0, width, height);\n            if (clearColor) {\n                var clearColorGradientOrPattern;\n                // Gradient\n                if (clearColor.colorStops) {\n                    // Cache canvas gradient\n                    clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n                        x: 0,\n                        y: 0,\n                        width: width,\n                        height: height\n                    });\n\n                    clearColor.__canvasGradient = clearColorGradientOrPattern;\n                }\n                // Pattern\n                else if (clearColor.image) {\n                    clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n                }\n                ctx.save();\n                ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n                ctx.fillRect(0, 0, width, height);\n                ctx.restore();\n            }\n\n            if (haveMotionBLur) {\n                var domBack = this.domBack;\n                ctx.save();\n                ctx.globalAlpha = lastFrameAlpha;\n                ctx.drawImage(domBack, 0, 0, width, height);\n                ctx.restore();\n            }\n        }\n    };\n\n    module.exports = Layer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Layer.js\n// module id = 767\n// module chunks = 0 1 2","'use strict';\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n \n\n    var config = require('./config');\n    var util = require('./core/util');\n    var log = require('./core/log');\n    var BoundingRect = require('./core/BoundingRect');\n    var timsort = require('./core/timsort');\n\n    var Layer = require('./Layer');\n\n    var requestAnimationFrame = require('./animation/requestAnimationFrame');\n\n    // PENDIGN\n    // Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n    //\n    // Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\n    var MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\n    function parseInt10(val) {\n        return parseInt(val, 10);\n    }\n\n    function isLayerValid(layer) {\n        if (!layer) {\n            return false;\n        }\n\n        if (layer.__builtin__) {\n            return true;\n        }\n\n        if (typeof(layer.resize) !== 'function'\n            || typeof(layer.refresh) !== 'function'\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function preProcessLayer(layer) {\n        layer.__unusedCount++;\n    }\n\n    function postProcessLayer(layer) {\n        if (layer.__unusedCount == 1) {\n            layer.clear();\n        }\n    }\n\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var viewRect = new BoundingRect(0, 0, 0, 0);\n    function isDisplayableCulled(el, width, height) {\n        tmpRect.copy(el.getBoundingRect());\n        if (el.transform) {\n            tmpRect.applyTransform(el.transform);\n        }\n        viewRect.width = width;\n        viewRect.height = height;\n        return !tmpRect.intersect(viewRect);\n    }\n\n    function isClipPathChanged(clipPaths, prevClipPaths) {\n        if (clipPaths == prevClipPaths) { // Can both be null or undefined\n            return false;\n        }\n\n        if (!clipPaths || !prevClipPaths || (clipPaths.length !== prevClipPaths.length)) {\n            return true;\n        }\n        for (var i = 0; i < clipPaths.length; i++) {\n            if (clipPaths[i] !== prevClipPaths[i]) {\n                return true;\n            }\n        }\n    }\n\n    function doClip(clipPaths, ctx) {\n        for (var i = 0; i < clipPaths.length; i++) {\n            var clipPath = clipPaths[i];\n\n            clipPath.setTransform(ctx);\n            ctx.beginPath();\n            clipPath.buildPath(ctx, clipPath.shape);\n            ctx.clip();\n            // Transform back\n            clipPath.restoreTransform(ctx);\n        }\n    }\n\n    function createRoot(width, height) {\n        var domRoot = document.createElement('div');\n\n        // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n        domRoot.style.cssText = [\n            'position:relative',\n            'overflow:hidden',\n            'width:' + width + 'px',\n            'height:' + height + 'px',\n            'padding:0',\n            'margin:0',\n            'border-width:0'\n        ].join(';') + ';';\n\n        return domRoot;\n    }\n\n    /**\n     * @alias module:zrender/Painter\n     * @constructor\n     * @param {HTMLElement} root 绘图容器\n     * @param {module:zrender/Storage} storage\n     * @param {Object} opts\n     */\n    var Painter = function (root, storage, opts) {\n        // In node environment using node-canvas\n        var singleCanvas = !root.nodeName // In node ?\n            || root.nodeName.toUpperCase() === 'CANVAS';\n\n        this._opts = opts = util.extend({}, opts || {});\n\n        /**\n         * @type {number}\n         */\n        this.dpr = opts.devicePixelRatio || config.devicePixelRatio;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._singleCanvas = singleCanvas;\n        /**\n         * 绘图容器\n         * @type {HTMLElement}\n         */\n        this.root = root;\n\n        var rootStyle = root.style;\n\n        if (rootStyle) {\n            rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n            rootStyle['-webkit-user-select'] =\n            rootStyle['user-select'] =\n            rootStyle['-webkit-touch-callout'] = 'none';\n\n            root.innerHTML = '';\n        }\n\n        /**\n         * @type {module:zrender/Storage}\n         */\n        this.storage = storage;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        var zlevelList = this._zlevelList = [];\n\n        /**\n         * @type {Object.<string, module:zrender/Layer>}\n         * @private\n         */\n        var layers = this._layers = {};\n\n        /**\n         * @type {Object.<string, Object>}\n         * @type {private}\n         */\n        this._layerConfig = {};\n\n        if (!singleCanvas) {\n            this._width = this._getSize(0);\n            this._height = this._getSize(1);\n\n            var domRoot = this._domRoot = createRoot(\n                this._width, this._height\n            );\n            root.appendChild(domRoot);\n        }\n        else {\n            if (opts.width != null) {\n                root.width = opts.width;\n            }\n            if (opts.height != null) {\n                root.height = opts.height;\n            }\n            // Use canvas width and height directly\n            var width = root.width;\n            var height = root.height;\n            this._width = width;\n            this._height = height;\n\n            // Create layer if only one given canvas\n            // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n            var mainLayer = new Layer(root, this, 1);\n            mainLayer.initContext();\n            // FIXME Use canvas width and height\n            // mainLayer.resize(width, height);\n            layers[0] = mainLayer;\n            zlevelList.push(0);\n\n            this._domRoot = root;\n        }\n\n        // Layers for progressive rendering\n        this._progressiveLayers = [];\n\n        /**\n         * @type {module:zrender/Layer}\n         * @private\n         */\n        this._hoverlayer;\n\n        this._hoverElements = [];\n    };\n\n    Painter.prototype = {\n\n        constructor: Painter,\n\n        /**\n         * If painter use a single canvas\n         * @return {boolean}\n         */\n        isSingleCanvas: function () {\n            return this._singleCanvas;\n        },\n        /**\n         * @return {HTMLDivElement}\n         */\n        getViewportRoot: function () {\n            return this._domRoot;\n        },\n\n        getViewportRootOffset: function () {\n            var viewportRoot = this.getViewportRoot();\n            if (viewportRoot) {\n                return {\n                    offsetLeft: viewportRoot.offsetLeft || 0,\n                    offsetTop: viewportRoot.offsetTop || 0\n                };\n            }\n        },\n\n        /**\n         * 刷新\n         * @param {boolean} [paintAll=false] 强制绘制所有displayable\n         */\n        refresh: function (paintAll) {\n\n            var list = this.storage.getDisplayList(true);\n\n            var zlevelList = this._zlevelList;\n\n            this._paintList(list, paintAll);\n\n            // Paint custum layers\n            for (var i = 0; i < zlevelList.length; i++) {\n                var z = zlevelList[i];\n                var layer = this._layers[z];\n                if (!layer.__builtin__ && layer.refresh) {\n                    layer.refresh();\n                }\n            }\n\n            this.refreshHover();\n\n            if (this._progressiveLayers.length) {\n                this._startProgessive();\n            }\n\n            return this;\n        },\n\n        addHover: function (el, hoverStyle) {\n            if (el.__hoverMir) {\n                return;\n            }\n            var elMirror = new el.constructor({\n                style: el.style,\n                shape: el.shape\n            });\n            elMirror.__from = el;\n            el.__hoverMir = elMirror;\n            elMirror.setStyle(hoverStyle);\n            this._hoverElements.push(elMirror);\n        },\n\n        removeHover: function (el) {\n            var elMirror = el.__hoverMir;\n            var hoverElements = this._hoverElements;\n            var idx = util.indexOf(hoverElements, elMirror);\n            if (idx >= 0) {\n                hoverElements.splice(idx, 1);\n            }\n            el.__hoverMir = null;\n        },\n\n        clearHover: function (el) {\n            var hoverElements = this._hoverElements;\n            for (var i = 0; i < hoverElements.length; i++) {\n                var from = hoverElements[i].__from;\n                if (from) {\n                    from.__hoverMir = null;\n                }\n            }\n            hoverElements.length = 0;\n        },\n\n        refreshHover: function () {\n            var hoverElements = this._hoverElements;\n            var len = hoverElements.length;\n            var hoverLayer = this._hoverlayer;\n            hoverLayer && hoverLayer.clear();\n\n            if (!len) {\n                return;\n            }\n            timsort(hoverElements, this.storage.displayableSortFunc);\n\n            // Use a extream large zlevel\n            // FIXME?\n            if (!hoverLayer) {\n                hoverLayer = this._hoverlayer = this.getLayer(1e5);\n            }\n\n            var scope = {};\n            hoverLayer.ctx.save();\n            for (var i = 0; i < len;) {\n                var el = hoverElements[i];\n                var originalEl = el.__from;\n                // Original el is removed\n                // PENDING\n                if (!(originalEl && originalEl.__zr)) {\n                    hoverElements.splice(i, 1);\n                    originalEl.__hoverMir = null;\n                    len--;\n                    continue;\n                }\n                i++;\n\n                // Use transform\n                // FIXME style and shape ?\n                if (!originalEl.invisible) {\n                    el.transform = originalEl.transform;\n                    el.invTransform = originalEl.invTransform;\n                    el.__clipPaths = originalEl.__clipPaths;\n                    // el.\n                    this._doPaintEl(el, hoverLayer, true, scope);\n                }\n            }\n            hoverLayer.ctx.restore();\n        },\n\n        _startProgessive: function () {\n            var self = this;\n\n            if (!self._furtherProgressive) {\n                return;\n            }\n\n            // Use a token to stop progress steps triggered by\n            // previous zr.refresh calling.\n            var token = self._progressiveToken = +new Date();\n\n            self._progress++;\n            requestAnimationFrame(step);\n\n            function step() {\n                // In case refreshed or disposed\n                if (token === self._progressiveToken && self.storage) {\n\n                    self._doPaintList(self.storage.getDisplayList());\n\n                    if (self._furtherProgressive) {\n                        self._progress++;\n                        requestAnimationFrame(step);\n                    }\n                    else {\n                        self._progressiveToken = -1;\n                    }\n                }\n            }\n        },\n\n        _clearProgressive: function () {\n            this._progressiveToken = -1;\n            this._progress = 0;\n            util.each(this._progressiveLayers, function (layer) {\n                layer.__dirty && layer.clear();\n            });\n        },\n\n        _paintList: function (list, paintAll) {\n\n            if (paintAll == null) {\n                paintAll = false;\n            }\n\n            this._updateLayerStatus(list);\n\n            this._clearProgressive();\n\n            this.eachBuiltinLayer(preProcessLayer);\n\n            this._doPaintList(list, paintAll);\n\n            this.eachBuiltinLayer(postProcessLayer);\n        },\n\n        _doPaintList: function (list, paintAll) {\n            var currentLayer;\n            var currentZLevel;\n            var ctx;\n\n            // var invTransform = [];\n            var scope;\n\n            var progressiveLayerIdx = 0;\n            var currentProgressiveLayer;\n\n            var width = this._width;\n            var height = this._height;\n            var layerProgress;\n            var frame = this._progress;\n            function flushProgressiveLayer(layer) {\n                var dpr = ctx.dpr || 1;\n                ctx.save();\n                ctx.globalAlpha = 1;\n                ctx.shadowBlur = 0;\n                // Avoid layer don't clear in next progressive frame\n                currentLayer.__dirty = true;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n                ctx.restore();\n            }\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n\n                var elFrame = el.__frame;\n\n                // Flush at current context\n                // PENDING\n                if (elFrame < 0 && currentProgressiveLayer) {\n                    flushProgressiveLayer(currentProgressiveLayer);\n                    currentProgressiveLayer = null;\n                }\n\n                // Change draw layer\n                if (currentZLevel !== elZLevel) {\n                    if (ctx) {\n                        ctx.restore();\n                    }\n\n                    // Reset scope\n                    scope = {};\n\n                    // Only 0 zlevel if only has one canvas\n                    currentZLevel = elZLevel;\n                    currentLayer = this.getLayer(currentZLevel);\n\n                    if (!currentLayer.__builtin__) {\n                        log(\n                            'ZLevel ' + currentZLevel\n                            + ' has been used by unkown layer ' + currentLayer.id\n                        );\n                    }\n\n                    ctx = currentLayer.ctx;\n                    ctx.save();\n\n                    // Reset the count\n                    currentLayer.__unusedCount = 0;\n\n                    if (currentLayer.__dirty || paintAll) {\n                        currentLayer.clear();\n                    }\n                }\n\n                if (!(currentLayer.__dirty || paintAll)) {\n                    continue;\n                }\n\n                if (elFrame >= 0) {\n                    // Progressive layer changed\n                    if (!currentProgressiveLayer) {\n                        currentProgressiveLayer = this._progressiveLayers[\n                            Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)\n                        ];\n\n                        currentProgressiveLayer.ctx.save();\n                        currentProgressiveLayer.renderScope = {};\n\n                        if (currentProgressiveLayer\n                            && (currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress)\n                        ) {\n                            // flushProgressiveLayer(currentProgressiveLayer);\n                            // Quick jump all progressive elements\n                            // All progressive element are not dirty, jump over and flush directly\n                            i = currentProgressiveLayer.__nextIdxNotProg - 1;\n                            // currentProgressiveLayer = null;\n                            continue;\n                        }\n\n                        layerProgress = currentProgressiveLayer.__progress;\n\n                        if (!currentProgressiveLayer.__dirty) {\n                            // Keep rendering\n                            frame = layerProgress;\n                        }\n\n                        currentProgressiveLayer.__progress = frame + 1;\n                    }\n\n                    if (elFrame === frame) {\n                        this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n                    }\n                }\n                else {\n                    this._doPaintEl(el, currentLayer, paintAll, scope);\n                }\n\n                el.__dirty = false;\n            }\n\n            if (currentProgressiveLayer) {\n                flushProgressiveLayer(currentProgressiveLayer);\n            }\n\n            // Restore the lastLayer ctx\n            ctx && ctx.restore();\n            // If still has clipping state\n            // if (scope.prevElClipPaths) {\n            //     ctx.restore();\n            // }\n\n            this._furtherProgressive = false;\n            util.each(this._progressiveLayers, function (layer) {\n                if (layer.__maxProgress >= layer.__progress) {\n                    this._furtherProgressive = true;\n                }\n            }, this);\n        },\n\n        _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n            var ctx = currentLayer.ctx;\n            var m = el.transform;\n            if (\n                (currentLayer.__dirty || forcePaint)\n                // Ignore invisible element\n                && !el.invisible\n                // Ignore transparent element\n                && el.style.opacity !== 0\n                // Ignore scale 0 element, in some environment like node-canvas\n                // Draw a scale 0 element can cause all following draw wrong\n                // And setTransform with scale 0 will cause set back transform failed.\n                && !(m && !m[0] && !m[3])\n                // Ignore culled element\n                && !(el.culling && isDisplayableCulled(el, this._width, this._height))\n            ) {\n\n                var clipPaths = el.__clipPaths;\n\n                // Optimize when clipping on group with several elements\n                if (scope.prevClipLayer !== currentLayer\n                    || isClipPathChanged(clipPaths, scope.prevElClipPaths)\n                ) {\n                    // If has previous clipping state, restore from it\n                    if (scope.prevElClipPaths) {\n                        scope.prevClipLayer.ctx.restore();\n                        scope.prevClipLayer = scope.prevElClipPaths = null;\n\n                        // Reset prevEl since context has been restored\n                        scope.prevEl = null;\n                    }\n                    // New clipping state\n                    if (clipPaths) {\n                        ctx.save();\n                        doClip(clipPaths, ctx);\n                        scope.prevClipLayer = currentLayer;\n                        scope.prevElClipPaths = clipPaths;\n                    }\n                }\n                el.beforeBrush && el.beforeBrush(ctx);\n\n                el.brush(ctx, scope.prevEl || null);\n                scope.prevEl = el;\n\n                el.afterBrush && el.afterBrush(ctx);\n            }\n        },\n\n        /**\n         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n         * @param {number} zlevel\n         * @return {module:zrender/Layer}\n         */\n        getLayer: function (zlevel) {\n            if (this._singleCanvas) {\n                return this._layers[0];\n            }\n\n            var layer = this._layers[zlevel];\n            if (!layer) {\n                // Create a new layer\n                layer = new Layer('zr_' + zlevel, this, this.dpr);\n                layer.__builtin__ = true;\n\n                if (this._layerConfig[zlevel]) {\n                    util.merge(layer, this._layerConfig[zlevel], true);\n                }\n\n                this.insertLayer(zlevel, layer);\n\n                // Context is created after dom inserted to document\n                // Or excanvas will get 0px clientWidth and clientHeight\n                layer.initContext();\n            }\n\n            return layer;\n        },\n\n        insertLayer: function (zlevel, layer) {\n\n            var layersMap = this._layers;\n            var zlevelList = this._zlevelList;\n            var len = zlevelList.length;\n            var prevLayer = null;\n            var i = -1;\n            var domRoot = this._domRoot;\n\n            if (layersMap[zlevel]) {\n                log('ZLevel ' + zlevel + ' has been used already');\n                return;\n            }\n            // Check if is a valid layer\n            if (!isLayerValid(layer)) {\n                log('Layer of zlevel ' + zlevel + ' is not valid');\n                return;\n            }\n\n            if (len > 0 && zlevel > zlevelList[0]) {\n                for (i = 0; i < len - 1; i++) {\n                    if (\n                        zlevelList[i] < zlevel\n                        && zlevelList[i + 1] > zlevel\n                    ) {\n                        break;\n                    }\n                }\n                prevLayer = layersMap[zlevelList[i]];\n            }\n            zlevelList.splice(i + 1, 0, zlevel);\n\n            layersMap[zlevel] = layer;\n\n            // Vitual layer will not directly show on the screen.\n            // (It can be a WebGL layer and assigned to a ZImage element)\n            // But it still under management of zrender.\n            if (!layer.virtual) {\n                if (prevLayer) {\n                    var prevDom = prevLayer.dom;\n                    if (prevDom.nextSibling) {\n                        domRoot.insertBefore(\n                            layer.dom,\n                            prevDom.nextSibling\n                        );\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n                else {\n                    if (domRoot.firstChild) {\n                        domRoot.insertBefore(layer.dom, domRoot.firstChild);\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n            }\n        },\n\n        // Iterate each layer\n        eachLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                cb.call(context, this._layers[z], z);\n            }\n        },\n\n        // Iterate each buildin layer\n        eachBuiltinLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        // Iterate each other layer except buildin layer\n        eachOtherLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (!layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        /**\n         * 获取所有已创建的层\n         * @param {Array.<module:zrender/Layer>} [prevLayer]\n         */\n        getLayers: function () {\n            return this._layers;\n        },\n\n        _updateLayerStatus: function (list) {\n\n            var layers = this._layers;\n            var progressiveLayers = this._progressiveLayers;\n\n            var elCountsLastFrame = {};\n            var progressiveElCountsLastFrame = {};\n\n            this.eachBuiltinLayer(function (layer, z) {\n                elCountsLastFrame[z] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            util.each(progressiveLayers, function (layer, idx) {\n                progressiveElCountsLastFrame[idx] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            var progressiveLayerCount = 0;\n            var currentProgressiveLayer;\n            var lastProgressiveKey;\n            var frameCount = 0;\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var zlevel = this._singleCanvas ? 0 : el.zlevel;\n                var layer = layers[zlevel];\n                var elProgress = el.progressive;\n                if (layer) {\n                    layer.elCount++;\n                    layer.__dirty = layer.__dirty || el.__dirty;\n                }\n\n                /////// Update progressive\n                if (elProgress >= 0) {\n                    // Fix wrong progressive sequence problem.\n                    if (lastProgressiveKey !== elProgress) {\n                        lastProgressiveKey = elProgress;\n                        frameCount++;\n                    }\n                    var elFrame = el.__frame = frameCount - 1;\n                    if (!currentProgressiveLayer) {\n                        var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n                        currentProgressiveLayer = progressiveLayers[idx];\n                        if (!currentProgressiveLayer) {\n                            currentProgressiveLayer = progressiveLayers[idx] = new Layer(\n                                'progressive', this, this.dpr\n                            );\n                            currentProgressiveLayer.initContext();\n                        }\n                        currentProgressiveLayer.__maxProgress = 0;\n                    }\n                    currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n                    currentProgressiveLayer.elCount++;\n\n                    currentProgressiveLayer.__maxProgress = Math.max(\n                        currentProgressiveLayer.__maxProgress, elFrame\n                    );\n\n                    if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n                        // Should keep rendering this  layer because progressive rendering is not finished yet\n                        layer.__dirty = true;\n                    }\n                }\n                else {\n                    el.__frame = -1;\n\n                    if (currentProgressiveLayer) {\n                        currentProgressiveLayer.__nextIdxNotProg = i;\n                        progressiveLayerCount++;\n                        currentProgressiveLayer = null;\n                    }\n                }\n            }\n\n            if (currentProgressiveLayer) {\n                progressiveLayerCount++;\n                currentProgressiveLayer.__nextIdxNotProg = i;\n            }\n\n            // 层中的元素数量有发生变化\n            this.eachBuiltinLayer(function (layer, z) {\n                if (elCountsLastFrame[z] !== layer.elCount) {\n                    layer.__dirty = true;\n                }\n            });\n\n            progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n            util.each(progressiveLayers, function (layer, idx) {\n                if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n                    el.__dirty = true;\n                }\n                if (layer.__dirty) {\n                    layer.__progress = 0;\n                }\n            });\n        },\n\n        /**\n         * 清除hover层外所有内容\n         */\n        clear: function () {\n            this.eachBuiltinLayer(this._clearLayer);\n            return this;\n        },\n\n        _clearLayer: function (layer) {\n            layer.clear();\n        },\n\n        /**\n         * 修改指定zlevel的绘制参数\n         *\n         * @param {string} zlevel\n         * @param {Object} config 配置对象\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\n         * @param {number} [config.lastFrameAlpha=0.7]\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         */\n        configLayer: function (zlevel, config) {\n            if (config) {\n                var layerConfig = this._layerConfig;\n                if (!layerConfig[zlevel]) {\n                    layerConfig[zlevel] = config;\n                }\n                else {\n                    util.merge(layerConfig[zlevel], config, true);\n                }\n\n                var layer = this._layers[zlevel];\n\n                if (layer) {\n                    util.merge(layer, layerConfig[zlevel], true);\n                }\n            }\n        },\n\n        /**\n         * 删除指定层\n         * @param {number} zlevel 层所在的zlevel\n         */\n        delLayer: function (zlevel) {\n            var layers = this._layers;\n            var zlevelList = this._zlevelList;\n            var layer = layers[zlevel];\n            if (!layer) {\n                return;\n            }\n            layer.dom.parentNode.removeChild(layer.dom);\n            delete layers[zlevel];\n\n            zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n        },\n\n        /**\n         * 区域大小变化后重绘\n         */\n        resize: function (width, height) {\n            var domRoot = this._domRoot;\n            // FIXME Why ?\n            domRoot.style.display = 'none';\n\n            // Save input w/h\n            var opts = this._opts;\n            width != null && (opts.width = width);\n            height != null && (opts.height = height);\n\n            width = this._getSize(0);\n            height = this._getSize(1);\n\n            domRoot.style.display = '';\n\n            // 优化没有实际改变的resize\n            if (this._width != width || height != this._height) {\n                domRoot.style.width = width + 'px';\n                domRoot.style.height = height + 'px';\n\n                for (var id in this._layers) {\n                    if (this._layers.hasOwnProperty(id)) {\n                        this._layers[id].resize(width, height);\n                    }\n                }\n                util.each(this._progressiveLayers, function (layer) {\n                    layer.resize(width, height);\n                });\n\n                this.refresh(true);\n            }\n\n            this._width = width;\n            this._height = height;\n\n            return this;\n        },\n\n        /**\n         * 清除单独的一个层\n         * @param {number} zlevel\n         */\n        clearLayer: function (zlevel) {\n            var layer = this._layers[zlevel];\n            if (layer) {\n                layer.clear();\n            }\n        },\n\n        /**\n         * 释放\n         */\n        dispose: function () {\n            this.root.innerHTML = '';\n\n            this.root =\n            this.storage =\n\n            this._domRoot =\n            this._layers = null;\n        },\n\n        /**\n         * Get canvas which has all thing rendered\n         * @param {Object} opts\n         * @param {string} [opts.backgroundColor]\n         */\n        getRenderedCanvas: function (opts) {\n            opts = opts || {};\n            if (this._singleCanvas) {\n                return this._layers[0].dom;\n            }\n\n            var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n            imageLayer.initContext();\n\n            imageLayer.clearColor = opts.backgroundColor;\n            imageLayer.clear();\n\n            var displayList = this.storage.getDisplayList(true);\n\n            var scope = {};\n            var zlevel;\n\n            var self = this;\n            function findAndDrawOtherLayer(smaller, larger) {\n                var zlevelList = self._zlevelList;\n                if (smaller == null) {\n                    smaller = -Infinity;\n                }\n                var intermediateLayer;\n                for (var i = 0; i < zlevelList.length; i++) {\n                    var z = zlevelList[i];\n                    var layer = self._layers[z];\n                    if (!layer.__builtin__ && z > smaller && z < larger) {\n                        intermediateLayer = layer;\n                        break;\n                    }\n                }\n                if (intermediateLayer && intermediateLayer.renderToCanvas) {\n                    imageLayer.ctx.save();\n                    intermediateLayer.renderToCanvas(imageLayer.ctx);\n                    imageLayer.ctx.restore();\n                }\n            }\n            for (var i = 0; i < displayList.length; i++) {\n                var el = displayList[i];\n\n                if (el.zlevel !== zlevel) {\n                    findAndDrawOtherLayer(zlevel, el.zlevel);\n                    zlevel = el.zlevel;\n                }\n                this._doPaintEl(el, imageLayer, true, scope);\n            }\n\n            findAndDrawOtherLayer(zlevel, Infinity);\n\n            return imageLayer.dom;\n        },\n        /**\n         * 获取绘图区域宽度\n         */\n        getWidth: function () {\n            return this._width;\n        },\n\n        /**\n         * 获取绘图区域高度\n         */\n        getHeight: function () {\n            return this._height;\n        },\n\n        _getSize: function (whIdx) {\n            var opts = this._opts;\n            var wh = ['width', 'height'][whIdx];\n            var cwh = ['clientWidth', 'clientHeight'][whIdx];\n            var plt = ['paddingLeft', 'paddingTop'][whIdx];\n            var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n            if (opts[wh] != null && opts[wh] !== 'auto') {\n                return parseFloat(opts[wh]);\n            }\n\n            var root = this.root;\n            // IE8 does not support getComputedStyle, but it use VML.\n            var stl = document.defaultView.getComputedStyle(root);\n\n            return (\n                (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n                - (parseInt10(stl[plt]) || 0)\n                - (parseInt10(stl[prb]) || 0)\n            ) | 0;\n        },\n\n        pathToImage: function (path, dpr) {\n            dpr = dpr || this.dpr;\n\n            var canvas = document.createElement('canvas');\n            var ctx = canvas.getContext('2d');\n            var rect = path.getBoundingRect();\n            var style = path.style;\n            var shadowBlurSize = style.shadowBlur;\n            var shadowOffsetX = style.shadowOffsetX;\n            var shadowOffsetY = style.shadowOffsetY;\n            var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n\n            var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n            var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n            var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n            var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n            var width = rect.width + leftMargin + rightMargin;\n            var height = rect.height + topMargin + bottomMargin;\n\n            canvas.width = width * dpr;\n            canvas.height = height * dpr;\n\n            ctx.scale(dpr, dpr);\n            ctx.clearRect(0, 0, width, height);\n            ctx.dpr = dpr;\n\n            var pathTransform = {\n                position: path.position,\n                rotation: path.rotation,\n                scale: path.scale\n            };\n            path.position = [leftMargin - rect.x, topMargin - rect.y];\n            path.rotation = 0;\n            path.scale = [1, 1];\n            path.updateTransform();\n            if (path) {\n                path.brush(ctx);\n            }\n\n            var ImageShape = require('./graphic/Image');\n            var imgShape = new ImageShape({\n                style: {\n                    x: 0,\n                    y: 0,\n                    image: canvas\n                }\n            });\n\n            if (pathTransform.position != null) {\n                imgShape.position = path.position = pathTransform.position;\n            }\n\n            if (pathTransform.rotation != null) {\n                imgShape.rotation = path.rotation = pathTransform.rotation;\n            }\n\n            if (pathTransform.scale != null) {\n                imgShape.scale = path.scale = pathTransform.scale;\n            }\n\n            return imgShape;\n        }\n    };\n\n    module.exports = Painter;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Painter.js\n// module id = 768\n// module chunks = 0 1 2","'use strict';\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n\n\n    var util = require('./core/util');\n    var env = require('./core/env');\n\n    var Group = require('./container/Group');\n\n    // Use timsort because in most case elements are partially sorted\n    // https://jsfiddle.net/pissang/jr4x7mdm/8/\n    var timsort = require('./core/timsort');\n\n    function shapeCompareFunc(a, b) {\n        if (a.zlevel === b.zlevel) {\n            if (a.z === b.z) {\n                // if (a.z2 === b.z2) {\n                //     // FIXME Slow has renderidx compare\n                //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n                //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n                //     return a.__renderidx - b.__renderidx;\n                // }\n                return a.z2 - b.z2;\n            }\n            return a.z - b.z;\n        }\n        return a.zlevel - b.zlevel;\n    }\n    /**\n     * 内容仓库 (M)\n     * @alias module:zrender/Storage\n     * @constructor\n     */\n    var Storage = function () {\n        this._roots = [];\n\n        this._displayList = [];\n\n        this._displayListLen = 0;\n    };\n\n    Storage.prototype = {\n\n        constructor: Storage,\n\n        /**\n         * @param  {Function} cb\n         *\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._roots.length; i++) {\n                this._roots[i].traverse(cb, context);\n            }\n        },\n\n        /**\n         * 返回所有图形的绘制队列\n         * @param {boolean} [update=false] 是否在返回前更新该数组\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n         *\n         * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n         * @return {Array.<module:zrender/graphic/Displayable>}\n         */\n        getDisplayList: function (update, includeIgnore) {\n            includeIgnore = includeIgnore || false;\n            if (update) {\n                this.updateDisplayList(includeIgnore);\n            }\n            return this._displayList;\n        },\n\n        /**\n         * 更新图形的绘制队列。\n         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n         */\n        updateDisplayList: function (includeIgnore) {\n            this._displayListLen = 0;\n            var roots = this._roots;\n            var displayList = this._displayList;\n            for (var i = 0, len = roots.length; i < len; i++) {\n                this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n            }\n            displayList.length = this._displayListLen;\n\n            // for (var i = 0, len = displayList.length; i < len; i++) {\n            //     displayList[i].__renderidx = i;\n            // }\n\n            // displayList.sort(shapeCompareFunc);\n            env.canvasSupported && timsort(displayList, shapeCompareFunc);\n        },\n\n        _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n\n            if (el.ignore && !includeIgnore) {\n                return;\n            }\n\n            el.beforeUpdate();\n\n            if (el.__dirty) {\n\n                el.update();\n\n            }\n\n            el.afterUpdate();\n\n            var userSetClipPath = el.clipPath;\n            if (userSetClipPath) {\n\n                // FIXME 效率影响\n                if (clipPaths) {\n                    clipPaths = clipPaths.slice();\n                }\n                else {\n                    clipPaths = [];\n                }\n\n                var currentClipPath = userSetClipPath;\n                var parentClipPath = el;\n                // Recursively add clip path\n                while (currentClipPath) {\n                    // clipPath 的变换是基于使用这个 clipPath 的元素\n                    currentClipPath.parent = parentClipPath;\n                    currentClipPath.updateTransform();\n\n                    clipPaths.push(currentClipPath);\n\n                    parentClipPath = currentClipPath;\n                    currentClipPath = currentClipPath.clipPath;\n                }\n            }\n\n            if (el.isGroup) {\n                var children = el._children;\n\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n\n                    // Force to mark as dirty if group is dirty\n                    // FIXME __dirtyPath ?\n                    if (el.__dirty) {\n                        child.__dirty = true;\n                    }\n\n                    this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n                }\n\n                // Mark group clean here\n                el.__dirty = false;\n\n            }\n            else {\n                el.__clipPaths = clipPaths;\n\n                this._displayList[this._displayListLen++] = el;\n            }\n        },\n\n        /**\n         * 添加图形(Shape)或者组(Group)到根节点\n         * @param {module:zrender/Element} el\n         */\n        addRoot: function (el) {\n            if (el.__storage === this) {\n                return;\n            }\n\n            if (el instanceof Group) {\n                el.addChildrenToStorage(this);\n            }\n\n            this.addToStorage(el);\n            this._roots.push(el);\n        },\n\n        /**\n         * 删除指定的图形(Shape)或者组(Group)\n         * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n         */\n        delRoot: function (el) {\n            if (el == null) {\n                // 不指定el清空\n                for (var i = 0; i < this._roots.length; i++) {\n                    var root = this._roots[i];\n                    if (root instanceof Group) {\n                        root.delChildrenFromStorage(this);\n                    }\n                }\n\n                this._roots = [];\n                this._displayList = [];\n                this._displayListLen = 0;\n\n                return;\n            }\n\n            if (el instanceof Array) {\n                for (var i = 0, l = el.length; i < l; i++) {\n                    this.delRoot(el[i]);\n                }\n                return;\n            }\n\n\n            var idx = util.indexOf(this._roots, el);\n            if (idx >= 0) {\n                this.delFromStorage(el);\n                this._roots.splice(idx, 1);\n                if (el instanceof Group) {\n                    el.delChildrenFromStorage(this);\n                }\n            }\n        },\n\n        addToStorage: function (el) {\n            el.__storage = this;\n            el.dirty(false);\n\n            return this;\n        },\n\n        delFromStorage: function (el) {\n            if (el) {\n                el.__storage = null;\n            }\n\n            return this;\n        },\n\n        /**\n         * 清空并且释放Storage\n         */\n        dispose: function () {\n            this._renderList =\n            this._roots = null;\n        },\n\n        displayableSortFunc: shapeCompareFunc\n    };\n\n    module.exports = Storage;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Storage.js\n// module id = 769\n// module chunks = 0 1 2","'use strict';\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n\n    var util = require('../core/util');\n    var Dispatcher = require('../core/event').Dispatcher;\n\n    var requestAnimationFrame = require('./requestAnimationFrame');\n\n    var Animator = require('./Animator');\n    /**\n     * @typedef {Object} IZRenderStage\n     * @property {Function} update\n     */\n\n    /**\n     * @alias module:zrender/animation/Animation\n     * @constructor\n     * @param {Object} [options]\n     * @param {Function} [options.onframe]\n     * @param {IZRenderStage} [options.stage]\n     * @example\n     *     var animation = new Animation();\n     *     var obj = {\n     *         x: 100,\n     *         y: 100\n     *     };\n     *     animation.animate(node.position)\n     *         .when(1000, {\n     *             x: 500,\n     *             y: 500\n     *         })\n     *         .when(2000, {\n     *             x: 100,\n     *             y: 100\n     *         })\n     *         .start('spline');\n     */\n    var Animation = function (options) {\n\n        options = options || {};\n\n        this.stage = options.stage || {};\n\n        this.onframe = options.onframe || function() {};\n\n        // private properties\n        this._clips = [];\n\n        this._running = false;\n\n        this._time;\n\n        this._pausedTime;\n\n        this._pauseStart;\n\n        this._paused = false;\n\n        Dispatcher.call(this);\n    };\n\n    Animation.prototype = {\n\n        constructor: Animation,\n        /**\n         * 添加 clip\n         * @param {module:zrender/animation/Clip} clip\n         */\n        addClip: function (clip) {\n            this._clips.push(clip);\n        },\n        /**\n         * 添加 animator\n         * @param {module:zrender/animation/Animator} animator\n         */\n        addAnimator: function (animator) {\n            animator.animation = this;\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.addClip(clips[i]);\n            }\n        },\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Clip} clip\n         */\n        removeClip: function(clip) {\n            var idx = util.indexOf(this._clips, clip);\n            if (idx >= 0) {\n                this._clips.splice(idx, 1);\n            }\n        },\n\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Animator} animator\n         */\n        removeAnimator: function (animator) {\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.removeClip(clips[i]);\n            }\n            animator.animation = null;\n        },\n\n        _update: function() {\n\n            var time = new Date().getTime() - this._pausedTime;\n            var delta = time - this._time;\n            var clips = this._clips;\n            var len = clips.length;\n\n            var deferredEvents = [];\n            var deferredClips = [];\n            for (var i = 0; i < len; i++) {\n                var clip = clips[i];\n                var e = clip.step(time, delta);\n                // Throw out the events need to be called after\n                // stage.update, like destroy\n                if (e) {\n                    deferredEvents.push(e);\n                    deferredClips.push(clip);\n                }\n            }\n\n            // Remove the finished clip\n            for (var i = 0; i < len;) {\n                if (clips[i]._needsRemove) {\n                    clips[i] = clips[len - 1];\n                    clips.pop();\n                    len--;\n                }\n                else {\n                    i++;\n                }\n            }\n\n            len = deferredEvents.length;\n            for (var i = 0; i < len; i++) {\n                deferredClips[i].fire(deferredEvents[i]);\n            }\n\n            this._time = time;\n\n            this.onframe(delta);\n\n            this.trigger('frame', delta);\n\n            if (this.stage.update) {\n                this.stage.update();\n            }\n        },\n\n        _startLoop: function () {\n            var self = this;\n\n            this._running = true;\n\n            function step() {\n                if (self._running) {\n\n                    requestAnimationFrame(step);\n\n                    !self._paused && self._update();\n                }\n            }\n\n            requestAnimationFrame(step);\n        },\n\n        /**\n         * 开始运行动画\n         */\n        start: function () {\n\n            this._time = new Date().getTime();\n            this._pausedTime = 0;\n\n            this._startLoop();\n        },\n        /**\n         * 停止运行动画\n         */\n        stop: function () {\n            this._running = false;\n        },\n\n        /**\n         * Pause\n         */\n        pause: function () {\n            if (!this._paused) {\n                this._pauseStart = new Date().getTime();\n                this._paused = true;\n            }\n        },\n\n        /**\n         * Resume\n         */\n        resume: function () {\n            if (this._paused) {\n                this._pausedTime += (new Date().getTime()) - this._pauseStart;\n                this._paused = false;\n            }\n        },\n\n        /**\n         * 清除所有动画片段\n         */\n        clear: function () {\n            this._clips = [];\n        },\n        /**\n         * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n         * @param  {Object} target\n         * @param  {Object} options\n         * @param  {boolean} [options.loop=false] 是否循环播放动画\n         * @param  {Function} [options.getter=null]\n         *         如果指定getter函数，会通过getter函数取属性值\n         * @param  {Function} [options.setter=null]\n         *         如果指定setter函数，会通过setter函数设置属性值\n         * @return {module:zrender/animation/Animation~Animator}\n         */\n        // TODO Gap\n        animate: function (target, options) {\n            options = options || {};\n\n            var animator = new Animator(\n                target,\n                options.loop,\n                options.getter,\n                options.setter\n            );\n\n            this.addAnimator(animator);\n\n            return animator;\n        }\n    };\n\n    util.mixin(Animation, Dispatcher);\n\n    module.exports = Animation;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Animation.js\n// module id = 770\n// module chunks = 0 1 2","/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\n\n\n    var easingFuncs = require('./easing');\n\n    function Clip(options) {\n\n        this._target = options.target;\n\n        // 生命周期\n        this._life = options.life || 1000;\n        // 延时\n        this._delay = options.delay || 0;\n        // 开始时间\n        // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n        this._initialized = false;\n\n        // 是否循环\n        this.loop = options.loop == null ? false : options.loop;\n\n        this.gap = options.gap || 0;\n\n        this.easing = options.easing || 'Linear';\n\n        this.onframe = options.onframe;\n        this.ondestroy = options.ondestroy;\n        this.onrestart = options.onrestart;\n\n        this._pausedTime = 0;\n        this._paused = false;\n    }\n\n    Clip.prototype = {\n\n        constructor: Clip,\n\n        step: function (globalTime, deltaTime) {\n            // Set startTime on first step, or _startTime may has milleseconds different between clips\n            // PENDING\n            if (!this._initialized) {\n                this._startTime = globalTime + this._delay;\n                this._initialized = true;\n            }\n\n            if (this._paused) {\n                this._pausedTime += deltaTime;\n                return;\n            }\n\n            var percent = (globalTime - this._startTime - this._pausedTime) / this._life;\n\n            // 还没开始\n            if (percent < 0) {\n                return;\n            }\n\n            percent = Math.min(percent, 1);\n\n            var easing = this.easing;\n            var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n            var schedule = typeof easingFunc === 'function'\n                ? easingFunc(percent)\n                : percent;\n\n            this.fire('frame', schedule);\n\n            // 结束\n            if (percent == 1) {\n                if (this.loop) {\n                    this.restart (globalTime);\n                    // 重新开始周期\n                    // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n                    return 'restart';\n                }\n\n                // 动画完成将这个控制器标识为待删除\n                // 在Animation.update中进行批量删除\n                this._needsRemove = true;\n                return 'destroy';\n            }\n\n            return null;\n        },\n\n        restart: function (globalTime) {\n            var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n            this._startTime = globalTime - remainder + this.gap;\n            this._pausedTime = 0;\n\n            this._needsRemove = false;\n        },\n\n        fire: function (eventType, arg) {\n            eventType = 'on' + eventType;\n            if (this[eventType]) {\n                this[eventType](this._target, arg);\n            }\n        },\n\n        pause: function () {\n            this._paused = true;\n        },\n\n        resume: function () {\n            this._paused = false;\n        }\n    };\n\n    module.exports = Clip;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Clip.js\n// module id = 771\n// module chunks = 0 1 2","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\n\n    var easing = {\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        linear: function (k) {\n            return k;\n        },\n\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticIn: function (k) {\n            return k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticOut: function (k) {\n            return k * (2 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k;\n            }\n            return -0.5 * (--k * (k - 2) - 1);\n        },\n\n        // 三次方的缓动（t^3）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicIn: function (k) {\n            return k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicOut: function (k) {\n            return --k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k + 2);\n        },\n\n        // 四次方的缓动（t^4）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticIn: function (k) {\n            return k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticOut: function (k) {\n            return 1 - (--k * k * k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k;\n            }\n            return -0.5 * ((k -= 2) * k * k * k - 2);\n        },\n\n        // 五次方的缓动（t^5）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticIn: function (k) {\n            return k * k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticOut: function (k) {\n            return --k * k * k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k * k * k + 2);\n        },\n\n        // 正弦曲线的缓动（sin(t)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalIn: function (k) {\n            return 1 - Math.cos(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalOut: function (k) {\n            return Math.sin(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalInOut: function (k) {\n            return 0.5 * (1 - Math.cos(Math.PI * k));\n        },\n\n        // 指数曲线的缓动（2^t）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialIn: function (k) {\n            return k === 0 ? 0 : Math.pow(1024, k - 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialOut: function (k) {\n            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialInOut: function (k) {\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if ((k *= 2) < 1) {\n                return 0.5 * Math.pow(1024, k - 1);\n            }\n            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n        },\n\n        // 圆形曲线的缓动（sqrt(1-t^2)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularIn: function (k) {\n            return 1 - Math.sqrt(1 - k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularOut: function (k) {\n            return Math.sqrt(1 - (--k * k));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - k * k) - 1);\n            }\n            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n        },\n\n        // 创建类似于弹簧在停止前来回振荡的动画\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticIn: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return -(a * Math.pow(2, 10 * (k -= 1)) *\n                        Math.sin((k - s) * (2 * Math.PI) / p));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return (a * Math.pow(2, -10 * k) *\n                    Math.sin((k - s) * (2 * Math.PI) / p) + 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticInOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            if ((k *= 2) < 1) {\n                return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p));\n            }\n            return a * Math.pow(2, -10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\n        },\n\n        // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backIn: function (k) {\n            var s = 1.70158;\n            return k * k * ((s + 1) * k - s);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backOut: function (k) {\n            var s = 1.70158;\n            return --k * k * ((s + 1) * k + s) + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backInOut: function (k) {\n            var s = 1.70158 * 1.525;\n            if ((k *= 2) < 1) {\n                return 0.5 * (k * k * ((s + 1) * k - s));\n            }\n            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n        },\n\n        // 创建弹跳效果\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceIn: function (k) {\n            return 1 - easing.bounceOut(1 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceOut: function (k) {\n            if (k < (1 / 2.75)) {\n                return 7.5625 * k * k;\n            }\n            else if (k < (2 / 2.75)) {\n                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n            }\n            else if (k < (2.5 / 2.75)) {\n                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n            }\n            else {\n                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n            }\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceInOut: function (k) {\n            if (k < 0.5) {\n                return easing.bounceIn(k * 2) * 0.5;\n            }\n            return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n        }\n    };\n\n    module.exports = easing;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/easing.js\n// module id = 772\n// module chunks = 0 1 2","\n\n    var normalizeRadian = require('./util').normalizeRadian;\n    var PI2 = Math.PI * 2;\n\n    module.exports = {\n        /**\n         * 圆弧描边包含判断\n         * @param  {number}  cx\n         * @param  {number}  cy\n         * @param  {number}  r\n         * @param  {number}  startAngle\n         * @param  {number}  endAngle\n         * @param  {boolean}  anticlockwise\n         * @param  {number} lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {Boolean}\n         */\n        containStroke: function (\n            cx, cy, r, startAngle, endAngle, anticlockwise,\n            lineWidth, x, y\n        ) {\n\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n\n            x -= cx;\n            y -= cy;\n            var d = Math.sqrt(x * x + y * y);\n\n            if ((d - _l > r) || (d + _l < r)) {\n                return false;\n            }\n            if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n                // Is a circle\n                return true;\n            }\n            if (anticlockwise) {\n                var tmp = startAngle;\n                startAngle = normalizeRadian(endAngle);\n                endAngle = normalizeRadian(tmp);\n            } else {\n                startAngle = normalizeRadian(startAngle);\n                endAngle = normalizeRadian(endAngle);\n            }\n            if (startAngle > endAngle) {\n                endAngle += PI2;\n            }\n\n            var angle = Math.atan2(y, x);\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return (angle >= startAngle && angle <= endAngle)\n                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/arc.js\n// module id = 773\n// module chunks = 0 1 2","\n\n    var curve = require('../core/curve');\n\n    module.exports = {\n        /**\n         * 三次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  x3\n         * @param  {number}  y3\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.cubicProjectPoint(\n                x0, y0, x1, y1, x2, y2, x3, y3,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/cubic.js\n// module id = 774\n// module chunks = 0 1 2","\n    module.exports = {\n        /**\n         * 线段包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            var _a = 0;\n            var _b = x0;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l)\n                || (y < y0 - _l && y < y1 - _l)\n                || (x > x0 + _l && x > x1 + _l)\n                || (x < x0 - _l && x < x1 - _l)\n            ) {\n                return false;\n            }\n\n            if (x0 !== x1) {\n                _a = (y0 - y1) / (x0 - x1);\n                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\n            }\n            else {\n                return Math.abs(x - x0) <= _l / 2;\n            }\n            var tmp = _a * x - y + _b;\n            var _s = tmp * tmp / (_a * _a + 1);\n            return _s <= _l / 2 * _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/line.js\n// module id = 775\n// module chunks = 0 1 2","'use strict';\n\n\n    var CMD = require('../core/PathProxy').CMD;\n    var line = require('./line');\n    var cubic = require('./cubic');\n    var quadratic = require('./quadratic');\n    var arc = require('./arc');\n    var normalizeRadian = require('./util').normalizeRadian;\n    var curve = require('../core/curve');\n\n    var windingLine = require('./windingLine');\n\n    var containStroke = line.containStroke;\n\n    var PI2 = Math.PI * 2;\n\n    var EPSILON = 1e-4;\n\n    function isAroundEqual(a, b) {\n        return Math.abs(a - b) < EPSILON;\n    }\n\n    // 临时数组\n    var roots = [-1, -1, -1];\n    var extrema = [-1, -1];\n\n    function swapExtrema() {\n        var tmp = extrema[0];\n        extrema[0] = extrema[1];\n        extrema[1] = tmp;\n    }\n\n    function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2 && y > y3)\n            || (y < y0 && y < y1 && y < y2 && y < y3)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var w = 0;\n            var nExtrema = -1;\n            var y0_, y1_;\n            for (var i = 0; i < nRoots; i++) {\n                var t = roots[i];\n\n                // Avoid winding error when intersection point is the connect point of two line of polygon\n                var unit = (t === 0 || t === 1) ? 0.5 : 1;\n\n                var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n                if (x_ < x) { // Quick reject\n                    continue;\n                }\n                if (nExtrema < 0) {\n                    nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n                    if (extrema[1] < extrema[0] && nExtrema > 1) {\n                        swapExtrema();\n                    }\n                    y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n                    if (nExtrema > 1) {\n                        y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n                    }\n                }\n                if (nExtrema == 2) {\n                    // 分成三段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else if (t < extrema[1]) {\n                        w += y1_ < y0_ ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y1_ ? unit : -unit;\n                    }\n                }\n                else {\n                    // 分成两段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y0_ ? unit : -unit;\n                    }\n                }\n            }\n            return w;\n        }\n    }\n\n    function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2)\n            || (y < y0 && y < y1 && y < y2)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var t = curve.quadraticExtremum(y0, y1, y2);\n            if (t >= 0 && t <= 1) {\n                var w = 0;\n                var y_ = curve.quadraticAt(y0, y1, y2, t);\n                for (var i = 0; i < nRoots; i++) {\n                    // Remove one endpoint.\n                    var unit = (roots[i] === 0 || roots[i] === 1) ? 0.5 : 1;\n\n                    var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n                    if (x_ < x) {   // Quick reject\n                        continue;\n                    }\n                    if (roots[i] < t) {\n                        w += y_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y2 < y_ ? unit : -unit;\n                    }\n                }\n                return w;\n            }\n            else {\n                // Remove one endpoint.\n                var unit = (roots[0] === 0 || roots[0] === 1) ? 0.5 : 1;\n\n                var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n                if (x_ < x) {   // Quick reject\n                    return 0;\n                }\n                return y2 < y0 ? unit : -unit;\n            }\n        }\n    }\n\n    // TODO\n    // Arc 旋转\n    function windingArc(\n        cx, cy, r, startAngle, endAngle, anticlockwise, x, y\n    ) {\n        y -= cy;\n        if (y > r || y < -r) {\n            return 0;\n        }\n        var tmp = Math.sqrt(r * r - y * y);\n        roots[0] = -tmp;\n        roots[1] = tmp;\n\n        var diff = Math.abs(startAngle - endAngle);\n        if (diff < 1e-4) {\n            return 0;\n        }\n        if (diff % PI2 < 1e-4) {\n            // Is a circle\n            startAngle = 0;\n            endAngle = PI2;\n            var dir = anticlockwise ? 1 : -1;\n            if (x >= roots[0] + cx && x <= roots[1] + cx) {\n                return dir;\n            } else {\n                return 0;\n            }\n        }\n\n        if (anticlockwise) {\n            var tmp = startAngle;\n            startAngle = normalizeRadian(endAngle);\n            endAngle = normalizeRadian(tmp);\n        }\n        else {\n            startAngle = normalizeRadian(startAngle);\n            endAngle = normalizeRadian(endAngle);\n        }\n        if (startAngle > endAngle) {\n            endAngle += PI2;\n        }\n\n        var w = 0;\n        for (var i = 0; i < 2; i++) {\n            var x_ = roots[i];\n            if (x_ + cx > x) {\n                var angle = Math.atan2(y, x_);\n                var dir = anticlockwise ? 1 : -1;\n                if (angle < 0) {\n                    angle = PI2 + angle;\n                }\n                if (\n                    (angle >= startAngle && angle <= endAngle)\n                    || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\n                ) {\n                    if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n                        dir = -dir;\n                    }\n                    w += dir;\n                }\n            }\n        }\n        return w;\n    }\n\n    function containPath(data, lineWidth, isStroke, x, y) {\n        var w = 0;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n\n        for (var i = 0; i < data.length;) {\n            var cmd = data[i++];\n            // Begin a new subpath\n            if (cmd === CMD.M && i > 1) {\n                // Close previous subpath\n                if (!isStroke) {\n                    w += windingLine(xi, yi, x0, y0, x, y);\n                }\n                // 如果被任何一个 subpath 包含\n                // if (w !== 0) {\n                //     return true;\n                // }\n            }\n\n            if (i == 1) {\n                // 如果第一个命令是 L, C, Q\n                // 则 previous point 同绘制命令的第一个 point\n                //\n                // 第一个命令为 Arc 的情况下会在后面特殊处理\n                xi = data[i];\n                yi = data[i + 1];\n\n                x0 = xi;\n                y0 = yi;\n            }\n\n            switch (cmd) {\n                case CMD.M:\n                    // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                    // 在 closePath 的时候使用\n                    x0 = data[i++];\n                    y0 = data[i++];\n                    xi = x0;\n                    yi = y0;\n                    break;\n                case CMD.L:\n                    if (isStroke) {\n                        if (containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n                        w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.C:\n                    if (isStroke) {\n                        if (cubic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingCubic(\n                            xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.Q:\n                    if (isStroke) {\n                        if (quadratic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingQuadratic(\n                            xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.A:\n                    // TODO Arc 判断的开销比较大\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var theta = data[i++];\n                    var dTheta = data[i++];\n                    // TODO Arc 旋转\n                    var psi = data[i++];\n                    var anticlockwise = 1 - data[i++];\n                    var x1 = Math.cos(theta) * rx + cx;\n                    var y1 = Math.sin(theta) * ry + cy;\n                    // 不是直接使用 arc 命令\n                    if (i > 1) {\n                        w += windingLine(xi, yi, x1, y1, x, y);\n                    }\n                    else {\n                        // 第一个命令起点还未定义\n                        x0 = x1;\n                        y0 = y1;\n                    }\n                    // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n                    var _x = (x - cx) * ry / rx + cx;\n                    if (isStroke) {\n                        if (arc.containStroke(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            lineWidth, _x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingArc(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            _x, y\n                        );\n                    }\n                    xi = Math.cos(theta + dTheta) * rx + cx;\n                    yi = Math.sin(theta + dTheta) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    var x1 = x0 + width;\n                    var y1 = y0 + height;\n                    if (isStroke) {\n                        if (containStroke(x0, y0, x1, y0, lineWidth, x, y)\n                          || containStroke(x1, y0, x1, y1, lineWidth, x, y)\n                          || containStroke(x1, y1, x0, y1, lineWidth, x, y)\n                          || containStroke(x0, y1, x0, y0, lineWidth, x, y)\n                        ) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // FIXME Clockwise ?\n                        w += windingLine(x1, y0, x1, y1, x, y);\n                        w += windingLine(x0, y1, x0, y0, x, y);\n                    }\n                    break;\n                case CMD.Z:\n                    if (isStroke) {\n                        if (containStroke(\n                            xi, yi, x0, y0, lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // Close a subpath\n                        w += windingLine(xi, yi, x0, y0, x, y);\n                        // 如果被任何一个 subpath 包含\n                        // FIXME subpaths may overlap\n                        // if (w !== 0) {\n                        //     return true;\n                        // }\n                    }\n                    xi = x0;\n                    yi = y0;\n                    break;\n            }\n        }\n        if (!isStroke && !isAroundEqual(yi, y0)) {\n            w += windingLine(xi, yi, x0, y0, x, y) || 0;\n        }\n        return w !== 0;\n    }\n\n    module.exports = {\n        contain: function (pathData, x, y) {\n            return containPath(pathData, 0, false, x, y);\n        },\n\n        containStroke: function (pathData, lineWidth, x, y) {\n            return containPath(pathData, lineWidth, true, x, y);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/path.js\n// module id = 776\n// module chunks = 0 1 2","\n\n    var curve = require('../core/curve');\n\n    module.exports = {\n        /**\n         * 二次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.quadraticProjectPoint(\n                x0, y0, x1, y1, x2, y2,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/quadratic.js\n// module id = 777\n// module chunks = 0 1 2","\n    module.exports = function windingLine(x0, y0, x1, y1, x, y) {\n        if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\n            return 0;\n        }\n        // Ignore horizontal line\n        if (y1 === y0) {\n            return 0;\n        }\n        var dir = y1 < y0 ? 1 : -1;\n        var t = (y - y0) / (y1 - y0);\n\n        // Avoid winding error when intersection point is the connect point of two line of polygon\n        if (t === 1 || t === 0) {\n            dir = y1 < y0 ? 0.5 : -0.5;\n        }\n\n        var x_ = t * (x1 - x0) + x0;\n\n        return x_ > x ? dir : 0;\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/windingLine.js\n// module id = 778\n// module chunks = 0 1 2","'use strict';\n/**\n * Only implements needed gestures for mobile.\n */\n\n\n    var eventUtil = require('./event');\n\n    var GestureMgr = function () {\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._track = [];\n    };\n\n    GestureMgr.prototype = {\n\n        constructor: GestureMgr,\n\n        recognize: function (event, target, root) {\n            this._doTrack(event, target, root);\n            return this._recognize(event);\n        },\n\n        clear: function () {\n            this._track.length = 0;\n            return this;\n        },\n\n        _doTrack: function (event, target, root) {\n            var touches = event.touches;\n\n            if (!touches) {\n                return;\n            }\n\n            var trackItem = {\n                points: [],\n                touches: [],\n                target: target,\n                event: event\n            };\n\n            for (var i = 0, len = touches.length; i < len; i++) {\n                var touch = touches[i];\n                var pos = eventUtil.clientToLocal(root, touch, {});\n                trackItem.points.push([pos.zrX, pos.zrY]);\n                trackItem.touches.push(touch);\n            }\n\n            this._track.push(trackItem);\n        },\n\n        _recognize: function (event) {\n            for (var eventName in recognizers) {\n                if (recognizers.hasOwnProperty(eventName)) {\n                    var gestureInfo = recognizers[eventName](this._track, event);\n                    if (gestureInfo) {\n                        return gestureInfo;\n                    }\n                }\n            }\n        }\n    };\n\n    function dist(pointPair) {\n        var dx = pointPair[1][0] - pointPair[0][0];\n        var dy = pointPair[1][1] - pointPair[0][1];\n\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    function center(pointPair) {\n        return [\n            (pointPair[0][0] + pointPair[1][0]) / 2,\n            (pointPair[0][1] + pointPair[1][1]) / 2\n        ];\n    }\n\n    var recognizers = {\n\n        pinch: function (track, event) {\n            var trackLen = track.length;\n\n            if (!trackLen) {\n                return;\n            }\n\n            var pinchEnd = (track[trackLen - 1] || {}).points;\n            var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n            if (pinchPre\n                && pinchPre.length > 1\n                && pinchEnd\n                && pinchEnd.length > 1\n            ) {\n                var pinchScale = dist(pinchEnd) / dist(pinchPre);\n                !isFinite(pinchScale) && (pinchScale = 1);\n\n                event.pinchScale = pinchScale;\n\n                var pinchCenter = center(pinchEnd);\n                event.pinchX = pinchCenter[0];\n                event.pinchY = pinchCenter[1];\n\n                return {\n                    type: 'pinch',\n                    target: track[0].target,\n                    event: event\n                };\n            }\n        }\n\n        // Only pinch currently.\n    };\n\n    module.exports = GestureMgr;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/GestureMgr.js\n// module id = 779\n// module chunks = 0 1 2","/**\n * @author Yi Shen(https://github.com/pissang)\n */\n\n\n    var vec2 = require('./vector');\n    var curve = require('./curve');\n\n    var bbox = {};\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n\n    var start = vec2.create();\n    var end = vec2.create();\n    var extremity = vec2.create();\n\n    var PI2 = Math.PI * 2;\n    /**\n     * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n     * @module zrender/core/bbox\n     * @param {Array<Object>} points 顶点数组\n     * @param {number} min\n     * @param {number} max\n     */\n    bbox.fromPoints = function(points, min, max) {\n        if (points.length === 0) {\n            return;\n        }\n        var p = points[0];\n        var left = p[0];\n        var right = p[0];\n        var top = p[1];\n        var bottom = p[1];\n        var i;\n\n        for (i = 1; i < points.length; i++) {\n            p = points[i];\n            left = mathMin(left, p[0]);\n            right = mathMax(right, p[0]);\n            top = mathMin(top, p[1]);\n            bottom = mathMax(bottom, p[1]);\n        }\n\n        min[0] = left;\n        min[1] = top;\n        max[0] = right;\n        max[1] = bottom;\n    };\n\n    /**\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromLine = function (x0, y0, x1, y1, min, max) {\n        min[0] = mathMin(x0, x1);\n        min[1] = mathMin(y0, y1);\n        max[0] = mathMax(x0, x1);\n        max[1] = mathMax(y0, y1);\n    };\n\n    var xDim = [];\n    var yDim = [];\n    /**\n     * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromCubic = function(\n        x0, y0, x1, y1, x2, y2, x3, y3, min, max\n    ) {\n        var cubicExtrema = curve.cubicExtrema;\n        var cubicAt = curve.cubicAt;\n        var i;\n        var n = cubicExtrema(x0, x1, x2, x3, xDim);\n        min[0] = Infinity;\n        min[1] = Infinity;\n        max[0] = -Infinity;\n        max[1] = -Infinity;\n\n        for (i = 0; i < n; i++) {\n            var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n            min[0] = mathMin(x, min[0]);\n            max[0] = mathMax(x, max[0]);\n        }\n        n = cubicExtrema(y0, y1, y2, y3, yDim);\n        for (i = 0; i < n; i++) {\n            var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n            min[1] = mathMin(y, min[1]);\n            max[1] = mathMax(y, max[1]);\n        }\n\n        min[0] = mathMin(x0, min[0]);\n        max[0] = mathMax(x0, max[0]);\n        min[0] = mathMin(x3, min[0]);\n        max[0] = mathMax(x3, max[0]);\n\n        min[1] = mathMin(y0, min[1]);\n        max[1] = mathMax(y0, max[1]);\n        min[1] = mathMin(y3, min[1]);\n        max[1] = mathMax(y3, max[1]);\n    };\n\n    /**\n     * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromQuadratic = function(x0, y0, x1, y1, x2, y2, min, max) {\n        var quadraticExtremum = curve.quadraticExtremum;\n        var quadraticAt = curve.quadraticAt;\n        // Find extremities, where derivative in x dim or y dim is zero\n        var tx =\n            mathMax(\n                mathMin(quadraticExtremum(x0, x1, x2), 1), 0\n            );\n        var ty =\n            mathMax(\n                mathMin(quadraticExtremum(y0, y1, y2), 1), 0\n            );\n\n        var x = quadraticAt(x0, x1, x2, tx);\n        var y = quadraticAt(y0, y1, y2, ty);\n\n        min[0] = mathMin(x0, x2, x);\n        min[1] = mathMin(y0, y2, y);\n        max[0] = mathMax(x0, x2, x);\n        max[1] = mathMax(y0, y2, y);\n    };\n\n    /**\n     * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n     * @method\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x\n     * @param {number} y\n     * @param {number} rx\n     * @param {number} ry\n     * @param {number} startAngle\n     * @param {number} endAngle\n     * @param {number} anticlockwise\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromArc = function (\n        x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max\n    ) {\n        var vec2Min = vec2.min;\n        var vec2Max = vec2.max;\n\n        var diff = Math.abs(startAngle - endAngle);\n\n\n        if (diff % PI2 < 1e-4 && diff > 1e-4) {\n            // Is a circle\n            min[0] = x - rx;\n            min[1] = y - ry;\n            max[0] = x + rx;\n            max[1] = y + ry;\n            return;\n        }\n\n        start[0] = mathCos(startAngle) * rx + x;\n        start[1] = mathSin(startAngle) * ry + y;\n\n        end[0] = mathCos(endAngle) * rx + x;\n        end[1] = mathSin(endAngle) * ry + y;\n\n        vec2Min(min, start, end);\n        vec2Max(max, start, end);\n\n        // Thresh to [0, Math.PI * 2]\n        startAngle = startAngle % (PI2);\n        if (startAngle < 0) {\n            startAngle = startAngle + PI2;\n        }\n        endAngle = endAngle % (PI2);\n        if (endAngle < 0) {\n            endAngle = endAngle + PI2;\n        }\n\n        if (startAngle > endAngle && !anticlockwise) {\n            endAngle += PI2;\n        }\n        else if (startAngle < endAngle && anticlockwise) {\n            startAngle += PI2;\n        }\n        if (anticlockwise) {\n            var tmp = endAngle;\n            endAngle = startAngle;\n            startAngle = tmp;\n        }\n\n        // var number = 0;\n        // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n        for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n            if (angle > startAngle) {\n                extremity[0] = mathCos(angle) * rx + x;\n                extremity[1] = mathSin(angle) * ry + y;\n\n                vec2Min(min, extremity, min);\n                vec2Max(max, extremity, max);\n            }\n        }\n    };\n\n    module.exports = bbox;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/bbox.js\n// module id = 780\n// module chunks = 0 1 2","\n\n    var eventTool = require('../core/event');\n    var zrUtil = require('../core/util');\n    var Eventful = require('../mixin/Eventful');\n    var env = require('../core/env');\n    var GestureMgr = require('../core/GestureMgr');\n\n    var addEventListener = eventTool.addEventListener;\n    var removeEventListener = eventTool.removeEventListener;\n    var normalizeEvent = eventTool.normalizeEvent;\n\n    var TOUCH_CLICK_DELAY = 300;\n\n    var mouseHandlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n\n    var touchHandlerNames = [\n        'touchstart', 'touchend', 'touchmove'\n    ];\n\n    var pointerEventNames = {\n        pointerdown: 1, pointerup: 1, pointermove: 1, pointerout: 1\n    };\n\n    var pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n        var nm = name.replace('mouse', 'pointer');\n        return pointerEventNames[nm] ? nm : name;\n    });\n\n    function eventNameFix(name) {\n        return (name === 'mousewheel' && env.browser.firefox) ? 'DOMMouseScroll' : name;\n    }\n\n    function processGesture(proxy, event, stage) {\n        var gestureMgr = proxy._gestureMgr;\n\n        stage === 'start' && gestureMgr.clear();\n\n        var gestureInfo = gestureMgr.recognize(\n            event,\n            proxy.handler.findHover(event.zrX, event.zrY, null).target,\n            proxy.dom\n        );\n\n        stage === 'end' && gestureMgr.clear();\n\n        // Do not do any preventDefault here. Upper application do that if necessary.\n        if (gestureInfo) {\n            var type = gestureInfo.type;\n            event.gestureEvent = type;\n\n            proxy.handler.dispatchToElement({target: gestureInfo.target}, type, gestureInfo.event);\n        }\n    }\n\n    // function onMSGestureChange(proxy, event) {\n    //     if (event.translationX || event.translationY) {\n    //         // mousemove is carried by MSGesture to reduce the sensitivity.\n    //         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n    //     }\n    //     if (event.scale !== 1) {\n    //         event.pinchX = event.offsetX;\n    //         event.pinchY = event.offsetY;\n    //         event.pinchScale = event.scale;\n    //         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n    //     }\n    // }\n\n    /**\n     * Prevent mouse event from being dispatched after Touch Events action\n     * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n     * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n     * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n     * Result: Blocking Mouse Events for 700ms.\n     */\n    function setTouchTimer(instance) {\n        instance._touching = true;\n        clearTimeout(instance._touchTimer);\n        instance._touchTimer = setTimeout(function () {\n            instance._touching = false;\n        }, 700);\n    }\n\n\n    var domHandlers = {\n        /**\n         * Mouse move handler\n         * @inner\n         * @param {Event} event\n         */\n        mousemove: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            this.trigger('mousemove', event);\n        },\n\n        /**\n         * Mouse out handler\n         * @inner\n         * @param {Event} event\n         */\n        mouseout: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            var element = event.toElement || event.relatedTarget;\n            if (element != this.dom) {\n                while (element && element.nodeType != 9) {\n                    // 忽略包含在root中的dom引起的mouseOut\n                    if (element === this.dom) {\n                        return;\n                    }\n\n                    element = element.parentNode;\n                }\n            }\n\n            this.trigger('mouseout', event);\n        },\n\n        /**\n         * Touch开始响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchstart: function (event) {\n            // Default mouse behaviour should not be disabled here.\n            // For example, page may needs to be slided.\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            this._lastTouchMoment = new Date();\n\n            processGesture(this, event, 'start');\n\n            // In touch device, trigger `mousemove`(`mouseover`) should\n            // be triggered, and must before `mousedown` triggered.\n            domHandlers.mousemove.call(this, event);\n\n            domHandlers.mousedown.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch移动响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchmove: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'change');\n\n            // Mouse move should always be triggered no matter whether\n            // there is gestrue event, because mouse move and pinch may\n            // be used at the same time.\n            domHandlers.mousemove.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch结束响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchend: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'end');\n\n            domHandlers.mouseup.call(this, event);\n\n            // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n            // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n            // we can conveniently implement \"hover style\" in both PC and touch device just\n            // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n            // to remove \"hover style\" on an element, without any additional code for\n            // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n            // style\" will remain for user view)\n\n            // click event should always be triggered no matter whether\n            // there is gestrue event. System click can not be prevented.\n            if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n                domHandlers.click.call(this, event);\n            }\n\n            setTouchTimer(this);\n        },\n\n        pointerdown: function (event) {\n            domHandlers.mousedown.call(this, event);\n\n            // if (useMSGuesture(this, event)) {\n            //     this._msGesture.addPointer(event.pointerId);\n            // }\n        },\n\n        pointermove: function (event) {\n            // FIXME\n            // pointermove is so sensitive that it always triggered when\n            // tap(click) on touch screen, which affect some judgement in\n            // upper application. So, we dont support mousemove on MS touch\n            // device yet.\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mousemove.call(this, event);\n            }\n        },\n\n        pointerup: function (event) {\n            domHandlers.mouseup.call(this, event);\n        },\n\n        pointerout: function (event) {\n            // pointerout will be triggered when tap on touch screen\n            // (IE11+/Edge on MS Surface) after click event triggered,\n            // which is inconsistent with the mousout behavior we defined\n            // in touchend. So we unify them.\n            // (check domHandlers.touchend for detailed explanation)\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mouseout.call(this, event);\n            }\n        }\n    };\n\n    function isPointerFromTouch(event) {\n        var pointerType = event.pointerType;\n        return pointerType === 'pen' || pointerType === 'touch';\n    }\n\n    // function useMSGuesture(handlerProxy, event) {\n    //     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n    // }\n\n    // Common handlers\n    zrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        domHandlers[name] = function (event) {\n            event = normalizeEvent(this.dom, event);\n            this.trigger(name, event);\n        };\n    });\n\n    /**\n     * 为控制类实例初始化dom 事件处理函数\n     *\n     * @inner\n     * @param {module:zrender/Handler} instance 控制类实例\n     */\n    function initDomHandler(instance) {\n        zrUtil.each(touchHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(pointerHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(mouseHandlerNames, function (name) {\n            instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n        });\n\n        function makeMouseHandler(fn, instance) {\n            return function () {\n                if (instance._touching) {\n                    return;\n                }\n                return fn.apply(instance, arguments);\n            };\n        }\n    }\n\n\n    function HandlerDomProxy(dom) {\n        Eventful.call(this);\n\n        this.dom = dom;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._touching = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._touchTimer;\n\n        /**\n         * @private\n         * @type {module:zrender/core/GestureMgr}\n         */\n        this._gestureMgr = new GestureMgr();\n\n        this._handlers = {};\n\n        initDomHandler(this);\n\n        if (env.pointerEventsSupported) { // Only IE11+/Edge\n            // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n            // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n            // at the same time.\n            // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n            // screen, which do not occurs in pointer event.\n            // So we use pointer event to both detect touch gesture and mouse behavior.\n            mountHandlers(pointerHandlerNames, this);\n\n            // FIXME\n            // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n            // which does not prevent defuault behavior occasionally (which may cause view port\n            // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n            // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n            // touch screen. And we only support click behavior on MS touch screen now.\n\n            // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n            // We dont support touch on IE on win7.\n            // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n            // if (typeof MSGesture === 'function') {\n            //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n            //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n            // }\n        }\n        else {\n            if (env.touchEventsSupported) {\n                mountHandlers(touchHandlerNames, this);\n                // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n                // addEventListener(root, 'mouseout', this._mouseoutHandler);\n            }\n\n            // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n            // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n            // mouse event can not be handle in those devices.\n            // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n            // mouseevent after touch event triggered, see `setTouchTimer`.\n            mountHandlers(mouseHandlerNames, this);\n        }\n\n        function mountHandlers(handlerNames, instance) {\n            zrUtil.each(handlerNames, function (name) {\n                addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n            }, instance);\n        }\n    }\n\n    var handlerDomProxyProto = HandlerDomProxy.prototype;\n    handlerDomProxyProto.dispose = function () {\n        var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n        for (var i = 0; i < handlerNames.length; i++) {\n            var name = handlerNames[i];\n            removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n        }\n    };\n\n    handlerDomProxyProto.setCursor = function (cursorStyle) {\n        this.dom.style.cursor = cursorStyle || 'default';\n    };\n\n    zrUtil.mixin(HandlerDomProxy, Eventful);\n\n    module.exports = HandlerDomProxy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/dom/HandlerProxy.js\n// module id = 781\n// module chunks = 0 1 2","// CompoundPath to improve performance\n\n\n    var Path = require('./Path');\n\n    module.exports = Path.extend({\n\n        type: 'compound',\n\n        shape: {\n\n            paths: null\n        },\n\n        _updatePathDirty: function () {\n            var dirtyPath = this.__dirtyPath;\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                // Mark as dirty if any subpath is dirty\n                dirtyPath = dirtyPath || paths[i].__dirtyPath;\n            }\n            this.__dirtyPath = dirtyPath;\n            this.__dirty = this.__dirty || dirtyPath;\n        },\n\n        beforeBrush: function () {\n            this._updatePathDirty();\n            var paths = this.shape.paths || [];\n            var scale = this.getGlobalScale();\n            // Update path scale\n            for (var i = 0; i < paths.length; i++) {\n                if (!paths[i].path) {\n                    paths[i].createPathProxy();\n                }\n                paths[i].path.setScale(scale[0], scale[1]);\n            }\n        },\n\n        buildPath: function (ctx, shape) {\n            var paths = shape.paths || [];\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].buildPath(ctx, paths[i].shape, true);\n            }\n        },\n\n        afterBrush: function () {\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].__dirtyPath = false;\n            }\n        },\n\n        getBoundingRect: function () {\n            this._updatePathDirty();\n            return Path.prototype.getBoundingRect.call(this);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/CompoundPath.js\n// module id = 782\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('../core/util');\n\n    var Gradient = require('./Gradient');\n\n    /**\n     * x, y, x2, y2 are all percent from 0 to 1\n     * @param {number} [x=0]\n     * @param {number} [y=0]\n     * @param {number} [x2=1]\n     * @param {number} [y2=0]\n     * @param {Array.<Object>} colorStops\n     * @param {boolean} [globalCoord=false]\n     */\n    var LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'linear', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0 : x;\n\n        this.y = y == null ? 0 : y;\n\n        this.x2 = x2 == null ? 1 : x2;\n\n        this.y2 = y2 == null ? 0 : y2;\n\n        // Can be cloned\n        this.type = 'linear';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    LinearGradient.prototype = {\n\n        constructor: LinearGradient\n    };\n\n    zrUtil.inherits(LinearGradient, Gradient);\n\n    module.exports = LinearGradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/LinearGradient.js\n// module id = 783\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('../core/util');\n\n    var Gradient = require('./Gradient');\n\n    /**\n     * x, y, r are all percent from 0 to 1\n     * @param {number} [x=0.5]\n     * @param {number} [y=0.5]\n     * @param {number} [r=0.5]\n     * @param {Array.<Object>} [colorStops]\n     * @param {boolean} [globalCoord=false]\n     */\n    var RadialGradient = function (x, y, r, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'radial', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0.5 : x;\n\n        this.y = y == null ? 0.5 : y;\n\n        this.r = r == null ? 0.5 : r;\n\n        // Can be cloned\n        this.type = 'radial';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    RadialGradient.prototype = {\n\n        constructor: RadialGradient\n    };\n\n    zrUtil.inherits(RadialGradient, Gradient);\n\n    module.exports = RadialGradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/RadialGradient.js\n// module id = 784\n// module chunks = 0 1 2","/**\n * Text element\n * @module zrender/graphic/Text\n *\n * TODO Wrapping\n *\n * Text not support gradient\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var zrUtil = require('../core/util');\n    var textContain = require('../contain/text');\n    var textHelper = require('./helper/text');\n\n    /**\n     * @alias zrender/graphic/Text\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    var Text = function (opts) {\n        Displayable.call(this, opts);\n    };\n\n    Text.prototype = {\n\n        constructor: Text,\n\n        type: 'text',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n\n            // Optimize, avoid normalize every time.\n            this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n            // Use props with prefix 'text'.\n            style.fill = style.stroke = style.shadowBlur = style.shadowColor =\n                style.shadowOffsetX = style.shadowOffsetY = null;\n\n            var text = style.text;\n            // Convert to string\n            text != null && (text += '');\n\n            // Always bind style\n            style.bind(ctx, this, prevEl);\n\n            if (!textHelper.needDrawText(text, style)) {\n                return;\n            }\n\n            this.setTransform(ctx);\n\n            textHelper.renderText(this, ctx, text, style);\n\n            this.restoreTransform(ctx);\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n\n            // Optimize, avoid normalize every time.\n            this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n            if (!this._rect) {\n                var text = style.text;\n                text != null ? (text += '') : (text = '');\n\n                var rect = textContain.getBoundingRect(\n                    style.text + '',\n                    style.font,\n                    style.textAlign,\n                    style.textVerticalAlign,\n                    style.textPadding,\n                    style.rich\n                );\n\n                rect.x += style.x || 0;\n                rect.y += style.y || 0;\n\n                if (textHelper.getStroke(style.textStroke, style.textLineWidth)) {\n                    var w = style.textLineWidth;\n                    rect.x -= w / 2;\n                    rect.y -= w / 2;\n                    rect.width += w;\n                    rect.height += w;\n                }\n\n                this._rect = rect;\n            }\n\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(Text, Displayable);\n\n    module.exports = Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Text.js\n// module id = 785\n// module chunks = 0 1 2","/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n\n    var vec2 = require('../../core/vector');\n    var v2Min = vec2.min;\n    var v2Max = vec2.max;\n    var v2Scale = vec2.scale;\n    var v2Distance = vec2.distance;\n    var v2Add = vec2.add;\n\n    /**\n     * 贝塞尔平滑曲线\n     * @alias module:zrender/shape/util/smoothBezier\n     * @param {Array} points 线段顶点数组\n     * @param {number} smooth 平滑等级, 0-1\n     * @param {boolean} isLoop\n     * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n     *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n     *                           整个折线的包围盒做一个并集用来约束控制点。\n     * @param {Array} 计算出来的控制点数组\n     */\n    module.exports = function (points, smooth, isLoop, constraint) {\n        var cps = [];\n\n        var v = [];\n        var v1 = [];\n        var v2 = [];\n        var prevPoint;\n        var nextPoint;\n\n        var min, max;\n        if (constraint) {\n            min = [Infinity, Infinity];\n            max = [-Infinity, -Infinity];\n            for (var i = 0, len = points.length; i < len; i++) {\n                v2Min(min, min, points[i]);\n                v2Max(max, max, points[i]);\n            }\n            // 与指定的包围盒做并集\n            v2Min(min, min, constraint[0]);\n            v2Max(max, max, constraint[1]);\n        }\n\n        for (var i = 0, len = points.length; i < len; i++) {\n            var point = points[i];\n\n            if (isLoop) {\n                prevPoint = points[i ? i - 1 : len - 1];\n                nextPoint = points[(i + 1) % len];\n            }\n            else {\n                if (i === 0 || i === len - 1) {\n                    cps.push(vec2.clone(points[i]));\n                    continue;\n                }\n                else {\n                    prevPoint = points[i - 1];\n                    nextPoint = points[i + 1];\n                }\n            }\n\n            vec2.sub(v, nextPoint, prevPoint);\n\n            // use degree to scale the handle length\n            v2Scale(v, v, smooth);\n\n            var d0 = v2Distance(point, prevPoint);\n            var d1 = v2Distance(point, nextPoint);\n            var sum = d0 + d1;\n            if (sum !== 0) {\n                d0 /= sum;\n                d1 /= sum;\n            }\n\n            v2Scale(v1, v, -d0);\n            v2Scale(v2, v, d1);\n            var cp0 = v2Add([], point, v1);\n            var cp1 = v2Add([], point, v2);\n            if (constraint) {\n                v2Max(cp0, cp0, min);\n                v2Min(cp0, cp0, max);\n                v2Max(cp1, cp1, min);\n                v2Min(cp1, cp1, max);\n            }\n            cps.push(cp0);\n            cps.push(cp1);\n        }\n\n        if (isLoop) {\n            cps.push(cps.shift());\n        }\n\n        return cps;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/smoothBezier.js\n// module id = 786\n// module chunks = 0 1 2","/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n    var vec2 = require('../../core/vector');\n\n    /**\n     * @inner\n     */\n    function interpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    /**\n     * @alias module:zrender/shape/util/smoothSpline\n     * @param {Array} points 线段顶点数组\n     * @param {boolean} isLoop\n     * @return {Array}\n     */\n    module.exports = function (points, isLoop) {\n        var len = points.length;\n        var ret = [];\n\n        var distance = 0;\n        for (var i = 1; i < len; i++) {\n            distance += vec2.distance(points[i - 1], points[i]);\n        }\n\n        var segs = distance / 2;\n        segs = segs < len ? len : segs;\n        for (var i = 0; i < segs; i++) {\n            var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n            var idx = Math.floor(pos);\n\n            var w = pos - idx;\n\n            var p0;\n            var p1 = points[idx % len];\n            var p2;\n            var p3;\n            if (!isLoop) {\n                p0 = points[idx === 0 ? idx : idx - 1];\n                p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n                p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n            }\n            else {\n                p0 = points[(idx - 1 + len) % len];\n                p2 = points[(idx + 1) % len];\n                p3 = points[(idx + 2) % len];\n            }\n\n            var w2 = w * w;\n            var w3 = w * w2;\n\n            ret.push([\n                interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\n                interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\n            ]);\n        }\n        return ret;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/smoothSpline.js\n// module id = 787\n// module chunks = 0 1 2","/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\n\n\n\n    var textHelper = require('../helper/text');\n    var BoundingRect = require('../../core/BoundingRect');\n\n    var tmpRect = new BoundingRect();\n\n    var RectText = function () {};\n\n    RectText.prototype = {\n\n        constructor: RectText,\n\n        /**\n         * Draw text in a rect with specified position.\n         * @param  {CanvasRenderingContext2D} ctx\n         * @param  {Object} rect Displayable rect\n         */\n        drawRectText: function (ctx, rect) {\n            var style = this.style;\n\n            rect = style.textRect || rect;\n\n            // Optimize, avoid normalize every time.\n            this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n            var text = style.text;\n\n            // Convert to string\n            text != null && (text += '');\n\n            if (!textHelper.needDrawText(text, style)) {\n                return;\n            }\n\n            // FIXME\n            ctx.save();\n\n            // Transform rect to view space\n            var transform = this.transform;\n            if (!style.transformText) {\n                if (transform) {\n                    tmpRect.copy(rect);\n                    tmpRect.applyTransform(transform);\n                    rect = tmpRect;\n                }\n            }\n            else {\n                this.setTransform(ctx);\n            }\n\n            // transformText and textRotation can not be used at the same time.\n            textHelper.renderText(this, ctx, text, style, rect);\n\n            ctx.restore();\n        }\n    };\n\n    module.exports = RectText;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/mixin/RectText.js\n// module id = 788\n// module chunks = 0 1 2","/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\n \n\n    module.exports = require('../Path').extend({\n\n        type: 'arc',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        style: {\n\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r + x, unitY * r + y);\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Arc.js\n// module id = 789\n// module chunks = 0 1 2","'use strict';\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\n\n\n    var curveTool = require('../../core/curve');\n    var vec2 = require('../../core/vector');\n    var quadraticSubdivide = curveTool.quadraticSubdivide;\n    var cubicSubdivide = curveTool.cubicSubdivide;\n    var quadraticAt = curveTool.quadraticAt;\n    var cubicAt = curveTool.cubicAt;\n    var quadraticDerivativeAt = curveTool.quadraticDerivativeAt;\n    var cubicDerivativeAt = curveTool.cubicDerivativeAt;\n\n    var out = [];\n\n    function someVectorAt(shape, t, isTangent) {\n        var cpx2 = shape.cpx2;\n        var cpy2 = shape.cpy2;\n        if (cpx2 === null || cpy2 === null) {\n            return [\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t),\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)\n            ];\n        }\n        else {\n            return [\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t),\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)\n            ];\n        }\n    }\n    module.exports = require('../Path').extend({\n\n        type: 'bezier-curve',\n\n        shape: {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n            cpx1: 0,\n            cpy1: 0,\n            // cpx2: 0,\n            // cpy2: 0\n\n            // Curve show percent, for animating\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var cpx1 = shape.cpx1;\n            var cpy1 = shape.cpy1;\n            var cpx2 = shape.cpx2;\n            var cpy2 = shape.cpy2;\n            var percent = shape.percent;\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (cpx2 == null || cpy2 == null) {\n                if (percent < 1) {\n                    quadraticSubdivide(\n                        x1, cpx1, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    x2 = out[2];\n                    quadraticSubdivide(\n                        y1, cpy1, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    y2 = out[2];\n                }\n\n                ctx.quadraticCurveTo(\n                    cpx1, cpy1,\n                    x2, y2\n                );\n            }\n            else {\n                if (percent < 1) {\n                    cubicSubdivide(\n                        x1, cpx1, cpx2, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    cpx2 = out[2];\n                    x2 = out[3];\n                    cubicSubdivide(\n                        y1, cpy1, cpy2, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    cpy2 = out[2];\n                    y2 = out[3];\n                }\n                ctx.bezierCurveTo(\n                    cpx1, cpy1,\n                    cpx2, cpy2,\n                    x2, y2\n                );\n            }\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        pointAt: function (t) {\n            return someVectorAt(this.shape, t, false);\n        },\n\n        /**\n         * Get tangent at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        tangentAt: function (t) {\n            var p = someVectorAt(this.shape, t, true);\n            return vec2.normalize(p, p);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/BezierCurve.js\n// module id = 790\n// module chunks = 0 1 2","'use strict';\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\n\n\n\n    module.exports = require('../Path').extend({\n\n        type: 'circle',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0\n        },\n\n\n        buildPath : function (ctx, shape, inBundle) {\n            // Better stroking in ShapeBundle\n            // Always do it may have performence issue ( fill may be 2x more cost)\n            if (inBundle) {\n                ctx.moveTo(shape.cx + shape.r, shape.cy);\n            }\n            // else {\n            //     if (ctx.allocate && !ctx.data.length) {\n            //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n            //     }\n            // }\n            // Better stroking in ShapeBundle\n            // ctx.moveTo(shape.cx + shape.r, shape.cy);\n            ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Circle.js\n// module id = 791\n// module chunks = 0 1 2","/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\n\n    module.exports = require('../Path').extend({\n\n        type: 'line',\n\n        shape: {\n            // Start point\n            x1: 0,\n            y1: 0,\n            // End point\n            x2: 0,\n            y2: 0,\n\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var percent = shape.percent;\n\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (percent < 1) {\n                x2 = x1 * (1 - percent) + x2 * percent;\n                y2 = y1 * (1 - percent) + y2 * percent;\n            }\n            ctx.lineTo(x2, y2);\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} percent\n         * @return {Array.<number>}\n         */\n        pointAt: function (p) {\n            var shape = this.shape;\n            return [\n                shape.x1 * (1 - p) + shape.x2 * p,\n                shape.y1 * (1 - p) + shape.y2 * p\n            ];\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Line.js\n// module id = 792\n// module chunks = 0 1 2","/**\n * 多边形\n * @module zrender/shape/Polygon\n */\n\n\n    var polyHelper = require('../helper/poly');\n\n    module.exports = require('../Path').extend({\n        \n        type: 'polygon',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, true);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Polygon.js\n// module id = 793\n// module chunks = 0 1 2","/**\n * @module zrender/graphic/shape/Polyline\n */\n\n\n    var polyHelper = require('../helper/poly');\n\n    module.exports = require('../Path').extend({\n        \n        type: 'polyline',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        style: {\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, false);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Polyline.js\n// module id = 794\n// module chunks = 0 1 2","/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\n\n\n    var roundRectHelper = require('../helper/roundRect');\n\n    module.exports = require('../Path').extend({\n\n        type: 'rect',\n\n        shape: {\n            // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n            // r缩写为1         相当于 [1, 1, 1, 1]\n            // r缩写为[1]       相当于 [1, 1, 1, 1]\n            // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n            // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n            r: 0,\n\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            if (!shape.r) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, shape);\n            }\n            ctx.closePath();\n            return;\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Rect.js\n// module id = 795\n// module chunks = 0 1 2","/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\n\n\n    module.exports = require('../Path').extend({\n\n        type: 'ring',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0,\n            r0: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.cx;\n            var y = shape.cy;\n            var PI2 = Math.PI * 2;\n            ctx.moveTo(x + shape.r, y);\n            ctx.arc(x, y, shape.r, 0, PI2, false);\n            ctx.moveTo(x + shape.r0, y);\n            ctx.arc(x, y, shape.r0, 0, PI2, true);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Ring.js\n// module id = 796\n// module chunks = 0 1 2","/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\n\n\n\n    var Path = require('../Path');\n    var fixClipWithShadow = require('../helper/fixClipWithShadow');\n\n    module.exports = Path.extend({\n\n        type: 'sector',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r0: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        brush: fixClipWithShadow(Path.prototype.brush),\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r0 = Math.max(shape.r0 || 0, 0);\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n\n            ctx.lineTo(unitX * r + x, unitY * r + y);\n\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n\n            ctx.lineTo(\n                Math.cos(endAngle) * r0 + x,\n                Math.sin(endAngle) * r0 + y\n            );\n\n            if (r0 !== 0) {\n                ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n            }\n\n            ctx.closePath();\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Sector.js\n// module id = 797\n// module chunks = 0 1 2","'use strict';\n/**\n * @module zrender/mixin/Animatable\n */\n\n\n    var Animator = require('../animation/Animator');\n    var util = require('../core/util');\n    var isString = util.isString;\n    var isFunction = util.isFunction;\n    var isObject = util.isObject;\n    var log = require('../core/log');\n\n    /**\n     * @alias modue:zrender/mixin/Animatable\n     * @constructor\n     */\n    var Animatable = function () {\n\n        /**\n         * @type {Array.<module:zrender/animation/Animator>}\n         * @readOnly\n         */\n        this.animators = [];\n    };\n\n    Animatable.prototype = {\n\n        constructor: Animatable,\n\n        /**\n         * 动画\n         *\n         * @param {string} path The path to fetch value from object, like 'a.b.c'.\n         * @param {boolean} [loop] Whether to loop animation.\n         * @return {module:zrender/animation/Animator}\n         * @example:\n         *     el.animate('style', false)\n         *         .when(1000, {x: 10} )\n         *         .done(function(){ // Animation done })\n         *         .start()\n         */\n        animate: function (path, loop) {\n            var target;\n            var animatingShape = false;\n            var el = this;\n            var zr = this.__zr;\n            if (path) {\n                var pathSplitted = path.split('.');\n                var prop = el;\n                // If animating shape\n                animatingShape = pathSplitted[0] === 'shape';\n                for (var i = 0, l = pathSplitted.length; i < l; i++) {\n                    if (!prop) {\n                        continue;\n                    }\n                    prop = prop[pathSplitted[i]];\n                }\n                if (prop) {\n                    target = prop;\n                }\n            }\n            else {\n                target = el;\n            }\n\n            if (!target) {\n                log(\n                    'Property \"'\n                    + path\n                    + '\" is not existed in element '\n                    + el.id\n                );\n                return;\n            }\n\n            var animators = el.animators;\n\n            var animator = new Animator(target, loop);\n\n            animator.during(function (target) {\n                el.dirty(animatingShape);\n            })\n            .done(function () {\n                // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n                animators.splice(util.indexOf(animators, animator), 1);\n            });\n\n            animators.push(animator);\n\n            // If animate after added to the zrender\n            if (zr) {\n                zr.animation.addAnimator(animator);\n            }\n\n            return animator;\n        },\n\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stopAnimation: function (forwardToLast) {\n            var animators = this.animators;\n            var len = animators.length;\n            for (var i = 0; i < len; i++) {\n                animators[i].stop(forwardToLast);\n            }\n            animators.length = 0;\n\n            return this;\n        },\n\n        /**\n         * @param {Object} target\n         * @param {number} [time=500] Time in ms\n         * @param {string} [easing='linear']\n         * @param {number} [delay=0]\n         * @param {Function} [callback]\n         * @param {Function} [forceAnimate] Prevent stop animation and callback\n         *        immediently when target values are the same as current values.\n         *\n         * @example\n         *  // Animate position\n         *  el.animateTo({\n         *      position: [10, 10]\n         *  }, function () { // done })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n         *  el.animateTo({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100, 'cubicOut', function () { // done })\n         */\n         // TODO Return animation key\n        animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n            // animateTo(target, time, easing, callback);\n            if (isString(delay)) {\n                callback = easing;\n                easing = delay;\n                delay = 0;\n            }\n            // animateTo(target, time, delay, callback);\n            else if (isFunction(easing)) {\n                callback = easing;\n                easing = 'linear';\n                delay = 0;\n            }\n            // animateTo(target, time, callback);\n            else if (isFunction(delay)) {\n                callback = delay;\n                delay = 0;\n            }\n            // animateTo(target, callback)\n            else if (isFunction(time)) {\n                callback = time;\n                time = 500;\n            }\n            // animateTo(target)\n            else if (!time) {\n                time = 500;\n            }\n            // Stop all previous animations\n            this.stopAnimation();\n            this._animateToShallow('', this, target, time, delay, easing, callback);\n\n            // Animators may be removed immediately after start\n            // if there is nothing to animate\n            var animators = this.animators.slice();\n            var count = animators.length;\n            function done() {\n                count--;\n                if (!count) {\n                    callback && callback();\n                }\n            }\n\n            // No animators. This should be checked before animators[i].start(),\n            // because 'done' may be executed immediately if no need to animate.\n            if (!count) {\n                callback && callback();\n            }\n            // Start after all animators created\n            // Incase any animator is done immediately when all animation properties are not changed\n            for (var i = 0; i < animators.length; i++) {\n                animators[i]\n                    .done(done)\n                    .start(easing, forceAnimate);\n            }\n        },\n\n        /**\n         * @private\n         * @param {string} path=''\n         * @param {Object} source=this\n         * @param {Object} target\n         * @param {number} [time=500]\n         * @param {number} [delay=0]\n         *\n         * @example\n         *  // Animate position\n         *  el._animateToShallow({\n         *      position: [10, 10]\n         *  })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms\n         *  el._animateToShallow({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100)\n         */\n        _animateToShallow: function (path, source, target, time, delay) {\n            var objShallow = {};\n            var propertyCount = 0;\n            for (var name in target) {\n                if (!target.hasOwnProperty(name)) {\n                    continue;\n                }\n\n                if (source[name] != null) {\n                    if (isObject(target[name]) && !util.isArrayLike(target[name])) {\n                        this._animateToShallow(\n                            path ? path + '.' + name : name,\n                            source[name],\n                            target[name],\n                            time,\n                            delay\n                        );\n                    }\n                    else {\n                        objShallow[name] = target[name];\n                        propertyCount++;\n                    }\n                }\n                else if (target[name] != null) {\n                    // Attr directly if not has property\n                    // FIXME, if some property not needed for element ?\n                    if (!path) {\n                        this.attr(name, target[name]);\n                    }\n                    else {  // Shape or style\n                        var props = {};\n                        props[path] = {};\n                        props[path][name] = target[name];\n                        this.attr(props);\n                    }\n                }\n            }\n\n            if (propertyCount > 0) {\n                this.animate(path, false)\n                    .when(time == null ? 500 : time, objShallow)\n                    .delay(delay || 0);\n            }\n\n            return this;\n        }\n    };\n\n    module.exports = Animatable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Animatable.js\n// module id = 798\n// module chunks = 0 1 2","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\n\n    function Draggable() {\n\n        this.on('mousedown', this._dragStart, this);\n        this.on('mousemove', this._drag, this);\n        this.on('mouseup', this._dragEnd, this);\n        this.on('globalout', this._dragEnd, this);\n        // this._dropTarget = null;\n        // this._draggingTarget = null;\n\n        // this._x = 0;\n        // this._y = 0;\n    }\n\n    Draggable.prototype = {\n\n        constructor: Draggable,\n\n        _dragStart: function (e) {\n            var draggingTarget = e.target;\n            if (draggingTarget && draggingTarget.draggable) {\n                this._draggingTarget = draggingTarget;\n                draggingTarget.dragging = true;\n                this._x = e.offsetX;\n                this._y = e.offsetY;\n\n                this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n            }\n        },\n\n        _drag: function (e) {\n            var draggingTarget = this._draggingTarget;\n            if (draggingTarget) {\n\n                var x = e.offsetX;\n                var y = e.offsetY;\n\n                var dx = x - this._x;\n                var dy = y - this._y;\n                this._x = x;\n                this._y = y;\n\n                draggingTarget.drift(dx, dy, e);\n                this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n\n                var dropTarget = this.findHover(x, y, draggingTarget).target;\n                var lastDropTarget = this._dropTarget;\n                this._dropTarget = dropTarget;\n\n                if (draggingTarget !== dropTarget) {\n                    if (lastDropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n                    }\n                    if (dropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n                    }\n                }\n            }\n        },\n\n        _dragEnd: function (e) {\n            var draggingTarget = this._draggingTarget;\n\n            if (draggingTarget) {\n                draggingTarget.dragging = false;\n            }\n\n            this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n            if (this._dropTarget) {\n                this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n            }\n\n            this._draggingTarget = null;\n            this._dropTarget = null;\n        }\n\n    };\n\n    function param(target, e) {\n        return {target: target, topTarget: e && e.topTarget};\n    }\n\n    module.exports = Draggable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Draggable.js\n// module id = 799\n// module chunks = 0 1 2","\n\n    var Path = require('../graphic/Path');\n    var PathProxy = require('../core/PathProxy');\n    var transformPath = require('./transformPath');\n\n    // command chars\n    var cc = [\n        'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\n        'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\n    ];\n\n    var mathSqrt = Math.sqrt;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n    var PI = Math.PI;\n\n    var vMag = function(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n    var vRatio = function(u, v) {\n        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n    var vAngle = function(u, v) {\n        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)\n                * Math.acos(vRatio(u, v));\n    };\n\n    function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n        var psi = psiDeg * (PI / 180.0);\n        var xp = mathCos(psi) * (x1 - x2) / 2.0\n                 + mathSin(psi) * (y1 - y2) / 2.0;\n        var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0\n                 + mathCos(psi) * (y1 - y2) / 2.0;\n\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n\n        if (lambda > 1) {\n            rx *= mathSqrt(lambda);\n            ry *= mathSqrt(lambda);\n        }\n\n        var f = (fa === fs ? -1 : 1)\n            * mathSqrt((((rx * rx) * (ry * ry))\n                    - ((rx * rx) * (yp * yp))\n                    - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)\n                    + (ry * ry) * (xp * xp))\n                ) || 0;\n\n        var cxp = f * rx * yp / ry;\n        var cyp = f * -ry * xp / rx;\n\n        var cx = (x1 + x2) / 2.0\n                 + mathCos(psi) * cxp\n                 - mathSin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0\n                + mathSin(psi) * cxp\n                + mathCos(psi) * cyp;\n\n        var theta = vAngle([ 1, 0 ], [ (xp - cxp) / rx, (yp - cyp) / ry ]);\n        var u = [ (xp - cxp) / rx, (yp - cyp) / ry ];\n        var v = [ (-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry ];\n        var dTheta = vAngle(u, v);\n\n        if (vRatio(u, v) <= -1) {\n            dTheta = PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * PI;\n        }\n\n        path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n    }\n\n    function createPathProxyFromString(data) {\n        if (!data) {\n            return [];\n        }\n\n        // command string\n        var cs = data.replace(/-/g, ' -')\n            .replace(/  /g, ' ')\n            .replace(/ /g, ',')\n            .replace(/,,/g, ',');\n\n        var n;\n        // create pipes so that we can split the data\n        for (n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n\n        // create array\n        var arr = cs.split('|');\n        // init context point\n        var cpx = 0;\n        var cpy = 0;\n\n        var path = new PathProxy();\n        var CMD = PathProxy.CMD;\n\n        var prevCmd;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            var off = 0;\n            var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n            var cmd;\n\n            if (p.length > 0 && p[0] === '') {\n                p.shift();\n            }\n\n            for (var i = 0; i < p.length; i++) {\n                p[i] = parseFloat(p[i]);\n            }\n            while (off < p.length && !isNaN(p[off])) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var ctlPtx;\n                var ctlPty;\n\n                var rx;\n                var ry;\n                var psi;\n                var fa;\n                var fs;\n\n                var x1 = cpx;\n                var y1 = cpy;\n\n                // convert l, H, h, V, and v to L\n                switch (c) {\n                    case 'l':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'm':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'C':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]\n                        );\n                        cpx = p[off - 2];\n                        cpy = p[off - 1];\n                        break;\n                    case 'c':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy\n                        );\n                        cpx += p[off - 2];\n                        cpy += p[off - 1];\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = cpx + p[off++];\n                        y1 = cpy + p[off++];\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 'Q':\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'q':\n                        x1 = p[off++] + cpx;\n                        y1 = p[off++] + cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                    case 'a':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                }\n            }\n\n            if (c === 'z' || c === 'Z') {\n                cmd = CMD.Z;\n                path.addData(cmd);\n            }\n\n            prevCmd = cmd;\n        }\n\n        path.toStatic();\n\n        return path;\n    }\n\n    // TODO Optimize double memory cost problem\n    function createPathOptions(str, opts) {\n        var pathProxy = createPathProxyFromString(str);\n        opts = opts || {};\n        opts.buildPath = function (path) {\n            if (path.setData) {\n                path.setData(pathProxy.data);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            }\n            else {\n                var ctx = path;\n                pathProxy.rebuildPath(ctx);\n            }\n        };\n\n        opts.applyTransform = function (m) {\n            transformPath(pathProxy, m);\n\n            this.dirty(true);\n        };\n\n        return opts;\n    }\n\n    module.exports = {\n        /**\n         * Create a Path object from path string data\n         * http://www.w3.org/TR/SVG/paths.html#PathData\n         * @param  {Object} opts Other options\n         */\n        createFromString: function (str, opts) {\n            return new Path(createPathOptions(str, opts));\n        },\n\n        /**\n         * Create a Path class from path string data\n         * @param  {string} str\n         * @param  {Object} opts Other options\n         */\n        extendFromString: function (str, opts) {\n            return Path.extend(createPathOptions(str, opts));\n        },\n\n        /**\n         * Merge multiple paths\n         */\n        // TODO Apply transform\n        // TODO stroke dash\n        // TODO Optimize double memory cost problem\n        mergePath: function (pathEls, opts) {\n            var pathList = [];\n            var len = pathEls.length;\n            for (var i = 0; i < len; i++) {\n                var pathEl = pathEls[i];\n                if (!pathEl.path) {\n                    pathEl.createPathProxy();\n                }\n                if (pathEl.__dirtyPath) {\n                    pathEl.buildPath(pathEl.path, pathEl.shape, true);\n                }\n                pathList.push(pathEl.path);\n            }\n\n            var pathBundle = new Path(opts);\n            // Need path proxy.\n            pathBundle.createPathProxy();\n            pathBundle.buildPath = function (path) {\n                path.appendPath(pathList);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            };\n\n            return pathBundle;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/path.js\n// module id = 800\n// module chunks = 0 1 2","\n\n    var CMD = require('../core/PathProxy').CMD;\n    var vec2 = require('../core/vector');\n    var v2ApplyTransform = vec2.applyTransform;\n\n    var points = [[], [], []];\n    var mathSqrt = Math.sqrt;\n    var mathAtan2 = Math.atan2;\n    function transformPath(path, m) {\n        var data = path.data;\n        var cmd;\n        var nPoint;\n        var i;\n        var j;\n        var k;\n        var p;\n\n        var M = CMD.M;\n        var C = CMD.C;\n        var L = CMD.L;\n        var R = CMD.R;\n        var A = CMD.A;\n        var Q = CMD.Q;\n\n        for (i = 0, j = 0; i < data.length;) {\n            cmd = data[i++];\n            j = i;\n            nPoint = 0;\n\n            switch (cmd) {\n                case M:\n                    nPoint = 1;\n                    break;\n                case L:\n                    nPoint = 1;\n                    break;\n                case C:\n                    nPoint = 3;\n                    break;\n                case Q:\n                    nPoint = 2;\n                    break;\n                case A:\n                    var x = m[4];\n                    var y = m[5];\n                    var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n                    var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n                    var angle = mathAtan2(-m[1] / sy, m[0] / sx);\n                    // cx\n                    data[i] *= sx;\n                    data[i++] += x;\n                    // cy\n                    data[i] *= sy;\n                    data[i++] += y;\n                    // Scale rx and ry\n                    // FIXME Assume psi is 0 here\n                    data[i++] *= sx;\n                    data[i++] *= sy;\n\n                    // Start angle\n                    data[i++] += angle;\n                    // end angle\n                    data[i++] += angle;\n                    // FIXME psi\n                    i += 2;\n                    j = i;\n                    break;\n                case R:\n                    // x0, y0\n                    p[0] = data[i++];\n                    p[1] = data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n                    // x1, y1\n                    p[0] += data[i++];\n                    p[1] += data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n            }\n\n            for (k = 0; k < nPoint; k++) {\n                var p = points[k];\n                p[0] = data[i++];\n                p[1] = data[i++];\n\n                v2ApplyTransform(p, p, m);\n                // Write back\n                data[j++] = p[0];\n                data[j++] = p[1];\n            }\n        }\n    }\n\n    module.exports = transformPath;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/transformPath.js\n// module id = 801\n// module chunks = 0 1 2","/*!\n * ZRender, a high performance 2d drawing library.\n *\n * Copyright (c) 2013, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n */\n// Global defines\n\n    var guid = require('./core/guid');\n    var env = require('./core/env');\n    var zrUtil = require('./core/util');\n\n    var Handler = require('./Handler');\n    var Storage = require('./Storage');\n    var Animation = require('./animation/Animation');\n    var HandlerProxy = require('./dom/HandlerProxy');\n\n    var useVML = !env.canvasSupported;\n\n    var painterCtors = {\n        canvas: require('./Painter')\n    };\n\n    var instances = {};    // ZRender实例map索引\n\n    var zrender = {};\n\n    /**\n     * @type {string}\n     */\n    zrender.version = '3.6.0';\n\n    /**\n     * Initializing a zrender instance\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @return {module:zrender/ZRender}\n     */\n    zrender.init = function (dom, opts) {\n        var zr = new ZRender(guid(), dom, opts);\n        instances[zr.id] = zr;\n        return zr;\n    };\n\n    /**\n     * Dispose zrender instance\n     * @param {module:zrender/ZRender} zr\n     */\n    zrender.dispose = function (zr) {\n        if (zr) {\n            zr.dispose();\n        }\n        else {\n            for (var key in instances) {\n                if (instances.hasOwnProperty(key)) {\n                    instances[key].dispose();\n                }\n            }\n            instances = {};\n        }\n\n        return zrender;\n    };\n\n    /**\n     * Get zrender instance by id\n     * @param {string} id zrender instance id\n     * @return {module:zrender/ZRender}\n     */\n    zrender.getInstance = function (id) {\n        return instances[id];\n    };\n\n    zrender.registerPainter = function (name, Ctor) {\n        painterCtors[name] = Ctor;\n    };\n\n    function delInstance(id) {\n        delete instances[id];\n    }\n\n    /**\n     * @module zrender/ZRender\n     */\n    /**\n     * @constructor\n     * @alias module:zrender/ZRender\n     * @param {string} id\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     */\n    var ZRender = function (id, dom, opts) {\n\n        opts = opts || {};\n\n        /**\n         * @type {HTMLDomElement}\n         */\n        this.dom = dom;\n\n        /**\n         * @type {string}\n         */\n        this.id = id;\n\n        var self = this;\n        var storage = new Storage();\n\n        var rendererType = opts.renderer;\n        // TODO WebGL\n        if (useVML) {\n            if (!painterCtors.vml) {\n                throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n            }\n            rendererType = 'vml';\n        }\n        else if (!rendererType || !painterCtors[rendererType]) {\n            rendererType = 'canvas';\n        }\n        var painter = new painterCtors[rendererType](dom, storage, opts);\n\n        this.storage = storage;\n        this.painter = painter;\n\n        var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n        this.handler = new Handler(storage, painter, handerProxy, painter.root);\n\n        /**\n         * @type {module:zrender/animation/Animation}\n         */\n        this.animation = new Animation({\n            stage: {\n                update: zrUtil.bind(this.flush, this)\n            }\n        });\n        this.animation.start();\n\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._needsRefresh;\n\n        // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n        // FIXME 有点ugly\n        var oldDelFromStorage = storage.delFromStorage;\n        var oldAddToStorage = storage.addToStorage;\n\n        storage.delFromStorage = function (el) {\n            oldDelFromStorage.call(storage, el);\n\n            el && el.removeSelfFromZr(self);\n        };\n\n        storage.addToStorage = function (el) {\n            oldAddToStorage.call(storage, el);\n\n            el.addSelfToZr(self);\n        };\n    };\n\n    ZRender.prototype = {\n\n        constructor: ZRender,\n        /**\n         * 获取实例唯一标识\n         * @return {string}\n         */\n        getId: function () {\n            return this.id;\n        },\n\n        /**\n         * 添加元素\n         * @param  {module:zrender/Element} el\n         */\n        add: function (el) {\n            this.storage.addRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * 删除元素\n         * @param  {module:zrender/Element} el\n         */\n        remove: function (el) {\n            this.storage.delRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Change configuration of layer\n         * @param {string} zLevel\n         * @param {Object} config\n         * @param {string} [config.clearColor=0] Clear color\n         * @param {string} [config.motionBlur=false] If enable motion blur\n         * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n        */\n        configLayer: function (zLevel, config) {\n            this.painter.configLayer(zLevel, config);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Repaint the canvas immediately\n         */\n        refreshImmediately: function () {\n            // var start = new Date();\n            // Clear needsRefresh ahead to avoid something wrong happens in refresh\n            // Or it will cause zrender refreshes again and again.\n            this._needsRefresh = false;\n            this.painter.refresh();\n            /**\n             * Avoid trigger zr.refresh in Element#beforeUpdate hook\n             */\n            this._needsRefresh = false;\n            // var end = new Date();\n\n            // var log = document.getElementById('log');\n            // if (log) {\n            //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n            // }\n        },\n\n        /**\n         * Mark and repaint the canvas in the next frame of browser\n         */\n        refresh: function() {\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Perform all refresh\n         */\n        flush: function () {\n            if (this._needsRefresh) {\n                this.refreshImmediately();\n            }\n            if (this._needsRefreshHover) {\n                this.refreshHoverImmediately();\n            }\n        },\n\n        /**\n         * Add element to hover layer\n         * @param  {module:zrender/Element} el\n         * @param {Object} style\n         */\n        addHover: function (el, style) {\n            if (this.painter.addHover) {\n                this.painter.addHover(el, style);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Add element from hover layer\n         * @param  {module:zrender/Element} el\n         */\n        removeHover: function (el) {\n            if (this.painter.removeHover) {\n                this.painter.removeHover(el);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Clear all hover elements in hover layer\n         * @param  {module:zrender/Element} el\n         */\n        clearHover: function () {\n            if (this.painter.clearHover) {\n                this.painter.clearHover();\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Refresh hover in next frame\n         */\n        refreshHover: function () {\n            this._needsRefreshHover = true;\n        },\n\n        /**\n         * Refresh hover immediately\n         */\n        refreshHoverImmediately: function () {\n            this._needsRefreshHover = false;\n            this.painter.refreshHover && this.painter.refreshHover();\n        },\n\n        /**\n         * Resize the canvas.\n         * Should be invoked when container size is changed\n         * @param {Object} [opts]\n         * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n         * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n         */\n        resize: function(opts) {\n            opts = opts || {};\n            this.painter.resize(opts.width, opts.height);\n            this.handler.resize();\n        },\n\n        /**\n         * Stop and clear all animation immediately\n         */\n        clearAnimation: function () {\n            this.animation.clear();\n        },\n\n        /**\n         * Get container width\n         */\n        getWidth: function() {\n            return this.painter.getWidth();\n        },\n\n        /**\n         * Get container height\n         */\n        getHeight: function() {\n            return this.painter.getHeight();\n        },\n\n        /**\n         * Export the canvas as Base64 URL\n         * @param {string} type\n         * @param {string} [backgroundColor='#fff']\n         * @return {string} Base64 URL\n         */\n        // toDataURL: function(type, backgroundColor) {\n        //     return this.painter.getRenderedCanvas({\n        //         backgroundColor: backgroundColor\n        //     }).toDataURL(type);\n        // },\n\n        /**\n         * Converting a path to image.\n         * It has much better performance of drawing image rather than drawing a vector path.\n         * @param {module:zrender/graphic/Path} e\n         * @param {number} width\n         * @param {number} height\n         */\n        pathToImage: function(e, dpr) {\n            return this.painter.pathToImage(e, dpr);\n        },\n\n        /**\n         * Set default cursor\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            this.handler.setCursorStyle(cursorStyle);\n        },\n\n        /**\n         * Find hovered element\n         * @param {number} x\n         * @param {number} y\n         * @return {Object} {target, topTarget}\n         */\n        findHover: function (x, y) {\n            return this.handler.findHover(x, y);\n        },\n\n        /**\n         * Bind event\n         *\n         * @param {string} eventName Event name\n         * @param {Function} eventHandler Handler function\n         * @param {Object} [context] Context object\n         */\n        on: function(eventName, eventHandler, context) {\n            this.handler.on(eventName, eventHandler, context);\n        },\n\n        /**\n         * Unbind event\n         * @param {string} eventName Event name\n         * @param {Function} [eventHandler] Handler function\n         */\n        off: function(eventName, eventHandler) {\n            this.handler.off(eventName, eventHandler);\n        },\n\n        /**\n         * Trigger event manually\n         *\n         * @param {string} eventName Event name\n         * @param {event=} event Event object\n         */\n        trigger: function (eventName, event) {\n            this.handler.trigger(eventName, event);\n        },\n\n\n        /**\n         * Clear all objects and the canvas.\n         */\n        clear: function () {\n            this.storage.delRoot();\n            this.painter.clear();\n        },\n\n        /**\n         * Dispose self.\n         */\n        dispose: function () {\n            this.animation.stop();\n\n            this.clear();\n            this.storage.dispose();\n            this.painter.dispose();\n            this.handler.dispose();\n\n            this.animation =\n            this.storage =\n            this.painter =\n            this.handler = null;\n\n            delInstance(this.id);\n        }\n    };\n\n    module.exports = zrender;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/zrender.js\n// module id = 802\n// module chunks = 0 1 2","import Vue from 'vue'\n\nexport default new Vue({\n  name: 'bus'\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/common/js/bus.js","\n    var echarts = require('../echarts');\n    var zrUtil = require('zrender/lib/core/util');\n    module.exports = function (seriesType, actionInfos) {\n        zrUtil.each(actionInfos, function (actionInfo) {\n            actionInfo.update = 'updateView';\n            /**\n             * @payload\n             * @property {string} seriesName\n             * @property {string} name\n             */\n            echarts.registerAction(actionInfo, function (payload, ecModel) {\n                var selected = {};\n                ecModel.eachComponent(\n                    {mainType: 'series', subType: seriesType, query: payload},\n                    function (seriesModel) {\n                        if (seriesModel[actionInfo.method]) {\n                            seriesModel[actionInfo.method](\n                                payload.name,\n                                payload.dataIndex\n                            );\n                        }\n                        var data = seriesModel.getData();\n                        // Create selected map\n                        data.each(function (idx) {\n                            var name = data.getName(idx);\n                            selected[name] = seriesModel.isSelected(name)\n                                || false;\n                        });\n                    }\n                );\n                return {\n                    name: payload.name,\n                    selected: selected\n                };\n            });\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/action/createDataSelectAction.js\n// module id = 808\n// module chunks = 0 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    require('../coord/cartesian/Grid');\n\n    require('./bar/BarSeries');\n    require('./bar/BarView');\n\n    var barLayoutGrid = require('../layout/barGrid');\n    var echarts = require('../echarts');\n\n    echarts.registerLayout(zrUtil.curry(barLayoutGrid, 'bar'));\n\n    // Visual coding for legend\n    echarts.registerVisual(function (ecModel) {\n        ecModel.eachSeriesByType('bar', function (seriesModel) {\n            var data = seriesModel.getData();\n            data.setVisual('legendSymbol', 'roundRect');\n        });\n    });\n\n    // In case developer forget to include grid component\n    require('../component/gridSimple');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar.js\n// module id = 809\n// module chunks = 0 1","\n\n    module.exports = require('./BaseBarSeries').extend({\n\n        type: 'series.bar',\n\n        dependencies: ['grid', 'polar'],\n\n        brushSelector: 'rect'\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar/BarSeries.js\n// module id = 810\n// module chunks = 0 1","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var helper = require('./helper');\n\n    var BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'normal', 'barBorderWidth'];\n\n    // FIXME\n    // Just for compatible with ec2.\n    zrUtil.extend(require('../../model/Model').prototype, require('./barItemStyle'));\n\n    var BarView = require('../../echarts').extendChartView({\n\n        type: 'bar',\n\n        render: function (seriesModel, ecModel, api) {\n            var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n            if (coordinateSystemType === 'cartesian2d'\n                || coordinateSystemType === 'polar'\n            ) {\n                this._render(seriesModel, ecModel, api);\n            }\n            else if (__DEV__) {\n                console.warn('Only cartesian2d and polar supported for bar.');\n            }\n\n            return this.group;\n        },\n\n        dispose: zrUtil.noop,\n\n        _render: function (seriesModel, ecModel, api) {\n            var group = this.group;\n            var data = seriesModel.getData();\n            var oldData = this._data;\n\n            var coord = seriesModel.coordinateSystem;\n            var baseAxis = coord.getBaseAxis();\n            var isHorizontalOrRadial;\n\n            if (coord.type === 'cartesian2d') {\n                isHorizontalOrRadial = baseAxis.isHorizontal();\n            }\n            else if (coord.type === 'polar') {\n                isHorizontalOrRadial = baseAxis.dim === 'angle';\n            }\n\n            var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n\n            data.diff(oldData)\n                .add(function (dataIndex) {\n                    if (!data.hasValue(dataIndex)) {\n                        return;\n                    }\n\n                    var itemModel = data.getItemModel(dataIndex);\n                    var layout = getLayout[coord.type](data, dataIndex, itemModel);\n                    var el = elementCreator[coord.type](\n                        data, dataIndex, itemModel, layout, isHorizontalOrRadial, animationModel\n                    );\n                    data.setItemGraphicEl(dataIndex, el);\n                    group.add(el);\n\n                    updateStyle(\n                        el, data, dataIndex, itemModel, layout,\n                        seriesModel, isHorizontalOrRadial, coord.type === 'polar'\n                    );\n                })\n                .update(function (newIndex, oldIndex) {\n                    var el = oldData.getItemGraphicEl(oldIndex);\n\n                    if (!data.hasValue(newIndex)) {\n                        group.remove(el);\n                        return;\n                    }\n\n                    var itemModel = data.getItemModel(newIndex);\n                    var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n                    if (el) {\n                        graphic.updateProps(el, {shape: layout}, animationModel, newIndex);\n                    }\n                    else {\n                        el = elementCreator[coord.type](\n                            data, newIndex, itemModel, layout, isHorizontalOrRadial, animationModel, true\n                        );\n                    }\n\n                    data.setItemGraphicEl(newIndex, el);\n                    // Add back\n                    group.add(el);\n\n                    updateStyle(\n                        el, data, newIndex, itemModel, layout,\n                        seriesModel, isHorizontalOrRadial, coord.type === 'polar'\n                    );\n                })\n                .remove(function (dataIndex) {\n                    var el = oldData.getItemGraphicEl(dataIndex);\n                    if (coord.type === 'cartesian2d') {\n                        el && removeRect(dataIndex, animationModel, el);\n                    }\n                    else {\n                        el && removeSector(dataIndex, animationModel, el);\n                    }\n                })\n                .execute();\n\n            this._data = data;\n        },\n\n        remove: function (ecModel, api) {\n            var group = this.group;\n            var data = this._data;\n            if (ecModel.get('animation')) {\n                if (data) {\n                    data.eachItemGraphicEl(function (el) {\n                        if (el.type === 'sector') {\n                            removeSector(el.dataIndex, ecModel, el);\n                        }\n                        else {\n                            removeRect(el.dataIndex, ecModel, el);\n                        }\n                    });\n                }\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    });\n\n    var elementCreator = {\n\n        cartesian2d: function (\n            data, dataIndex, itemModel, layout, isHorizontal,\n            animationModel, isUpdate\n        ) {\n            var rect = new graphic.Rect({shape: zrUtil.extend({}, layout)});\n\n            // Animation\n            if (animationModel) {\n                var rectShape = rect.shape;\n                var animateProperty = isHorizontal ? 'height' : 'width';\n                var animateTarget = {};\n                rectShape[animateProperty] = 0;\n                animateTarget[animateProperty] = layout[animateProperty];\n                graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n                    shape: animateTarget\n                }, animationModel, dataIndex);\n            }\n\n            return rect;\n        },\n\n        polar: function (\n            data, dataIndex, itemModel, layout, isRadial,\n            animationModel, isUpdate\n        ) {\n            var sector = new graphic.Sector({shape: zrUtil.extend({}, layout)});\n\n            // Animation\n            if (animationModel) {\n                var sectorShape = sector.shape;\n                var animateProperty = isRadial ? 'r' : 'endAngle';\n                var animateTarget = {};\n                sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n                animateTarget[animateProperty] = layout[animateProperty];\n                graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n                    shape: animateTarget\n                }, animationModel, dataIndex);\n            }\n\n            return sector;\n        }\n    };\n\n    function removeRect(dataIndex, animationModel, el) {\n        // Not show text when animating\n        el.style.text = null;\n        graphic.updateProps(el, {\n            shape: {\n                width: 0\n            }\n        }, animationModel, dataIndex, function () {\n            el.parent && el.parent.remove(el);\n        });\n    }\n\n    function removeSector(dataIndex, animationModel, el) {\n        // Not show text when animating\n        el.style.text = null;\n        graphic.updateProps(el, {\n            shape: {\n                r: el.shape.r0\n            }\n        }, animationModel, dataIndex, function () {\n            el.parent && el.parent.remove(el);\n        });\n    }\n\n    var getLayout = {\n        cartesian2d: function (data, dataIndex, itemModel) {\n            var layout = data.getItemLayout(dataIndex);\n            var fixedLineWidth = getLineWidth(itemModel, layout);\n\n            // fix layout with lineWidth\n            var signX = layout.width > 0 ? 1 : -1;\n            var signY = layout.height > 0 ? 1 : -1;\n            return {\n                x: layout.x + signX * fixedLineWidth / 2,\n                y: layout.y + signY * fixedLineWidth / 2,\n                width: layout.width - signX * fixedLineWidth,\n                height: layout.height - signY * fixedLineWidth\n            };\n        },\n\n        polar: function (data, dataIndex, itemModel) {\n            var layout = data.getItemLayout(dataIndex);\n            return {\n                cx: layout.cx,\n                cy: layout.cy,\n                r0: layout.r0,\n                r: layout.r,\n                startAngle: layout.startAngle,\n                endAngle: layout.endAngle\n            };\n        }\n    };\n\n    function updateStyle(\n        el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar\n    ) {\n        var color = data.getItemVisual(dataIndex, 'color');\n        var opacity = data.getItemVisual(dataIndex, 'opacity');\n        var itemStyleModel = itemModel.getModel('itemStyle.normal');\n        var hoverStyle = itemModel.getModel('itemStyle.emphasis').getBarItemStyle();\n\n        if (!isPolar) {\n            el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n        }\n\n        el.useStyle(zrUtil.defaults(\n            {\n                fill: color,\n                opacity: opacity\n            },\n            itemStyleModel.getBarItemStyle()\n        ));\n\n        var cursorStyle = itemModel.getShallow('cursor');\n        cursorStyle && el.attr('cursor', cursorStyle);\n\n        var labelPositionOutside = isHorizontal\n            ? (layout.height > 0 ? 'bottom' : 'top')\n            : (layout.width > 0 ? 'left' : 'right');\n\n        if (!isPolar) {\n            helper.setLabel(\n                el.style, hoverStyle, itemModel, color,\n                seriesModel, dataIndex, labelPositionOutside\n            );\n        }\n\n        graphic.setHoverStyle(el, hoverStyle);\n    }\n\n    // In case width or height are too small.\n    function getLineWidth(itemModel, rawLayout) {\n        var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n        return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n    }\n\n    module.exports = BarView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar/BarView.js\n// module id = 811\n// module chunks = 0 1","'use strict';\n\n\n    var SeriesModel = require('../../model/Series');\n    var createListFromArray = require('../helper/createListFromArray');\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.__base_bar__',\n\n        getInitialData: function (option, ecModel) {\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        getMarkerPosition: function (value) {\n            var coordSys = this.coordinateSystem;\n            if (coordSys) {\n                // PENDING if clamp ?\n                var pt = coordSys.dataToPoint(value, true);\n                var data = this.getData();\n                var offset = data.getLayout('offset');\n                var size = data.getLayout('size');\n                var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n                pt[offsetIndex] += offset + size / 2;\n                return pt;\n            }\n            return [NaN, NaN];\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n            // stack: null\n\n            // Cartesian coordinate system\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // 最小高度改为0\n            barMinHeight: 0,\n            // 最小角度为0，仅对极坐标系下的柱状图有效\n            barMinAngle: 0,\n            // cursor: null,\n\n            // barMaxWidth: null,\n            // 默认自适应\n            // barWidth: null,\n            // 柱间距离，默认为柱形宽度的30%，可设固定值\n            // barGap: '30%',\n            // 类目间柱形距离，默认为类目间距的20%，可设固定值\n            // barCategoryGap: '20%',\n            // label: {\n            //     normal: {\n            //         show: false\n            //     }\n            // },\n            itemStyle: {\n                normal: {\n                    // color: '各异'\n                },\n                emphasis: {}\n            }\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar/BaseBarSeries.js\n// module id = 812\n// module chunks = 0 1","\n\n\n    var getBarItemStyle = require('../../model/mixin/makeStyleMapper')(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            // Compatitable with 2\n            ['stroke', 'barBorderColor'],\n            ['lineWidth', 'barBorderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getBarItemStyle: function (excludes) {\n            var style = getBarItemStyle.call(this, excludes);\n            if (this.getBorderLineDash) {\n                var lineDash = this.getBorderLineDash();\n                lineDash && (style.lineDash = lineDash);\n            }\n            return style;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar/barItemStyle.js\n// module id = 813\n// module chunks = 0 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n\n    var helper = {};\n\n    helper.setLabel = function (\n        normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside\n    ) {\n        var labelModel = itemModel.getModel('label.normal');\n        var hoverLabelModel = itemModel.getModel('label.emphasis');\n\n        if (labelModel.get('show')) {\n            setLabel(\n                normalStyle, labelModel, color,\n                zrUtil.retrieve2(\n                    seriesModel.getFormattedLabel(dataIndex, 'normal'),\n                    seriesModel.getRawValue(dataIndex)\n                ),\n                labelPositionOutside\n            );\n        }\n        else {\n            normalStyle.text = null;\n        }\n\n        if (hoverLabelModel.get('show')) {\n            setLabel(\n                hoverStyle, hoverLabelModel, false,\n                seriesModel.getFormattedLabel(dataIndex, 'emphasis'),\n                labelPositionOutside\n            );\n        }\n        else {\n            hoverStyle.text = null;\n        }\n    };\n\n    function setLabel(style, model, defaultColor, labelText, labelPositionOutside) {\n        graphic.setText(style, model, defaultColor);\n        style.text = labelText;\n        if (style.textPosition === 'outside') {\n            style.textPosition = labelPositionOutside;\n        }\n    }\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar/helper.js\n// module id = 814\n// module chunks = 0 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n\n    require('./funnel/FunnelSeries');\n    require('./funnel/FunnelView');\n\n    echarts.registerVisual(zrUtil.curry(require('../visual/dataColor'), 'funnel'));\n    echarts.registerLayout(require('./funnel/funnelLayout'));\n\n    echarts.registerProcessor(zrUtil.curry(require('../processor/dataFilter'), 'funnel'));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/funnel.js\n// module id = 815\n// module chunks = 0 1","'use strict';\n\n\n    var List = require('../../data/List');\n    var modelUtil = require('../../util/model');\n    var completeDimensions = require('../../data/helper/completeDimensions');\n\n    var FunnelSeries = require('../../echarts').extendSeriesModel({\n\n        type: 'series.funnel',\n\n        init: function (option) {\n            FunnelSeries.superApply(this, 'init', arguments);\n\n            // Enable legend selection for each data item\n            // Use a function instead of direct access because data reference may changed\n            this.legendDataProvider = function () {\n                return this.getRawData();\n            };\n            // Extend labelLine emphasis\n            this._defaultLabelLine(option);\n        },\n\n        getInitialData: function (option, ecModel) {\n            var dimensions = completeDimensions(['value'], option.data);\n            var list = new List(dimensions, this);\n            list.initData(option.data);\n            return list;\n        },\n\n        _defaultLabelLine: function (option) {\n            // Extend labelLine emphasis\n            modelUtil.defaultEmphasis(option.labelLine, ['show']);\n\n            var labelLineNormalOpt = option.labelLine.normal;\n            var labelLineEmphasisOpt = option.labelLine.emphasis;\n            // Not show label line if `label.normal.show = false`\n            labelLineNormalOpt.show = labelLineNormalOpt.show\n                && option.label.normal.show;\n            labelLineEmphasisOpt.show = labelLineEmphasisOpt.show\n                && option.label.emphasis.show;\n        },\n\n        // Overwrite\n        getDataParams: function (dataIndex) {\n            var data = this.getData();\n            var params = FunnelSeries.superCall(this, 'getDataParams', dataIndex);\n            var sum = data.getSum('value');\n            // Percent is 0 if sum is 0\n            params.percent = !sum ? 0 : +(data.get('value', dataIndex) / sum * 100).toFixed(2);\n\n            params.$vars.push('percent');\n            return params;\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            legendHoverLink: true,\n            left: 80,\n            top: 60,\n            right: 80,\n            bottom: 60,\n            // width: {totalWidth} - left - right,\n            // height: {totalHeight} - top - bottom,\n\n            // 默认取数据最小最大值\n            // min: 0,\n            // max: 100,\n            minSize: '0%',\n            maxSize: '100%',\n            sort: 'descending', // 'ascending', 'descending'\n            gap: 0,\n            funnelAlign: 'center',\n            label: {\n                normal: {\n                    show: true,\n                    position: 'outer'\n                    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n                },\n                emphasis: {\n                    show: true\n                }\n            },\n            labelLine: {\n                normal: {\n                    show: true,\n                    length: 20,\n                    lineStyle: {\n                        // color: 各异,\n                        width: 1,\n                        type: 'solid'\n                    }\n                },\n                emphasis: {}\n            },\n            itemStyle: {\n                normal: {\n                    // color: 各异,\n                    borderColor: '#fff',\n                    borderWidth: 1\n                },\n                emphasis: {\n                    // color: 各异,\n                }\n            }\n        }\n    });\n\n    module.exports = FunnelSeries;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/funnel/FunnelSeries.js\n// module id = 816\n// module chunks = 0 1","\n\n    var graphic = require('../../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n\n    /**\n     * Piece of pie including Sector, Label, LabelLine\n     * @constructor\n     * @extends {module:zrender/graphic/Group}\n     */\n    function FunnelPiece(data, idx) {\n\n        graphic.Group.call(this);\n\n        var polygon = new graphic.Polygon();\n        var labelLine = new graphic.Polyline();\n        var text = new graphic.Text();\n        this.add(polygon);\n        this.add(labelLine);\n        this.add(text);\n\n        this.updateData(data, idx, true);\n\n        // Hover to change label and labelLine\n        function onEmphasis() {\n            labelLine.ignore = labelLine.hoverIgnore;\n            text.ignore = text.hoverIgnore;\n        }\n        function onNormal() {\n            labelLine.ignore = labelLine.normalIgnore;\n            text.ignore = text.normalIgnore;\n        }\n        this.on('emphasis', onEmphasis)\n            .on('normal', onNormal)\n            .on('mouseover', onEmphasis)\n            .on('mouseout', onNormal);\n    }\n\n    var funnelPieceProto = FunnelPiece.prototype;\n\n    var opacityAccessPath = ['itemStyle', 'normal', 'opacity'];\n    funnelPieceProto.updateData = function (data, idx, firstCreate) {\n\n        var polygon = this.childAt(0);\n\n        var seriesModel = data.hostModel;\n        var itemModel = data.getItemModel(idx);\n        var layout = data.getItemLayout(idx);\n        var opacity = data.getItemModel(idx).get(opacityAccessPath);\n        opacity = opacity == null ? 1 : opacity;\n\n        // Reset style\n        polygon.useStyle({});\n\n        if (firstCreate) {\n            polygon.setShape({\n                points: layout.points\n            });\n            polygon.setStyle({ opacity : 0 });\n            graphic.initProps(polygon, {\n                style: {\n                    opacity: opacity\n                }\n            }, seriesModel, idx);\n        }\n        else {\n            graphic.updateProps(polygon, {\n                style: {\n                    opacity: opacity\n                },\n                shape: {\n                    points: layout.points\n                }\n            }, seriesModel, idx);\n        }\n\n        // Update common style\n        var itemStyleModel = itemModel.getModel('itemStyle');\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        polygon.setStyle(\n            zrUtil.defaults(\n                {\n                    lineJoin: 'round',\n                    fill: visualColor\n                },\n                itemStyleModel.getModel('normal').getItemStyle(['opacity'])\n            )\n        );\n        polygon.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n\n        this._updateLabel(data, idx);\n\n        graphic.setHoverStyle(this);\n    };\n\n    funnelPieceProto._updateLabel = function (data, idx) {\n\n        var labelLine = this.childAt(1);\n        var labelText = this.childAt(2);\n\n        var seriesModel = data.hostModel;\n        var itemModel = data.getItemModel(idx);\n        var layout = data.getItemLayout(idx);\n        var labelLayout = layout.label;\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        graphic.updateProps(labelLine, {\n            shape: {\n                points: labelLayout.linePoints || labelLayout.linePoints\n            }\n        }, seriesModel, idx);\n\n        graphic.updateProps(labelText, {\n            style: {\n                x: labelLayout.x,\n                y: labelLayout.y\n            }\n        }, seriesModel, idx);\n        labelText.attr({\n            rotation: labelLayout.rotation,\n            origin: [labelLayout.x, labelLayout.y],\n            z2: 10\n        });\n\n        var labelModel = itemModel.getModel('label.normal');\n        var labelHoverModel = itemModel.getModel('label.emphasis');\n        var labelLineModel = itemModel.getModel('labelLine.normal');\n        var labelLineHoverModel = itemModel.getModel('labelLine.emphasis');\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        graphic.setTextStyle(labelText.style, labelModel, {\n            textAlign: labelLayout.textAlign,\n            textVerticalAlign: labelLayout.verticalAlign,\n            text: zrUtil.retrieve(data.hostModel.getFormattedLabel(idx, 'normal'), data.getName(idx))\n        }, {\n            defaultTextColor: visualColor,\n            autoColor: visualColor,\n            checkInside: function (model, opt) {\n                return labelLayout.inside;\n            }\n        });\n\n        labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n        labelText.hoverIgnore = !labelHoverModel.get('show');\n\n        labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n        labelLine.hoverIgnore = !labelLineHoverModel.get('show');\n\n        // Default use item visual color\n        labelLine.setStyle({\n            stroke: visualColor\n        });\n        labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n\n        labelText.hoverStyle = graphic.setTextStyle({}, labelHoverModel, {\n            text: data.hostModel.getFormattedLabel(idx, 'emphasis')\n        }, {forMerge: true});\n\n        labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n    };\n\n    zrUtil.inherits(FunnelPiece, graphic.Group);\n\n\n    var Funnel = require('../../view/Chart').extend({\n\n        type: 'funnel',\n\n        render: function (seriesModel, ecModel, api) {\n            var data = seriesModel.getData();\n            var oldData = this._data;\n\n            var group = this.group;\n\n            data.diff(oldData)\n                .add(function (idx) {\n                    var funnelPiece = new FunnelPiece(data, idx);\n\n                    data.setItemGraphicEl(idx, funnelPiece);\n\n                    group.add(funnelPiece);\n                })\n                .update(function (newIdx, oldIdx) {\n                    var piePiece = oldData.getItemGraphicEl(oldIdx);\n\n                    piePiece.updateData(data, newIdx);\n\n                    group.add(piePiece);\n                    data.setItemGraphicEl(newIdx, piePiece);\n                })\n                .remove(function (idx) {\n                    var piePiece = oldData.getItemGraphicEl(idx);\n                    group.remove(piePiece);\n                })\n                .execute();\n\n            this._data = data;\n        },\n\n        remove: function () {\n            this.group.removeAll();\n            this._data = null;\n        },\n\n        dispose: function () {}\n    });\n\n    module.exports = Funnel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/funnel/FunnelView.js\n// module id = 817\n// module chunks = 0 1","\n\n    var layout = require('../../util/layout');\n    var number = require('../../util/number');\n\n    var parsePercent = number.parsePercent;\n\n    function getViewRect(seriesModel, api) {\n        return layout.getLayoutRect(\n            seriesModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            }\n        );\n    }\n\n    function getSortedIndices(data, sort) {\n        var valueArr = data.mapArray('value', function (val) {\n            return val;\n        });\n        var indices = [];\n        var isAscending = sort === 'ascending';\n        for (var i = 0, len = data.count(); i < len; i++) {\n            indices[i] = i;\n        }\n\n        // Add custom sortable function & none sortable opetion by \"options.sort\"\n        if (typeof sort === 'function') {\n            indices.sort(sort);\n        } else if (sort !== 'none') {\n            indices.sort(function (a, b) {\n                return isAscending ? valueArr[a] - valueArr[b] : valueArr[b] - valueArr[a];\n            });\n        }\n        return indices;\n    }\n\n    function labelLayout(data) {\n        data.each(function (idx) {\n            var itemModel = data.getItemModel(idx);\n            var labelModel = itemModel.getModel('label.normal');\n            var labelPosition = labelModel.get('position');\n\n            var labelLineModel = itemModel.getModel('labelLine.normal');\n\n            var layout = data.getItemLayout(idx);\n            var points = layout.points;\n\n            var isLabelInside = labelPosition === 'inner'\n                || labelPosition === 'inside' || labelPosition === 'center';\n\n            var textAlign;\n            var textX;\n            var textY;\n            var linePoints;\n\n            if (isLabelInside) {\n                textX = (points[0][0] + points[1][0] + points[2][0] + points[3][0]) / 4;\n                textY = (points[0][1] + points[1][1] + points[2][1] + points[3][1]) / 4;\n                textAlign = 'center';\n                linePoints = [\n                    [textX, textY], [textX, textY]\n                ];\n            }\n            else {\n                var x1;\n                var y1;\n                var x2;\n                var labelLineLen = labelLineModel.get('length');\n                if (labelPosition === 'left') {\n                    // Left side\n                    x1 = (points[3][0] + points[0][0]) / 2;\n                    y1 = (points[3][1] + points[0][1]) / 2;\n                    x2 = x1 - labelLineLen;\n                    textX = x2 - 5;\n                    textAlign = 'right';\n                }\n                else {\n                    // Right side\n                    x1 = (points[1][0] + points[2][0]) / 2;\n                    y1 = (points[1][1] + points[2][1]) / 2;\n                    x2 = x1 + labelLineLen;\n                    textX = x2 + 5;\n                    textAlign = 'left';\n                }\n                var y2 = y1;\n\n                linePoints = [[x1, y1], [x2, y2]];\n                textY = y2;\n            }\n\n            layout.label = {\n                linePoints: linePoints,\n                x: textX,\n                y: textY,\n                verticalAlign: 'middle',\n                textAlign: textAlign,\n                inside: isLabelInside\n            };\n        });\n    }\n\n    module.exports = function (ecModel, api, payload) {\n        ecModel.eachSeriesByType('funnel', function (seriesModel) {\n            var data = seriesModel.getData();\n            var sort = seriesModel.get('sort');\n            var viewRect = getViewRect(seriesModel, api);\n            var indices = getSortedIndices(data, sort);\n\n            var sizeExtent = [\n                parsePercent(seriesModel.get('minSize'), viewRect.width),\n                parsePercent(seriesModel.get('maxSize'), viewRect.width)\n            ];\n            var dataExtent = data.getDataExtent('value');\n            var min = seriesModel.get('min');\n            var max = seriesModel.get('max');\n            if (min == null) {\n                min = Math.min(dataExtent[0], 0);\n            }\n            if (max == null) {\n                max = dataExtent[1];\n            }\n\n            var funnelAlign = seriesModel.get('funnelAlign');\n            var gap = seriesModel.get('gap');\n            var itemHeight = (viewRect.height - gap * (data.count() - 1)) / data.count();\n\n            var y = viewRect.y;\n\n            var getLinePoints = function (idx, offY) {\n                // End point index is data.count() and we assign it 0\n                var val = data.get('value', idx) || 0;\n                var itemWidth = number.linearMap(val, [min, max], sizeExtent, true);\n                var x0;\n                switch (funnelAlign) {\n                    case 'left':\n                        x0 = viewRect.x;\n                        break;\n                    case 'center':\n                        x0 = viewRect.x + (viewRect.width - itemWidth) / 2;\n                        break;\n                    case 'right':\n                        x0 = viewRect.x + viewRect.width - itemWidth;\n                        break;\n                }\n                return [\n                    [x0, offY],\n                    [x0 + itemWidth, offY]\n                ];\n            };\n\n            if (sort === 'ascending') {\n                // From bottom to top\n                itemHeight = -itemHeight;\n                gap = -gap;\n                y += viewRect.height;\n                indices = indices.reverse();\n            }\n\n            for (var i = 0; i < indices.length; i++) {\n                var idx = indices[i];\n                var nextIdx = indices[i + 1];\n                var start = getLinePoints(idx, y);\n                var end = getLinePoints(nextIdx, y + itemHeight);\n\n                y += itemHeight + gap;\n\n                data.setItemLayout(idx, {\n                    points: start.concat(end.slice().reverse())\n                });\n            }\n\n            labelLayout(data);\n        });\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/funnel/funnelLayout.js\n// module id = 818\n// module chunks = 0 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n\n    require('./pie/PieSeries');\n    require('./pie/PieView');\n\n    require('../action/createDataSelectAction')('pie', [{\n        type: 'pieToggleSelect',\n        event: 'pieselectchanged',\n        method: 'toggleSelected'\n    }, {\n        type: 'pieSelect',\n        event: 'pieselected',\n        method: 'select'\n    }, {\n        type: 'pieUnSelect',\n        event: 'pieunselected',\n        method: 'unSelect'\n    }]);\n\n    echarts.registerVisual(zrUtil.curry(require('../visual/dataColor'), 'pie'));\n\n    echarts.registerLayout(zrUtil.curry(\n        require('./pie/pieLayout'), 'pie'\n    ));\n\n    echarts.registerProcessor(zrUtil.curry(require('../processor/dataFilter'), 'pie'));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/pie.js\n// module id = 819\n// module chunks = 0 1","'use strict';\n\n\n    var List = require('../../data/List');\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var numberUtil = require('../../util/number');\n    var completeDimensions = require('../../data/helper/completeDimensions');\n\n    var dataSelectableMixin = require('../../component/helper/selectableMixin');\n\n    var PieSeries = require('../../echarts').extendSeriesModel({\n\n        type: 'series.pie',\n\n        // Overwrite\n        init: function (option) {\n            PieSeries.superApply(this, 'init', arguments);\n\n            // Enable legend selection for each data item\n            // Use a function instead of direct access because data reference may changed\n            this.legendDataProvider = function () {\n                return this.getRawData();\n            };\n\n            this.updateSelectedMap(option.data);\n\n            this._defaultLabelLine(option);\n        },\n\n        // Overwrite\n        mergeOption: function (newOption) {\n            PieSeries.superCall(this, 'mergeOption', newOption);\n            this.updateSelectedMap(this.option.data);\n        },\n\n        getInitialData: function (option, ecModel) {\n            var dimensions = completeDimensions(['value'], option.data);\n            var list = new List(dimensions, this);\n            list.initData(option.data);\n            return list;\n        },\n\n        // Overwrite\n        getDataParams: function (dataIndex) {\n            var data = this.getData();\n            var params = PieSeries.superCall(this, 'getDataParams', dataIndex);\n            // FIXME toFixed?\n\n            var valueList = [];\n            data.each('value', function (value) {\n                valueList.push(value);\n            });\n\n            params.percent = numberUtil.getPercentWithPrecision(\n                valueList,\n                dataIndex,\n                data.hostModel.get('percentPrecision')\n            );\n\n            params.$vars.push('percent');\n            return params;\n        },\n\n        _defaultLabelLine: function (option) {\n            // Extend labelLine emphasis\n            modelUtil.defaultEmphasis(option.labelLine, ['show']);\n\n            var labelLineNormalOpt = option.labelLine.normal;\n            var labelLineEmphasisOpt = option.labelLine.emphasis;\n            // Not show label line if `label.normal.show = false`\n            labelLineNormalOpt.show = labelLineNormalOpt.show\n                && option.label.normal.show;\n            labelLineEmphasisOpt.show = labelLineEmphasisOpt.show\n                && option.label.emphasis.show;\n        },\n\n        defaultOption: {\n            zlevel: 0,\n            z: 2,\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // 默认全局居中\n            center: ['50%', '50%'],\n            radius: [0, '75%'],\n            // 默认顺时针\n            clockwise: true,\n            startAngle: 90,\n            // 最小角度改为0\n            minAngle: 0,\n            // 选中是扇区偏移量\n            selectedOffset: 10,\n\n            // If use strategy to avoid label overlapping\n            avoidLabelOverlap: true,\n            // 选择模式，默认关闭，可选single，multiple\n            // selectedMode: false,\n            // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n            // roseType: null,\n\n            percentPrecision: 2,\n\n            // If still show when all data zero.\n            stillShowZeroSum: true,\n\n            // cursor: null,\n\n            label: {\n                normal: {\n                    // If rotate around circle\n                    rotate: false,\n                    show: true,\n                    // 'outer', 'inside', 'center'\n                    position: 'outer'\n                    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n                    // 默认使用全局文本样式，详见TEXTSTYLE\n                    // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n                },\n                emphasis: {}\n            },\n            // Enabled when label.normal.position is 'outer'\n            labelLine: {\n                normal: {\n                    show: true,\n                    // 引导线两段中的第一段长度\n                    length: 15,\n                    // 引导线两段中的第二段长度\n                    length2: 15,\n                    smooth: false,\n                    lineStyle: {\n                        // color: 各异,\n                        width: 1,\n                        type: 'solid'\n                    }\n                }\n            },\n            itemStyle: {\n                normal: {\n                    borderWidth: 1\n                },\n                emphasis: {}\n            },\n\n            // Animation type canbe expansion, scale\n            animationType: 'expansion',\n\n            animationEasing: 'cubicOut',\n\n            data: []\n        }\n    });\n\n    zrUtil.mixin(PieSeries, dataSelectableMixin);\n\n    module.exports = PieSeries;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/pie/PieSeries.js\n// module id = 820\n// module chunks = 0 1","\n\n    var graphic = require('../../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n\n    /**\n     * @param {module:echarts/model/Series} seriesModel\n     * @param {boolean} hasAnimation\n     * @inner\n     */\n    function updateDataSelected(uid, seriesModel, hasAnimation, api) {\n        var data = seriesModel.getData();\n        var dataIndex = this.dataIndex;\n        var name = data.getName(dataIndex);\n        var selectedOffset = seriesModel.get('selectedOffset');\n\n        api.dispatchAction({\n            type: 'pieToggleSelect',\n            from: uid,\n            name: name,\n            seriesId: seriesModel.id\n        });\n\n        data.each(function (idx) {\n            toggleItemSelected(\n                data.getItemGraphicEl(idx),\n                data.getItemLayout(idx),\n                seriesModel.isSelected(data.getName(idx)),\n                selectedOffset,\n                hasAnimation\n            );\n        });\n    }\n\n    /**\n     * @param {module:zrender/graphic/Sector} el\n     * @param {Object} layout\n     * @param {boolean} isSelected\n     * @param {number} selectedOffset\n     * @param {boolean} hasAnimation\n     * @inner\n     */\n    function toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n        var midAngle = (layout.startAngle + layout.endAngle) / 2;\n\n        var dx = Math.cos(midAngle);\n        var dy = Math.sin(midAngle);\n\n        var offset = isSelected ? selectedOffset : 0;\n        var position = [dx * offset, dy * offset];\n\n        hasAnimation\n            // animateTo will stop revious animation like update transition\n            ? el.animate()\n                .when(200, {\n                    position: position\n                })\n                .start('bounceOut')\n            : el.attr('position', position);\n    }\n\n    /**\n     * Piece of pie including Sector, Label, LabelLine\n     * @constructor\n     * @extends {module:zrender/graphic/Group}\n     */\n    function PiePiece(data, idx) {\n\n        graphic.Group.call(this);\n\n        var sector = new graphic.Sector({\n            z2: 2\n        });\n        var polyline = new graphic.Polyline();\n        var text = new graphic.Text();\n        this.add(sector);\n        this.add(polyline);\n        this.add(text);\n\n        this.updateData(data, idx, true);\n\n        // Hover to change label and labelLine\n        function onEmphasis() {\n            polyline.ignore = polyline.hoverIgnore;\n            text.ignore = text.hoverIgnore;\n        }\n        function onNormal() {\n            polyline.ignore = polyline.normalIgnore;\n            text.ignore = text.normalIgnore;\n        }\n        this.on('emphasis', onEmphasis)\n            .on('normal', onNormal)\n            .on('mouseover', onEmphasis)\n            .on('mouseout', onNormal);\n    }\n\n    var piePieceProto = PiePiece.prototype;\n\n    piePieceProto.updateData = function (data, idx, firstCreate) {\n\n        var sector = this.childAt(0);\n\n        var seriesModel = data.hostModel;\n        var itemModel = data.getItemModel(idx);\n        var layout = data.getItemLayout(idx);\n        var sectorShape = zrUtil.extend({}, layout);\n        sectorShape.label = null;\n\n        if (firstCreate) {\n            sector.setShape(sectorShape);\n\n            var animationType = seriesModel.getShallow('animationType');\n            if (animationType === 'scale') {\n                sector.shape.r = layout.r0;\n                graphic.initProps(sector, {\n                    shape: {\n                        r: layout.r\n                    }\n                }, seriesModel, idx);\n            }\n            // Expansion\n            else {\n                sector.shape.endAngle = layout.startAngle;\n                graphic.updateProps(sector, {\n                    shape: {\n                        endAngle: layout.endAngle\n                    }\n                }, seriesModel, idx);\n            }\n\n        }\n        else {\n            graphic.updateProps(sector, {\n                shape: sectorShape\n            }, seriesModel, idx);\n        }\n\n        // Update common style\n        var itemStyleModel = itemModel.getModel('itemStyle');\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        sector.useStyle(\n            zrUtil.defaults(\n                {\n                    lineJoin: 'bevel',\n                    fill: visualColor\n                },\n                itemStyleModel.getModel('normal').getItemStyle()\n            )\n        );\n        sector.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n\n        var cursorStyle = itemModel.getShallow('cursor');\n        cursorStyle && sector.attr('cursor', cursorStyle);\n\n        // Toggle selected\n        toggleItemSelected(\n            this,\n            data.getItemLayout(idx),\n            itemModel.get('selected'),\n            seriesModel.get('selectedOffset'),\n            seriesModel.get('animation')\n        );\n\n        function onEmphasis() {\n            // Sector may has animation of updating data. Force to move to the last frame\n            // Or it may stopped on the wrong shape\n            sector.stopAnimation(true);\n            sector.animateTo({\n                shape: {\n                    r: layout.r + 10\n                }\n            }, 300, 'elasticOut');\n        }\n        function onNormal() {\n            sector.stopAnimation(true);\n            sector.animateTo({\n                shape: {\n                    r: layout.r\n                }\n            }, 300, 'elasticOut');\n        }\n        sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n        if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {\n            sector\n                .on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n\n        this._updateLabel(data, idx);\n\n        graphic.setHoverStyle(this);\n    };\n\n    piePieceProto._updateLabel = function (data, idx) {\n\n        var labelLine = this.childAt(1);\n        var labelText = this.childAt(2);\n\n        var seriesModel = data.hostModel;\n        var itemModel = data.getItemModel(idx);\n        var layout = data.getItemLayout(idx);\n        var labelLayout = layout.label;\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        graphic.updateProps(labelLine, {\n            shape: {\n                points: labelLayout.linePoints || [\n                    [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]\n                ]\n            }\n        }, seriesModel, idx);\n\n        graphic.updateProps(labelText, {\n            style: {\n                x: labelLayout.x,\n                y: labelLayout.y\n            }\n        }, seriesModel, idx);\n        labelText.attr({\n            rotation: labelLayout.rotation,\n            origin: [labelLayout.x, labelLayout.y],\n            z2: 10\n        });\n\n        var labelModel = itemModel.getModel('label.normal');\n        var labelHoverModel = itemModel.getModel('label.emphasis');\n        var labelLineModel = itemModel.getModel('labelLine.normal');\n        var labelLineHoverModel = itemModel.getModel('labelLine.emphasis');\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        graphic.setTextStyle(labelText.style, labelModel, {\n            textVerticalAlign: labelLayout.verticalAlign,\n            textAlign: labelLayout.textAlign,\n            opacity: data.getItemVisual(idx, 'opacity'),\n            text: zrUtil.retrieve(data.hostModel.getFormattedLabel(idx, 'normal'), data.getName(idx))\n        }, {\n            defaultTextColor: visualColor,\n            autoColor: visualColor,\n            checkInside: function (model, opt) {\n                return labelLayout.inside;\n            }\n        });\n\n        labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n        labelText.hoverIgnore = !labelHoverModel.get('show');\n\n        labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n        labelLine.hoverIgnore = !labelLineHoverModel.get('show');\n\n        // Default use item visual color\n        labelLine.setStyle({\n            stroke: visualColor,\n            opacity: data.getItemVisual(idx, 'opacity')\n        });\n        labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n\n        labelText.hoverStyle = graphic.setTextStyle({}, labelHoverModel, {\n            text: data.hostModel.getFormattedLabel(idx, 'emphasis')\n        }, {forMerge: true});\n\n        labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n\n        var smooth = labelLineModel.get('smooth');\n        if (smooth && smooth === true) {\n            smooth = 0.4;\n        }\n        labelLine.setShape({\n            smooth: smooth\n        });\n    };\n\n    zrUtil.inherits(PiePiece, graphic.Group);\n\n\n    // Pie view\n    var Pie = require('../../view/Chart').extend({\n\n        type: 'pie',\n\n        init: function () {\n            var sectorGroup = new graphic.Group();\n            this._sectorGroup = sectorGroup;\n        },\n\n        render: function (seriesModel, ecModel, api, payload) {\n            if (payload && (payload.from === this.uid)) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var oldData = this._data;\n            var group = this.group;\n\n            var hasAnimation = ecModel.get('animation');\n            var isFirstRender = !oldData;\n            var animationType = seriesModel.get('animationType');\n\n            var onSectorClick = zrUtil.curry(\n                updateDataSelected, this.uid, seriesModel, hasAnimation, api\n            );\n\n            var selectedMode = seriesModel.get('selectedMode');\n\n            data.diff(oldData)\n                .add(function (idx) {\n                    var piePiece = new PiePiece(data, idx);\n                    // Default expansion animation\n                    if (isFirstRender && animationType !== 'scale') {\n                        piePiece.eachChild(function (child) {\n                            child.stopAnimation(true);\n                        });\n                    }\n\n                    selectedMode && piePiece.on('click', onSectorClick);\n\n                    data.setItemGraphicEl(idx, piePiece);\n\n                    group.add(piePiece);\n                })\n                .update(function (newIdx, oldIdx) {\n                    var piePiece = oldData.getItemGraphicEl(oldIdx);\n\n                    piePiece.updateData(data, newIdx);\n\n                    piePiece.off('click');\n                    selectedMode && piePiece.on('click', onSectorClick);\n                    group.add(piePiece);\n                    data.setItemGraphicEl(newIdx, piePiece);\n                })\n                .remove(function (idx) {\n                    var piePiece = oldData.getItemGraphicEl(idx);\n                    group.remove(piePiece);\n                })\n                .execute();\n\n            if (\n                hasAnimation && isFirstRender && data.count() > 0\n                // Default expansion animation\n                && animationType !== 'scale'\n            ) {\n                var shape = data.getItemLayout(0);\n                var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n\n                var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n                group.setClipPath(this._createClipPath(\n                    shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel\n                ));\n            }\n\n            this._data = data;\n        },\n\n        dispose: function () {},\n\n        _createClipPath: function (\n            cx, cy, r, startAngle, clockwise, cb, seriesModel\n        ) {\n            var clipPath = new graphic.Sector({\n                shape: {\n                    cx: cx,\n                    cy: cy,\n                    r0: 0,\n                    r: r,\n                    startAngle: startAngle,\n                    endAngle: startAngle,\n                    clockwise: clockwise\n                }\n            });\n\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n                }\n            }, seriesModel, cb);\n\n            return clipPath;\n        },\n\n        /**\n         * @implement\n         */\n        containPoint: function (point, seriesModel) {\n            var data = seriesModel.getData();\n            var itemLayout = data.getItemLayout(0);\n            if (itemLayout) {\n                var dx = point[0] - itemLayout.cx;\n                var dy = point[1] - itemLayout.cy;\n                var radius = Math.sqrt(dx * dx + dy * dy);\n                return radius <= itemLayout.r && radius >= itemLayout.r0;\n            }\n        }\n\n    });\n\n    module.exports = Pie;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/pie/PieView.js\n// module id = 821\n// module chunks = 0 1","'use strict';\n// FIXME emphasis label position is not same with normal label position\n\n\n    var textContain = require('zrender/lib/contain/text');\n\n    function adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n        list.sort(function (a, b) {\n            return a.y - b.y;\n        });\n\n        // 压\n        function shiftDown(start, end, delta, dir) {\n            for (var j = start; j < end; j++) {\n                list[j].y += delta;\n                if (j > start\n                    && j + 1 < end\n                    && list[j + 1].y > list[j].y + list[j].height\n                ) {\n                    shiftUp(j, delta / 2);\n                    return;\n                }\n            }\n\n            shiftUp(end - 1, delta / 2);\n        }\n\n        // 弹\n        function shiftUp(end, delta) {\n            for (var j = end; j >= 0; j--) {\n                list[j].y -= delta;\n                if (j > 0\n                    && list[j].y > list[j - 1].y + list[j - 1].height\n                ) {\n                    break;\n                }\n            }\n        }\n\n        function changeX(list, isDownList, cx, cy, r, dir) {\n            var lastDeltaX = dir > 0\n                ? isDownList                // 右侧\n                    ? Number.MAX_VALUE      // 下\n                    : 0                     // 上\n                : isDownList                // 左侧\n                    ? Number.MAX_VALUE      // 下\n                    : 0;                    // 上\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                // Not change x for center label\n                if (list[i].position === 'center') {\n                    continue;\n                }\n                var deltaY = Math.abs(list[i].y - cy);\n                var length = list[i].len;\n                var length2 = list[i].len2;\n                var deltaX = (deltaY < r + length)\n                    ? Math.sqrt(\n                          (r + length + length2) * (r + length + length2)\n                          - deltaY * deltaY\n                      )\n                    : Math.abs(list[i].x - cx);\n                if (isDownList && deltaX >= lastDeltaX) {\n                    // 右下，左下\n                    deltaX = lastDeltaX - 10;\n                }\n                if (!isDownList && deltaX <= lastDeltaX) {\n                    // 右上，左上\n                    deltaX = lastDeltaX + 10;\n                }\n\n                list[i].x = cx + deltaX * dir;\n                lastDeltaX = deltaX;\n            }\n        }\n\n        var lastY = 0;\n        var delta;\n        var len = list.length;\n        var upList = [];\n        var downList = [];\n        for (var i = 0; i < len; i++) {\n            delta = list[i].y - lastY;\n            if (delta < 0) {\n                shiftDown(i, len, -delta, dir);\n            }\n            lastY = list[i].y + list[i].height;\n        }\n        if (viewHeight - lastY < 0) {\n            shiftUp(len - 1, lastY - viewHeight);\n        }\n        for (var i = 0; i < len; i++) {\n            if (list[i].y >= cy) {\n                downList.push(list[i]);\n            }\n            else {\n                upList.push(list[i]);\n            }\n        }\n        changeX(upList, false, cx, cy, r, dir);\n        changeX(downList, true, cx, cy, r, dir);\n    }\n\n    function avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n        var leftList = [];\n        var rightList = [];\n        for (var i = 0; i < labelLayoutList.length; i++) {\n            if (labelLayoutList[i].x < cx) {\n                leftList.push(labelLayoutList[i]);\n            }\n            else {\n                rightList.push(labelLayoutList[i]);\n            }\n        }\n\n        adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n        adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n        for (var i = 0; i < labelLayoutList.length; i++) {\n            var linePoints = labelLayoutList[i].linePoints;\n            if (linePoints) {\n                var dist = linePoints[1][0] - linePoints[2][0];\n                if (labelLayoutList[i].x < cx) {\n                    linePoints[2][0] = labelLayoutList[i].x + 3;\n                }\n                else {\n                    linePoints[2][0] = labelLayoutList[i].x - 3;\n                }\n                linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n                linePoints[1][0] = linePoints[2][0] + dist;\n            }\n        }\n    }\n\n    module.exports = function (seriesModel, r, viewWidth, viewHeight) {\n        var data = seriesModel.getData();\n        var labelLayoutList = [];\n        var cx;\n        var cy;\n        var hasLabelRotate = false;\n\n        data.each(function (idx) {\n            var layout = data.getItemLayout(idx);\n\n            var itemModel = data.getItemModel(idx);\n            var labelModel = itemModel.getModel('label.normal');\n            // Use position in normal or emphasis\n            var labelPosition = labelModel.get('position') || itemModel.get('label.emphasis.position');\n\n            var labelLineModel = itemModel.getModel('labelLine.normal');\n            var labelLineLen = labelLineModel.get('length');\n            var labelLineLen2 = labelLineModel.get('length2');\n\n            var midAngle = (layout.startAngle + layout.endAngle) / 2;\n            var dx = Math.cos(midAngle);\n            var dy = Math.sin(midAngle);\n\n            var textX;\n            var textY;\n            var linePoints;\n            var textAlign;\n\n            cx = layout.cx;\n            cy = layout.cy;\n\n            var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n            if (labelPosition === 'center') {\n                textX = layout.cx;\n                textY = layout.cy;\n                textAlign = 'center';\n            }\n            else {\n                var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n                var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n\n                textX = x1 + dx * 3;\n                textY = y1 + dy * 3;\n\n                if (!isLabelInside) {\n                    // For roseType\n                    var x2 = x1 + dx * (labelLineLen + r - layout.r);\n                    var y2 = y1 + dy * (labelLineLen + r - layout.r);\n                    var x3 = x2 + ((dx < 0 ? -1 : 1) * labelLineLen2);\n                    var y3 = y2;\n\n                    textX = x3 + (dx < 0 ? -5 : 5);\n                    textY = y3;\n                    linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n                }\n\n                textAlign = isLabelInside ? 'center' : (dx > 0 ? 'left' : 'right');\n            }\n            var font = labelModel.getFont();\n\n            var labelRotate = labelModel.get('rotate')\n                ? (dx < 0 ? -midAngle + Math.PI : -midAngle) : 0;\n            var text = seriesModel.getFormattedLabel(idx, 'normal')\n                        || data.getName(idx);\n            var textRect = textContain.getBoundingRect(\n                text, font, textAlign, 'top'\n            );\n            hasLabelRotate = !!labelRotate;\n            layout.label = {\n                x: textX,\n                y: textY,\n                position: labelPosition,\n                height: textRect.height,\n                len: labelLineLen,\n                len2: labelLineLen2,\n                linePoints: linePoints,\n                textAlign: textAlign,\n                verticalAlign: 'middle',\n                rotation: labelRotate,\n                inside: isLabelInside\n            };\n\n            // Not layout the inside label\n            if (!isLabelInside) {\n                labelLayoutList.push(layout.label);\n            }\n        });\n        if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n            avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/pie/labelLayout.js\n// module id = 822\n// module chunks = 0 1","\n\n    var numberUtil = require('../../util/number');\n    var parsePercent = numberUtil.parsePercent;\n    var labelLayout = require('./labelLayout');\n    var zrUtil = require('zrender/lib/core/util');\n\n    var PI2 = Math.PI * 2;\n    var RADIAN = Math.PI / 180;\n\n    module.exports = function (seriesType, ecModel, api, payload) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var center = seriesModel.get('center');\n            var radius = seriesModel.get('radius');\n\n            if (!zrUtil.isArray(radius)) {\n                radius = [0, radius];\n            }\n            if (!zrUtil.isArray(center)) {\n                center = [center, center];\n            }\n\n            var width = api.getWidth();\n            var height = api.getHeight();\n            var size = Math.min(width, height);\n            var cx = parsePercent(center[0], width);\n            var cy = parsePercent(center[1], height);\n            var r0 = parsePercent(radius[0], size / 2);\n            var r = parsePercent(radius[1], size / 2);\n\n            var data = seriesModel.getData();\n\n            var startAngle = -seriesModel.get('startAngle') * RADIAN;\n\n            var minAngle = seriesModel.get('minAngle') * RADIAN;\n\n            var validDataCount = 0;\n            data.each('value', function (value) {\n                !isNaN(value) && validDataCount++;\n            });\n\n            var sum = data.getSum('value');\n            // Sum may be 0\n            var unitRadian = Math.PI / (sum || validDataCount) * 2;\n\n            var clockwise = seriesModel.get('clockwise');\n\n            var roseType = seriesModel.get('roseType');\n            var stillShowZeroSum = seriesModel.get('stillShowZeroSum');\n\n            // [0...max]\n            var extent = data.getDataExtent('value');\n            extent[0] = 0;\n\n            // In the case some sector angle is smaller than minAngle\n            var restAngle = PI2;\n            var valueSumLargerThanMinAngle = 0;\n\n            var currentAngle = startAngle;\n            var dir = clockwise ? 1 : -1;\n\n            data.each('value', function (value, idx) {\n                var angle;\n                if (isNaN(value)) {\n                    data.setItemLayout(idx, {\n                        angle: NaN,\n                        startAngle: NaN,\n                        endAngle: NaN,\n                        clockwise: clockwise,\n                        cx: cx,\n                        cy: cy,\n                        r0: r0,\n                        r: roseType\n                            ? NaN\n                            : r\n                    });\n                    return;\n                }\n\n                // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n                if (roseType !== 'area') {\n                    angle = (sum === 0 && stillShowZeroSum)\n                        ? unitRadian : (value * unitRadian);\n                }\n                else {\n                    angle = PI2 / validDataCount;\n                }\n\n                if (angle < minAngle) {\n                    angle = minAngle;\n                    restAngle -= minAngle;\n                }\n                else {\n                    valueSumLargerThanMinAngle += value;\n                }\n\n                var endAngle = currentAngle + dir * angle;\n                data.setItemLayout(idx, {\n                    angle: angle,\n                    startAngle: currentAngle,\n                    endAngle: endAngle,\n                    clockwise: clockwise,\n                    cx: cx,\n                    cy: cy,\n                    r0: r0,\n                    r: roseType\n                        ? numberUtil.linearMap(value, extent, [r0, r])\n                        : r\n                });\n\n                currentAngle = endAngle;\n            }, true);\n\n            // Some sector is constrained by minAngle\n            // Rest sectors needs recalculate angle\n            if (restAngle < PI2 && validDataCount) {\n                // Average the angle if rest angle is not enough after all angles is\n                // Constrained by minAngle\n                if (restAngle <= 1e-3) {\n                    var angle = PI2 / validDataCount;\n                    data.each('value', function (value, idx) {\n                        if (!isNaN(value)) {\n                            var layout = data.getItemLayout(idx);\n                            layout.angle = angle;\n                            layout.startAngle = startAngle + dir * idx * angle;\n                            layout.endAngle = startAngle + dir * (idx + 1) * angle;\n                        }\n                    });\n                }\n                else {\n                    unitRadian = restAngle / valueSumLargerThanMinAngle;\n                    currentAngle = startAngle;\n                    data.each('value', function (value, idx) {\n                        if (!isNaN(value)) {\n                            var layout = data.getItemLayout(idx);\n                            var angle = layout.angle === minAngle\n                                ? minAngle : value * unitRadian;\n                            layout.startAngle = currentAngle;\n                            layout.endAngle = currentAngle + dir * angle;\n                            currentAngle += dir * angle;\n                        }\n                    });\n                }\n            }\n\n            labelLayout(seriesModel, r, width, height);\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/pie/pieLayout.js\n// module id = 823\n// module chunks = 0 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n\n    // Must use radar component\n    require('../component/radar');\n\n    require('./radar/RadarSeries');\n    require('./radar/RadarView');\n\n    echarts.registerVisual(zrUtil.curry(require('../visual/dataColor'), 'radar'));\n    echarts.registerVisual(zrUtil.curry(\n        require('../visual/symbol'), 'radar', 'circle', null\n    ));\n    echarts.registerLayout(require('./radar/radarLayout'));\n\n    echarts.registerProcessor(\n        zrUtil.curry(require('../processor/dataFilter'), 'radar')\n    );\n\n    echarts.registerPreprocessor(require('./radar/backwardCompat'));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/radar.js\n// module id = 824\n// module chunks = 0 1","'use strict';\n\n\n    var SeriesModel = require('../../model/Series');\n    var List = require('../../data/List');\n    var completeDimensions = require('../../data/helper/completeDimensions');\n    var zrUtil = require('zrender/lib/core/util');\n    var encodeHTML = require('../../util/format').encodeHTML;\n\n    var RadarSeries = SeriesModel.extend({\n\n        type: 'series.radar',\n\n        dependencies: ['radar'],\n\n\n        // Overwrite\n        init: function (option) {\n            RadarSeries.superApply(this, 'init', arguments);\n\n            // Enable legend selection for each data item\n            // Use a function instead of direct access because data reference may changed\n            this.legendDataProvider = function () {\n                return this.getRawData();\n            };\n        },\n\n        getInitialData: function (option, ecModel) {\n            var data = option.data || [];\n            var dimensions = completeDimensions(\n                [], data, {extraPrefix: 'indicator_', extraFromZero: true}\n            );\n            var list = new List(dimensions, this);\n            list.initData(data);\n            return list;\n        },\n\n        formatTooltip: function (dataIndex) {\n            var value = this.getRawValue(dataIndex);\n            var coordSys = this.coordinateSystem;\n            var indicatorAxes = coordSys.getIndicatorAxes();\n            var name = this.getData().getName(dataIndex);\n            return encodeHTML(name === '' ? this.name : name) + '<br/>'\n                + zrUtil.map(indicatorAxes, function (axis, idx) {\n                    return encodeHTML(axis.name + ' : ' + value[idx]);\n                }).join('<br />');\n        },\n\n        defaultOption: {\n            zlevel: 0,\n            z: 2,\n            coordinateSystem: 'radar',\n            legendHoverLink: true,\n            radarIndex: 0,\n            lineStyle: {\n                normal: {\n                    width: 2,\n                    type: 'solid'\n                }\n            },\n            label: {\n                normal: {\n                    position: 'top'\n                }\n            },\n            // areaStyle: {\n            // },\n            // itemStyle: {}\n            symbol: 'emptyCircle',\n            symbolSize: 4\n            // symbolRotate: null\n        }\n    });\n\n    module.exports = RadarSeries;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/radar/RadarSeries.js\n// module id = 825\n// module chunks = 0 1","\n\n    var graphic = require('../../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var symbolUtil = require('../../util/symbol');\n\n    function normalizeSymbolSize(symbolSize) {\n        if (!zrUtil.isArray(symbolSize)) {\n            symbolSize = [+symbolSize, +symbolSize];\n        }\n        return symbolSize;\n    }\n    module.exports = require('../../echarts').extendChartView({\n        type: 'radar',\n\n        render: function (seriesModel, ecModel, api) {\n            var polar = seriesModel.coordinateSystem;\n            var group = this.group;\n\n            var data = seriesModel.getData();\n            var oldData = this._data;\n\n            function createSymbol(data, idx) {\n                var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n                var color = data.getItemVisual(idx, 'color');\n                if (symbolType === 'none') {\n                    return;\n                }\n                var symbolSize = normalizeSymbolSize(\n                    data.getItemVisual(idx, 'symbolSize')\n                );\n                var symbolPath = symbolUtil.createSymbol(\n                    symbolType, -1, -1, 2, 2, color\n                );\n                symbolPath.attr({\n                    style: {\n                        strokeNoScale: true\n                    },\n                    z2: 100,\n                    scale: [symbolSize[0] / 2, symbolSize[1] / 2]\n                });\n                return symbolPath;\n            }\n\n            function updateSymbols(oldPoints, newPoints, symbolGroup, data, idx, isInit) {\n                // Simply rerender all\n                symbolGroup.removeAll();\n                for (var i = 0; i < newPoints.length - 1; i++) {\n                    var symbolPath = createSymbol(data, idx);\n                    if (symbolPath) {\n                        symbolPath.__dimIdx = i;\n                        if (oldPoints[i]) {\n                            symbolPath.attr('position', oldPoints[i]);\n                            graphic[isInit ? 'initProps' : 'updateProps'](\n                                symbolPath, {\n                                    position: newPoints[i]\n                                }, seriesModel, idx\n                            );\n                        }\n                        else {\n                            symbolPath.attr('position', newPoints[i]);\n                        }\n                        symbolGroup.add(symbolPath);\n                    }\n                }\n            }\n\n            function getInitialPoints(points) {\n                return zrUtil.map(points, function (pt) {\n                    return [polar.cx, polar.cy];\n                });\n            }\n            data.diff(oldData)\n                .add(function (idx) {\n                    var points = data.getItemLayout(idx);\n                    if (!points) {\n                        return;\n                    }\n                    var polygon = new graphic.Polygon();\n                    var polyline = new graphic.Polyline();\n                    var target = {\n                        shape: {\n                            points: points\n                        }\n                    };\n                    polygon.shape.points = getInitialPoints(points);\n                    polyline.shape.points = getInitialPoints(points);\n                    graphic.initProps(polygon, target, seriesModel, idx);\n                    graphic.initProps(polyline, target, seriesModel, idx);\n\n                    var itemGroup = new graphic.Group();\n                    var symbolGroup = new graphic.Group();\n                    itemGroup.add(polyline);\n                    itemGroup.add(polygon);\n                    itemGroup.add(symbolGroup);\n\n                    updateSymbols(\n                        polyline.shape.points, points, symbolGroup, data, idx, true\n                    );\n\n                    data.setItemGraphicEl(idx, itemGroup);\n                })\n                .update(function (newIdx, oldIdx) {\n                    var itemGroup = oldData.getItemGraphicEl(oldIdx);\n                    var polyline = itemGroup.childAt(0);\n                    var polygon = itemGroup.childAt(1);\n                    var symbolGroup = itemGroup.childAt(2);\n                    var target = {\n                        shape: {\n                            points: data.getItemLayout(newIdx)\n                        }\n                    };\n                    if (!target.shape.points) {\n                        return;\n                    }\n                    updateSymbols(\n                        polyline.shape.points, target.shape.points, symbolGroup, data, newIdx, false\n                    );\n\n                    graphic.updateProps(polyline, target, seriesModel);\n                    graphic.updateProps(polygon, target, seriesModel);\n\n                    data.setItemGraphicEl(newIdx, itemGroup);\n                })\n                .remove(function (idx) {\n                    group.remove(oldData.getItemGraphicEl(idx));\n                })\n                .execute();\n\n            data.eachItemGraphicEl(function (itemGroup, idx) {\n                var itemModel = data.getItemModel(idx);\n                var polyline = itemGroup.childAt(0);\n                var polygon = itemGroup.childAt(1);\n                var symbolGroup = itemGroup.childAt(2);\n                var color = data.getItemVisual(idx, 'color');\n\n                group.add(itemGroup);\n\n                polyline.useStyle(\n                    zrUtil.defaults(\n                        itemModel.getModel('lineStyle.normal').getLineStyle(),\n                        {\n                            fill: 'none',\n                            stroke: color\n                        }\n                    )\n                );\n                polyline.hoverStyle = itemModel.getModel('lineStyle.emphasis').getLineStyle();\n\n                var areaStyleModel = itemModel.getModel('areaStyle.normal');\n                var hoverAreaStyleModel = itemModel.getModel('areaStyle.emphasis');\n                var polygonIgnore = areaStyleModel.isEmpty() && areaStyleModel.parentModel.isEmpty();\n                var hoverPolygonIgnore = hoverAreaStyleModel.isEmpty() && hoverAreaStyleModel.parentModel.isEmpty();\n\n                hoverPolygonIgnore = hoverPolygonIgnore && polygonIgnore;\n                polygon.ignore = polygonIgnore;\n\n                polygon.useStyle(\n                    zrUtil.defaults(\n                        areaStyleModel.getAreaStyle(),\n                        {\n                            fill: color,\n                            opacity: 0.7\n                        }\n                    )\n                );\n                polygon.hoverStyle = hoverAreaStyleModel.getAreaStyle();\n\n                var itemStyle = itemModel.getModel('itemStyle.normal').getItemStyle(['color']);\n                var itemHoverStyle = itemModel.getModel('itemStyle.emphasis').getItemStyle();\n                var labelModel = itemModel.getModel('label.normal');\n                var labelHoverModel = itemModel.getModel('label.emphasis');\n                symbolGroup.eachChild(function (symbolPath) {\n                    symbolPath.setStyle(itemStyle);\n                    symbolPath.hoverStyle = zrUtil.clone(itemHoverStyle);\n\n                    var defaultText = data.get(data.dimensions[symbolPath.__dimIdx], idx);\n                    graphic.setText(symbolPath.style, labelModel, color);\n                    symbolPath.setStyle({\n                        text: labelModel.get('show')\n                            ? zrUtil.retrieve(\n                                seriesModel.getFormattedLabel(\n                                    idx, 'normal', null, symbolPath.__dimIdx\n                                ),\n                                defaultText\n                            )\n                            : null\n                    });\n\n                    graphic.setText(symbolPath.hoverStyle, labelHoverModel, true);\n                    symbolPath.hoverStyle.text = labelHoverModel.get('show')\n                        ? seriesModel.getFormattedLabel(\n                            idx, 'emphasis', null, symbolPath.__dimIdx\n                        )\n                        : null;\n                });\n\n                function onEmphasis() {\n                    polygon.attr('ignore', hoverPolygonIgnore);\n                }\n\n                function onNormal() {\n                    polygon.attr('ignore', polygonIgnore);\n                }\n\n                itemGroup.off('mouseover').off('mouseout').off('normal').off('emphasis');\n                itemGroup.on('emphasis', onEmphasis)\n                    .on('mouseover', onEmphasis)\n                    .on('normal', onNormal)\n                    .on('mouseout', onNormal);\n\n                graphic.setHoverStyle(itemGroup);\n            });\n\n            this._data = data;\n        },\n\n        remove: function () {\n            this.group.removeAll();\n            this._data = null;\n        },\n\n        dispose: function () {}\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/radar/RadarView.js\n// module id = 826\n// module chunks = 0 1","// Backward compat for radar chart in 2\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    module.exports = function (option) {\n        var polarOptArr = option.polar;\n        if (polarOptArr) {\n            if (!zrUtil.isArray(polarOptArr)) {\n                polarOptArr = [polarOptArr];\n            }\n            var polarNotRadar = [];\n            zrUtil.each(polarOptArr, function (polarOpt, idx) {\n                if (polarOpt.indicator) {\n                    if (polarOpt.type && !polarOpt.shape) {\n                        polarOpt.shape = polarOpt.type;\n                    }\n                    option.radar = option.radar || [];\n                    if (!zrUtil.isArray(option.radar)) {\n                        option.radar = [option.radar];\n                    }\n                    option.radar.push(polarOpt);\n                }\n                else {\n                    polarNotRadar.push(polarOpt);\n                }\n            });\n            option.polar = polarNotRadar;\n        }\n        zrUtil.each(option.series, function (seriesOpt) {\n            if (seriesOpt.type === 'radar' && seriesOpt.polarIndex) {\n                seriesOpt.radarIndex = seriesOpt.polarIndex;\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/radar/backwardCompat.js\n// module id = 827\n// module chunks = 0 1","\n\n    module.exports = function (ecModel) {\n        ecModel.eachSeriesByType('radar', function (seriesModel) {\n            var data = seriesModel.getData();\n            var points = [];\n            var coordSys = seriesModel.coordinateSystem;\n            if (!coordSys) {\n                return;\n            }\n\n            function pointsConverter(val, idx) {\n                points[idx] = points[idx] || [];\n                points[idx][i] = coordSys.dataToPoint(val, i);\n            }\n            for (var i = 0; i < coordSys.getIndicatorAxes().length; i++) {\n                var dim = data.dimensions[i];\n                data.each(dim, pointsConverter);\n            }\n\n            data.each(function (idx) {\n                // Close polygon\n                points[idx][0] && points[idx].push(points[idx][0].slice());\n                data.setItemLayout(idx, points[idx]);\n            });\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/radar/radarLayout.js\n// module id = 828\n// module chunks = 0 1","/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n *\n * @module echarts/chart/helper/DataSelectable\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    module.exports = {\n\n        updateSelectedMap: function (targetList) {\n            this._targetList = targetList.slice();\n            this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n                targetMap.set(target.name, target);\n                return targetMap;\n            }, zrUtil.createHashMap());\n        },\n\n        /**\n         * Either name or id should be passed as input here.\n         * If both of them are defined, id is used.\n         *\n         * @param {string|undefined} name name of data\n         * @param {number|undefined} id dataIndex of data\n         */\n        // PENGING If selectedMode is null ?\n        select: function (name, id) {\n            var target = id != null\n                ? this._targetList[id]\n                : this._selectTargetMap.get(name);\n            var selectedMode = this.get('selectedMode');\n            if (selectedMode === 'single') {\n                this._selectTargetMap.each(function (target) {\n                    target.selected = false;\n                });\n            }\n            target && (target.selected = true);\n        },\n\n        /**\n         * Either name or id should be passed as input here.\n         * If both of them are defined, id is used.\n         *\n         * @param {string|undefined} name name of data\n         * @param {number|undefined} id dataIndex of data\n         */\n        unSelect: function (name, id) {\n            var target = id != null\n                ? this._targetList[id]\n                : this._selectTargetMap.get(name);\n            // var selectedMode = this.get('selectedMode');\n            // selectedMode !== 'single' && target && (target.selected = false);\n            target && (target.selected = false);\n        },\n\n        /**\n         * Either name or id should be passed as input here.\n         * If both of them are defined, id is used.\n         *\n         * @param {string|undefined} name name of data\n         * @param {number|undefined} id dataIndex of data\n         */\n        toggleSelected: function (name, id) {\n            var target = id != null\n                ? this._targetList[id]\n                : this._selectTargetMap.get(name);\n            if (target != null) {\n                this[target.selected ? 'unSelect' : 'select'](name, id);\n                return target.selected;\n            }\n        },\n\n        /**\n         * Either name or id should be passed as input here.\n         * If both of them are defined, id is used.\n         *\n         * @param {string|undefined} name name of data\n         * @param {number|undefined} id dataIndex of data\n         */\n        isSelected: function (name, id) {\n            var target = id != null\n                ? this._targetList[id]\n                : this._selectTargetMap.get(name);\n            return target && target.selected;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/helper/selectableMixin.js\n// module id = 829\n// module chunks = 0 1","\n\n    require('../coord/radar/Radar');\n    require('../coord/radar/RadarModel');\n\n    require('./radar/RadarView');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/radar.js\n// module id = 830\n// module chunks = 0 1","\n\n    var AxisBuilder = require('../axis/AxisBuilder');\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n\n    var axisBuilderAttrs = [\n        'axisLine', 'axisLabel', 'axisTick', 'axisName'\n    ];\n\n    module.exports = require('../../echarts').extendComponentView({\n\n        type: 'radar',\n\n        render: function (radarModel, ecModel, api) {\n            var group = this.group;\n            group.removeAll();\n\n            this._buildAxes(radarModel);\n            this._buildSplitLineAndArea(radarModel);\n        },\n\n        _buildAxes: function (radarModel) {\n            var radar = radarModel.coordinateSystem;\n            var indicatorAxes = radar.getIndicatorAxes();\n            var axisBuilders = zrUtil.map(indicatorAxes, function (indicatorAxis) {\n                var axisBuilder = new AxisBuilder(indicatorAxis.model, {\n                    position: [radar.cx, radar.cy],\n                    rotation: indicatorAxis.angle,\n                    labelDirection: -1,\n                    tickDirection: -1,\n                    nameDirection: 1\n                });\n                return axisBuilder;\n            });\n\n            zrUtil.each(axisBuilders, function (axisBuilder) {\n                zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n                this.group.add(axisBuilder.getGroup());\n            }, this);\n        },\n\n        _buildSplitLineAndArea: function (radarModel) {\n            var radar = radarModel.coordinateSystem;\n            var indicatorAxes = radar.getIndicatorAxes();\n            if (!indicatorAxes.length) {\n                return;\n            }\n            var shape = radarModel.get('shape');\n            var splitLineModel = radarModel.getModel('splitLine');\n            var splitAreaModel = radarModel.getModel('splitArea');\n            var lineStyleModel = splitLineModel.getModel('lineStyle');\n            var areaStyleModel = splitAreaModel.getModel('areaStyle');\n\n            var showSplitLine = splitLineModel.get('show');\n            var showSplitArea = splitAreaModel.get('show');\n            var splitLineColors = lineStyleModel.get('color');\n            var splitAreaColors = areaStyleModel.get('color');\n\n            splitLineColors = zrUtil.isArray(splitLineColors) ? splitLineColors : [splitLineColors];\n            splitAreaColors = zrUtil.isArray(splitAreaColors) ? splitAreaColors : [splitAreaColors];\n\n            var splitLines = [];\n            var splitAreas = [];\n\n            function getColorIndex(areaOrLine, areaOrLineColorList, idx) {\n                var colorIndex = idx % areaOrLineColorList.length;\n                areaOrLine[colorIndex] = areaOrLine[colorIndex] || [];\n                return colorIndex;\n            }\n\n            if (shape === 'circle') {\n                var ticksRadius = indicatorAxes[0].getTicksCoords();\n                var cx = radar.cx;\n                var cy = radar.cy;\n                for (var i = 0; i < ticksRadius.length; i++) {\n                    if (showSplitLine) {\n                        var colorIndex = getColorIndex(splitLines, splitLineColors, i);\n                        splitLines[colorIndex].push(new graphic.Circle({\n                            shape: {\n                                cx: cx,\n                                cy: cy,\n                                r: ticksRadius[i]\n                            }\n                        }));\n                    }\n                    if (showSplitArea && i < ticksRadius.length - 1) {\n                        var colorIndex = getColorIndex(splitAreas, splitAreaColors, i);\n                        splitAreas[colorIndex].push(new graphic.Ring({\n                            shape: {\n                                cx: cx,\n                                cy: cy,\n                                r0: ticksRadius[i],\n                                r: ticksRadius[i + 1]\n                            }\n                        }));\n                    }\n                }\n            }\n            // Polyyon\n            else {\n                var realSplitNumber;\n                var axesTicksPoints = zrUtil.map(indicatorAxes, function (indicatorAxis, idx) {\n                    var ticksCoords = indicatorAxis.getTicksCoords();\n                    realSplitNumber = realSplitNumber == null\n                        ? ticksCoords.length - 1\n                        : Math.min(ticksCoords.length - 1, realSplitNumber);\n                    return zrUtil.map(ticksCoords, function (tickCoord) {\n                        return radar.coordToPoint(tickCoord, idx);\n                    });\n                });\n\n                var prevPoints = [];\n                for (var i = 0; i <= realSplitNumber; i++) {\n                    var points = [];\n                    for (var j = 0; j < indicatorAxes.length; j++) {\n                        points.push(axesTicksPoints[j][i]);\n                    }\n                    // Close\n                    if (points[0]) {\n                        points.push(points[0].slice());\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.error('Can\\'t draw value axis ' + i);\n                        }\n                    }\n\n                    if (showSplitLine) {\n                        var colorIndex = getColorIndex(splitLines, splitLineColors, i);\n                        splitLines[colorIndex].push(new graphic.Polyline({\n                            shape: {\n                                points: points\n                            }\n                        }));\n                    }\n                    if (showSplitArea && prevPoints) {\n                        var colorIndex = getColorIndex(splitAreas, splitAreaColors, i - 1);\n                        splitAreas[colorIndex].push(new graphic.Polygon({\n                            shape: {\n                                points: points.concat(prevPoints)\n                            }\n                        }));\n                    }\n                    prevPoints = points.slice().reverse();\n                }\n            }\n\n            var lineStyle = lineStyleModel.getLineStyle();\n            var areaStyle = areaStyleModel.getAreaStyle();\n            // Add splitArea before splitLine\n            zrUtil.each(splitAreas, function (splitAreas, idx) {\n                this.group.add(graphic.mergePath(\n                    splitAreas, {\n                        style: zrUtil.defaults({\n                            stroke: 'none',\n                            fill: splitAreaColors[idx % splitAreaColors.length]\n                        }, areaStyle),\n                        silent: true\n                    }\n                ));\n            }, this);\n\n            zrUtil.each(splitLines, function (splitLines, idx) {\n                this.group.add(graphic.mergePath(\n                    splitLines, {\n                        style: zrUtil.defaults({\n                            fill: 'none',\n                            stroke: splitLineColors[idx % splitLineColors.length]\n                        }, lineStyle),\n                        silent: true\n                    }\n                ));\n            }, this);\n\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/radar/RadarView.js\n// module id = 831\n// module chunks = 0 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Axis = require('../Axis');\n\n    function IndicatorAxis(dim, scale, radiusExtent) {\n        Axis.call(this, dim, scale, radiusExtent);\n\n        /**\n         * Axis type\n         *  - 'category'\n         *  - 'value'\n         *  - 'time'\n         *  - 'log'\n         * @type {string}\n         */\n        this.type = 'value';\n\n        this.angle = 0;\n\n        /**\n         * Indicator name\n         * @type {string}\n         */\n        this.name = '';\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.model;\n    }\n\n    zrUtil.inherits(IndicatorAxis, Axis);\n\n    module.exports = IndicatorAxis;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/radar/IndicatorAxis.js\n// module id = 832\n// module chunks = 0 1","// TODO clockwise\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var IndicatorAxis = require('./IndicatorAxis');\n    var IntervalScale = require('../../scale/Interval');\n    var numberUtil = require('../../util/number');\n    var axisHelper = require('../axisHelper');\n\n    function Radar(radarModel, ecModel, api) {\n\n        this._model = radarModel;\n        /**\n         * Radar dimensions\n         * @type {Array.<string>}\n         */\n        this.dimensions = [];\n\n        this._indicatorAxes = zrUtil.map(radarModel.getIndicatorModels(), function (indicatorModel, idx) {\n            var dim = 'indicator_' + idx;\n            var indicatorAxis = new IndicatorAxis(dim, new IntervalScale());\n            indicatorAxis.name = indicatorModel.get('name');\n            // Inject model and axis\n            indicatorAxis.model = indicatorModel;\n            indicatorModel.axis = indicatorAxis;\n            this.dimensions.push(dim);\n            return indicatorAxis;\n        }, this);\n\n        this.resize(radarModel, api);\n\n        /**\n         * @type {number}\n         * @readOnly\n         */\n        this.cx;\n        /**\n         * @type {number}\n         * @readOnly\n         */\n        this.cy;\n        /**\n         * @type {number}\n         * @readOnly\n         */\n        this.r;\n        /**\n         * @type {number}\n         * @readOnly\n         */\n        this.startAngle;\n    }\n\n    Radar.prototype.getIndicatorAxes = function () {\n        return this._indicatorAxes;\n    };\n\n    Radar.prototype.dataToPoint = function (value, indicatorIndex) {\n        var indicatorAxis = this._indicatorAxes[indicatorIndex];\n\n        return this.coordToPoint(indicatorAxis.dataToCoord(value), indicatorIndex);\n    };\n\n    Radar.prototype.coordToPoint = function (coord, indicatorIndex) {\n        var indicatorAxis = this._indicatorAxes[indicatorIndex];\n        var angle = indicatorAxis.angle;\n        var x = this.cx + coord * Math.cos(angle);\n        var y = this.cy - coord * Math.sin(angle);\n        return [x, y];\n    };\n\n    Radar.prototype.pointToData = function (pt) {\n        var dx = pt[0] - this.cx;\n        var dy = pt[1] - this.cy;\n        var radius = Math.sqrt(dx * dx + dy * dy);\n        dx /= radius;\n        dy /= radius;\n\n        var radian = Math.atan2(-dy, dx);\n\n        // Find the closest angle\n        // FIXME index can calculated directly\n        var minRadianDiff = Infinity;\n        var closestAxis;\n        var closestAxisIdx = -1;\n        for (var i = 0; i < this._indicatorAxes.length; i++) {\n            var indicatorAxis = this._indicatorAxes[i];\n            var diff = Math.abs(radian - indicatorAxis.angle);\n            if (diff < minRadianDiff) {\n                closestAxis = indicatorAxis;\n                closestAxisIdx = i;\n                minRadianDiff = diff;\n            }\n        }\n\n        return [closestAxisIdx, +(closestAxis && closestAxis.coodToData(radius))];\n    };\n\n    Radar.prototype.resize = function (radarModel, api) {\n        var center = radarModel.get('center');\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n        var viewSize = Math.min(viewWidth, viewHeight) / 2;\n        this.cx = numberUtil.parsePercent(center[0], viewWidth);\n        this.cy = numberUtil.parsePercent(center[1], viewHeight);\n\n        this.startAngle = radarModel.get('startAngle') * Math.PI / 180;\n\n        this.r = numberUtil.parsePercent(radarModel.get('radius'), viewSize);\n\n        zrUtil.each(this._indicatorAxes, function (indicatorAxis, idx) {\n            indicatorAxis.setExtent(0, this.r);\n            var angle = (this.startAngle + idx * Math.PI * 2 / this._indicatorAxes.length);\n            // Normalize to [-PI, PI]\n            angle = Math.atan2(Math.sin(angle), Math.cos(angle));\n            indicatorAxis.angle = angle;\n        }, this);\n    };\n\n    Radar.prototype.update = function (ecModel, api) {\n        var indicatorAxes = this._indicatorAxes;\n        var radarModel = this._model;\n        zrUtil.each(indicatorAxes, function (indicatorAxis) {\n            indicatorAxis.scale.setExtent(Infinity, -Infinity);\n        });\n        ecModel.eachSeriesByType('radar', function (radarSeries, idx) {\n            if (radarSeries.get('coordinateSystem') !== 'radar'\n                || ecModel.getComponent('radar', radarSeries.get('radarIndex')) !== radarModel\n            ) {\n                return;\n            }\n            var data = radarSeries.getData();\n            zrUtil.each(indicatorAxes, function (indicatorAxis) {\n                indicatorAxis.scale.unionExtentFromData(data, indicatorAxis.dim);\n            });\n        }, this);\n\n        var splitNumber = radarModel.get('splitNumber');\n\n        function increaseInterval(interval) {\n            var exp10 = Math.pow(10, Math.floor(Math.log(interval) / Math.LN10));\n            // Increase interval\n            var f = interval / exp10;\n            if (f === 2) {\n                f = 5;\n            }\n            else { // f is 2 or 5\n                f *= 2;\n            }\n            return f * exp10;\n        }\n        // Force all the axis fixing the maxSplitNumber.\n        zrUtil.each(indicatorAxes, function (indicatorAxis, idx) {\n            var rawExtent = axisHelper.getScaleExtent(indicatorAxis.scale, indicatorAxis.model);\n            axisHelper.niceScaleExtent(indicatorAxis.scale, indicatorAxis.model);\n\n            var axisModel = indicatorAxis.model;\n            var scale = indicatorAxis.scale;\n            var fixedMin = axisModel.getMin();\n            var fixedMax = axisModel.getMax();\n            var interval = scale.getInterval();\n\n            if (fixedMin != null && fixedMax != null) {\n                // User set min, max, divide to get new interval\n                scale.setExtent(+fixedMin, +fixedMax);\n                scale.setInterval(\n                    (fixedMax - fixedMin) / splitNumber\n                );\n            }\n            else if (fixedMin != null) {\n                var max;\n                // User set min, expand extent on the other side\n                do {\n                    max = fixedMin + interval * splitNumber;\n                    scale.setExtent(+fixedMin, max);\n                    // Interval must been set after extent\n                    // FIXME\n                    scale.setInterval(interval);\n\n                    interval = increaseInterval(interval);\n                } while (max < rawExtent[1] && isFinite(max) && isFinite(rawExtent[1]));\n            }\n            else if (fixedMax != null) {\n                var min;\n                // User set min, expand extent on the other side\n                do {\n                    min = fixedMax - interval * splitNumber;\n                    scale.setExtent(min, +fixedMax);\n                    scale.setInterval(interval);\n                    interval = increaseInterval(interval);\n                } while (min > rawExtent[0] && isFinite(min) && isFinite(rawExtent[0]));\n            }\n            else {\n                var nicedSplitNumber = scale.getTicks().length - 1;\n                if (nicedSplitNumber > splitNumber) {\n                    interval = increaseInterval(interval);\n                }\n                // PENDING\n                var center = Math.round((rawExtent[0] + rawExtent[1]) / 2 / interval) * interval;\n                var halfSplitNumber = Math.round(splitNumber / 2);\n                scale.setExtent(\n                    numberUtil.round(center - halfSplitNumber * interval),\n                    numberUtil.round(center + (splitNumber - halfSplitNumber) * interval)\n                );\n                scale.setInterval(interval);\n            }\n        });\n    };\n\n    /**\n     * Radar dimensions is based on the data\n     * @type {Array}\n     */\n    Radar.dimensions = [];\n\n    Radar.create = function (ecModel, api) {\n        var radarList = [];\n        ecModel.eachComponent('radar', function (radarModel) {\n            var radar = new Radar(radarModel, ecModel, api);\n            radarList.push(radar);\n            radarModel.coordinateSystem = radar;\n        });\n        ecModel.eachSeriesByType('radar', function (radarSeries) {\n            if (radarSeries.get('coordinateSystem') === 'radar') {\n                // Inject coordinate system\n                radarSeries.coordinateSystem = radarList[radarSeries.get('radarIndex') || 0];\n            }\n        });\n        return radarList;\n    };\n\n    require('../../CoordinateSystem').register('radar', Radar);\n    module.exports = Radar;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/radar/Radar.js\n// module id = 833\n// module chunks = 0 1","\n\n\n    var axisDefault = require('../axisDefault');\n    var valueAxisDefault = axisDefault.valueAxis;\n    var Model = require('../../model/Model');\n    var zrUtil = require('zrender/lib/core/util');\n\n    var axisModelCommonMixin = require('../axisModelCommonMixin');\n\n    function defaultsShow(opt, show) {\n        return zrUtil.defaults({\n            show: show\n        }, opt);\n    }\n\n    var RadarModel = require('../../echarts').extendComponentModel({\n\n        type: 'radar',\n\n        optionUpdated: function () {\n            var boundaryGap = this.get('boundaryGap');\n            var splitNumber = this.get('splitNumber');\n            var scale = this.get('scale');\n            var axisLine = this.get('axisLine');\n            var axisTick = this.get('axisTick');\n            var axisLabel = this.get('axisLabel');\n            var nameTextStyle = this.get('name');\n            var showName = this.get('name.show');\n            var nameFormatter = this.get('name.formatter');\n            var nameGap = this.get('nameGap');\n            var triggerEvent = this.get('triggerEvent');\n\n            var indicatorModels = zrUtil.map(this.get('indicator') || [], function (indicatorOpt) {\n                // PENDING\n                if (indicatorOpt.max != null && indicatorOpt.max > 0 && !indicatorOpt.min) {\n                    indicatorOpt.min = 0;\n                }\n                else if (indicatorOpt.min != null && indicatorOpt.min < 0 && !indicatorOpt.max) {\n                    indicatorOpt.max = 0;\n                }\n                var iNameTextStyle = nameTextStyle;\n                if(indicatorOpt.color != null) {\n                    iNameTextStyle = zrUtil.defaults({color: indicatorOpt.color}, nameTextStyle);\n                }\n                // Use same configuration\n                indicatorOpt = zrUtil.merge(zrUtil.clone(indicatorOpt), {\n                    boundaryGap: boundaryGap,\n                    splitNumber: splitNumber,\n                    scale: scale,\n                    axisLine: axisLine,\n                    axisTick: axisTick,\n                    axisLabel: axisLabel,\n                    // Competitable with 2 and use text\n                    name: indicatorOpt.text,\n                    nameLocation: 'end',\n                    nameGap: nameGap,\n                    // min: 0,\n                    nameTextStyle: iNameTextStyle,\n                    triggerEvent: triggerEvent\n                }, false);\n                if (!showName) {\n                    indicatorOpt.name = '';\n                }\n                if (typeof nameFormatter === 'string') {\n                    var indName = indicatorOpt.name;\n                    indicatorOpt.name = nameFormatter.replace('{value}', indName != null ? indName : '');\n                }\n                else if (typeof nameFormatter === 'function') {\n                    indicatorOpt.name = nameFormatter(\n                        indicatorOpt.name, indicatorOpt\n                    );\n                }\n                var model = zrUtil.extend(\n                    new Model(indicatorOpt, null, this.ecModel),\n                    axisModelCommonMixin\n                );\n\n                // For triggerEvent.\n                model.mainType = 'radar';\n                model.componentIndex = this.componentIndex;\n\n                return model;\n            }, this);\n\n            this.getIndicatorModels = function () {\n                return indicatorModels;\n            };\n        },\n\n        defaultOption: {\n\n            zlevel: 0,\n\n            z: 0,\n\n            center: ['50%', '50%'],\n\n            radius: '75%',\n\n            startAngle: 90,\n\n            name: {\n                show: true\n                // formatter: null\n                // textStyle: {}\n            },\n\n            boundaryGap: [0, 0],\n\n            splitNumber: 5,\n\n            nameGap: 15,\n\n            scale: false,\n\n            // Polygon or circle\n            shape: 'polygon',\n\n            axisLine: zrUtil.merge(\n                {\n                    lineStyle: {\n                        color: '#bbb'\n                    }\n                },\n                valueAxisDefault.axisLine\n            ),\n            axisLabel: defaultsShow(valueAxisDefault.axisLabel, false),\n            axisTick: defaultsShow(valueAxisDefault.axisTick, false),\n            splitLine: defaultsShow(valueAxisDefault.splitLine, true),\n            splitArea: defaultsShow(valueAxisDefault.splitArea, true),\n\n            // {text, min, max}\n            indicator: []\n        }\n    });\n\n    module.exports = RadarModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/radar/RadarModel.js\n// module id = 834\n// module chunks = 0 1","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('../util/number');\n    var parsePercent = numberUtil.parsePercent;\n\n    var STACK_PREFIX = '__ec_stack_';\n\n    function getSeriesStackId(seriesModel) {\n        return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\n    }\n\n    function getAxisKey(axis) {\n        return axis.dim + axis.index;\n    }\n\n    /**\n     * @param {Object} opt\n     * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.\n     * @param {number} opt.count Positive interger.\n     * @param {number} [opt.barWidth]\n     * @param {number} [opt.barMaxWidth]\n     * @param {number} [opt.barGap]\n     * @param {number} [opt.barCategoryGap]\n     * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\n     */\n    function getLayoutOnAxis(opt, api) {\n        var params = [];\n        var baseAxis = opt.axis;\n        var axisKey = 'axis0';\n\n        if (baseAxis.type !== 'category') {\n            return;\n        }\n        var bandWidth = baseAxis.getBandWidth();\n\n        for (var i = 0; i < opt.count || 0; i++) {\n            params.push(zrUtil.defaults({\n                bandWidth: bandWidth,\n                axisKey: axisKey,\n                stackId: STACK_PREFIX + i\n            }, opt));\n        }\n        var widthAndOffsets = doCalBarWidthAndOffset(params, api);\n\n        var result = [];\n        for (var i = 0; i < opt.count; i++) {\n            var item = widthAndOffsets[axisKey][STACK_PREFIX + i];\n            item.offsetCenter = item.offset + item.width / 2;\n            result.push(item);\n        }\n\n        return result;\n    }\n\n    function calBarWidthAndOffset(barSeries, api) {\n        var seriesInfoList = zrUtil.map(barSeries, function (seriesModel) {\n            var data = seriesModel.getData();\n            var cartesian = seriesModel.coordinateSystem;\n            var baseAxis = cartesian.getBaseAxis();\n            var axisExtent = baseAxis.getExtent();\n            var bandWidth = baseAxis.type === 'category'\n                ? baseAxis.getBandWidth()\n                : (Math.abs(axisExtent[1] - axisExtent[0]) / data.count());\n\n            var barWidth = parsePercent(\n                seriesModel.get('barWidth'), bandWidth\n            );\n            var barMaxWidth = parsePercent(\n                seriesModel.get('barMaxWidth'), bandWidth\n            );\n            var barGap = seriesModel.get('barGap');\n            var barCategoryGap = seriesModel.get('barCategoryGap');\n\n            return {\n                bandWidth: bandWidth,\n                barWidth: barWidth,\n                barMaxWidth: barMaxWidth,\n                barGap: barGap,\n                barCategoryGap: barCategoryGap,\n                axisKey: getAxisKey(baseAxis),\n                stackId: getSeriesStackId(seriesModel)\n            };\n        });\n\n        return doCalBarWidthAndOffset(seriesInfoList, api);\n    }\n\n    function doCalBarWidthAndOffset(seriesInfoList, api) {\n        // Columns info on each category axis. Key is cartesian name\n        var columnsMap = {};\n\n        zrUtil.each(seriesInfoList, function (seriesInfo, idx) {\n            var axisKey = seriesInfo.axisKey;\n            var bandWidth = seriesInfo.bandWidth;\n            var columnsOnAxis = columnsMap[axisKey] || {\n                bandWidth: bandWidth,\n                remainedWidth: bandWidth,\n                autoWidthCount: 0,\n                categoryGap: '20%',\n                gap: '30%',\n                stacks: {}\n            };\n            var stacks = columnsOnAxis.stacks;\n            columnsMap[axisKey] = columnsOnAxis;\n\n            var stackId = seriesInfo.stackId;\n\n            if (!stacks[stackId]) {\n                columnsOnAxis.autoWidthCount++;\n            }\n            stacks[stackId] = stacks[stackId] || {\n                width: 0,\n                maxWidth: 0\n            };\n\n            // Caution: In a single coordinate system, these barGrid attributes\n            // will be shared by series. Consider that they have default values,\n            // only the attributes set on the last series will work.\n            // Do not change this fact unless there will be a break change.\n\n            // TODO\n            var barWidth = seriesInfo.barWidth;\n            if (barWidth && !stacks[stackId].width) {\n                // See #6312, do not restrict width.\n                stacks[stackId].width = barWidth;\n                barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n                columnsOnAxis.remainedWidth -= barWidth;\n            }\n\n            var barMaxWidth = seriesInfo.barMaxWidth;\n            barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n            var barGap = seriesInfo.barGap;\n            (barGap != null) && (columnsOnAxis.gap = barGap);\n            var barCategoryGap = seriesInfo.barCategoryGap;\n            (barCategoryGap != null) && (columnsOnAxis.categoryGap = barCategoryGap);\n        });\n\n        var result = {};\n\n        zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n\n            result[coordSysName] = {};\n\n            var stacks = columnsOnAxis.stacks;\n            var bandWidth = columnsOnAxis.bandWidth;\n            var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n            var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n\n            var remainedWidth = columnsOnAxis.remainedWidth;\n            var autoWidthCount = columnsOnAxis.autoWidthCount;\n            var autoWidth = (remainedWidth - categoryGap)\n                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n            autoWidth = Math.max(autoWidth, 0);\n\n            // Find if any auto calculated bar exceeded maxBarWidth\n            zrUtil.each(stacks, function (column, stack) {\n                var maxWidth = column.maxWidth;\n                if (maxWidth && maxWidth < autoWidth) {\n                    maxWidth = Math.min(maxWidth, remainedWidth);\n                    if (column.width) {\n                        maxWidth = Math.min(maxWidth, column.width);\n                    }\n                    remainedWidth -= maxWidth;\n                    column.width = maxWidth;\n                    autoWidthCount--;\n                }\n            });\n\n            // Recalculate width again\n            autoWidth = (remainedWidth - categoryGap)\n                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n            autoWidth = Math.max(autoWidth, 0);\n\n            var widthSum = 0;\n            var lastColumn;\n            zrUtil.each(stacks, function (column, idx) {\n                if (!column.width) {\n                    column.width = autoWidth;\n                }\n                lastColumn = column;\n                widthSum += column.width * (1 + barGapPercent);\n            });\n            if (lastColumn) {\n                widthSum -= lastColumn.width * barGapPercent;\n            }\n\n            var offset = -widthSum / 2;\n            zrUtil.each(stacks, function (column, stackId) {\n                result[coordSysName][stackId] = result[coordSysName][stackId] || {\n                    offset: offset,\n                    width: column.width\n                };\n\n                offset += column.width * (1 + barGapPercent);\n            });\n        });\n\n        return result;\n    }\n\n    /**\n     * @param {string} seriesType\n     * @param {module:echarts/model/Global} ecModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function barLayoutGrid(seriesType, ecModel, api) {\n\n        var barWidthAndOffset = calBarWidthAndOffset(\n            zrUtil.filter(\n                ecModel.getSeriesByType(seriesType),\n                function (seriesModel) {\n                    return !ecModel.isSeriesFiltered(seriesModel)\n                        && seriesModel.coordinateSystem\n                        && seriesModel.coordinateSystem.type === 'cartesian2d';\n                }\n            )\n        );\n\n        var lastStackCoords = {};\n        var lastStackCoordsOrigin = {};\n\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n\n            // Check series coordinate, do layout for cartesian2d only\n            if (seriesModel.coordinateSystem.type !== 'cartesian2d') {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var cartesian = seriesModel.coordinateSystem;\n            var baseAxis = cartesian.getBaseAxis();\n\n            var stackId = getSeriesStackId(seriesModel);\n            var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n            var columnOffset = columnLayoutInfo.offset;\n            var columnWidth = columnLayoutInfo.width;\n            var valueAxis = cartesian.getOtherAxis(baseAxis);\n\n            var barMinHeight = seriesModel.get('barMinHeight') || 0;\n\n            var valueAxisStart = baseAxis.onZero\n                ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0))\n                : valueAxis.getGlobalExtent()[0];\n\n            var coordDims = [\n                seriesModel.coordDimToDataDim('x')[0],\n                seriesModel.coordDimToDataDim('y')[0]\n            ];\n            var coords = data.mapArray(coordDims, function (x, y) {\n                return cartesian.dataToPoint([x, y]);\n            }, true);\n\n            lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n            lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n            data.setLayout({\n                offset: columnOffset,\n                size: columnWidth\n            });\n\n            data.each(seriesModel.coordDimToDataDim(valueAxis.dim)[0], function (value, idx) {\n                if (isNaN(value)) {\n                    return;\n                }\n\n                if (!lastStackCoords[stackId][idx]) {\n                    lastStackCoords[stackId][idx] = {\n                        p: valueAxisStart, // Positive stack\n                        n: valueAxisStart  // Negative stack\n                    };\n                    lastStackCoordsOrigin[stackId][idx] = {\n                        p: valueAxisStart, // Positive stack\n                        n: valueAxisStart  // Negative stack\n                    };\n                }\n                var sign = value >= 0 ? 'p' : 'n';\n                var coord = coords[idx];\n                var lastCoord = lastStackCoords[stackId][idx][sign];\n                var lastCoordOrigin = lastStackCoordsOrigin[stackId][idx][sign];\n                var x;\n                var y;\n                var width;\n                var height;\n\n                if (valueAxis.isHorizontal()) {\n                    x = lastCoord;\n                    y = coord[1] + columnOffset;\n                    width = coord[0] - lastCoordOrigin;\n                    height = columnWidth;\n\n                    lastStackCoordsOrigin[stackId][idx][sign] += width;\n                    if (Math.abs(width) < barMinHeight) {\n                        width = (width < 0 ? -1 : 1) * barMinHeight;\n                    }\n                    lastStackCoords[stackId][idx][sign] += width;\n                }\n                else {\n                    x = coord[0] + columnOffset;\n                    y = lastCoord;\n                    width = columnWidth;\n                    height = coord[1] - lastCoordOrigin;\n\n                    lastStackCoordsOrigin[stackId][idx][sign] += height;\n                    if (Math.abs(height) < barMinHeight) {\n                        // Include zero to has a positive bar\n                        height = (height <= 0 ? -1 : 1) * barMinHeight;\n                    }\n                    lastStackCoords[stackId][idx][sign] += height;\n                }\n\n                data.setItemLayout(idx, {\n                    x: x,\n                    y: y,\n                    width: width,\n                    height: height\n                });\n            }, true);\n\n        }, this);\n    }\n\n    barLayoutGrid.getLayoutOnAxis = getLayoutOnAxis;\n\n    module.exports = barLayoutGrid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/layout/barGrid.js\n// module id = 835\n// module chunks = 0 1","!function(e,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i(require(\"echarts/lib/echarts\"),require(\"echarts/lib/component/tooltip\"),require(\"echarts/lib/component/legend\"),require(\"echarts/lib/chart/bar\"),require(\"echarts/lib/chart/line\"),require(\"echarts/lib/chart/pie\"),require(\"echarts/lib/chart/funnel\"),require(\"echarts/lib/chart/radar\")):\"function\"==typeof define&&define.amd?define([\"echarts/lib/echarts\",\"echarts/lib/component/tooltip\",\"echarts/lib/component/legend\",\"echarts/lib/chart/bar\",\"echarts/lib/chart/line\",\"echarts/lib/chart/pie\",\"echarts/lib/chart/funnel\",\"echarts/lib/chart/radar\"],i):e.VeChart=i(e.echarts)}(this,function(e){\"use strict\";function i(e){var i=e.innerRows,t=e.dimAxisName,n=e.dimension,a=e.axisVisible;return n.map(function(e){return{type:\"category\",name:t,nameLocation:\"middle\",nameGap:22,data:i.map(function(i){return i[e]}),axisLabel:{formatter:function(e){return String(e)}},show:a}})}function t(e){for(var i=e.meaAxisName,t=e.meaAxisType,n=e.axisVisible,a=e.digit,r=e.scale,o=e.min,s=e.max,l={type:\"value\",axisTick:{show:!1},show:n},c=[],u=0;u<2;u++)!function(e){t[e]?c[e]=Object.assign({},l,{axisLabel:{formatter:function(i){return V(i,t[e],a)}}}):c[e]=Object.assign({},l),c[e].name=i[e]||\"\",c[e].scale=r[e]||!1,c[e].min=o[e]||null,c[e].max=s[e]||null}(u);return c}function n(e){var i=e.axisSite,t=e.isHistogram,n=e.meaAxisType,a=e.digit,r=e.labelMap,o=t?i.right:i.top;return r&&(o=o.map(function(e){return void 0===r[e]?e:r[e]})),{trigger:\"axis\",formatter:function(e){var i=[];return i.push(e[0].name+\"<br>\"),e.forEach(function(e){var t=e.seriesName,r=~o.indexOf(t)?n[1]:n[0];i.push(j(e.color)),i.push(t+\": \"),i.push(V(e.value,r,a)),i.push(\"<br>\")}),i.join(\"\")}}}function a(e){var i=e.innerRows,t=e.metrics,n=e.stack,a=e.axisSite,r=e.isHistogram,o=e.labelMap,s=e.itemStyle,l=e.label,c=e.showLine,u=void 0===c?[]:c,d=[],m={},h=r?a.right:a.top,f=r?\"yAxisIndex\":\"xAxisIndex\",p=n&&E(n);return t.forEach(function(e){m[e]=[]}),i.forEach(function(e){t.forEach(function(i){m[i].push(e[i])})}),!!(d=Object.keys(m).map(function(e){var i=H({name:o&&o[e]||e,type:~u.indexOf(e)?\"line\":\"bar\",data:m[e]},f,~h.indexOf(e)?\"1\":\"0\");return n&&p[e]&&(i.stack=p[e]),l&&(i.label=l),s&&(i.itemStyle=s),i})).length&&d}function r(e){var i=e.metrics,t=e.labelMap,n=e.legendName;return n||t?{data:t?i.map(function(e){return null==t[e]?e:t[e]}):i,formatter:function(e){return n&&n[e]||e}}:{data:i}}function o(e){var i=e.dimension,t=e.rows,n=e.xAxisName,a=e.axisVisible;return i.map(function(e,i){return{type:\"category\",nameLocation:\"middle\",nameGap:22,boundaryGap:!1,name:n[i]||\"\",axisTick:{show:!0,lineStyle:{color:\"#eee\"}},data:t.map(function(i){return i[e]}),axisLabel:{formatter:function(e){return String(e)}},show:a}})}function s(e){var i=e.rows,t=e.axisSite,n=e.metrics,a=e.area,r=e.stack,o=e.nullAddZero,s=e.labelMap,l=e.label,c=e.itemStyle,u=e.lineStyle,d=e.areaStyle,m=[],h={},f=r&&E(r);return n.forEach(function(e){h[e]=[]}),i.forEach(function(e){n.forEach(function(i){var t=null;null!=e[i]?t=e[i]:o&&(t=0),h[i].push(t)})}),n.forEach(function(e){var i={name:s&&s[e]||e,type:\"line\",data:h[e]};a&&(i.areaStyle={normal:{}}),i.yAxisIndex=~t.right.indexOf(e)?1:0,r&&f[e]&&(i.stack=f[e]),l&&(i.label=l),c&&(i.itemStyle=c),u&&(i.lineStyle=u),d&&(i.areaStyle=d),m.push(i)}),!!m.length&&m}function l(e){for(var i=e.yAxisName,t=e.yAxisType,n=e.axisVisible,a=e.scale,r=e.min,o=e.max,s=e.digit,l={type:\"value\",axisTick:{show:!1},show:n},c=[],u=0;u<2;u++)!function(e){t[e]?c[e]=Object.assign({},l,{axisLabel:{formatter:function(i){return V(i,t[e],s)}}}):c[e]=Object.assign({},l),c[e].name=i[e]||\"\",c[e].scale=a[e]||!1,c[e].min=r[e]||null,c[e].max=o[e]||null}(u);return c}function c(e){var i=e.axisSite,t=e.yAxisType,n=e.digit,a=e.labelMap,r=a?i.right.map(function(e){return void 0===a[e]?e:a[e]}):i.right;return{trigger:\"axis\",formatter:function(e){var i=[];return i.push(e[0].name+\"<br>\"),e.forEach(function(e){var a=null,o=~r.indexOf(e.seriesName)?t[1]:t[0];a=V(e.data,o,n),i.push(j(e.color)),i.push(e.seriesName+\": \"+a),i.push(\"<br>\")}),i.join(\"\")}}}function u(e){var i=e.metrics,t=e.legendName,n=e.labelMap;return t||n?{data:n?i.map(function(e){return null==n[e]?e:n[e]}):i,formatter:function(e){return t&&t[e]||e}}:{data:i}}function d(e){var i=e.innerRows,t=e.dataType,n=e.percentShow,a=e.dimension,r=e.metrics,o=e.radius,s=e.offsetY,l=e.selectedMode,c=e.hoverAnimation,u=e.digit,d=e.roseType,m=e.label,h=e.level,f=e.limitShowNum,p=e.isRing,v=[],b={},g=[];h?(h.forEach(function(e,i){e.forEach(function(e){b[e]=i})}),i.forEach(function(e){var i=b[e[a]];void 0!==i&&(g[i]?g[i].push(e):g[i]=[e])})):g.push(i);var x={type:\"pie\",selectedMode:l,hoverAnimation:c,roseType:d,center:[\"50%\",s]},y=g.length;if(g.forEach(function(e,i){var s=Object.assign({data:[]},x),l=o/y;if(i){var c=l+o/(2*y)*(2*i-1),d=c+o/(2*y);s.radius=[c,d]}else s.radius=p?o:l;y>1&&0===i&&(s.label={normal:{position:\"inner\"}}),m&&(s.label=m),n&&(s.label={normal:{show:!0,position:y>1&&0===i?\"inner\":\"outside\",formatter:function(e){var i=[];return i.push(e.name+\":\"),i.push(V(e.value,t,u)),i.push(\"(\"+e.percent+\"%)\"),i.join(\" \")}}}),s.data=e.map(function(e){return{name:e[a],value:e[r]}}),v.push(s)}),f&&f<v[0].data.length){var O=v[0].data,w=0;O.slice(f,O.length).forEach(function(e){w+=e.value}),v[0].data=O.slice(0,f),v[0].data.push({name:\"其他\",value:w})}return v}function m(e){var i=e.innerRows,t=e.dimension,n=e.legendLimit,a=e.level,r=e.limitShowNum,o=[],s=[];if(a)a.forEach(function(e){e.forEach(function(e){s.push(e)})}),o=s;else if(r&&r<i.length){for(var l=0;l<r;l++)o.push(i[l][t]);o.push(\"其他\")}else o=i.map(function(e){return e[t]});return!!o.length&&{data:o,show:o.length<n}}function h(e){var i=e.dataType,t=e.innerRows,n=e.limitShowNum,a=e.digit,r=e.metrics,o=e.dimension,s=0,l=t.map(function(e){return s+=e[r],{name:e[o],value:e[r]}}).slice(n,t.length);return{formatter:function(e){var t=[];return t.push(j(e.color)),n&&\"其他\"===e.name?(t.push(\"其他:\"),l.forEach(function(e){var n=e.name,r=e.value,o=V(r/s,\"percent\");t.push(\"<br>\"+n+\":\"),t.push(V(r,i,a)),t.push(\"(\"+o+\")\")})):(t.push(e.name+\":\"),t.push(V(e.value,i,a)),t.push(\"(\"+e.percent+\"%)\")),t.join(\" \")}}}function f(e,i){return{trigger:\"item\",formatter:function(t){var n=[];return n.push(j(t.color)),n.push(t.name+\": \"+V(t.data.realValue,e,i)),n.join(\"\")}}}function p(e){var i=e.dimension,t=e.metrics,n=e.rows,a=e.sequence,r=e.ascending,o={type:\"funnel\"};n.sort(function(e,t){return a.indexOf(e[i])-a.indexOf(t[i])});var s=!1;n.some(function(e,i){if(i&&e[t]>n[i-1][t])return s=!0,!0});var l=100/n.length;return o.data=s?n.slice().reverse().map(function(e,n){return{name:e[i],value:(n+1)*l,realValue:e[t]}}):n.map(function(e){return{name:e[i],value:e[t],realValue:e[t]}}),r&&(o.sort=\"ascending\"),o}function v(e,i){return{data:e.map(function(e){return e[i]})}}function b(e,i,t){var n=[],a=[];return i.indicator.map(function(i,t){n[t]=e[i.name],a[t]=i.name}),{formatter:function(e){var i=[];return i.push(j(e.color)),i.push(e.seriesName+\"<br />\"),e.data.value.forEach(function(e,r){i.push(a[r]+\": \"),i.push(V(e,n[r],t)+\"<br />\")}),i.join(\"\")}}}function g(e,i){var t={indicator:[],shape:\"circle\",splitNumber:5},n={};return e.forEach(function(e){i.forEach(function(i){n[i]?n[i].push(e[i]):n[i]=[e[i]]})}),t.indicator=Object.keys(n).map(function(e){return{name:e,max:Math.max.apply(null,n[e])}}),t}function x(e){var i=e.rows,t=e.dimension,n=e.metrics,a={};e.radar.indicator.forEach(function(e,i){a[e.name]=i});var r=i.map(function(e){var i={value:[],name:e[t]};return Object.keys(e).forEach(function(t){~n.indexOf(t)&&(i.value[a[t]]=e[t])}),i});return[{name:t,type:\"radar\",data:r}]}function y(e,i){return{trigger:\"axis\",axisPointer:{type:\"shadow\"},formatter:function(t){var n=t[1];return[n.name+\"<br/>\"+n.seriesName+\" :\",\"\"+V(n.value,e,i)].join(\"\")}}}function O(e){var i=e.dimension,t=e.rows,n=e.remainStatus,a=e.totalName,r=e.remainName,o=e.xAxisName,s=e.axisVisible,l=[a].concat(t.map(function(e){return e[i]}));return\"have-remain\"===n&&(l=l.concat([r])),{type:\"category\",name:o,splitLine:{show:!1},data:l,show:s}}function w(e){var i=e.dataType,t=e.yAxisName,n=e.axisVisible,a=e.digit;return{type:\"value\",name:t,axisTick:{show:!1},axisLabel:{formatter:function(e){return V(e,i,a)}},show:n}}function S(e){var i=e.dataType,t=e.rows,n=e.metrics,a=e.totalNum,r=e.remainStatus,o=e.dataSum,s=e.digit,l={type:\"bar\",stack:\"总量\"},c=o,u=a,d=void 0,m=void 0,h=t.map(function(e){return e[n]});\"have-remain\"===r?(d=[0].concat(t.map(function(e){return u-=e[n]})).concat([0]),m=[a].concat(h).concat([a-o])):(d=[0].concat(t.map(function(e){return c-=e[n]})),m=[o].concat(h));var f=[];return f.push(Object.assign({name:\"辅助\",itemStyle:{normal:{opacity:0},emphasis:{opacity:0}},data:d},l)),f.push(Object.assign({name:\"数值\",label:{normal:{show:!0,position:\"top\",formatter:function(e){return V(e.value,i,s)}}},data:m},l)),f}function A(e,i){return i?i>e?\"have-remain\":\"none-remain\":\"not-total\"}e=\"default\"in e?e.default:e,\"function\"!=typeof Object.assign&&(Object.assign=function(e){if(null==e)throw new TypeError(\"Cannot convert undefined or null to object\");e=Object(e);for(var i=1;i<arguments.length;i++){var t=arguments[i];if(null!=t)for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e}),e.registerTheme(\"ve-chart\",{categoryAxis:{axisLine:{show:!1},axisTick:{show:!1},splitLine:{show:!1}},valueAxis:{axisLine:{show:!1}},line:{smooth:!0},grid:{containLabel:!0,left:10,right:10}});var j=function(e){return['<span style=\"',\"background-color:\"+e+\";\",\"display: inline-block;\",\"width: 10px;\",\"height: 10px;\",\"border-radius: 50%;\",\"margin-right:2px;\",'\"></span>'].join(\"\")},N=[\"#19d4ae\",\"#5ab1ef\",\"#fa6e86\",\"#ffb980\",\"#0067a6\",\"#c4b4e4\",\"#d87a80\",\"#9cbbff\",\"#d9d0c7\",\"#87a997\",\"#d49ea2\",\"#5b4947\",\"#7ba3a8\"],k=function(e){var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;if(isNaN(+e))return e;for(var t=[{value:1e18,symbol:\"E\"},{value:1e15,symbol:\"P\"},{value:1e12,symbol:\"T\"},{value:1e9,symbol:\"B\"},{value:1e6,symbol:\"M\"},{value:1e3,symbol:\"k\"}],n=0;n<t.length;n++)if(Math.abs(e)>=t[n].value)return(e/t[n].value).toFixed(i)+t[n].symbol;return e.toString()},T=function(e){return String(e).replace(/^(\\s+|-)?\\d+(?=.?\\d*($|\\s))/g,function(e){return e.replace(/(?=(?!\\b)(\\d{3})+$)/g,\",\")})},V=function(e,i){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:2,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:\"-\";if(null==e||isNaN(e))return n;switch(i){case\"KMB\":return k(e);case\"percent\":return parseFloat((100*e).toFixed(t))+\"%\";case\"normal\":return T(e);default:return e}},E=function(e){var i={};return Object.keys(e).forEach(function(t){e[t].forEach(function(e){i[e]=t})}),i},L=function(e){return JSON.parse(JSON.stringify(e))},M=function(e){return Object.prototype.toString.call(e)},H=function(e,i,t){return i in e?Object.defineProperty(e,i,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[i]=t,e},P=function(e,o,s,l){var c=L(o),u=s.axisSite,d=void 0===u?{top:[]}:u,m=s.dimension,h=void 0===m?[e[0]]:m,f=s.stack,p=void 0===f?{}:f,v=s.axisVisible,b=void 0===v||v,g=s.digit,x=void 0===g?2:g,y=s.dataOrder,O=void 0!==y&&y,w=s.scale,S=void 0===w?[!1,!1]:w,A=s.min,j=void 0===A?[null,null]:A,N=s.max,k=void 0===N?[null,null]:N,T=s.legendName,V=s.labelMap,E=s.label,M=s.itemStyle,H=s.showLine,P=l.tooltipVisible,C=l.legendVisible,R=e.slice();s.metrics?R=s.metrics:R.splice(e.indexOf(h[0]),1);var q=s.xAxisType||[\"normal\",\"normal\"],F=s.xAxisName||[],$=s.yAxisName||\"\";if(O){var _=O.label,Z=O.order;_&&Z?c.sort(function(e,i){return\"desc\"===Z?e[_]-i[_]:i[_]-e[_]}):console.warn(\"Need to provide name and order parameters\")}var z=C&&r({metrics:R,labelMap:V,legendName:T}),B=i({innerRows:c,dimAxisName:$,dimension:h,axisVisible:b}),G=t({meaAxisName:F,meaAxisType:q,axisVisible:b,digit:x,scale:S,min:j,max:k}),I={axisSite:d,isHistogram:!1,meaAxisType:q,digit:x,labelMap:V};return{legend:z,yAxis:B,series:a({innerRows:c,metrics:R,stack:p,axisSite:d,isHistogram:!1,labelMap:V,itemStyle:M,label:E,showLine:H}),xAxis:G,tooltip:P&&n(I)}},C=function(e,o,s,l){var c=L(o),u=s.axisSite,d=void 0===u?{right:[]}:u,m=s.dimension,h=void 0===m?[e[0]]:m,f=s.stack,p=void 0===f?{}:f,v=s.axisVisible,b=void 0===v||v,g=s.digit,x=void 0===g?2:g,y=s.dataOrder,O=void 0!==y&&y,w=s.scale,S=void 0===w?[!1,!1]:w,A=s.min,j=void 0===A?[null,null]:A,N=s.max,k=void 0===N?[null,null]:N,T=s.labelMap,V=s.legendName,E=s.label,M=s.itemStyle,H=s.showLine;if(O){var P=O.label,C=O.order;P&&C?c.sort(function(e,i){return\"desc\"===C?e[P]-i[P]:i[P]-e[P]}):console.warn(\"Need to provide name and order parameters\")}var R=l.tooltipVisible,q=l.legendVisible,F=e.slice();s.metrics?F=s.metrics:F.splice(e.indexOf(h[0]),1);var $=s.yAxisType||[\"normal\",\"normal\"],_=s.yAxisName||[],Z=s.xAxisName||\"\",z=q&&r({metrics:F,labelMap:T,legendName:V}),B=i({innerRows:c,dimAxisName:Z,dimension:h,axisVisible:b}),G={axisSite:d,isHistogram:!0,meaAxisType:$,digit:x,labelMap:T};return{legend:z,yAxis:t({meaAxisName:_,meaAxisType:$,axisVisible:b,digit:x,scale:S,min:j,max:k}),series:a({innerRows:c,metrics:F,stack:p,axisSite:d,isHistogram:!0,labelMap:T,itemStyle:M,label:E,showLine:H}),xAxis:B,tooltip:R&&n(G)}},R=function(e,i,t,n){var a=t.axisSite,r=void 0===a?{right:[]}:a,d=t.yAxisType,m=void 0===d?[\"normal\",\"normal\"]:d,h=t.yAxisName,f=void 0===h?[]:h,p=t.dimension,v=void 0===p?[e[0]]:p,b=t.xAxisName,g=void 0===b?[]:b,x=t.axisVisible,y=void 0===x||x,O=t.area,w=t.stack,S=t.scale,A=void 0===S?[!1,!1]:S,j=t.min,N=void 0===j?[null,null]:j,k=t.max,T=void 0===k?[null,null]:k,V=t.nullAddZero,E=void 0!==V&&V,L=t.digit,M=void 0===L?2:L,H=t.legendName,P=t.labelMap,C=t.label,R=t.itemStyle,q=t.lineStyle,F=t.areaStyle,$=n.tooltipVisible,_=n.legendVisible,Z=e.slice();t.metrics?Z=t.metrics:Z.splice(e.indexOf(v[0]),1);var z=_&&u({metrics:Z,legendName:H,labelMap:P}),B=$&&c({axisSite:r,yAxisType:m,digit:M,labelMap:P}),G=o({dimension:v,rows:i,xAxisName:g,axisVisible:y}),I=l({yAxisName:f,yAxisType:m,axisVisible:y,scale:A,min:N,max:T,digit:M}),Y=s({rows:i,axisSite:r,metrics:Z,area:O,stack:w,nullAddZero:E,labelMap:P,label:C,itemStyle:R,lineStyle:q,areaStyle:F});return!(!G||!Y)&&{legend:z,xAxis:G,series:Y,yAxis:I,tooltip:B}},q=[80,100],F=[20,100],$=function(e,i,t,n,a){var r=L(i),o=t.dataType,s=void 0===o?\"normal\":o,l=t.percentShow,c=t.dimension,u=void 0===c?e[0]:c,f=t.metrics,p=void 0===f?e[1]:f,v=t.roseType,b=void 0!==v&&v,g=t.radius,x=void 0===g?a?b?F:q:100:g,y=t.offsetY,O=void 0===y?200:y,w=t.legendLimit,S=void 0===w?30:w,A=t.selectedMode,j=void 0!==A&&A,N=t.hoverAnimation,k=void 0===N||N,T=t.digit,V=void 0===T?2:T,E=t.label,M=void 0!==E&&E,H=t.level,P=void 0!==H&&H,C=t.limitShowNum,R=void 0===C?0:C,$=n.tooltipVisible,_=n.legendVisible;R&&r.sort(function(e,i){return i[p]-e[p]});var Z={innerRows:r,dimension:u,legendLimit:S,level:P,limitShowNum:R};return{series:d({innerRows:r,dataType:s,percentShow:l,dimension:u,metrics:p,radius:x,offsetY:O,selectedMode:j,hoverAnimation:k,digit:V,roseType:b,label:M,level:P,limitShowNum:R,isRing:a}),legend:_&&m(Z),tooltip:$&&h({dataType:s,innerRows:r,limitShowNum:R,digit:V,metrics:p,dimension:u})}},_=function(e,i,t,n){return $(e,i,t,n,!0)},Z=function(e,i,t,n){var a=e.slice(),r=i.slice(),o=t.dataType,s=void 0===o?\"normal\":o,l=t.dimension,c=void 0===l?a[0]:l,u=t.sequence,d=void 0===u?r.map(function(e){return e[c]}):u,m=t.digit,h=void 0===m?2:m,v=t.ascending,b=n.tooltipVisible,g=n.legendVisible,x=void 0;if(t.metrics)x=t.metrics;else{var y=a.slice();y.splice(a.indexOf(c),1),x=y[0]}return{tooltip:b&&f(s,h),legend:g&&{data:d},series:p({dimension:c,metrics:x,rows:r,sequence:d,ascending:v})}},z=function(e,i,t,n){var a=t.dataType,r=void 0===a?{}:a,o=t.dimension,s=void 0===o?e[0]:o,l=t.digit,c=void 0===l?2:l,u=n.tooltipVisible,d=n.legendVisible,m=e.slice();t.metrics?m=t.metrics:m.splice(e.indexOf(s),1);var h=d&&v(i,s),f=g(i,m);return{legend:h,tooltip:u&&b(r,f,c),radar:f,series:x({rows:i,dimension:s,metrics:m,radar:f})}},B=function(e,i,t,n){var a=t.dataType,r=void 0===a?\"normal\":a,o=t.dimension,s=void 0===o?e[0]:o,l=t.totalName,c=void 0===l?\"总计\":l,u=t.totalNum,d=t.remainName,m=void 0===d?\"其他\":d,h=t.xAxisName,f=void 0===h?s:h,p=t.axisVisible,v=void 0===p||p,b=t.digit,g=void 0===b?2:b,x=n.tooltipVisible,j=e.slice();j.splice(j.indexOf(s),1);var N=j[0],k=N,T=x&&y(r,g),V=i.reduce(function(e,i){return e+Number(i[N])},0).toFixed(2),E=A(V,u);return{tooltip:T,xAxis:O({dimension:s,rows:i,remainStatus:E,totalName:c,remainName:m,xAxisName:f,axisVisible:v}),yAxis:w({dataType:r,yAxisName:k,axisVisible:v,digit:g}),series:S({dataType:r,rows:i,dimension:s,metrics:N,totalNum:u,remainStatus:E,dataSum:V,digit:g})}};return{render:function(){var e=this,i=e.$createElement;return(e._self._c||i)(\"div\",{ref:\"canvas\",staticClass:\"ve-chart\",style:e.canvasStyle})},staticRenderFns:[],name:\"VeChart\",mixins:[{props:{data:{type:[Object,Array],default:function(){return{}}},settings:{type:Object,default:function(){return{}}},width:{type:String,default:\"auto\"},height:{type:String,default:\"400px\"},beforeConfig:{type:Function},afterConfig:{type:Function},afterSetOption:{type:Function},afterSetOptionOnce:{type:Function},events:{type:Object},grid:{type:Object},colors:{type:Array},tooltipVisible:{type:Boolean,default:!0},legendVisible:{type:Boolean,default:!0},legendPosition:{type:String},markLine:{type:Object},markArea:{type:Object},markPoint:{type:Object},visualMap:{type:[Object,Array]},dataZoom:{type:[Object,Array]},toolbox:{type:Object},initOptions:{type:Object,default:function(){return{}}},title:Object,legend:Object,xAxis:Object,yAxis:Object,radar:Object,tooltip:Object,axisPointer:Object,brush:Object,geo:Object,timeline:Object,graphic:Object,series:[Object,Array],backgroundColor:[Object,String],textStyle:Object,animation:Object,theme:Object,themeName:String},watch:{data:{deep:!0,handler:function(e){e&&this.dataHandler(e)}},settings:{deep:!0,handler:function(e){e.type&&this.chartLib&&(this.chartHandler=this.chartLib[e.type]),this.dataHandler(this.data)}}},computed:{canvasStyle:function(){return{width:this.width,height:this.height,position:\"relative\"}},chartColor:function(){return this.colors||this.theme&&this.theme.color||N}},methods:{dataHandler:function(e){if(this.chartHandler){var i=e,t=i.columns,n=i.rows,a={tooltipVisible:this.tooltipVisible,legendVisible:this.legendVisible,echarts:this.echarts,color:this.chartColor};this.beforeConfig&&(e=this.beforeConfig(e));var r=this.chartHandler(t,n,this.settings,a);r&&(\"function\"==typeof r.then?r.then(this.optionsHandler):this.optionsHandler(r))}},optionsHandler:function(e){var i=this;if(this.legendPosition&&e.legend&&(e.legend[this.legendPosition]=10,~[\"left\",\"right\"].indexOf(this.legendPosition)&&(e.legend.top=\"middle\",e.legend.orient=\"vertical\")),this.themeName||(e.color=this.chartColor),[\"grid\",\"dataZoom\",\"visualMap\",\"toolbox\",\"title\",\"legend\",\"xAxis\",\"yAxis\",\"radar\",\"tooltip\",\"axisPointer\",\"brush\",\"geo\",\"timeline\",\"graphic\",\"series\",\"backgroundColor\",\"textStyle\"].forEach(function(t){i[t]&&(e[t]=i[t])}),this.animation&&Object.keys(this.animation).forEach(function(t){e[t]=i.animation[t]}),this.markArea||this.markLine||this.markPoint){var t={markArea:this.markArea,markLine:this.markLine,markPoint:this.markPoint},n=e.series;\"[object Array]\"===M(n)?n.forEach(function(e){i.addMark(e,t)}):\"[object Object]\"===M(n)&&this.addMark(n,t)}this.afterConfig&&(e=this.afterConfig(e)),this.echarts.setOption(e,!0),this.afterSetOption&&this.afterSetOption(this.echarts),this.afterSetOptionOnce&&!this._once.afterSetOptionOnce&&(this._once.afterSetOptionOnce=this.afterSetOptionOnce(this.echarts))},addMark:function(e,i){Object.keys(i).forEach(function(t){i[t]&&(e[t]=i[t])})},init:function(){if(!this.echarts){var e=this.themeName||(this.theme?\"outer-theme\":\"ve-chart\");this.echarts=this.echartsLib.init(this.$refs.canvas,e,this.initOptions),this.data&&this.dataHandler(this.data),this.events&&this.bindEvents()}},bindEvents:function(){var e=this;Object.keys(this.events).forEach(function(i){e.echarts.on(i,e.events[i])})},addWatchToProps:function(){var e=this,i=this._watchers.map(function(e){return e.expression});Object.keys(this.$props).forEach(function(t){if(!~i.indexOf(t)){var n={};\"[object Object]\"===M(t)&&(n.deep=!0),e.$watch(t,function(){e.dataHandler(e.data)},n)}})},registerTheme:function(){e.registerTheme(\"outer-theme\",this.theme)}},created:function(){this.echarts=null,this._once={},this.addWatchToProps(),this.theme&&this.registerTheme()},mounted:function(){this.init(),window.addEventListener(\"resize\",this.echarts.resize)},beforeDestory:function(){window.removeEventListener(\"resize\",this.echarts.resize),this.echarts.dispose()}}],created:function(){this.chartLib={bar:P,histogram:C,line:R,pie:$,ring:_,funnel:Z,radar:z,waterfall:B},this.chartHandler=this.chartLib[this.settings.type],this.echartsLib=e}}});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/v-charts/lib/chart.min.js\n// module id = 839\n// module chunks = 0 1","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport VeChart from 'v-charts/lib/chart.min'\nimport DateRange from 'base/date-range/date-range'\nimport VHeader from 'components/v-header/v-header'\nimport Loading from 'base/loading/loading'\nimport { mapGetters, mapMutations } from 'vuex'\nimport { chartDataMixin, dateMixin } from 'common/js/mixin'\nimport { ERR_OK } from 'api/config'\nimport { getChart0 } from 'api'\nimport bus from 'common/js/bus'\n\nexport default {\n  name: 'analysis-detail',\n  mixins: [chartDataMixin, dateMixin],\n  props: {},\n  data () {\n    return {\n      chartSettings: {},\n      chartData0: {\n        bars: [],\n        times: []\n      }\n    }\n  },\n  computed: {\n    ...mapGetters([\n      'analysisItem'\n    ]),\n    ...mapGetters({\n      selectedItem: 'analysis/selectedItem'\n    })\n  },\n  components: {\n    VeChart,\n    VHeader,\n    Loading,\n    DateRange\n  },\n  methods: {\n    ...mapMutations({\n      changeDateSelectedItem: 'analysis/CHANGE_DATE_SELECTED_ITEM'\n    }),\n    _changeDate (date) {\n      if (!this.checkTime(date.dateStartTime, date.dateEndTime)) return\n      const params = {\n        startTime: date.dateStartTime,\n        endTime: date.dateEndTime,\n        selectedItems: JSON.parse(this.selectedItem.q),\n        id: this.selectedItem.id,\n        tag: this.selectedItem.tag\n      }\n      this.changeDateSelectedItem(date)\n      this._concurrent()\n      bus.$emit('busChangeDate', params)\n    },\n    changeType () {\n      this.index++\n      if (this.index >= this.typeArr.length) { this.index = 0 }\n      this.chartSettings = { type: this.typeArr[this.index] }\n    },\n    async _getChart0 () {\n      const params = {\n        id: this.selectedItem.id,\n        q: this.selectedItem.q,\n        tag: this.selectedItem.tag,\n        startPoTime: this.selectedItem.startPoTime,\n        endPoTime: this.selectedItem.endPoTime\n      }\n      return await getChart0(params).then(data => {\n        if (data.code === ERR_OK) {\n          return data\n        }\n      })\n    },\n    async _concurrent () {\n      const data = await Promise.all([this._getChart0()])\n\n      const [{ obj: chartData0 }] = data\n      this.chartData0 = chartData0\n    },\n    getTitle (label) {\n      switch (label) {\n        case 'company': {\n          return '企业竞争力分析报告'\n        }\n        case 'product': {\n          return '产品竞争力分析报告'\n        }\n        case 'tenderProduct': {\n          return '产品招标竞争力分析报告'\n        }\n        case 'tenderCompany': {\n          return '企业招标竞争力分析报告'\n        }\n        default: {\n          return ''\n        }\n      }\n    }\n  },\n  created () {\n    this.typeArr = ['line', 'histogram', 'bar']\n    this.index = 0\n    this.chartSettings = {\n      type: this.typeArr[this.index],\n      label: {\n        normal: { show: true }\n      }\n    }\n    this._concurrent()\n    if (!this.selectedItem.id) this.$router.push('/analysis')\n  },\n  mounted () {}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/analysis-detail/analysis-detail.vue","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".analysis-detail[data-v-5314579c]{position:fixed;top:0;bottom:0;left:0;right:0;z-index:100;background-color:#fff}.analysis-detail .header .change-btn[data-v-5314579c]{font-size:.373333333333333rem}.analysis-detail .title-wrapper[data-v-5314579c]{padding:.266666666666667rem;line-height:1.5em;display:-webkit-box;display:-webkit-flex;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;flex-direction:column}.analysis-detail .title-wrapper>span[data-v-5314579c]{font-size:.32rem;color:#949697}.analysis-detail .chart[data-v-5314579c]{width:100%}.analysis-detail .chart>.chart-title[data-v-5314579c]{font-size:.373333333333333rem;color:#0b62c9;background-color:rgba(11,98,201,.2);padding:.133333333333333rem .266666666666667rem}.analysis-detail .loading[data-v-5314579c]{position:absolute;top:50%}.analysis-detail .slide-enter-active[data-v-5314579c],.analysis-detail .slide-leave-active[data-v-5314579c]{-webkit-transition:all .3s;transition:all .3s}.analysis-detail .slide-enter[data-v-5314579c],.analysis-detail .slide-leave-to[data-v-5314579c]{-webkit-transform:translate3d(100%,0,0);transform:translate3d(100%,0,0)}\", \"\", {\"version\":3,\"sources\":[\"/Users/yangran/workspace/industries/src/components/analysis-detail/analysis-detail.vue\"],\"names\":[],\"mappings\":\"AAAA,kCACE,eAAgB,AAChB,MAAO,AACP,SAAU,AACV,OAAQ,AACR,QAAS,AACT,YAAa,AACb,qBAAuB,CACxB,AAED,sDACE,6BAAgC,CACjC,AAED,iDACE,4BAA8B,AAC9B,kBAAmB,AACnB,oBAAqB,AACrB,qBAAsB,AACtB,aAAc,AACd,4BAA6B,AAC7B,6BAA8B,AAC9B,8BAA+B,AAC/B,qBAAuB,CACxB,AAED,sDACE,iBAAmB,AACnB,aAAe,CAChB,AAED,yCACE,UAAY,CACb,AAED,sDACE,8BAAgC,AAChC,cAAe,AACf,oCAAsC,AACtC,+CAAmD,CACpD,AAED,2CACE,kBAAmB,AACnB,OAAS,CACV,AAED,4GAEE,2BAA6B,AAC7B,kBAAqB,CACtB,AAED,iGAEE,wCAA2C,AAC3C,+BAAmC,CACpC\",\"file\":\"analysis-detail.vue\",\"sourcesContent\":[\".analysis-detail[data-v-5314579c] {\\n  position: fixed;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  z-index: 100;\\n  background-color: #fff;\\n}\\n\\n.analysis-detail .header .change-btn[data-v-5314579c] {\\n  font-size: 0.373333333333333rem;\\n}\\n\\n.analysis-detail .title-wrapper[data-v-5314579c] {\\n  padding: 0.266666666666667rem;\\n  line-height: 1.5em;\\n  display: -webkit-box;\\n  display: -webkit-flex;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n  -webkit-flex-direction: column;\\n  flex-direction: column;\\n}\\n\\n.analysis-detail .title-wrapper > span[data-v-5314579c] {\\n  font-size: 0.32rem;\\n  color: #949697;\\n}\\n\\n.analysis-detail .chart[data-v-5314579c] {\\n  width: 100%;\\n}\\n\\n.analysis-detail .chart > .chart-title[data-v-5314579c] {\\n  font-size: 0.373333333333333rem;\\n  color: #0b62c9;\\n  background-color: rgba(11,98,201,0.2);\\n  padding: 0.133333333333333rem 0.266666666666667rem;\\n}\\n\\n.analysis-detail .loading[data-v-5314579c] {\\n  position: absolute;\\n  top: 50%;\\n}\\n\\n.analysis-detail .slide-enter-active[data-v-5314579c],\\n.analysis-detail .slide-leave-active[data-v-5314579c] {\\n  -webkit-transition: all 0.3s;\\n  transition: all 0.3s;\\n}\\n\\n.analysis-detail .slide-enter[data-v-5314579c],\\n.analysis-detail .slide-leave-to[data-v-5314579c] {\\n  -webkit-transform: translate3d(100%, 0, 0);\\n  transform: translate3d(100%, 0, 0);\\n}\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-5314579c\",\"scoped\":true,\"hasInlineConfig\":true}!./~/stylus-loader?{\"sourceMap\":true}!./~/vux-loader/src/style-loader.js!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/components/analysis-detail/analysis-detail.vue\n// module id = 917\n// module chunks = 1","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-5314579c\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":true}!../../../node_modules/stylus-loader/index.js?{\\\"sourceMap\\\":true}!../../../node_modules/vux-loader/src/style-loader.js!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./analysis-detail.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"3016f508\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/vue-style-loader!./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-5314579c\",\"scoped\":true,\"hasInlineConfig\":true}!./~/stylus-loader?{\"sourceMap\":true}!./~/vux-loader/src/style-loader.js!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/components/analysis-detail/analysis-detail.vue\n// module id = 955\n// module chunks = 1","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('transition', {\n    attrs: {\n      \"name\": \"slide\"\n    }\n  }, [_c('div', {\n    staticClass: \"analysis-detail\"\n  }, [_c('v-header', {\n    staticClass: \"header\",\n    attrs: {\n      \"title\": _vm.getTitle(_vm.analysisItem)\n    }\n  }, [_c('div', {\n    staticClass: \"change-btn\",\n    on: {\n      \"click\": _vm.changeType\n    },\n    slot: \"right\"\n  }, [_vm._v(\"\\n        切换\\n      \")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"title-wrapper\"\n  }, [_c('h2', [_vm._v(_vm._s(_vm.selectedItem.name))]), _vm._v(\" \"), _c('date-range', {\n    attrs: {\n      \"startTime\": _vm._f(\"formatDate\")(_vm.selectedItem.startPoTime),\n      \"endTime\": _vm._f(\"formatDate\")(_vm.selectedItem.endPoTime)\n    },\n    on: {\n      \"changeDate\": _vm._changeDate\n    }\n  })], 1), _vm._v(\" \"), _c('div', {\n    staticClass: \"chart\"\n  }, [_c('div', {\n    staticClass: \"chart-title\"\n  }, [_vm._v(\"时间趋势图表\")]), _vm._v(\" \"), _c('ve-chart', {\n    attrs: {\n      \"data\": _vm.normalizLineData(_vm.chartData0),\n      \"settings\": _vm.chartSettings\n    }\n  })], 1), _vm._v(\" \"), _c('loading', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (!_vm.chartData0.times.length),\n      expression: \"!chartData0.times.length\"\n    }],\n    staticClass: \"loading\"\n  })], 1)])\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-5314579c\"}!./~/vux-loader/src/before-template-compiler-loader.js!./~/vux-loader/src/template-loader.js!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/analysis-detail/analysis-detail.vue\n// module id = 1047\n// module chunks = 1"],"sourceRoot":""}