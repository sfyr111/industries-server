{"version":3,"sources":["webpack:///industries/js/1.d3162b6ce42e6dd73bcb.js","webpack:///./src/components/analysis-detail/analysis-detail.vue?acbe","webpack:///./src/components/analysis-detail/analysis-detail.vue?ad73","webpack:///./~/zrender/lib/core/util.js?10f4","webpack:///./~/echarts/lib/echarts.js?68a2","webpack:///./~/echarts/lib/util/graphic.js?e267","webpack:///./~/echarts/lib/util/model.js?e2bd","webpack:///./~/echarts/lib/util/number.js?43e3","webpack:///./~/zrender/lib/core/vector.js?6654","webpack:///./~/zrender/lib/graphic/Path.js?c119","webpack:///./~/echarts/lib/util/format.js?7f72","webpack:///./~/echarts/lib/model/Model.js?f4df","webpack:///./~/zrender/lib/core/env.js?9ccc","webpack:///./~/echarts/lib/util/clazz.js?3e66","webpack:///./~/zrender/lib/core/BoundingRect.js?76f6","webpack:///./~/echarts/lib/model/Component.js?0e02","webpack:///./~/echarts/lib/util/layout.js?2b1e","webpack:///./~/echarts/lib/coord/axisHelper.js?4730","webpack:///./~/zrender/lib/contain/text.js?3a43","webpack:///./~/zrender/lib/core/curve.js?9511","webpack:///./~/zrender/lib/core/matrix.js?97a2","webpack:///./~/vux/src/tools/date/format.js?06ee","webpack:///./~/zrender/lib/core/event.js?24ff","webpack:///./~/zrender/lib/mixin/Eventful.js?223b","webpack:///./~/zrender/lib/tool/color.js?284f","webpack:///./src/common/js/mixin.js?178f","webpack:///./~/echarts/lib/component/axisPointer/modelHelper.js?ba01","webpack:///./~/echarts/lib/data/List.js?b096","webpack:///./~/echarts/lib/data/helper/completeDimensions.js?9c9e","webpack:///./~/echarts/lib/scale/Scale.js?c922","webpack:///./~/zrender/lib/config.js?2861","webpack:///./~/zrender/lib/container/Group.js?8d57","webpack:///./~/zrender/lib/core/PathProxy.js?69e9","webpack:///./~/echarts/lib/CoordinateSystem.js?2b30","webpack:///./~/echarts/lib/model/mixin/makeStyleMapper.js?e2b1","webpack:///./~/echarts/lib/scale/Interval.js?08e9","webpack:///./~/echarts/lib/util/symbol.js?be2c","webpack:///./~/echarts/lib/model/Series.js?186c","webpack:///./~/echarts/lib/view/Chart.js?72f3","webpack:///./~/echarts/lib/util/component.js?cc72","webpack:///./~/zrender/lib/core/timsort.js?0a74","webpack:///./~/zrender/lib/graphic/Displayable.js?5c45","webpack:///./~/zrender/lib/graphic/Gradient.js?5165","webpack:///./~/zrender/lib/graphic/helper/image.js?8535","webpack:///./~/zrender/lib/graphic/helper/text.js?069c","webpack:///./~/echarts/lib/chart/helper/createListFromArray.js?e3fc","webpack:///./~/echarts/lib/component/axis/AxisBuilder.js?6417","webpack:///./~/echarts/lib/coord/Axis.js?736c","webpack:///./~/echarts/lib/coord/axisModelCommonMixin.js?a8d0","webpack:///./~/echarts/lib/chart/helper/Symbol.js?9fa3","webpack:///./~/echarts/lib/component/axis/AxisView.js?f854","webpack:///./~/echarts/lib/component/axis/cartesianAxisHelper.js?ce88","webpack:///./~/echarts/lib/component/axisPointer/findPointFromSeries.js?2189","webpack:///./~/echarts/lib/component/axisPointer/globalListener.js?00cf","webpack:///./~/echarts/lib/component/axisPointer/viewHelper.js?35c0","webpack:///./~/echarts/lib/coord/cartesian/AxisModel.js?0573","webpack:///./~/echarts/lib/model/mixin/colorPalette.js?b454","webpack:///./~/echarts/lib/scale/helper.js?370b","webpack:///./~/echarts/lib/util/throttle.js?56b3","webpack:///./~/zrender/lib/Element.js?325b","webpack:///./~/zrender/lib/animation/Animator.js?d2b9","webpack:///./~/zrender/lib/animation/requestAnimationFrame.js?6d88","webpack:///./~/zrender/lib/contain/util.js?0031","webpack:///./~/zrender/lib/core/LRU.js?018e","webpack:///./~/zrender/lib/core/guid.js?f0e4","webpack:///./~/zrender/lib/core/log.js?26a2","webpack:///./~/zrender/lib/graphic/Image.js?bf1b","webpack:///./~/zrender/lib/graphic/Pattern.js?a97e","webpack:///./~/zrender/lib/graphic/Style.js?22d9","webpack:///./~/zrender/lib/graphic/helper/fixClipWithShadow.js?92a4","webpack:///./~/zrender/lib/graphic/helper/poly.js?788c","webpack:///./~/zrender/lib/graphic/helper/roundRect.js?418d","webpack:///./~/zrender/lib/mixin/Transformable.js?f61b","webpack:///./~/echarts/lib/component/gridSimple.js?eec5","webpack:///./~/echarts/lib/coord/axisDefault.js?4492","webpack:///./~/echarts/lib/coord/cartesian/Grid.js?f167","webpack:///./~/echarts/lib/processor/dataFilter.js?d6e4","webpack:///./~/echarts/lib/visual/dataColor.js?fa8e","webpack:///./~/echarts/lib/visual/symbol.js?518b","webpack:///./~/echarts/lib/ExtensionAPI.js?e283","webpack:///./~/echarts/lib/chart/helper/SymbolDraw.js?6b79","webpack:///./~/echarts/lib/chart/helper/labelHelper.js?2f49","webpack:///./~/echarts/lib/chart/line.js?f251","webpack:///./~/echarts/lib/chart/line/LineSeries.js?6f66","webpack:///./~/echarts/lib/chart/line/LineView.js?018e","webpack:///./~/echarts/lib/chart/line/lineAnimationDiff.js?8da6","webpack:///./~/echarts/lib/chart/line/poly.js?c760","webpack:///./~/echarts/lib/component/axis.js?8a87","webpack:///./~/echarts/lib/component/axis/CartesianAxisView.js?076a","webpack:///./~/echarts/lib/component/axisPointer.js?110d","webpack:///./~/echarts/lib/component/axisPointer/AxisPointerModel.js?e99a","webpack:///./~/echarts/lib/component/axisPointer/AxisPointerView.js?4293","webpack:///./~/echarts/lib/component/axisPointer/BaseAxisPointer.js?027a","webpack:///./~/echarts/lib/component/axisPointer/CartesianAxisPointer.js?ab1e","webpack:///./~/echarts/lib/component/axisPointer/axisTrigger.js?86e8","webpack:///./~/echarts/lib/component/helper/listComponent.js?566d","webpack:///./~/echarts/lib/component/legend.js?d893","webpack:///./~/echarts/lib/component/legend/LegendModel.js?bbe7","webpack:///./~/echarts/lib/component/legend/LegendView.js?124f","webpack:///./~/echarts/lib/component/legend/legendAction.js?b7a9","webpack:///./~/echarts/lib/component/legend/legendFilter.js?93b2","webpack:///./~/echarts/lib/component/tooltip.js?b491","webpack:///./~/echarts/lib/component/tooltip/TooltipContent.js?2c54","webpack:///./~/echarts/lib/component/tooltip/TooltipModel.js?19ac","webpack:///./~/echarts/lib/component/tooltip/TooltipView.js?ae52","webpack:///./~/echarts/lib/coord/axisModelCreator.js?34e4","webpack:///./~/echarts/lib/coord/cartesian/Axis2D.js?9345","webpack:///./~/echarts/lib/coord/cartesian/Cartesian.js?9246","webpack:///./~/echarts/lib/coord/cartesian/Cartesian2D.js?103b","webpack:///./~/echarts/lib/coord/cartesian/GridModel.js?1817","webpack:///./~/echarts/lib/data/DataDiffer.js?f330","webpack:///./~/echarts/lib/helper.js?5794","webpack:///./~/echarts/lib/layout/points.js?4302","webpack:///./~/echarts/lib/loading/default.js?8a5f","webpack:///./~/echarts/lib/model/Global.js?b9d3","webpack:///./~/echarts/lib/model/OptionManager.js?a7a5","webpack:///./~/echarts/lib/model/globalDefault.js?fd54","webpack:///./~/echarts/lib/model/mixin/areaStyle.js?4e41","webpack:///./~/echarts/lib/model/mixin/boxLayout.js?92d7","webpack:///./~/echarts/lib/model/mixin/itemStyle.js?9011","webpack:///./~/echarts/lib/model/mixin/lineStyle.js?3579","webpack:///./~/echarts/lib/model/mixin/textStyle.js?e4c8","webpack:///./~/echarts/lib/preprocessor/backwardCompat.js?f171","webpack:///./~/echarts/lib/preprocessor/helper/compatStyle.js?aff6","webpack:///./~/echarts/lib/processor/dataSample.js?6fcd","webpack:///./~/echarts/lib/scale/Log.js?0ad0","webpack:///./~/echarts/lib/scale/Ordinal.js?3a6b","webpack:///./~/echarts/lib/scale/Time.js?6fdf","webpack:///./~/echarts/lib/view/Component.js?415a","webpack:///./~/echarts/lib/visual/seriesColor.js?4b6a","webpack:///./~/zrender/lib/Handler.js?fbeb","webpack:///./~/zrender/lib/Layer.js?f586","webpack:///./~/zrender/lib/Painter.js?ee99","webpack:///./~/zrender/lib/Storage.js?7e93","webpack:///./~/zrender/lib/animation/Animation.js?8743","webpack:///./~/zrender/lib/animation/Clip.js?fef9","webpack:///./~/zrender/lib/animation/easing.js?64b6","webpack:///./~/zrender/lib/contain/arc.js?7367","webpack:///./~/zrender/lib/contain/cubic.js?b90e","webpack:///./~/zrender/lib/contain/line.js?4326","webpack:///./~/zrender/lib/contain/path.js?2e7f","webpack:///./~/zrender/lib/contain/quadratic.js?f589","webpack:///./~/zrender/lib/contain/windingLine.js?625a","webpack:///./~/zrender/lib/core/GestureMgr.js?00fd","webpack:///./~/zrender/lib/core/bbox.js?1b56","webpack:///./~/zrender/lib/dom/HandlerProxy.js?2fc7","webpack:///./~/zrender/lib/graphic/CompoundPath.js?8636","webpack:///./~/zrender/lib/graphic/LinearGradient.js?4250","webpack:///./~/zrender/lib/graphic/RadialGradient.js?895e","webpack:///./~/zrender/lib/graphic/Text.js?3244","webpack:///./~/zrender/lib/graphic/helper/smoothBezier.js?2713","webpack:///./~/zrender/lib/graphic/helper/smoothSpline.js?a17c","webpack:///./~/zrender/lib/graphic/mixin/RectText.js?94ea","webpack:///./~/zrender/lib/graphic/shape/Arc.js?2994","webpack:///./~/zrender/lib/graphic/shape/BezierCurve.js?f5c4","webpack:///./~/zrender/lib/graphic/shape/Circle.js?076e","webpack:///./~/zrender/lib/graphic/shape/Line.js?7728","webpack:///./~/zrender/lib/graphic/shape/Polygon.js?d37d","webpack:///./~/zrender/lib/graphic/shape/Polyline.js?3cdb","webpack:///./~/zrender/lib/graphic/shape/Rect.js?3b3d","webpack:///./~/zrender/lib/graphic/shape/Ring.js?b71c","webpack:///./~/zrender/lib/graphic/shape/Sector.js?9767","webpack:///./~/zrender/lib/mixin/Animatable.js?35cb","webpack:///./~/zrender/lib/mixin/Draggable.js?fbca","webpack:///./~/zrender/lib/tool/path.js?dc4b","webpack:///./~/zrender/lib/tool/transformPath.js?ddb2","webpack:///./~/zrender/lib/zrender.js?5dcd","webpack:///./~/echarts/lib/action/createDataSelectAction.js?2c2b","webpack:///./~/echarts/lib/chart/bar.js?931c","webpack:///./~/echarts/lib/chart/bar/BarSeries.js?61cd","webpack:///./~/echarts/lib/chart/bar/BarView.js?20fc","webpack:///./~/echarts/lib/chart/bar/BaseBarSeries.js?72f5","webpack:///./~/echarts/lib/chart/bar/barItemStyle.js?15d9","webpack:///./~/echarts/lib/chart/bar/helper.js?25d2","webpack:///./~/echarts/lib/chart/funnel.js?36c9","webpack:///./~/echarts/lib/chart/funnel/FunnelSeries.js?270f","webpack:///./~/echarts/lib/chart/funnel/FunnelView.js?11dc","webpack:///./~/echarts/lib/chart/funnel/funnelLayout.js?5834","webpack:///./~/echarts/lib/chart/pie.js?ec17","webpack:///./~/echarts/lib/chart/pie/PieSeries.js?2a55","webpack:///./~/echarts/lib/chart/pie/PieView.js?c082","webpack:///./~/echarts/lib/chart/pie/labelLayout.js?a7c9","webpack:///./~/echarts/lib/chart/pie/pieLayout.js?b323","webpack:///./~/echarts/lib/chart/radar.js?7042","webpack:///./~/echarts/lib/chart/radar/RadarSeries.js?5e4c","webpack:///./~/echarts/lib/chart/radar/RadarView.js?5582","webpack:///./~/echarts/lib/chart/radar/backwardCompat.js?4e3a","webpack:///./~/echarts/lib/chart/radar/radarLayout.js?e617","webpack:///./~/echarts/lib/component/helper/selectableMixin.js?ad72","webpack:///./~/echarts/lib/component/radar.js?0c9b","webpack:///./~/echarts/lib/component/radar/RadarView.js?f1fd","webpack:///./~/echarts/lib/coord/radar/IndicatorAxis.js?4578","webpack:///./~/echarts/lib/coord/radar/Radar.js?ea59","webpack:///./~/echarts/lib/coord/radar/RadarModel.js?625c","webpack:///./~/echarts/lib/layout/barGrid.js?d23e","webpack:///./~/v-charts/lib/chart.min.js?9bc9","webpack:///./src/components/analysis-detail/analysis-detail.vue","webpack:///./src/components/analysis-detail/analysis-detail.vue?3580","webpack:///./src/components/analysis-detail/analysis-detail.vue?7392"],"names":["webpackJsonp","1046","module","exports","render","_vm","this","_h","$createElement","_c","_self","attrs","name","staticClass","title","getTitle","analysisItem","_v","_s","selectedItem","_f","startPoTime","endPoTime","data","normalizLineData","chartData0","settings","chartSettings","directives","rawName","value","times","length","expression","staticRenderFns","591","__webpack_require__","Component","606","clone","source","result","typeStr","objToString","call","i","len","TYPED_ARRAY","Ctor","constructor","from","BUILTIN_OBJECT","isPrimitive","isDom","key","hasOwnProperty","merge","target","overwrite","isObject","targetProp","sourceProp","isArray","isBuiltInObject","mergeAll","targetAndSources","extend","defaults","overlay","createCanvas","document","createElement","getContext","_ctx","util","indexOf","array","inherits","clazz","baseClazz","F","clazzPrototype","prototype","prop","superClass","mixin","isArrayLike","each","obj","cb","context","forEach","nativeForEach","map","nativeMap","push","reduce","memo","nativeReduce","filter","nativeFilter","find","bind","func","args","nativeSlice","arguments","apply","concat","curry","isFunction","isString","type","nodeType","ownerDocument","eqNaN","retrieve","values","retrieve2","value0","value1","retrieve3","value2","slice","Function","normalizeCssArray","val","assert","condition","message","Error","setAsPrimitive","primitiveKey","HashMap","set","createHashMap","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","[object CanvasPattern]","[object Image]","[object Canvas]","[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","Object","toString","arrayProto","Array","get","prefixedKey","removeKey","noop","607","global","createRegisterEventWithLowercaseName","method","eventName","handler","toLowerCase","Eventful","MessageCenter","ECharts","dom","theme","opts","prioritySortFunc","a","b","prio","themeStorage","id","group","_dom","zr","_zr","zrender","init","renderer","devicePixelRatio","width","height","_throttledZrFlush","throttle","zrUtil","flush","_theme","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_coordSysMgr","CoordinateSystemManager","_api","createExtensionAPI","_messageCenter","_initEvents","resize","_pendingActions","timsort","visualFuncs","dataProcessorFuncs","animation","on","_onframe","doConvertPixel","methodName","finder","ecModel","_model","coordSysList","getCoordinateSystems","modelUtil","parseFinder","coordSys","__DEV__","console","warn","updateDirectly","ecIns","payload","mainType","subType","callView","view","__alive","__model","query","eachComponent","model","index","__viewId","doDispatchAction","silent","payloadType","escapeConnect","actionWrap","actions","actionInfo","cptType","update","split","updateMethod","pop","parseClassType","IN_MAIN_PROCESS","payloads","batched","batch","item","eventObj","eventObjBatch","isHighDown","batchItem","action","event","main","sub","OPTION_UPDATED","updateMethods","prepareAndUpdate","trigger","flushPendingActions","pendingActions","shift","triggerUpdatedEvent","invokeUpdateMethod","api","component","componentModel","updateZ","eachSeries","seriesModel","idx","chart","updateProgressiveAndBlend","updateHoverLayerStatus","postUpdateFuncs","prepareView","isComponent","viewList","viewMap","componentType","viewId","classType","Clazz","ComponentView","getClass","ChartView","add","__id","__ecComponentInfo","componentIndex","remove","dispose","splice","processData","process","stackSeriesData","stackedDataMap","series","stack","getData","previousStack","stackedOn","doLayout","visual","isLayout","doVisualEncoding","excludesLayout","clearColorPalette","doRender","componentView","chartView","storage","elCount","traverse","el","isGroup","env","node","useHoverLayer","ignore","frameDrawNum","needProgressive","progressive","Math","floor","stopAnimation","blendMode","canvasSupported","setStyle","z","zlevel","ecInstance","coordSysMgr","ExtensionAPI","getComponentByElement","modelInfo","getComponent","parent","enableConnect","updateConnectedChartsStatus","charts","status","STATUS_KEY","eventActionMap","actionType","eventType","connectedGroups","makeActionFromEvent","otherCharts","instances","otherChart","dispatchAction","window","GlobalModel","OptionManager","ComponentModel","SeriesModel","graphic","colorTool","ACTION_REG","off","one","echartsProto","getDom","getZr","setOption","option","notMerge","lazyUpdate","optionManager","optionPreprocessorFuncs","setTheme","log","getModel","getOption","getWidth","getHeight","getDevicePixelRatio","painter","dpr","getRenderedCanvas","pixelRatio","backgroundColor","list","getDisplayList","getDataURL","excludeComponents","excludesComponentViews","self","url","toDataURL","getConnectedDataURL","groupId","mathMin","min","mathMax","max","left","Infinity","top","right","bottom","canvasList","canvas","boundingRect","getBoundingClientRect","targetCanvas","img","Image","style","x","y","image","refreshImmediately","convertToPixel","convertFromPixel","containPixel","models","coordinateSystem","containPoint","getVisual","visualType","defaultMainType","dataIndexInside","indexOfRawIndex","dataIndex","getItemVisual","getViewOfComponentModel","getViewOfSeriesModel","restoreData","create","isSingleCanvas","configLayer","clearColor","colorArr","parse","stringify","colorStops","background","updateView","clearAllVisual","updateVisual","updateLayout","optionChanged","resetOption","_loadingFX","showLoading","cfg","hideLoading","loadingEffects","opt","browser","weChat","MOUSE_EVENT_NAMES","eveName","e","params","dataModel","getSeriesByIndex","seriesIndex","getDataParams","dataType","eventData","isDisposed","_disposed","clear","idBase","Date","groupIdBase","echarts","version","dependencies","replace","existInstance","getInstanceByDom","nodeName","toUpperCase","clientWidth","clientHeight","setAttribute","connect","disConnect","disconnect","getAttribute","getInstanceById","registerTheme","registerPreprocessor","preprocessorFunc","registerProcessor","priority","processorFunc","isNaN","registerPostUpdate","postUpdateFunc","registerAction","test","registerCoordinateSystem","CoordinateSystem","register","getCoordinateSystemDimensions","coordSysCreator","getDimensionsInfo","dimensions","registerLayout","layoutFunc","registerVisual","visualFunc","registerLoading","loadingFx","extendComponentModel","extendComponentView","extendSeriesModel","extendChartView","setCanvasCreator","creator","List","Model","Axis","number","format","matrix","vector","color","helper","PRIORITY","PROCESSOR","FILTER","STATISTIC","VISUAL","LAYOUT","GLOBAL","CHART","COMPONENT","BRUSH","608","hasFillOrStroke","fillOrStroke","liftColor","lift","cacheElementStl","__hoverStlDirty","stroke","fill","hoverStyle","__hoverStl","normalStyle","__normalStl","doSingleEnterHover","__isHover","__zr","addHover","extendFrom","dirty","z2","doSingleLeaveHover","normalStl","removeHover","doEnterHover","child","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","__hoverSilentOnTouch","zrByTouch","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","checkInsideForSetText","labelModel","textPosition","setTextStyleCommon","textStyle","textStyleModel","EMPTY_OBJ","isRectText","getShallow","forMerge","textOffset","labelRotate","PI","textRotation","textDistance","richResult","globalTextStyle","richItemNames","getRichItemNames","richTextStyle","setTokenTextStyle","rich","forceRich","richItemNameMap","parentModel","isBlock","textFill","getAutoColor","textStroke","textLineWidth","textBorderColor","textBorderWidth","checkInside","defaultTextColor","fontStyle","fontWeight","fontSize","fontFamily","textAlign","textVerticalAlign","textLineHeight","textWidth","textHeight","textTag","disableBox","textBackgroundColor","textPadding","textBorderRadius","textBoxShadowColor","textBoxShadowBlur","textBoxShadowOffsetX","textBoxShadowOffsetY","textShadowColor","textShadowBlur","textShadowOffsetX","textShadowOffsetY","autoColor","animateOrSetProps","isUpdate","props","animatableModel","isAnimationEnabled","postfix","duration","animationEasing","animationDelay","getAnimationDelayParams","animateTo","attr","pathTool","Path","Transformable","BoundingRect","round","Group","Text","Circle","Sector","Ring","Polygon","Polyline","Rect","Line","BezierCurve","Arc","CompoundPath","LinearGradient","RadialGradient","extendShape","extendPath","pathData","extendFromString","makePath","rect","layout","path","createFromString","getBoundingRect","aspect","cx","cy","resizePath","mergePath","applyTransform","pathRect","m","calculateTransform","subPixelOptimizeLine","param","subPixelOptimize","shape","lineWidth","x1","x2","y1","y2","subPixelOptimizeRect","originX","originY","originWidth","originHeight","position","positiveOrNegative","doubledPosition","setHoverStyle","hoverSilentOnTouch","setTextStyle","specifiedTextStyle","host","setText","defaultColor","getFont","gTextStyleModel","join","updateProps","initProps","getTransform","ancestor","mat","identity","mul","getLocalTransform","transform","invert","transformDirection","direction","hBase","abs","vBase","vertex","groupTransition","g1","g2","getAnimatableProps","rotation","elMap1","g","elMap","anid","oldEl","newProp","clipPointsByRect","points","point","clipRectByRect","targetRect","createIcon","iconStr","rectHover","strokeNoScale","609","has","formatUtil","nubmerUtil","normalizeToArray","defaultEmphasis","subOpts","emphasisOpt","emphasis","normalOpt","normal","subOptName","TEXT_STYLE_OPTIONS","getDataItemValue","dataItem","isDataItemOption","converDataValue","dimInfo","dimType","parseDate","NaN","createDataFormatModel","dataFormatMixin","rawValue","getRawValue","rawDataIndex","getRawIndex","getName","itemOpt","getRawDataItem","componentSubType","seriesType","seriesId","seriesName","marker","getTooltipMarker","$vars","getFormattedLabel","dimIndex","labelProp","itemModel","getItemModel","formatter","formatTpl","formatTooltip","mappingToExists","exists","newCptOptions","exist","cptOption","isIdInner","makeIdAndName","mapResult","idMap","existCpt","keyInfo","idNum","compressBatches","batchA","batchB","makeMap","sourceBatch","otherMap","dataIndices","otherDataIndices","j","lenj","mapToArray","isData","mapA","mapB","queryDataIndex","indexOfName","makeGetter","hostObj","parsedKey","match","queryType","includeMainTypes","queryParam","queryComponents","dataDimToCoordDim","dataDim","getDimension","dimItem","getDimensionInfo","coordDim","coordDimToDataDim","dimName","coordDimIndex","otherDimToDataDim","otherDim","otherDims","610","_trim","str","quantityExponent","LN10","linearMap","domain","range","clamp","subDomain","subRange","parsePercent","percent","all","parseFloat","precision","returnStr","toFixed","asc","arr","sort","getPrecision","count","getPrecisionSafe","eIndex","dotIndex","getPixelPrecision","dataExtent","pixelExtent","dataQuantity","sizeQuantity","isFinite","getPercentWithPrecision","valueList","sum","acc","digits","pow","votesPerQuota","targetSeats","seats","votes","currentSum","remainder","Number","NEGATIVE_INFINITY","maxId","MAX_SAFE_INTEGER","remRadian","radian","pi2","isRadianAroundZero","TIME_REG","getTimezoneOffset","exec","timezoneOffset","timeOffset","quantity","nice","nf","exponent","exp10","f","reformIntervals","littleThan","lg","interval","close","curr","currClose","isNumeric","v","611","ArrayCtor","Float32Array","out","copy","v1","v2","scaleAndAdd","sqrt","lenSquare","div","dot","scale","s","normalize","d","distance","distanceSquare","negate","lerp","t","lengthSquare","dist","distSquare","612","Displayable","PathProxy","pathContain","Pattern","getCanvasPattern","pathProxyForDraw","__dirtyPath","strokeContainThreshold","brush","ctx","prevEl","hasStroke","hasFill","hasFillGradient","hasStrokeGradient","hasFillPattern","hasStrokePattern","setTransform","__dirty","_fillGradient","getGradient","_strokeGradient","fillStyle","strokeStyle","lineDash","lineDashOffset","ctxLineDash","setLineDash","getGlobalScale","setScale","beginPath","setLineDashOffset","buildPath","rebuildPath","restoreTransform","text","drawRectText","shapeCfg","inBundle","createPathProxy","_rect","needsUpdateRect","rectWithStroke","_rectWithStroke","w","lineScale","getLineScale","contain","localPos","transformCoordToLocal","containStroke","dirtyPath","refresh","__clipTarget","animateShape","loop","animate","attrKV","setShape","Sub","defaultShape","thisShape","613","numberUtil","textContain","addCommas","toCamelCase","upperCaseFirst","group1","charAt","encodeHTML","String","TPL_VAR_ALIAS","wrapVar","varName","seriesIdx","tpl","paramsList","encode","seriesLen","alias","k","formatTplSimple","extraCssText","s2d","formatTime","isUTC","date","utc","M","h","capitalFirst","substr","truncateText","getTextRect","614","doGet","pathArr","getParent","getParentMethod","clazzUtil","mergeOption","ignoreParent","parsePath","thisParentModel","isEmpty","setReadOnly","properties","customizeGetParent","enableClassExtend","615","navigator","os","ua","firefox","ie","edge","touchEventsSupported","pointerEventsSupported","userAgent","616","checkClassType","superCall","superApply","IS_CONTAINER","hasOwn","ret","RootClass","mandatoryMethods","$constructor","proto","ExtendedClass","enableClassManagement","entity","options","makeContainer","container","registerClass","componentMainType","throwWhenNotFound","getClassesByMainType","o","hasClass","getAllClassMainTypes","types","hasSubTypes","registerWhenExtend","originalExtend","617","vec2","v2ApplyTransform","union","other","lt","rb","lb","rt","maxX","maxY","sx","sy","translate","intersect","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","plain","618","getDependencies","deps","arrayPush","componentUtil","defaultOption","dependentModels","uid","layoutMode","extraOpt","getUID","mergeDefaultAndTheme","inputPositionParams","getLayoutParams","themeModel","getTheme","getDefaultOption","mergeLayoutParam","optionUpdated","newCptOption","isInit","optList","Class","getReferringComponents","enableSubTypeDefaulter","enableTopologicalTravel","619","boxLayout","orient","gap","maxWidth","maxHeight","currentLineMaxSize","eachChild","nextX","nextY","nextChild","childAt","nextChildRect","moveX","newline","moveY","LOCATION_PARAMS","HV_NAMES","box","vbox","hbox","getAvailableSize","positionInfo","containerRect","margin","containerWidth","containerHeight","getLayoutRect","verticalMargin","horizontalMargin","positionElement","hv","boundingMode","needLocalTransform","elPos","dx","dy","sizeCalculable","hvIdx","targetOption","newOption","names","newParams","newValueCount","merged","mergedValueCount","hasProp","hasValue","ignoreSize","hResult","vResult","copyLayoutParams","620","OrdinalScale","IntervalScale","Scale","axisHelper","getScaleExtent","axisDataLen","boundaryGap","span","scaleType","getMin","getMax","fixMin","fixMax","originalExtent","getExtent","setBlank","getNeedCrossZero","niceScaleExtent","extent","splitNumber","base","setExtent","niceExtent","minInterval","maxInterval","setInterval","createScaleByModel","axisType","getCategories","ifAxisCrossZero","axis","getAxisLabelInterval","tickCoords","labels","font","isAxisHorizontal","textSpaceTakenRect","autoLabelInterval","accumulatedLabelInterval","step","tickCoord","getFormattedLabels","labelFormatter","getTicksLabels","ticks","getTicks","tick","getAxisRawValue","getLabel","621","getTextWidth","DEFAULT_FONT","textWidthCache","textLines","l","measureText","textWidthCacheCounter","TEXT_CACHE_MAX","truncate","getRichTextRect","getPlainTextRect","contentBlock","parsePlainText","outerWidth","outerHeight","adjustTextX","adjustTextY","lineHeight","parseRichText","adjustTextPositionOnRect","halfHeight","ellipsis","prepareTruncateOptions","truncateSingleLine","maxIterations","minChar","cnCharWidth","ascCharWidth","placeholder","contentWidth","ellipsisWidth","textLine","subLength","estimateLength","charCode","charCodeAt","getLineHeight","padding","lines","truncOuterHeight","truncOuterWidth","lastIndex","STYLE_REG","matchedIndex","pushTokens","substring","contentHeight","pendingList","stlPadding","truncateWidth","truncateHeight","line","tokens","token","tokenStyle","styleName","tokenHeight","tokenWidth","tokenWidthNotSpecified","percentWidth","bgImg","imageHelper","findExistImage","isImageReady","paddingW","remianTruncWidth","parseInt","block","isEmptyStr","strs","isLineHolder","tokensLen","makeFont","textFont","622","isAroundZero","EPSILON","isNotAroundZero","cubicAt","p0","p1","p2","p3","onet","cubicDerivativeAt","cubicRootAt","roots","c","A","B","C","n","t1","disc","K","t2","discSqrt","mathSqrt","Y1","Y2","mathPow","ONE_THIRD","T","theta","acos","ASqrt","tmp","cos","THREE_SQRT","sin","t3","cubicExtrema","extrema","cubicSubdivide","p01","p12","p23","p012","p123","p0123","cubicProjectPoint","x0","y0","x3","y3","prev","next","d1","d2","_v0","_t","_v1","v2DistSquare","EPSILON_NUMERIC","_v2","quadraticAt","quadraticDerivativeAt","quadraticRootAt","quadraticExtremum","divider","quadraticSubdivide","quadraticProjectPoint","v2Create","623","m1","m2","out0","out1","out2","out3","out4","out5","rotate","rad","aa","ac","atx","ab","ad","aty","st","ct","vx","vy","det","624","fmt","undefined","M+","getMonth","D+","getDate","h+","getHours","H+","m+","getMinutes","s+","getSeconds","q+","S","getMilliseconds","week","0","1","2","3","4","5","6","RegExp","$1","getFullYear","getDay","625","clientToLocal","calculate","defaultGetZrXY","layerX","offsetX","zrX","zrY","layerY","offsetY","clientX","clientY","normalizeEvent","touch","targetTouches","changedTouches","zrDelta","wheelDelta","detail","addEventListener","isDomLevel2","attachEvent","removeEventListener","detachEvent","stop","preventDefault","stopPropagation","cancelBubble","returnValue","Dispatcher","626","arrySlice","_$handlers","isSilent","newList","argLen","triggerWithContext","627","clampCssByte","clampCssAngle","clampCssFloat","parseCssInt","parseCssFloat","cssHueToRgb","p","setRgba","r","copyRgba","putToCache","colorStr","rgbaArr","lastRemovedArr","colorCache","put","cached","kCSSColorTable","op","ep","fname","alpha","hsla2rgba","iv","hsla","rgba","rgba2hsla","H","R","G","vMin","vMax","delta","L","deltaR","deltaG","deltaB","level","toHex","fastMapToColor","normalizedValue","colors","leftIndex","rightIndex","ceil","leftColor","rightColor","dv","mapToColor","fullOutput","modifyHSL","modifyAlpha","arrColor","LRU","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","628","__webpack_exports__","listLoadMixin","chartDataMixin","dateMixin","__WEBPACK_IMPORTED_MODULE_0_common_js_util__","__WEBPACK_IMPORTED_MODULE_1_vux_src_tools_date_format_js__","__WEBPACK_IMPORTED_MODULE_1_vux_src_tools_date_format_js___default","methods","_refresh","_loadMore","loadMore","dataObj","columns","rows","bars","filters","formatDate","629","collectAxesInfo","globalTooltipModel","globalAxisPointerModel","linksOption","linkGroups","saveTooltipAxisInfo","fromTooltip","triggerTooltip","axisPointerModel","axisPointerShow","isHandleTrigger","makeAxisPointerModel","baseTooltipModel","snap","makeKey","involveSeries","axisInfo","axesInfo","useHandle","seriesModels","axesInfoInCoordSys","seriesInvolved","groupIndex","getLinkGroupIndex","linkGroup","mapper","axisPointerEnabled","coordSysKey","coordSysAxesInfo","coordSysMap","coordSysModel","getAxes","getTooltipAxes","triggerAxis","cross","tooltipAxes","baseAxes","otherAxes","tooltipAxisPointerModel","volatileOption","field","labelOption","label","show","crossStyle","lineStyle","collectSeriesInfo","seriesTooltipTrigger","seriesTooltipShow","getAxis","dim","seriesDataCount","axisModel","linkOption","checkPropInLink","linkPropValue","axisPropValue","collect","fixValue","getAxisInfo","reverse","isBlank","getAxisPointerModel","630","transferProperties","TRANSFERABLE_PROPERTIES","__wrappedMethods","propName","DefaultDataProvider","dataArray","_array","normalizeDimensions","cloneListForMapAndSample","original","excludeDimensions","allDimensions","hostModel","_storage","originalStorage","dimStore","globalObj","Float64Array","Int32Array","dataCtors","float","int","ordinal","time","DataDiffer","pure","getItem","dimensionInfos","dimensionNames","dimensionName","dimensionInfo","stackable","_dimensionInfos","indices","_nameList","_idList","_optionModels","_visual","_layout","_itemVisuals","_itemLayouts","_graphicEls","_rawData","_extent","listProto","hasItemOption","initData","nameList","dimValueGetter","isDataArray","nameDimIdx","dimensionInfoMap","size","idList","nameRepeatCount","itemName","DataCtor","stackedValue","getValues","getDataExtent","dimData","dimExtent","getSum","rawIndex","mid","indicesOfNearest","maxDistance","nearestIndices","minDist","MAX_VALUE","minDiff","diff","rawIdx","getId","dims","dimSize","filterSelf","newIndices","keep","mapArray","tmpRetValue","retValue","downSample","dimension","rate","sampleValue","sampleIndex","targetStorage","originalIndices","frameValues","frameIndices","frameSize","otherList","otherIdList","setVisual","setLayout","getLayout","getItemLayout","setItemLayout","clearItemLayouts","itemVisual","setItemVisual","setItemDataAndSeriesIndex","setItemGraphicEl","getItemGraphicEl","eachItemGraphicEl","cloneShallow","dimensionInfoList","wrapMethod","injectFunction","originalMethod","res","TRANSFERABLE_METHODS","CHANGABLE_METHODS","631","completeDimensions","sysDims","applyDim","resultItem","OTHER_DIMS","coordDimNameMap","genName","fromZero","dimsDef","encodeDef","dataDimNameMap","dimCount","retrieveValue","sysDimItem","sysDimItemDimsDef","dimDefItem","userDimName","tooltipName","dataDims","resultDimIdx","availDimIdx","sysDimIndex","sysDimItemOtherDims","extra","extraPrefix","extraFromZero","isExtraCoord","guessOrdinal","tooltip","632","setting","_setting","_interval","scaleProto","getSetting","unionExtent","unionExtentFromData","start","end","thisExtent","_isBlank","633","config","debugMode","634","Element","_children","__storage","children","childOfName","childCount","_doAdd","addBefore","nextSibling","addToStorage","addChildrenToStorage","delFromStorage","delChildrenFromStorage","removeAll","includeChildren","tmpRect","tmpMat","invisible","childRect","635","curve","bbox","CMD","Q","Z","min2","max2","mathCos","mathSin","mathAbs","hasTypedArray","notSaveData","_saveData","_xi","_yi","_x0","_y0","_ux","_uy","_len","_lineDash","_dashOffset","_dashIdx","_dashSum","moveTo","addData","lineTo","exceedUnit","_needsDash","_dashedLineTo","bezierCurveTo","_dashedBezierTo","quadraticCurveTo","_dashedQuadraticTo","arc","startAngle","endAngle","anticlockwise","arcTo","radius","closePath","toStatic","lineDashSum","offset","setData","appendPath","appendSize","appendPathData","cmd","_expandData","_prevCmd","newData","dash","dashSum","nDash","bezierLen","tmpLen","xi","yi","fromLine","fromCubic","fromQuadratic","rx","ry","fromArc","ux","uy","dTheta","psi","fs","scaleX","scaleY","isEllipse","636","_coordinateSystems","coordinateSystemCreators","coordinateSystems","creater","coordinateSystemCreator","637","excludes","includes","638","roundNumber","_intervalPrecision","getInterval","_niceExtent","getIntervalPrecision","intervalScaleGetTicks","niceTicks","intervalScaleNiceTicks","intervalPrecision","niceTickExtent","expandSize","639","Triangle","Diamond","Pin","angle","asin","tanX","tanY","cpLen","cpLen2","Arrow","symbolCtors","roundRect","square","circle","diamond","pin","arrow","triangle","symbolShapeMakers","symbolBuildProxies","Symbol","symbolType","beforeBrush","proxySymbol","symbolPathSetColor","symbolStyle","symbolShape","__isEmptyBrush","symbolUtil","createSymbol","symbolPath","setColor","640","classUtil","colorPaletteMixin","legendDataProvider","visualColorAccessPath","getInitialData","fillDataTextStyle","newSeriesOption","getLinkedData","getRawData","getBaseAxis","multipleSeries","formattedValue","setEachItem","dimIdx","valStr","vertially","tooltipDims","colorEl","animationEnabled","getColorFromPalette","scope","getAxisTooltipData","getTooltipPosition","641","Chart","elSetState","state","toggleHighlight","dataIdx","highlight","downplay","chartProto","642","random","subTypeDefaulters","registerSubTypeDefaulter","defaulter","determineSubType","componentTypeMain","dependencyGetter","makeDepndencyGraph","fullNameList","graph","noEntryList","thisItem","createDependencyGraphItem","originalDeps","availableDeps","getAvailableDependencies","entryCount","dependentName","predecessor","thatItem","successor","dep","topologicalTravel","targetNameList","callback","removeEdge","succComponentType","removeEdgeAndAdd","targetNameSet","currComponentType","currVertex","isInTargetNameSet","643","minRunLength","DEFAULT_MIN_MERGE","makeAscendingRun","lo","hi","compare","runHi","reverseRun","binaryInsertionSort","pivot","gallopLeft","hint","lastOffset","maxOffset","gallopRight","TimSort","pushRun","_runStart","_runLength","runStart","stackSize","runLength","mergeRuns","mergeAt","forceMergeRuns","start1","length1","start2","length2","mergeLow","mergeHigh","cursor1","cursor2","dest","count1","count2","exit","_minGallop","minGallop","DEFAULT_MIN_GALLOPING","customCursor","customDest","remaining","ts","minRun","force","644","Style","__clipPaths","RectText","draggable","dragging","culling","cursor","afterBrush","rectContain","coord","animateStyle","useStyle","645","Gradient","addColorStop","646","imageOnLoad","cachedImgObj","__cachedImgObj","onload","pending","pendingWrap","cbPayload","hostEl","globalImageCache","newImageOrSrc","createOrUpdateImage","__zrImageSrc","src","647","normalizeStyle","VALID_TEXT_ALIGN","textBaseline","VALID_TEXT_VERTICAL_ALIGN","renderPlainText","setCtx","__textCotentBlock","boxPos","getBoxPosition","baseX","baseY","applyTextRotation","boxY","textX","textY","needDrawBg","needDrawBackground","boxX","drawBackground","getTextXForPadding","getStroke","getFill","strokeText","fillText","renderRichText","drawRichText","xLeft","lineTop","xRight","tokenCount","usedWidth","lineXLeft","lineXRight","placeToken","origin","textOrigin","isPlainBg","roundRectHelper","onBgImageLoaded","drawImage","blockHeiht","__currentValues","maxValue","lastIndexOf","center","middle","normalizeTextStyle","renderText","needDrawText","648","firstDataNotNull","ifNeedCompleteOrdinalData","sampleItem","createListFromArray","coordSysName","creators","registeredCoordSys","completeDimOpt","categoryIndex","createNameList","categories","categoryAxesModels","isStackable","getDimTypeByAxis","categoryAxisModel","categoryDim","dataLen","cartesian2d","axesModels","xAxisModel","yAxisModel","xAxisType","yAxisType","isXAxisCateogry","isYAxisCategory","singleAxis","singleAxisModel","singleAxisType","isCategory","single","polar","polarModel","angleAxisModel","findAxisModel","radiusAxisModel","radiusAxisType","angleAxisType","isAngleAxisCateogry","isRadiusAxisCateogry","geo","649","makeAxisEventDataBase","endTextLayout","textRotate","rotationDiff","inverse","onLeft","tooltipOpt","fixMinMaxLabelShow","textEls","showMinLabel","showMaxLabel","firstLabel","nextLabel","lastLabel","prevLabel","isTwoLabelOverlapped","current","labelLayout","firstRect","nextRect","mRotationBack","AxisBuilder","labelOffset","nameDirection","tickDirection","labelDirection","dumbGroup","updateTransform","_transform","_dumbGroup","hasBuilder","builders","getGroup","axisLine","pt1","pt2","lineCap","getLineStyle","axisTick","tickModel","lineStyleModel","tickLen","tickInterval","labelInterval","ticksCoords","getTicksCoords","ifIgnoreOnTick","axisLabel","axisLabelShow","labelMargin","labelRotation","innerTextLayout","categoryData","triggerEvent","tickVal","itemLabelModel","textColor","getTextColor","dataToCoord","pos","labelStr","textEl","targetType","decomposeTransform","axisName","nameLocation","gapSignal","nameRotation","axisNameAvailableWidth","truncateOpt","nameTruncateMaxWidth","truncatedText","formatterParams","__fullText","__truncatedText","content","axisRotation","rawTick","650","fixExtentWithBands","nTick","normalizedExtent","onBand","_labelInterval","containData","coordToData","pointToData","alignWithLabel","bands","getBands","coords","getLabelsCoords","getBandWidth","axisExtent","getLabelInterval","isHorizontal","651","rangeStart","rangeEnd","getCoordSysModel","setRange","resetRange","657","getSymbolSize","symbolSize","getScale","seriesScope","updateData","driftSymbol","drift","labelHelper","symbolProto","_createSymbol","_symbolType","stopSymbolAnimation","toLastFrame","getSymbolPath","setZ","setDraggable","_updateCommon","_seriesModel","normalStyleAccessPath","emphasisStyleAccessPath","normalLabelAccessPath","emphasisLabelAccessPath","itemStyle","hoverItemStyle","symbolRotate","symbolOffset","hoverLabelModel","hoverAnimation","cursorStyle","getItemStyle","elStyle","opacity","valueDim","findLabelValueDim","normalText","onEmphasis","ratio","onNormal","fadeOut","658","updateAxisPointer","axisView","forceRender","AxisView","getAxisPointerClass","axisPointerClass","axisPointerModelHelper","_axisPointer","disposeAxisPointer","axisPointer","axisPointerClazz","registerAxisPointerClass","659","gridModel","grid","rawAxisPosition","axisPosition","onZero","axisDim","getRect","rectBound","axisOffset","posBound","otherAxis","onZeroAxisIndex","onZeroCoord","toGlobalCoord","dirMap","labelInside","660","dataToPoint","661","initGlobalListeners","useHandler","dis","makeDispatchAction","records","record","dispatchTooltipFinally","pendings","initialized","doEnter","onLeave","actuallyPayload","showLen","showTip","hideLen","hideTip","currTrigger","globalListener","unregister","662","confineInContainer","viewWidth","viewHeight","buildElStyle","axisPointerType","styleModel","getAreaStyle","buildLabelElOption","elOption","labelPos","getValueLabel","paddings","textRect","align","verticalAlign","bgColor","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","seriesDataIndices","seriesData","idxItem","dataParams","getTransformedPosition","layoutInfo","buildCartesianSingleLabelElOption","textLayout","makeLineShape","xDimIndex","makeRectShape","xy","wh","makeSectorShape","r0","clockwise","663","getAxisType","axisModelCreator","AxisModel","gridIndex","gridId","extraOption","664","colorIdx","colorNameMap","colorPalette","665","fixExtent","666","lib","ORIGIN_METHOD","RATE","fn","delay","debounce","lastExec","getTime","timer","currCall","debounceNextCall","lastCall","thisDelay","thisDebounce","clearTimeout","setTimeout","debounceDelay","createOrUpdate","fnAttr","throttleType","originFn","lastThrottleType","667","guid","Animatable","clipPath","beforeUpdate","afterUpdate","hide","setClipPath","addSelfToZr","removeClipPath","removeSelfFromZr","animators","addAnimator","removeAnimator","668","defaultGetter","defaultSetter","interpolateNumber","interpolateString","interpolateArray","arrDim","len2","fillArr","arr0","arr1","arr0Len","arr1Len","arraySlice","isArraySame","catmullRomInterpolateArray","catmullRomInterpolate","v0","cloneValue","rgba2String","getArrayDim","keyframes","lastValue","createTrackClip","animator","easing","oneTrackDone","forceAnimate","getter","_getter","setter","_setter","useSpline","trackLen","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","_target","lastFrame","lastFramePercent","onframe","frame","clip","Clip","life","_loop","_delay","ondestroy","Animator","_tracks","_clipCount","_doneList","_onframeList","_clipList","when","tracks","during","pause","_paused","resume","isPaused","_doneCallback","doneList","lastClip","clipCount","addClip","oldOnFrame","forwardToLast","clipList","removeClip","done","getClips","669","requestAnimationFrame","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","670","PI2","normalizeRadian","671","LinkedList","head","tail","linkedListProto","insert","entry","Entry","insertEntry","maxSize","_list","_map","_maxSize","_lastRemovedEntry","LRUProto","removed","leastUsedEntry","672","idStart","673","674","ZImage","_image","sWidth","sHeight","675","repeat","createPattern","676","createLinearGradient","createRadialGradient","textHelper","STYLE_COMMON_PROPS","transformText","blend","prevStyle","firstDraw","globalAlpha","globalCompositeOperation","otherStyle","newStyle","canvasGradient","styleProto","677","shadowTemp","orignalBrush","modified","clipPaths","678","smoothSpline","smoothBezier","smooth","controlPoints","smoothConstraint","cp1","cp2","679","r1","r2","r3","r4","total","680","mIdentity","transformableProto","parentHasTransform","invTransform","tmpTransform","atan2","transformCoordToGlobal","683","xAxis","yAxis","684","nameRotate","nameTruncate","nameTextStyle","nameGap","inside","splitLine","splitArea","areaStyle","categoryAxis","valueAxis","timeAxis","logAxis","logBase","685","isAxisUsedInTheGrid","getLabelUnionRect","axisLabelModel","labelCount","isLabelIgnored","singleRect","Grid","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","fixAxisOnZero","axesMap","otherAxisDim","axes","canNotOnZeroToAxis","updateAxisTransfrom","coordBase","axisExtentSum","toLocalCoord","findAxesModels","axesTypes","isCartesian2D","Cartesian2D","Axis2D","gridProto","_updateScale","ignoreContainLabel","adjustAxes","axesList","gridRect","getBoxLayoutParams","labelUnionRect","axisIndex","axesMapOnDim","getCartesian","xAxisIndex","yAxisIndex","coordList","getCartesians","_findConvertTarget","cartesian","coordsList","createAxisCreator","axisPositionUsed","axesCount","addAxis","baseAxis","getOtherAxis","grids","686","legendModels","findComponents","eachSeriesByType","isSelected","687","paletteScope","eachRawSeriesByType","dataAll","idxMap","isSeriesFiltered","filteredIdx","singleDataColor","688","defaultSymbolType","legendSymbol","symbol","itemSymbolType","itemSymbolSize","699","chartInstance","echartsAPIList","700","SymbolDraw","symbolCtor","_symbolCtor","symbolNeedsDraw","isIgnore","symbolDrawProto","oldData","_data","SymbolCtor","newIdx","symbolEl","oldIdx","execute","enableAnimation","701","labelDims","702","703","legendHoverLink","clipOverflow","smoothMonotone","showSymbol","showAllSymbol","connectNulls","sampling","hoverLayerThreshold","704","isPointsSame","points1","points2","getSmooth","getAxisExtentWithGap","getGlobalExtent","halfBandWidth","dir","sign","getStackedOnPoints","valueStart","baseDataOffset","stackedOnSameSign","stackedData","createGridClipShape","hasAnimation","xExtent","yExtent","createPolarClipShape","angleAxis","getAngleAxis","radiusAxis","getRadiusAxis","radiusExtent","angleExtent","RADIAN","createClipShape","turnPointsIntoStep","stepTurnAt","baseIndex","stepPoints","nextPt","pt","stepPt","stepPt2","getVisualGradient","visualMetaList","visualMeta","stops","stopLen","outerColors","minCoord","maxCoord","coordSpan","unshift","gradient","lineAnimationDiff","polyHelper","lineGroup","symbolDraw","_symbolDraw","_lineGroup","areaStyleModel","isCoordSysPolar","prevCoordSys","_coordSys","polyline","_polyline","polygon","_polygon","isAreaChart","stackedOnPoints","isSymbolIgnore","_getSymbolIgnoreFunc","__temp","_step","_newPolygon","_stackedOnPoints","_points","_updateAnimation","_newPolyline","visualColor","lineJoin","stackedOnSmooth","getAxesByScale","stackedOnCurrent","stackedOnNext","__points","updatedDataInfo","diffStatus","idx1","ptIdx","705","getStackedOnPoint","diffData","diffResult","oldStackedOnPoints","newStackedOnPoints","oldCoordSys","newCoordSys","currPoints","nextPoints","currStackedPoints","nextStackedPoints","sortedIndices","rawIndices","diffItem","pointAdded","currentPt","sortedCurrPoints","sortedNextPoints","sortedCurrStackedPoints","sortedNextStackedPoints","sortedStatus","706","isPointNull","drawSegment","segLen","allLen","smoothMin","smoothMax","prevIdx","v2Copy","cp0","nextIdx","nextP","ratioNextSeg","prevP","lenPrevSeg","lenNextSeg","vec2Min","vec2Max","getBoundingBox","ptMin","ptMax","fixClipWithShadow","stackedOnBBox","707","708","cartesianAxisHelper","axisBuilderAttrs","selfBuilderAttrs","CartesianAxisView","oldAxisGroup","_axisGroup","axisBuilder","_splitLine","splitLineModel","lineColors","lineInterval","lineCount","colorIndex","_splitArea","splitAreaModel","areaColors","prevX","prevY","areaInterval","709","axisTrigger","link","710","AxisPointerModel","triggerOn","animationDurationUpdate","shadowStyle","borderColor","borderWidth","handle","icon","711","AxisPonterView","disopse","712","BaseAxisPointer","animationModel","moveAnimation","propsEqual","lastProp","lastProps","newProps","equals","updateLabelShowHide","labelEl","getHandleTransProps","trans","updateMandatoryProps","eventTool","_group","_lastGraphicKey","_handle","_dragging","_lastValue","_lastStatus","_payloadInfo","animationThreshold","_axisModel","_axisPointerModel","makeElOption","graphicKey","_moveAnimation","determineAnimation","doUpdateProps","updatePointerEl","updateLabelEl","createPointerEl","createLabelEl","_renderHandle","isCategoryAxis","useSnap","pointerOption","pointer","pointerEl","updateHandleTransform","handleModel","onmousemove","onmousedown","_onHandleDragMove","ondragend","_onHandleDragEnd","includeStyles","handleSize","_moveHandleToValue","getHandleTransform","_doDispatchAxisPointer","payloadInfo","cursorPoint","tooltipOption","doClear","buildLabel","713","getAxisDimIndex","viewHelper","CartesianAxisPointer","otherExtent","pixelValue","pointerShapeBuilder","currPosition","cursorOtherValue","tooltipOptions","targetShape","shadow","bandWidth","714","illegalPoint","findPointFromSeries","isIllegalPoint","inputAxesInfo","shouldHide","outputFinder","showValueMap","dataByCoordSys","updaters","showPointer","showTooltip","coordSysContainsPoint","inputAxisInfo","findInputAxisInfo","processOnAxis","linkTriggers","tarAxisInfo","tarKey","srcAxisInfo","srcKey","srcValItem","makeMapperParam","updateModelActually","dispatchTooltipActually","dispatchHighDownActually","newValue","dontSnap","buildPayloadsBySeries","payloadBatch","snapToValue","seriesNestestValue","nestestValue","modelHelper","coordSysItem","coordSysId","coordSysIndex","coordSysType","coordSysMainType","dataByAxis","axisId","valueLabelOpt","outputAxesInfo","valItem","lastHighlights","newHighlights","toHighlight","toDownplay","715","boxLayoutParams","viewportSize","makeBackground","716","717","LegendModel","selected","_updateData","legendData","hasSelected","select","availableNames","getSeries","_availableNames","unSelect","toggleSelected","borderRadius","itemGap","itemWidth","itemHeight","inactiveColor","selectedMode","718","dispatchSelectAction","dispatchHighlightAction","dataName","dispatchDownplayAction","symbolCreator","listComponentHelper","layoutUtil","newlineDisabled","_contentGroup","_backgroundEl","getContentGroup","legendModel","resetInner","itemAlign","renderInner","mainRect","layoutInner","layoutRect","contentGroup","legendDrawnMap","selectMode","getSeriesByName","legendSymbolType","_createItem","eachRawSeries","itemGroup","itemIcon","tooltipModel","legendGlobalTooltipModel","hitRect","legendIndex","__legendDataIndex","contentRect","719","legendSelectActionHandler","selectedMap","isToggleSelect","isItemSelected","720","filterSeries","721","722","assembleTransition","transitionText","vendors","vendorPrefix","assembleFont","cssText","assembleCssText","transitionDuration","zrColor","borderName","camelCase","TooltipContent","_x","_y","appendChild","_container","_show","_hideTimeout","onmouseenter","_enterable","_inContent","eventUtil","dispatch","onmouseleave","hideLater","_hideDelay","stl","currentStyle","defaultView","getComputedStyle","domStyle","display","innerHTML","setContent","setEnterable","enterable","getSize","viewportRootOffset","getViewportRootOffset","offsetLeft","offsetTop","isShow","723","showContent","alwaysShowContent","displayMode","confine","showDelay","hideDelay","animationEasingUpdate","724","buildTooltipModel","modelCascade","resultModel","refixTooltipPosition","gapH","gapV","getOuterSize","confineTooltipPosition","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","calcTooltipPosition","contentSize","domWidth","domHeight","rectWidth","rectHeight","isCenterAlign","axisPointerViewHelper","proxyRect","tooltipContent","_tooltipContent","_tooltipModel","_ecModel","_lastDataByCoordSys","_alwaysShowContent","_initGlobalListener","_keepShow","_tryShow","_hide","_lastX","_lastY","_refreshUpdateTimeout","manuallyShowTip","_ticket","_manuallyAxisShowTip","pointInfo","findHover","manuallyHideTip","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","_showTimout","singleDefaultHTML","singleParamsList","singleTooltipModel","itemCoordSys","axisValue","seriesDefaultHTML","valueLabel","axisValueLabel","firstLine","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","tooltipTrigger","defaultHtml","asyncTicket","subTooltipModel","html","cbTicket","vAlign","viewSize","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisItemCoordSys","thisDataByAxis","lastItem","indexAxis","lastIndices","lastIdxItem","newIdxItem","725","axisDefault","AXIS_TYPES","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","726","coordExtent","727","dimAxisMapper","_axes","Cartesian","_dimList","_dataCoordConvert","input","dimList","output","728","axisX","axisY","729","containLabel","730","defaultKeyGetter","oldArr","newArr","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","keyArr","keyGetterName","dataDiffer","existence","_add","_update","_remove","oldDataIndexMap","newDataIndexMap","oldDataKeyArr","newDataKeyArr","731","axisModelCommonMixin","createList","createScale","mixinAxisModelCommonMethods","732","coordDims","733","maskColor","mask","labelRect","734","mergeTheme","themeItem","initBase","baseOption","OPTION_INNER_KEY","_seriesIndices","globalDefault","getComponentsByTypes","componentsMap","existComponent","createSeriesIndices","filterBySubType","components","cpt","assertSeriesInitialized","_optionManager","mountOption","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","visitComponent","newCptOptionList","ComponentModelClass","newCptTypes","componentOption","cpts","isIdArray","isNameArray","queryCond","q","indexAttr","idAttr","nameAttr","queryResult","oneSeries","getSeriesByType","rawSeriesIndex","getCurrentSeriesIndices","filteredSeries","componentTypes","735","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","parseRawOption","rawOption","isNew","mediaDefault","timelineOptions","mediaList","timelineOpt","timeline","media","singleMedia","preProcess","applyMediaQuery","ecWidth","ecHeight","realMap","aspectratio","applicatable","matched","QUERY_REG","operator","realAttr","real","expect","indicesEquals","indices1","indices2","oldOption","newCptOpt","oldCptOpt","oldOptionBackup","newParsedOption","isRecreate","optionBackup","timelineModel","getCurrentIndex","736","platform","animationDuration","progressiveThreshold","useUTC","737","738","739","getBorderLineDash","lineType","740","getLineDash","dotSize","dashSize","741","graphicUtil","PATH_COLOR","noDefault","742","compatLayoutProperties","LAYOUT_PROPERTIES","compatStyle","COMPATITABLE_COMPONENTS","COMPATITABLE_SERIES","seriesOpt","clockWise","pointerColor","dataRange","visualMap","componentName","743","compatItemStyle","itemStyleOpt","POSSIBLE_STYLES","normalItemStyleOpt","emphasisItemStyleOpt","compatTextStyle","labelOptSingle","compatLabelTextStyle","labelOpt","processSeries","upperLabel","edgeLabel","markPoint","markLine","markArea","mpData","mlData","toArr","toObj","axisOpt","parallel","parallelOpt","parallelAxisDefault","calendar","calendarOpt","radar","radarOpt","geoOpt","744","samplers","average","nearest","indexSampler","sampler","745","fixRoundingError","originalVal","roundingErrorFix","intervalScaleProto","mathFloor","mathCeil","mathLog","LogScale","_originalScale","originalScale","powVal","__fixMin","__fixMax","approxTickNum","err","746","rank","747","scaleHelper","bisect","TimeScale","stepLvl","_stepLvl","ONE_HOUR","approxInterval","scaleLevelsLen","scaleLevels","yearSpan","ONE_SECOND","ONE_MINUTE","ONE_DAY","748","componentProto","749","encodeColor","colorAccessPath","751","makeEventPacket","eveType","targetInfo","topTarget","gestureEvent","pinchX","pinchY","pinchScale","EmptyProxy","isHover","displayable","SILENT","Draggable","handlerNames","Handler","proxy","painterRoot","_hovered","_lastTouchMoment","mousemove","lastHovered","lastHoveredTarget","hovered","hoveredTarget","setCursor","dispatchToElement","mouseout","innerDom","element","toElement","relatedTarget","parentNode","eventArgs","setCursorStyle","eventHandler","eventPacket","eachOtherLayer","layer","exclude","hoverCheckResult","_downel","_upel","752","returnFalse","createDom","newDom","newDomStyle","Layer","onselectstart","domBack","ctxBack","motionBlur","lastFrameAlpha","initContext","createBackBuffer","clearAll","haveMotionBLur","clearRect","clearColorGradientOrPattern","__canvasGradient","save","fillRect","restore","753","parseInt10","isLayerValid","__builtin__","preProcessLayer","__unusedCount","postProcessLayer","isDisplayableCulled","viewRect","isClipPathChanged","prevClipPaths","doClip","createRoot","domRoot","Painter","root","singleCanvas","_opts","_singleCanvas","rootStyle","zlevelList","_zlevelList","layers","_layers","_layerConfig","_width","_height","mainLayer","_domRoot","_getSize","_progressiveLayers","_hoverlayer","_hoverElements","getViewportRoot","viewportRoot","paintAll","_paintList","refreshHover","_startProgessive","__hoverMir","elMirror","__from","hoverElements","clearHover","hoverLayer","displayableSortFunc","getLayer","originalEl","_doPaintEl","_progressiveToken","_doPaintList","_furtherProgressive","_progress","_clearProgressive","_updateLayerStatus","eachBuiltinLayer","flushProgressiveLayer","currentLayer","currentZLevel","currentProgressiveLayer","layerProgress","progressiveLayerIdx","elZLevel","elFrame","__frame","MAX_PROGRESSIVE_LAYER_NUMBER","renderScope","__progress","__maxProgress","__nextIdxNotProg","forcePaint","prevClipLayer","prevElClipPaths","insertLayer","layersMap","prevLayer","virtual","prevDom","insertBefore","firstChild","eachLayer","getLayers","progressiveLayers","elCountsLastFrame","progressiveElCountsLastFrame","lastProgressiveKey","progressiveLayerCount","frameCount","elProgress","_clearLayer","layerConfig","delLayer","removeChild","clearLayer","findAndDrawOtherLayer","smaller","larger","intermediateLayer","renderToCanvas","imageLayer","displayList","whIdx","cwh","plt","prb","pathToImage","shadowBlurSize","leftMargin","rightMargin","topMargin","bottomMargin","pathTransform","ImageShape","imgShape","754","shapeCompareFunc","Storage","_roots","_displayList","_displayListLen","includeIgnore","updateDisplayList","_updateAndAddDisplayable","userSetClipPath","currentClipPath","parentClipPath","addRoot","delRoot","_renderList","755","Animation","stage","_clips","_running","_time","_pausedTime","_pauseStart","clips","deferredEvents","deferredClips","_needsRemove","fire","_startLoop","756","_life","_initialized","onrestart","easingFuncs","globalTime","deltaTime","_startTime","easingFunc","schedule","restart","arg","757","linear","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","exponentialOut","exponentialInOut","circularIn","circularOut","circularInOut","elasticIn","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","758","_l","759","760","_a","_b","761","isAroundEqual","swapExtrema","windingCubic","nRoots","y0_","y1_","nExtrema","unit","windingQuadratic","y_","x_","windingArc","containPath","isStroke","windingLine","cubic","quadratic","762","763","764","pointPair","GestureMgr","_track","recognize","_doTrack","_recognize","touches","trackItem","recognizers","gestureInfo","pinch","track","pinchEnd","pinchPre","pinchCenter","765","extremity","fromPoints","xDim","yDim","tx","ty","766","eventNameFix","processGesture","gestureMgr","_gestureMgr","setTouchTimer","instance","_touching","_touchTimer","isPointerFromTouch","pointerType","initDomHandler","makeMouseHandler","touchHandlerNames","_handlers","domHandlers","pointerHandlerNames","mouseHandlerNames","HandlerDomProxy","mountHandlers","pointerEventNames","pointerdown","pointerup","pointermove","pointerout","nm","touchstart","mousedown","touchmove","touchend","mouseup","click","handlerDomProxyProto","767","paths","_updatePathDirty","768","globalCoord","769","770","771","v2Min","v2Max","v2Scale","v2Distance","v2Add","isLoop","constraint","prevPoint","nextPoint","cps","d0","772","interpolate","segs","w2","w3","773","774","unitX","unitY","775","someVectorAt","isTangent","cpx2","cpy2","cpx1","cpy1","curveTool","pointAt","tangentAt","776","777","778","779","780","781","782","783","animatingShape","pathSplitted","_animateToShallow","objShallow","propertyCount","784","_dragStart","_drag","_dragEnd","draggingTarget","_draggingTarget","dropTarget","lastDropTarget","_dropTarget","785","processArc","fa","psiDeg","xp","yp","lambda","cxp","cyp","vAngle","u","vRatio","createPathProxyFromString","cs","cc","prevCmd","cpx","cpy","ctlPtx","ctlPty","createPathOptions","pathProxy","transformPath","vMag","pathEls","pathList","pathEl","pathBundle","786","nPoint","mathAtan2","787","delInstance","HandlerProxy","useVML","painterCtors","ZRender","getInstance","registerPainter","rendererType","vml","handerProxy","_needsRefresh","oldDelFromStorage","oldAddToStorage","zLevel","_needsRefreshHover","refreshHoverImmediately","clearAnimation","801","actionInfos","802","barLayoutGrid","803","brushSelector","804","removeRect","removeSector","updateStyle","isPolar","itemStyleModel","getBarItemStyle","labelPositionOutside","setLabel","getLineWidth","rawLayout","BAR_BORDER_WIDTH_QUERY","BarView","coordinateSystemType","_render","isHorizontalOrRadial","elementCreator","newIndex","oldIndex","rectShape","animateProperty","animateTarget","isRadial","sector","sectorShape","fixedLineWidth","signX","signY","805","getMarkerPosition","barMinHeight","barMinAngle","806","807","labelText","808","809","FunnelSeries","_defaultLabelLine","labelLine","labelLineNormalOpt","labelLineEmphasisOpt","minSize","funnelAlign","810","FunnelPiece","hoverIgnore","normalIgnore","funnelPieceProto","opacityAccessPath","firstCreate","_updateLabel","linePoints","labelHoverModel","labelLineModel","labelLineHoverModel","Funnel","funnelPiece","piePiece","811","getViewRect","getSortedIndices","valueArr","isAscending","labelPosition","isLabelInside","labelLineLen","sizeExtent","getLinePoints","offY","812","813","dataSelectableMixin","PieSeries","updateSelectedMap","minAngle","selectedOffset","avoidLabelOverlap","percentPrecision","stillShowZeroSum","animationType","814","updateDataSelected","toggleItemSelected","midAngle","PiePiece","piePieceProto","Pie","sectorGroup","_sectorGroup","isFirstRender","onSectorClick","_createClipPath","itemLayout","815","adjustSingleSide","shiftUp","changeX","isDownList","lastDeltaX","deltaY","deltaX","lastY","upList","downList","avoidOverlap","labelLayoutList","leftList","rightList","hasLabelRotate","labelLineLen2","816","validDataCount","unitRadian","roseType","restAngle","valueSumLargerThanMinAngle","currentAngle","817","818","RadarSeries","indicatorAxes","getIndicatorAxes","radarIndex","819","normalizeSymbolSize","updateSymbols","oldPoints","newPoints","symbolGroup","__dimIdx","getInitialPoints","hoverPolygonIgnore","polygonIgnore","hoverAreaStyleModel","itemHoverStyle","defaultText","820","polarOptArr","polarNotRadar","polarOpt","indicator","polarIndex","821","pointsConverter","822","targetList","_targetList","_selectTargetMap","targetMap","823","824","radarModel","_buildAxes","_buildSplitLineAndArea","axisBuilders","indicatorAxis","getColorIndex","areaOrLine","areaOrLineColorList","showSplitLine","showSplitArea","splitLineColors","splitAreaColors","splitLines","splitAreas","ticksRadius","realSplitNumber","axesTicksPoints","coordToPoint","prevPoints","error","825","IndicatorAxis","826","Radar","_indicatorAxes","getIndicatorModels","indicatorModel","indicatorIndex","closestAxis","minRadianDiff","closestAxisIdx","coodToData","increaseInterval","radarSeries","rawExtent","fixedMin","fixedMax","nicedSplitNumber","halfSplitNumber","radarList","827","defaultsShow","valueAxisDefault","RadarModel","showName","nameFormatter","indicatorModels","indicatorOpt","iNameTextStyle","indName","828","getSeriesStackId","STACK_PREFIX","getAxisKey","getLayoutOnAxis","axisKey","stackId","widthAndOffsets","doCalBarWidthAndOffset","offsetCenter","calBarWidthAndOffset","barSeries","barWidth","barMaxWidth","barGap","barCategoryGap","seriesInfoList","columnsMap","seriesInfo","columnsOnAxis","remainedWidth","autoWidthCount","categoryGap","stacks","barGapPercent","autoWidth","column","lastColumn","widthSum","barWidthAndOffset","lastStackCoords","lastStackCoordsOrigin","columnLayoutInfo","columnOffset","columnWidth","valueAxisStart","lastCoord","lastCoordOrigin","834","innerRows","dimAxisName","axisVisible","meaAxisName","meaAxisType","digit","assign","V","axisSite","isHistogram","labelMap","metrics","showLine","E","keys","legendName","xAxisName","area","nullAddZero","yAxisName","percentShow","limitShowNum","isRing","O","legendLimit","realValue","sequence","ascending","some","remainStatus","totalName","remainName","totalNum","dataSum","default","TypeError","N","JSON","defineProperty","enumerable","configurable","writable","P","dataOrder","tooltipVisible","legendVisible","$","_","order","I","legend","Y","ref","canvasStyle","mixins","beforeConfig","afterConfig","afterSetOption","afterSetOptionOnce","events","Boolean","legendPosition","dataZoom","toolbox","initOptions","themeName","watch","deep","dataHandler","chartLib","chartHandler","computed","chartColor","then","optionsHandler","addMark","_once","echartsLib","$refs","bindEvents","addWatchToProps","_watchers","$props","$watch","created","mounted","beforeDestory","bar","histogram","pie","ring","funnel","waterfall","879","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_slicedToArray__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_slicedToArray___default","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_promise__","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_promise___default","__WEBPACK_IMPORTED_MODULE_2_babel_runtime_regenerator__","__WEBPACK_IMPORTED_MODULE_2_babel_runtime_regenerator___default","__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_asyncToGenerator__","__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_asyncToGenerator___default","__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_extends__","__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_extends___default","__WEBPACK_IMPORTED_MODULE_5_v_charts_lib_chart_min__","__WEBPACK_IMPORTED_MODULE_5_v_charts_lib_chart_min___default","__WEBPACK_IMPORTED_MODULE_6_components_v_header_v_header__","__WEBPACK_IMPORTED_MODULE_6_components_v_header_v_header___default","__WEBPACK_IMPORTED_MODULE_7_base_loading_loading__","__WEBPACK_IMPORTED_MODULE_7_base_loading_loading___default","__WEBPACK_IMPORTED_MODULE_8_vuex__","__WEBPACK_IMPORTED_MODULE_9_common_js_mixin__","__WEBPACK_IMPORTED_MODULE_10_api_config__","__WEBPACK_IMPORTED_MODULE_11_api__","VeChart","VHeader","Loading","_getChart0","_this","mark","_callee","wrap","_context","tag","code","abrupt","sent","_concurrent","_this2","_callee2","_context2","$router","916","sources","mappings","file","sourcesContent","sourceRoot","954","locals"],"mappings":"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","file":"industries/js/1.d3162b6ce42e6dd73bcb.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 1046:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('transition', {\n    attrs: {\n      \"name\": \"slide\"\n    }\n  }, [_c('div', {\n    staticClass: \"analysis-detail\"\n  }, [_c('v-header', {\n    staticClass: \"header\",\n    attrs: {\n      \"title\": _vm.getTitle(_vm.analysisItem)\n    }\n  }), _vm._v(\" \"), _c('div', {\n    staticClass: \"title-wrapper\"\n  }, [_c('h2', [_vm._v(_vm._s(_vm.selectedItem.name))]), _vm._v(\" \"), _c('span', {\n    staticClass: \"time\"\n  }, [_vm._v(_vm._s(_vm._f(\"formatDate\")(_vm.selectedItem.startPoTime)) + \" 至 \" + _vm._s(_vm._f(\"formatDate\")(_vm.selectedItem.endPoTime)))])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"chart\"\n  }, [_c('div', {\n    staticClass: \"chart-title\"\n  }, [_vm._v(\"时间趋势图表\")]), _vm._v(\" \"), _c('ve-chart', {\n    attrs: {\n      \"data\": _vm.normalizLineData(_vm.chartData0),\n      \"settings\": _vm.chartSettings\n    }\n  })], 1), _vm._v(\" \"), _c('loading', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (!_vm.chartData0.times.length),\n      expression: \"!chartData0.times.length\"\n    }],\n    staticClass: \"loading\"\n  })], 1)])\n},staticRenderFns: []}\n\n/***/ }),\n\n/***/ 591:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(954)\n\nvar Component = __webpack_require__(6)(\n  /* script */\n  __webpack_require__(879),\n  /* template */\n  __webpack_require__(1046),\n  /* scopeId */\n  \"data-v-5314579c\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 606:\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/core/util\n */\n\n\n    // 用于处理merge时无法遍历Date等对象的问题\n    var BUILTIN_OBJECT = {\n        '[object Function]': 1,\n        '[object RegExp]': 1,\n        '[object Date]': 1,\n        '[object Error]': 1,\n        '[object CanvasGradient]': 1,\n        '[object CanvasPattern]': 1,\n        // For node-canvas\n        '[object Image]': 1,\n        '[object Canvas]': 1\n    };\n\n    var TYPED_ARRAY = {\n        '[object Int8Array]': 1,\n        '[object Uint8Array]': 1,\n        '[object Uint8ClampedArray]': 1,\n        '[object Int16Array]': 1,\n        '[object Uint16Array]': 1,\n        '[object Int32Array]': 1,\n        '[object Uint32Array]': 1,\n        '[object Float32Array]': 1,\n        '[object Float64Array]': 1\n    };\n\n    var objToString = Object.prototype.toString;\n\n    var arrayProto = Array.prototype;\n    var nativeForEach = arrayProto.forEach;\n    var nativeFilter = arrayProto.filter;\n    var nativeSlice = arrayProto.slice;\n    var nativeMap = arrayProto.map;\n    var nativeReduce = arrayProto.reduce;\n\n    /**\n     * Those data types can be cloned:\n     *     Plain object, Array, TypedArray, number, string, null, undefined.\n     * Those data types will be assgined using the orginal data:\n     *     BUILTIN_OBJECT\n     * Instance of user defined class will be cloned to a plain object, without\n     * properties in prototype.\n     * Other data types is not supported (not sure what will happen).\n     *\n     * Caution: do not support clone Date, for performance consideration.\n     * (There might be a large number of date in `series.data`).\n     * So date should not be modified in and out of echarts.\n     *\n     * @param {*} source\n     * @return {*} new\n     */\n    function clone(source) {\n        if (source == null || typeof source != 'object') {\n            return source;\n        }\n\n        var result = source;\n        var typeStr = objToString.call(source);\n\n        if (typeStr === '[object Array]') {\n            result = [];\n            for (var i = 0, len = source.length; i < len; i++) {\n                result[i] = clone(source[i]);\n            }\n        }\n        else if (TYPED_ARRAY[typeStr]) {\n            var Ctor = source.constructor;\n            if (source.constructor.from) {\n                result = Ctor.from(source);\n            }\n            else {\n                result = new Ctor(source.length);\n                for (var i = 0, len = source.length; i < len; i++) {\n                    result[i] = clone(source[i]);\n                }\n            }\n        }\n        else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n            result = {};\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    result[key] = clone(source[key]);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overwrite=false]\n     */\n    function merge(target, source, overwrite) {\n        // We should escapse that source is string\n        // and enter for ... in ...\n        if (!isObject(source) || !isObject(target)) {\n            return overwrite ? clone(source) : target;\n        }\n\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                var targetProp = target[key];\n                var sourceProp = source[key];\n\n                if (isObject(sourceProp)\n                    && isObject(targetProp)\n                    && !isArray(sourceProp)\n                    && !isArray(targetProp)\n                    && !isDom(sourceProp)\n                    && !isDom(targetProp)\n                    && !isBuiltInObject(sourceProp)\n                    && !isBuiltInObject(targetProp)\n                    && !isPrimitive(sourceProp)\n                    && !isPrimitive(targetProp)\n                ) {\n                    // 如果需要递归覆盖，就递归调用merge\n                    merge(targetProp, sourceProp, overwrite);\n                }\n                else if (overwrite || !(key in target)) {\n                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n                    // NOTE，在 target[key] 不存在的时候也是直接覆盖\n                    target[key] = clone(source[key], true);\n                }\n            }\n        }\n\n        return target;\n    }\n\n    /**\n     * @param {Array} targetAndSources The first item is target, and the rests are source.\n     * @param {boolean} [overwrite=false]\n     * @return {*} target\n     */\n    function mergeAll(targetAndSources, overwrite) {\n        var result = targetAndSources[0];\n        for (var i = 1, len = targetAndSources.length; i < len; i++) {\n            result = merge(result, targetAndSources[i], overwrite);\n        }\n        return result;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @memberOf module:zrender/core/util\n     */\n    function extend(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overlay=false]\n     * @memberOf module:zrender/core/util\n     */\n    function defaults(target, source, overlay) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)\n                && (overlay ? source[key] != null : target[key] == null)\n            ) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    function createCanvas() {\n        return document.createElement('canvas');\n    }\n    // FIXME\n    var _ctx;\n    function getContext() {\n        if (!_ctx) {\n            // Use util.createCanvas instead of createCanvas\n            // because createCanvas may be overwritten in different environment\n            _ctx = util.createCanvas().getContext('2d');\n        }\n        return _ctx;\n    }\n\n    /**\n     * 查询数组中元素的index\n     * @memberOf module:zrender/core/util\n     */\n    function indexOf(array, value) {\n        if (array) {\n            if (array.indexOf) {\n                return array.indexOf(value);\n            }\n            for (var i = 0, len = array.length; i < len; i++) {\n                if (array[i] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * 构造类继承关系\n     *\n     * @memberOf module:zrender/core/util\n     * @param {Function} clazz 源类\n     * @param {Function} baseClazz 基类\n     */\n    function inherits(clazz, baseClazz) {\n        var clazzPrototype = clazz.prototype;\n        function F() {}\n        F.prototype = baseClazz.prototype;\n        clazz.prototype = new F();\n\n        for (var prop in clazzPrototype) {\n            clazz.prototype[prop] = clazzPrototype[prop];\n        }\n        clazz.prototype.constructor = clazz;\n        clazz.superClass = baseClazz;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Object|Function} target\n     * @param {Object|Function} sorce\n     * @param {boolean} overlay\n     */\n    function mixin(target, source, overlay) {\n        target = 'prototype' in target ? target.prototype : target;\n        source = 'prototype' in source ? source.prototype : source;\n\n        defaults(target, source, overlay);\n    }\n\n    /**\n     * Consider typed array.\n     * @param {Array|TypedArray} data\n     */\n    function isArrayLike(data) {\n        if (! data) {\n            return;\n        }\n        if (typeof data == 'string') {\n            return false;\n        }\n        return typeof data.length == 'number';\n    }\n\n    /**\n     * 数组或对象遍历\n     * @memberOf module:zrender/core/util\n     * @param {Object|Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     */\n    function each(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.forEach && obj.forEach === nativeForEach) {\n            obj.forEach(cb, context);\n        }\n        else if (obj.length === +obj.length) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                cb.call(context, obj[i], i, obj);\n            }\n        }\n        else {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    cb.call(context, obj[key], key, obj);\n                }\n            }\n        }\n    }\n\n    /**\n     * 数组映射\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function map(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.map && obj.map === nativeMap) {\n            return obj.map(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                result.push(cb.call(context, obj[i], i, obj));\n            }\n            return result;\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {Object} [memo]\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function reduce(obj, cb, memo, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.reduce && obj.reduce === nativeReduce) {\n            return obj.reduce(cb, memo, context);\n        }\n        else {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                memo = cb.call(context, memo, obj[i], i, obj);\n            }\n            return memo;\n        }\n    }\n\n    /**\n     * 数组过滤\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function filter(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.filter && obj.filter === nativeFilter) {\n            return obj.filter(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                if (cb.call(context, obj[i], i, obj)) {\n                    result.push(obj[i]);\n                }\n            }\n            return result;\n        }\n    }\n\n    /**\n     * 数组项查找\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function find(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        for (var i = 0, len = obj.length; i < len; i++) {\n            if (cb.call(context, obj[i], i, obj)) {\n                return obj[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @param {*} context\n     * @return {Function}\n     */\n    function bind(func, context) {\n        var args = nativeSlice.call(arguments, 2);\n        return function () {\n            return func.apply(context, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @return {Function}\n     */\n    function curry(func) {\n        var args = nativeSlice.call(arguments, 1);\n        return function () {\n            return func.apply(this, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isArray(value) {\n        return objToString.call(value) === '[object Array]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isString(value) {\n        return objToString.call(value) === '[object String]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isObject(value) {\n        // Avoid a V8 JIT bug in Chrome 19-20.\n        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n        var type = typeof value;\n        return type === 'function' || (!!value && type == 'object');\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isBuiltInObject(value) {\n        return !!BUILTIN_OBJECT[objToString.call(value)];\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isDom(value) {\n        return typeof value === 'object'\n            && typeof value.nodeType === 'number'\n            && typeof value.ownerDocument === 'object';\n    }\n\n    /**\n     * Whether is exactly NaN. Notice isNaN('a') returns true.\n     * @param {*} value\n     * @return {boolean}\n     */\n    function eqNaN(value) {\n        return value !== value;\n    }\n\n    /**\n     * If value1 is not null, then return value1, otherwise judget rest of values.\n     * Low performance.\n     * @memberOf module:zrender/core/util\n     * @return {*} Final value\n     */\n    function retrieve(values) {\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            if (arguments[i] != null) {\n                return arguments[i];\n            }\n        }\n    }\n\n    function retrieve2(value0, value1) {\n        return value0 != null\n            ? value0\n            : value1;\n    }\n\n    function retrieve3(value0, value1, value2) {\n        return value0 != null\n            ? value0\n            : value1 != null\n            ? value1\n            : value2;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} arr\n     * @param {number} startIndex\n     * @param {number} endIndex\n     * @return {Array}\n     */\n    function slice() {\n        return Function.call.apply(nativeSlice, arguments);\n    }\n\n    /**\n     * Normalize css liked array configuration\n     * e.g.\n     *  3 => [3, 3, 3, 3]\n     *  [4, 2] => [4, 2, 4, 2]\n     *  [4, 3, 2] => [4, 3, 2, 3]\n     * @param {number|Array.<number>} val\n     * @return {Array.<number>}\n     */\n    function normalizeCssArray(val) {\n        if (typeof (val) === 'number') {\n            return [val, val, val, val];\n        }\n        var len = val.length;\n        if (len === 2) {\n            // vertical | horizontal\n            return [val[0], val[1], val[0], val[1]];\n        }\n        else if (len === 3) {\n            // top | horizontal | bottom\n            return [val[0], val[1], val[2], val[1]];\n        }\n        return val;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {boolean} condition\n     * @param {string} message\n     */\n    function assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n\n    var primitiveKey = '__ec_primitive__';\n    /**\n     * Set an object as primitive to be ignored traversing children in clone or merge\n     */\n    function setAsPrimitive(obj) {\n        obj[primitiveKey] = true;\n    }\n\n    function isPrimitive(obj) {\n        return obj[primitiveKey];\n    }\n\n    /**\n     * @constructor\n     * @param {Object} obj Only apply `ownProperty`.\n     */\n    function HashMap(obj) {\n        obj && each(obj, function (value, key) {\n            this.set(key, value);\n        }, this);\n    }\n\n    // Add prefix to avoid conflict with Object.prototype.\n    var HASH_MAP_PREFIX = '_ec_';\n    var HASH_MAP_PREFIX_LENGTH = 4;\n\n    HashMap.prototype = {\n        constructor: HashMap,\n        // Do not provide `has` method to avoid defining what is `has`.\n        // (We usually treat `null` and `undefined` as the same, different\n        // from ES6 Map).\n        get: function (key) {\n            return this[HASH_MAP_PREFIX + key];\n        },\n        set: function (key, value) {\n            this[HASH_MAP_PREFIX + key] = value;\n            // Comparing with invocation chaining, `return value` is more commonly\n            // used in this case: `var someVal = map.set('a', genVal());`\n            return value;\n        },\n        // Although util.each can be performed on this hashMap directly, user\n        // should not use the exposed keys, who are prefixed.\n        each: function (cb, context) {\n            context !== void 0 && (cb = bind(cb, context));\n            for (var prefixedKey in this) {\n                this.hasOwnProperty(prefixedKey)\n                    && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n            }\n        },\n        // Do not use this method if performance sensitive.\n        removeKey: function (key) {\n            delete this[key];\n        }\n    };\n\n    function createHashMap(obj) {\n        return new HashMap(obj);\n    }\n\n    var util = {\n        inherits: inherits,\n        mixin: mixin,\n        clone: clone,\n        merge: merge,\n        mergeAll: mergeAll,\n        extend: extend,\n        defaults: defaults,\n        getContext: getContext,\n        createCanvas: createCanvas,\n        indexOf: indexOf,\n        slice: slice,\n        find: find,\n        isArrayLike: isArrayLike,\n        each: each,\n        map: map,\n        reduce: reduce,\n        filter: filter,\n        bind: bind,\n        curry: curry,\n        isArray: isArray,\n        isString: isString,\n        isObject: isObject,\n        isFunction: isFunction,\n        isBuiltInObject: isBuiltInObject,\n        isDom: isDom,\n        eqNaN: eqNaN,\n        retrieve: retrieve,\n        retrieve2: retrieve2,\n        retrieve3: retrieve3,\n        assert: assert,\n        setAsPrimitive: setAsPrimitive,\n        createHashMap: createHashMap,\n        normalizeCssArray: normalizeCssArray,\n        noop: function () {}\n    };\n    module.exports = util;\n\n\n\n/***/ }),\n\n/***/ 607:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {// Enable DEV mode when using source code without build. which has no __DEV__ variable\n// In build process 'typeof __DEV__' will be replace with 'boolean'\n// So this code will be removed or disabled anyway after built.\nif (typeof __DEV__ === 'undefined') {\n    // In browser\n    if (typeof window !== 'undefined') {\n        window.__DEV__ = true;\n    }\n    // In node\n    else if (typeof global !== 'undefined') {\n        global.__DEV__ = true;\n    }\n}\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\n\n/**\n * @module echarts\n */\n\n\n    var env = __webpack_require__(615);\n\n    var GlobalModel = __webpack_require__(734);\n    var ExtensionAPI = __webpack_require__(699);\n    var CoordinateSystemManager = __webpack_require__(636);\n    var OptionManager = __webpack_require__(735);\n\n    var ComponentModel = __webpack_require__(618);\n    var SeriesModel = __webpack_require__(640);\n\n    var ComponentView = __webpack_require__(748);\n    var ChartView = __webpack_require__(641);\n    var graphic = __webpack_require__(608);\n    var modelUtil = __webpack_require__(609);\n    var throttle = __webpack_require__(666);\n\n    var zrender = __webpack_require__(787);\n    var zrUtil = __webpack_require__(606);\n    var colorTool = __webpack_require__(627);\n    var Eventful = __webpack_require__(626);\n    var timsort = __webpack_require__(643);\n\n    var each = zrUtil.each;\n    var parseClassType = ComponentModel.parseClassType;\n\n    var PRIORITY_PROCESSOR_FILTER = 1000;\n    var PRIORITY_PROCESSOR_STATISTIC = 5000;\n\n\n    var PRIORITY_VISUAL_LAYOUT = 1000;\n    var PRIORITY_VISUAL_GLOBAL = 2000;\n    var PRIORITY_VISUAL_CHART = 3000;\n    var PRIORITY_VISUAL_COMPONENT = 4000;\n    // FIXME\n    // necessary?\n    var PRIORITY_VISUAL_BRUSH = 5000;\n\n    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n    // where they must not be invoked nestedly, except the only case: invoke\n    // dispatchAction with updateMethod \"none\" in main process.\n    // This flag is used to carry out this rule.\n    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n    var IN_MAIN_PROCESS = '__flagInMainProcess';\n    var HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\n    var OPTION_UPDATED = '__optionUpdated';\n    var ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\n    function createRegisterEventWithLowercaseName(method) {\n        return function (eventName, handler, context) {\n            // Event name is all lowercase\n            eventName = eventName && eventName.toLowerCase();\n            Eventful.prototype[method].call(this, eventName, handler, context);\n        };\n    }\n\n    /**\n     * @module echarts~MessageCenter\n     */\n    function MessageCenter() {\n        Eventful.call(this);\n    }\n    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\n    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\n    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\n    zrUtil.mixin(MessageCenter, Eventful);\n\n    /**\n     * @module echarts~ECharts\n     */\n    function ECharts(dom, theme, opts) {\n        opts = opts || {};\n\n        // Get theme by name\n        if (typeof theme === 'string') {\n            theme = themeStorage[theme];\n        }\n\n        /**\n         * @type {string}\n         */\n        this.id;\n        /**\n         * Group id\n         * @type {string}\n         */\n        this.group;\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        this._dom = dom;\n        /**\n         * @type {module:zrender/ZRender}\n         * @private\n         */\n        var zr = this._zr = zrender.init(dom, {\n            renderer: opts.renderer || 'canvas',\n            devicePixelRatio: opts.devicePixelRatio,\n            width: opts.width,\n            height: opts.height\n        });\n\n        /**\n         * Expect 60 pfs.\n         * @type {Function}\n         * @private\n         */\n        this._throttledZrFlush = throttle.throttle(zrUtil.bind(zr.flush, zr), 17);\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._theme = zrUtil.clone(theme);\n\n        /**\n         * @type {Array.<module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * @type {module:echarts/CoordinateSystem}\n         * @private\n         */\n        this._coordSysMgr = new CoordinateSystemManager();\n\n        /**\n         * @type {module:echarts/ExtensionAPI}\n         * @private\n         */\n        this._api = createExtensionAPI(this);\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:echarts~MessageCenter}\n         * @private\n         */\n        this._messageCenter = new MessageCenter();\n\n        // Init mouse events\n        this._initEvents();\n\n        // In case some people write `window.onresize = chart.resize`\n        this.resize = zrUtil.bind(this.resize, this);\n\n        // Can't dispatch action during rendering procedure\n        this._pendingActions = [];\n        // Sort on demand\n        function prioritySortFunc(a, b) {\n            return a.prio - b.prio;\n        }\n        timsort(visualFuncs, prioritySortFunc);\n        timsort(dataProcessorFuncs, prioritySortFunc);\n\n        zr.animation.on('frame', this._onframe, this);\n\n        // ECharts instance can be used as value.\n        zrUtil.setAsPrimitive(this);\n    }\n\n    var echartsProto = ECharts.prototype;\n\n    echartsProto._onframe = function () {\n        // Lazy update\n        if (this[OPTION_UPDATED]) {\n            var silent = this[OPTION_UPDATED].silent;\n\n            this[IN_MAIN_PROCESS] = true;\n\n            updateMethods.prepareAndUpdate.call(this);\n\n            this[IN_MAIN_PROCESS] = false;\n\n            this[OPTION_UPDATED] = false;\n\n            flushPendingActions.call(this, silent);\n\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n    /**\n     * @return {HTMLElement}\n     */\n    echartsProto.getDom = function () {\n        return this._dom;\n    };\n\n    /**\n     * @return {module:zrender~ZRender}\n     */\n    echartsProto.getZr = function () {\n        return this._zr;\n    };\n\n    /**\n     * Usage:\n     * chart.setOption(option, notMerge, lazyUpdate);\n     * chart.setOption(option, {\n     *     notMerge: ...,\n     *     lazyUpdate: ...,\n     *     silent: ...\n     * });\n     *\n     * @param {Object} option\n     * @param {Object|boolean} [opts] opts or notMerge.\n     * @param {boolean} [opts.notMerge=false]\n     * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n     */\n    echartsProto.setOption = function (option, notMerge, lazyUpdate) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\n        }\n\n        var silent;\n        if (zrUtil.isObject(notMerge)) {\n            lazyUpdate = notMerge.lazyUpdate;\n            silent = notMerge.silent;\n            notMerge = notMerge.notMerge;\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        if (!this._model || notMerge) {\n            var optionManager = new OptionManager(this._api);\n            var theme = this._theme;\n            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n            ecModel.init(null, null, theme, optionManager);\n        }\n\n        this._model.setOption(option, optionPreprocessorFuncs);\n\n        if (lazyUpdate) {\n            this[OPTION_UPDATED] = {silent: silent};\n            this[IN_MAIN_PROCESS] = false;\n        }\n        else {\n            updateMethods.prepareAndUpdate.call(this);\n            // Ensure zr refresh sychronously, and then pixel in canvas can be\n            // fetched after `setOption`.\n            this._zr.flush();\n\n            this[OPTION_UPDATED] = false;\n            this[IN_MAIN_PROCESS] = false;\n\n            flushPendingActions.call(this, silent);\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n\n    /**\n     * @DEPRECATED\n     */\n    echartsProto.setTheme = function () {\n        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n    };\n\n    /**\n     * @return {module:echarts/model/Global}\n     */\n    echartsProto.getModel = function () {\n        return this._model;\n    };\n\n    /**\n     * @return {Object}\n     */\n    echartsProto.getOption = function () {\n        return this._model && this._model.getOption();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getWidth = function () {\n        return this._zr.getWidth();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getHeight = function () {\n        return this._zr.getHeight();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getDevicePixelRatio = function () {\n        return this._zr.painter.dpr || window.devicePixelRatio || 1;\n    };\n\n    /**\n     * Get canvas which has all thing rendered\n     * @param {Object} opts\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getRenderedCanvas = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        opts = opts || {};\n        opts.pixelRatio = opts.pixelRatio || 1;\n        opts.backgroundColor = opts.backgroundColor\n            || this._model.get('backgroundColor');\n        var zr = this._zr;\n        var list = zr.storage.getDisplayList();\n        // Stop animations\n        zrUtil.each(list, function (el) {\n            el.stopAnimation(true);\n        });\n        return zr.painter.getRenderedCanvas(opts);\n    };\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     * @param {string} [opts.excludeComponents]\n     */\n    echartsProto.getDataURL = function (opts) {\n        opts = opts || {};\n        var excludeComponents = opts.excludeComponents;\n        var ecModel = this._model;\n        var excludesComponentViews = [];\n        var self = this;\n\n        each(excludeComponents, function (componentType) {\n            ecModel.eachComponent({\n                mainType: componentType\n            }, function (component) {\n                var view = self._componentsMap[component.__viewId];\n                if (!view.group.ignore) {\n                    excludesComponentViews.push(view);\n                    view.group.ignore = true;\n                }\n            });\n        });\n\n        var url = this.getRenderedCanvas(opts).toDataURL(\n            'image/' + (opts && opts.type || 'png')\n        );\n\n        each(excludesComponentViews, function (view) {\n            view.group.ignore = false;\n        });\n        return url;\n    };\n\n\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getConnectedDataURL = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        var groupId = this.group;\n        var mathMin = Math.min;\n        var mathMax = Math.max;\n        var MAX_NUMBER = Infinity;\n        if (connectedGroups[groupId]) {\n            var left = MAX_NUMBER;\n            var top = MAX_NUMBER;\n            var right = -MAX_NUMBER;\n            var bottom = -MAX_NUMBER;\n            var canvasList = [];\n            var dpr = (opts && opts.pixelRatio) || 1;\n\n            zrUtil.each(instances, function (chart, id) {\n                if (chart.group === groupId) {\n                    var canvas = chart.getRenderedCanvas(\n                        zrUtil.clone(opts)\n                    );\n                    var boundingRect = chart.getDom().getBoundingClientRect();\n                    left = mathMin(boundingRect.left, left);\n                    top = mathMin(boundingRect.top, top);\n                    right = mathMax(boundingRect.right, right);\n                    bottom = mathMax(boundingRect.bottom, bottom);\n                    canvasList.push({\n                        dom: canvas,\n                        left: boundingRect.left,\n                        top: boundingRect.top\n                    });\n                }\n            });\n\n            left *= dpr;\n            top *= dpr;\n            right *= dpr;\n            bottom *= dpr;\n            var width = right - left;\n            var height = bottom - top;\n            var targetCanvas = zrUtil.createCanvas();\n            targetCanvas.width = width;\n            targetCanvas.height = height;\n            var zr = zrender.init(targetCanvas);\n\n            each(canvasList, function (item) {\n                var img = new graphic.Image({\n                    style: {\n                        x: item.left * dpr - left,\n                        y: item.top * dpr - top,\n                        image: item.dom\n                    }\n                });\n                zr.add(img);\n            });\n            zr.refreshImmediately();\n\n            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n        }\n        else {\n            return this.getDataURL(opts);\n        }\n    };\n\n    /**\n     * Convert from logical coordinate system to pixel coordinate system.\n     * See CoordinateSystem#convertToPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId, geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n\n    /**\n     * Convert from pixel coordinate system to logical coordinate system.\n     * See CoordinateSystem#convertFromPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\n    function doConvertPixel(methodName, finder, value) {\n        var ecModel = this._model;\n        var coordSysList = this._coordSysMgr.getCoordinateSystems();\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        for (var i = 0; i < coordSysList.length; i++) {\n            var coordSys = coordSysList[i];\n            if (coordSys[methodName]\n                && (result = coordSys[methodName](ecModel, finder, value)) != null\n            ) {\n                return result;\n            }\n        }\n\n        if (__DEV__) {\n            console.warn(\n                'No coordinate system that supports ' + methodName + ' found by the given finder.'\n            );\n        }\n    }\n\n    /**\n     * Is the specified coordinate systems or components contain the given pixel point.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {boolean} result\n     */\n    echartsProto.containPixel = function (finder, value) {\n        var ecModel = this._model;\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        zrUtil.each(finder, function (models, key) {\n            key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n                var coordSys = model.coordinateSystem;\n                if (coordSys && coordSys.containPoint) {\n                    result |= !!coordSys.containPoint(value);\n                }\n                else if (key === 'seriesModels') {\n                    var view = this._chartsMap[model.__viewId];\n                    if (view && view.containPoint) {\n                        result |= view.containPoint(value, model);\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.warn(key + ': ' + (view\n                                ? 'The found component do not support containPoint.'\n                                : 'No view mapping to the found component.'\n                            ));\n                        }\n                    }\n                }\n                else {\n                    if (__DEV__) {\n                        console.warn(key + ': containPoint is not supported');\n                    }\n                }\n            }, this);\n        }, this);\n\n        return !!result;\n    };\n\n    /**\n     * Get visual from series or data.\n     * @param {string|Object} finder\n     *        If string, e.g., 'series', means {seriesIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            dataIndex / dataIndexInside\n     *        }\n     *        If dataIndex is not specified, series visual will be fetched,\n     *        but not data item visual.\n     *        If all of seriesIndex, seriesId, seriesName are not specified,\n     *        visual will be fetched from first series.\n     * @param {string} visualType 'color', 'symbol', 'symbolSize'\n     */\n    echartsProto.getVisual = function (finder, visualType) {\n        var ecModel = this._model;\n\n        finder = modelUtil.parseFinder(ecModel, finder, {defaultMainType: 'series'});\n\n        var seriesModel = finder.seriesModel;\n\n        if (__DEV__) {\n            if (!seriesModel) {\n                console.warn('There is no specified seires model');\n            }\n        }\n\n        var data = seriesModel.getData();\n\n        var dataIndexInside = finder.hasOwnProperty('dataIndexInside')\n            ? finder.dataIndexInside\n            : finder.hasOwnProperty('dataIndex')\n            ? data.indexOfRawIndex(finder.dataIndex)\n            : null;\n\n        return dataIndexInside != null\n            ? data.getItemVisual(dataIndexInside, visualType)\n            : data.getVisual(visualType);\n    };\n\n    /**\n     * Get view of corresponding component model\n     * @param  {module:echarts/model/Component} componentModel\n     * @return {module:echarts/view/Component}\n     */\n    echartsProto.getViewOfComponentModel = function (componentModel) {\n        return this._componentsMap[componentModel.__viewId];\n    };\n\n    /**\n     * Get view of corresponding series model\n     * @param  {module:echarts/model/Series} seriesModel\n     * @return {module:echarts/view/Chart}\n     */\n    echartsProto.getViewOfSeriesModel = function (seriesModel) {\n        return this._chartsMap[seriesModel.__viewId];\n    };\n\n\n    var updateMethods = {\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        update: function (payload) {\n            // console.profile && console.profile('update');\n\n            var ecModel = this._model;\n            var api = this._api;\n            var coordSysMgr = this._coordSysMgr;\n            var zr = this._zr;\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            // Fixme First time update ?\n            ecModel.restoreData();\n\n            // TODO\n            // Save total ecModel here for undo/redo (after restoring data and before processing data).\n            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n\n            // Create new coordinate system each update\n            // In LineView may save the old coordinate system and use it to get the orignal point\n            coordSysMgr.create(this._model, this._api);\n\n            processData.call(this, ecModel, api);\n\n            stackSeriesData.call(this, ecModel);\n\n            coordSysMgr.update(ecModel, api);\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            doRender.call(this, ecModel, payload);\n\n            // Set background\n            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n\n            var painter = zr.painter;\n            // TODO all use clearColor ?\n            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n                zr.configLayer(0, {\n                    clearColor: backgroundColor\n                });\n            }\n            else {\n                // In IE8\n                if (!env.canvasSupported) {\n                    var colorArr = colorTool.parse(backgroundColor);\n                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\n                    if (colorArr[3] === 0) {\n                        backgroundColor = 'transparent';\n                    }\n                }\n                if (backgroundColor.colorStops || backgroundColor.image) {\n                    // Gradient background\n                    // FIXME Fixed layer？\n                    zr.configLayer(0, {\n                        clearColor: backgroundColor\n                    });\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n\n                    this._dom.style.background = 'transparent';\n                }\n                else {\n                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n                        zr.configLayer(0, {\n                            clearColor: null\n                        });\n                    }\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n\n                    this._dom.style.background = backgroundColor;\n                }\n            }\n\n            each(postUpdateFuncs, function (func) {\n                func(ecModel, api);\n            });\n\n            // console.profile && console.profileEnd('update');\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateView: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateVisual: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload, true);\n\n            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateLayout: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            doLayout.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        prepareAndUpdate: function (payload) {\n            var ecModel = this._model;\n\n            prepareView.call(this, 'component', ecModel);\n\n            prepareView.call(this, 'chart', ecModel);\n\n            updateMethods.update.call(this, payload);\n        }\n    };\n\n    /**\n     * @private\n     */\n    function updateDirectly(ecIns, method, payload, mainType, subType) {\n        var ecModel = ecIns._model;\n\n        // broadcast\n        if (!mainType) {\n            each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n            return;\n        }\n\n        var query = {};\n        query[mainType + 'Id'] = payload[mainType + 'Id'];\n        query[mainType + 'Index'] = payload[mainType + 'Index'];\n        query[mainType + 'Name'] = payload[mainType + 'Name'];\n\n        var condition = {mainType: mainType, query: query};\n        subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n        // If dispatchAction before setOption, do nothing.\n        ecModel && ecModel.eachComponent(condition, function (model, index) {\n            callView(ecIns[\n                mainType === 'series' ? '_chartsMap' : '_componentsMap'\n            ][model.__viewId]);\n        }, ecIns);\n\n        function callView(view) {\n            view && view.__alive && view[method] && view[method](\n                view.__model, ecModel, ecIns._api, payload\n            );\n        }\n    }\n\n    /**\n     * Resize the chart\n     * @param {Object} opts\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @param {boolean} [opts.silent=false]\n     */\n    echartsProto.resize = function (opts) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        this._zr.resize(opts);\n\n        var optionChanged = this._model && this._model.resetOption('media');\n        var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n\n        updateMethods[updateMethod].call(this);\n\n        // Resize loading effect\n        this._loadingFX && this._loadingFX.resize();\n\n        this[IN_MAIN_PROCESS] = false;\n\n        var silent = opts && opts.silent;\n\n        flushPendingActions.call(this, silent);\n\n        triggerUpdatedEvent.call(this, silent);\n    };\n\n    /**\n     * Show loading effect\n     * @param  {string} [name='default']\n     * @param  {Object} [cfg]\n     */\n    echartsProto.showLoading = function (name, cfg) {\n        if (zrUtil.isObject(name)) {\n            cfg = name;\n            name = '';\n        }\n        name = name || 'default';\n\n        this.hideLoading();\n        if (!loadingEffects[name]) {\n            if (__DEV__) {\n                console.warn('Loading effects ' + name + ' not exists.');\n            }\n            return;\n        }\n        var el = loadingEffects[name](this._api, cfg);\n        var zr = this._zr;\n        this._loadingFX = el;\n\n        zr.add(el);\n    };\n\n    /**\n     * Hide loading effect\n     */\n    echartsProto.hideLoading = function () {\n        this._loadingFX && this._zr.remove(this._loadingFX);\n        this._loadingFX = null;\n    };\n\n    /**\n     * @param {Object} eventObj\n     * @return {Object}\n     */\n    echartsProto.makeActionFromEvent = function (eventObj) {\n        var payload = zrUtil.extend({}, eventObj);\n        payload.type = eventActionMap[eventObj.type];\n        return payload;\n    };\n\n    /**\n     * @pubilc\n     * @param {Object} payload\n     * @param {string} [payload.type] Action type\n     * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n     * @param {boolean} [opt.silent=false] Whether trigger events.\n     * @param {boolean} [opt.flush=undefined]\n     *                  true: Flush immediately, and then pixel in canvas can be fetched\n     *                      immediately. Caution: it might affect performance.\n     *                  false: Not not flush.\n     *                  undefined: Auto decide whether perform flush.\n     */\n    echartsProto.dispatchAction = function (payload, opt) {\n        if (!zrUtil.isObject(opt)) {\n            opt = {silent: !!opt};\n        }\n\n        if (!actions[payload.type]) {\n            return;\n        }\n\n        // Avoid dispatch action before setOption. Especially in `connect`.\n        if (!this._model) {\n            return;\n        }\n\n        // May dispatchAction in rendering procedure\n        if (this[IN_MAIN_PROCESS]) {\n            this._pendingActions.push(payload);\n            return;\n        }\n\n        doDispatchAction.call(this, payload, opt.silent);\n\n        if (opt.flush) {\n            this._zr.flush(true);\n        }\n        else if (opt.flush !== false && env.browser.weChat) {\n            // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n            // hang when sliding page (on touch event), which cause that zr does not\n            // refresh util user interaction finished, which is not expected.\n            // But `dispatchAction` may be called too frequently when pan on touch\n            // screen, which impacts performance if do not throttle them.\n            this._throttledZrFlush();\n        }\n\n        flushPendingActions.call(this, opt.silent);\n\n        triggerUpdatedEvent.call(this, opt.silent);\n    };\n\n    function doDispatchAction(payload, silent) {\n        var payloadType = payload.type;\n        var escapeConnect = payload.escapeConnect;\n        var actionWrap = actions[payloadType];\n        var actionInfo = actionWrap.actionInfo;\n\n        var cptType = (actionInfo.update || 'update').split(':');\n        var updateMethod = cptType.pop();\n        cptType = cptType[0] != null && parseClassType(cptType[0]);\n\n        this[IN_MAIN_PROCESS] = true;\n\n        var payloads = [payload];\n        var batched = false;\n        // Batch action\n        if (payload.batch) {\n            batched = true;\n            payloads = zrUtil.map(payload.batch, function (item) {\n                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n                item.batch = null;\n                return item;\n            });\n        }\n\n        var eventObjBatch = [];\n        var eventObj;\n        var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n\n        each(payloads, function (batchItem) {\n            // Action can specify the event by return it.\n            eventObj = actionWrap.action(batchItem, this._model, this._api);\n            // Emit event outside\n            eventObj = eventObj || zrUtil.extend({}, batchItem);\n            // Convert type to eventType\n            eventObj.type = actionInfo.event || eventObj.type;\n            eventObjBatch.push(eventObj);\n\n            // light update does not perform data process, layout and visual.\n            if (isHighDown) {\n                // method, payload, mainType, subType\n                updateDirectly(this, updateMethod, batchItem, 'series');\n            }\n            else if (cptType) {\n                updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n            }\n        }, this);\n\n        if (updateMethod !== 'none' && !isHighDown && !cptType) {\n            // Still dirty\n            if (this[OPTION_UPDATED]) {\n                // FIXME Pass payload ?\n                updateMethods.prepareAndUpdate.call(this, payload);\n                this[OPTION_UPDATED] = false;\n            }\n            else {\n                updateMethods[updateMethod].call(this, payload);\n            }\n        }\n\n        // Follow the rule of action batch\n        if (batched) {\n            eventObj = {\n                type: actionInfo.event || payloadType,\n                escapeConnect: escapeConnect,\n                batch: eventObjBatch\n            };\n        }\n        else {\n            eventObj = eventObjBatch[0];\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n    }\n\n    function flushPendingActions(silent) {\n        var pendingActions = this._pendingActions;\n        while (pendingActions.length) {\n            var payload = pendingActions.shift();\n            doDispatchAction.call(this, payload, silent);\n        }\n    }\n\n    function triggerUpdatedEvent(silent) {\n        !silent && this.trigger('updated');\n    }\n\n    /**\n     * Register event\n     * @method\n     */\n    echartsProto.on = createRegisterEventWithLowercaseName('on');\n    echartsProto.off = createRegisterEventWithLowercaseName('off');\n    echartsProto.one = createRegisterEventWithLowercaseName('one');\n\n    /**\n     * @param {string} methodName\n     * @private\n     */\n    function invokeUpdateMethod(methodName, ecModel, payload) {\n        var api = this._api;\n\n        // Update all components\n        each(this._componentsViews, function (component) {\n            var componentModel = component.__model;\n            component[methodName](componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, component);\n        }, this);\n\n        // Upate all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chart = this._chartsMap[seriesModel.__viewId];\n            chart[methodName](seriesModel, ecModel, api, payload);\n\n            updateZ(seriesModel, chart);\n\n            updateProgressiveAndBlend(seriesModel, chart);\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Post render\n        each(postUpdateFuncs, function (func) {\n            func(ecModel, api);\n        });\n    }\n\n    /**\n     * Prepare view instances of charts and components\n     * @param  {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function prepareView(type, ecModel) {\n        var isComponent = type === 'component';\n        var viewList = isComponent ? this._componentsViews : this._chartsViews;\n        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n        var zr = this._zr;\n\n        for (var i = 0; i < viewList.length; i++) {\n            viewList[i].__alive = false;\n        }\n\n        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n            if (isComponent) {\n                if (componentType === 'series') {\n                    return;\n                }\n            }\n            else {\n                model = componentType;\n            }\n\n            // Consider: id same and type changed.\n            var viewId = '_ec_' + model.id + '_' + model.type;\n            var view = viewMap[viewId];\n            if (!view) {\n                var classType = parseClassType(model.type);\n                var Clazz = isComponent\n                    ? ComponentView.getClass(classType.main, classType.sub)\n                    : ChartView.getClass(classType.sub);\n                if (Clazz) {\n                    view = new Clazz();\n                    view.init(ecModel, this._api);\n                    viewMap[viewId] = view;\n                    viewList.push(view);\n                    zr.add(view.group);\n                }\n                else {\n                    // Error\n                    return;\n                }\n            }\n\n            model.__viewId = view.__id = viewId;\n            view.__alive = true;\n            view.__model = model;\n            view.group.__ecComponentInfo = {\n                mainType: model.mainType,\n                index: model.componentIndex\n            };\n        }, this);\n\n        for (var i = 0; i < viewList.length;) {\n            var view = viewList[i];\n            if (!view.__alive) {\n                zr.remove(view.group);\n                view.dispose(ecModel, this._api);\n                viewList.splice(i, 1);\n                delete viewMap[view.__id];\n                view.__id = view.group.__ecComponentInfo = null;\n            }\n            else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Processor data in each series\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function processData(ecModel, api) {\n        each(dataProcessorFuncs, function (process) {\n            process.func(ecModel, api);\n        });\n    }\n\n    /**\n     * @private\n     */\n    function stackSeriesData(ecModel) {\n        var stackedDataMap = {};\n        ecModel.eachSeries(function (series) {\n            var stack = series.get('stack');\n            var data = series.getData();\n            if (stack && data.type === 'list') {\n                var previousStack = stackedDataMap[stack];\n                // Avoid conflict with Object.prototype\n                if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n                    data.stackedOn = previousStack;\n                }\n                stackedDataMap[stack] = data;\n            }\n        });\n    }\n\n    /**\n     * Layout before each chart render there series, special visual encoding stage\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doLayout(ecModel, payload) {\n        var api = this._api;\n        each(visualFuncs, function (visual) {\n            if (visual.isLayout) {\n                visual.func(ecModel, api, payload);\n            }\n        });\n    }\n\n    /**\n     * Encode visual infomation from data after data processing\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @param {object} layout\n     * @param {boolean} [excludesLayout]\n     * @private\n     */\n    function doVisualEncoding(ecModel, payload, excludesLayout) {\n        var api = this._api;\n        ecModel.clearColorPalette();\n        ecModel.eachSeries(function (seriesModel) {\n            seriesModel.clearColorPalette();\n        });\n        each(visualFuncs, function (visual) {\n            (!excludesLayout || !visual.isLayout)\n                && visual.func(ecModel, api, payload);\n        });\n    }\n\n    /**\n     * Render each chart and component\n     * @private\n     */\n    function doRender(ecModel, payload) {\n        var api = this._api;\n        // Render all components\n        each(this._componentsViews, function (componentView) {\n            var componentModel = componentView.__model;\n            componentView.render(componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, componentView);\n        }, this);\n\n        each(this._chartsViews, function (chart) {\n            chart.__alive = false;\n        }, this);\n\n        // Render all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chartView = this._chartsMap[seriesModel.__viewId];\n            chartView.__alive = true;\n            chartView.render(seriesModel, ecModel, api, payload);\n\n            chartView.group.silent = !!seriesModel.get('silent');\n\n            updateZ(seriesModel, chartView);\n\n            updateProgressiveAndBlend(seriesModel, chartView);\n\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Remove groups of unrendered charts\n        each(this._chartsViews, function (chart) {\n            if (!chart.__alive) {\n                chart.remove(ecModel, api);\n            }\n        }, this);\n    }\n\n    var MOUSE_EVENT_NAMES = [\n        'click', 'dblclick', 'mouseover', 'mouseout', 'mousemove',\n        'mousedown', 'mouseup', 'globalout', 'contextmenu'\n    ];\n    /**\n     * @private\n     */\n    echartsProto._initEvents = function () {\n        each(MOUSE_EVENT_NAMES, function (eveName) {\n            this._zr.on(eveName, function (e) {\n                var ecModel = this.getModel();\n                var el = e.target;\n                var params;\n\n                // no e.target when 'globalout'.\n                if (eveName === 'globalout') {\n                    params = {};\n                }\n                else if (el && el.dataIndex != null) {\n                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                    params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n                }\n                // If element has custom eventData of components\n                else if (el && el.eventData) {\n                    params = zrUtil.extend({}, el.eventData);\n                }\n\n                if (params) {\n                    params.event = e;\n                    params.type = eveName;\n                    this.trigger(eveName, params);\n                }\n\n            }, this);\n        }, this);\n\n        each(eventActionMap, function (actionType, eventType) {\n            this._messageCenter.on(eventType, function (event) {\n                this.trigger(eventType, event);\n            }, this);\n        }, this);\n    };\n\n    /**\n     * @return {boolean}\n     */\n    echartsProto.isDisposed = function () {\n        return this._disposed;\n    };\n\n    /**\n     * Clear\n     */\n    echartsProto.clear = function () {\n        this.setOption({ series: [] }, true);\n    };\n\n    /**\n     * Dispose instance\n     */\n    echartsProto.dispose = function () {\n        if (this._disposed) {\n            if (__DEV__) {\n                console.warn('Instance ' + this.id + ' has been disposed');\n            }\n            return;\n        }\n        this._disposed = true;\n\n        var api = this._api;\n        var ecModel = this._model;\n\n        each(this._componentsViews, function (component) {\n            component.dispose(ecModel, api);\n        });\n        each(this._chartsViews, function (chart) {\n            chart.dispose(ecModel, api);\n        });\n\n        // Dispose after all views disposed\n        this._zr.dispose();\n\n        delete instances[this.id];\n    };\n\n    zrUtil.mixin(ECharts, Eventful);\n\n    function updateHoverLayerStatus(zr, ecModel) {\n        var storage = zr.storage;\n        var elCount = 0;\n        storage.traverse(function (el) {\n            if (!el.isGroup) {\n                elCount++;\n            }\n        });\n        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n            storage.traverse(function (el) {\n                if (!el.isGroup) {\n                    el.useHoverLayer = true;\n                }\n            });\n        }\n    }\n\n    /**\n     * Update chart progressive and blend.\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateProgressiveAndBlend(seriesModel, chartView) {\n        // Progressive configuration\n        var elCount = 0;\n        chartView.group.traverse(function (el) {\n            if (el.type !== 'group' && !el.ignore) {\n                elCount++;\n            }\n        });\n        var frameDrawNum = +seriesModel.get('progressive');\n        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n        if (needProgressive) {\n            chartView.group.traverse(function (el) {\n                // FIXME marker and other components\n                if (!el.isGroup) {\n                    el.progressive = needProgressive ?\n                        Math.floor(elCount++ / frameDrawNum) : -1;\n                    if (needProgressive) {\n                        el.stopAnimation(true);\n                    }\n                }\n            });\n        }\n\n        // Blend configration\n        var blendMode = seriesModel.get('blendMode') || null;\n        if (__DEV__) {\n            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n                console.warn('Only canvas support blendMode');\n            }\n        }\n        chartView.group.traverse(function (el) {\n            // FIXME marker and other components\n            if (!el.isGroup) {\n                el.setStyle('blend', blendMode);\n            }\n        });\n    }\n\n    /**\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateZ(model, view) {\n        var z = model.get('z');\n        var zlevel = model.get('zlevel');\n        // Set z and zlevel\n        view.group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n            }\n        });\n    }\n\n    function createExtensionAPI(ecInstance) {\n        var coordSysMgr = ecInstance._coordSysMgr;\n        return zrUtil.extend(new ExtensionAPI(ecInstance), {\n            // Inject methods\n            getCoordinateSystems: zrUtil.bind(\n                coordSysMgr.getCoordinateSystems, coordSysMgr\n            ),\n            getComponentByElement: function (el) {\n                while (el) {\n                    var modelInfo = el.__ecComponentInfo;\n                    if (modelInfo != null) {\n                        return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n                    }\n                    el = el.parent;\n                }\n            }\n        });\n    }\n\n    /**\n     * @type {Object} key: actionType.\n     * @inner\n     */\n    var actions = {};\n\n    /**\n     * Map eventType to actionType\n     * @type {Object}\n     */\n    var eventActionMap = {};\n\n    /**\n     * Data processor functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var dataProcessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var optionPreprocessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var postUpdateFuncs = [];\n\n    /**\n     * Visual encoding functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var visualFuncs = [];\n    /**\n     * Theme storage\n     * @type {Object.<key, Object>}\n     */\n    var themeStorage = {};\n    /**\n     * Loading effects\n     */\n    var loadingEffects = {};\n\n\n    var instances = {};\n    var connectedGroups = {};\n\n    var idBase = new Date() - 0;\n    var groupIdBase = new Date() - 0;\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n\n    /**\n     * @alias module:echarts\n     */\n    var echarts = {\n        /**\n         * @type {number}\n         */\n        version: '3.7.0',\n        dependencies: {\n            zrender: '3.6.0'\n        }\n    };\n\n    function enableConnect(chart) {\n        var STATUS_PENDING = 0;\n        var STATUS_UPDATING = 1;\n        var STATUS_UPDATED = 2;\n        var STATUS_KEY = '__connectUpdateStatus';\n\n        function updateConnectedChartsStatus(charts, status) {\n            for (var i = 0; i < charts.length; i++) {\n                var otherChart = charts[i];\n                otherChart[STATUS_KEY] = status;\n            }\n        }\n\n        zrUtil.each(eventActionMap, function (actionType, eventType) {\n            chart._messageCenter.on(eventType, function (event) {\n                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n                    if (event && event.escapeConnect) {\n                        return;\n                    }\n\n                    var action = chart.makeActionFromEvent(event);\n                    var otherCharts = [];\n\n                    zrUtil.each(instances, function (otherChart) {\n                        if (otherChart !== chart && otherChart.group === chart.group) {\n                            otherCharts.push(otherChart);\n                        }\n                    });\n\n                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n                    each(otherCharts, function (otherChart) {\n                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n                            otherChart.dispatchAction(action);\n                        }\n                    });\n                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n                }\n            });\n        });\n    }\n\n    /**\n     * @param {HTMLElement} dom\n     * @param {Object} [theme]\n     * @param {Object} opts\n     * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n     * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n     * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n     *                              Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n     *                               Can be 'auto' (the same as null/undefined)\n     */\n    echarts.init = function (dom, theme, opts) {\n        if (__DEV__) {\n            // Check version\n            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\n                throw new Error(\n                    'ZRender ' + zrender.version\n                    + ' is too old for ECharts ' + echarts.version\n                    + '. Current version need ZRender '\n                    + echarts.dependencies.zrender + '+'\n                );\n            }\n\n            if (!dom) {\n                throw new Error('Initialize failed: invalid dom.');\n            }\n        }\n\n        var existInstance = echarts.getInstanceByDom(dom);\n        if (existInstance) {\n            if (__DEV__) {\n                console.warn('There is a chart instance already initialized on the dom.');\n            }\n            return existInstance;\n        }\n\n        if (__DEV__) {\n            if (zrUtil.isDom(dom)\n                && dom.nodeName.toUpperCase() !== 'CANVAS'\n                && (\n                    (!dom.clientWidth && (!opts || opts.width == null))\n                    || (!dom.clientHeight && (!opts || opts.height == null))\n                )\n            ) {\n                console.warn('Can\\'t get dom width or height');\n            }\n        }\n\n        var chart = new ECharts(dom, theme, opts);\n        chart.id = 'ec_' + idBase++;\n        instances[chart.id] = chart;\n\n        if (dom.setAttribute) {\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n        }\n        else {\n            dom[DOM_ATTRIBUTE_KEY] = chart.id;\n        }\n\n        enableConnect(chart);\n\n        return chart;\n    };\n\n    /**\n     * @return {string|Array.<module:echarts~ECharts>} groupId\n     */\n    echarts.connect = function (groupId) {\n        // Is array of charts\n        if (zrUtil.isArray(groupId)) {\n            var charts = groupId;\n            groupId = null;\n            // If any chart has group\n            zrUtil.each(charts, function (chart) {\n                if (chart.group != null) {\n                    groupId = chart.group;\n                }\n            });\n            groupId = groupId || ('g_' + groupIdBase++);\n            zrUtil.each(charts, function (chart) {\n                chart.group = groupId;\n            });\n        }\n        connectedGroups[groupId] = true;\n        return groupId;\n    };\n\n    /**\n     * @DEPRECATED\n     * @return {string} groupId\n     */\n    echarts.disConnect = function (groupId) {\n        connectedGroups[groupId] = false;\n    };\n\n    /**\n     * @return {string} groupId\n     */\n    echarts.disconnect = echarts.disConnect;\n\n    /**\n     * Dispose a chart instance\n     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n     */\n    echarts.dispose = function (chart) {\n        if (typeof chart === 'string') {\n            chart = instances[chart];\n        }\n        else if (!(chart instanceof ECharts)){\n            // Try to treat as dom\n            chart = echarts.getInstanceByDom(chart);\n        }\n        if ((chart instanceof ECharts) && !chart.isDisposed()) {\n            chart.dispose();\n        }\n    };\n\n    /**\n     * @param  {HTMLElement} dom\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceByDom = function (dom) {\n        var key;\n        if (dom.getAttribute) {\n            key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n        }\n        else {\n            key = dom[DOM_ATTRIBUTE_KEY];\n        }\n        return instances[key];\n    };\n\n    /**\n     * @param {string} key\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceById = function (key) {\n        return instances[key];\n    };\n\n    /**\n     * Register theme\n     */\n    echarts.registerTheme = function (name, theme) {\n        themeStorage[name] = theme;\n    };\n\n    /**\n     * Register option preprocessor\n     * @param {Function} preprocessorFunc\n     */\n    echarts.registerPreprocessor = function (preprocessorFunc) {\n        optionPreprocessorFuncs.push(preprocessorFunc);\n    };\n\n    /**\n     * @param {number} [priority=1000]\n     * @param {Function} processorFunc\n     */\n    echarts.registerProcessor = function (priority, processorFunc) {\n        if (typeof priority === 'function') {\n            processorFunc = priority;\n            priority = PRIORITY_PROCESSOR_FILTER;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown processor priority');\n            }\n        }\n        dataProcessorFuncs.push({\n            prio: priority,\n            func: processorFunc\n        });\n    };\n\n    /**\n     * Register postUpdater\n     * @param {Function} postUpdateFunc\n     */\n    echarts.registerPostUpdate = function (postUpdateFunc) {\n        postUpdateFuncs.push(postUpdateFunc);\n    };\n\n    /**\n     * Usage:\n     * registerAction('someAction', 'someEvent', function () { ... });\n     * registerAction('someAction', function () { ... });\n     * registerAction(\n     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n     *     function () { ... }\n     * );\n     *\n     * @param {(string|Object)} actionInfo\n     * @param {string} actionInfo.type\n     * @param {string} [actionInfo.event]\n     * @param {string} [actionInfo.update]\n     * @param {string} [eventName]\n     * @param {Function} action\n     */\n    echarts.registerAction = function (actionInfo, eventName, action) {\n        if (typeof eventName === 'function') {\n            action = eventName;\n            eventName = '';\n        }\n        var actionType = zrUtil.isObject(actionInfo)\n            ? actionInfo.type\n            : ([actionInfo, actionInfo = {\n                event: eventName\n            }][0]);\n\n        // Event name is all lowercase\n        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n        eventName = actionInfo.event;\n\n        // Validate action type and event name.\n        zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n        if (!actions[actionType]) {\n            actions[actionType] = {action: action, actionInfo: actionInfo};\n        }\n        eventActionMap[eventName] = actionType;\n    };\n\n    /**\n     * @param {string} type\n     * @param {*} CoordinateSystem\n     */\n    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\n        CoordinateSystemManager.register(type, CoordinateSystem);\n    };\n\n    /**\n     * Get dimensions of specified coordinate system.\n     * @param {string} type\n     * @return {Array.<string|Object>}\n     */\n    echarts.getCoordinateSystemDimensions = function (type) {\n        var coordSysCreator = CoordinateSystemManager.get(type);\n        if (coordSysCreator) {\n            return coordSysCreator.getDimensionsInfo\n                    ? coordSysCreator.getDimensionsInfo()\n                    : coordSysCreator.dimensions.slice();\n        }\n    };\n\n    /**\n     * Layout is a special stage of visual encoding\n     * Most visual encoding like color are common for different chart\n     * But each chart has it's own layout algorithm\n     *\n     * @param {number} [priority=1000]\n     * @param {Function} layoutFunc\n     */\n    echarts.registerLayout = function (priority, layoutFunc) {\n        if (typeof priority === 'function') {\n            layoutFunc = priority;\n            priority = PRIORITY_VISUAL_LAYOUT;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown layout priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: layoutFunc,\n            isLayout: true\n        });\n    };\n\n    /**\n     * @param {number} [priority=3000]\n     * @param {Function} visualFunc\n     */\n    echarts.registerVisual = function (priority, visualFunc) {\n        if (typeof priority === 'function') {\n            visualFunc = priority;\n            priority = PRIORITY_VISUAL_CHART;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown visual priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: visualFunc\n        });\n    };\n\n    /**\n     * @param {string} name\n     */\n    echarts.registerLoading = function (name, loadingFx) {\n        loadingEffects[name] = loadingFx;\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentModel = function (opts/*, superClass*/) {\n        // var Clazz = ComponentModel;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentView = function (opts/*, superClass*/) {\n        // var Clazz = ComponentView;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentView.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendSeriesModel = function (opts/*, superClass*/) {\n        // var Clazz = SeriesModel;\n        // if (superClass) {\n        //     superClass = 'series.' + superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return SeriesModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendChartView = function (opts/*, superClass*/) {\n        // var Clazz = ChartView;\n        // if (superClass) {\n        //     superClass = superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ChartView.getClass(classType.main, true);\n        // }\n        return ChartView.extend(opts);\n    };\n\n    /**\n     * ZRender need a canvas context to do measureText.\n     * But in node environment canvas may be created by node-canvas.\n     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n     *\n     * Be careful of using it in the browser.\n     *\n     * @param {Function} creator\n     * @example\n     *     var Canvas = require('canvas');\n     *     var echarts = require('echarts');\n     *     echarts.setCanvasCreator(function () {\n     *         // Small size is enough.\n     *         return new Canvas(32, 32);\n     *     });\n     */\n    echarts.setCanvasCreator = function (creator) {\n        zrUtil.createCanvas = creator;\n    };\n\n    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, __webpack_require__(749));\n    echarts.registerPreprocessor(__webpack_require__(742));\n    echarts.registerLoading('default', __webpack_require__(733));\n\n    // Default action\n    echarts.registerAction({\n        type: 'highlight',\n        event: 'highlight',\n        update: 'highlight'\n    }, zrUtil.noop);\n    echarts.registerAction({\n        type: 'downplay',\n        event: 'downplay',\n        update: 'downplay'\n    }, zrUtil.noop);\n\n\n    // --------\n    // Exports\n    // --------\n    echarts.zrender = zrender;\n\n    echarts.List = __webpack_require__(630);\n    echarts.Model = __webpack_require__(614);\n\n    echarts.Axis = __webpack_require__(650);\n\n    echarts.graphic = __webpack_require__(608);\n    echarts.number = __webpack_require__(610);\n    echarts.format = __webpack_require__(613);\n    echarts.throttle = throttle.throttle;\n    echarts.matrix = __webpack_require__(623);\n    echarts.vector = __webpack_require__(611);\n    echarts.color = __webpack_require__(627);\n\n    echarts.util = {};\n    each([\n            'map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter',\n            'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction',\n            'extend', 'defaults', 'clone', 'merge'\n        ],\n        function (name) {\n            echarts.util[name] = zrUtil[name];\n        }\n    );\n\n    echarts.helper = __webpack_require__(731);\n\n\n    // PRIORITY\n    echarts.PRIORITY = {\n        PROCESSOR: {\n            FILTER: PRIORITY_PROCESSOR_FILTER,\n            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n        },\n        VISUAL: {\n            LAYOUT: PRIORITY_VISUAL_LAYOUT,\n            GLOBAL: PRIORITY_VISUAL_GLOBAL,\n            CHART: PRIORITY_VISUAL_CHART,\n            COMPONENT: PRIORITY_VISUAL_COMPONENT,\n            BRUSH: PRIORITY_VISUAL_BRUSH\n        }\n    };\n\n    module.exports = echarts;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(60)))\n\n/***/ }),\n\n/***/ 608:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(606);\n\n    var pathTool = __webpack_require__(785);\n    var Path = __webpack_require__(612);\n    var colorTool = __webpack_require__(627);\n    var matrix = __webpack_require__(623);\n    var vector = __webpack_require__(611);\n    var Transformable = __webpack_require__(680);\n    var BoundingRect = __webpack_require__(617);\n\n    var round = Math.round;\n    var mathMax = Math.max;\n    var mathMin = Math.min;\n\n    var EMPTY_OBJ = {};\n\n    var graphic = {};\n\n    graphic.Group = __webpack_require__(634);\n\n    graphic.Image = __webpack_require__(674);\n\n    graphic.Text = __webpack_require__(770);\n\n    graphic.Circle = __webpack_require__(776);\n\n    graphic.Sector = __webpack_require__(782);\n\n    graphic.Ring = __webpack_require__(781);\n\n    graphic.Polygon = __webpack_require__(778);\n\n    graphic.Polyline = __webpack_require__(779);\n\n    graphic.Rect = __webpack_require__(780);\n\n    graphic.Line = __webpack_require__(777);\n\n    graphic.BezierCurve = __webpack_require__(775);\n\n    graphic.Arc = __webpack_require__(774);\n\n    graphic.CompoundPath = __webpack_require__(767);\n\n    graphic.LinearGradient = __webpack_require__(768);\n\n    graphic.RadialGradient = __webpack_require__(769);\n\n    graphic.BoundingRect = BoundingRect;\n\n    /**\n     * Extend shape with parameters\n     */\n    graphic.extendShape = function (opts) {\n        return Path.extend(opts);\n    };\n\n    /**\n     * Extend path\n     */\n    graphic.extendPath = function (pathData, opts) {\n        return pathTool.extendFromString(pathData, opts);\n    };\n\n    /**\n     * Create a path element from path data string\n     * @param {string} pathData\n     * @param {Object} opts\n     * @param {module:zrender/core/BoundingRect} rect\n     * @param {string} [layout=cover] 'center' or 'cover'\n     */\n    graphic.makePath = function (pathData, opts, rect, layout) {\n        var path = pathTool.createFromString(pathData, opts);\n        var boundingRect = path.getBoundingRect();\n        if (rect) {\n            var aspect = boundingRect.width / boundingRect.height;\n\n            if (layout === 'center') {\n                // Set rect to center, keep width / height ratio.\n                var width = rect.height * aspect;\n                var height;\n                if (width <= rect.width) {\n                    height = rect.height;\n                }\n                else {\n                    width = rect.width;\n                    height = width / aspect;\n                }\n                var cx = rect.x + rect.width / 2;\n                var cy = rect.y + rect.height / 2;\n\n                rect.x = cx - width / 2;\n                rect.y = cy - height / 2;\n                rect.width = width;\n                rect.height = height;\n            }\n\n            graphic.resizePath(path, rect);\n        }\n        return path;\n    };\n\n    graphic.mergePath = pathTool.mergePath,\n\n    /**\n     * Resize a path to fit the rect\n     * @param {module:zrender/graphic/Path} path\n     * @param {Object} rect\n     */\n    graphic.resizePath = function (path, rect) {\n        if (!path.applyTransform) {\n            return;\n        }\n\n        var pathRect = path.getBoundingRect();\n\n        var m = pathRect.calculateTransform(rect);\n\n        path.applyTransform(m);\n    };\n\n    /**\n     * Sub pixel optimize line for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x1]\n     * @param {number} [param.shape.y1]\n     * @param {number} [param.shape.x2]\n     * @param {number} [param.shape.y2]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeLine = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n\n        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n        }\n        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n        }\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize rect for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x]\n     * @param {number} [param.shape.y]\n     * @param {number} [param.shape.width]\n     * @param {number} [param.shape.height]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeRect = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n        var originX = shape.x;\n        var originY = shape.y;\n        var originWidth = shape.width;\n        var originHeight = shape.height;\n        shape.x = subPixelOptimize(shape.x, lineWidth, true);\n        shape.y = subPixelOptimize(shape.y, lineWidth, true);\n        shape.width = Math.max(\n            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\n            originWidth === 0 ? 0 : 1\n        );\n        shape.height = Math.max(\n            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\n            originHeight === 0 ? 0 : 1\n        );\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize for canvas\n     *\n     * @param {number} position Coordinate, such as x, y\n     * @param {number} lineWidth Should be nonnegative integer.\n     * @param {boolean=} positiveOrNegative Default false (negative).\n     * @return {number} Optimized position.\n     */\n    graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\n        // Assure that (position + lineWidth / 2) is near integer edge,\n        // otherwise line will be fuzzy in canvas.\n        var doubledPosition = round(position * 2);\n        return (doubledPosition + round(lineWidth)) % 2 === 0\n            ? doubledPosition / 2\n            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n    };\n\n    function hasFillOrStroke(fillOrStroke) {\n        return fillOrStroke != null && fillOrStroke != 'none';\n    }\n\n    function liftColor(color) {\n        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n    }\n\n    /**\n     * @private\n     */\n    function cacheElementStl(el) {\n        if (el.__hoverStlDirty) {\n            var stroke = el.style.stroke;\n            var fill = el.style.fill;\n\n            // Create hoverStyle on mouseover\n            var hoverStyle = el.__hoverStl;\n            hoverStyle.fill = hoverStyle.fill\n                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n            hoverStyle.stroke = hoverStyle.stroke\n                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n\n            var normalStyle = {};\n            for (var name in hoverStyle) {\n                // See comment in `doSingleEnterHover`.\n                if (hoverStyle[name] != null) {\n                    normalStyle[name] = el.style[name];\n                }\n            }\n\n            el.__normalStl = normalStyle;\n\n            el.__hoverStlDirty = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    function doSingleEnterHover(el) {\n        if (el.__isHover) {\n            return;\n        }\n\n        cacheElementStl(el);\n\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.addHover(el, el.__hoverStl);\n        }\n        else {\n            // styles can be:\n            // {\n            //     label: {\n            //         normal: {\n            //             show: false,\n            //             position: 'outside',\n            //             fontSize: 18\n            //         },\n            //         emphasis: {\n            //             show: true\n            //         }\n            //     }\n            // },\n            // where properties of `emphasis` may not appear in `normal`. We previously use\n            // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n            // But consider rich text and setOption in merge mode, it is impossible to cover\n            // all properties in merge. So we use merge mode when setting style here, where\n            // only properties that is not `null/undefined` can be set. The disadventage:\n            // null/undefined can not be used to remove style any more in `emphasis`.\n            el.style.extendFrom(el.__hoverStl);\n            el.dirty(false);\n            el.z2 += 1;\n        }\n\n        el.__isHover = true;\n    }\n\n    /**\n     * @inner\n     */\n    function doSingleLeaveHover(el) {\n        if (!el.__isHover) {\n            return;\n        }\n\n        var normalStl = el.__normalStl;\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.removeHover(el);\n        }\n        else {\n            // Consider null/undefined value, should use\n            // `setStyle` but not `extendFrom(stl, true)`.\n            normalStl && el.setStyle(normalStl);\n            el.z2 -= 1;\n        }\n\n        el.__isHover = false;\n    }\n\n    /**\n     * @inner\n     */\n    function doEnterHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleEnterHover(child);\n                }\n            })\n            : doSingleEnterHover(el);\n    }\n\n    function doLeaveHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleLeaveHover(child);\n                }\n            })\n            : doSingleLeaveHover(el);\n    }\n\n    /**\n     * @inner\n     */\n    function setElementHoverStl(el, hoverStl) {\n        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n        // Often used when item group has a label element and it's hoverStyle is different\n        el.__hoverStl = el.hoverStyle || hoverStl || {};\n        el.__hoverStlDirty = true;\n\n        if (el.__isHover) {\n            cacheElementStl(el);\n        }\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOver(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOut(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doLeaveHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function enterEmphasis() {\n        this.__isEmphasis = true;\n        doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function leaveEmphasis() {\n        this.__isEmphasis = false;\n        doLeaveHover(this);\n    }\n\n    /**\n     * Set hover style of element.\n     * This method can be called repeatly without side-effects.\n     * @param {module:zrender/Element} el\n     * @param {Object} [hoverStyle]\n     * @param {Object} [opt]\n     * @param {boolean} [opt.hoverSilentOnTouch=false]\n     *        In touch device, mouseover event will be trigger on touchstart event\n     *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n     *        conviniently use hoverStyle when tap on touch screen without additional\n     *        code for compatibility.\n     *        But if the chart/component has select feature, which usually also use\n     *        hoverStyle, there might be conflict between 'select-highlight' and\n     *        'hover-highlight' especially when roam is enabled (see geo for example).\n     *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n     *        on touch device.\n     */\n    graphic.setHoverStyle = function (el, hoverStyle, opt) {\n        el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    setElementHoverStl(child, hoverStyle);\n                }\n            })\n            : setElementHoverStl(el, hoverStyle);\n\n        // Duplicated function will be auto-ignored, see Eventful.js.\n        el.on('mouseover', onElementMouseOver)\n          .on('mouseout', onElementMouseOut);\n\n        // Emphasis, normal can be triggered manually\n        el.on('emphasis', enterEmphasis)\n          .on('normal', leaveEmphasis);\n    };\n\n    /**\n     * Set basic textStyle properties.\n     * @param {Object|module:zrender/graphic/Style} textStyle\n     * @param {module:echarts/model/Model} model\n     * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n     * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n     */\n    graphic.setTextStyle = function (textStyle, textStyleModel, specifiedTextStyle, opt) {\n        setTextStyleCommon(textStyle, textStyleModel, opt);\n        specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n        textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n\n        return textStyle;\n    };\n\n    /**\n     * Set text option in the style\n     * @param {Object} textStyle\n     * @param {module:echarts/model/Model} labelModel\n     * @param {string|boolean} defaultColor Default text color.\n     *        If set as false, it will be processed as a emphasis style.\n     */\n    graphic.setText = function (textStyle, labelModel, defaultColor) {\n        var opt = {isRectText: true};\n        if (defaultColor === false) {\n            opt.forMerge = true;\n        }\n        else {\n            // Support setting color as 'auto' to get visual color.\n            opt.defaultTextColor = opt.autoColor = defaultColor;\n            opt.checkInside = checkInsideForSetText;\n        }\n        setTextStyleCommon(textStyle, labelModel, opt);\n        textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n    };\n\n    function checkInsideForSetText(labelModel, textPosition) {\n        return textPosition && textPosition.indexOf('inside') >= 0;\n    }\n\n    /**\n     * {\n     *      disableBox: boolean, Whether diable drawing box of block (outer most).\n     *      isRectText: boolean,\n     *      autoColor: string, specify a color when color is 'auto',\n     *                 for textFill, textStroke, textBackgroundColor, and textBorderColor,\n     *      defaultTextColor: string,\n     *      checkInside: function, higher priority than `defaultTextColor`.\n     *      forceRich: boolean,\n     *      forMerge: boolean\n     * }\n     */\n    function setTextStyleCommon(textStyle, textStyleModel, opt) {\n        // Consider there will be abnormal when merge hover style to normal style if given default value.\n        opt = opt || EMPTY_OBJ;\n\n        if (opt.isRectText) {\n            var textPosition = textStyleModel.getShallow('position')\n                || (opt.forMerge ? null : 'inside');\n            // 'outside' is not a valid zr textPostion value, but used\n            // in bar series, and magric type should be considered.\n            textPosition === 'outside' && (textPosition = 'top');\n            textStyle.textPosition = textPosition;\n            textStyle.textOffset = textStyleModel.getShallow('offset');\n            var labelRotate = textStyleModel.getShallow('rotate');\n            labelRotate != null && (labelRotate *= Math.PI / 180);\n            textStyle.textRotation = labelRotate;\n            textStyle.textDistance = zrUtil.retrieve2(\n                textStyleModel.getShallow('distance'), opt.forMerge ? null : 5\n            );\n        }\n\n        var ecModel = textStyleModel.ecModel;\n        var globalTextStyle = ecModel && ecModel.option.textStyle;\n\n        // Consider case:\n        // {\n        //     data: [{\n        //         value: 12,\n        //         label: {\n        //             normal: {\n        //                 rich: {\n        //                     // no 'a' here but using parent 'a'.\n        //                 }\n        //             }\n        //         }\n        //     }],\n        //     rich: {\n        //         a: { ... }\n        //     }\n        // }\n        var richItemNames = getRichItemNames(textStyleModel);\n        var richResult;\n        if (richItemNames) {\n            richResult = {};\n            for (var name in richItemNames) {\n                if (richItemNames.hasOwnProperty(name)) {\n                    // Cascade is supported in rich.\n                    var richTextStyle = textStyleModel.getModel(['rich', name]);\n                    // In rich, never `disableBox`.\n                    setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt);\n                }\n            }\n        }\n        textStyle.rich = richResult;\n\n        setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, true);\n\n        if (opt.forceRich && !opt.textStyle) {\n            opt.textStyle = {};\n        }\n\n        return textStyle;\n    }\n\n    // Consider case:\n    // {\n    //     data: [{\n    //         value: 12,\n    //         label: {\n    //             normal: {\n    //                 rich: {\n    //                     // no 'a' here but using parent 'a'.\n    //                 }\n    //             }\n    //         }\n    //     }],\n    //     rich: {\n    //         a: { ... }\n    //     }\n    // }\n    function getRichItemNames(textStyleModel) {\n        // Use object to remove duplicated names.\n        var richItemNameMap;\n        while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n            var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n            if (rich) {\n                richItemNameMap = richItemNameMap || {};\n                for (var name in rich) {\n                    if (rich.hasOwnProperty(name)) {\n                        richItemNameMap[name] = 1;\n                    }\n                }\n            }\n            textStyleModel = textStyleModel.parentModel;\n        }\n        return richItemNameMap;\n    }\n\n    function setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isBlock) {\n        var forMerge = opt.forMerge;\n\n        // In merge mode, default value should not be given.\n        globalTextStyle = !forMerge && globalTextStyle || EMPTY_OBJ;\n\n        var textFill = getAutoColor(textStyleModel.getShallow('color'));\n        var textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'));\n        var textLineWidth = textStyleModel.getShallow('textBorderWidth');\n\n        if (!forMerge) {\n            textFill == null && (textFill = globalTextStyle.color);\n            textStroke == null && (textStroke = globalTextStyle.textBorderColor);\n            textLineWidth == null && (textLineWidth = globalTextStyle.textBorderWidth);\n\n            if (textFill == null\n                && opt.checkInside\n                && opt.checkInside(textStyleModel, textStyle.textPosition)\n            ) {\n                textFill = '#fff';\n                // Consider text with #fff overflow its container.\n                if (textStroke == null) {\n                    textStroke = opt.defaultTextColor;\n                    textLineWidth == null && (textLineWidth = 2);\n                }\n            }\n\n            textFill == null && (textFill = opt.defaultTextColor);\n        }\n\n        textStyle.textFill = textFill;\n        textStyle.textStroke = textStroke;\n        textStyle.textLineWidth = textLineWidth;\n\n        // Do not use `getFont` here, because merge should be supported, where\n        // part of these properties may be changed in emphasis style, and the\n        // others should remain their original value got from normal style.\n        textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n        textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n        textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n        textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n\n        textStyle.textAlign = textStyleModel.getShallow('align');\n        textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign')\n            || textStyleModel.getShallow('baseline');\n\n        textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n        textStyle.textWidth = textStyleModel.getShallow('width');\n        textStyle.textHeight = textStyleModel.getShallow('height');\n        textStyle.textTag = textStyleModel.getShallow('tag');\n\n        if (!isBlock || !opt.disableBox) {\n            textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n            textStyle.textPadding = textStyleModel.getShallow('padding');\n            textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n            textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n            textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n\n            textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n            textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n            textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n            textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n        }\n\n        textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor')\n            || globalTextStyle.textShadowColor;\n        textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur')\n            || globalTextStyle.textShadowBlur;\n        textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX')\n            || globalTextStyle.textShadowOffsetX;\n        textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY')\n            || globalTextStyle.textShadowOffsetY;\n    }\n\n    function getAutoColor(color, opt) {\n        return color !== 'auto' ? color : (opt && opt.autoColor) ? opt.autoColor : null;\n    }\n\n    graphic.getFont = function (opt, ecModel) {\n        // ecModel or default text style model.\n        var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n        return [\n            // FIXME in node-canvas fontWeight is before fontStyle\n            opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '',\n            opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '',\n            (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px',\n            opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'\n        ].join(' ');\n    };\n\n    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n        if (typeof dataIndex === 'function') {\n            cb = dataIndex;\n            dataIndex = null;\n        }\n        // Do not check 'animation' property directly here. Consider this case:\n        // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n        // but its parent model (`seriesModel`) does.\n        var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n        if (animationEnabled) {\n            var postfix = isUpdate ? 'Update' : '';\n            var duration = animatableModel.getShallow('animationDuration' + postfix);\n            var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n            var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n            if (typeof animationDelay === 'function') {\n                animationDelay = animationDelay(\n                    dataIndex,\n                    animatableModel.getAnimationDelayParams\n                        ? animatableModel.getAnimationDelayParams(el, dataIndex)\n                        : null\n                );\n            }\n            if (typeof duration === 'function') {\n                duration = duration(dataIndex);\n            }\n\n            duration > 0\n                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb)\n                : (el.stopAnimation(), el.attr(props), cb && cb());\n        }\n        else {\n            el.stopAnimation();\n            el.attr(props);\n            cb && cb();\n        }\n    }\n\n    /**\n     * Update graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} [cb]\n     * @example\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n     *     // Or\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, function () { console.log('Animation done!'); });\n     */\n    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Init graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} cb\n     */\n    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Get transform matrix of target (param target),\n     * in coordinate of its ancestor (param ancestor)\n     *\n     * @param {module:zrender/mixin/Transformable} target\n     * @param {module:zrender/mixin/Transformable} [ancestor]\n     */\n    graphic.getTransform = function (target, ancestor) {\n        var mat = matrix.identity([]);\n\n        while (target && target !== ancestor) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n\n        return mat;\n    };\n\n    /**\n     * Apply transform to an vertex.\n     * @param {Array.<number>} target [x, y]\n     * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n     *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n     *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {Array.<number>} [x, y]\n     */\n    graphic.applyTransform = function (target, transform, invert) {\n        if (transform && !zrUtil.isArrayLike(transform)) {\n            transform = Transformable.getLocalTransform(transform);\n        }\n\n        if (invert) {\n            transform = matrix.invert([], transform);\n        }\n        return vector.applyTransform([], target, transform);\n    };\n\n    /**\n     * @param {string} direction 'left' 'right' 'top' 'bottom'\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n     */\n    graphic.transformDirection = function (direction, transform, invert) {\n\n        // Pick a base, ensure that transform result will not be (0, 0).\n        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[0]);\n        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[2]);\n\n        var vertex = [\n            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\n            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\n        ];\n\n        vertex = graphic.applyTransform(vertex, transform, invert);\n\n        return Math.abs(vertex[0]) > Math.abs(vertex[1])\n            ? (vertex[0] > 0 ? 'right' : 'left')\n            : (vertex[1] > 0 ? 'bottom' : 'top');\n    };\n\n    /**\n     * Apply group transition animation from g1 to g2.\n     * If no animatableModel, no animation.\n     */\n    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\n        if (!g1 || !g2) {\n            return;\n        }\n\n        function getElMap(g) {\n            var elMap = {};\n            g.traverse(function (el) {\n                if (!el.isGroup && el.anid) {\n                    elMap[el.anid] = el;\n                }\n            });\n            return elMap;\n        }\n        function getAnimatableProps(el) {\n            var obj = {\n                position: vector.clone(el.position),\n                rotation: el.rotation\n            };\n            if (el.shape) {\n                obj.shape = zrUtil.extend({}, el.shape);\n            }\n            return obj;\n        }\n        var elMap1 = getElMap(g1);\n\n        g2.traverse(function (el) {\n            if (!el.isGroup && el.anid) {\n                var oldEl = elMap1[el.anid];\n                if (oldEl) {\n                    var newProp = getAnimatableProps(el);\n                    el.attr(getAnimatableProps(oldEl));\n                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\n                }\n                // else {\n                //     if (el.previousProps) {\n                //         graphic.updateProps\n                //     }\n                // }\n            }\n        });\n    };\n\n    /**\n     * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n     * @param {Object} rect {x, y, width, height}\n     * @return {Array.<Array.<number>>} A new clipped points.\n     */\n    graphic.clipPointsByRect = function (points, rect) {\n        return zrUtil.map(points, function (point) {\n            var x = point[0];\n            x = mathMax(x, rect.x);\n            x = mathMin(x, rect.x + rect.width);\n            var y = point[1];\n            y = mathMax(y, rect.y);\n            y = mathMin(y, rect.y + rect.height);\n            return [x, y];\n        });\n    };\n\n    /**\n     * @param {Object} targetRect {x, y, width, height}\n     * @param {Object} rect {x, y, width, height}\n     * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n     */\n    graphic.clipRectByRect = function (targetRect, rect) {\n        var x = mathMax(targetRect.x, rect.x);\n        var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n        var y = mathMax(targetRect.y, rect.y);\n        var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n        if (x2 >= x && y2 >= y) {\n            return {\n                x: x,\n                y: y,\n                width: x2 - x,\n                height: y2 - y\n            };\n        }\n    };\n\n    /**\n     * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n     * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n     * @param {Object} [rect] {x, y, width, height}\n     * @return {module:zrender/Element} Icon path or image element.\n     */\n    graphic.createIcon = function (iconStr, opt, rect) {\n        opt = zrUtil.extend({rectHover: true}, opt);\n        var style = opt.style = {strokeNoScale: true};\n        rect = rect || {x: -1, y: -1, width: 2, height: 2};\n\n        if (iconStr) {\n            return iconStr.indexOf('image://') === 0\n                ? (\n                    style.image = iconStr.slice(8),\n                    zrUtil.defaults(style, rect),\n                    new graphic.Image(opt)\n                )\n                : (\n                    graphic.makePath(\n                        iconStr.replace('path://', ''),\n                        opt,\n                        rect,\n                        'center'\n                    )\n                );\n        }\n\n    };\n\n    module.exports = graphic;\n\n\n\n/***/ }),\n\n/***/ 609:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var formatUtil = __webpack_require__(613);\n    var nubmerUtil = __webpack_require__(610);\n    var Model = __webpack_require__(614);\n    var zrUtil = __webpack_require__(606);\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var modelUtil = {};\n\n    /**\n     * If value is not array, then translate it to array.\n     * @param  {*} value\n     * @return {Array} [value] or value\n     */\n    modelUtil.normalizeToArray = function (value) {\n        return value instanceof Array\n            ? value\n            : value == null\n            ? []\n            : [value];\n    };\n\n    /**\n     * Sync default option between normal and emphasis like `position` and `show`\n     * In case some one will write code like\n     *     label: {\n     *         normal: {\n     *             show: false,\n     *             position: 'outside',\n     *             fontSize: 18\n     *         },\n     *         emphasis: {\n     *             show: true\n     *         }\n     *     }\n     * @param {Object} opt\n     * @param {Array.<string>} subOpts\n     */\n     modelUtil.defaultEmphasis = function (opt, subOpts) {\n        if (opt) {\n            var emphasisOpt = opt.emphasis = opt.emphasis || {};\n            var normalOpt = opt.normal = opt.normal || {};\n\n            // Default emphasis option from normal\n            for (var i = 0, len = subOpts.length; i < len; i++) {\n                var subOptName = subOpts[i];\n                if (!emphasisOpt.hasOwnProperty(subOptName)\n                    && normalOpt.hasOwnProperty(subOptName)\n                ) {\n                    emphasisOpt[subOptName] = normalOpt[subOptName];\n                }\n            }\n        }\n    };\n\n    modelUtil.TEXT_STYLE_OPTIONS = [\n        'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n        'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth',\n        'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline',\n        'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY',\n        'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY',\n        'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding'\n    ];\n\n    // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n    //     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n    //     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n    //     // FIXME: deprecated, check and remove it.\n    //     'textStyle'\n    // ]);\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method retieves value from data.\n     * @param {string|number|Date|Array|Object} dataItem\n     * @return {number|string|Date|Array.<number|string|Date>}\n     */\n    modelUtil.getDataItemValue = function (dataItem) {\n        // Performance sensitive.\n        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n    };\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method determine if dataItem has extra option besides value\n     * @param {string|number|Date|Array|Object} dataItem\n     */\n    modelUtil.isDataItemOption = function (dataItem) {\n        return isObject(dataItem)\n            && !(dataItem instanceof Array);\n            // // markLine data can be array\n            // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n    };\n\n    /**\n     * This helper method convert value in data.\n     * @param {string|number|Date} value\n     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n     */\n    modelUtil.converDataValue = function (value, dimInfo) {\n        // Performance sensitive.\n        var dimType = dimInfo && dimInfo.type;\n        if (dimType === 'ordinal') {\n            return value;\n        }\n\n        if (dimType === 'time'\n            // spead up when using timestamp\n            && typeof value !== 'number'\n            && value != null\n            && value !== '-'\n        ) {\n            value = +nubmerUtil.parseDate(value);\n        }\n\n        // dimType defaults 'number'.\n        // If dimType is not ordinal and value is null or undefined or NaN or '-',\n        // parse to NaN.\n        return (value == null || value === '')\n            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n    };\n\n    /**\n     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n     * @param {module:echarts/data/List} data\n     * @param {Object} opt\n     * @param {string} [opt.seriesIndex]\n     * @param {Object} [opt.name]\n     * @param {Object} [opt.mainType]\n     * @param {Object} [opt.subType]\n     */\n    modelUtil.createDataFormatModel = function (data, opt) {\n        var model = new Model();\n        zrUtil.mixin(model, modelUtil.dataFormatMixin);\n        model.seriesIndex = opt.seriesIndex;\n        model.name = opt.name || '';\n        model.mainType = opt.mainType;\n        model.subType = opt.subType;\n\n        model.getData = function () {\n            return data;\n        };\n        return model;\n    };\n\n    // PENDING A little ugly\n    modelUtil.dataFormatMixin = {\n        /**\n         * Get params for formatter\n         * @param {number} dataIndex\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getDataParams: function (dataIndex, dataType) {\n            var data = this.getData(dataType);\n            var rawValue = this.getRawValue(dataIndex, dataType);\n            var rawDataIndex = data.getRawIndex(dataIndex);\n            var name = data.getName(dataIndex, true);\n            var itemOpt = data.getRawDataItem(dataIndex);\n            var color = data.getItemVisual(dataIndex, 'color');\n\n            return {\n                componentType: this.mainType,\n                componentSubType: this.subType,\n                seriesType: this.mainType === 'series' ? this.subType : null,\n                seriesIndex: this.seriesIndex,\n                seriesId: this.id,\n                seriesName: this.name,\n                name: name,\n                dataIndex: rawDataIndex,\n                data: itemOpt,\n                dataType: dataType,\n                value: rawValue,\n                color: color,\n                marker: formatUtil.getTooltipMarker(color),\n\n                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n                $vars: ['seriesName', 'name', 'value']\n            };\n        },\n\n        /**\n         * Format label\n         * @param {number} dataIndex\n         * @param {string} [status='normal'] 'normal' or 'emphasis'\n         * @param {string} [dataType]\n         * @param {number} [dimIndex]\n         * @param {string} [labelProp='label']\n         * @return {string}\n         */\n        getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n            status = status || 'normal';\n            var data = this.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var params = this.getDataParams(dataIndex, dataType);\n            if (dimIndex != null && (params.value instanceof Array)) {\n                params.value = params.value[dimIndex];\n            }\n\n            var formatter = itemModel.get([labelProp || 'label', status, 'formatter']);\n\n            if (typeof formatter === 'function') {\n                params.status = status;\n                return formatter(params);\n            }\n            else if (typeof formatter === 'string') {\n                return formatUtil.formatTpl(formatter, params);\n            }\n        },\n\n        /**\n         * Get raw value in option\n         * @param {number} idx\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getRawValue: function (idx, dataType) {\n            var data = this.getData(dataType);\n            var dataItem = data.getRawDataItem(idx);\n            if (dataItem != null) {\n                return (isObject(dataItem) && !(dataItem instanceof Array))\n                    ? dataItem.value : dataItem;\n            }\n        },\n\n        /**\n         * Should be implemented.\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         * @return {string} tooltip string\n         */\n        formatTooltip: zrUtil.noop\n    };\n\n    /**\n     * Mapping to exists for merge.\n     *\n     * @public\n     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n     * @param {Object|Array.<Object>} newCptOptions\n     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          index of which is the same as exists.\n     */\n    modelUtil.mappingToExists = function (exists, newCptOptions) {\n        // Mapping by the order by original option (but not order of\n        // new option) in merge mode. Because we should ensure\n        // some specified index (like xAxisIndex) is consistent with\n        // original option, which is easy to understand, espatially in\n        // media query. And in most case, merge option is used to\n        // update partial option but not be expected to change order.\n        newCptOptions = (newCptOptions || []).slice();\n\n        var result = zrUtil.map(exists || [], function (obj, index) {\n            return {exist: obj};\n        });\n\n        // Mapping by id or name if specified.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            // id has highest priority.\n            for (var i = 0; i < result.length; i++) {\n                if (!result[i].option // Consider name: two map to one.\n                    && cptOption.id != null\n                    && result[i].exist.id === cptOption.id + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n\n            for (var i = 0; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option // Consider name: two map to one.\n                    // Can not match when both ids exist but different.\n                    && (exist.id == null || cptOption.id == null)\n                    && cptOption.name != null\n                    && !modelUtil.isIdInner(cptOption)\n                    && !modelUtil.isIdInner(exist)\n                    && exist.name === cptOption.name + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n        });\n\n        // Otherwise mapping by index.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            var i = 0;\n            for (; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option\n                    // Existing model that already has id should be able to\n                    // mapped to (because after mapping performed model may\n                    // be assigned with a id, whish should not affect next\n                    // mapping), except those has inner id.\n                    && !modelUtil.isIdInner(exist)\n                    // Caution:\n                    // Do not overwrite id. But name can be overwritten,\n                    // because axis use name as 'show label text'.\n                    // 'exist' always has id and name and we dont\n                    // need to check it.\n                    && cptOption.id == null\n                ) {\n                    result[i].option = cptOption;\n                    break;\n                }\n            }\n\n            if (i >= result.length) {\n                result.push({option: cptOption});\n            }\n        });\n\n        return result;\n    };\n\n    /**\n     * Make id and name for mapping result (result of mappingToExists)\n     * into `keyInfo` field.\n     *\n     * @public\n     * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          which order is the same as exists.\n     * @return {Array.<Object>} The input.\n     */\n    modelUtil.makeIdAndName = function (mapResult) {\n        // We use this id to hash component models and view instances\n        // in echarts. id can be specified by user, or auto generated.\n\n        // The id generation rule ensures new view instance are able\n        // to mapped to old instance when setOption are called in\n        // no-merge mode. So we generate model id by name and plus\n        // type in view id.\n\n        // name can be duplicated among components, which is convenient\n        // to specify multi components (like series) by one name.\n\n        // Ensure that each id is distinct.\n        var idMap = zrUtil.createHashMap();\n\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            existCpt && idMap.set(existCpt.id, item);\n        });\n\n        each(mapResult, function (item, index) {\n            var opt = item.option;\n\n            zrUtil.assert(\n                !opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item,\n                'id duplicates: ' + (opt && opt.id)\n            );\n\n            opt && opt.id != null && idMap.set(opt.id, item);\n            !item.keyInfo && (item.keyInfo = {});\n        });\n\n        // Make name and id.\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            var opt = item.option;\n            var keyInfo = item.keyInfo;\n\n            if (!isObject(opt)) {\n                return;\n            }\n\n            // name can be overwitten. Consider case: axis.name = '20km'.\n            // But id generated by name will not be changed, which affect\n            // only in that case: setOption with 'not merge mode' and view\n            // instance will be recreated, which can be accepted.\n            keyInfo.name = opt.name != null\n                ? opt.name + ''\n                : existCpt\n                ? existCpt.name\n                : '\\0-'; // name may be displayed on screen, so use '-'.\n\n            if (existCpt) {\n                keyInfo.id = existCpt.id;\n            }\n            else if (opt.id != null) {\n                keyInfo.id = opt.id + '';\n            }\n            else {\n                // Consider this situatoin:\n                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n                // Series with the same name between optionA and optionB\n                // should be mapped.\n                var idNum = 0;\n                do {\n                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n                }\n                while (idMap.get(keyInfo.id));\n            }\n\n            idMap.set(keyInfo.id, item);\n        });\n    };\n\n    /**\n     * @public\n     * @param {Object} cptOption\n     * @return {boolean}\n     */\n    modelUtil.isIdInner = function (cptOption) {\n        return isObject(cptOption)\n            && cptOption.id\n            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n    };\n\n    /**\n     * A helper for removing duplicate items between batchA and batchB,\n     * and in themselves, and categorize by series.\n     *\n     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n     */\n    modelUtil.compressBatches = function (batchA, batchB) {\n        var mapA = {};\n        var mapB = {};\n\n        makeMap(batchA || [], mapA);\n        makeMap(batchB || [], mapB, mapA);\n\n        return [mapToArray(mapA), mapToArray(mapB)];\n\n        function makeMap(sourceBatch, map, otherMap) {\n            for (var i = 0, len = sourceBatch.length; i < len; i++) {\n                var seriesId = sourceBatch[i].seriesId;\n                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\n                var otherDataIndices = otherMap && otherMap[seriesId];\n\n                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n                    var dataIndex = dataIndices[j];\n\n                    if (otherDataIndices && otherDataIndices[dataIndex]) {\n                        otherDataIndices[dataIndex] = null;\n                    }\n                    else {\n                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n                    }\n                }\n            }\n        }\n\n        function mapToArray(map, isData) {\n            var result = [];\n            for (var i in map) {\n                if (map.hasOwnProperty(i) && map[i] != null) {\n                    if (isData) {\n                        result.push(+i);\n                    }\n                    else {\n                        var dataIndices = mapToArray(map[i], true);\n                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\n                    }\n                }\n            }\n            return result;\n        }\n    };\n\n    /**\n     * @param {module:echarts/data/List} data\n     * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n     *                         each of which can be Array or primary type.\n     * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n     */\n    modelUtil.queryDataIndex = function (data, payload) {\n        if (payload.dataIndexInside != null) {\n            return payload.dataIndexInside;\n        }\n        else if (payload.dataIndex != null) {\n            return zrUtil.isArray(payload.dataIndex)\n                ? zrUtil.map(payload.dataIndex, function (value) {\n                    return data.indexOfRawIndex(value);\n                })\n                : data.indexOfRawIndex(payload.dataIndex);\n        }\n        else if (payload.name != null) {\n            return zrUtil.isArray(payload.name)\n                ? zrUtil.map(payload.name, function (value) {\n                    return data.indexOfName(value);\n                })\n                : data.indexOfName(payload.name);\n        }\n    };\n\n    /**\n     * Enable property storage to any host object.\n     * Notice: Serialization is not supported.\n     *\n     * For example:\n     * var get = modelUitl.makeGetter();\n     *\n     * function some(hostObj) {\n     *      get(hostObj)._someProperty = 1212;\n     *      ...\n     * }\n     *\n     * @return {Function}\n     */\n    modelUtil.makeGetter = (function () {\n        var index = 0;\n        return function () {\n            var key = '\\0__ec_prop_getter_' + index++;\n            return function (hostObj) {\n                return hostObj[key] || (hostObj[key] = {});\n            };\n        };\n    })();\n\n    /**\n     * @param {module:echarts/model/Global} ecModel\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex, seriesId, seriesName,\n     *            geoIndex, geoId, geoName,\n     *            bmapIndex, bmapId, bmapName,\n     *            xAxisIndex, xAxisId, xAxisName,\n     *            yAxisIndex, yAxisId, yAxisName,\n     *            gridIndex, gridId, gridName,\n     *            ... (can be extended)\n     *        }\n     *        Each properties can be number|string|Array.<number>|Array.<string>\n     *        For example, a finder could be\n     *        {\n     *            seriesIndex: 3,\n     *            geoId: ['aa', 'cc'],\n     *            gridName: ['xx', 'rr']\n     *        }\n     *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n     *        If nothing or null/undefined specified, return nothing.\n     * @param {Object} [opt]\n     * @param {string} [opt.defaultMainType]\n     * @param {Array.<string>} [opt.includeMainTypes]\n     * @return {Object} result like:\n     *        {\n     *            seriesModels: [seriesModel1, seriesModel2],\n     *            seriesModel: seriesModel1, // The first model\n     *            geoModels: [geoModel1, geoModel2],\n     *            geoModel: geoModel1, // The first model\n     *            ...\n     *        }\n     */\n    modelUtil.parseFinder = function (ecModel, finder, opt) {\n        if (zrUtil.isString(finder)) {\n            var obj = {};\n            obj[finder + 'Index'] = 0;\n            finder = obj;\n        }\n\n        var defaultMainType = opt && opt.defaultMainType;\n        if (defaultMainType\n            && !has(finder, defaultMainType + 'Index')\n            && !has(finder, defaultMainType + 'Id')\n            && !has(finder, defaultMainType + 'Name')\n        ) {\n            finder[defaultMainType + 'Index'] = 0;\n        }\n\n        var result = {};\n\n        each(finder, function (value, key) {\n            var value = finder[key];\n\n            // Exclude 'dataIndex' and other illgal keys.\n            if (key === 'dataIndex' || key === 'dataIndexInside') {\n                result[key] = value;\n                return;\n            }\n\n            var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n            var mainType = parsedKey[1];\n            var queryType = (parsedKey[2] || '').toLowerCase();\n\n            if (!mainType\n                || !queryType\n                || value == null\n                || (queryType === 'index' && value === 'none')\n                || (opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0)\n            ) {\n                return;\n            }\n\n            var queryParam = {mainType: mainType};\n            if (queryType !== 'index' || value !== 'all') {\n                queryParam[queryType] = value;\n            }\n\n            var models = ecModel.queryComponents(queryParam);\n            result[mainType + 'Models'] = models;\n            result[mainType + 'Model'] = models[0];\n        });\n\n        return result;\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string|number} dataDim\n     * @return {string}\n     */\n    modelUtil.dataDimToCoordDim = function (data, dataDim) {\n        var dimensions = data.dimensions;\n        dataDim = data.getDimension(dataDim);\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimItem = data.getDimensionInfo(dimensions[i]);\n            if (dimItem.name === dataDim) {\n                return dimItem.coordDim;\n            }\n        }\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string} coordDim\n     * @return {Array.<string>} data dimensions on the coordDim.\n     */\n    modelUtil.coordDimToDataDim = function (data, coordDim) {\n        var dataDim = [];\n        each(data.dimensions, function (dimName) {\n            var dimItem = data.getDimensionInfo(dimName);\n            if (dimItem.coordDim === coordDim) {\n                dataDim[dimItem.coordDimIndex] = dimItem.name;\n            }\n        });\n        return dataDim;\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string} otherDim Can be `otherDims`\n     *                        like 'label' or 'tooltip'.\n     * @return {Array.<string>} data dimensions on the otherDim.\n     */\n    modelUtil.otherDimToDataDim = function (data, otherDim) {\n        var dataDim = [];\n        each(data.dimensions, function (dimName) {\n            var dimItem = data.getDimensionInfo(dimName);\n            var otherDims = dimItem.otherDims;\n            var dimIndex = otherDims[otherDim];\n            if (dimIndex != null && dimIndex !== false) {\n                dataDim[dimIndex] = dimItem.name;\n            }\n        });\n        return dataDim;\n    };\n\n    function has(obj, prop) {\n        return obj && obj.hasOwnProperty(prop);\n    }\n\n    module.exports = modelUtil;\n\n\n\n/***/ }),\n\n/***/ 610:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 数值处理模块\n * @module echarts/util/number\n */\n\n\n\n    var zrUtil = __webpack_require__(606);\n\n    var number = {};\n\n    var RADIAN_EPSILON = 1e-4;\n\n    function _trim(str) {\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n\n    /**\n     * Linear mapping a value from domain to range\n     * @memberOf module:echarts/util/number\n     * @param  {(number|Array.<number>)} val\n     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n     * @param  {boolean} clamp\n     * @return {(number|Array.<number>}\n     */\n    number.linearMap = function (val, domain, range, clamp) {\n        var subDomain = domain[1] - domain[0];\n        var subRange = range[1] - range[0];\n\n        if (subDomain === 0) {\n            return subRange === 0\n                ? range[0]\n                : (range[0] + range[1]) / 2;\n        }\n\n        // Avoid accuracy problem in edge, such as\n        // 146.39 - 62.83 === 83.55999999999999.\n        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n        // It is a little verbose for efficiency considering this method\n        // is a hotspot.\n        if (clamp) {\n            if (subDomain > 0) {\n                if (val <= domain[0]) {\n                    return range[0];\n                }\n                else if (val >= domain[1]) {\n                    return range[1];\n                }\n            }\n            else {\n                if (val >= domain[0]) {\n                    return range[0];\n                }\n                else if (val <= domain[1]) {\n                    return range[1];\n                }\n            }\n        }\n        else {\n            if (val === domain[0]) {\n                return range[0];\n            }\n            if (val === domain[1]) {\n                return range[1];\n            }\n        }\n\n        return (val - domain[0]) / subDomain * subRange + range[0];\n    };\n\n    /**\n     * Convert a percent string to absolute number.\n     * Returns NaN if percent is not a valid string or number\n     * @memberOf module:echarts/util/number\n     * @param {string|number} percent\n     * @param {number} all\n     * @return {number}\n     */\n    number.parsePercent = function(percent, all) {\n        switch (percent) {\n            case 'center':\n            case 'middle':\n                percent = '50%';\n                break;\n            case 'left':\n            case 'top':\n                percent = '0%';\n                break;\n            case 'right':\n            case 'bottom':\n                percent = '100%';\n                break;\n        }\n        if (typeof percent === 'string') {\n            if (_trim(percent).match(/%$/)) {\n                return parseFloat(percent) / 100 * all;\n            }\n\n            return parseFloat(percent);\n        }\n\n        return percent == null ? NaN : +percent;\n    };\n\n    /**\n     * (1) Fix rounding error of float numbers.\n     * (2) Support return string to avoid scientific notation like '3.5e-7'.\n     *\n     * @param {number} x\n     * @param {number} [precision]\n     * @param {boolean} [returnStr]\n     * @return {number|string}\n     */\n    number.round = function (x, precision, returnStr) {\n        if (precision == null) {\n            precision = 10;\n        }\n        // Avoid range error\n        precision = Math.min(Math.max(0, precision), 20);\n        x = (+x).toFixed(precision);\n        return returnStr ? x : +x;\n    };\n\n    number.asc = function (arr) {\n        arr.sort(function (a, b) {\n            return a - b;\n        });\n        return arr;\n    };\n\n    /**\n     * Get precision\n     * @param {number} val\n     */\n    number.getPrecision = function (val) {\n        val = +val;\n        if (isNaN(val)) {\n            return 0;\n        }\n        // It is much faster than methods converting number to string as follows\n        //      var tmp = val.toString();\n        //      return tmp.length - 1 - tmp.indexOf('.');\n        // especially when precision is low\n        var e = 1;\n        var count = 0;\n        while (Math.round(val * e) / e !== val) {\n            e *= 10;\n            count++;\n        }\n        return count;\n    };\n\n    /**\n     * @param {string|number} val\n     * @return {number}\n     */\n    number.getPrecisionSafe = function (val) {\n        var str = val.toString();\n\n        // Consider scientific notation: '3.4e-12' '3.4e+12'\n        var eIndex = str.indexOf('e');\n        if (eIndex > 0) {\n            var precision = +str.slice(eIndex + 1);\n            return precision < 0 ? -precision : 0;\n        }\n        else {\n            var dotIndex = str.indexOf('.');\n            return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n        }\n    };\n\n    /**\n     * Minimal dicernible data precisioin according to a single pixel.\n     *\n     * @param {Array.<number>} dataExtent\n     * @param {Array.<number>} pixelExtent\n     * @return {number} precision\n     */\n    number.getPixelPrecision = function (dataExtent, pixelExtent) {\n        var log = Math.log;\n        var LN10 = Math.LN10;\n        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n        // toFixed() digits argument must be between 0 and 20.\n        var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n        return !isFinite(precision) ? 20 : precision;\n    };\n\n    /**\n     * Get a data of given precision, assuring the sum of percentages\n     * in valueList is 1.\n     * The largest remainer method is used.\n     * https://en.wikipedia.org/wiki/Largest_remainder_method\n     *\n     * @param {Array.<number>} valueList a list of all data\n     * @param {number} idx index of the data to be processed in valueList\n     * @param {number} precision integer number showing digits of precision\n     * @return {number} percent ranging from 0 to 100\n     */\n    number.getPercentWithPrecision = function (valueList, idx, precision) {\n        if (!valueList[idx]) {\n            return 0;\n        }\n\n        var sum = zrUtil.reduce(valueList, function (acc, val) {\n            return acc + (isNaN(val) ? 0 : val);\n        }, 0);\n        if (sum === 0) {\n            return 0;\n        }\n\n        var digits = Math.pow(10, precision);\n        var votesPerQuota = zrUtil.map(valueList, function (val) {\n            return (isNaN(val) ? 0 : val) / sum * digits * 100;\n        });\n        var targetSeats = digits * 100;\n\n        var seats = zrUtil.map(votesPerQuota, function (votes) {\n            // Assign automatic seats.\n            return Math.floor(votes);\n        });\n        var currentSum = zrUtil.reduce(seats, function (acc, val) {\n            return acc + val;\n        }, 0);\n\n        var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n            return votes - seats[idx];\n        });\n\n        // Has remainding votes.\n        while (currentSum < targetSeats) {\n            // Find next largest remainder.\n            var max = Number.NEGATIVE_INFINITY;\n            var maxId = null;\n            for (var i = 0, len = remainder.length; i < len; ++i) {\n                if (remainder[i] > max) {\n                    max = remainder[i];\n                    maxId = i;\n                }\n            }\n\n            // Add a vote to max remainder.\n            ++seats[maxId];\n            remainder[maxId] = 0;\n            ++currentSum;\n        }\n\n        return seats[idx] / digits;\n    };\n\n    // Number.MAX_SAFE_INTEGER, ie do not support.\n    number.MAX_SAFE_INTEGER = 9007199254740991;\n\n    /**\n     * To 0 - 2 * PI, considering negative radian.\n     * @param {number} radian\n     * @return {number}\n     */\n    number.remRadian = function (radian) {\n        var pi2 = Math.PI * 2;\n        return (radian % pi2 + pi2) % pi2;\n    };\n\n    /**\n     * @param {type} radian\n     * @return {boolean}\n     */\n    number.isRadianAroundZero = function (val) {\n        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n    };\n\n    var TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n    /**\n     * @return {number} in minutes\n     */\n    number.getTimezoneOffset = function () {\n        return (new Date()).getTimezoneOffset();\n    };\n\n    /**\n     * @param {string|Date|number} value These values can be accepted:\n     *   + An instance of Date, represent a time in its own time zone.\n     *   + Or string in a subset of ISO 8601, only including:\n     *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n     *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n     *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n     *     all of which will be treated as local time if time zone is not specified\n     *     (see <https://momentjs.com/>).\n     *   + Or other string format, including (all of which will be treated as loacal time):\n     *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n     *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n     *   + a timestamp, which represent a time in UTC.\n     * @return {Date} date\n     */\n    number.parseDate = function (value) {\n        if (value instanceof Date) {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            // Different browsers parse date in different way, so we parse it manually.\n            // Some other issues:\n            // new Date('1970-01-01') is UTC,\n            // new Date('1970/01/01') and new Date('1970-1-01') is local.\n            // See issue #3623\n            var match = TIME_REG.exec(value);\n\n            if (!match) {\n                // return Invalid Date.\n                return new Date(NaN);\n            }\n\n            var timezoneOffset = number.getTimezoneOffset();\n            var timeOffset = !match[8]\n                ? 0\n                : match[8].toUpperCase() === 'Z'\n                ? timezoneOffset\n                : +match[8].slice(0, 3) * 60 + timezoneOffset;\n\n            // match[n] can only be string or undefined.\n            // But take care of '12' + 1 => '121'.\n            return new Date(\n                +match[1],\n                +(match[2] || 1) - 1,\n                +match[3] || 1,\n                +match[4] || 0,\n                +(match[5] || 0) - timeOffset,\n                +match[6] || 0,\n                +match[7] || 0\n            );\n        }\n        else if (value == null) {\n            return new Date(NaN);\n        }\n\n        return new Date(Math.round(value));\n    };\n\n    /**\n     * Quantity of a number. e.g. 0.1, 1, 10, 100\n     *\n     * @param  {number} val\n     * @return {number}\n     */\n    number.quantity = function (val) {\n        return Math.pow(10, quantityExponent(val));\n    };\n\n    function quantityExponent(val) {\n        return Math.floor(Math.log(val) / Math.LN10);\n    }\n\n    /**\n     * find a “nice” number approximately equal to x. Round the number if round = true,\n     * take ceiling if round = false. The primary observation is that the “nicest”\n     * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n     *\n     * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n     *\n     * @param  {number} val Non-negative value.\n     * @param  {boolean} round\n     * @return {number}\n     */\n    number.nice = function (val, round) {\n        var exponent = quantityExponent(val);\n        var exp10 = Math.pow(10, exponent);\n        var f = val / exp10; // 1 <= f < 10\n        var nf;\n        if (round) {\n            if (f < 1.5) { nf = 1; }\n            else if (f < 2.5) { nf = 2; }\n            else if (f < 4) { nf = 3; }\n            else if (f < 7) { nf = 5; }\n            else { nf = 10; }\n        }\n        else {\n            if (f < 1) { nf = 1; }\n            else if (f < 2) { nf = 2; }\n            else if (f < 3) { nf = 3; }\n            else if (f < 5) { nf = 5; }\n            else { nf = 10; }\n        }\n        val = nf * exp10;\n\n        // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n        // 20 is the uppper bound of toFixed.\n        return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n    };\n\n    /**\n     * Order intervals asc, and split them when overlap.\n     * expect(numberUtil.reformIntervals([\n     *     {interval: [18, 62], close: [1, 1]},\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [1, 1]},\n     *     {interval: [62, 150], close: [1, 1]},\n     *     {interval: [106, 150], close: [1, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ])).toEqual([\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [0, 1]},\n     *     {interval: [18, 62], close: [0, 1]},\n     *     {interval: [62, 150], close: [0, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ]);\n     * @param {Array.<Object>} list, where `close` mean open or close\n     *        of the interval, and Infinity can be used.\n     * @return {Array.<Object>} The origin list, which has been reformed.\n     */\n    number.reformIntervals = function (list) {\n        list.sort(function (a, b) {\n            return littleThan(a, b, 0) ? -1 : 1;\n        });\n\n        var curr = -Infinity;\n        var currClose = 1;\n        for (var i = 0; i < list.length;) {\n            var interval = list[i].interval;\n            var close = list[i].close;\n\n            for (var lg = 0; lg < 2; lg++) {\n                if (interval[lg] <= curr) {\n                    interval[lg] = curr;\n                    close[lg] = !lg ? 1 - currClose : 1;\n                }\n                curr = interval[lg];\n                currClose = close[lg];\n            }\n\n            if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n                list.splice(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n\n        return list;\n\n        function littleThan(a, b, lg) {\n            return a.interval[lg] < b.interval[lg]\n                || (\n                    a.interval[lg] === b.interval[lg]\n                    && (\n                        (a.close[lg] - b.close[lg] === (!lg ? 1 : -1))\n                        || (!lg && littleThan(a, b, 1))\n                    )\n                );\n        }\n    };\n\n    /**\n     * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n     * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n     * subtraction forces infinities to NaN\n     *\n     * @param {*} v\n     * @return {boolean}\n     */\n    number.isNumeric = function (v) {\n        return v - parseFloat(v) >= 0;\n    };\n\n    module.exports = number;\n\n\n/***/ }),\n\n/***/ 611:\n/***/ (function(module, exports) {\n\n\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n\n    /**\n     * @typedef {Float32Array|Array.<number>} Vector2\n     */\n    /**\n     * 二维向量类\n     * @exports zrender/tool/vector\n     */\n    var vector = {\n        /**\n         * 创建一个向量\n         * @param {number} [x=0]\n         * @param {number} [y=0]\n         * @return {Vector2}\n         */\n        create: function (x, y) {\n            var out = new ArrayCtor(2);\n            if (x == null) {\n                x = 0;\n            }\n            if (y == null) {\n                y = 0;\n            }\n            out[0] = x;\n            out[1] = y;\n            return out;\n        },\n\n        /**\n         * 复制向量数据\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        copy: function (out, v) {\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 克隆一个向量\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        clone: function (v) {\n            var out = new ArrayCtor(2);\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 设置向量的两个项\n         * @param {Vector2} out\n         * @param {number} a\n         * @param {number} b\n         * @return {Vector2} 结果\n         */\n        set: function (out, a, b) {\n            out[0] = a;\n            out[1] = b;\n            return out;\n        },\n\n        /**\n         * 向量相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        add: function (out, v1, v2) {\n            out[0] = v1[0] + v2[0];\n            out[1] = v1[1] + v2[1];\n            return out;\n        },\n\n        /**\n         * 向量缩放后相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} a\n         */\n        scaleAndAdd: function (out, v1, v2, a) {\n            out[0] = v1[0] + v2[0] * a;\n            out[1] = v1[1] + v2[1] * a;\n            return out;\n        },\n\n        /**\n         * 向量相减\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        sub: function (out, v1, v2) {\n            out[0] = v1[0] - v2[0];\n            out[1] = v1[1] - v2[1];\n            return out;\n        },\n\n        /**\n         * 向量长度\n         * @param {Vector2} v\n         * @return {number}\n         */\n        len: function (v) {\n            return Math.sqrt(this.lenSquare(v));\n        },\n\n        /**\n         * 向量长度平方\n         * @param {Vector2} v\n         * @return {number}\n         */\n        lenSquare: function (v) {\n            return v[0] * v[0] + v[1] * v[1];\n        },\n\n        /**\n         * 向量乘法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        mul: function (out, v1, v2) {\n            out[0] = v1[0] * v2[0];\n            out[1] = v1[1] * v2[1];\n            return out;\n        },\n\n        /**\n         * 向量除法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        div: function (out, v1, v2) {\n            out[0] = v1[0] / v2[0];\n            out[1] = v1[1] / v2[1];\n            return out;\n        },\n\n        /**\n         * 向量点乘\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        dot: function (v1, v2) {\n            return v1[0] * v2[0] + v1[1] * v2[1];\n        },\n\n        /**\n         * 向量缩放\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {number} s\n         */\n        scale: function (out, v, s) {\n            out[0] = v[0] * s;\n            out[1] = v[1] * s;\n            return out;\n        },\n\n        /**\n         * 向量归一化\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        normalize: function (out, v) {\n            var d = vector.len(v);\n            if (d === 0) {\n                out[0] = 0;\n                out[1] = 0;\n            }\n            else {\n                out[0] = v[0] / d;\n                out[1] = v[1] / d;\n            }\n            return out;\n        },\n\n        /**\n         * 计算向量间距离\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distance: function (v1, v2) {\n            return Math.sqrt(\n                (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1])\n            );\n        },\n\n        /**\n         * 向量距离平方\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distanceSquare: function (v1, v2) {\n            return (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n        },\n\n        /**\n         * 求负向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        negate: function (out, v) {\n            out[0] = -v[0];\n            out[1] = -v[1];\n            return out;\n        },\n\n        /**\n         * 插值两个点\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} t\n         */\n        lerp: function (out, v1, v2, t) {\n            out[0] = v1[0] + t * (v2[0] - v1[0]);\n            out[1] = v1[1] + t * (v2[1] - v1[1]);\n            return out;\n        },\n\n        /**\n         * 矩阵左乘向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {Vector2} m\n         */\n        applyTransform: function (out, v, m) {\n            var x = v[0];\n            var y = v[1];\n            out[0] = m[0] * x + m[2] * y + m[4];\n            out[1] = m[1] * x + m[3] * y + m[5];\n            return out;\n        },\n        /**\n         * 求两个向量最小值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        min: function (out, v1, v2) {\n            out[0] = Math.min(v1[0], v2[0]);\n            out[1] = Math.min(v1[1], v2[1]);\n            return out;\n        },\n        /**\n         * 求两个向量最大值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        max: function (out, v1, v2) {\n            out[0] = Math.max(v1[0], v2[0]);\n            out[1] = Math.max(v1[1], v2[1]);\n            return out;\n        }\n    };\n\n    vector.length = vector.len;\n    vector.lengthSquare = vector.lenSquare;\n    vector.dist = vector.distance;\n    vector.distSquare = vector.distanceSquare;\n\n    module.exports = vector;\n\n\n\n/***/ }),\n\n/***/ 612:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Path element\n * @module zrender/graphic/Path\n */\n\n\n\n    var Displayable = __webpack_require__(644);\n    var zrUtil = __webpack_require__(606);\n    var PathProxy = __webpack_require__(635);\n    var pathContain = __webpack_require__(761);\n\n    var Pattern = __webpack_require__(675);\n    var getCanvasPattern = Pattern.prototype.getCanvasPattern;\n\n    var abs = Math.abs;\n\n    var pathProxyForDraw = new PathProxy(true);\n    /**\n     * @alias module:zrender/graphic/Path\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function Path(opts) {\n        Displayable.call(this, opts);\n\n        /**\n         * @type {module:zrender/core/PathProxy}\n         * @readOnly\n         */\n        this.path = null;\n    }\n\n    Path.prototype = {\n\n        constructor: Path,\n\n        type: 'path',\n\n        __dirtyPath: true,\n\n        strokeContainThreshold: 5,\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var path = this.path || pathProxyForDraw;\n            var hasStroke = style.hasStroke();\n            var hasFill = style.hasFill();\n            var fill = style.fill;\n            var stroke = style.stroke;\n            var hasFillGradient = hasFill && !!(fill.colorStops);\n            var hasStrokeGradient = hasStroke && !!(stroke.colorStops);\n            var hasFillPattern = hasFill && !!(fill.image);\n            var hasStrokePattern = hasStroke && !!(stroke.image);\n\n            style.bind(ctx, this, prevEl);\n            this.setTransform(ctx);\n\n            if (this.__dirty) {\n                var rect;\n                // Update gradient because bounding rect may changed\n                if (hasFillGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._fillGradient = style.getGradient(ctx, fill, rect);\n                }\n                if (hasStrokeGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._strokeGradient = style.getGradient(ctx, stroke, rect);\n                }\n            }\n            // Use the gradient or pattern\n            if (hasFillGradient) {\n                // PENDING If may have affect the state\n                ctx.fillStyle = this._fillGradient;\n            }\n            else if (hasFillPattern) {\n                ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n            }\n            if (hasStrokeGradient) {\n                ctx.strokeStyle = this._strokeGradient;\n            }\n            else if (hasStrokePattern) {\n                ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n            }\n\n            var lineDash = style.lineDash;\n            var lineDashOffset = style.lineDashOffset;\n\n            var ctxLineDash = !!ctx.setLineDash;\n\n            // Update path sx, sy\n            var scale = this.getGlobalScale();\n            path.setScale(scale[0], scale[1]);\n\n            // Proxy context\n            // Rebuild path in following 2 cases\n            // 1. Path is dirty\n            // 2. Path needs javascript implemented lineDash stroking.\n            //    In this case, lineDash information will not be saved in PathProxy\n            if (this.__dirtyPath\n                || (lineDash && !ctxLineDash && hasStroke)\n            ) {\n                path.beginPath(ctx);\n\n                // Setting line dash before build path\n                if (lineDash && !ctxLineDash) {\n                    path.setLineDash(lineDash);\n                    path.setLineDashOffset(lineDashOffset);\n                }\n\n                this.buildPath(path, this.shape, false);\n\n                // Clear path dirty flag\n                if (this.path) {\n                    this.__dirtyPath = false;\n                }\n            }\n            else {\n                // Replay path building\n                ctx.beginPath();\n                this.path.rebuildPath(ctx);\n            }\n\n            hasFill && path.fill(ctx);\n\n            if (lineDash && ctxLineDash) {\n                ctx.setLineDash(lineDash);\n                ctx.lineDashOffset = lineDashOffset;\n            }\n\n            hasStroke && path.stroke(ctx);\n\n            if (lineDash && ctxLineDash) {\n                // PENDING\n                // Remove lineDash\n                ctx.setLineDash([]);\n            }\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n        // Like in circle\n        buildPath: function (ctx, shapeCfg, inBundle) {},\n\n        createPathProxy: function () {\n            this.path = new PathProxy();\n        },\n\n        getBoundingRect: function () {\n            var rect = this._rect;\n            var style = this.style;\n            var needsUpdateRect = !rect;\n            if (needsUpdateRect) {\n                var path = this.path;\n                if (!path) {\n                    // Create path on demand.\n                    path = this.path = new PathProxy();\n                }\n                if (this.__dirtyPath) {\n                    path.beginPath();\n                    this.buildPath(path, this.shape, false);\n                }\n                rect = path.getBoundingRect();\n            }\n            this._rect = rect;\n\n            if (style.hasStroke()) {\n                // Needs update rect with stroke lineWidth when\n                // 1. Element changes scale or lineWidth\n                // 2. Shape is changed\n                var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n                if (this.__dirty || needsUpdateRect) {\n                    rectWithStroke.copy(rect);\n                    // FIXME Must after updateTransform\n                    var w = style.lineWidth;\n                    // PENDING, Min line width is needed when line is horizontal or vertical\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n\n                    // Only add extra hover lineWidth when there are no fill\n                    if (!style.hasFill()) {\n                        w = Math.max(w, this.strokeContainThreshold || 4);\n                    }\n                    // Consider line width\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        rectWithStroke.width += w / lineScale;\n                        rectWithStroke.height += w / lineScale;\n                        rectWithStroke.x -= w / lineScale / 2;\n                        rectWithStroke.y -= w / lineScale / 2;\n                    }\n                }\n\n                // Return rect with stroke\n                return rectWithStroke;\n            }\n\n            return rect;\n        },\n\n        contain: function (x, y) {\n            var localPos = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            var style = this.style;\n            x = localPos[0];\n            y = localPos[1];\n\n            if (rect.contain(x, y)) {\n                var pathData = this.path.data;\n                if (style.hasStroke()) {\n                    var lineWidth = style.lineWidth;\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        // Only add extra hover lineWidth when there are no fill\n                        if (!style.hasFill()) {\n                            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n                        }\n                        if (pathContain.containStroke(\n                            pathData, lineWidth / lineScale, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                }\n                if (style.hasFill()) {\n                    return pathContain.contain(pathData, x, y);\n                }\n            }\n            return false;\n        },\n\n        /**\n         * @param  {boolean} dirtyPath\n         */\n        dirty: function (dirtyPath) {\n            if (dirtyPath == null) {\n                dirtyPath = true;\n            }\n            // Only mark dirty, not mark clean\n            if (dirtyPath) {\n                this.__dirtyPath = dirtyPath;\n                this._rect = null;\n            }\n\n            this.__dirty = true;\n\n            this.__zr && this.__zr.refresh();\n\n            // Used as a clipping path\n            if (this.__clipTarget) {\n                this.__clipTarget.dirty();\n            }\n        },\n\n        /**\n         * Alias for animate('shape')\n         * @param {boolean} loop\n         */\n        animateShape: function (loop) {\n            return this.animate('shape', loop);\n        },\n\n        // Overwrite attrKV\n        attrKV: function (key, value) {\n            // FIXME\n            if (key === 'shape') {\n                this.setShape(value);\n                this.__dirtyPath = true;\n                this._rect = null;\n            }\n            else {\n                Displayable.prototype.attrKV.call(this, key, value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setShape: function (key, value) {\n            var shape = this.shape;\n            // Path from string may not have shape\n            if (shape) {\n                if (zrUtil.isObject(key)) {\n                    for (var name in key) {\n                        if (key.hasOwnProperty(name)) {\n                            shape[name] = key[name];\n                        }\n                    }\n                }\n                else {\n                    shape[key] = value;\n                }\n                this.dirty(true);\n            }\n            return this;\n        },\n\n        getLineScale: function () {\n            var m = this.transform;\n            // Get the line scale.\n            // Determinant of `m` means how much the area is enlarged by the\n            // transformation. So its square root can be used as a scale factor\n            // for width.\n            return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\n                ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\n                : 1;\n        }\n    };\n\n    /**\n     * 扩展一个 Path element, 比如星形，圆等。\n     * Extend a path element\n     * @param {Object} props\n     * @param {string} props.type Path type\n     * @param {Function} props.init Initialize\n     * @param {Function} props.buildPath Overwrite buildPath method\n     * @param {Object} [props.style] Extended default style config\n     * @param {Object} [props.shape] Extended default shape config\n     */\n    Path.extend = function (defaults) {\n        var Sub = function (opts) {\n            Path.call(this, opts);\n\n            if (defaults.style) {\n                // Extend default style\n                this.style.extendFrom(defaults.style, false);\n            }\n\n            // Extend default shape\n            var defaultShape = defaults.shape;\n            if (defaultShape) {\n                this.shape = this.shape || {};\n                var thisShape = this.shape;\n                for (var name in defaultShape) {\n                    if (\n                        ! thisShape.hasOwnProperty(name)\n                        && defaultShape.hasOwnProperty(name)\n                    ) {\n                        thisShape[name] = defaultShape[name];\n                    }\n                }\n            }\n\n            defaults.init && defaults.init.call(this, opts);\n        };\n\n        zrUtil.inherits(Sub, Path);\n\n        // FIXME 不能 extend position, rotation 等引用对象\n        for (var name in defaults) {\n            // Extending prototype values and methods\n            if (name !== 'style' && name !== 'shape') {\n                Sub.prototype[name] = defaults[name];\n            }\n        }\n\n        return Sub;\n    };\n\n    zrUtil.inherits(Path, Displayable);\n\n    module.exports = Path;\n\n\n/***/ }),\n\n/***/ 613:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var numberUtil = __webpack_require__(610);\n    var textContain = __webpack_require__(621);\n\n    var formatUtil = {};\n\n    /**\n     * 每三位默认加,格式化\n     * @param {string|number} x\n     * @return {string}\n     */\n    formatUtil.addCommas = function (x) {\n        if (isNaN(x)) {\n            return '-';\n        }\n        x = (x + '').split('.');\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\n               + (x.length > 1 ? ('.' + x[1]) : '');\n    };\n\n    /**\n     * @param {string} str\n     * @param {boolean} [upperCaseFirst=false]\n     * @return {string} str\n     */\n    formatUtil.toCamelCase = function (str, upperCaseFirst) {\n        str = (str || '').toLowerCase().replace(/-(.)/g, function(match, group1) {\n            return group1.toUpperCase();\n        });\n\n        if (upperCaseFirst && str) {\n            str = str.charAt(0).toUpperCase() + str.slice(1);\n        }\n\n        return str;\n    };\n\n    formatUtil.normalizeCssArray = zrUtil.normalizeCssArray;\n\n    var encodeHTML = formatUtil.encodeHTML = function (source) {\n        return String(source)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    };\n\n    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\n    var wrapVar = function (varName, seriesIdx) {\n        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n    };\n\n    /**\n     * Template formatter\n     * @param {string} tpl\n     * @param {Array.<Object>|Object} paramsList\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTpl = function (tpl, paramsList, encode) {\n        if (!zrUtil.isArray(paramsList)) {\n            paramsList = [paramsList];\n        }\n        var seriesLen = paramsList.length;\n        if (!seriesLen) {\n            return '';\n        }\n\n        var $vars = paramsList[0].$vars || [];\n        for (var i = 0; i < $vars.length; i++) {\n            var alias = TPL_VAR_ALIAS[i];\n            var val = wrapVar(alias, 0);\n            tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n        }\n        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n            for (var k = 0; k < $vars.length; k++) {\n                var val = paramsList[seriesIdx][$vars[k]];\n                tpl = tpl.replace(\n                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\n                    encode ? encodeHTML(val) : val\n                );\n            }\n        }\n\n        return tpl;\n    };\n\n    /**\n     * simple Template formatter\n     *\n     * @param {string} tpl\n     * @param {Object} param\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTplSimple = function (tpl, param, encode) {\n        zrUtil.each(param, function (value, key) {\n            tpl = tpl.replace(\n                '{' + key + '}',\n                encode ? encodeHTML(value) : value\n            );\n        });\n        return tpl;\n    };\n\n    /**\n     * @param {string} color\n     * @param {string} [extraCssText]\n     * @return {string}\n     */\n    formatUtil.getTooltipMarker = function (color, extraCssText) {\n        return color\n            ? '<span style=\"display:inline-block;margin-right:5px;'\n                + 'border-radius:10px;width:9px;height:9px;background-color:'\n                + formatUtil.encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>'\n            : '';\n    };\n\n    /**\n     * @param {string} str\n     * @return {string}\n     * @inner\n     */\n    var s2d = function (str) {\n        return str < 10 ? ('0' + str) : str;\n    };\n\n    /**\n     * ISO Date format\n     * @param {string} tpl\n     * @param {number} value\n     * @param {boolean} [isUTC=false] Default in local time.\n     *           see `module:echarts/scale/Time`\n     *           and `module:echarts/util/number#parseDate`.\n     * @inner\n     */\n    formatUtil.formatTime = function (tpl, value, isUTC) {\n        if (tpl === 'week'\n            || tpl === 'month'\n            || tpl === 'quarter'\n            || tpl === 'half-year'\n            || tpl === 'year'\n        ) {\n            tpl = 'MM-dd\\nyyyy';\n        }\n\n        var date = numberUtil.parseDate(value);\n        var utc = isUTC ? 'UTC' : '';\n        var y = date['get' + utc + 'FullYear']();\n        var M = date['get' + utc + 'Month']() + 1;\n        var d = date['get' + utc + 'Date']();\n        var h = date['get' + utc + 'Hours']();\n        var m = date['get' + utc + 'Minutes']();\n        var s = date['get' + utc + 'Seconds']();\n\n        tpl = tpl.replace('MM', s2d(M))\n            .replace('M', M)\n            .replace('yyyy', y)\n            .replace('yy', y % 100)\n            .replace('dd', s2d(d))\n            .replace('d', d)\n            .replace('hh', s2d(h))\n            .replace('h', h)\n            .replace('mm', s2d(m))\n            .replace('m', m)\n            .replace('ss', s2d(s))\n            .replace('s', s);\n\n        return tpl;\n    };\n\n    /**\n     * Capital first\n     * @param {string} str\n     * @return {string}\n     */\n    formatUtil.capitalFirst = function (str) {\n        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n    };\n\n    formatUtil.truncateText = textContain.truncateText;\n\n    formatUtil.getTextRect = textContain.getBoundingRect;\n\n    module.exports = formatUtil;\n\n\n\n/***/ }),\n\n/***/ 614:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/model/Model\n */\n\n\n    var zrUtil = __webpack_require__(606);\n    var clazzUtil = __webpack_require__(616);\n    var env = __webpack_require__(615);\n\n    /**\n     * @alias module:echarts/model/Model\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} [parentModel]\n     * @param {module:echarts/model/Global} [ecModel]\n     */\n    function Model(option, parentModel, ecModel) {\n        /**\n         * @type {module:echarts/model/Model}\n         * @readOnly\n         */\n        this.parentModel = parentModel;\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        this.option = option;\n\n        // Simple optimization\n        // if (this.init) {\n        //     if (arguments.length <= 4) {\n        //         this.init(option, parentModel, ecModel, extraOpt);\n        //     }\n        //     else {\n        //         this.init.apply(this, arguments);\n        //     }\n        // }\n    }\n\n    Model.prototype = {\n\n        constructor: Model,\n\n        /**\n         * Model 的初始化函数\n         * @param {Object} option\n         */\n        init: null,\n\n        /**\n         * 从新的 Option merge\n         */\n        mergeOption: function (option) {\n            zrUtil.merge(this.option, option, true);\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        get: function (path, ignoreParent) {\n            if (path == null) {\n                return this.option;\n            }\n\n            return doGet(\n                this.option,\n                this.parsePath(path),\n                !ignoreParent && getParent(this, path)\n            );\n        },\n\n        /**\n         * @param {string} key\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        getShallow: function (key, ignoreParent) {\n            var option = this.option;\n\n            var val = option == null ? option : option[key];\n            var parentModel = !ignoreParent && getParent(this, key);\n            if (val == null && parentModel) {\n                val = parentModel.getShallow(key);\n            }\n            return val;\n        },\n\n        /**\n         * @param {string|Array.<string>} [path]\n         * @param {module:echarts/model/Model} [parentModel]\n         * @return {module:echarts/model/Model}\n         */\n        getModel: function (path, parentModel) {\n            var obj = path == null\n                ? this.option\n                : doGet(this.option, path = this.parsePath(path));\n\n            var thisParentModel;\n            parentModel = parentModel || (\n                (thisParentModel = getParent(this, path))\n                    && thisParentModel.getModel(path)\n            );\n\n            return new Model(obj, parentModel, this.ecModel);\n        },\n\n        /**\n         * If model has option\n         */\n        isEmpty: function () {\n            return this.option == null;\n        },\n\n        restoreData: function () {},\n\n        // Pending\n        clone: function () {\n            var Ctor = this.constructor;\n            return new Ctor(zrUtil.clone(this.option));\n        },\n\n        setReadOnly: function (properties) {\n            clazzUtil.setReadOnly(this, properties);\n        },\n\n        // If path is null/undefined, return null/undefined.\n        parsePath: function(path) {\n            if (typeof path === 'string') {\n                path = path.split('.');\n            }\n            return path;\n        },\n\n        /**\n         * @param {Function} getParentMethod\n         *        param {Array.<string>|string} path\n         *        return {module:echarts/model/Model}\n         */\n        customizeGetParent: function (getParentMethod) {\n            clazzUtil.set(this, 'getParent', getParentMethod);\n        },\n\n        isAnimationEnabled: function () {\n            if (!env.node) {\n                if (this.option.animation != null) {\n                    return !!this.option.animation;\n                }\n                else if (this.parentModel) {\n                    return this.parentModel.isAnimationEnabled();\n                }\n            }\n        }\n    };\n\n    function doGet(obj, pathArr, parentModel) {\n        for (var i = 0; i < pathArr.length; i++) {\n            // Ignore empty\n            if (!pathArr[i]) {\n                continue;\n            }\n            // obj could be number/string/... (like 0)\n            obj = (obj && typeof obj === 'object') ? obj[pathArr[i]] : null;\n            if (obj == null) {\n                break;\n            }\n        }\n        if (obj == null && parentModel) {\n            obj = parentModel.get(pathArr);\n        }\n        return obj;\n    }\n\n    // `path` can be null/undefined\n    function getParent(model, path) {\n        var getParentMethod = clazzUtil.get(model, 'getParent');\n        return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n    }\n\n    // Enable Model.extend.\n    clazzUtil.enableClassExtend(Model);\n\n    var mixin = zrUtil.mixin;\n    mixin(Model, __webpack_require__(740));\n    mixin(Model, __webpack_require__(737));\n    mixin(Model, __webpack_require__(741));\n    mixin(Model, __webpack_require__(739));\n\n    module.exports = Model;\n\n\n/***/ }),\n\n/***/ 615:\n/***/ (function(module, exports) {\n\n/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\n\n    var env = {};\n    if (typeof navigator === 'undefined') {\n        // In node\n        env = {\n            browser: {},\n            os: {},\n            node: true,\n            // Assume canvas is supported\n            canvasSupported: true\n        };\n    }\n    else {\n        env = detect(navigator.userAgent);\n    }\n\n    module.exports = env;\n\n    // Zepto.js\n    // (c) 2010-2013 Thomas Fuchs\n    // Zepto.js may be freely distributed under the MIT license.\n\n    function detect(ua) {\n        var os = {};\n        var browser = {};\n        // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n        // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n        // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n        // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n        // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n        // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n        // var touchpad = webos && ua.match(/TouchPad/);\n        // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n        // var silk = ua.match(/Silk\\/([\\d._]+)/);\n        // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n        // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n        // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n        // var playbook = ua.match(/PlayBook/);\n        // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n        var firefox = ua.match(/Firefox\\/([\\d.]+)/);\n        // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n        // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n        var ie = ua.match(/MSIE\\s([\\d.]+)/)\n            // IE 11 Trident/7.0; rv:11.0\n            || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n        var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n        var weChat = (/micromessenger/i).test(ua);\n\n        // Todo: clean this up with a better OS/browser seperation:\n        // - discern (more) between multiple browsers on android\n        // - decide if kindle fire in silk mode is android or not\n        // - Firefox on Android doesn't specify the Android version\n        // - possibly devide in os, device and browser hashes\n\n        // if (browser.webkit = !!webkit) browser.version = webkit[1];\n\n        // if (android) os.android = true, os.version = android[2];\n        // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n        // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n        // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n        // if (webos) os.webos = true, os.version = webos[2];\n        // if (touchpad) os.touchpad = true;\n        // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n        // if (bb10) os.bb10 = true, os.version = bb10[2];\n        // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n        // if (playbook) browser.playbook = true;\n        // if (kindle) os.kindle = true, os.version = kindle[1];\n        // if (silk) browser.silk = true, browser.version = silk[1];\n        // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n        // if (chrome) browser.chrome = true, browser.version = chrome[1];\n        if (firefox) {\n            browser.firefox = true;\n            browser.version = firefox[1];\n        }\n        // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n        // if (webview) browser.webview = true;\n\n        if (ie) {\n            browser.ie = true;\n            browser.version = ie[1];\n        }\n\n        if (edge) {\n            browser.edge = true;\n            browser.version = edge[1];\n        }\n\n        // It is difficult to detect WeChat in Win Phone precisely, because ua can\n        // not be set on win phone. So we do not consider Win Phone.\n        if (weChat) {\n            browser.weChat = true;\n        }\n\n        // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n        //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n        // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n        //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n        //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n        return {\n            browser: browser,\n            os: os,\n            node: false,\n            // 原生canvas支持，改极端点了\n            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n            canvasSupported : document.createElement('canvas').getContext ? true : false,\n            // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n            // works on most browsers\n            // IE10/11 does not support touch event, and MS Edge supports them but not by\n            // default, so we dont check navigator.maxTouchPoints for them here.\n            touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n            // <http://caniuse.com/#search=pointer%20event>.\n            pointerEventsSupported: 'onpointerdown' in window\n                // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n                // events currently. So we dont use that on other browsers unless tested sufficiently.\n                // Although IE 10 supports pointer event, it use old style and is different from the\n                // standard. So we exclude that. (IE 10 is hardly used on touch device)\n                && (browser.edge || (browser.ie && browser.version >= 11))\n        };\n    }\n\n\n/***/ }),\n\n/***/ 616:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(606);\n\n    var clazz = {};\n\n    var TYPE_DELIMITER = '.';\n    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n    var MEMBER_PRIFIX = '\\0ec_\\0';\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name] = value;` (can be right-value)\n     * @public\n     */\n    clazz.set = function (host, name, value) {\n        return (host[MEMBER_PRIFIX + name] = value);\n    };\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name];`\n     * @public\n     */\n    clazz.get = function (host, name) {\n        return host[MEMBER_PRIFIX + name];\n    };\n\n    /**\n     * For hidden private class member.\n     * The same behavior as `host.hasOwnProperty(name);`\n     * @public\n     */\n    clazz.hasOwn = function (host, name) {\n        return host.hasOwnProperty(MEMBER_PRIFIX + name);\n    };\n\n    /**\n     * Notice, parseClassType('') should returns {main: '', sub: ''}\n     * @public\n     */\n    var parseClassType = clazz.parseClassType = function (componentType) {\n        var ret = {main: '', sub: ''};\n        if (componentType) {\n            componentType = componentType.split(TYPE_DELIMITER);\n            ret.main = componentType[0] || '';\n            ret.sub = componentType[1] || '';\n        }\n        return ret;\n    };\n\n    /**\n     * @public\n     */\n    function checkClassType(componentType) {\n        zrUtil.assert(\n            /^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType),\n            'componentType \"' + componentType + '\" illegal'\n        );\n    }\n\n    /**\n     * @public\n     */\n    clazz.enableClassExtend = function (RootClass, mandatoryMethods) {\n\n        RootClass.$constructor = RootClass;\n        RootClass.extend = function (proto) {\n\n            if (__DEV__) {\n                zrUtil.each(mandatoryMethods, function (method) {\n                    if (!proto[method]) {\n                        console.warn(\n                            'Method `' + method + '` should be implemented'\n                            + (proto.type ? ' in ' + proto.type : '') + '.'\n                        );\n                    }\n                });\n            }\n\n            var superClass = this;\n            var ExtendedClass = function () {\n                if (!proto.$constructor) {\n                    superClass.apply(this, arguments);\n                }\n                else {\n                    proto.$constructor.apply(this, arguments);\n                }\n            };\n\n            zrUtil.extend(ExtendedClass.prototype, proto);\n\n            ExtendedClass.extend = this.extend;\n            ExtendedClass.superCall = superCall;\n            ExtendedClass.superApply = superApply;\n            zrUtil.inherits(ExtendedClass, this);\n            ExtendedClass.superClass = superClass;\n\n            return ExtendedClass;\n        };\n    };\n\n    // superCall should have class info, which can not be fetch from 'this'.\n    // Consider this case:\n    // class A has method f,\n    // class B inherits class A, overrides method f, f call superApply('f'),\n    // class C inherits class B, do not overrides method f,\n    // then when method of class C is called, dead loop occured.\n    function superCall(context, methodName) {\n        var args = zrUtil.slice(arguments, 2);\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    function superApply(context, methodName, args) {\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    /**\n     * @param {Object} entity\n     * @param {Object} options\n     * @param {boolean} [options.registerWhenExtend]\n     * @public\n     */\n    clazz.enableClassManagement = function (entity, options) {\n        options = options || {};\n\n        /**\n         * Component model classes\n         * key: componentType,\n         * value:\n         *     componentClass, when componentType is 'xxx'\n         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n         * @type {Object}\n         */\n        var storage = {};\n\n        entity.registerClass = function (Clazz, componentType) {\n            if (componentType) {\n                checkClassType(componentType);\n                componentType = parseClassType(componentType);\n\n                if (!componentType.sub) {\n                    if (__DEV__) {\n                        if (storage[componentType.main]) {\n                            console.warn(componentType.main + ' exists.');\n                        }\n                    }\n                    storage[componentType.main] = Clazz;\n                }\n                else if (componentType.sub !== IS_CONTAINER) {\n                    var container = makeContainer(componentType);\n                    container[componentType.sub] = Clazz;\n                }\n            }\n            return Clazz;\n        };\n\n        entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n            var Clazz = storage[componentMainType];\n\n            if (Clazz && Clazz[IS_CONTAINER]) {\n                Clazz = subType ? Clazz[subType] : null;\n            }\n\n            if (throwWhenNotFound && !Clazz) {\n                throw new Error(\n                    !subType\n                        ? componentMainType + '.' + 'type should be specified.'\n                        : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.'\n                );\n            }\n\n            return Clazz;\n        };\n\n        entity.getClassesByMainType = function (componentType) {\n            componentType = parseClassType(componentType);\n\n            var result = [];\n            var obj = storage[componentType.main];\n\n            if (obj && obj[IS_CONTAINER]) {\n                zrUtil.each(obj, function (o, type) {\n                    type !== IS_CONTAINER && result.push(o);\n                });\n            }\n            else {\n                result.push(obj);\n            }\n\n            return result;\n        };\n\n        entity.hasClass = function (componentType) {\n            // Just consider componentType.main.\n            componentType = parseClassType(componentType);\n            return !!storage[componentType.main];\n        };\n\n        /**\n         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n         */\n        entity.getAllClassMainTypes = function () {\n            var types = [];\n            zrUtil.each(storage, function (obj, type) {\n                types.push(type);\n            });\n            return types;\n        };\n\n        /**\n         * If a main type is container and has sub types\n         * @param  {string}  mainType\n         * @return {boolean}\n         */\n        entity.hasSubTypes = function (componentType) {\n            componentType = parseClassType(componentType);\n            var obj = storage[componentType.main];\n            return obj && obj[IS_CONTAINER];\n        };\n\n        entity.parseClassType = parseClassType;\n\n        function makeContainer(componentType) {\n            var container = storage[componentType.main];\n            if (!container || !container[IS_CONTAINER]) {\n                container = storage[componentType.main] = {};\n                container[IS_CONTAINER] = true;\n            }\n            return container;\n        }\n\n        if (options.registerWhenExtend) {\n            var originalExtend = entity.extend;\n            if (originalExtend) {\n                entity.extend = function (proto) {\n                    var ExtendedClass = originalExtend.call(this, proto);\n                    return entity.registerClass(ExtendedClass, proto.type);\n                };\n            }\n        }\n\n        return entity;\n    };\n\n    /**\n     * @param {string|Array.<string>} properties\n     */\n    clazz.setReadOnly = function (obj, properties) {\n        // FIXME It seems broken in IE8 simulation of IE11\n        // if (!zrUtil.isArray(properties)) {\n        //     properties = properties != null ? [properties] : [];\n        // }\n        // zrUtil.each(properties, function (prop) {\n        //     var value = obj[prop];\n\n        //     Object.defineProperty\n        //         && Object.defineProperty(obj, prop, {\n        //             value: value, writable: false\n        //         });\n        //     zrUtil.isArray(obj[prop])\n        //         && Object.freeze\n        //         && Object.freeze(obj[prop]);\n        // });\n    };\n\n    module.exports = clazz;\n\n\n/***/ }),\n\n/***/ 617:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module echarts/core/BoundingRect\n */\n\n\n    var vec2 = __webpack_require__(611);\n    var matrix = __webpack_require__(623);\n\n    var v2ApplyTransform = vec2.applyTransform;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    /**\n     * @alias module:echarts/core/BoundingRect\n     */\n    function BoundingRect(x, y, width, height) {\n\n        if (width < 0) {\n            x = x + width;\n            width = -width;\n        }\n        if (height < 0) {\n            y = y + height;\n            height = -height;\n        }\n\n        /**\n         * @type {number}\n         */\n        this.x = x;\n        /**\n         * @type {number}\n         */\n        this.y = y;\n        /**\n         * @type {number}\n         */\n        this.width = width;\n        /**\n         * @type {number}\n         */\n        this.height = height;\n    }\n\n    BoundingRect.prototype = {\n\n        constructor: BoundingRect,\n\n        /**\n         * @param {module:echarts/core/BoundingRect} other\n         */\n        union: function (other) {\n            var x = mathMin(other.x, this.x);\n            var y = mathMin(other.y, this.y);\n\n            this.width = mathMax(\n                    other.x + other.width,\n                    this.x + this.width\n                ) - x;\n            this.height = mathMax(\n                    other.y + other.height,\n                    this.y + this.height\n                ) - y;\n            this.x = x;\n            this.y = y;\n        },\n\n        /**\n         * @param {Array.<number>} m\n         * @methods\n         */\n        applyTransform: (function () {\n            var lt = [];\n            var rb = [];\n            var lb = [];\n            var rt = [];\n            return function (m) {\n                // In case usage like this\n                // el.getBoundingRect().applyTransform(el.transform)\n                // And element has no transform\n                if (!m) {\n                    return;\n                }\n                lt[0] = lb[0] = this.x;\n                lt[1] = rt[1] = this.y;\n                rb[0] = rt[0] = this.x + this.width;\n                rb[1] = lb[1] = this.y + this.height;\n\n                v2ApplyTransform(lt, lt, m);\n                v2ApplyTransform(rb, rb, m);\n                v2ApplyTransform(lb, lb, m);\n                v2ApplyTransform(rt, rt, m);\n\n                this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n                this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n                var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n                var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n                this.width = maxX - this.x;\n                this.height = maxY - this.y;\n            };\n        })(),\n\n        /**\n         * Calculate matrix of transforming from self to target rect\n         * @param  {module:zrender/core/BoundingRect} b\n         * @return {Array.<number>}\n         */\n        calculateTransform: function (b) {\n            var a = this;\n            var sx = b.width / a.width;\n            var sy = b.height / a.height;\n\n            var m = matrix.create();\n\n            // 矩阵右乘\n            matrix.translate(m, m, [-a.x, -a.y]);\n            matrix.scale(m, m, [sx, sy]);\n            matrix.translate(m, m, [b.x, b.y]);\n\n            return m;\n        },\n\n        /**\n         * @param {(module:echarts/core/BoundingRect|Object)} b\n         * @return {boolean}\n         */\n        intersect: function (b) {\n            if (!b) {\n                return false;\n            }\n\n            if (!(b instanceof BoundingRect)) {\n                // Normalize negative width/height.\n                b = BoundingRect.create(b);\n            }\n\n            var a = this;\n            var ax0 = a.x;\n            var ax1 = a.x + a.width;\n            var ay0 = a.y;\n            var ay1 = a.y + a.height;\n\n            var bx0 = b.x;\n            var bx1 = b.x + b.width;\n            var by0 = b.y;\n            var by1 = b.y + b.height;\n\n            return ! (ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n        },\n\n        contain: function (x, y) {\n            var rect = this;\n            return x >= rect.x\n                && x <= (rect.x + rect.width)\n                && y >= rect.y\n                && y <= (rect.y + rect.height);\n        },\n\n        /**\n         * @return {module:echarts/core/BoundingRect}\n         */\n        clone: function () {\n            return new BoundingRect(this.x, this.y, this.width, this.height);\n        },\n\n        /**\n         * Copy from another rect\n         */\n        copy: function (other) {\n            this.x = other.x;\n            this.y = other.y;\n            this.width = other.width;\n            this.height = other.height;\n        },\n\n        plain: function () {\n            return {\n                x: this.x,\n                y: this.y,\n                width: this.width,\n                height: this.height\n            };\n        }\n    };\n\n    /**\n     * @param {Object|module:zrender/core/BoundingRect} rect\n     * @param {number} rect.x\n     * @param {number} rect.y\n     * @param {number} rect.width\n     * @param {number} rect.height\n     * @return {module:zrender/core/BoundingRect}\n     */\n    BoundingRect.create = function (rect) {\n        return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n    };\n\n    module.exports = BoundingRect;\n\n\n/***/ }),\n\n/***/ 618:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\n\n\n    var Model = __webpack_require__(614);\n    var zrUtil = __webpack_require__(606);\n    var arrayPush = Array.prototype.push;\n    var componentUtil = __webpack_require__(642);\n    var clazzUtil = __webpack_require__(616);\n    var layout = __webpack_require__(619);\n\n    /**\n     * @alias module:echarts/model/Component\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {module:echarts/model/Model} ecModel\n     */\n    var ComponentModel = Model.extend({\n\n        type: 'component',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        id: '',\n\n        /**\n         * @readOnly\n         */\n        name: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        mainType: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        subType: '',\n\n        /**\n         * @readOnly\n         * @type {number}\n         */\n        componentIndex: 0,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        ecModel: null,\n\n        /**\n         * key: componentType\n         * value:  Component model list, can not be null.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @readOnly\n         */\n        dependentModels: [],\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        uid: null,\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        $constructor: function (option, parentModel, ecModel, extraOpt) {\n            Model.call(this, option, parentModel, ecModel, extraOpt);\n\n            this.uid = componentUtil.getUID('componentModel');\n        },\n\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n            this.mergeDefaultAndTheme(option, ecModel);\n        },\n\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            var themeModel = ecModel.getTheme();\n            zrUtil.merge(option, themeModel.get(this.mainType));\n            zrUtil.merge(option, this.getDefaultOption());\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (option, extraOpt) {\n            zrUtil.merge(this.option, option, true);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, option, layoutMode);\n            }\n        },\n\n        // Hooker after init or mergeOption\n        optionUpdated: function (newCptOption, isInit) {},\n\n        getDefaultOption: function () {\n            if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n                var optList = [];\n                var Class = this.constructor;\n                while (Class) {\n                    var opt = Class.prototype.defaultOption;\n                    opt && optList.push(opt);\n                    Class = Class.superClass;\n                }\n\n                var defaultOption = {};\n                for (var i = optList.length - 1; i >= 0; i--) {\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n                }\n                clazzUtil.set(this, '__defaultOption', defaultOption);\n            }\n            return clazzUtil.get(this, '__defaultOption');\n        },\n\n        getReferringComponents: function (mainType) {\n            return this.ecModel.queryComponents({\n                mainType: mainType,\n                index: this.get(mainType + 'Index', true),\n                id: this.get(mainType + 'Id', true)\n            });\n        }\n\n    });\n\n    // Reset ComponentModel.extend, add preConstruct.\n    // clazzUtil.enableClassExtend(\n    //     ComponentModel,\n    //     function (option, parentModel, ecModel, extraOpt) {\n    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\n    //         zrUtil.extend(this, extraOpt);\n\n    //         this.uid = componentUtil.getUID('componentModel');\n\n    //         // this.setReadOnly([\n    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n    //         //     'dependentModels', 'componentIndex'\n    //         // ]);\n    //     }\n    // );\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(\n        ComponentModel, {registerWhenExtend: true}\n    );\n    componentUtil.enableSubTypeDefaulter(ComponentModel);\n\n    // Add capability of ComponentModel.topologicalTravel.\n    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\n    function getDependencies(componentType) {\n        var deps = [];\n        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n        });\n        // Ensure main type\n        return zrUtil.map(deps, function (type) {\n            return clazzUtil.parseClassType(type).main;\n        });\n    }\n\n    zrUtil.mixin(ComponentModel, __webpack_require__(738));\n\n    module.exports = ComponentModel;\n\n\n/***/ }),\n\n/***/ 619:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Layout helpers for each component positioning\n\n\n    var zrUtil = __webpack_require__(606);\n    var BoundingRect = __webpack_require__(617);\n    var numberUtil = __webpack_require__(610);\n    var formatUtil = __webpack_require__(613);\n    var parsePercent = numberUtil.parsePercent;\n    var each = zrUtil.each;\n\n    var layout = {};\n\n    /**\n     * @public\n     */\n    var LOCATION_PARAMS = layout.LOCATION_PARAMS = [\n        'left', 'right', 'top', 'bottom', 'width', 'height'\n    ];\n\n    /**\n     * @public\n     */\n    var HV_NAMES = layout.HV_NAMES = [\n        ['width', 'left', 'right'],\n        ['height', 'top', 'bottom']\n    ];\n\n    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\n        var x = 0;\n        var y = 0;\n\n        if (maxWidth == null) {\n            maxWidth = Infinity;\n        }\n        if (maxHeight == null) {\n            maxHeight = Infinity;\n        }\n        var currentLineMaxSize = 0;\n\n        group.eachChild(function (child, idx) {\n            var position = child.position;\n            var rect = child.getBoundingRect();\n            var nextChild = group.childAt(idx + 1);\n            var nextChildRect = nextChild && nextChild.getBoundingRect();\n            var nextX;\n            var nextY;\n\n            if (orient === 'horizontal') {\n                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\n                nextX = x + moveX;\n                // Wrap when width exceeds maxWidth or meet a `newline` group\n                // FIXME compare before adding gap?\n                if (nextX > maxWidth || child.newline) {\n                    x = 0;\n                    nextX = moveX;\n                    y += currentLineMaxSize + gap;\n                    currentLineMaxSize = rect.height;\n                }\n                else {\n                    // FIXME: consider rect.y is not `0`?\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n                }\n            }\n            else {\n                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\n                nextY = y + moveY;\n                // Wrap when width exceeds maxHeight or meet a `newline` group\n                if (nextY > maxHeight || child.newline) {\n                    x += currentLineMaxSize + gap;\n                    y = 0;\n                    nextY = moveY;\n                    currentLineMaxSize = rect.width;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n                }\n            }\n\n            if (child.newline) {\n                return;\n            }\n\n            position[0] = x;\n            position[1] = y;\n\n            orient === 'horizontal'\n                ? (x = nextX + gap)\n                : (y = nextY + gap);\n        });\n    }\n\n    /**\n     * VBox or HBox layouting\n     * @param {string} orient\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.box = boxLayout;\n\n    /**\n     * VBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\n\n    /**\n     * HBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\n\n    /**\n     * If x or x2 is not specified or 'center' 'left' 'right',\n     * the width would be as long as possible.\n     * If y or y2 is not specified or 'middle' 'top' 'bottom',\n     * the height would be as long as possible.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.x]\n     * @param {number|string} [positionInfo.y]\n     * @param {number|string} [positionInfo.x2]\n     * @param {number|string} [positionInfo.y2]\n     * @param {Object} containerRect {width, height}\n     * @param {string|number} margin\n     * @return {Object} {width, height}\n     */\n    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var x = parsePercent(positionInfo.x, containerWidth);\n        var y = parsePercent(positionInfo.y, containerHeight);\n        var x2 = parsePercent(positionInfo.x2, containerWidth);\n        var y2 = parsePercent(positionInfo.y2, containerHeight);\n\n        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        return {\n            width: Math.max(x2 - x - margin[1] - margin[3], 0),\n            height: Math.max(y2 - y - margin[0] - margin[2], 0)\n        };\n    };\n\n    /**\n     * Parse position info.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width]\n     * @param {number|string} [positionInfo.height]\n     * @param {number|string} [positionInfo.aspect] Aspect is width / height\n     * @param {Object} containerRect\n     * @param {string|number} [margin]\n     *\n     * @return {module:zrender/core/BoundingRect}\n     */\n    layout.getLayoutRect = function (\n        positionInfo, containerRect, margin\n    ) {\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var left = parsePercent(positionInfo.left, containerWidth);\n        var top = parsePercent(positionInfo.top, containerHeight);\n        var right = parsePercent(positionInfo.right, containerWidth);\n        var bottom = parsePercent(positionInfo.bottom, containerHeight);\n        var width = parsePercent(positionInfo.width, containerWidth);\n        var height = parsePercent(positionInfo.height, containerHeight);\n\n        var verticalMargin = margin[2] + margin[0];\n        var horizontalMargin = margin[1] + margin[3];\n        var aspect = positionInfo.aspect;\n\n        // If width is not specified, calculate width from left and right\n        if (isNaN(width)) {\n            width = containerWidth - right - horizontalMargin - left;\n        }\n        if (isNaN(height)) {\n            height = containerHeight - bottom - verticalMargin - top;\n        }\n\n        if (aspect != null) {\n            // If width and height are not given\n            // 1. Graph should not exceeds the container\n            // 2. Aspect must be keeped\n            // 3. Graph should take the space as more as possible\n            // FIXME\n            // Margin is not considered, because there is no case that both\n            // using margin and aspect so far.\n            if (isNaN(width) && isNaN(height)) {\n                if (aspect > containerWidth / containerHeight) {\n                    width = containerWidth * 0.8;\n                }\n                else {\n                    height = containerHeight * 0.8;\n                }\n            }\n\n            // Calculate width or height with given aspect\n            if (isNaN(width)) {\n                width = aspect * height;\n            }\n            if (isNaN(height)) {\n                height = width / aspect;\n            }\n        }\n\n        // If left is not specified, calculate left from right and width\n        if (isNaN(left)) {\n            left = containerWidth - right - width - horizontalMargin;\n        }\n        if (isNaN(top)) {\n            top = containerHeight - bottom - height - verticalMargin;\n        }\n\n        // Align left and top\n        switch (positionInfo.left || positionInfo.right) {\n            case 'center':\n                left = containerWidth / 2 - width / 2 - margin[3];\n                break;\n            case 'right':\n                left = containerWidth - width - horizontalMargin;\n                break;\n        }\n        switch (positionInfo.top || positionInfo.bottom) {\n            case 'middle':\n            case 'center':\n                top = containerHeight / 2 - height / 2 - margin[0];\n                break;\n            case 'bottom':\n                top = containerHeight - height - verticalMargin;\n                break;\n        }\n        // If something is wrong and left, top, width, height are calculated as NaN\n        left = left || 0;\n        top = top || 0;\n        if (isNaN(width)) {\n            // Width may be NaN if only one value is given except width\n            width = containerWidth - horizontalMargin - left - (right || 0);\n        }\n        if (isNaN(height)) {\n            // Height may be NaN if only one value is given except height\n            height = containerHeight - verticalMargin - top - (bottom || 0);\n        }\n\n        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n        rect.margin = margin;\n        return rect;\n    };\n\n\n    /**\n     * Position a zr element in viewport\n     *  Group position is specified by either\n     *  {left, top}, {right, bottom}\n     *  If all properties exists, right and bottom will be igonred.\n     *\n     * Logic:\n     *     1. Scale (against origin point in parent coord)\n     *     2. Rotate (against origin point in parent coord)\n     *     3. Traslate (with el.position by this method)\n     * So this method only fixes the last step 'Traslate', which does not affect\n     * scaling and rotating.\n     *\n     * If be called repeatly with the same input el, the same result will be gotten.\n     *\n     * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n     * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @param {Object} [opt]\n     * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n     * @param {Array.<number>} [opt.boundingMode='all']\n     *        Specify how to calculate boundingRect when locating.\n     *        'all': Position the boundingRect that is transformed and uioned\n     *               both itself and its descendants.\n     *               This mode simplies confine the elements in the bounding\n     *               of their container (e.g., using 'right: 0').\n     *        'raw': Position the boundingRect that is not transformed and only itself.\n     *               This mode is useful when you want a element can overflow its\n     *               container. (Consider a rotated circle needs to be located in a corner.)\n     *               In this mode positionInfo.width/height can only be number.\n     */\n    layout.positionElement = function (el, positionInfo, containerRect, margin, opt) {\n        var h = !opt || !opt.hv || opt.hv[0];\n        var v = !opt || !opt.hv || opt.hv[1];\n        var boundingMode = opt && opt.boundingMode || 'all';\n\n        if (!h && !v) {\n            return;\n        }\n\n        var rect;\n        if (boundingMode === 'raw') {\n            rect = el.type === 'group'\n                ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0)\n                : el.getBoundingRect();\n        }\n        else {\n            rect = el.getBoundingRect();\n            if (el.needLocalTransform()) {\n                var transform = el.getLocalTransform();\n                // Notice: raw rect may be inner object of el,\n                // which should not be modified.\n                rect = rect.clone();\n                rect.applyTransform(transform);\n            }\n        }\n\n        // The real width and height can not be specified but calculated by the given el.\n        positionInfo = layout.getLayoutRect(\n            zrUtil.defaults(\n                {width: rect.width, height: rect.height},\n                positionInfo\n            ),\n            containerRect,\n            margin\n        );\n\n        // Because 'tranlate' is the last step in transform\n        // (see zrender/core/Transformable#getLocalTransfrom),\n        // we can just only modify el.position to get final result.\n        var elPos = el.position;\n        var dx = h ? positionInfo.x - rect.x : 0;\n        var dy = v ? positionInfo.y - rect.y : 0;\n\n        el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n    };\n\n    /**\n     * @param {Object} option Contains some of the properties in HV_NAMES.\n     * @param {number} hvIdx 0: horizontal; 1: vertical.\n     */\n    layout.sizeCalculable = function (option, hvIdx) {\n        return option[HV_NAMES[hvIdx][0]] != null\n            || (option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null);\n    };\n\n    /**\n     * Consider Case:\n     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n     * through setOption or media query, using normal zrUtil.merge will cause\n     * {right: 0} does not take effect.\n     *\n     * @example\n     * ComponentModel.extend({\n     *     init: function () {\n     *         ...\n     *         var inputPositionParams = layout.getLayoutParams(option);\n     *         this.mergeOption(inputPositionParams);\n     *     },\n     *     mergeOption: function (newOption) {\n     *         newOption && zrUtil.merge(thisOption, newOption, true);\n     *         layout.mergeLayoutParam(thisOption, newOption);\n     *     }\n     * });\n     *\n     * @param {Object} targetOption\n     * @param {Object} newOption\n     * @param {Object|string} [opt]\n     * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n     *  that width (or height) should not be calculated by left and right (or top and bottom).\n     */\n    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\n        !zrUtil.isObject(opt) && (opt = {});\n\n        var ignoreSize = opt.ignoreSize;\n        !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n\n        var hResult = merge(HV_NAMES[0], 0);\n        var vResult = merge(HV_NAMES[1], 1);\n\n        copy(HV_NAMES[0], targetOption, hResult);\n        copy(HV_NAMES[1], targetOption, vResult);\n\n        function merge(names, hvIdx) {\n            var newParams = {};\n            var newValueCount = 0;\n            var merged = {};\n            var mergedValueCount = 0;\n            var enoughParamNumber = 2;\n\n            each(names, function (name) {\n                merged[name] = targetOption[name];\n            });\n            each(names, function (name) {\n                // Consider case: newOption.width is null, which is\n                // set by user for removing width setting.\n                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n                hasValue(newParams, name) && newValueCount++;\n                hasValue(merged, name) && mergedValueCount++;\n            });\n\n            if (ignoreSize[hvIdx]) {\n                // Only one of left/right is premitted to exist.\n                if (hasValue(newOption, names[1])) {\n                    merged[names[2]] = null;\n                }\n                else if (hasValue(newOption, names[2])) {\n                    merged[names[1]] = null;\n                }\n                return merged;\n            }\n\n            // Case: newOption: {width: ..., right: ...},\n            // or targetOption: {right: ...} and newOption: {width: ...},\n            // There is no conflict when merged only has params count\n            // little than enoughParamNumber.\n            if (mergedValueCount === enoughParamNumber || !newValueCount) {\n                return merged;\n            }\n            // Case: newOption: {width: ..., right: ...},\n            // Than we can make sure user only want those two, and ignore\n            // all origin params in targetOption.\n            else if (newValueCount >= enoughParamNumber) {\n                return newParams;\n            }\n            else {\n                // Chose another param from targetOption by priority.\n                for (var i = 0; i < names.length; i++) {\n                    var name = names[i];\n                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n                        newParams[name] = targetOption[name];\n                        break;\n                    }\n                }\n                return newParams;\n            }\n        }\n\n        function hasProp(obj, name) {\n            return obj.hasOwnProperty(name);\n        }\n\n        function hasValue(obj, name) {\n            return obj[name] != null && obj[name] !== 'auto';\n        }\n\n        function copy(names, target, source) {\n            each(names, function (name) {\n                target[name] = source[name];\n            });\n        }\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.getLayoutParams = function (source) {\n        return layout.copyLayoutParams({}, source);\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.copyLayoutParams = function (target, source) {\n        source && target && each(LOCATION_PARAMS, function (name) {\n            source.hasOwnProperty(name) && (target[name] = source[name]);\n        });\n        return target;\n    };\n\n    module.exports = layout;\n\n\n\n/***/ }),\n\n/***/ 620:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var OrdinalScale = __webpack_require__(746);\n    var IntervalScale = __webpack_require__(638);\n    __webpack_require__(747);\n    __webpack_require__(745);\n    var Scale = __webpack_require__(632);\n\n    var numberUtil = __webpack_require__(610);\n    var zrUtil = __webpack_require__(606);\n    var textContain = __webpack_require__(621);\n    var axisHelper = {};\n\n    /**\n     * Get axis scale extent before niced.\n     * Item of returned array can only be number (including Infinity and NaN).\n     */\n    axisHelper.getScaleExtent = function (scale, model) {\n        var scaleType = scale.type;\n\n        var min = model.getMin();\n        var max = model.getMax();\n        var fixMin = min != null;\n        var fixMax = max != null;\n        var originalExtent = scale.getExtent();\n\n        var axisDataLen;\n        var boundaryGap;\n        var span;\n        if (scaleType === 'ordinal') {\n            axisDataLen = (model.get('data') || []).length;\n        }\n        else {\n            boundaryGap = model.get('boundaryGap');\n            if (!zrUtil.isArray(boundaryGap)) {\n                boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n            }\n            if (typeof boundaryGap[0] === 'boolean') {\n                if (__DEV__) {\n                    console.warn('Boolean type for boundaryGap is only '\n                        + 'allowed for ordinal axis. Please use string in '\n                        + 'percentage instead, e.g., \"20%\". Currently, '\n                        + 'boundaryGap is set to be 0.');\n                }\n                boundaryGap = [0, 0];\n            }\n            boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n            boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n            span = (originalExtent[1] - originalExtent[0])\n                || Math.abs(originalExtent[0]);\n        }\n\n        // Notice: When min/max is not set (that is, when there are null/undefined,\n        // which is the most common case), these cases should be ensured:\n        // (1) For 'ordinal', show all axis.data.\n        // (2) For others:\n        //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n        //      disabled).\n        //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n        //      be the result that originalExtent enlarged by boundaryGap.\n        // (3) If no data, it should be ensured that `scale.setBlank` is set.\n\n        // FIXME\n        // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n        // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n        // that the results processed by boundaryGap are positive/negative?\n\n        if (min == null) {\n            min = scaleType === 'ordinal'\n                ? (axisDataLen ? 0 : NaN)\n                : originalExtent[0] - boundaryGap[0] * span;\n        }\n        if (max == null) {\n            max = scaleType === 'ordinal'\n                ? (axisDataLen ? axisDataLen - 1 : NaN)\n                : originalExtent[1] + boundaryGap[1] * span;\n        }\n\n        if (min === 'dataMin') {\n            min = originalExtent[0];\n        }\n        if (max === 'dataMax') {\n            max = originalExtent[1];\n        }\n\n        (min == null || !isFinite(min)) && (min = NaN);\n        (max == null || !isFinite(max)) && (max = NaN);\n\n        scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max));\n\n        // Evaluate if axis needs cross zero\n        if (model.getNeedCrossZero()) {\n            // Axis is over zero and min is not set\n            if (min > 0 && max > 0 && !fixMin) {\n                min = 0;\n            }\n            // Axis is under zero and max is not set\n            if (min < 0 && max < 0 && !fixMax) {\n                max = 0;\n            }\n        }\n\n        return [min, max];\n    };\n\n    axisHelper.niceScaleExtent = function (scale, model) {\n        var extent = axisHelper.getScaleExtent(scale, model);\n        var fixMin = model.getMin() != null;\n        var fixMax = model.getMax() != null;\n        var splitNumber = model.get('splitNumber');\n\n        if (scale.type === 'log') {\n            scale.base = model.get('logBase');\n        }\n\n        var scaleType = scale.type;\n        scale.setExtent(extent[0], extent[1]);\n        scale.niceExtent({\n            splitNumber: splitNumber,\n            fixMin: fixMin,\n            fixMax: fixMax,\n            minInterval: (scaleType === 'interval' || scaleType === 'time')\n                ? model.get('minInterval') : null,\n            maxInterval: (scaleType === 'interval' || scaleType === 'time')\n                ? model.get('maxInterval') : null\n        });\n\n        // If some one specified the min, max. And the default calculated interval\n        // is not good enough. He can specify the interval. It is often appeared\n        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n        // to be 60.\n        // FIXME\n        var interval = model.get('interval');\n        if (interval != null) {\n            scale.setInterval && scale.setInterval(interval);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @param {string} [axisType] Default retrieve from model.type\n     * @return {module:echarts/scale/*}\n     */\n    axisHelper.createScaleByModel = function(model, axisType) {\n        axisType = axisType || model.get('type');\n        if (axisType) {\n            switch (axisType) {\n                // Buildin scale\n                case 'category':\n                    return new OrdinalScale(\n                        model.getCategories(), [Infinity, -Infinity]\n                    );\n                case 'value':\n                    return new IntervalScale();\n                // Extended scale, like time and log\n                default:\n                    return (Scale.getClass(axisType) || IntervalScale).create(model);\n            }\n        }\n    };\n\n    /**\n     * Check if the axis corss 0\n     */\n    axisHelper.ifAxisCrossZero = function (axis) {\n        var dataExtent = axis.scale.getExtent();\n        var min = dataExtent[0];\n        var max = dataExtent[1];\n        return !((min > 0 && max > 0) || (min < 0 && max < 0));\n    };\n\n    /**\n     * @param {Array.<number>} tickCoords In axis self coordinate.\n     * @param {Array.<string>} labels\n     * @param {string} font\n     * @param {boolean} isAxisHorizontal\n     * @return {number}\n     */\n    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\n        // FIXME\n        // 不同角的axis和label，不只是horizontal和vertical.\n\n        var textSpaceTakenRect;\n        var autoLabelInterval = 0;\n        var accumulatedLabelInterval = 0;\n\n        var step = 1;\n        if (labels.length > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.floor(labels.length / 40);\n        }\n\n        for (var i = 0; i < tickCoords.length; i += step) {\n            var tickCoord = tickCoords[i];\n            var rect = textContain.getBoundingRect(\n                labels[i], font, 'center', 'top'\n            );\n            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\n            // FIXME Magic number 1.5\n            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\n            if (!textSpaceTakenRect) {\n                textSpaceTakenRect = rect.clone();\n            }\n            // There is no space for current label;\n            else if (textSpaceTakenRect.intersect(rect)) {\n                accumulatedLabelInterval++;\n                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n            }\n            else {\n                textSpaceTakenRect.union(rect);\n                // Reset\n                accumulatedLabelInterval = 0;\n            }\n        }\n        if (autoLabelInterval === 0 && step > 1) {\n            return step;\n        }\n        return (autoLabelInterval + 1) * step - 1;\n    };\n\n    /**\n     * @param {Object} axis\n     * @param {Function} labelFormatter\n     * @return {Array.<string>}\n     */\n    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\n        var scale = axis.scale;\n        var labels = scale.getTicksLabels();\n        var ticks = scale.getTicks();\n        if (typeof labelFormatter === 'string') {\n            labelFormatter = (function (tpl) {\n                return function (val) {\n                    return tpl.replace('{value}', val != null ? val : '');\n                };\n            })(labelFormatter);\n            // Consider empty array\n            return zrUtil.map(labels, labelFormatter);\n        }\n        else if (typeof labelFormatter === 'function') {\n            return zrUtil.map(ticks, function (tick, idx) {\n                return labelFormatter(\n                    axisHelper.getAxisRawValue(axis, tick),\n                    idx\n                );\n            }, this);\n        }\n        else {\n            return labels;\n        }\n    };\n\n    axisHelper.getAxisRawValue = function (axis, value) {\n        // In category axis with data zoom, tick is not the original\n        // index of axis.data. So tick should not be exposed to user\n        // in category axis.\n        return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n    };\n\n    module.exports = axisHelper;\n\n\n/***/ }),\n\n/***/ 621:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var util = __webpack_require__(606);\n    var BoundingRect = __webpack_require__(617);\n    var imageHelper = __webpack_require__(646);\n\n    var textWidthCache = {};\n    var textWidthCacheCounter = 0;\n\n    var TEXT_CACHE_MAX = 5000;\n    var STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\n    var DEFAULT_FONT = '12px sans-serif';\n\n    var retrieve2 = util.retrieve2;\n    var retrieve3 = util.retrieve3;\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @return {number} width\n     */\n    function getTextWidth(text, font) {\n        font = font || DEFAULT_FONT;\n        var key = text + ':' + font;\n        if (textWidthCache[key]) {\n            return textWidthCache[key];\n        }\n\n        var textLines = (text + '').split('\\n');\n        var width = 0;\n\n        for (var i = 0, l = textLines.length; i < l; i++) {\n            // textContain.measureText may be overrided in SVG or VML\n            width = Math.max(textContain.measureText(textLines[i], font).width, width);\n        }\n\n        if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n            textWidthCacheCounter = 0;\n            textWidthCache = {};\n        }\n        textWidthCacheCounter++;\n        textWidthCache[key] = width;\n\n        return width;\n    }\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @param {string} [textAlign='left']\n     * @param {string} [textVerticalAlign='top']\n     * @param {Array.<number>} [textPadding]\n     * @param {Object} [rich]\n     * @param {Object} [truncate]\n     * @return {Object} {x, y, width, height, lineHeight}\n     */\n    function getTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n        return rich\n            ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate)\n            : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n    }\n\n    function getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n        var contentBlock = parsePlainText(text, font, textPadding, truncate);\n        var outerWidth = getTextWidth(text, font);\n        if (textPadding) {\n            outerWidth += textPadding[1] + textPadding[3];\n        }\n        var outerHeight = contentBlock.outerHeight;\n\n        var x = adjustTextX(0, outerWidth, textAlign);\n        var y = adjustTextY(0, outerHeight, textVerticalAlign);\n\n        var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n        rect.lineHeight = contentBlock.lineHeight;\n\n        return rect;\n    }\n\n    function getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n        var contentBlock = parseRichText(text, {\n            rich: rich,\n            truncate: truncate,\n            font: font,\n            textAlign: textAlign,\n            textPadding: textPadding\n        });\n        var outerWidth = contentBlock.outerWidth;\n        var outerHeight = contentBlock.outerHeight;\n\n        var x = adjustTextX(0, outerWidth, textAlign);\n        var y = adjustTextY(0, outerHeight, textVerticalAlign);\n\n        return new BoundingRect(x, y, outerWidth, outerHeight);\n    }\n\n    /**\n     * @public\n     * @param {number} x\n     * @param {number} width\n     * @param {string} [textAlign='left']\n     * @return {number} Adjusted x.\n     */\n    function adjustTextX(x, width, textAlign) {\n        // FIXME Right to left language\n        if (textAlign === 'right') {\n            x -= width;\n        }\n        else if (textAlign === 'center') {\n            x -= width / 2;\n        }\n        return x;\n    }\n\n    /**\n     * @public\n     * @param {number} y\n     * @param {number} height\n     * @param {string} [textVerticalAlign='top']\n     * @return {number} Adjusted y.\n     */\n    function adjustTextY(y, height, textVerticalAlign) {\n        if (textVerticalAlign === 'middle') {\n            y -= height / 2;\n        }\n        else if (textVerticalAlign === 'bottom') {\n            y -= height;\n        }\n        return y;\n    }\n\n    /**\n     * @public\n     * @param {stirng} textPosition\n     * @param {Object} rect {x, y, width, height}\n     * @param {number} distance\n     * @return {Object} {x, y, textAlign, textVerticalAlign}\n     */\n    function adjustTextPositionOnRect(textPosition, rect, distance) {\n\n        var x = rect.x;\n        var y = rect.y;\n\n        var height = rect.height;\n        var width = rect.width;\n        var halfHeight = height / 2;\n\n        var textAlign = 'left';\n        var textVerticalAlign = 'top';\n\n        switch (textPosition) {\n            case 'left':\n                x -= distance;\n                y += halfHeight;\n                textAlign = 'right';\n                textVerticalAlign = 'middle';\n                break;\n            case 'right':\n                x += distance + width;\n                y += halfHeight;\n                textVerticalAlign = 'middle';\n                break;\n            case 'top':\n                x += width / 2;\n                y -= distance;\n                textAlign = 'center';\n                textVerticalAlign = 'bottom';\n                break;\n            case 'bottom':\n                x += width / 2;\n                y += height + distance;\n                textAlign = 'center';\n                break;\n            case 'inside':\n                x += width / 2;\n                y += halfHeight;\n                textAlign = 'center';\n                textVerticalAlign = 'middle';\n                break;\n            case 'insideLeft':\n                x += distance;\n                y += halfHeight;\n                textVerticalAlign = 'middle';\n                break;\n            case 'insideRight':\n                x += width - distance;\n                y += halfHeight;\n                textAlign = 'right';\n                textVerticalAlign = 'middle';\n                break;\n            case 'insideTop':\n                x += width / 2;\n                y += distance;\n                textAlign = 'center';\n                break;\n            case 'insideBottom':\n                x += width / 2;\n                y += height - distance;\n                textAlign = 'center';\n                textVerticalAlign = 'bottom';\n                break;\n            case 'insideTopLeft':\n                x += distance;\n                y += distance;\n                break;\n            case 'insideTopRight':\n                x += width - distance;\n                y += distance;\n                textAlign = 'right';\n                break;\n            case 'insideBottomLeft':\n                x += distance;\n                y += height - distance;\n                textVerticalAlign = 'bottom';\n                break;\n            case 'insideBottomRight':\n                x += width - distance;\n                y += height - distance;\n                textAlign = 'right';\n                textVerticalAlign = 'bottom';\n                break;\n        }\n\n        return {\n            x: x,\n            y: y,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    /**\n     * Show ellipsis if overflow.\n     *\n     * @public\n     * @param  {string} text\n     * @param  {string} containerWidth\n     * @param  {string} font\n     * @param  {number} [ellipsis='...']\n     * @param  {Object} [options]\n     * @param  {number} [options.maxIterations=3]\n     * @param  {number} [options.minChar=0] If truncate result are less\n     *                  then minChar, ellipsis will not show, which is\n     *                  better for user hint in some cases.\n     * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n     * @return {string}\n     */\n    function truncateText(text, containerWidth, font, ellipsis, options) {\n        if (!containerWidth) {\n            return '';\n        }\n\n        var textLines = (text + '').split('\\n');\n        options = prepareTruncateOptions(containerWidth, font, ellipsis, options);\n\n        // FIXME\n        // It is not appropriate that every line has '...' when truncate multiple lines.\n        for (var i = 0, len = textLines.length; i < len; i++) {\n            textLines[i] = truncateSingleLine(textLines[i], options);\n        }\n\n        return textLines.join('\\n');\n    }\n\n    function prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n        options = util.extend({}, options);\n\n        options.font = font;\n        var ellipsis = retrieve2(ellipsis, '...');\n        options.maxIterations = retrieve2(options.maxIterations, 2);\n        var minChar = options.minChar = retrieve2(options.minChar, 0);\n        // FIXME\n        // Other languages?\n        options.cnCharWidth = getTextWidth('国', font);\n        // FIXME\n        // Consider proportional font?\n        var ascCharWidth = options.ascCharWidth = getTextWidth('a', font);\n        options.placeholder = retrieve2(options.placeholder, '');\n\n        // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n        // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n        var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n        for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n            contentWidth -= ascCharWidth;\n        }\n\n        var ellipsisWidth = getTextWidth(ellipsis);\n        if (ellipsisWidth > contentWidth) {\n            ellipsis = '';\n            ellipsisWidth = 0;\n        }\n\n        contentWidth = containerWidth - ellipsisWidth;\n\n        options.ellipsis = ellipsis;\n        options.ellipsisWidth = ellipsisWidth;\n        options.contentWidth = contentWidth;\n        options.containerWidth = containerWidth;\n\n        return options;\n    }\n\n    function truncateSingleLine(textLine, options) {\n        var containerWidth = options.containerWidth;\n        var font = options.font;\n        var contentWidth = options.contentWidth;\n\n        if (!containerWidth) {\n            return '';\n        }\n\n        var lineWidth = getTextWidth(textLine, font);\n\n        if (lineWidth <= containerWidth) {\n            return textLine;\n        }\n\n        for (var j = 0;; j++) {\n            if (lineWidth <= contentWidth || j >= options.maxIterations) {\n                textLine += options.ellipsis;\n                break;\n            }\n\n            var subLength = j === 0\n                ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth)\n                : lineWidth > 0\n                ? Math.floor(textLine.length * contentWidth / lineWidth)\n                : 0;\n\n            textLine = textLine.substr(0, subLength);\n            lineWidth = getTextWidth(textLine, font);\n        }\n\n        if (textLine === '') {\n            textLine = options.placeholder;\n        }\n\n        return textLine;\n    }\n\n    function estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n        var width = 0;\n        var i = 0;\n        for (var len = text.length; i < len && width < contentWidth; i++) {\n            var charCode = text.charCodeAt(i);\n            width += (0 <= charCode && charCode <= 127) ? ascCharWidth : cnCharWidth;\n        }\n        return i;\n    }\n\n    /**\n     * @public\n     * @param {string} font\n     * @return {number} line height\n     */\n    function getLineHeight(font) {\n        // FIXME A rough approach.\n        return getTextWidth('国', font);\n    }\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @return {Object} width\n     */\n    function measureText(text, font) {\n        var ctx = util.getContext();\n        ctx.font = font || DEFAULT_FONT;\n        return ctx.measureText(text);\n    }\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @param {Object} [truncate]\n     * @return {Object} block: {lineHeight, lines, height, outerHeight}\n     *  Notice: for performance, do not calculate outerWidth util needed.\n     */\n    function parsePlainText(text, font, padding, truncate) {\n        text != null && (text += '');\n\n        var lineHeight = getLineHeight(font);\n        var lines = text ? text.split('\\n') : [];\n        var height = lines.length * lineHeight;\n        var outerHeight = height;\n\n        if (padding) {\n            outerHeight += padding[0] + padding[2];\n        }\n\n        if (text && truncate) {\n            var truncOuterHeight = truncate.outerHeight;\n            var truncOuterWidth = truncate.outerWidth;\n            if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n                text = '';\n                lines = [];\n            }\n            else if (truncOuterWidth != null) {\n                var options = prepareTruncateOptions(\n                    truncOuterWidth - (padding ? padding[1] + padding[3] : 0),\n                    font,\n                    truncate.ellipsis,\n                    {minChar: truncate.minChar, placeholder: truncate.placeholder}\n                );\n\n                // FIXME\n                // It is not appropriate that every line has '...' when truncate multiple lines.\n                for (var i = 0, len = lines.length; i < len; i++) {\n                    lines[i] = truncateSingleLine(lines[i], options);\n                }\n            }\n        }\n\n        return {\n            lines: lines,\n            height: height,\n            outerHeight: outerHeight,\n            lineHeight: lineHeight\n        };\n    }\n\n    /**\n     * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n     * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n     *\n     * @public\n     * @param {string} text\n     * @param {Object} style\n     * @return {Object} block\n     * {\n     *      width,\n     *      height,\n     *      lines: [{\n     *          lineHeight,\n     *          width,\n     *          tokens: [[{\n     *              styleName,\n     *              text,\n     *              width,      // include textPadding\n     *              height,     // include textPadding\n     *              textWidth, // pure text width\n     *              textHeight, // pure text height\n     *              lineHeihgt,\n     *              font,\n     *              textAlign,\n     *              textVerticalAlign\n     *          }], [...], ...]\n     *      }, ...]\n     * }\n     * If styleName is undefined, it is plain text.\n     */\n    function parseRichText(text, style) {\n        var contentBlock = {lines: [], width: 0, height: 0};\n\n        text != null && (text += '');\n        if (!text) {\n            return contentBlock;\n        }\n\n        var lastIndex = STYLE_REG.lastIndex = 0;\n        var result;\n        while ((result = STYLE_REG.exec(text)) != null)  {\n            var matchedIndex = result.index;\n            if (matchedIndex > lastIndex) {\n                pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n            }\n            pushTokens(contentBlock, result[2], result[1]);\n            lastIndex = STYLE_REG.lastIndex;\n        }\n\n        if (lastIndex < text.length) {\n            pushTokens(contentBlock, text.substring(lastIndex, text.length));\n        }\n\n        var lines = contentBlock.lines;\n        var contentHeight = 0;\n        var contentWidth = 0;\n        // For `textWidth: 100%`\n        var pendingList = [];\n\n        var stlPadding = style.textPadding;\n\n        var truncate = style.truncate;\n        var truncateWidth = truncate && truncate.outerWidth;\n        var truncateHeight = truncate && truncate.outerHeight;\n        if (stlPadding) {\n            truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n            truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n        }\n\n        // Calculate layout info of tokens.\n        for (var i = 0; i < lines.length; i++) {\n            var line = lines[i];\n            var lineHeight = 0;\n            var lineWidth = 0;\n\n            for (var j = 0; j < line.tokens.length; j++) {\n                var token = line.tokens[j];\n                var tokenStyle = token.styleName && style.rich[token.styleName] || {};\n                // textPadding should not inherit from style.\n                var textPadding = token.textPadding = tokenStyle.textPadding;\n\n                // textFont has been asigned to font by `normalizeStyle`.\n                var font = token.font = tokenStyle.font || style.font;\n\n                // textHeight can be used when textVerticalAlign is specified in token.\n                var tokenHeight = token.textHeight = retrieve2(\n                    // textHeight should not be inherited, consider it can be specified\n                    // as box height of the block.\n                    tokenStyle.textHeight, textContain.getLineHeight(font)\n                );\n                textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n                token.height = tokenHeight;\n                token.lineHeight = retrieve3(\n                    tokenStyle.textLineHeight, style.textLineHeight, tokenHeight\n                );\n\n                token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n                token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n                if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n                    return {lines: [], width: 0, height: 0};\n                }\n\n                token.textWidth = textContain.getWidth(token.text, font);\n                var tokenWidth = tokenStyle.textWidth;\n                var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto';\n\n                // Percent width, can be `100%`, can be used in drawing separate\n                // line when box width is needed to be auto.\n                if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n                    token.percentWidth = tokenWidth;\n                    pendingList.push(token);\n                    tokenWidth = 0;\n                    // Do not truncate in this case, because there is no user case\n                    // and it is too complicated.\n                }\n                else {\n                    if (tokenWidthNotSpecified) {\n                        tokenWidth = token.textWidth;\n\n                        // FIXME: If image is not loaded and textWidth is not specified, calling\n                        // `getBoundingRect()` will not get correct result.\n                        var textBackgroundColor = tokenStyle.textBackgroundColor;\n                        var bgImg = textBackgroundColor && textBackgroundColor.image;\n\n                        // Use cases:\n                        // (1) If image is not loaded, it will be loaded at render phase and call\n                        // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n                        // image, and then the right size will be calculated here at the next tick.\n                        // See `graphic/helper/text.js`.\n                        // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n                        // use `imageHelper.findExistImage` to find cached image.\n                        // `imageHelper.findExistImage` will always be called here before\n                        // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n                        // which ensures that image will not be rendered before correct size calcualted.\n                        if (bgImg) {\n                            bgImg = imageHelper.findExistImage(bgImg);\n                            if (imageHelper.isImageReady(bgImg)) {\n                                tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n                            }\n                        }\n                    }\n\n                    var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n                    tokenWidth += paddingW;\n\n                    var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n                    if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n                        if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n                            token.text = '';\n                            token.textWidth = tokenWidth = 0;\n                        }\n                        else {\n                            token.text = truncateText(\n                                token.text, remianTruncWidth - paddingW, font, truncate.ellipsis,\n                                {minChar: truncate.minChar}\n                            );\n                            token.textWidth = textContain.getWidth(token.text, font);\n                            tokenWidth = token.textWidth + paddingW;\n                        }\n                    }\n                }\n\n                lineWidth += (token.width = tokenWidth);\n                tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n            }\n\n            line.width = lineWidth;\n            line.lineHeight = lineHeight;\n            contentHeight += lineHeight;\n            contentWidth = Math.max(contentWidth, lineWidth);\n        }\n\n        contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n        contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n        if (stlPadding) {\n            contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n            contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n        }\n\n        for (var i = 0; i < pendingList.length; i++) {\n            var token = pendingList[i];\n            var percentWidth = token.percentWidth;\n            // Should not base on outerWidth, because token can not be placed out of padding.\n            token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n        }\n\n        return contentBlock;\n    }\n\n    function pushTokens(block, str, styleName) {\n        var isEmptyStr = str === '';\n        var strs = str.split('\\n');\n        var lines = block.lines;\n\n        for (var i = 0; i < strs.length; i++) {\n            var text = strs[i];\n            var token = {\n                styleName: styleName,\n                text: text,\n                isLineHolder: !text && !isEmptyStr\n            };\n\n            // The first token should be appended to the last line.\n            if (!i) {\n                var tokens = (lines[lines.length - 1] || (lines[0] = {tokens: []})).tokens;\n\n                // Consider cases:\n                // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n                // (which is a placeholder) should be replaced by new token.\n                // (2) A image backage, where token likes {a|}.\n                // (3) A redundant '' will affect textAlign in line.\n                // (4) tokens with the same tplName should not be merged, because\n                // they should be displayed in different box (with border and padding).\n                var tokensLen = tokens.length;\n                (tokensLen === 1 && tokens[0].isLineHolder)\n                    ? (tokens[0] = token)\n                    // Consider text is '', only insert when it is the \"lineHolder\" or\n                    // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n                    : ((text || !tokensLen || isEmptyStr) && tokens.push(token));\n            }\n            // Other tokens always start a new line.\n            else {\n                // If there is '', insert it as a placeholder.\n                lines.push({tokens: [token]});\n            }\n        }\n    }\n\n    function makeFont(style) {\n        // FIXME in node-canvas fontWeight is before fontStyle\n        // Use `fontSize` `fontFamily` to check whether font properties are defined.\n        return (style.fontSize || style.fontFamily) && [\n            style.fontStyle,\n            style.fontWeight,\n            (style.fontSize || 12) + 'px',\n            // If font properties are defined, `fontFamily` should not be ignored.\n            style.fontFamily || 'sans-serif'\n        ].join(' ') || style.textFont || style.font;\n    }\n\n    var textContain = {\n\n        getWidth: getTextWidth,\n\n        getBoundingRect: getTextRect,\n\n        adjustTextPositionOnRect: adjustTextPositionOnRect,\n\n        truncateText: truncateText,\n\n        measureText: measureText,\n\n        getLineHeight: getLineHeight,\n\n        parsePlainText: parsePlainText,\n\n        parseRichText: parseRichText,\n\n        adjustTextX: adjustTextX,\n\n        adjustTextY: adjustTextY,\n\n        makeFont: makeFont,\n\n        DEFAULT_FONT: DEFAULT_FONT\n    };\n\n    module.exports = textContain;\n\n\n/***/ }),\n\n/***/ 622:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var vec2 = __webpack_require__(611);\n    var v2Create = vec2.create;\n    var v2DistSquare = vec2.distSquare;\n    var mathPow = Math.pow;\n    var mathSqrt = Math.sqrt;\n\n    var EPSILON = 1e-8;\n    var EPSILON_NUMERIC = 1e-4;\n\n    var THREE_SQRT = mathSqrt(3);\n    var ONE_THIRD = 1 / 3;\n\n    // 临时变量\n    var _v0 = v2Create();\n    var _v1 = v2Create();\n    var _v2 = v2Create();\n    // var _v3 = vec2.create();\n\n    function isAroundZero(val) {\n        return val > -EPSILON && val < EPSILON;\n    }\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n    /**\n     * 计算三次贝塞尔值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return onet * onet * (onet * p0 + 3 * t * p1)\n             + t * t * (t * p3 + 3 * onet * p2);\n    }\n\n    /**\n     * 计算三次贝塞尔导数值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicDerivativeAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return 3 * (\n            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\n            + (p3 - p2) * t * t\n        );\n    }\n\n    /**\n     * 计算三次贝塞尔方程根，使用盛金公式\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} val\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function cubicRootAt(p0, p1, p2, p3, val, roots) {\n        // Evaluate roots of cubic functions\n        var a = p3 + 3 * (p1 - p2) - p0;\n        var b = 3 * (p2 - p1 * 2 + p0);\n        var c = 3 * (p1  - p0);\n        var d = p0 - val;\n\n        var A = b * b - 3 * a * c;\n        var B = b * c - 9 * a * d;\n        var C = c * c - 3 * b * d;\n\n        var n = 0;\n\n        if (isAroundZero(A) && isAroundZero(B)) {\n            if (isAroundZero(b)) {\n                roots[0] = 0;\n            }\n            else {\n                var t1 = -c / b;  //t1, t2, t3, b is not zero\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = B * B - 4 * A * C;\n\n            if (isAroundZero(disc)) {\n                var K = B / A;\n                var t1 = -b / a + K;  // t1, a is not zero\n                var t2 = -K / 2;  // t2, t3\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n                if (Y1 < 0) {\n                    Y1 = -mathPow(-Y1, ONE_THIRD);\n                }\n                else {\n                    Y1 = mathPow(Y1, ONE_THIRD);\n                }\n                if (Y2 < 0) {\n                    Y2 = -mathPow(-Y2, ONE_THIRD);\n                }\n                else {\n                    Y2 = mathPow(Y2, ONE_THIRD);\n                }\n                var t1 = (-b - (Y1 + Y2)) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else {\n                var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n                var theta = Math.acos(T) / 3;\n                var ASqrt = mathSqrt(A);\n                var tmp = Math.cos(theta);\n\n                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n                if (t3 >= 0 && t3 <= 1) {\n                    roots[n++] = t3;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算三次贝塞尔方程极限值的位置\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {Array.<number>} extrema\n     * @return {number} 有效数目\n     */\n    function cubicExtrema(p0, p1, p2, p3, extrema) {\n        var b = 6 * p2 - 12 * p1 + 6 * p0;\n        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n        var c = 3 * p1 - 3 * p0;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <=1) {\n                    extrema[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                extrema[0] = -b / (2 * a);\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    extrema[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    extrema[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 细分三次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function cubicSubdivide(p0, p1, p2, p3, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p23 = (p3 - p2) * t + p2;\n\n        var p012 = (p12 - p01) * t + p01;\n        var p123 = (p23 - p12) * t + p12;\n\n        var p0123 = (p123 - p012) * t + p012;\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n        out[3] = p0123;\n        // Seg1\n        out[4] = p0123;\n        out[5] = p123;\n        out[6] = p23;\n        out[7] = p3;\n    }\n\n    /**\n     * 投射点到三次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} [out] 投射点\n     * @return {number}\n     */\n    function cubicProjectPoint(\n        x0, y0, x1, y1, x2, y2, x3, y3,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n        var prev;\n        var next;\n        var d1;\n        var d2;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n            d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            prev = t - interval;\n            next = t + interval;\n            // t - interval\n            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n\n            d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = cubicAt(x0, x1, x2, x3, next);\n                _v2[1] = cubicAt(y0, y1, y2, y3, next);\n                d2 = v2DistSquare(_v2, _v0);\n\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = cubicAt(x0, x1, x2, x3, t);\n            out[1] = cubicAt(y0, y1, y2, y3, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    /**\n     * 计算二次方贝塞尔值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticAt(p0, p1, p2, t) {\n        var onet = 1 - t;\n        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n    }\n\n    /**\n     * 计算二次方贝塞尔导数值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticDerivativeAt(p0, p1, p2, t) {\n        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n    }\n\n    /**\n     * 计算二次方贝塞尔方程根\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function quadraticRootAt(p0, p1, p2, val, roots) {\n        var a = p0 - 2 * p1 + p2;\n        var b = 2 * (p1 - p0);\n        var c = p0 - val;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                var t1 = -b / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算二次贝塞尔方程极限值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @return {number}\n     */\n    function quadraticExtremum(p0, p1, p2) {\n        var divider = p0 + p2 - 2 * p1;\n        if (divider === 0) {\n            // p1 is center of p0 and p2\n            return 0.5;\n        }\n        else {\n            return (p0 - p1) / divider;\n        }\n    }\n\n    /**\n     * 细分二次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function quadraticSubdivide(p0, p1, p2, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p012 = (p12 - p01) * t + p01;\n\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n\n        // Seg1\n        out[3] = p012;\n        out[4] = p12;\n        out[5] = p2;\n    }\n\n    /**\n     * 投射点到二次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} out 投射点\n     * @return {number}\n     */\n    function quadraticProjectPoint(\n        x0, y0, x1, y1, x2, y2,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = quadraticAt(x0, x1, x2, _t);\n            _v1[1] = quadraticAt(y0, y1, y2, _t);\n            var d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            var prev = t - interval;\n            var next = t + interval;\n            // t - interval\n            _v1[0] = quadraticAt(x0, x1, x2, prev);\n            _v1[1] = quadraticAt(y0, y1, y2, prev);\n\n            var d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = quadraticAt(x0, x1, x2, next);\n                _v2[1] = quadraticAt(y0, y1, y2, next);\n                var d2 = v2DistSquare(_v2, _v0);\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = quadraticAt(x0, x1, x2, t);\n            out[1] = quadraticAt(y0, y1, y2, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    module.exports = {\n\n        cubicAt: cubicAt,\n\n        cubicDerivativeAt: cubicDerivativeAt,\n\n        cubicRootAt: cubicRootAt,\n\n        cubicExtrema: cubicExtrema,\n\n        cubicSubdivide: cubicSubdivide,\n\n        cubicProjectPoint: cubicProjectPoint,\n\n        quadraticAt: quadraticAt,\n\n        quadraticDerivativeAt: quadraticDerivativeAt,\n\n        quadraticRootAt: quadraticRootAt,\n\n        quadraticExtremum: quadraticExtremum,\n\n        quadraticSubdivide: quadraticSubdivide,\n\n        quadraticProjectPoint: quadraticProjectPoint\n    };\n\n\n/***/ }),\n\n/***/ 623:\n/***/ (function(module, exports) {\n\n\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n    /**\n     * 3x2矩阵操作类\n     * @exports zrender/tool/matrix\n     */\n    var matrix = {\n        /**\n         * 创建一个单位矩阵\n         * @return {Float32Array|Array.<number>}\n         */\n        create : function() {\n            var out = new ArrayCtor(6);\n            matrix.identity(out);\n\n            return out;\n        },\n        /**\n         * 设置矩阵为单位矩阵\n         * @param {Float32Array|Array.<number>} out\n         */\n        identity : function(out) {\n            out[0] = 1;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            out[4] = 0;\n            out[5] = 0;\n            return out;\n        },\n        /**\n         * 复制矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m\n         */\n        copy: function(out, m) {\n            out[0] = m[0];\n            out[1] = m[1];\n            out[2] = m[2];\n            out[3] = m[3];\n            out[4] = m[4];\n            out[5] = m[5];\n            return out;\n        },\n        /**\n         * 矩阵相乘\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m1\n         * @param {Float32Array|Array.<number>} m2\n         */\n        mul : function (out, m1, m2) {\n            // Consider matrix.mul(m, m2, m);\n            // where out is the same as m2.\n            // So use temp variable to escape error.\n            var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n            var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n            var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n            var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n            var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n            var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n            out[0] = out0;\n            out[1] = out1;\n            out[2] = out2;\n            out[3] = out3;\n            out[4] = out4;\n            out[5] = out5;\n            return out;\n        },\n        /**\n         * 平移变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        translate : function(out, a, v) {\n            out[0] = a[0];\n            out[1] = a[1];\n            out[2] = a[2];\n            out[3] = a[3];\n            out[4] = a[4] + v[0];\n            out[5] = a[5] + v[1];\n            return out;\n        },\n        /**\n         * 旋转变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {number} rad\n         */\n        rotate : function(out, a, rad) {\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n            var st = Math.sin(rad);\n            var ct = Math.cos(rad);\n\n            out[0] = aa * ct + ab * st;\n            out[1] = -aa * st + ab * ct;\n            out[2] = ac * ct + ad * st;\n            out[3] = -ac * st + ct * ad;\n            out[4] = ct * atx + st * aty;\n            out[5] = ct * aty - st * atx;\n            return out;\n        },\n        /**\n         * 缩放变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        scale : function(out, a, v) {\n            var vx = v[0];\n            var vy = v[1];\n            out[0] = a[0] * vx;\n            out[1] = a[1] * vy;\n            out[2] = a[2] * vx;\n            out[3] = a[3] * vy;\n            out[4] = a[4] * vx;\n            out[5] = a[5] * vy;\n            return out;\n        },\n        /**\n         * 求逆矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         */\n        invert : function(out, a) {\n\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n\n            var det = aa * ad - ab * ac;\n            if (!det) {\n                return null;\n            }\n            det = 1.0 / det;\n\n            out[0] = ad * det;\n            out[1] = -ab * det;\n            out[2] = -ac * det;\n            out[3] = aa * det;\n            out[4] = (ac * aty - ad * atx) * det;\n            out[5] = (ab * atx - aa * aty) * det;\n            return out;\n        }\n    };\n\n    module.exports = matrix;\n\n\n\n/***/ }),\n\n/***/ 624:\n/***/ (function(module, exports) {\n\nmodule.exports = function (date) {\n  var fmt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'YYYY-MM-DD HH:mm:ss';\n\n  if (!date) {\n    return '';\n  }\n  if (typeof date === 'string') {\n    date = new Date(date.replace(/-/g, '/'));\n  }\n  if (typeof date === 'number') {\n    date = new Date(date);\n  }\n  var o = {\n    'M+': date.getMonth() + 1,\n    'D+': date.getDate(),\n    'h+': date.getHours() % 12 === 0 ? 12 : date.getHours() % 12,\n    'H+': date.getHours(),\n    'm+': date.getMinutes(),\n    's+': date.getSeconds(),\n    'q+': Math.floor((date.getMonth() + 3) / 3),\n    'S': date.getMilliseconds()\n  };\n  var week = {\n    '0': '\\u65E5',\n    '1': '\\u4E00',\n    '2': '\\u4E8C',\n    '3': '\\u4E09',\n    '4': '\\u56DB',\n    '5': '\\u4E94',\n    '6': '\\u516D'\n  };\n  if (/(Y+)/.test(fmt)) {\n    fmt = fmt.replace(RegExp.$1, (date.getFullYear() + '').substr(4 - RegExp.$1.length));\n  }\n  if (/(E+)/.test(fmt)) {\n    fmt = fmt.replace(RegExp.$1, (RegExp.$1.length > 1 ? RegExp.$1.length > 2 ? '\\u661F\\u671F' : '\\u5468' : '') + week[date.getDay() + '']);\n  }\n  for (var k in o) {\n    if (new RegExp('(' + k + ')').test(fmt)) {\n      fmt = fmt.replace(RegExp.$1, RegExp.$1.length === 1 ? o[k] : ('00' + o[k]).substr(('' + o[k]).length));\n    }\n  }\n  return fmt;\n};\n\n/***/ }),\n\n/***/ 625:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n\n    var Eventful = __webpack_require__(626);\n    var env = __webpack_require__(615);\n\n    var isDomLevel2 = (typeof window !== 'undefined') && !!window.addEventListener;\n\n    function getBoundingClientRect(el) {\n        // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n        return el.getBoundingClientRect ? el.getBoundingClientRect() : {left: 0, top: 0};\n    }\n\n    // `calculate` is optional, default false\n    function clientToLocal(el, e, out, calculate) {\n        out = out || {};\n\n        // According to the W3C Working Draft, offsetX and offsetY should be relative\n        // to the padding edge of the target element. The only browser using this convention\n        // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n        // not support the properties.\n        // (see http://www.jacklmoore.com/notes/mouse-position/)\n        // In zr painter.dom, padding edge equals to border edge.\n\n        // FIXME\n        // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n        // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n        // is too complex. So css-transfrom dont support in this case temporarily.\n        if (calculate || !env.canvasSupported) {\n            defaultGetZrXY(el, e, out);\n        }\n        // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n        // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n        // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n        // zoom-factor, overflow / opacity layers, transforms ...)\n        // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n        // <https://bugs.jquery.com/ticket/8523#comment:14>\n        // BTW3, In ff, offsetX/offsetY is always 0.\n        else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n            out.zrX = e.layerX;\n            out.zrY = e.layerY;\n        }\n        // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n        else if (e.offsetX != null) {\n            out.zrX = e.offsetX;\n            out.zrY = e.offsetY;\n        }\n        // For some other device, e.g., IOS safari.\n        else {\n            defaultGetZrXY(el, e, out);\n        }\n\n        return out;\n    }\n\n    function defaultGetZrXY(el, e, out) {\n        // This well-known method below does not support css transform.\n        var box = getBoundingClientRect(el);\n        out.zrX = e.clientX - box.left;\n        out.zrY = e.clientY - box.top;\n    }\n\n    /**\n     * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n     * `calculate` is optional, default false.\n     */\n    function normalizeEvent(el, e, calculate) {\n\n        e = e || window.event;\n\n        if (e.zrX != null) {\n            return e;\n        }\n\n        var eventType = e.type;\n        var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n        if (!isTouch) {\n            clientToLocal(el, e, e, calculate);\n            e.zrDelta = (e.wheelDelta) ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n        }\n        else {\n            var touch = eventType != 'touchend'\n                ? e.targetTouches[0]\n                : e.changedTouches[0];\n            touch && clientToLocal(el, touch, e, calculate);\n        }\n\n        return e;\n    }\n\n    function addEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.addEventListener(name, handler);\n        }\n        else {\n            el.attachEvent('on' + name, handler);\n        }\n    }\n\n    function removeEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.removeEventListener(name, handler);\n        }\n        else {\n            el.detachEvent('on' + name, handler);\n        }\n    }\n\n    /**\n     * preventDefault and stopPropagation.\n     * Notice: do not do that in zrender. Upper application\n     * do that if necessary.\n     *\n     * @memberOf module:zrender/core/event\n     * @method\n     * @param {Event} e : event对象\n     */\n    var stop = isDomLevel2\n        ? function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.cancelBubble = true;\n        }\n        : function (e) {\n            e.returnValue = false;\n            e.cancelBubble = true;\n        };\n\n    module.exports = {\n        clientToLocal: clientToLocal,\n        normalizeEvent: normalizeEvent,\n        addEventListener: addEventListener,\n        removeEventListener: removeEventListener,\n\n        stop: stop,\n        // 做向上兼容\n        Dispatcher: Eventful\n    };\n\n\n\n/***/ }),\n\n/***/ 626:\n/***/ (function(module, exports) {\n\n/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n\n\n    var arrySlice = Array.prototype.slice;\n\n    /**\n     * 事件分发器\n     * @alias module:zrender/mixin/Eventful\n     * @constructor\n     */\n    var Eventful = function () {\n        this._$handlers = {};\n    };\n\n    Eventful.prototype = {\n\n        constructor: Eventful,\n\n        /**\n         * 单次触发绑定，trigger后销毁\n         *\n         * @param {string} event 事件名\n         * @param {Function} handler 响应函数\n         * @param {Object} context\n         */\n        one: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: true,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 绑定事件\n         * @param {string} event 事件名\n         * @param {Function} handler 事件处理函数\n         * @param {Object} [context]\n         */\n        on: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: false,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 是否绑定了事件\n         * @param  {string}  event\n         * @return {boolean}\n         */\n        isSilent: function (event) {\n            var _h = this._$handlers;\n            return _h[event] && _h[event].length;\n        },\n\n        /**\n         * 解绑事件\n         * @param {string} event 事件名\n         * @param {Function} [handler] 事件处理函数\n         */\n        off: function (event, handler) {\n            var _h = this._$handlers;\n\n            if (!event) {\n                this._$handlers = {};\n                return this;\n            }\n\n            if (handler) {\n                if (_h[event]) {\n                    var newList = [];\n                    for (var i = 0, l = _h[event].length; i < l; i++) {\n                        if (_h[event][i]['h'] != handler) {\n                            newList.push(_h[event][i]);\n                        }\n                    }\n                    _h[event] = newList;\n                }\n\n                if (_h[event] && _h[event].length === 0) {\n                    delete _h[event];\n                }\n            }\n            else {\n                delete _h[event];\n            }\n\n            return this;\n        },\n\n        /**\n         * 事件分发\n         *\n         * @param {string} type 事件类型\n         */\n        trigger: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 3) {\n                    args = arrySlice.call(args, 1);\n                }\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(_h[i]['ctx']);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(_h[i]['ctx'], args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 带有context的事件分发, 最后一个参数是事件回调的context\n         * @param {string} type 事件类型\n         */\n        triggerWithContext: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 4) {\n                    args = arrySlice.call(args, 1, args.length - 1);\n                }\n                var ctx = args[args.length - 1];\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(ctx);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(ctx, args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(ctx, args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(ctx, args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        }\n    };\n\n    // 对象可以通过 onxxxx 绑定事件\n    /**\n     * @event module:zrender/mixin/Eventful#onclick\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseout\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousemove\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousewheel\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousedown\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseup\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrag\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragstart\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragend\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragenter\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragleave\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrop\n     * @type {Function}\n     * @default null\n     */\n\n    module.exports = Eventful;\n\n\n\n/***/ }),\n\n/***/ 627:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/tool/color\n */\n\n\n    var LRU = __webpack_require__(671);\n\n    var kCSSColorTable = {\n        'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\n        'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\n        'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\n        'beige': [245,245,220,1], 'bisque': [255,228,196,1],\n        'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\n        'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\n        'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\n        'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\n        'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\n        'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\n        'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\n        'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\n        'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\n        'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\n        'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\n        'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\n        'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\n        'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\n        'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\n        'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\n        'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\n        'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\n        'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\n        'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\n        'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\n        'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\n        'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\n        'gray': [128,128,128,1], 'green': [0,128,0,1],\n        'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\n        'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\n        'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\n        'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\n        'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\n        'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\n        'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\n        'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\n        'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\n        'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\n        'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\n        'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\n        'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\n        'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\n        'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\n        'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\n        'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\n        'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\n        'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\n        'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\n        'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\n        'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\n        'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\n        'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\n        'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\n        'orange': [255,165,0,1], 'orangered': [255,69,0,1],\n        'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\n        'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\n        'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\n        'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\n        'pink': [255,192,203,1], 'plum': [221,160,221,1],\n        'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\n        'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\n        'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\n        'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\n        'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\n        'sienna': [160,82,45,1], 'silver': [192,192,192,1],\n        'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\n        'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\n        'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\n        'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\n        'teal': [0,128,128,1], 'thistle': [216,191,216,1],\n        'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\n        'violet': [238,130,238,1], 'wheat': [245,222,179,1],\n        'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\n        'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\n    };\n\n    function clampCssByte(i) {  // Clamp to integer 0 .. 255.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 255 ? 255 : i;\n    }\n\n    function clampCssAngle(i) {  // Clamp to integer 0 .. 360.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 360 ? 360 : i;\n    }\n\n    function clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\n        return f < 0 ? 0 : f > 1 ? 1 : f;\n    }\n\n    function parseCssInt(str) {  // int or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssByte(parseFloat(str) / 100 * 255);\n        }\n        return clampCssByte(parseInt(str, 10));\n    }\n\n    function parseCssFloat(str) {  // float or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssFloat(parseFloat(str) / 100);\n        }\n        return clampCssFloat(parseFloat(str));\n    }\n\n    function cssHueToRgb(m1, m2, h) {\n        if (h < 0) {\n            h += 1;\n        }\n        else if (h > 1) {\n            h -= 1;\n        }\n\n        if (h * 6 < 1) {\n            return m1 + (m2 - m1) * h * 6;\n        }\n        if (h * 2 < 1) {\n            return m2;\n        }\n        if (h * 3 < 2) {\n            return m1 + (m2 - m1) * (2/3 - h) * 6;\n        }\n        return m1;\n    }\n\n    function lerp(a, b, p) {\n        return a + (b - a) * p;\n    }\n\n    function setRgba(out, r, g, b, a) {\n        out[0] = r; out[1] = g; out[2] = b; out[3] = a;\n        return out;\n    }\n    function copyRgba(out, a) {\n        out[0] = a[0]; out[1] = a[1]; out[2] = a[2]; out[3] = a[3];\n        return out;\n    }\n    var colorCache = new LRU(20);\n    var lastRemovedArr = null;\n    function putToCache(colorStr, rgbaArr) {\n        // Reuse removed array\n        if (lastRemovedArr) {\n            copyRgba(lastRemovedArr, rgbaArr);\n        }\n        lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || (rgbaArr.slice()));\n    }\n    /**\n     * @param {string} colorStr\n     * @param {Array.<number>} out\n     * @return {Array.<number>}\n     * @memberOf module:zrender/util/color\n     */\n    function parse(colorStr, rgbaArr) {\n        if (!colorStr) {\n            return;\n        }\n        rgbaArr = rgbaArr || [];\n\n        var cached = colorCache.get(colorStr);\n        if (cached) {\n            return copyRgba(rgbaArr, cached);\n        }\n\n        // colorStr may be not string\n        colorStr = colorStr + '';\n        // Remove all whitespace, not compliant, but should just be more accepting.\n        var str = colorStr.replace(/ /g, '').toLowerCase();\n\n        // Color keywords (and transparent) lookup.\n        if (str in kCSSColorTable) {\n            copyRgba(rgbaArr, kCSSColorTable[str]);\n            putToCache(colorStr, rgbaArr);\n            return rgbaArr;\n        }\n\n        // #abc and #abc123 syntax.\n        if (str.charAt(0) === '#') {\n            if (str.length === 4) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xfff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n                    (iv & 0xf0) | ((iv & 0xf0) >> 4),\n                    (iv & 0xf) | ((iv & 0xf) << 4),\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n            else if (str.length === 7) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xffffff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    (iv & 0xff0000) >> 16,\n                    (iv & 0xff00) >> 8,\n                    iv & 0xff,\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n\n            return;\n        }\n        var op = str.indexOf('('), ep = str.indexOf(')');\n        if (op !== -1 && ep + 1 === str.length) {\n            var fname = str.substr(0, op);\n            var params = str.substr(op + 1, ep - (op + 1)).split(',');\n            var alpha = 1;  // To allow case fallthrough.\n            switch (fname) {\n                case 'rgba':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    alpha = parseCssFloat(params.pop()); // jshint ignore:line\n                // Fall through.\n                case 'rgb':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    setRgba(rgbaArr,\n                        parseCssInt(params[0]),\n                        parseCssInt(params[1]),\n                        parseCssInt(params[2]),\n                        alpha\n                    );\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsla':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    params[3] = parseCssFloat(params[3]);\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsl':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                default:\n                    return;\n            }\n        }\n\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return;\n    }\n\n    /**\n     * @param {Array.<number>} hsla\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} rgba\n     */\n    function hsla2rgba(hsla, rgba) {\n        var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parseCssFloat(hsla[1]);\n        var l = parseCssFloat(hsla[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n\n        rgba = rgba || [];\n        setRgba(rgba,\n            clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255),\n            1\n        );\n\n        if (hsla.length === 4) {\n            rgba[3] = hsla[3];\n        }\n\n        return rgba;\n    }\n\n    /**\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} hsla\n     */\n    function rgba2hsla(rgba) {\n        if (!rgba) {\n            return;\n        }\n\n        // RGB from 0 to 255\n        var R = rgba[0] / 255;\n        var G = rgba[1] / 255;\n        var B = rgba[2] / 255;\n\n        var vMin = Math.min(R, G, B); // Min. value of RGB\n        var vMax = Math.max(R, G, B); // Max. value of RGB\n        var delta = vMax - vMin; // Delta RGB value\n\n        var L = (vMax + vMin) / 2;\n        var H;\n        var S;\n        // HSL results from 0 to 1\n        if (delta === 0) {\n            H = 0;\n            S = 0;\n        }\n        else {\n            if (L < 0.5) {\n                S = delta / (vMax + vMin);\n            }\n            else {\n                S = delta / (2 - vMax - vMin);\n            }\n\n            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\n            if (R === vMax) {\n                H = deltaB - deltaG;\n            }\n            else if (G === vMax) {\n                H = (1 / 3) + deltaR - deltaB;\n            }\n            else if (B === vMax) {\n                H = (2 / 3) + deltaG - deltaR;\n            }\n\n            if (H < 0) {\n                H += 1;\n            }\n\n            if (H > 1) {\n                H -= 1;\n            }\n        }\n\n        var hsla = [H * 360, S, L];\n\n        if (rgba[3] != null) {\n            hsla.push(rgba[3]);\n        }\n\n        return hsla;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number} level\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function lift(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            for (var i = 0; i < 3; i++) {\n                if (level < 0) {\n                    colorArr[i] = colorArr[i] * (1 - level) | 0;\n                }\n                else {\n                    colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\n                }\n            }\n            return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function toHex(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\n        }\n    }\n\n    /**\n     * Map value to color. Faster than mapToColor methods because color is represented by rgba array.\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<Array.<number>>} colors List of rgba color array\n     * @param {Array.<number>} [out] Mapped gba color array\n     * @return {Array.<number>} will be null/undefined if input illegal.\n     */\n    function fastMapToColor(normalizedValue, colors, out) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        out = out || [];\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = colors[leftIndex];\n        var rightColor = colors[rightIndex];\n        var dv = value - leftIndex;\n        out[0] = clampCssByte(lerp(leftColor[0], rightColor[0], dv));\n        out[1] = clampCssByte(lerp(leftColor[1], rightColor[1], dv));\n        out[2] = clampCssByte(lerp(leftColor[2], rightColor[2], dv));\n        out[3] = clampCssFloat(lerp(leftColor[3], rightColor[3], dv));\n\n        return out;\n    }\n    /**\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<string>} colors Color list.\n     * @param {boolean=} fullOutput Default false.\n     * @return {(string|Object)} Result color. If fullOutput,\n     *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n     * @memberOf module:zrender/util/color\n     */\n    function mapToColor(normalizedValue, colors, fullOutput) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = parse(colors[leftIndex]);\n        var rightColor = parse(colors[rightIndex]);\n        var dv = value - leftIndex;\n\n        var color = stringify(\n            [\n                clampCssByte(lerp(leftColor[0], rightColor[0], dv)),\n                clampCssByte(lerp(leftColor[1], rightColor[1], dv)),\n                clampCssByte(lerp(leftColor[2], rightColor[2], dv)),\n                clampCssFloat(lerp(leftColor[3], rightColor[3], dv))\n            ],\n            'rgba'\n        );\n\n        return fullOutput\n            ? {\n                color: color,\n                leftIndex: leftIndex,\n                rightIndex: rightIndex,\n                value: value\n            }\n            : color;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} h 0 ~ 360, ignore when null.\n     * @param {number=} s 0 ~ 1, ignore when null.\n     * @param {number=} l 0 ~ 1, ignore when null.\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyHSL(color, h, s, l) {\n        color = parse(color);\n\n        if (color) {\n            color = rgba2hsla(color);\n            h != null && (color[0] = clampCssAngle(h));\n            s != null && (color[1] = parseCssFloat(s));\n            l != null && (color[2] = parseCssFloat(l));\n\n            return stringify(hsla2rgba(color), 'rgba');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} alpha 0 ~ 1\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyAlpha(color, alpha) {\n        color = parse(color);\n\n        if (color && alpha != null) {\n            color[3] = clampCssFloat(alpha);\n            return stringify(color, 'rgba');\n        }\n    }\n\n    /**\n     * @param {Array.<number>} arrColor like [12,33,44,0.4]\n     * @param {string} type 'rgba', 'hsva', ...\n     * @return {string} Result color. (If input illegal, return undefined).\n     */\n    function stringify(arrColor, type) {\n        if (!arrColor || !arrColor.length) {\n            return;\n        }\n        var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n        if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n            colorStr += ',' + arrColor[3];\n        }\n        return type + '(' + colorStr + ')';\n    }\n\n    module.exports = {\n        parse: parse,\n        lift: lift,\n        toHex: toHex,\n        fastMapToColor: fastMapToColor,\n        mapToColor: mapToColor,\n        modifyHSL: modifyHSL,\n        modifyAlpha: modifyAlpha,\n        stringify: stringify\n    };\n\n\n\n\n/***/ }),\n\n/***/ 628:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return listLoadMixin; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return chartDataMixin; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return dateMixin; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_common_js_util__ = __webpack_require__(138);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vux_src_tools_date_format_js__ = __webpack_require__(624);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vux_src_tools_date_format_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_vux_src_tools_date_format_js__);\n\n\n\nvar hold = 4000;\n\nvar listLoadMixin = {\n  methods: {\n    _refresh: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_common_js_util__[\"b\" /* throttle */])(function () {\n      this.refresh();\n    }, hold),\n    _loadMore: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_common_js_util__[\"b\" /* throttle */])(function () {\n      this.loadMore();\n    }, hold)\n  }\n};\n\nvar chartDataMixin = {\n  methods: {\n    normalizLineData: function normalizLineData(dataObj) {\n      var obj = {\n        columns: ['日期'],\n        rows: []\n      };\n      dataObj.bars.forEach(function (item) {\n        obj.columns.push(item.name);\n      });\n      for (var i = 0; i < dataObj.times.length; i++) {\n        var o = {};\n        o['日期'] = dataObj.times[i];\n        for (var j = 0; j < dataObj.bars.length; j++) {\n          o[dataObj.bars[j].name] = dataObj.bars[j].data[i];\n        }\n        obj.rows.push(o);\n      }\n      return obj;\n    }\n  }\n};\n\nvar dateMixin = {\n  filters: {\n    formatDate: function formatDate(date) {\n      return __WEBPACK_IMPORTED_MODULE_1_vux_src_tools_date_format_js___default()(date, 'YYYY-MM-DD');\n    }\n  }\n};\n\n/***/ }),\n\n/***/ 629:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var Model = __webpack_require__(614);\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n\n    var helper = {};\n\n    // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n    // allAxesInfo should be updated when setOption performed.\n    helper.collect = function (ecModel, api) {\n        var result = {\n            /**\n             * key: makeKey(axis.model)\n             * value: {\n             *      axis,\n             *      coordSys,\n             *      axisPointerModel,\n             *      triggerTooltip,\n             *      involveSeries,\n             *      snap,\n             *      seriesModels,\n             *      seriesDataCount\n             * }\n             */\n            axesInfo: {},\n            seriesInvolved: false,\n            /**\n             * key: makeKey(coordSys.model)\n             * value: Object: key makeKey(axis.model), value: axisInfo\n             */\n            coordSysAxesInfo: {},\n            coordSysMap: {}\n        };\n\n        collectAxesInfo(result, ecModel, api);\n\n        // Check seriesInvolved for performance, in case too many series in some chart.\n        result.seriesInvolved && collectSeriesInfo(result, ecModel);\n\n        return result;\n    };\n\n    function collectAxesInfo(result, ecModel, api) {\n        var globalTooltipModel = ecModel.getComponent('tooltip');\n        var globalAxisPointerModel = ecModel.getComponent('axisPointer');\n        // links can only be set on global.\n        var linksOption = globalAxisPointerModel.get('link', true) || [];\n        var linkGroups = [];\n\n        // Collect axes info.\n        each(api.getCoordinateSystems(), function (coordSys) {\n            // Some coordinate system do not support axes, like geo.\n            if (!coordSys.axisPointerEnabled) {\n                return;\n            }\n\n            var coordSysKey = makeKey(coordSys.model);\n            var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n            result.coordSysMap[coordSysKey] = coordSys;\n\n            // Set tooltip (like 'cross') is a convienent way to show axisPointer\n            // for user. So we enable seting tooltip on coordSys model.\n            var coordSysModel = coordSys.model;\n            var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n\n            each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null));\n\n            // If axis tooltip used, choose tooltip axis for each coordSys.\n            // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n            if (coordSys.getTooltipAxes\n                && globalTooltipModel\n                // If tooltip.showContent is set as false, tooltip will not\n                // show but axisPointer will show as normal.\n                && baseTooltipModel.get('show')\n            ) {\n                // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n                // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n                var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n                var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n                var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n                if (triggerAxis || cross) {\n                    each(tooltipAxes.baseAxes, curry(\n                        saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis\n                    ));\n                }\n                if (cross) {\n                    each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n                }\n            }\n\n            // fromTooltip: true | false | 'cross'\n            // triggerTooltip: true | false | null\n            function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n                var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n\n                var axisPointerShow = axisPointerModel.get('show');\n                if (!axisPointerShow || (\n                    axisPointerShow === 'auto'\n                    && !fromTooltip\n                    && !isHandleTrigger(axisPointerModel)\n                )) {\n                    return;\n                }\n\n                if (triggerTooltip == null) {\n                    triggerTooltip = axisPointerModel.get('triggerTooltip');\n                }\n\n                axisPointerModel = fromTooltip\n                    ? makeAxisPointerModel(\n                        axis, baseTooltipModel, globalAxisPointerModel, ecModel,\n                        fromTooltip, triggerTooltip\n                    )\n                    : axisPointerModel;\n\n                var snap = axisPointerModel.get('snap');\n                var key = makeKey(axis.model);\n                var involveSeries = triggerTooltip || snap || axis.type === 'category';\n\n                // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n                var axisInfo = result.axesInfo[key] = {\n                    key: key,\n                    axis: axis,\n                    coordSys: coordSys,\n                    axisPointerModel: axisPointerModel,\n                    triggerTooltip: triggerTooltip,\n                    involveSeries: involveSeries,\n                    snap: snap,\n                    useHandle: isHandleTrigger(axisPointerModel),\n                    seriesModels: []\n                };\n                axesInfoInCoordSys[key] = axisInfo;\n                result.seriesInvolved |= involveSeries;\n\n                var groupIndex = getLinkGroupIndex(linksOption, axis);\n                if (groupIndex != null) {\n                    var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {axesInfo: {}});\n                    linkGroup.axesInfo[key] = axisInfo;\n                    linkGroup.mapper = linksOption[groupIndex].mapper;\n                    axisInfo.linkGroup = linkGroup;\n                }\n            }\n        });\n    }\n\n    function makeAxisPointerModel(\n        axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip\n    ) {\n        var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n        var volatileOption = {};\n\n        each(\n            [\n                'type', 'snap', 'lineStyle', 'shadowStyle', 'label',\n                'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'\n            ],\n            function (field) {\n                volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n            }\n        );\n\n        // category axis do not auto snap, otherwise some tick that do not\n        // has value can not be hovered. value/time/log axis default snap if\n        // triggered from tooltip and trigger tooltip.\n        volatileOption.snap = axis.type !== 'category' && !!triggerTooltip;\n\n        // Compatibel with previous behavior, tooltip axis do not show label by default.\n        // Only these properties can be overrided from tooltip to axisPointer.\n        if (tooltipAxisPointerModel.get('type') === 'cross') {\n            volatileOption.type = 'line';\n        }\n        var labelOption = volatileOption.label || (volatileOption.label = {});\n        // Follow the convention, do not show label when triggered by tooltip by default.\n        labelOption.show == null && (labelOption.show = false);\n\n        if (fromTooltip === 'cross') {\n            // When 'cross', both axes show labels.\n            labelOption.show = true;\n            // If triggerTooltip, this is a base axis, which should better not use cross style\n            // (cross style is dashed by default)\n            if (!triggerTooltip) {\n                var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n                crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n            }\n        }\n\n        return axis.model.getModel(\n            'axisPointer',\n            new Model(volatileOption, globalAxisPointerModel, ecModel)\n        );\n    }\n\n    function collectSeriesInfo(result, ecModel) {\n        // Prepare data for axis trigger\n        ecModel.eachSeries(function (seriesModel) {\n\n            // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n            var coordSys = seriesModel.coordinateSystem;\n            var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n            var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n            if (!coordSys\n                || seriesTooltipTrigger === 'none'\n                || seriesTooltipTrigger === false\n                || seriesTooltipTrigger === 'item'\n                || seriesTooltipShow === false\n                || seriesModel.get('axisPointer.show', true) === false\n            ) {\n                return;\n            }\n\n            each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n                var axis = axisInfo.axis;\n                if (coordSys.getAxis(axis.dim) === axis) {\n                    axisInfo.seriesModels.push(seriesModel);\n                    axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n                    axisInfo.seriesDataCount += seriesModel.getData().count();\n                }\n            });\n\n        }, this);\n    }\n\n    /**\n     * For example:\n     * {\n     *     axisPointer: {\n     *         links: [{\n     *             xAxisIndex: [2, 4],\n     *             yAxisIndex: 'all'\n     *         }, {\n     *             xAxisId: ['a5', 'a7'],\n     *             xAxisName: 'xxx'\n     *         }]\n     *     }\n     * }\n     */\n    function getLinkGroupIndex(linksOption, axis) {\n        var axisModel = axis.model;\n        var dim = axis.dim;\n        for (var i = 0; i < linksOption.length; i++) {\n            var linkOption = linksOption[i] || {};\n            if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id)\n                || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex)\n                || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)\n            ) {\n                return i;\n            }\n        }\n    }\n\n    function checkPropInLink(linkPropValue, axisPropValue) {\n        return linkPropValue === 'all'\n            || (zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0)\n            || linkPropValue === axisPropValue;\n    }\n\n    helper.fixValue = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        if (!axisInfo) {\n            return;\n        }\n\n        var axisPointerModel = axisInfo.axisPointerModel;\n        var scale = axisInfo.axis.scale;\n        var option = axisPointerModel.option;\n        var status = axisPointerModel.get('status');\n        var value = axisPointerModel.get('value');\n\n        // Parse init value for category and time axis.\n        if (value != null) {\n            value = scale.parse(value);\n        }\n\n        var useHandle = isHandleTrigger(axisPointerModel);\n        // If `handle` used, `axisPointer` will always be displayed, so value\n        // and status should be initialized.\n        if (status == null) {\n            option.status = useHandle ? 'show' : 'hide';\n        }\n\n        var extent = scale.getExtent().slice();\n        extent[0] > extent[1] && extent.reverse();\n\n        if (// Pick a value on axis when initializing.\n            value == null\n            // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n            // where we should re-pick a value to keep `handle` displaying normally.\n            || value > extent[1]\n        ) {\n            // Make handle displayed on the end of the axis when init, which looks better.\n            value = extent[1];\n        }\n        if (value < extent[0]) {\n            value = extent[0];\n        }\n\n        option.value = value;\n\n        if (useHandle) {\n            option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n        }\n    };\n\n    helper.getAxisInfo = function (axisModel) {\n        var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n        return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n    };\n\n    helper.getAxisPointerModel = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        return axisInfo && axisInfo.axisPointerModel;\n    };\n\n    function isHandleTrigger(axisPointerModel) {\n        return !!axisPointerModel.get('handle.show');\n    }\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @return {string} unique key\n     */\n    var makeKey = helper.makeKey = function (model) {\n        return model.type + '||' + model.id;\n    };\n\n    module.exports = helper;\n\n\n\n/***/ }),\n\n/***/ 630:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n * List for data storage\n * @module echarts/data/List\n */\n\n\n    var UNDEFINED = 'undefined';\n    var globalObj = typeof window === 'undefined' ? global : window;\n    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\n        ? Array : globalObj.Float64Array;\n    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\n        ? Array : globalObj.Int32Array;\n\n    var dataCtors = {\n        'float': Float64Array,\n        'int': Int32Array,\n        // Ordinal data type can be string or int\n        'ordinal': Array,\n        'number': Array,\n        'time': Array\n    };\n\n    var Model = __webpack_require__(614);\n    var DataDiffer = __webpack_require__(730);\n\n    var zrUtil = __webpack_require__(606);\n    var modelUtil = __webpack_require__(609);\n    var isObject = zrUtil.isObject;\n\n    var TRANSFERABLE_PROPERTIES = [\n        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\n    ];\n\n    function transferProperties(a, b) {\n        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n            if (b.hasOwnProperty(propName)) {\n                a[propName] = b[propName];\n            }\n        });\n\n        a.__wrappedMethods = b.__wrappedMethods;\n    }\n\n    function DefaultDataProvider(dataArray) {\n        this._array = dataArray || [];\n    }\n\n    DefaultDataProvider.prototype.pure = false;\n\n    DefaultDataProvider.prototype.count = function () {\n        return this._array.length;\n    };\n    DefaultDataProvider.prototype.getItem = function (idx) {\n        return this._array[idx];\n    };\n\n    /**\n     * @constructor\n     * @alias module:echarts/data/List\n     *\n     * @param {Array.<string|Object>} dimensions\n     *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n     *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n     * @param {module:echarts/model/Model} hostModel\n     */\n    var List = function (dimensions, hostModel) {\n\n        dimensions = dimensions || ['x', 'y'];\n\n        var dimensionInfos = {};\n        var dimensionNames = [];\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimensionName;\n            var dimensionInfo = {};\n            if (typeof dimensions[i] === 'string') {\n                dimensionName = dimensions[i];\n                dimensionInfo = {\n                    name: dimensionName,\n                    coordDim: dimensionName,\n                    coordDimIndex: 0,\n                    stackable: false,\n                    // Type can be 'float', 'int', 'number'\n                    // Default is number, Precision of float may not enough\n                    type: 'number'\n                };\n            }\n            else {\n                dimensionInfo = dimensions[i];\n                dimensionName = dimensionInfo.name;\n                dimensionInfo.type = dimensionInfo.type || 'number';\n                if (!dimensionInfo.coordDim) {\n                    dimensionInfo.coordDim = dimensionName;\n                    dimensionInfo.coordDimIndex = 0;\n                }\n            }\n            dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n            dimensionNames.push(dimensionName);\n            dimensionInfos[dimensionName] = dimensionInfo;\n        }\n\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        this.dimensions = dimensionNames;\n\n        /**\n         * Infomation of each data dimension, like data type.\n         * @type {Object}\n         */\n        this._dimensionInfos = dimensionInfos;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.hostModel = hostModel;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.dataType;\n\n        /**\n         * Indices stores the indices of data subset after filtered.\n         * This data subset will be used in chart.\n         * @type {Array.<number>}\n         * @readOnly\n         */\n        this.indices = [];\n\n        /**\n         * Data storage\n         * @type {Object.<key, TypedArray|Array>}\n         * @private\n         */\n        this._storage = {};\n\n        /**\n         * @type {Array.<string>}\n         */\n        this._nameList = [];\n        /**\n         * @type {Array.<string>}\n         */\n        this._idList = [];\n\n        /**\n         * Models of data option is stored sparse for optimizing memory cost\n         * @type {Array.<module:echarts/model/Model>}\n         * @private\n         */\n        this._optionModels = [];\n\n        /**\n         * @param {module:echarts/data/List}\n         */\n        this.stackedOn = null;\n\n        /**\n         * Global visual properties after visual coding\n         * @type {Object}\n         * @private\n         */\n        this._visual = {};\n\n        /**\n         * Globel layout properties.\n         * @type {Object}\n         * @private\n         */\n        this._layout = {};\n\n        /**\n         * Item visual properties after visual coding\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemVisuals = [];\n\n        /**\n         * Item layout properties after layout\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemLayouts = [];\n\n        /**\n         * Graphic elemnents\n         * @type {Array.<module:zrender/Element>}\n         * @private\n         */\n        this._graphicEls = [];\n\n        /**\n         * @type {Array.<Array|Object>}\n         * @private\n         */\n        this._rawData;\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._extent;\n    };\n\n    var listProto = List.prototype;\n\n    listProto.type = 'list';\n\n    /**\n     * If each data item has it's own option\n     * @type {boolean}\n     */\n    listProto.hasItemOption = true;\n\n    /**\n     * Get dimension name\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     * @return {string} Concrete dim name.\n     */\n    listProto.getDimension = function (dim) {\n        if (!isNaN(dim)) {\n            dim = this.dimensions[dim] || dim;\n        }\n        return dim;\n    };\n\n    /**\n     * Get type and stackable info of particular dimension\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     */\n    listProto.getDimensionInfo = function (dim) {\n        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n    };\n\n    /**\n     * Initialize from data\n     * @param {Array.<Object|number|Array>} data\n     * @param {Array.<string>} [nameList]\n     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n     */\n    listProto.initData = function (data, nameList, dimValueGetter) {\n        data = data || [];\n\n        var isDataArray = zrUtil.isArray(data);\n        if (isDataArray) {\n            data = new DefaultDataProvider(data);\n        }\n        if (__DEV__) {\n            if (!isDataArray && (typeof data.getItem != 'function' || typeof data.count != 'function')) {\n                throw new Error('Inavlid data provider.');\n            }\n        }\n\n        this._rawData = data;\n\n        // Clear\n        var storage = this._storage = {};\n        var indices = this.indices = [];\n\n        var dimensions = this.dimensions;\n        var dimensionInfoMap = this._dimensionInfos;\n\n        var size = data.count();\n\n        var idList = [];\n        var nameRepeatCount = {};\n        var nameDimIdx;\n\n        nameList = nameList || [];\n\n        // Init storage\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimInfo = dimensionInfoMap[dimensions[i]];\n            dimInfo.otherDims.itemName === 0 && (nameDimIdx = i);\n            var DataCtor = dataCtors[dimInfo.type];\n            storage[dimensions[i]] = new DataCtor(size);\n        }\n\n        var self = this;\n        if (!dimValueGetter) {\n            self.hasItemOption = false;\n        }\n        // Default dim value getter\n        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n            var value = modelUtil.getDataItemValue(dataItem);\n            // If any dataItem is like { value: 10 }\n            if (modelUtil.isDataItemOption(dataItem)) {\n                self.hasItemOption = true;\n            }\n            return modelUtil.converDataValue(\n                (value instanceof Array)\n                    ? value[dimIndex]\n                    // If value is a single number or something else not array.\n                    : value,\n                dimensionInfoMap[dimName]\n            );\n        };\n\n        for (var i = 0; i < size; i++) {\n            // NOTICE: Try not to write things into dataItem\n            var dataItem = data.getItem(i);\n            // Each data item is value\n            // [1, 2]\n            // 2\n            // Bar chart, line chart which uses category axis\n            // only gives the 'y' value. 'x' value is the indices of cateogry\n            // Use a tempValue to normalize the value to be a (x, y) value\n\n            // Store the data by dimensions\n            for (var k = 0; k < dimensions.length; k++) {\n                var dim = dimensions[k];\n                var dimStorage = storage[dim];\n                // PENDING NULL is empty or zero\n                dimStorage[i] = dimValueGetter(dataItem, dim, i, k);\n            }\n\n            indices.push(i);\n        }\n\n        // Use the name in option and create id\n        for (var i = 0; i < size; i++) {\n            var dataItem = data.getItem(i);\n            if (!nameList[i] && dataItem) {\n                if (dataItem.name != null) {\n                    nameList[i] = dataItem.name;\n                }\n                else if (nameDimIdx != null) {\n                    nameList[i] = storage[dimensions[nameDimIdx]][i];\n                }\n            }\n            var name = nameList[i] || '';\n            // Try using the id in option\n            var id = dataItem && dataItem.id;\n\n            if (!id && name) {\n                // Use name as id and add counter to avoid same name\n                nameRepeatCount[name] = nameRepeatCount[name] || 0;\n                id = name;\n                if (nameRepeatCount[name] > 0) {\n                    id += '__ec__' + nameRepeatCount[name];\n                }\n                nameRepeatCount[name]++;\n            }\n            id && (idList[i] = id);\n        }\n\n        this._nameList = nameList;\n        this._idList = idList;\n    };\n\n    /**\n     * @return {number}\n     */\n    listProto.count = function () {\n        return this.indices.length;\n    };\n\n    /**\n     * Get value. Return NaN if idx is out of range.\n     * @param {string} dim Dim must be concrete name.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.get = function (dim, idx, stack) {\n        var storage = this._storage;\n        var dataIndex = this.indices[idx];\n\n        // If value not exists\n        if (dataIndex == null || !storage[dim]) {\n            return NaN;\n        }\n\n        var value = storage[dim][dataIndex];\n        // FIXME ordinal data type is not stackable\n        if (stack) {\n            var dimensionInfo = this._dimensionInfos[dim];\n            if (dimensionInfo && dimensionInfo.stackable) {\n                var stackedOn = this.stackedOn;\n                while (stackedOn) {\n                    // Get no stacked data of stacked on\n                    var stackedValue = stackedOn.get(dim, idx);\n                    // Considering positive stack, negative stack and empty data\n                    if ((value >= 0 && stackedValue > 0)  // Positive stack\n                        || (value <= 0 && stackedValue < 0) // Negative stack\n                    ) {\n                        value += stackedValue;\n                    }\n                    stackedOn = stackedOn.stackedOn;\n                }\n            }\n        }\n        return value;\n    };\n\n    /**\n     * Get value for multi dimensions.\n     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.getValues = function (dimensions, idx, stack) {\n        var values = [];\n\n        if (!zrUtil.isArray(dimensions)) {\n            stack = idx;\n            idx = dimensions;\n            dimensions = this.dimensions;\n        }\n\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            values.push(this.get(dimensions[i], idx, stack));\n        }\n\n        return values;\n    };\n\n    /**\n     * If value is NaN. Inlcuding '-'\n     * @param {string} dim\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.hasValue = function (idx) {\n        var dimensions = this.dimensions;\n        var dimensionInfos = this._dimensionInfos;\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            if (\n                // Ordinal type can be string or number\n                dimensionInfos[dimensions[i]].type !== 'ordinal'\n                && isNaN(this.get(dimensions[i], idx))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * Get extent of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     * @param {Function} filter\n     */\n    listProto.getDataExtent = function (dim, stack, filter) {\n        dim = this.getDimension(dim);\n        var dimData = this._storage[dim];\n        var dimInfo = this.getDimensionInfo(dim);\n        stack = (dimInfo && dimInfo.stackable) && stack;\n        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\n        var value;\n        if (dimExtent) {\n            return dimExtent;\n        }\n        // var dimInfo = this._dimensionInfos[dim];\n        if (dimData) {\n            var min = Infinity;\n            var max = -Infinity;\n            // var isOrdinal = dimInfo.type === 'ordinal';\n            for (var i = 0, len = this.count(); i < len; i++) {\n                value = this.get(dim, i, stack);\n                // FIXME\n                // if (isOrdinal && typeof value === 'string') {\n                //     value = zrUtil.indexOf(dimData, value);\n                // }\n                if (!filter || filter(value, dim, i)) {\n                    value < min && (min = value);\n                    value > max && (max = value);\n                }\n            }\n            return (this._extent[dim + !!stack] = [min, max]);\n        }\n        else {\n            return [Infinity, -Infinity];\n        }\n    };\n\n    /**\n     * Get sum of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getSum = function (dim, stack) {\n        var dimData = this._storage[dim];\n        var sum = 0;\n        if (dimData) {\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var value = this.get(dim, i, stack);\n                if (!isNaN(value)) {\n                    sum += value;\n                }\n            }\n        }\n        return sum;\n    };\n\n    /**\n     * Retreive the index with given value\n     * @param {number} idx\n     * @param {number} value\n     * @return {number}\n     */\n    // FIXME Precision of float value\n    listProto.indexOf = function (dim, value) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var indices = this.indices;\n\n        if (dimData) {\n            for (var i = 0, len = indices.length; i < len; i++) {\n                var rawIndex = indices[i];\n                if (dimData[rawIndex] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given name\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfName = function (name) {\n        var indices = this.indices;\n        var nameList = this._nameList;\n\n        for (var i = 0, len = indices.length; i < len; i++) {\n            var rawIndex = indices[i];\n            if (nameList[rawIndex] === name) {\n                return i;\n            }\n        }\n\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given raw data index\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfRawIndex = function (rawIndex) {\n        // Indices are ascending\n        var indices = this.indices;\n\n        // If rawIndex === dataIndex\n        var rawDataIndex = indices[rawIndex];\n        if (rawDataIndex != null && rawDataIndex === rawIndex) {\n            return rawIndex;\n        }\n\n        var left = 0;\n        var right = indices.length - 1;\n        while (left <= right) {\n            var mid = (left + right) / 2 | 0;\n            if (indices[mid] < rawIndex) {\n                left = mid + 1;\n            }\n            else if (indices[mid] > rawIndex) {\n                right = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index of nearest value\n     * @param {string} dim\n     * @param {number} value\n     * @param {boolean} stack If given value is after stacked\n     * @param {number} [maxDistance=Infinity]\n     * @return {Array.<number>} Considere multiple points has the same value.\n     */\n    listProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var nearestIndices = [];\n\n        if (!dimData) {\n            return nearestIndices;\n        }\n\n        if (maxDistance == null) {\n            maxDistance = Infinity;\n        }\n\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n        for (var i = 0, len = this.count(); i < len; i++) {\n            var diff = value - this.get(dim, i, stack);\n            var dist = Math.abs(diff);\n            if (diff <= maxDistance && dist <= minDist) {\n                // For the case of two data are same on xAxis, which has sequence data.\n                // Show the nearest index\n                // https://github.com/ecomfe/echarts/issues/2869\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    nearestIndices.length = 0;\n                }\n                nearestIndices.push(i);\n            }\n        }\n        return nearestIndices;\n    };\n\n    /**\n     * Get raw data index\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawIndex = function (idx) {\n        var rawIdx = this.indices[idx];\n        return rawIdx == null ? -1 : rawIdx;\n    };\n\n    /**\n     * Get raw data item\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawDataItem = function (idx) {\n        return this._rawData.getItem(this.getRawIndex(idx));\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getName = function (idx) {\n        return this._nameList[this.indices[idx]] || '';\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getId = function (idx) {\n        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\n    };\n\n\n    function normalizeDimensions(dimensions) {\n        if (!zrUtil.isArray(dimensions)) {\n            dimensions = [dimensions];\n        }\n        return dimensions;\n    }\n\n    /**\n     * Data iteration\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     *\n     * @example\n     *  list.each('x', function (x, idx) {});\n     *  list.each(['x', 'y'], function (x, y, idx) {});\n     *  list.each(function (idx) {})\n     */\n    listProto.each = function (dims, cb, stack, context) {\n        if (typeof dims === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dims;\n            dims = [];\n        }\n\n        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n\n        var value = [];\n        var dimSize = dims.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            // Simple optimization\n            switch (dimSize) {\n                case 0:\n                    cb.call(context, i);\n                    break;\n                case 1:\n                    cb.call(context, this.get(dims[0], i, stack), i);\n                    break;\n                case 2:\n                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n                    break;\n                default:\n                    for (var k = 0; k < dimSize; k++) {\n                        value[k] = this.get(dims[k], i, stack);\n                    }\n                    // Index\n                    value[k] = i;\n                    cb.apply(context, value);\n            }\n        }\n    };\n\n    /**\n     * Data filter\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     */\n    listProto.filterSelf = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var newIndices = [];\n        var value = [];\n        var dimSize = dimensions.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            var keep;\n            // Simple optimization\n            if (!dimSize) {\n                keep = cb.call(context, i);\n            }\n            else if (dimSize === 1) {\n                keep = cb.call(\n                    context, this.get(dimensions[0], i, stack), i\n                );\n            }\n            else {\n                for (var k = 0; k < dimSize; k++) {\n                    value[k] = this.get(dimensions[k], i, stack);\n                }\n                value[k] = i;\n                keep = cb.apply(context, value);\n            }\n            if (keep) {\n                newIndices.push(indices[i]);\n            }\n        }\n\n        this.indices = newIndices;\n\n        // Reset data extent\n        this._extent = {};\n\n        return this;\n    };\n\n    /**\n     * Data mapping to a plain array\n     * @param {string|Array.<string>} [dimensions]\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.mapArray = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        var result = [];\n        this.each(dimensions, function () {\n            result.push(cb && cb.apply(this, arguments));\n        }, stack, context);\n        return result;\n    };\n\n    function cloneListForMapAndSample(original, excludeDimensions) {\n        var allDimensions = original.dimensions;\n        var list = new List(\n            zrUtil.map(allDimensions, original.getDimensionInfo, original),\n            original.hostModel\n        );\n        // FIXME If needs stackedOn, value may already been stacked\n        transferProperties(list, original);\n\n        var storage = list._storage = {};\n        var originalStorage = original._storage;\n        // Init storage\n        for (var i = 0; i < allDimensions.length; i++) {\n            var dim = allDimensions[i];\n            var dimStore = originalStorage[dim];\n            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n                storage[dim] = new dimStore.constructor(\n                    originalStorage[dim].length\n                );\n            }\n            else {\n                // Direct reference for other dimensions\n                storage[dim] = originalStorage[dim];\n            }\n        }\n        return list;\n    }\n\n    /**\n     * Data mapping to a new List with given dimensions\n     * @param {string|Array.<string>} dimensions\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.map = function (dimensions, cb, stack, context) {\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var list = cloneListForMapAndSample(this, dimensions);\n        // Following properties are all immutable.\n        // So we can reference to the same value\n        var indices = list.indices = this.indices;\n\n        var storage = list._storage;\n\n        var tmpRetValue = [];\n        this.each(dimensions, function () {\n            var idx = arguments[arguments.length - 1];\n            var retValue = cb && cb.apply(this, arguments);\n            if (retValue != null) {\n                // a number\n                if (typeof retValue === 'number') {\n                    tmpRetValue[0] = retValue;\n                    retValue = tmpRetValue;\n                }\n                for (var i = 0; i < retValue.length; i++) {\n                    var dim = dimensions[i];\n                    var dimStore = storage[dim];\n                    var rawIdx = indices[idx];\n                    if (dimStore) {\n                        dimStore[rawIdx] = retValue[i];\n                    }\n                }\n            }\n        }, stack, context);\n\n        return list;\n    };\n\n    /**\n     * Large data down sampling on given dimension\n     * @param {string} dimension\n     * @param {number} rate\n     * @param {Function} sampleValue\n     * @param {Function} sampleIndex Sample index for name and id\n     */\n    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n        var list = cloneListForMapAndSample(this, [dimension]);\n        var storage = this._storage;\n        var targetStorage = list._storage;\n\n        var originalIndices = this.indices;\n        var indices = list.indices = [];\n\n        var frameValues = [];\n        var frameIndices = [];\n        var frameSize = Math.floor(1 / rate);\n\n        var dimStore = targetStorage[dimension];\n        var len = this.count();\n        // Copy data from original data\n        for (var i = 0; i < storage[dimension].length; i++) {\n            targetStorage[dimension][i] = storage[dimension][i];\n        }\n        for (var i = 0; i < len; i += frameSize) {\n            // Last frame\n            if (frameSize > len - i) {\n                frameSize = len - i;\n                frameValues.length = frameSize;\n            }\n            for (var k = 0; k < frameSize; k++) {\n                var idx = originalIndices[i + k];\n                frameValues[k] = dimStore[idx];\n                frameIndices[k] = idx;\n            }\n            var value = sampleValue(frameValues);\n            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\n            // Only write value on the filtered data\n            dimStore[idx] = value;\n            indices.push(idx);\n        }\n\n        return list;\n    };\n\n    /**\n     * Get model of one data item.\n     *\n     * @param {number} idx\n     */\n    // FIXME Model proxy ?\n    listProto.getItemModel = function (idx) {\n        var hostModel = this.hostModel;\n        idx = this.indices[idx];\n        return new Model(this._rawData.getItem(idx), hostModel, hostModel && hostModel.ecModel);\n    };\n\n    /**\n     * Create a data differ\n     * @param {module:echarts/data/List} otherList\n     * @return {module:echarts/data/DataDiffer}\n     */\n    listProto.diff = function (otherList) {\n        var idList = this._idList;\n        var otherIdList = otherList && otherList._idList;\n        var val;\n        // Use prefix to avoid index to be the same as otherIdList[idx],\n        // which will cause weird udpate animation.\n        var prefix = 'e\\0\\0';\n\n        return new DataDiffer(\n            otherList ? otherList.indices : [],\n            this.indices,\n            function (idx) {\n                return (val = otherIdList[idx]) != null ? val : prefix + idx;\n            },\n            function (idx) {\n                return (val = idList[idx]) != null ? val : prefix + idx;\n            }\n        );\n    };\n    /**\n     * Get visual property.\n     * @param {string} key\n     */\n    listProto.getVisual = function (key) {\n        var visual = this._visual;\n        return visual && visual[key];\n    };\n\n    /**\n     * Set visual property\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setVisual('color', color);\n     *  setVisual({\n     *      'color': color\n     *  });\n     */\n    listProto.setVisual = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setVisual(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._visual = this._visual || {};\n        this._visual[key] = val;\n    };\n\n    /**\n     * Set layout property.\n     * @param {string|Object} key\n     * @param {*} [val]\n     */\n    listProto.setLayout = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setLayout(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._layout[key] = val;\n    };\n\n    /**\n     * Get layout property.\n     * @param  {string} key.\n     * @return {*}\n     */\n    listProto.getLayout = function (key) {\n        return this._layout[key];\n    };\n\n    /**\n     * Get layout of single data item\n     * @param {number} idx\n     */\n    listProto.getItemLayout = function (idx) {\n        return this._itemLayouts[idx];\n    };\n\n    /**\n     * Set layout of single data item\n     * @param {number} idx\n     * @param {Object} layout\n     * @param {boolean=} [merge=false]\n     */\n    listProto.setItemLayout = function (idx, layout, merge) {\n        this._itemLayouts[idx] = merge\n            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\n            : layout;\n    };\n\n    /**\n     * Clear all layout of single data item\n     */\n    listProto.clearItemLayouts = function () {\n        this._itemLayouts.length = 0;\n    };\n\n    /**\n     * Get visual property of single data item\n     * @param {number} idx\n     * @param {string} key\n     * @param {boolean} [ignoreParent=false]\n     */\n    listProto.getItemVisual = function (idx, key, ignoreParent) {\n        var itemVisual = this._itemVisuals[idx];\n        var val = itemVisual && itemVisual[key];\n        if (val == null && !ignoreParent) {\n            // Use global visual property\n            return this.getVisual(key);\n        }\n        return val;\n    };\n\n    /**\n     * Set visual property of single data item\n     *\n     * @param {number} idx\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setItemVisual(0, 'color', color);\n     *  setItemVisual(0, {\n     *      'color': color\n     *  });\n     */\n    listProto.setItemVisual = function (idx, key, value) {\n        var itemVisual = this._itemVisuals[idx] || {};\n        this._itemVisuals[idx] = itemVisual;\n\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    itemVisual[name] = key[name];\n                }\n            }\n            return;\n        }\n        itemVisual[key] = value;\n    };\n\n    /**\n     * Clear itemVisuals and list visual.\n     */\n    listProto.clearAllVisual = function () {\n        this._visual = {};\n        this._itemVisuals = [];\n    };\n\n    var setItemDataAndSeriesIndex = function (child) {\n        child.seriesIndex = this.seriesIndex;\n        child.dataIndex = this.dataIndex;\n        child.dataType = this.dataType;\n    };\n    /**\n     * Set graphic element relative to data. It can be set as null\n     * @param {number} idx\n     * @param {module:zrender/Element} [el]\n     */\n    listProto.setItemGraphicEl = function (idx, el) {\n        var hostModel = this.hostModel;\n\n        if (el) {\n            // Add data index and series index for indexing the data by element\n            // Useful in tooltip\n            el.dataIndex = idx;\n            el.dataType = this.dataType;\n            el.seriesIndex = hostModel && hostModel.seriesIndex;\n            if (el.type === 'group') {\n                el.traverse(setItemDataAndSeriesIndex, el);\n            }\n        }\n\n        this._graphicEls[idx] = el;\n    };\n\n    /**\n     * @param {number} idx\n     * @return {module:zrender/Element}\n     */\n    listProto.getItemGraphicEl = function (idx) {\n        return this._graphicEls[idx];\n    };\n\n    /**\n     * @param {Function} cb\n     * @param {*} context\n     */\n    listProto.eachItemGraphicEl = function (cb, context) {\n        zrUtil.each(this._graphicEls, function (el, idx) {\n            if (el) {\n                cb && cb.call(context, el, idx);\n            }\n        });\n    };\n\n    /**\n     * Shallow clone a new list except visual and layout properties, and graph elements.\n     * New list only change the indices.\n     */\n    listProto.cloneShallow = function () {\n        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n        var list = new List(dimensionInfoList, this.hostModel);\n\n        // FIXME\n        list._storage = this._storage;\n\n        transferProperties(list, this);\n\n\n        // Clone will not change the data extent and indices\n        list.indices = this.indices.slice();\n\n        if (this._extent) {\n            list._extent = zrUtil.extend({}, this._extent);\n        }\n\n        return list;\n    };\n\n    /**\n     * Wrap some method to add more feature\n     * @param {string} methodName\n     * @param {Function} injectFunction\n     */\n    listProto.wrapMethod = function (methodName, injectFunction) {\n        var originalMethod = this[methodName];\n        if (typeof originalMethod !== 'function') {\n            return;\n        }\n        this.__wrappedMethods = this.__wrappedMethods || [];\n        this.__wrappedMethods.push(methodName);\n        this[methodName] = function () {\n            var res = originalMethod.apply(this, arguments);\n            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n        };\n    };\n\n    // Methods that create a new list based on this list should be listed here.\n    // Notice that those method should `RETURN` the new list.\n    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\n    // Methods that change indices of this list should be listed here.\n    listProto.CHANGABLE_METHODS = ['filterSelf'];\n\n    module.exports = List;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(60)))\n\n/***/ }),\n\n/***/ 631:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Complete dimensions by data (guess dimension).\n */\n\n\n    var zrUtil = __webpack_require__(606);\n    var modelUtil = __webpack_require__(609);\n    var each = zrUtil.each;\n    var isString = zrUtil.isString;\n    var defaults = zrUtil.defaults;\n    var normalizeToArray = modelUtil.normalizeToArray;\n\n    var OTHER_DIMS = {tooltip: 1, label: 1, itemName: 1};\n\n    /**\n     * Complete the dimensions array, by user defined `dimension` and `encode`,\n     * and guessing from the data structure.\n     * If no 'value' dimension specified, the first no-named dimension will be\n     * named as 'value'.\n     *\n     * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n     *      provides not only dim template, but also default order.\n     *      `name` of each item provides default coord name.\n     *      [{dimsDef: []}, ...] can be specified to give names.\n     * @param {Array} data Data list. [[1, 2, 3], [2, 3, 4]].\n     * @param {Object} [opt]\n     * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n     *      For example: ['asdf', {name, type}, ...].\n     * @param {Object} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n     * @param {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n     * @param {string} [opt.extraFromZero] If specified, extra dim names will be:\n     *                      extraPrefix + 0, extraPrefix + extraBaseIndex + 1 ...\n     *                      If not specified, extra dim names will be:\n     *                      extraPrefix, extraPrefix + 0, extraPrefix + 1 ...\n     * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n     * @return {Array.<Object>} [{\n     *      name: string mandatory,\n     *      coordDim: string mandatory,\n     *      coordDimIndex: number mandatory,\n     *      type: string optional,\n     *      tooltipName: string optional,\n     *      otherDims: {\n     *          tooltip: number optional,\n     *          label: number optional\n     *      },\n     *      isExtraCoord: boolean true or undefined.\n     *      other props ...\n     * }]\n     */\n    function completeDimensions(sysDims, data, opt) {\n        data = data || [];\n        opt = opt || {};\n        sysDims = (sysDims || []).slice();\n        var dimsDef = (opt.dimsDef || []).slice();\n        var encodeDef = zrUtil.createHashMap(opt.encodeDef);\n        var dataDimNameMap = zrUtil.createHashMap();\n        var coordDimNameMap = zrUtil.createHashMap();\n        // var valueCandidate;\n        var result = [];\n\n        var dimCount = opt.dimCount;\n        if (dimCount == null) {\n            var value0 = retrieveValue(data[0]);\n            dimCount = Math.max(\n                zrUtil.isArray(value0) && value0.length || 1,\n                sysDims.length,\n                dimsDef.length\n            );\n            each(sysDims, function (sysDimItem) {\n                var sysDimItemDimsDef = sysDimItem.dimsDef;\n                sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n            });\n        }\n\n        // Apply user defined dims (`name` and `type`) and init result.\n        for (var i = 0; i < dimCount; i++) {\n            var dimDefItem = isString(dimsDef[i]) ? {name: dimsDef[i]} : (dimsDef[i] || {});\n            var userDimName = dimDefItem.name;\n            var resultItem = result[i] = {otherDims: {}};\n            // Name will be applied later for avoiding duplication.\n            if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n                // Only if `series.dimensions` is defined in option, tooltipName\n                // will be set, and dimension will be diplayed vertically in\n                // tooltip by default.\n                resultItem.name = resultItem.tooltipName = userDimName;\n                dataDimNameMap.set(userDimName, i);\n            }\n            dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n        }\n\n        // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n        encodeDef.each(function (dataDims, coordDim) {\n            dataDims = encodeDef.set(coordDim, normalizeToArray(dataDims).slice());\n            each(dataDims, function (resultDimIdx, coordDimIndex) {\n                // The input resultDimIdx can be dim name or index.\n                isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n                if (resultDimIdx != null && resultDimIdx < dimCount) {\n                    dataDims[coordDimIndex] = resultDimIdx;\n                    applyDim(result[resultDimIdx], coordDim, coordDimIndex);\n                }\n            });\n        });\n\n        // Apply templetes and default order from `sysDims`.\n        var availDimIdx = 0;\n        each(sysDims, function (sysDimItem, sysDimIndex) {\n            var coordDim;\n            var sysDimItem;\n            var sysDimItemDimsDef;\n            var sysDimItemOtherDims;\n            if (isString(sysDimItem)) {\n                coordDim = sysDimItem;\n                sysDimItem = {};\n            }\n            else {\n                coordDim = sysDimItem.name;\n                sysDimItem = zrUtil.clone(sysDimItem);\n                // `coordDimIndex` should not be set directly.\n                sysDimItemDimsDef = sysDimItem.dimsDef;\n                sysDimItemOtherDims = sysDimItem.otherDims;\n                sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex\n                    = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n            }\n\n            var dataDims = normalizeToArray(encodeDef.get(coordDim));\n            // dimensions provides default dim sequences.\n            if (!dataDims.length) {\n                for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n                    while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n                        availDimIdx++;\n                    }\n                    availDimIdx < result.length && dataDims.push(availDimIdx++);\n                }\n            }\n            // Apply templates.\n            each(dataDims, function (resultDimIdx, coordDimIndex) {\n                var resultItem = result[resultDimIdx];\n                applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n                if (resultItem.name == null && sysDimItemDimsDef) {\n                    resultItem.name = resultItem.tooltipName = sysDimItemDimsDef[coordDimIndex];\n                }\n                sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n            });\n        });\n\n        // Make sure the first extra dim is 'value'.\n        var extra = opt.extraPrefix || 'value';\n\n        // Set dim `name` and other `coordDim` and other props.\n        for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n            var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n            var coordDim = resultItem.coordDim;\n\n            coordDim == null && (\n                resultItem.coordDim = genName(extra, coordDimNameMap, opt.extraFromZero),\n                resultItem.coordDimIndex = 0,\n                resultItem.isExtraCoord = true\n            );\n\n            resultItem.name == null && (resultItem.name = genName(\n                resultItem.coordDim,\n                dataDimNameMap\n            ));\n\n            resultItem.type == null && guessOrdinal(data, resultDimIdx)\n                && (resultItem.type = 'ordinal');\n        }\n\n        return result;\n\n        function applyDim(resultItem, coordDim, coordDimIndex) {\n            if (OTHER_DIMS[coordDim]) {\n                resultItem.otherDims[coordDim] = coordDimIndex;\n            }\n            else {\n                resultItem.coordDim = coordDim;\n                resultItem.coordDimIndex = coordDimIndex;\n                coordDimNameMap.set(coordDim, true);\n            }\n        }\n\n        function genName(name, map, fromZero) {\n            if (fromZero || map.get(name) != null) {\n                var i = 0;\n                while (map.get(name + i) != null) {\n                    i++;\n                }\n                name += i;\n            }\n            map.set(name, true);\n            return name;\n        }\n    }\n\n    // The rule should not be complex, otherwise user might not\n    // be able to known where the data is wrong.\n    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n        for (var i = 0, len = data.length; i < len; i++) {\n            var value = retrieveValue(data[i]);\n\n            if (!zrUtil.isArray(value)) {\n                return false;\n            }\n\n            var value = value[dimIndex];\n            // Consider usage convenience, '1', '2' will be treated as \"number\".\n            // `isFinit('')` get `true`.\n            if (value != null && isFinite(value) && value !== '') {\n                return false;\n            }\n            else if (isString(value) && value !== '-') {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    function retrieveValue(o) {\n        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\n    }\n\n    module.exports = completeDimensions;\n\n\n\n/***/ }),\n\n/***/ 632:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n\n    var clazzUtil = __webpack_require__(616);\n\n    /**\n     * @param {Object} [setting]\n     */\n    function Scale(setting) {\n        this._setting = setting || {};\n\n        /**\n         * Extent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._extent = [Infinity, -Infinity];\n\n        /**\n         * Step is calculated in adjustExtent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._interval = 0;\n\n        this.init && this.init.apply(this, arguments);\n    }\n\n    var scaleProto = Scale.prototype;\n\n    /**\n     * Parse input val to valid inner number.\n     * @param {*} val\n     * @return {number}\n     */\n    scaleProto.parse = function (val) {\n        // Notice: This would be a trap here, If the implementation\n        // of this method depends on extent, and this method is used\n        // before extent set (like in dataZoom), it would be wrong.\n        // Nevertheless, parse does not depend on extent generally.\n        return val;\n    };\n\n    scaleProto.getSetting = function (name) {\n        return this._setting[name];\n    };\n\n    scaleProto.contain = function (val) {\n        var extent = this._extent;\n        return val >= extent[0] && val <= extent[1];\n    };\n\n    /**\n     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.normalize = function (val) {\n        var extent = this._extent;\n        if (extent[1] === extent[0]) {\n            return 0.5;\n        }\n        return (val - extent[0]) / (extent[1] - extent[0]);\n    };\n\n    /**\n     * Scale normalized value\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.scale = function (val) {\n        var extent = this._extent;\n        return val * (extent[1] - extent[0]) + extent[0];\n    };\n\n    /**\n     * Set extent from data\n     * @param {Array.<number>} other\n     */\n    scaleProto.unionExtent = function (other) {\n        var extent = this._extent;\n        other[0] < extent[0] && (extent[0] = other[0]);\n        other[1] > extent[1] && (extent[1] = other[1]);\n        // not setExtent because in log axis it may transformed to power\n        // this.setExtent(extent[0], extent[1]);\n    };\n\n    /**\n     * Set extent from data\n     * @param {module:echarts/data/List} data\n     * @param {string} dim\n     */\n    scaleProto.unionExtentFromData = function (data, dim) {\n        this.unionExtent(data.getDataExtent(dim, true));\n    };\n\n    /**\n     * Get extent\n     * @return {Array.<number>}\n     */\n    scaleProto.getExtent = function () {\n        return this._extent.slice();\n    };\n\n    /**\n     * Set extent\n     * @param {number} start\n     * @param {number} end\n     */\n    scaleProto.setExtent = function (start, end) {\n        var thisExtent = this._extent;\n        if (!isNaN(start)) {\n            thisExtent[0] = start;\n        }\n        if (!isNaN(end)) {\n            thisExtent[1] = end;\n        }\n    };\n\n    /**\n     * @return {Array.<string>}\n     */\n    scaleProto.getTicksLabels = function () {\n        var labels = [];\n        var ticks = this.getTicks();\n        for (var i = 0; i < ticks.length; i++) {\n            labels.push(this.getLabel(ticks[i]));\n        }\n        return labels;\n    };\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.isBlank = function () {\n        return this._isBlank;\n    },\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.setBlank = function (isBlank) {\n        this._isBlank = isBlank;\n    };\n\n\n    clazzUtil.enableClassExtend(Scale);\n    clazzUtil.enableClassManagement(Scale, {\n        registerWhenExtend: true\n    });\n\n    module.exports = Scale;\n\n\n/***/ }),\n\n/***/ 633:\n/***/ (function(module, exports) {\n\n\n    var dpr = 1;\n    // If in browser environment\n    if (typeof window !== 'undefined') {\n        dpr = Math.max(window.devicePixelRatio || 1, 1);\n    }\n    /**\n     * config默认配置项\n     * @exports zrender/config\n     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n     */\n    var config = {\n        /**\n         * debug日志选项：catchBrushException为true下有效\n         * 0 : 不生成debug数据，发布用\n         * 1 : 异常抛出，调试用\n         * 2 : 控制台输出，调试用\n         */\n        debugMode: 0,\n\n        // retina 屏幕优化\n        devicePixelRatio: dpr\n    };\n    module.exports = config;\n\n\n\n\n/***/ }),\n\n/***/ 634:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/lib/container/Group');\n *     var Circle = require('zrender/lib/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n\n    var zrUtil = __webpack_require__(606);\n    var Element = __webpack_require__(667);\n    var BoundingRect = __webpack_require__(617);\n\n    /**\n     * @alias module:zrender/graphic/Group\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @extends module:zrender/mixin/Eventful\n     */\n    var Group = function (opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        for (var key in opts) {\n            if (opts.hasOwnProperty(key)) {\n                this[key] = opts[key];\n            }\n        }\n\n        this._children = [];\n\n        this.__storage = null;\n\n        this.__dirty = true;\n    };\n\n    Group.prototype = {\n\n        constructor: Group,\n\n        isGroup: true,\n\n        /**\n         * @type {string}\n         */\n        type: 'group',\n\n        /**\n         * 所有子孙元素是否响应鼠标事件\n         * @name module:/zrender/container/Group#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * @return {Array.<module:zrender/Element>}\n         */\n        children: function () {\n            return this._children.slice();\n        },\n\n        /**\n         * 获取指定 index 的儿子节点\n         * @param  {number} idx\n         * @return {module:zrender/Element}\n         */\n        childAt: function (idx) {\n            return this._children[idx];\n        },\n\n        /**\n         * 获取指定名字的儿子节点\n         * @param  {string} name\n         * @return {module:zrender/Element}\n         */\n        childOfName: function (name) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i].name === name) {\n                    return children[i];\n                }\n             }\n        },\n\n        /**\n         * @return {number}\n         */\n        childCount: function () {\n            return this._children.length;\n        },\n\n        /**\n         * 添加子节点到最后\n         * @param {module:zrender/Element} child\n         */\n        add: function (child) {\n            if (child && child !== this && child.parent !== this) {\n\n                this._children.push(child);\n\n                this._doAdd(child);\n            }\n\n            return this;\n        },\n\n        /**\n         * 添加子节点在 nextSibling 之前\n         * @param {module:zrender/Element} child\n         * @param {module:zrender/Element} nextSibling\n         */\n        addBefore: function (child, nextSibling) {\n            if (child && child !== this && child.parent !== this\n                && nextSibling && nextSibling.parent === this) {\n\n                var children = this._children;\n                var idx = children.indexOf(nextSibling);\n\n                if (idx >= 0) {\n                    children.splice(idx, 0, child);\n                    this._doAdd(child);\n                }\n            }\n\n            return this;\n        },\n\n        _doAdd: function (child) {\n            if (child.parent) {\n                child.parent.remove(child);\n            }\n\n            child.parent = this;\n\n            var storage = this.__storage;\n            var zr = this.__zr;\n            if (storage && storage !== child.__storage) {\n\n                storage.addToStorage(child);\n\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n        },\n\n        /**\n         * 移除子节点\n         * @param {module:zrender/Element} child\n         */\n        remove: function (child) {\n            var zr = this.__zr;\n            var storage = this.__storage;\n            var children = this._children;\n\n            var idx = zrUtil.indexOf(children, child);\n            if (idx < 0) {\n                return this;\n            }\n            children.splice(idx, 1);\n\n            child.parent = null;\n\n            if (storage) {\n\n                storage.delFromStorage(child);\n\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n\n            return this;\n        },\n\n        /**\n         * 移除所有子节点\n         */\n        removeAll: function () {\n            var children = this._children;\n            var storage = this.__storage;\n            var child;\n            var i;\n            for (i = 0; i < children.length; i++) {\n                child = children[i];\n                if (storage) {\n                    storage.delFromStorage(child);\n                    if (child instanceof Group) {\n                        child.delChildrenFromStorage(storage);\n                    }\n                }\n                child.parent = null;\n            }\n            children.length = 0;\n\n            return this;\n        },\n\n        /**\n         * 遍历所有子节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        eachChild: function (cb, context) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                cb.call(context, child, i);\n            }\n            return this;\n        },\n\n        /**\n         * 深度优先遍历所有子孙节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                cb.call(context, child);\n\n                if (child.type === 'group') {\n                    child.traverse(cb, context);\n                }\n            }\n            return this;\n        },\n\n        addChildrenToStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.addToStorage(child);\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n        },\n\n        delChildrenFromStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.delFromStorage(child);\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n        },\n\n        dirty: function () {\n            this.__dirty = true;\n            this.__zr && this.__zr.refresh();\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function (includeChildren) {\n            // TODO Caching\n            var rect = null;\n            var tmpRect = new BoundingRect(0, 0, 0, 0);\n            var children = includeChildren || this._children;\n            var tmpMat = [];\n\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                if (child.ignore || child.invisible) {\n                    continue;\n                }\n\n                var childRect = child.getBoundingRect();\n                var transform = child.getLocalTransform(tmpMat);\n                // TODO\n                // The boundingRect cacluated by transforming original\n                // rect may be bigger than the actual bundingRect when rotation\n                // is used. (Consider a circle rotated aginst its center, where\n                // the actual boundingRect should be the same as that not be\n                // rotated.) But we can not find better approach to calculate\n                // actual boundingRect yet, considering performance.\n                if (transform) {\n                    tmpRect.copy(childRect);\n                    tmpRect.applyTransform(transform);\n                    rect = rect || tmpRect.clone();\n                    rect.union(tmpRect);\n                }\n                else {\n                    rect = rect || childRect.clone();\n                    rect.union(childRect);\n                }\n            }\n            return rect || tmpRect;\n        }\n    };\n\n    zrUtil.inherits(Group, Element);\n\n    module.exports = Group;\n\n\n/***/ }),\n\n/***/ 635:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n\n // TODO getTotalLength, getPointAtLength\n\n\n    var curve = __webpack_require__(622);\n    var vec2 = __webpack_require__(611);\n    var bbox = __webpack_require__(765);\n    var BoundingRect = __webpack_require__(617);\n    var dpr = __webpack_require__(633).devicePixelRatio;\n\n    var CMD = {\n        M: 1,\n        L: 2,\n        C: 3,\n        Q: 4,\n        A: 5,\n        Z: 6,\n        // Rect\n        R: 7\n    };\n\n    // var CMD_MEM_SIZE = {\n    //     M: 3,\n    //     L: 3,\n    //     C: 7,\n    //     Q: 5,\n    //     A: 9,\n    //     R: 5,\n    //     Z: 1\n    // };\n\n    var min = [];\n    var max = [];\n    var min2 = [];\n    var max2 = [];\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var mathSqrt = Math.sqrt;\n    var mathAbs = Math.abs;\n\n    var hasTypedArray = typeof Float32Array != 'undefined';\n\n    /**\n     * @alias module:zrender/core/PathProxy\n     * @constructor\n     */\n    var PathProxy = function (notSaveData) {\n\n        this._saveData = !(notSaveData || false);\n\n        if (this._saveData) {\n            /**\n             * Path data. Stored as flat array\n             * @type {Array.<Object>}\n             */\n            this.data = [];\n        }\n\n        this._ctx = null;\n    };\n\n    /**\n     * 快速计算Path包围盒（并不是最小包围盒）\n     * @return {Object}\n     */\n    PathProxy.prototype = {\n\n        constructor: PathProxy,\n\n        _xi: 0,\n        _yi: 0,\n\n        _x0: 0,\n        _y0: 0,\n        // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n        _ux: 0,\n        _uy: 0,\n\n        _len: 0,\n\n        _lineDash: null,\n\n        _dashOffset: 0,\n\n        _dashIdx: 0,\n\n        _dashSum: 0,\n\n        /**\n         * @readOnly\n         */\n        setScale: function (sx, sy) {\n            this._ux = mathAbs(1 / dpr / sx) || 0;\n            this._uy = mathAbs(1 / dpr / sy) || 0;\n        },\n\n        getContext: function () {\n            return this._ctx;\n        },\n\n        /**\n         * @param  {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        beginPath: function (ctx) {\n\n            this._ctx = ctx;\n\n            ctx && ctx.beginPath();\n\n            ctx && (this.dpr = ctx.dpr);\n\n            // Reset\n            if (this._saveData) {\n                this._len = 0;\n            }\n\n            if (this._lineDash) {\n                this._lineDash = null;\n\n                this._dashOffset = 0;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        moveTo: function (x, y) {\n            this.addData(CMD.M, x, y);\n            this._ctx && this._ctx.moveTo(x, y);\n\n            // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n            // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n            // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n            // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n            this._x0 = x;\n            this._y0 = y;\n\n            this._xi = x;\n            this._yi = y;\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        lineTo: function (x, y) {\n            var exceedUnit = mathAbs(x - this._xi) > this._ux\n                || mathAbs(y - this._yi) > this._uy\n                // Force draw the first segment\n                || this._len < 5;\n\n            this.addData(CMD.L, x, y);\n\n            if (this._ctx && exceedUnit) {\n                this._needsDash() ? this._dashedLineTo(x, y)\n                    : this._ctx.lineTo(x, y);\n            }\n            if (exceedUnit) {\n                this._xi = x;\n                this._yi = y;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @param  {number} x3\n         * @param  {number} y3\n         * @return {module:zrender/core/PathProxy}\n         */\n        bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n            this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)\n                    : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n            }\n            this._xi = x3;\n            this._yi = y3;\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @return {module:zrender/core/PathProxy}\n         */\n        quadraticCurveTo: function (x1, y1, x2, y2) {\n            this.addData(CMD.Q, x1, y1, x2, y2);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2)\n                    : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n            }\n            this._xi = x2;\n            this._yi = y2;\n            return this;\n        },\n\n        /**\n         * @param  {number} cx\n         * @param  {number} cy\n         * @param  {number} r\n         * @param  {number} startAngle\n         * @param  {number} endAngle\n         * @param  {boolean} anticlockwise\n         * @return {module:zrender/core/PathProxy}\n         */\n        arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n            this.addData(\n                CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1\n            );\n            this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n\n            this._xi = mathCos(endAngle) * r + cx;\n            this._yi = mathSin(endAngle) * r + cx;\n            return this;\n        },\n\n        // TODO\n        arcTo: function (x1, y1, x2, y2, radius) {\n            if (this._ctx) {\n                this._ctx.arcTo(x1, y1, x2, y2, radius);\n            }\n            return this;\n        },\n\n        // TODO\n        rect: function (x, y, w, h) {\n            this._ctx && this._ctx.rect(x, y, w, h);\n            this.addData(CMD.R, x, y, w, h);\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/PathProxy}\n         */\n        closePath: function () {\n            this.addData(CMD.Z);\n\n            var ctx = this._ctx;\n            var x0 = this._x0;\n            var y0 = this._y0;\n            if (ctx) {\n                this._needsDash() && this._dashedLineTo(x0, y0);\n                ctx.closePath();\n            }\n\n            this._xi = x0;\n            this._yi = y0;\n            return this;\n        },\n\n        /**\n         * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n         * stroke 同样\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        fill: function (ctx) {\n            ctx && ctx.fill();\n            this.toStatic();\n        },\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        stroke: function (ctx) {\n            ctx && ctx.stroke();\n            this.toStatic();\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDash: function (lineDash) {\n            if (lineDash instanceof Array) {\n                this._lineDash = lineDash;\n\n                this._dashIdx = 0;\n\n                var lineDashSum = 0;\n                for (var i = 0; i < lineDash.length; i++) {\n                    lineDashSum += lineDash[i];\n                }\n                this._dashSum = lineDashSum;\n            }\n            return this;\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDashOffset: function (offset) {\n            this._dashOffset = offset;\n            return this;\n        },\n\n        /**\n         *\n         * @return {boolean}\n         */\n        len: function () {\n            return this._len;\n        },\n\n        /**\n         * 直接设置 Path 数据\n         */\n        setData: function (data) {\n\n            var len = data.length;\n\n            if (! (this.data && this.data.length == len) && hasTypedArray) {\n                this.data = new Float32Array(len);\n            }\n\n            for (var i = 0; i < len; i++) {\n                this.data[i] = data[i];\n            }\n\n            this._len = len;\n        },\n\n        /**\n         * 添加子路径\n         * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n         */\n        appendPath: function (path) {\n            if (!(path instanceof Array)) {\n                path = [path];\n            }\n            var len = path.length;\n            var appendSize = 0;\n            var offset = this._len;\n            for (var i = 0; i < len; i++) {\n                appendSize += path[i].len();\n            }\n            if (hasTypedArray && (this.data instanceof Float32Array)) {\n                this.data = new Float32Array(offset + appendSize);\n            }\n            for (var i = 0; i < len; i++) {\n                var appendPathData = path[i].data;\n                for (var k = 0; k < appendPathData.length; k++) {\n                    this.data[offset++] = appendPathData[k];\n                }\n            }\n            this._len = offset;\n        },\n\n        /**\n         * 填充 Path 数据。\n         * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n         */\n        addData: function (cmd) {\n            if (!this._saveData) {\n                return;\n            }\n\n            var data = this.data;\n            if (this._len + arguments.length > data.length) {\n                // 因为之前的数组已经转换成静态的 Float32Array\n                // 所以不够用时需要扩展一个新的动态数组\n                this._expandData();\n                data = this.data;\n            }\n            for (var i = 0; i < arguments.length; i++) {\n                data[this._len++] = arguments[i];\n            }\n\n            this._prevCmd = cmd;\n        },\n\n        _expandData: function () {\n            // Only if data is Float32Array\n            if (!(this.data instanceof Array)) {\n                var newData = [];\n                for (var i = 0; i < this._len; i++) {\n                    newData[i] = this.data[i];\n                }\n                this.data = newData;\n            }\n        },\n\n        /**\n         * If needs js implemented dashed line\n         * @return {boolean}\n         * @private\n         */\n        _needsDash: function () {\n            return this._lineDash;\n        },\n\n        _dashedLineTo: function (x1, y1) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var dx = x1 - x0;\n            var dy = y1 - y0;\n            var dist = mathSqrt(dx * dx + dy * dy);\n            var x = x0;\n            var y = y0;\n            var dash;\n            var nDash = lineDash.length;\n            var idx;\n            dx /= dist;\n            dy /= dist;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            x -= offset * dx;\n            y -= offset * dy;\n\n            while ((dx > 0 && x <= x1) || (dx < 0 && x >= x1)\n            || (dx == 0 && ((dy > 0 && y <= y1) || (dy < 0 && y >= y1)))) {\n                idx = this._dashIdx;\n                dash = lineDash[idx];\n                x += dx * dash;\n                y += dy * dash;\n                this._dashIdx = (idx + 1) % nDash;\n                // Skip positive offset\n                if ((dx > 0 && x < x0) || (dx < 0 && x > x0) || (dy > 0 && y < y0) || (dy < 0 && y > y0)) {\n                    continue;\n                }\n                ctx[idx % 2 ? 'moveTo' : 'lineTo'](\n                    dx >= 0 ? mathMin(x, x1) : mathMax(x, x1),\n                    dy >= 0 ? mathMin(y, y1) : mathMax(y, y1)\n                );\n            }\n            // Offset for next lineTo\n            dx = x - x1;\n            dy = y - y1;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        // Not accurate dashed line to\n        _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var t;\n            var dx;\n            var dy;\n            var cubicAt = curve.cubicAt;\n            var bezierLen = 0;\n            var idx = this._dashIdx;\n            var nDash = lineDash.length;\n\n            var x;\n            var y;\n\n            var tmpLen = 0;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            // Bezier approx length\n            for (t = 0; t < 1; t += 0.1) {\n                dx = cubicAt(x0, x1, x2, x3, t + 0.1)\n                    - cubicAt(x0, x1, x2, x3, t);\n                dy = cubicAt(y0, y1, y2, y3, t + 0.1)\n                    - cubicAt(y0, y1, y2, y3, t);\n                bezierLen += mathSqrt(dx * dx + dy * dy);\n            }\n\n            // Find idx after add offset\n            for (; idx < nDash; idx++) {\n                tmpLen += lineDash[idx];\n                if (tmpLen > offset) {\n                    break;\n                }\n            }\n            t = (tmpLen - offset) / bezierLen;\n\n            while (t <= 1) {\n\n                x = cubicAt(x0, x1, x2, x3, t);\n                y = cubicAt(y0, y1, y2, y3, t);\n\n                // Use line to approximate dashed bezier\n                // Bad result if dash is long\n                idx % 2 ? ctx.moveTo(x, y)\n                    : ctx.lineTo(x, y);\n\n                t += lineDash[idx] / bezierLen;\n\n                idx = (idx + 1) % nDash;\n            }\n\n            // Finish the last segment and calculate the new offset\n            (idx % 2 !== 0) && ctx.lineTo(x3, y3);\n            dx = x3 - x;\n            dy = y3 - y;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        _dashedQuadraticTo: function (x1, y1, x2, y2) {\n            // Convert quadratic to cubic using degree elevation\n            var x3 = x2;\n            var y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (this._xi + 2 * x1) / 3;\n            y1 = (this._yi + 2 * y1) / 3;\n\n            this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n        },\n\n        /**\n         * 转成静态的 Float32Array 减少堆内存占用\n         * Convert dynamic array to static Float32Array\n         */\n        toStatic: function () {\n            var data = this.data;\n            if (data instanceof Array) {\n                data.length = this._len;\n                if (hasTypedArray) {\n                    this.data = new Float32Array(data);\n                }\n            }\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function () {\n            min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n            max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n\n            var data = this.data;\n            var xi = 0;\n            var yi = 0;\n            var x0 = 0;\n            var y0 = 0;\n\n            for (var i = 0; i < data.length;) {\n                var cmd = data[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = data[i];\n                    yi = data[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n\n                switch (cmd) {\n                    case CMD.M:\n                        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                        // 在 closePath 的时候使用\n                        x0 = data[i++];\n                        y0 = data[i++];\n                        xi = x0;\n                        yi = y0;\n                        min2[0] = x0;\n                        min2[1] = y0;\n                        max2[0] = x0;\n                        max2[1] = y0;\n                        break;\n                    case CMD.L:\n                        bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.C:\n                        bbox.fromCubic(\n                            xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.Q:\n                        bbox.fromQuadratic(\n                            xi, yi, data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.A:\n                        // TODO Arc 判断的开销比较大\n                        var cx = data[i++];\n                        var cy = data[i++];\n                        var rx = data[i++];\n                        var ry = data[i++];\n                        var startAngle = data[i++];\n                        var endAngle = data[i++] + startAngle;\n                        // TODO Arc 旋转\n                        var psi = data[i++];\n                        var anticlockwise = 1 - data[i++];\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(startAngle) * rx + cx;\n                            y0 = mathSin(startAngle) * ry + cy;\n                        }\n\n                        bbox.fromArc(\n                            cx, cy, rx, ry, startAngle, endAngle,\n                            anticlockwise, min2, max2\n                        );\n\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = data[i++];\n                        y0 = yi = data[i++];\n                        var width = data[i++];\n                        var height = data[i++];\n                        // Use fromLine\n                        bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n                        break;\n                    case CMD.Z:\n                        xi = x0;\n                        yi = y0;\n                        break;\n                }\n\n                // Union\n                vec2.min(min, min, min2);\n                vec2.max(max, max, max2);\n            }\n\n            // No data\n            if (i === 0) {\n                min[0] = min[1] = max[0] = max[1] = 0;\n            }\n\n            return new BoundingRect(\n                min[0], min[1], max[0] - min[0], max[1] - min[1]\n            );\n        },\n\n        /**\n         * Rebuild path from current data\n         * Rebuild path will not consider javascript implemented line dash.\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        rebuildPath: function (ctx) {\n            var d = this.data;\n            var x0, y0;\n            var xi, yi;\n            var x, y;\n            var ux = this._ux;\n            var uy = this._uy;\n            var len = this._len;\n            for (var i = 0; i < len;) {\n                var cmd = d[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = d[i];\n                    yi = d[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n                switch (cmd) {\n                    case CMD.M:\n                        x0 = xi = d[i++];\n                        y0 = yi = d[i++];\n                        ctx.moveTo(xi, yi);\n                        break;\n                    case CMD.L:\n                        x = d[i++];\n                        y = d[i++];\n                        // Not draw too small seg between\n                        if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n                            ctx.lineTo(x, y);\n                            xi = x;\n                            yi = y;\n                        }\n                        break;\n                    case CMD.C:\n                        ctx.bezierCurveTo(\n                            d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]\n                        );\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.Q:\n                        ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.A:\n                        var cx = d[i++];\n                        var cy = d[i++];\n                        var rx = d[i++];\n                        var ry = d[i++];\n                        var theta = d[i++];\n                        var dTheta = d[i++];\n                        var psi = d[i++];\n                        var fs = d[i++];\n                        var r = (rx > ry) ? rx : ry;\n                        var scaleX = (rx > ry) ? 1 : rx / ry;\n                        var scaleY = (rx > ry) ? ry / rx : 1;\n                        var isEllipse = Math.abs(rx - ry) > 1e-3;\n                        var endAngle = theta + dTheta;\n                        if (isEllipse) {\n                            ctx.translate(cx, cy);\n                            ctx.rotate(psi);\n                            ctx.scale(scaleX, scaleY);\n                            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n                            ctx.scale(1 / scaleX, 1 / scaleY);\n                            ctx.rotate(-psi);\n                            ctx.translate(-cx, -cy);\n                        }\n                        else {\n                            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n                        }\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(theta) * rx + cx;\n                            y0 = mathSin(theta) * ry + cy;\n                        }\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = d[i];\n                        y0 = yi = d[i + 1];\n                        ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n                        break;\n                    case CMD.Z:\n                        ctx.closePath();\n                        xi = x0;\n                        yi = y0;\n                }\n            }\n        }\n    };\n\n    PathProxy.CMD = CMD;\n\n    module.exports = PathProxy;\n\n\n/***/ }),\n\n/***/ 636:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(606);\n\n    var coordinateSystemCreators = {};\n\n    function CoordinateSystemManager() {\n\n        this._coordinateSystems = [];\n    }\n\n    CoordinateSystemManager.prototype = {\n\n        constructor: CoordinateSystemManager,\n\n        create: function (ecModel, api) {\n            var coordinateSystems = [];\n            zrUtil.each(coordinateSystemCreators, function (creater, type) {\n                var list = creater.create(ecModel, api);\n                coordinateSystems = coordinateSystems.concat(list || []);\n            });\n\n            this._coordinateSystems = coordinateSystems;\n        },\n\n        update: function (ecModel, api) {\n            zrUtil.each(this._coordinateSystems, function (coordSys) {\n                // FIXME MUST have\n                coordSys.update && coordSys.update(ecModel, api);\n            });\n        },\n\n        getCoordinateSystems: function () {\n            return this._coordinateSystems.slice();\n        }\n    };\n\n    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n        coordinateSystemCreators[type] = coordinateSystemCreator;\n    };\n\n    CoordinateSystemManager.get = function (type) {\n        return coordinateSystemCreators[type];\n    };\n\n    module.exports = CoordinateSystemManager;\n\n\n/***/ }),\n\n/***/ 637:\n/***/ (function(module, exports, __webpack_require__) {\n\n// TODO Parse shadow style\n// TODO Only shallow path support\n\n    var zrUtil = __webpack_require__(606);\n\n    module.exports = function (properties) {\n        // Normalize\n        for (var i = 0; i < properties.length; i++) {\n            if (!properties[i][1]) {\n               properties[i][1] = properties[i][0];\n            }\n        }\n        return function (excludes, includes) {\n            var style = {};\n            for (var i = 0; i < properties.length; i++) {\n                var propName = properties[i][1];\n                if ((excludes && zrUtil.indexOf(excludes, propName) >= 0)\n                    || (includes && zrUtil.indexOf(includes, propName) < 0)\n                ) {\n                    continue;\n                }\n                var val = this.getShallow(propName);\n                if (val != null) {\n                    style[properties[i][0]] = val;\n                }\n            }\n            return style;\n        };\n    };\n\n\n/***/ }),\n\n/***/ 638:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\n\n\n\n    var numberUtil = __webpack_require__(610);\n    var formatUtil = __webpack_require__(613);\n    var Scale = __webpack_require__(632);\n    var helper = __webpack_require__(665);\n\n    var roundNumber = numberUtil.round;\n\n    /**\n     * @alias module:echarts/coord/scale/Interval\n     * @constructor\n     */\n    var IntervalScale = Scale.extend({\n\n        type: 'interval',\n\n        _interval: 0,\n\n        _intervalPrecision: 2,\n\n        setExtent: function (start, end) {\n            var thisExtent = this._extent;\n            //start,end may be a Number like '25',so...\n            if (!isNaN(start)) {\n                thisExtent[0] = parseFloat(start);\n            }\n            if (!isNaN(end)) {\n                thisExtent[1] = parseFloat(end);\n            }\n        },\n\n        unionExtent: function (other) {\n            var extent = this._extent;\n            other[0] < extent[0] && (extent[0] = other[0]);\n            other[1] > extent[1] && (extent[1] = other[1]);\n\n            // unionExtent may called by it's sub classes\n            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n        },\n        /**\n         * Get interval\n         */\n        getInterval: function () {\n            return this._interval;\n        },\n\n        /**\n         * Set interval\n         */\n        setInterval: function (interval) {\n            this._interval = interval;\n            // Dropped auto calculated niceExtent and use user setted extent\n            // We assume user wan't to set both interval, min, max to get a better result\n            this._niceExtent = this._extent.slice();\n\n            this._intervalPrecision = helper.getIntervalPrecision(interval);\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            return helper.intervalScaleGetTicks(\n                this._interval, this._extent, this._niceExtent, this._intervalPrecision\n            );\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getTicksLabels: function () {\n            var labels = [];\n            var ticks = this.getTicks();\n            for (var i = 0; i < ticks.length; i++) {\n                labels.push(this.getLabel(ticks[i]));\n            }\n            return labels;\n        },\n\n        /**\n         * @param {number} data\n         * @param {Object} [opt]\n         * @param {number|string} [opt.precision] If 'auto', use nice presision.\n         * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n         * @return {string}\n         */\n        getLabel: function (data, opt) {\n            if (data == null) {\n                return '';\n            }\n\n            var precision = opt && opt.precision;\n\n            if (precision == null) {\n                precision = numberUtil.getPrecisionSafe(data) || 0;\n            }\n            else if (precision === 'auto') {\n                // Should be more precise then tick.\n                precision = this._intervalPrecision;\n            }\n\n            // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n            // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n            data = roundNumber(data, precision, true);\n\n            return formatUtil.addCommas(data);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         *\n         * @param {number} [splitNumber = 5] Desired number of ticks\n         * @param {number} [minInterval]\n         * @param {number} [maxInterval]\n         */\n        niceTicks: function (splitNumber, minInterval, maxInterval) {\n            splitNumber = splitNumber || 5;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (!isFinite(span)) {\n                return;\n            }\n            // User may set axis min 0 and data are all negative\n            // FIXME If it needs to reverse ?\n            if (span < 0) {\n                span = -span;\n                extent.reverse();\n            }\n\n            var result = helper.intervalScaleNiceTicks(\n                extent, splitNumber, minInterval, maxInterval\n            );\n\n            this._intervalPrecision = result.intervalPrecision;\n            this._interval = result.interval;\n            this._niceExtent = result.niceTickExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {Object} opt\n         * @param {number} [opt.splitNumber = 5] Given approx tick number\n         * @param {boolean} [opt.fixMin=false]\n         * @param {boolean} [opt.fixMax=false]\n         * @param {boolean} [opt.minInterval]\n         * @param {boolean} [opt.maxInterval]\n         */\n        niceExtent: function (opt) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                if (extent[0] !== 0) {\n                    // Expand extent\n                    var expandSize = extent[0];\n                    // In the fowllowing case\n                    //      Axis has been fixed max 100\n                    //      Plus data are all 100 and axis extent are [100, 100].\n                    // Extend to the both side will cause expanded max is larger than fixed max.\n                    // So only expand to the smaller side.\n                    if (!opt.fixMax) {\n                        extent[1] += expandSize / 2;\n                        extent[0] -= expandSize / 2;\n                    }\n                    else {\n                        extent[0] -= expandSize / 2;\n                    }\n                }\n                else {\n                    extent[1] = 1;\n                }\n            }\n            var span = extent[1] - extent[0];\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (!isFinite(span)) {\n                extent[0] = 0;\n                extent[1] = 1;\n            }\n\n            this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!opt.fixMin) {\n                extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n            }\n            if (!opt.fixMax) {\n                extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n            }\n        }\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    IntervalScale.create = function () {\n        return new IntervalScale();\n    };\n\n    module.exports = IntervalScale;\n\n\n\n/***/ }),\n\n/***/ 639:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Symbol factory\n\n\n    var graphic = __webpack_require__(608);\n    var BoundingRect = __webpack_require__(617);\n\n    /**\n     * Triangle shape\n     * @inner\n     */\n    var Triangle = graphic.extendShape({\n        type: 'triangle',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy + height);\n            path.lineTo(cx - width, cy + height);\n            path.closePath();\n        }\n    });\n    /**\n     * Diamond shape\n     * @inner\n     */\n    var Diamond = graphic.extendShape({\n        type: 'diamond',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy);\n            path.lineTo(cx, cy + height);\n            path.lineTo(cx - width, cy);\n            path.closePath();\n        }\n    });\n\n    /**\n     * Pin shape\n     * @inner\n     */\n    var Pin = graphic.extendShape({\n        type: 'pin',\n        shape: {\n            // x, y on the cusp\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (path, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var w = shape.width / 5 * 3;\n            // Height must be larger than width\n            var h = Math.max(w, shape.height);\n            var r = w / 2;\n\n            // Dist on y with tangent point and circle center\n            var dy = r * r / (h - r);\n            var cy = y - h + r + dy;\n            var angle = Math.asin(dy / r);\n            // Dist on x with tangent point and circle center\n            var dx = Math.cos(angle) * r;\n\n            var tanX = Math.sin(angle);\n            var tanY = Math.cos(angle);\n\n            path.arc(\n                x, cy, r,\n                Math.PI - angle,\n                Math.PI * 2 + angle\n            );\n\n            var cpLen = r * 0.6;\n            var cpLen2 = r * 0.7;\n            path.bezierCurveTo(\n                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\n                x, y - cpLen2,\n                x, y\n            );\n            path.bezierCurveTo(\n                x, y - cpLen2,\n                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\n                x - dx, cy + dy\n            );\n            path.closePath();\n        }\n    });\n\n    /**\n     * Arrow shape\n     * @inner\n     */\n    var Arrow = graphic.extendShape({\n\n        type: 'arrow',\n\n        shape: {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var height = shape.height;\n            var width = shape.width;\n            var x = shape.x;\n            var y = shape.y;\n            var dx = width / 3 * 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + dx, y + height);\n            ctx.lineTo(x, y + height / 4 * 3);\n            ctx.lineTo(x - dx, y + height);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n        }\n    });\n\n    /**\n     * Map of path contructors\n     * @type {Object.<string, module:zrender/graphic/Path>}\n     */\n    var symbolCtors = {\n        line: graphic.Line,\n\n        rect: graphic.Rect,\n\n        roundRect: graphic.Rect,\n\n        square: graphic.Rect,\n\n        circle: graphic.Circle,\n\n        diamond: Diamond,\n\n        pin: Pin,\n\n        arrow: Arrow,\n\n        triangle: Triangle\n    };\n\n    var symbolShapeMakers = {\n\n        line: function (x, y, w, h, shape) {\n            // FIXME\n            shape.x1 = x;\n            shape.y1 = y + h / 2;\n            shape.x2 = x + w;\n            shape.y2 = y + h / 2;\n        },\n\n        rect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        roundRect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n            shape.r = Math.min(w, h) / 4;\n        },\n\n        square: function (x, y, w, h, shape) {\n            var size = Math.min(w, h);\n            shape.x = x;\n            shape.y = y;\n            shape.width = size;\n            shape.height = size;\n        },\n\n        circle: function (x, y, w, h, shape) {\n            // Put circle in the center of square\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.r = Math.min(w, h) / 2;\n        },\n\n        diamond: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        pin: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        arrow: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        triangle: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        }\n    };\n\n    var symbolBuildProxies = {};\n    for (var name in symbolCtors) {\n        if (symbolCtors.hasOwnProperty(name)) {\n            symbolBuildProxies[name] = new symbolCtors[name]();\n        }\n    }\n\n    var Symbol = graphic.extendShape({\n\n        type: 'symbol',\n\n        shape: {\n            symbolType: '',\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        beforeBrush: function () {\n            var style = this.style;\n            var shape = this.shape;\n            // FIXME\n            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n                style.textPosition = ['50%', '40%'];\n                style.textAlign = 'center';\n                style.textVerticalAlign = 'middle';\n            }\n        },\n\n        buildPath: function (ctx, shape, inBundle) {\n            var symbolType = shape.symbolType;\n            var proxySymbol = symbolBuildProxies[symbolType];\n            if (shape.symbolType !== 'none') {\n                if (!proxySymbol) {\n                    // Default rect\n                    symbolType = 'rect';\n                    proxySymbol = symbolBuildProxies[symbolType];\n                }\n                symbolShapeMakers[symbolType](\n                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\n                );\n                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n            }\n        }\n    });\n\n    // Provide setColor helper method to avoid determine if set the fill or stroke outside\n    var symbolPathSetColor = function (color) {\n        if (this.type !== 'image') {\n            var symbolStyle = this.style;\n            var symbolShape = this.shape;\n            if (symbolShape && symbolShape.symbolType === 'line') {\n                symbolStyle.stroke = color;\n            }\n            else if (this.__isEmptyBrush) {\n                symbolStyle.stroke = color;\n                symbolStyle.fill = '#fff';\n            }\n            else {\n                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n                symbolStyle.fill && (symbolStyle.fill = color);\n                symbolStyle.stroke && (symbolStyle.stroke = color);\n            }\n            this.dirty(false);\n        }\n    };\n\n    var symbolUtil = {\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @param {string} symbolType\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: function (symbolType, x, y, w, h, color) {\n            // TODO Support image object, DynamicImage.\n\n            var isEmpty = symbolType.indexOf('empty') === 0;\n            if (isEmpty) {\n                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n            }\n            var symbolPath;\n\n            if (symbolType.indexOf('image://') === 0) {\n                symbolPath = new graphic.Image({\n                    style: {\n                        image: symbolType.slice(8),\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n            else if (symbolType.indexOf('path://') === 0) {\n                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\n            }\n            else {\n                symbolPath = new Symbol({\n                    shape: {\n                        symbolType: symbolType,\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n\n            symbolPath.__isEmptyBrush = isEmpty;\n\n            symbolPath.setColor = symbolPathSetColor;\n\n            symbolPath.setColor(color);\n\n            return symbolPath;\n        }\n    };\n\n    module.exports = symbolUtil;\n\n\n/***/ }),\n\n/***/ 640:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var formatUtil = __webpack_require__(613);\n    var classUtil = __webpack_require__(616);\n    var modelUtil = __webpack_require__(609);\n    var ComponentModel = __webpack_require__(618);\n    var colorPaletteMixin = __webpack_require__(664);\n    var env = __webpack_require__(615);\n    var layout = __webpack_require__(619);\n\n    var set = classUtil.set;\n    var get = classUtil.get;\n    var encodeHTML = formatUtil.encodeHTML;\n    var addCommas = formatUtil.addCommas;\n\n    var SeriesModel = ComponentModel.extend({\n\n        type: 'series.__base__',\n\n        /**\n         * @readOnly\n         */\n        seriesIndex: 0,\n\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\n        coordinateSystem: null,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * Data provided for legend\n         * @type {Function}\n         */\n        // PENDING\n        legendDataProvider: null,\n\n        /**\n         * Access path of color for visual\n         */\n        visualColorAccessPath: 'itemStyle.normal.color',\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            /**\n             * @type {number}\n             * @readOnly\n             */\n            this.seriesIndex = this.componentIndex;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            var data = this.getInitialData(option, ecModel);\n            if (__DEV__) {\n                zrUtil.assert(data, 'getInitialData returned invalid data.');\n            }\n            /**\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n             * @private\n             */\n            set(this, 'dataBeforeProcessed', data);\n\n            // If we reverse the order (make data firstly, and then make\n            // dataBeforeProcessed by cloneShallow), cloneShallow will\n            // cause data.graph.data !== data when using\n            // module:echarts/data/Graph or module:echarts/data/Tree.\n            // See module:echarts/data/helper/linkList\n            this.restoreData();\n        },\n\n        /**\n         * Util for merge default and theme to option\n         * @param  {Object} option\n         * @param  {module:echarts/model/Global} ecModel\n         */\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            zrUtil.merge(\n                option,\n                ecModel.getTheme().get(this.subType)\n            );\n            zrUtil.merge(option, this.getDefaultOption());\n\n            // Default label emphasis `show`\n            modelUtil.defaultEmphasis(option.label, ['show']);\n\n            this.fillDataTextStyle(option.data);\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (newSeriesOption, ecModel) {\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n            this.fillDataTextStyle(newSeriesOption.data);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n            }\n\n            var data = this.getInitialData(newSeriesOption, ecModel);\n            // TODO Merge data?\n            if (data) {\n                set(this, 'data', data);\n                set(this, 'dataBeforeProcessed', data.cloneShallow());\n            }\n        },\n\n        fillDataTextStyle: function (data) {\n            // Default data label emphasis `show`\n            // FIXME Tree structure data ?\n            // FIXME Performance ?\n            if (data) {\n                var props = ['show'];\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] && data[i].label) {\n                        modelUtil.defaultEmphasis(data[i].label, props);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Init a data structure from data related option in series\n         * Must be overwritten\n         */\n        getInitialData: function () {},\n\n        /**\n         * @param {string} [dataType]\n         * @return {module:echarts/data/List}\n         */\n        getData: function (dataType) {\n            var data = get(this, 'data');\n            return dataType == null ? data : data.getLinkedData(dataType);\n        },\n\n        /**\n         * @param {module:echarts/data/List} data\n         */\n        setData: function (data) {\n            set(this, 'data', data);\n        },\n\n        /**\n         * Get data before processed\n         * @return {module:echarts/data/List}\n         */\n        getRawData: function () {\n            return get(this, 'dataBeforeProcessed');\n        },\n\n        /**\n         * Coord dimension to data dimension.\n         *\n         * By default the result is the same as dimensions of series data.\n         * But in some series data dimensions are different from coord dimensions (i.e.\n         * candlestick and boxplot). Override this method to handle those cases.\n         *\n         * Coord dimension to data dimension can be one-to-many\n         *\n         * @param {string} coordDim\n         * @return {Array.<string>} dimensions on the axis.\n         */\n        coordDimToDataDim: function (coordDim) {\n            return modelUtil.coordDimToDataDim(this.getData(), coordDim);\n        },\n\n        /**\n         * Convert data dimension to coord dimension.\n         *\n         * @param {string|number} dataDim\n         * @return {string}\n         */\n        dataDimToCoordDim: function (dataDim) {\n            return modelUtil.dataDimToCoordDim(this.getData(), dataDim);\n        },\n\n        /**\n         * Get base axis if has coordinate system and has axis.\n         * By default use coordSys.getBaseAxis();\n         * Can be overrided for some chart.\n         * @return {type} description\n         */\n        getBaseAxis: function () {\n            var coordSys = this.coordinateSystem;\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n        },\n\n        // FIXME\n        /**\n         * Default tooltip formatter\n         *\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         */\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n            function formatArrayValue(value) {\n                var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n                    var dimItem = data.getDimensionInfo(idx);\n                    return vertially |= dimItem && dimItem.tooltip !== false && dimItem.tooltipName != null;\n                }, 0);\n\n                var result = [];\n                var tooltipDims = modelUtil.otherDimToDataDim(data, 'tooltip');\n\n                tooltipDims.length\n                    ? zrUtil.each(tooltipDims, function (dimIdx) {\n                        setEachItem(data.get(dimIdx, dataIndex), dimIdx);\n                    })\n                    // By default, all dims is used on tooltip.\n                    : zrUtil.each(value, setEachItem);\n\n                function setEachItem(val, dimIdx) {\n                    var dimInfo = data.getDimensionInfo(dimIdx);\n                    // If `dimInfo.tooltip` is not set, show tooltip.\n                    if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n                        return;\n                    }\n                    var dimType = dimInfo.type;\n                    var valStr = (vertially ? '- ' + (dimInfo.tooltipName || dimInfo.name) + ': ' : '')\n                        + (dimType === 'ordinal'\n                            ? val + ''\n                            : dimType === 'time'\n                            ? (multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val))\n                            : addCommas(val)\n                        );\n                    valStr && result.push(encodeHTML(valStr));\n                }\n\n                return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n            }\n\n            var data = get(this, 'data');\n\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = zrUtil.isArray(value)\n                ? formatArrayValue(value) : encodeHTML(addCommas(value));\n            var name = data.getName(dataIndex);\n\n            var color = data.getItemVisual(dataIndex, 'color');\n            if (zrUtil.isObject(color) && color.colorStops) {\n                color = (color.colorStops[0] || {}).color;\n            }\n            color = color || 'transparent';\n\n            var colorEl = formatUtil.getTooltipMarker(color);\n\n            var seriesName = this.name;\n            // FIXME\n            if (seriesName === '\\0-') {\n                // Not show '-'\n                seriesName = '';\n            }\n            seriesName = seriesName\n                ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ')\n                : '';\n            return !multipleSeries\n                ? seriesName + colorEl\n                    + (name\n                        ? encodeHTML(name) + ': ' + formattedValue\n                        : formattedValue\n                    )\n                : colorEl + seriesName + formattedValue;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var animationEnabled = this.getShallow('animation');\n            if (animationEnabled) {\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\n                    animationEnabled = false;\n                }\n            }\n            return animationEnabled;\n        },\n\n        restoreData: function () {\n            set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n        },\n\n        getColorFromPalette: function (name, scope) {\n            var ecModel = this.ecModel;\n            // PENDING\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n            if (!color) {\n                color = ecModel.getColorFromPalette(name, scope);\n            }\n            return color;\n        },\n\n        /**\n         * Get data indices for show tooltip content. See tooltip.\n         * @abstract\n         * @param {Array.<string>|string} dim\n         * @param {Array.<number>} value\n         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n         * @return {Object} {dataIndices, nestestValue}.\n         */\n        getAxisTooltipData: null,\n\n        /**\n         * See tooltip.\n         * @abstract\n         * @param {number} dataIndex\n         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n         */\n        getTooltipPosition: null\n    });\n\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\n    module.exports = SeriesModel;\n\n\n/***/ }),\n\n/***/ 641:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Group = __webpack_require__(634);\n    var componentUtil = __webpack_require__(642);\n    var clazzUtil = __webpack_require__(616);\n    var modelUtil = __webpack_require__(609);\n    var zrUtil = __webpack_require__(606);\n\n    function Chart() {\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewChart');\n    }\n\n    Chart.prototype = {\n\n        type: 'chart',\n\n        /**\n         * Init the chart\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        init: function (ecModel, api) {},\n\n        /**\n         * Render the chart\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        render: function (seriesModel, ecModel, api, payload) {},\n\n        /**\n         * Highlight series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        highlight: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n        },\n\n        /**\n         * Downplay series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        downplay: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'normal');\n        },\n\n        /**\n         * Remove self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        remove: function (ecModel, api) {\n            this.group.removeAll();\n        },\n\n        /**\n         * Dispose self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        dispose: function () {}\n\n        /**\n         * The view contains the given point.\n         * @interface\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        // containPoint: function () {}\n\n    };\n\n    var chartProto = Chart.prototype;\n    chartProto.updateView\n        = chartProto.updateLayout\n        = chartProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            this.render(seriesModel, ecModel, api, payload);\n        };\n\n    /**\n     * Set state of single element\n     * @param  {module:zrender/Element} el\n     * @param  {string} state\n     */\n    function elSetState(el, state) {\n        if (el) {\n            el.trigger(state);\n            if (el.type === 'group') {\n                for (var i = 0; i < el.childCount(); i++) {\n                    elSetState(el.childAt(i), state);\n                }\n            }\n        }\n    }\n    /**\n     * @param  {module:echarts/data/List} data\n     * @param  {Object} payload\n     * @param  {string} state 'normal'|'emphasis'\n     * @inner\n     */\n    function toggleHighlight(data, payload, state) {\n        var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n        if (dataIndex != null) {\n            zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n                elSetState(data.getItemGraphicEl(dataIdx), state);\n            });\n        }\n        else {\n            data.eachItemGraphicEl(function (el) {\n                elSetState(el, state);\n            });\n        }\n    }\n\n    // Enable Chart.extend.\n    clazzUtil.enableClassExtend(Chart, ['dispose']);\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\n\n    module.exports = Chart;\n\n\n/***/ }),\n\n/***/ 642:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var clazz = __webpack_require__(616);\n\n    var parseClassType = clazz.parseClassType;\n\n    var base = 0;\n\n    var componentUtil = {};\n\n    var DELIMITER = '_';\n\n    /**\n     * @public\n     * @param {string} type\n     * @return {string}\n     */\n    componentUtil.getUID = function (type) {\n        // Considering the case of crossing js context,\n        // use Math.random to make id as unique as possible.\n        return [(type || ''), base++, Math.random()].join(DELIMITER);\n    };\n\n    /**\n     * @inner\n     */\n    componentUtil.enableSubTypeDefaulter = function (entity) {\n\n        var subTypeDefaulters = {};\n\n        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n            componentType = parseClassType(componentType);\n            subTypeDefaulters[componentType.main] = defaulter;\n        };\n\n        entity.determineSubType = function (componentType, option) {\n            var type = option.type;\n            if (!type) {\n                var componentTypeMain = parseClassType(componentType).main;\n                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n                    type = subTypeDefaulters[componentTypeMain](option);\n                }\n            }\n            return type;\n        };\n\n        return entity;\n    };\n\n    /**\n     * Topological travel on Activity Network (Activity On Vertices).\n     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n     *\n     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n     *\n     * If there is circle dependencey, Error will be thrown.\n     *\n     */\n    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\n\n        /**\n         * @public\n         * @param {Array.<string>} targetNameList Target Component type list.\n         *                                           Can be ['aa', 'bb', 'aa.xx']\n         * @param {Array.<string>} fullNameList By which we can build dependency graph.\n         * @param {Function} callback Params: componentType, dependencies.\n         * @param {Object} context Scope of callback.\n         */\n        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n            if (!targetNameList.length) {\n                return;\n            }\n\n            var result = makeDepndencyGraph(fullNameList);\n            var graph = result.graph;\n            var stack = result.noEntryList;\n\n            var targetNameSet = {};\n            zrUtil.each(targetNameList, function (name) {\n                targetNameSet[name] = true;\n            });\n\n            while (stack.length) {\n                var currComponentType = stack.pop();\n                var currVertex = graph[currComponentType];\n                var isInTargetNameSet = !!targetNameSet[currComponentType];\n                if (isInTargetNameSet) {\n                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\n                    delete targetNameSet[currComponentType];\n                }\n                zrUtil.each(\n                    currVertex.successor,\n                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\n                );\n            }\n\n            zrUtil.each(targetNameSet, function () {\n                throw new Error('Circle dependency may exists');\n            });\n\n            function removeEdge(succComponentType) {\n                graph[succComponentType].entryCount--;\n                if (graph[succComponentType].entryCount === 0) {\n                    stack.push(succComponentType);\n                }\n            }\n\n            // Consider this case: legend depends on series, and we call\n            // chart.setOption({series: [...]}), where only series is in option.\n            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n            // not be called, but only sereis.mergeOption is called. Thus legend\n            // have no chance to update its local record about series (like which\n            // name of series is available in legend).\n            function removeEdgeAndAdd(succComponentType) {\n                targetNameSet[succComponentType] = true;\n                removeEdge(succComponentType);\n            }\n        };\n\n        /**\n         * DepndencyGraph: {Object}\n         * key: conponentType,\n         * value: {\n         *     successor: [conponentTypes...],\n         *     originalDeps: [conponentTypes...],\n         *     entryCount: {number}\n         * }\n         */\n        function makeDepndencyGraph(fullNameList) {\n            var graph = {};\n            var noEntryList = [];\n\n            zrUtil.each(fullNameList, function (name) {\n\n                var thisItem = createDependencyGraphItem(graph, name);\n                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n\n                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n                thisItem.entryCount = availableDeps.length;\n                if (thisItem.entryCount === 0) {\n                    noEntryList.push(name);\n                }\n\n                zrUtil.each(availableDeps, function (dependentName) {\n                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n                        thisItem.predecessor.push(dependentName);\n                    }\n                    var thatItem = createDependencyGraphItem(graph, dependentName);\n                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n                        thatItem.successor.push(name);\n                    }\n                });\n            });\n\n            return {graph: graph, noEntryList: noEntryList};\n        }\n\n        function createDependencyGraphItem(graph, name) {\n            if (!graph[name]) {\n                graph[name] = {predecessor: [], successor: []};\n            }\n            return graph[name];\n        }\n\n        function getAvailableDependencies(originalDeps, fullNameList) {\n            var availableDeps = [];\n            zrUtil.each(originalDeps, function (dep) {\n                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n            });\n            return availableDeps;\n        }\n    };\n\n    module.exports = componentUtil;\n\n\n/***/ }),\n\n/***/ 643:\n/***/ (function(module, exports) {\n\n// https://github.com/mziccard/node-timsort\n\n    var DEFAULT_MIN_MERGE = 32;\n\n    var DEFAULT_MIN_GALLOPING = 7;\n\n    var DEFAULT_TMP_STORAGE_LENGTH = 256;\n\n    function minRunLength(n) {\n        var r = 0;\n\n        while (n >= DEFAULT_MIN_MERGE) {\n            r |= n & 1;\n            n >>= 1;\n        }\n\n        return n + r;\n    }\n\n    function makeAscendingRun(array, lo, hi, compare) {\n        var runHi = lo + 1;\n\n        if (runHi === hi) {\n            return 1;\n        }\n\n        if (compare(array[runHi++], array[lo]) < 0) {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n                runHi++;\n            }\n\n            reverseRun(array, lo, runHi);\n        }\n        else {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n                runHi++;\n            }\n        }\n\n        return runHi - lo;\n    }\n\n    function reverseRun(array, lo, hi) {\n        hi--;\n\n        while (lo < hi) {\n            var t = array[lo];\n            array[lo++] = array[hi];\n            array[hi--] = t;\n        }\n    }\n\n    function binaryInsertionSort(array, lo, hi, start, compare) {\n        if (start === lo) {\n            start++;\n        }\n\n        for (; start < hi; start++) {\n            var pivot = array[start];\n\n            var left = lo;\n            var right = start;\n            var mid;\n\n            while (left < right) {\n                mid = left + right >>> 1;\n\n                if (compare(pivot, array[mid]) < 0) {\n                    right = mid;\n                }\n                else {\n                    left = mid + 1;\n                }\n            }\n\n            var n = start - left;\n\n            switch (n) {\n                case 3:\n                    array[left + 3] = array[left + 2];\n\n                case 2:\n                    array[left + 2] = array[left + 1];\n\n                case 1:\n                    array[left + 1] = array[left];\n                    break;\n                default:\n                    while (n > 0) {\n                        array[left + n] = array[left + n - 1];\n                        n--;\n                    }\n            }\n\n            array[left] = pivot;\n        }\n    }\n\n    function gallopLeft(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) > 0) {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n        else {\n            maxOffset = hint + 1;\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n\n        lastOffset++;\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) > 0) {\n                lastOffset = m + 1;\n            }\n            else {\n                offset = m;\n            }\n        }\n        return offset;\n    }\n\n    function gallopRight(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) < 0) {\n            maxOffset = hint + 1;\n\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n        else {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n\n        lastOffset++;\n\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) < 0) {\n                offset = m;\n            }\n            else {\n                lastOffset = m + 1;\n            }\n        }\n\n        return offset;\n    }\n\n    function TimSort(array, compare) {\n        var minGallop = DEFAULT_MIN_GALLOPING;\n        var length = 0;\n        var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n        var stackLength = 0;\n        var runStart;\n        var runLength;\n        var stackSize = 0;\n\n        length = array.length;\n\n        if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n            tmpStorageLength = length >>> 1;\n        }\n\n        var tmp = [];\n\n        stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n\n        runStart = [];\n        runLength = [];\n\n        function pushRun(_runStart, _runLength) {\n            runStart[stackSize] = _runStart;\n            runLength[stackSize] = _runLength;\n            stackSize += 1;\n        }\n\n        function mergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n                    if (runLength[n - 1] < runLength[n + 1]) {\n                        n--;\n                    }\n                }\n                else if (runLength[n] > runLength[n + 1]) {\n                    break;\n                }\n                mergeAt(n);\n            }\n        }\n\n        function forceMergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n                    n--;\n                }\n\n                mergeAt(n);\n            }\n        }\n\n        function mergeAt(i) {\n            var start1 = runStart[i];\n            var length1 = runLength[i];\n            var start2 = runStart[i + 1];\n            var length2 = runLength[i + 1];\n\n            runLength[i] = length1 + length2;\n\n            if (i === stackSize - 3) {\n                runStart[i + 1] = runStart[i + 2];\n                runLength[i + 1] = runLength[i + 2];\n            }\n\n            stackSize--;\n\n            var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n            start1 += k;\n            length1 -= k;\n\n            if (length1 === 0) {\n                return;\n            }\n\n            length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n            if (length2 === 0) {\n                return;\n            }\n\n            if (length1 <= length2) {\n                mergeLow(start1, length1, start2, length2);\n            }\n            else {\n                mergeHigh(start1, length1, start2, length2);\n            }\n        }\n\n        function mergeLow(start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length1; i++) {\n                tmp[i] = array[start1 + i];\n            }\n\n            var cursor1 = 0;\n            var cursor2 = start2;\n            var dest = start1;\n\n            array[dest++] = array[cursor2++];\n\n            if (--length2 === 0) {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n                return;\n            }\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n                return;\n            }\n\n            var _minGallop = minGallop;\n            var count1, count2, exit;\n\n            while (1) {\n                count1 = 0;\n                count2 = 0;\n                exit = false;\n\n                do {\n                    if (compare(array[cursor2], tmp[cursor1]) < 0) {\n                        array[dest++] = array[cursor2++];\n                        count2++;\n                        count1 = 0;\n\n                        if (--length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest++] = tmp[cursor1++];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n                    if (count1 !== 0) {\n                        for (i = 0; i < count1; i++) {\n                            array[dest + i] = tmp[cursor1 + i];\n                        }\n\n                        dest += count1;\n                        cursor1 += count1;\n                        length1 -= count1;\n                        if (length1 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest++] = array[cursor2++];\n\n                    if (--length2 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n                    if (count2 !== 0) {\n                        for (i = 0; i < count2; i++) {\n                            array[dest + i] = array[cursor2 + i];\n                        }\n\n                        dest += count2;\n                        cursor2 += count2;\n                        length2 -= count2;\n\n                        if (length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    array[dest++] = tmp[cursor1++];\n\n                    if (--length1 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            minGallop < 1 && (minGallop = 1);\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n            }\n            else if (length1 === 0) {\n                throw new Error();\n                // throw new Error('mergeLow preconditions were not respected');\n            }\n            else {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n            }\n        }\n\n        function mergeHigh (start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length2; i++) {\n                tmp[i] = array[start2 + i];\n            }\n\n            var cursor1 = start1 + length1 - 1;\n            var cursor2 = length2 - 1;\n            var dest = start2 + length2 - 1;\n            var customCursor = 0;\n            var customDest = 0;\n\n            array[dest--] = array[cursor1--];\n\n            if (--length1 === 0) {\n                customCursor = dest - (length2 - 1);\n\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n\n                return;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n                return;\n            }\n\n            var _minGallop = minGallop;\n\n            while (true) {\n                var count1 = 0;\n                var count2 = 0;\n                var exit = false;\n\n                do {\n                    if (compare(tmp[cursor2], array[cursor1]) < 0) {\n                        array[dest--] = array[cursor1--];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest--] = tmp[cursor2--];\n                        count2++;\n                        count1 = 0;\n                        if (--length2 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n                    if (count1 !== 0) {\n                        dest -= count1;\n                        cursor1 -= count1;\n                        length1 -= count1;\n                        customDest = dest + 1;\n                        customCursor = cursor1 + 1;\n\n                        for (i = count1 - 1; i >= 0; i--) {\n                            array[customDest + i] = array[customCursor + i];\n                        }\n\n                        if (length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = tmp[cursor2--];\n\n                    if (--length2 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n                    if (count2 !== 0) {\n                        dest -= count2;\n                        cursor2 -= count2;\n                        length2 -= count2;\n                        customDest = dest + 1;\n                        customCursor = cursor2 + 1;\n\n                        for (i = 0; i < count2; i++) {\n                            array[customDest + i] = tmp[customCursor + i];\n                        }\n\n                        if (length2 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = array[cursor1--];\n\n                    if (--length1 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            if (minGallop < 1) {\n                minGallop = 1;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n            }\n            else if (length2 === 0) {\n                throw new Error();\n                // throw new Error('mergeHigh preconditions were not respected');\n            }\n            else {\n                customCursor = dest - (length2 - 1);\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n            }\n        }\n\n        this.mergeRuns = mergeRuns;\n        this.forceMergeRuns = forceMergeRuns;\n        this.pushRun = pushRun;\n    }\n\n    function sort(array, compare, lo, hi) {\n        if (!lo) {\n            lo = 0;\n        }\n        if (!hi) {\n            hi = array.length;\n        }\n\n        var remaining = hi - lo;\n\n        if (remaining < 2) {\n            return;\n        }\n\n        var runLength = 0;\n\n        if (remaining < DEFAULT_MIN_MERGE) {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n            return;\n        }\n\n        var ts = new TimSort(array, compare);\n\n        var minRun = minRunLength(remaining);\n\n        do {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            if (runLength < minRun) {\n                var force = remaining;\n                if (force > minRun) {\n                    force = minRun;\n                }\n\n                binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n                runLength = force;\n            }\n\n            ts.pushRun(lo, runLength);\n            ts.mergeRuns();\n\n            remaining -= runLength;\n            lo += runLength;\n        } while (remaining !== 0);\n\n        ts.forceMergeRuns();\n    }\n\n    module.exports = sort;\n\n\n/***/ }),\n\n/***/ 644:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n\n\n    var zrUtil = __webpack_require__(606);\n\n    var Style = __webpack_require__(676);\n\n    var Element = __webpack_require__(667);\n    var RectText = __webpack_require__(773);\n    // var Stateful = require('./mixin/Stateful');\n\n    /**\n     * @alias module:zrender/graphic/Displayable\n     * @extends module:zrender/Element\n     * @extends module:zrender/graphic/mixin/RectText\n     */\n    function Displayable(opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        // Extend properties\n        for (var name in opts) {\n            if (\n                opts.hasOwnProperty(name) &&\n                name !== 'style'\n            ) {\n                this[name] = opts[name];\n            }\n        }\n\n        /**\n         * @type {module:zrender/graphic/Style}\n         */\n        this.style = new Style(opts.style, this);\n\n        this._rect = null;\n        // Shapes for cascade clipping.\n        this.__clipPaths = [];\n\n        // FIXME Stateful must be mixined after style is setted\n        // Stateful.call(this, opts);\n    }\n\n    Displayable.prototype = {\n\n        constructor: Displayable,\n\n        type: 'displayable',\n\n        /**\n         * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n         * Dirty flag. From which painter will determine if this displayable object needs brush\n         * @name module:zrender/graphic/Displayable#__dirty\n         * @type {boolean}\n         */\n        __dirty: true,\n\n        /**\n         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n         * If ignore drawing of the displayable object. Mouse event will still be triggered\n         * @name module:/zrender/graphic/Displayable#invisible\n         * @type {boolean}\n         * @default false\n         */\n        invisible: false,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z: 0,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z2: 0,\n\n        /**\n         * z层level，决定绘画在哪层canvas中\n         * @name module:/zrender/graphic/Displayable#zlevel\n         * @type {number}\n         * @default 0\n         */\n        zlevel: 0,\n\n        /**\n         * 是否可拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        draggable: false,\n\n        /**\n         * 是否正在拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        dragging: false,\n\n        /**\n         * 是否相应鼠标事件\n         * @name module:/zrender/graphic/Displayable#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * If enable culling\n         * @type {boolean}\n         * @default false\n         */\n        culling: false,\n\n        /**\n         * Mouse cursor when hovered\n         * @name module:/zrender/graphic/Displayable#cursor\n         * @type {string}\n         */\n        cursor: 'pointer',\n\n        /**\n         * If hover area is bounding rect\n         * @name module:/zrender/graphic/Displayable#rectHover\n         * @type {string}\n         */\n        rectHover: false,\n\n        /**\n         * Render the element progressively when the value >= 0,\n         * usefull for large data.\n         * @type {number}\n         */\n        progressive: -1,\n\n        beforeBrush: function (ctx) {},\n\n        afterBrush: function (ctx) {},\n\n        /**\n         * 图形绘制方法\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        // Interface\n        brush: function (ctx, prevEl) {},\n\n        /**\n         * 获取最小包围盒\n         * @return {module:zrender/core/BoundingRect}\n         */\n        // Interface\n        getBoundingRect: function () {},\n\n        /**\n         * 判断坐标 x, y 是否在图形上\n         * If displayable element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        contain: function (x, y) {\n            return this.rectContain(x, y);\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            cb.call(context, this);\n        },\n\n        /**\n         * 判断坐标 x, y 是否在图形的包围盒上\n         * If bounding rect of element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        rectContain: function (x, y) {\n            var coord = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            return rect.contain(coord[0], coord[1]);\n        },\n\n        /**\n         * 标记图形元素为脏，并且在下一帧重绘\n         * Mark displayable element dirty and refresh next frame\n         */\n        dirty: function () {\n            this.__dirty = true;\n\n            this._rect = null;\n\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * 图形是否会触发事件\n         * If displayable object binded any event\n         * @return {boolean}\n         */\n        // TODO, 通过 bind 绑定的事件\n        // isSilent: function () {\n        //     return !(\n        //         this.hoverable || this.draggable\n        //         || this.onmousemove || this.onmouseover || this.onmouseout\n        //         || this.onmousedown || this.onmouseup || this.onclick\n        //         || this.ondragenter || this.ondragover || this.ondragleave\n        //         || this.ondrop\n        //     );\n        // },\n        /**\n         * Alias for animate('style')\n         * @param {boolean} loop\n         */\n        animateStyle: function (loop) {\n            return this.animate('style', loop);\n        },\n\n        attrKV: function (key, value) {\n            if (key !== 'style') {\n                Element.prototype.attrKV.call(this, key, value);\n            }\n            else {\n                this.style.set(value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setStyle: function (key, value) {\n            this.style.set(key, value);\n            this.dirty(false);\n            return this;\n        },\n\n        /**\n         * Use given style object\n         * @param  {Object} obj\n         */\n        useStyle: function (obj) {\n            this.style = new Style(obj, this);\n            this.dirty(false);\n            return this;\n        }\n    };\n\n    zrUtil.inherits(Displayable, Element);\n\n    zrUtil.mixin(Displayable, RectText);\n    // zrUtil.mixin(Displayable, Stateful);\n\n    module.exports = Displayable;\n\n\n/***/ }),\n\n/***/ 645:\n/***/ (function(module, exports) {\n\n\n\n    /**\n     * @param {Array.<Object>} colorStops\n     */\n    var Gradient = function (colorStops) {\n\n        this.colorStops = colorStops || [];\n\n    };\n\n    Gradient.prototype = {\n\n        constructor: Gradient,\n\n        addColorStop: function (offset, color) {\n            this.colorStops.push({\n\n                offset: offset,\n\n                color: color\n            });\n        }\n\n    };\n\n    module.exports = Gradient;\n\n\n/***/ }),\n\n/***/ 646:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var LRU = __webpack_require__(671);\n    var globalImageCache = new LRU(50);\n\n    var helper = {};\n\n    /**\n     * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n     * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n     */\n    helper.findExistImage = function (newImageOrSrc) {\n        if (typeof newImageOrSrc === 'string') {\n            var cachedImgObj = globalImageCache.get(newImageOrSrc);\n            return cachedImgObj && cachedImgObj.image;\n        }\n        else {\n            return newImageOrSrc;\n        }\n    };\n\n    /**\n     * Caution: User should cache loaded images, but not just count on LRU.\n     * Consider if required images more than LRU size, will dead loop occur?\n     *\n     * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n     * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n     * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n     * @param {Function} [cb] params: (image, cbPayload)\n     * @param {Object} [cbPayload] Payload on cb calling.\n     * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n     */\n    helper.createOrUpdateImage = function (newImageOrSrc, image, hostEl, cb, cbPayload) {\n        if (!newImageOrSrc) {\n            return image;\n        }\n        else if (typeof newImageOrSrc === 'string') {\n\n            // Image should not be loaded repeatly.\n            if ((image && image.__zrImageSrc === newImageOrSrc) || !hostEl) {\n                return image;\n            }\n\n            // Only when there is no existent image or existent image src\n            // is different, this method is responsible for load.\n            var cachedImgObj = globalImageCache.get(newImageOrSrc);\n\n            var pendingWrap = {hostEl: hostEl, cb: cb, cbPayload: cbPayload};\n\n            if (cachedImgObj) {\n                image = cachedImgObj.image;\n                !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n            }\n            else {\n                !image && (image = new Image());\n                image.onload = imageOnLoad;\n\n                globalImageCache.put(\n                    newImageOrSrc,\n                    image.__cachedImgObj = {\n                        image: image,\n                        pending: [pendingWrap]\n                    }\n                );\n\n                image.src = image.__zrImageSrc = newImageOrSrc;\n            }\n\n            return image;\n        }\n        // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n        else {\n            return newImageOrSrc;\n        }\n    };\n\n    function imageOnLoad() {\n        var cachedImgObj = this.__cachedImgObj;\n        this.onload = this.__cachedImgObj = null;\n\n        for (var i = 0; i < cachedImgObj.pending.length; i++) {\n            var pendingWrap = cachedImgObj.pending[i];\n            var cb = pendingWrap.cb;\n            cb && cb(this, pendingWrap.cbPayload);\n            pendingWrap.hostEl.dirty();\n        }\n        cachedImgObj.pending.length = 0;\n    }\n\n    var isImageReady = helper.isImageReady = function (image) {\n        return image && image.width && image.height;\n    };\n\n    module.exports = helper;\n\n\n\n/***/ }),\n\n/***/ 647:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var textContain = __webpack_require__(621);\n    var util = __webpack_require__(606);\n    var roundRectHelper = __webpack_require__(679);\n    var imageHelper = __webpack_require__(646);\n\n    var retrieve3 = util.retrieve3;\n    var retrieve2 = util.retrieve2;\n\n    // TODO: Have not support 'start', 'end' yet.\n    var VALID_TEXT_ALIGN = {left: 1, right: 1, center: 1};\n    var VALID_TEXT_VERTICAL_ALIGN = {top: 1, bottom: 1, middle: 1};\n\n    var helper = {};\n\n    /**\n     * @param {module:zrender/graphic/Style} style\n     * @return {module:zrender/graphic/Style} The input style.\n     */\n    helper.normalizeTextStyle = function (style) {\n        normalizeStyle(style);\n        util.each(style.rich, normalizeStyle);\n        return style;\n    };\n\n    function normalizeStyle(style) {\n        if (style) {\n\n            style.font = textContain.makeFont(style);\n\n            var textAlign = style.textAlign;\n            textAlign === 'middle' && (textAlign = 'center');\n            style.textAlign = (\n                textAlign == null || VALID_TEXT_ALIGN[textAlign]\n            ) ? textAlign : 'left';\n\n            // Compatible with textBaseline.\n            var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n            textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n            style.textVerticalAlign = (\n                textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign]\n            ) ? textVerticalAlign : 'top';\n\n            var textPadding = style.textPadding;\n            if (textPadding) {\n                style.textPadding = util.normalizeCssArray(style.textPadding);\n            }\n        }\n    }\n\n    /**\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {string} text\n     * @param {module:zrender/graphic/Style} style\n     * @param {Object|boolean} [rect] {x, y, width, height}\n     *                  If set false, rect text is not used.\n     */\n    helper.renderText = function (hostEl, ctx, text, style, rect) {\n        style.rich\n            ? renderRichText(hostEl, ctx, text, style, rect)\n            : renderPlainText(hostEl, ctx, text, style, rect);\n    };\n\n    function renderPlainText(hostEl, ctx, text, style, rect) {\n        var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n\n        var textPadding = style.textPadding;\n\n        var contentBlock = hostEl.__textCotentBlock;\n        if (!contentBlock || hostEl.__dirty) {\n            contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(\n                text, font, textPadding, style.truncate\n            );\n        }\n\n        var outerHeight = contentBlock.outerHeight;\n\n        var textLines = contentBlock.lines;\n        var lineHeight = contentBlock.lineHeight;\n\n        var boxPos = getBoxPosition(outerHeight, style, rect);\n        var baseX = boxPos.baseX;\n        var baseY = boxPos.baseY;\n        var textAlign = boxPos.textAlign;\n        var textVerticalAlign = boxPos.textVerticalAlign;\n\n        // Origin of textRotation should be the base point of text drawing.\n        applyTextRotation(ctx, style, rect, baseX, baseY);\n\n        var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n        var textX = baseX;\n        var textY = boxY;\n\n        var needDrawBg = needDrawBackground(style);\n        if (needDrawBg || textPadding) {\n            // Consider performance, do not call getTextWidth util necessary.\n            var textWidth = textContain.getWidth(text, font);\n            var outerWidth = textWidth;\n            textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n            var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n\n            needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n            if (textPadding) {\n                textX = getTextXForPadding(baseX, textAlign, textPadding);\n                textY += textPadding[0];\n            }\n        }\n\n        setCtx(ctx, 'textAlign', textAlign || 'left');\n        // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n        // text will offset downward a little bit in font \"Microsoft YaHei\".\n        setCtx(ctx, 'textBaseline', 'middle');\n\n        // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n        setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n        setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n        setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n        setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0);\n\n        // `textBaseline` is set as 'middle'.\n        textY += lineHeight / 2;\n\n        var textLineWidth = style.textLineWidth;\n        var textStroke = getStroke(style.textStroke, textLineWidth);\n        var textFill = getFill(style.textFill);\n\n        if (textStroke) {\n            setCtx(ctx, 'lineWidth', textLineWidth);\n            setCtx(ctx, 'strokeStyle', textStroke);\n        }\n        if (textFill) {\n            setCtx(ctx, 'fillStyle', textFill);\n        }\n\n        for (var i = 0; i < textLines.length; i++) {\n            // Fill after stroke so the outline will not cover the main part.\n            textStroke && ctx.strokeText(textLines[i], textX, textY);\n            textFill && ctx.fillText(textLines[i], textX, textY);\n            textY += lineHeight;\n        }\n    }\n\n    function renderRichText(hostEl, ctx, text, style, rect) {\n        var contentBlock = hostEl.__textCotentBlock;\n\n        if (!contentBlock || hostEl.__dirty) {\n            contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n        }\n\n        drawRichText(hostEl, ctx, contentBlock, style, rect);\n    }\n\n    function drawRichText(hostEl, ctx, contentBlock, style, rect) {\n        var contentWidth = contentBlock.width;\n        var outerWidth = contentBlock.outerWidth;\n        var outerHeight = contentBlock.outerHeight;\n        var textPadding = style.textPadding;\n\n        var boxPos = getBoxPosition(outerHeight, style, rect);\n        var baseX = boxPos.baseX;\n        var baseY = boxPos.baseY;\n        var textAlign = boxPos.textAlign;\n        var textVerticalAlign = boxPos.textVerticalAlign;\n\n        // Origin of textRotation should be the base point of text drawing.\n        applyTextRotation(ctx, style, rect, baseX, baseY);\n\n        var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n        var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n        var xLeft = boxX;\n        var lineTop = boxY;\n        if (textPadding) {\n            xLeft += textPadding[3];\n            lineTop += textPadding[0];\n        }\n        var xRight = xLeft + contentWidth;\n\n        needDrawBackground(style) && drawBackground(\n            hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight\n        );\n\n        for (var i = 0; i < contentBlock.lines.length; i++) {\n            var line = contentBlock.lines[i];\n            var tokens = line.tokens;\n            var tokenCount = tokens.length;\n            var lineHeight = line.lineHeight;\n            var usedWidth = line.width;\n\n            var leftIndex = 0;\n            var lineXLeft = xLeft;\n            var lineXRight = xRight;\n            var rightIndex = tokenCount - 1;\n            var token;\n\n            while (\n                leftIndex < tokenCount\n                && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')\n            ) {\n                placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n                usedWidth -= token.width;\n                lineXLeft += token.width;\n                leftIndex++;\n            }\n\n            while (\n                rightIndex >= 0\n                && (token = tokens[rightIndex], token.textAlign === 'right')\n            ) {\n                placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n                usedWidth -= token.width;\n                lineXRight -= token.width;\n                rightIndex--;\n            }\n\n            // The other tokens are placed as textAlign 'center' if there is enough space.\n            lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n            while (leftIndex <= rightIndex) {\n                token = tokens[leftIndex];\n                // Consider width specified by user, use 'center' rather than 'left'.\n                placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n                lineXLeft += token.width;\n                leftIndex++;\n            }\n\n            lineTop += lineHeight;\n        }\n    }\n\n    function applyTextRotation(ctx, style, rect, x, y) {\n        // textRotation only apply in RectText.\n        if (rect && style.textRotation) {\n            var origin = style.textOrigin;\n            if (origin === 'center') {\n                x = rect.width / 2 + rect.x;\n                y = rect.height / 2 + rect.y;\n            }\n            else if (origin) {\n                x = origin[0] + rect.x;\n                y = origin[1] + rect.y;\n            }\n\n            ctx.translate(x, y);\n            // Positive: anticlockwise\n            ctx.rotate(-style.textRotation);\n            ctx.translate(-x, -y);\n        }\n    }\n\n    function placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n        var tokenStyle = style.rich[token.styleName] || {};\n\n        // 'ctx.textBaseline' is always set as 'middle', for sake of\n        // the bias of \"Microsoft YaHei\".\n        var textVerticalAlign = token.textVerticalAlign;\n        var y = lineTop + lineHeight / 2;\n        if (textVerticalAlign === 'top') {\n            y = lineTop + token.height / 2;\n        }\n        else if (textVerticalAlign === 'bottom') {\n            y = lineTop + lineHeight - token.height / 2;\n        }\n\n        !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(\n            hostEl,\n            ctx,\n            tokenStyle,\n            textAlign === 'right'\n                ? x - token.width\n                : textAlign === 'center'\n                ? x - token.width / 2\n                : x,\n            y - token.height / 2,\n            token.width,\n            token.height\n        );\n\n        var textPadding = token.textPadding;\n        if (textPadding) {\n            x = getTextXForPadding(x, textAlign, textPadding);\n            y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n        }\n\n        setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n        setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n        setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n        setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n\n        setCtx(ctx, 'textAlign', textAlign);\n        // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n        // text will offset downward a little bit in font \"Microsoft YaHei\".\n        setCtx(ctx, 'textBaseline', 'middle');\n\n        setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n\n        var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textLineWidth);\n        var textFill = getFill(tokenStyle.textFill || style.textFill);\n        var textLineWidth = retrieve2(tokenStyle.textLineWidth, style.textLineWidth);\n\n        // Fill after stroke so the outline will not cover the main part.\n        if (textStroke) {\n            setCtx(ctx, 'lineWidth', textLineWidth);\n            setCtx(ctx, 'strokeStyle', textStroke);\n            ctx.strokeText(token.text, x, y);\n        }\n        if (textFill) {\n            setCtx(ctx, 'fillStyle', textFill);\n            ctx.fillText(token.text, x, y);\n        }\n    }\n\n    function needDrawBackground(style) {\n        return style.textBackgroundColor\n            || (style.textBorderWidth && style.textBorderColor);\n    }\n\n    // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n    // shape: {x, y, width, height}\n    function drawBackground(hostEl, ctx, style, x, y, width, height) {\n        var textBackgroundColor = style.textBackgroundColor;\n        var textBorderWidth = style.textBorderWidth;\n        var textBorderColor = style.textBorderColor;\n        var isPlainBg = util.isString(textBackgroundColor);\n\n        setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n        setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n        setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n        setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n        if (isPlainBg || (textBorderWidth && textBorderColor)) {\n            ctx.beginPath();\n            var textBorderRadius = style.textBorderRadius;\n            if (!textBorderRadius) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, {\n                    x: x, y: y, width: width, height: height, r: textBorderRadius\n                });\n            }\n            ctx.closePath();\n        }\n\n        if (isPlainBg) {\n            setCtx(ctx, 'fillStyle', textBackgroundColor);\n            ctx.fill();\n        }\n        else if (util.isObject(textBackgroundColor)) {\n            var image = textBackgroundColor.image;\n\n            image = imageHelper.createOrUpdateImage(\n                image, null, hostEl, onBgImageLoaded, textBackgroundColor\n            );\n            if (image && imageHelper.isImageReady(image)) {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n\n        if (textBorderWidth && textBorderColor) {\n            setCtx(ctx, 'lineWidth', textBorderWidth);\n            setCtx(ctx, 'strokeStyle', textBorderColor);\n            ctx.stroke();\n        }\n    }\n\n    function onBgImageLoaded(image, textBackgroundColor) {\n        // Replace image, so that `contain/text.js#parseRichText`\n        // will get correct result in next tick.\n        textBackgroundColor.image = image;\n    }\n\n    function getBoxPosition(blockHeiht, style, rect) {\n        var baseX = style.x || 0;\n        var baseY = style.y || 0;\n        var textAlign = style.textAlign;\n        var textVerticalAlign = style.textVerticalAlign;\n\n        // Text position represented by coord\n        if (rect) {\n            var textPosition = style.textPosition;\n            if (textPosition instanceof Array) {\n                // Percent\n                baseX = rect.x + parsePercent(textPosition[0], rect.width);\n                baseY = rect.y + parsePercent(textPosition[1], rect.height);\n            }\n            else {\n                var res = textContain.adjustTextPositionOnRect(\n                    textPosition, rect, style.textDistance\n                );\n                baseX = res.x;\n                baseY = res.y;\n                // Default align and baseline when has textPosition\n                textAlign = textAlign || res.textAlign;\n                textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n            }\n\n            // textOffset is only support in RectText, otherwise\n            // we have to adjust boundingRect for textOffset.\n            var textOffset = style.textOffset;\n            if (textOffset) {\n                baseX += textOffset[0];\n                baseY += textOffset[1];\n            }\n        }\n\n        return {\n            baseX: baseX,\n            baseY: baseY,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    function setCtx(ctx, prop, value) {\n        // FIXME ??? performance try\n        // if (ctx.__currentValues[prop] !== value) {\n            ctx[prop] = ctx.__currentValues[prop] = value;\n        // }\n        return ctx[prop];\n    }\n\n    /**\n     * @param {string} [stroke] If specified, do not check style.textStroke.\n     * @param {string} [lineWidth] If specified, do not check style.textStroke.\n     * @param {number} style\n     */\n    var getStroke = helper.getStroke = function (stroke, lineWidth) {\n        return (stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none')\n            ? null\n            // TODO pattern and gradient?\n            : (stroke.image || stroke.colorStops)\n            ? '#000'\n            : stroke;\n    };\n\n    var getFill = helper.getFill = function (fill) {\n        return (fill == null || fill === 'none')\n            ? null\n            // TODO pattern and gradient?\n            : (fill.image || fill.colorStops)\n            ? '#000'\n            : fill;\n    };\n\n    function parsePercent(value, maxValue) {\n        if (typeof value === 'string') {\n            if (value.lastIndexOf('%') >= 0) {\n                return parseFloat(value) / 100 * maxValue;\n            }\n            return parseFloat(value);\n        }\n        return value;\n    }\n\n    function getTextXForPadding(x, textAlign, textPadding) {\n        return textAlign === 'right'\n            ? (x - textPadding[1])\n            : textAlign === 'center'\n            ? (x + textPadding[3] / 2 - textPadding[1] / 2)\n            : (x + textPadding[3]);\n    }\n\n    /**\n     * @param {string} text\n     * @param {module:zrender/Style} style\n     * @return {boolean}\n     */\n    helper.needDrawText = function (text, style) {\n        return text != null\n            && (text\n                || style.textBackgroundColor\n                || (style.textBorderWidth && style.textBorderColor)\n                || style.textPadding\n            );\n    };\n\n    module.exports = helper;\n\n\n\n\n/***/ }),\n\n/***/ 648:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var List = __webpack_require__(630);\n    var completeDimensions = __webpack_require__(631);\n    var zrUtil = __webpack_require__(606);\n    var modelUtil = __webpack_require__(609);\n    var CoordinateSystem = __webpack_require__(636);\n    var getDataItemValue = modelUtil.getDataItemValue;\n    var converDataValue = modelUtil.converDataValue;\n\n    function firstDataNotNull(data) {\n        var i = 0;\n        while (i < data.length && data[i] == null) {\n            i++;\n        }\n        return data[i];\n    }\n    function ifNeedCompleteOrdinalData(data) {\n        var sampleItem = firstDataNotNull(data);\n        return sampleItem != null\n            && !zrUtil.isArray(getDataItemValue(sampleItem));\n    }\n\n    /**\n     * Helper function to create a list from option data\n     */\n    function createListFromArray(data, seriesModel, ecModel) {\n        // If data is undefined\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        var coordSysName = seriesModel.get('coordinateSystem');\n        var creator = creators[coordSysName];\n        var registeredCoordSys = CoordinateSystem.get(coordSysName);\n        var completeDimOpt = {\n            encodeDef: seriesModel.get('encode'),\n            dimsDef: seriesModel.get('dimensions')\n        };\n\n        // FIXME\n        var axesInfo = creator && creator(data, seriesModel, ecModel, completeDimOpt);\n        var dimensions = axesInfo && axesInfo.dimensions;\n        if (!dimensions) {\n            // Get dimensions from registered coordinate system\n            dimensions = (registeredCoordSys && (\n                registeredCoordSys.getDimensionsInfo\n                    ? registeredCoordSys.getDimensionsInfo()\n                    : registeredCoordSys.dimensions.slice()\n            )) || ['x', 'y'];\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n        }\n\n        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n\n        var list = new List(dimensions, seriesModel);\n\n        var nameList = createNameList(axesInfo, data);\n\n        var categories = {};\n        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\n            ? function (itemOpt, dimName, dataIndex, dimIndex) {\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                // Use dataIndex as ordinal value in categoryAxis\n                return dimIndex === categoryIndex\n                    ? dataIndex\n                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n            }\n            : function (itemOpt, dimName, dataIndex, dimIndex) {\n                var value = getDataItemValue(itemOpt);\n                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n                if (categoryAxesModels && categoryAxesModels[dimName]) {\n                    // If given value is a category string\n                    if (typeof val === 'string') {\n                        // Lazy get categories\n                        categories[dimName] = categories[dimName]\n                            || categoryAxesModels[dimName].getCategories();\n                        val = zrUtil.indexOf(categories[dimName], val);\n                        if (val < 0 && !isNaN(val)) {\n                            // In case some one write '1', '2' istead of 1, 2\n                            val = +val;\n                        }\n                    }\n                }\n                return val;\n            };\n\n        list.hasItemOption = false;\n        list.initData(data, nameList, dimValueGetter);\n\n        return list;\n    }\n\n    function isStackable(axisType) {\n        return axisType !== 'category' && axisType !== 'time';\n    }\n\n    function getDimTypeByAxis(axisType) {\n        return axisType === 'category'\n            ? 'ordinal'\n            : axisType === 'time'\n            ? 'time'\n            : 'float';\n    }\n\n    /**\n     * Creaters for each coord system.\n     */\n    var creators = {\n\n        cartesian2d: function (data, seriesModel, ecModel, completeDimOpt) {\n\n            var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n                return ecModel.queryComponents({\n                    mainType: name,\n                    index: seriesModel.get(name + 'Index'),\n                    id: seriesModel.get(name + 'Id')\n                })[0];\n            });\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            if (__DEV__) {\n                if (!xAxisModel) {\n                    throw new Error('xAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('xAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n                if (!yAxisModel) {\n                    throw new Error('yAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('yAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'x',\n                    type: getDimTypeByAxis(xAxisType),\n                    stackable: isStackable(xAxisType)\n                },\n                {\n                    name: 'y',\n                    // If two category axes\n                    type: getDimTypeByAxis(yAxisType),\n                    stackable: isStackable(yAxisType)\n                }\n            ];\n\n            var isXAxisCateogry = xAxisType === 'category';\n            var isYAxisCategory = yAxisType === 'category';\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isXAxisCateogry) {\n                categoryAxesModels.x = xAxisModel;\n            }\n            if (isYAxisCategory) {\n                categoryAxesModels.y = yAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        singleAxis: function (data, seriesModel, ecModel, completeDimOpt) {\n\n            var singleAxisModel = ecModel.queryComponents({\n                mainType: 'singleAxis',\n                index: seriesModel.get('singleAxisIndex'),\n                id: seriesModel.get('singleAxisId')\n            })[0];\n\n            if (__DEV__) {\n                if (!singleAxisModel) {\n                    throw new Error('singleAxis should be specified.');\n                }\n            }\n\n            var singleAxisType = singleAxisModel.get('type');\n            var isCategory = singleAxisType === 'category';\n\n            var dimensions = [{\n                name: 'single',\n                type: getDimTypeByAxis(singleAxisType),\n                stackable: isStackable(singleAxisType)\n            }];\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isCategory) {\n                categoryAxesModels.single = singleAxisModel;\n            }\n\n            return {\n                dimensions: dimensions,\n                categoryIndex: isCategory ? 0 : -1,\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        polar: function (data, seriesModel, ecModel, completeDimOpt) {\n            var polarModel = ecModel.queryComponents({\n                mainType: 'polar',\n                index: seriesModel.get('polarIndex'),\n                id: seriesModel.get('polarId')\n            })[0];\n\n            var angleAxisModel = polarModel.findAxisModel('angleAxis');\n            var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n\n            if (__DEV__) {\n                if (!angleAxisModel) {\n                    throw new Error('angleAxis option not found');\n                }\n                if (!radiusAxisModel) {\n                    throw new Error('radiusAxis option not found');\n                }\n            }\n\n            var radiusAxisType = radiusAxisModel.get('type');\n            var angleAxisType = angleAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'radius',\n                    type: getDimTypeByAxis(radiusAxisType),\n                    stackable: isStackable(radiusAxisType)\n                },\n                {\n                    name: 'angle',\n                    type: getDimTypeByAxis(angleAxisType),\n                    stackable: isStackable(angleAxisType)\n                }\n            ];\n            var isAngleAxisCateogry = angleAxisType === 'category';\n            var isRadiusAxisCateogry = radiusAxisType === 'category';\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isRadiusAxisCateogry) {\n                categoryAxesModels.radius = radiusAxisModel;\n            }\n            if (isAngleAxisCateogry) {\n                categoryAxesModels.angle = angleAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        geo: function (data, seriesModel, ecModel, completeDimOpt) {\n            // TODO Region\n            // 多个散点图系列在同一个地区的时候\n            return {\n                dimensions: completeDimensions([\n                    {name: 'lng'},\n                    {name: 'lat'}\n                ], data, completeDimOpt)\n            };\n        }\n    };\n\n    function createNameList(result, data) {\n        var nameList = [];\n\n        var categoryDim = result && result.dimensions[result.categoryIndex];\n        var categoryAxisModel;\n        if (categoryDim) {\n            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n        }\n\n        if (categoryAxisModel) {\n            // FIXME Two category axis\n            var categories = categoryAxisModel.getCategories();\n            if (categories) {\n                var dataLen = data.length;\n                // Ordered data is given explicitly like\n                // [[3, 0.2], [1, 0.3], [2, 0.15]]\n                // or given scatter data,\n                // pick the category\n                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n                    nameList = [];\n                    for (var i = 0; i < dataLen; i++) {\n                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\n                    }\n                }\n                else {\n                    nameList = categories.slice(0);\n                }\n            }\n        }\n\n        return nameList;\n    }\n\n    module.exports = createListFromArray;\n\n\n\n/***/ }),\n\n/***/ 649:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var formatUtil = __webpack_require__(613);\n    var graphic = __webpack_require__(608);\n    var Model = __webpack_require__(614);\n    var numberUtil = __webpack_require__(610);\n    var remRadian = numberUtil.remRadian;\n    var isRadianAroundZero = numberUtil.isRadianAroundZero;\n    var vec2 = __webpack_require__(611);\n    var matrix = __webpack_require__(623);\n    var v2ApplyTransform = vec2.applyTransform;\n    var retrieve = zrUtil.retrieve;\n\n    var PI = Math.PI;\n\n    function makeAxisEventDataBase(axisModel) {\n        var eventData = {\n            componentType: axisModel.mainType\n        };\n        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n        return eventData;\n    }\n\n    /**\n     * A final axis is translated and rotated from a \"standard axis\".\n     * So opt.position and opt.rotation is required.\n     *\n     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n     * for example: (0, 0) ------------> (0, 50)\n     *\n     * nameDirection or tickDirection or labelDirection is 1 means tick\n     * or label is below the standard axis, whereas is -1 means above\n     * the standard axis. labelOffset means offset between label and axis,\n     * which is useful when 'onZero', where axisLabel is in the grid and\n     * label in outside grid.\n     *\n     * Tips: like always,\n     * positive rotation represents anticlockwise, and negative rotation\n     * represents clockwise.\n     * The direction of position coordinate is the same as the direction\n     * of screen coordinate.\n     *\n     * Do not need to consider axis 'inverse', which is auto processed by\n     * axis extent.\n     *\n     * @param {module:zrender/container/Group} group\n     * @param {Object} axisModel\n     * @param {Object} opt Standard axis parameters.\n     * @param {Array.<number>} opt.position [x, y]\n     * @param {number} opt.rotation by radian\n     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle'.\n     * @param {number} [opt.tickDirection=1] 1 or -1\n     * @param {number} [opt.labelDirection=1] 1 or -1\n     * @param {number} [opt.labelOffset=0] Usefull when onZero.\n     * @param {string} [opt.axisLabelShow] default get from axisModel.\n     * @param {string} [opt.axisName] default get from axisModel.\n     * @param {number} [opt.axisNameAvailableWidth]\n     * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n     * @param {number} [opt.labelInterval] Default label interval when label\n     *                                     interval from model is null or 'auto'.\n     * @param {number} [opt.strokeContainThreshold] Default label interval when label\n     * @param {number} [opt.nameTruncateMaxWidth]\n     */\n    var AxisBuilder = function (axisModel, opt) {\n\n        /**\n         * @readOnly\n         */\n        this.opt = opt;\n\n        /**\n         * @readOnly\n         */\n        this.axisModel = axisModel;\n\n        // Default value\n        zrUtil.defaults(\n            opt,\n            {\n                labelOffset: 0,\n                nameDirection: 1,\n                tickDirection: 1,\n                labelDirection: 1,\n                silent: true\n            }\n        );\n\n        /**\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        // FIXME Not use a seperate text group?\n        var dumbGroup = new graphic.Group({\n            position: opt.position.slice(),\n            rotation: opt.rotation\n        });\n\n        // this.group.add(dumbGroup);\n        // this._dumbGroup = dumbGroup;\n\n        dumbGroup.updateTransform();\n        this._transform = dumbGroup.transform;\n\n        this._dumbGroup = dumbGroup;\n    };\n\n    AxisBuilder.prototype = {\n\n        constructor: AxisBuilder,\n\n        hasBuilder: function (name) {\n            return !!builders[name];\n        },\n\n        add: function (name) {\n            builders[name].call(this);\n        },\n\n        getGroup: function () {\n            return this.group;\n        }\n\n    };\n\n    var builders = {\n\n        /**\n         * @private\n         */\n        axisLine: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisLine.show')) {\n                return;\n            }\n\n            var extent = this.axisModel.axis.getExtent();\n\n            var matrix = this._transform;\n            var pt1 = [extent[0], 0];\n            var pt2 = [extent[1], 0];\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n\n            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                // Id for animation\n                anid: 'line',\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.extend(\n                    {lineCap: 'round'},\n                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\n                ),\n                strokeContainThreshold: opt.strokeContainThreshold || 5,\n                silent: true,\n                z2: 1\n            })));\n        },\n\n        /**\n         * @private\n         */\n        axisTick: function () {\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n\n            if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n                return;\n            }\n\n            var tickModel = axisModel.getModel('axisTick');\n            var opt = this.opt;\n\n            var lineStyleModel = tickModel.getModel('lineStyle');\n            var tickLen = tickModel.get('length');\n\n            var tickInterval = getInterval(tickModel, opt.labelInterval);\n            var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\n            var ticks = axis.scale.getTicks();\n\n            var pt1 = [];\n            var pt2 = [];\n            var matrix = this._transform;\n\n            for (var i = 0; i < ticksCoords.length; i++) {\n                // Only ordinal scale support tick interval\n                if (ifIgnoreOnTick(axis, i, tickInterval)) {\n                     continue;\n                }\n\n                var tickCoord = ticksCoords[i];\n\n                pt1[0] = tickCoord;\n                pt1[1] = 0;\n                pt2[0] = tickCoord;\n                pt2[1] = opt.tickDirection * tickLen;\n\n                if (matrix) {\n                    v2ApplyTransform(pt1, pt1, matrix);\n                    v2ApplyTransform(pt2, pt2, matrix);\n                }\n                // Tick line, Not use group transform to have better line draw\n                this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                    // Id for animation\n                    anid: 'tick_' + ticks[i],\n\n                    shape: {\n                        x1: pt1[0],\n                        y1: pt1[1],\n                        x2: pt2[0],\n                        y2: pt2[1]\n                    },\n                    style: zrUtil.defaults(\n                        lineStyleModel.getLineStyle(),\n                        {\n                            stroke: axisModel.get('axisLine.lineStyle.color')\n                        }\n                    ),\n                    z2: 2,\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @private\n         */\n        axisLabel: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n            var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n            if (!show || axis.scale.isBlank()) {\n                return;\n            }\n\n            var labelModel = axisModel.getModel('axisLabel');\n            var labelMargin = labelModel.get('margin');\n            var ticks = axis.scale.getTicks();\n            var labels = axisModel.getFormattedLabels();\n\n            // Special label rotate.\n            var labelRotation = (\n                retrieve(opt.labelRotate, labelModel.get('rotate')) || 0\n            ) * PI / 180;\n\n            var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n            var categoryData = axisModel.get('data');\n\n            var textEls = [];\n            var silent = isSilent(axisModel);\n            var triggerEvent = axisModel.get('triggerEvent');\n\n            zrUtil.each(ticks, function (tickVal, index) {\n                if (ifIgnoreOnTick(axis, index, opt.labelInterval)) {\n                     return;\n                }\n\n                var itemLabelModel = labelModel;\n                if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n                    itemLabelModel = new Model(\n                        categoryData[tickVal].textStyle, labelModel, axisModel.ecModel\n                    );\n                }\n\n                var textColor = itemLabelModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color');\n\n                var tickCoord = axis.dataToCoord(tickVal);\n                var pos = [\n                    tickCoord,\n                    opt.labelOffset + opt.labelDirection * labelMargin\n                ];\n                var labelStr = axis.scale.getLabel(tickVal);\n\n                var textEl = new graphic.Text({\n                    // Id for animation\n                    anid: 'label_' + tickVal,\n                    position: pos,\n                    rotation: labelLayout.rotation,\n                    silent: silent,\n                    z2: 10\n                });\n\n                graphic.setTextStyle(textEl.style, itemLabelModel, {\n                    text: labels[index],\n                    textAlign: itemLabelModel.getShallow('align', true)\n                        || labelLayout.textAlign,\n                    textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true)\n                        || itemLabelModel.getShallow('baseline', true)\n                        || labelLayout.textVerticalAlign,\n                    textFill: typeof textColor === 'function'\n                        ? textColor(\n                            // (1) In category axis with data zoom, tick is not the original\n                            // index of axis.data. So tick should not be exposed to user\n                            // in category axis.\n                            // (2) Compatible with previous version, which always returns labelStr.\n                            // But in interval scale labelStr is like '223,445', which maked\n                            // user repalce ','. So we modify it to return original val but remain\n                            // it as 'string' to avoid error in replacing.\n                            axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal,\n                            index\n                        )\n                        : textColor\n                });\n\n                // Pack data for mouse event\n                if (triggerEvent) {\n                    textEl.eventData = makeAxisEventDataBase(axisModel);\n                    textEl.eventData.targetType = 'axisLabel';\n                    textEl.eventData.value = labelStr;\n                }\n\n                // FIXME\n                this._dumbGroup.add(textEl);\n                textEl.updateTransform();\n\n                textEls.push(textEl);\n                this.group.add(textEl);\n\n                textEl.decomposeTransform();\n\n            }, this);\n\n            fixMinMaxLabelShow(axisModel, textEls);\n        },\n\n        /**\n         * @private\n         */\n        axisName: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var name = retrieve(opt.axisName, axisModel.get('name'));\n\n            if (!name) {\n                return;\n            }\n\n            var nameLocation = axisModel.get('nameLocation');\n            var nameDirection = opt.nameDirection;\n            var textStyleModel = axisModel.getModel('nameTextStyle');\n            var gap = axisModel.get('nameGap') || 0;\n\n            var extent = this.axisModel.axis.getExtent();\n            var gapSignal = extent[0] > extent[1] ? -1 : 1;\n            var pos = [\n                nameLocation === 'start'\n                    ? extent[0] - gapSignal * gap\n                    : nameLocation === 'end'\n                    ? extent[1] + gapSignal * gap\n                    : (extent[0] + extent[1]) / 2, // 'middle'\n                // Reuse labelOffset.\n                nameLocation === 'middle' ? opt.labelOffset + nameDirection * gap : 0\n            ];\n\n            var labelLayout;\n\n            var nameRotation = axisModel.get('nameRotate');\n            if (nameRotation != null) {\n                nameRotation = nameRotation * PI / 180; // To radian.\n            }\n\n            var axisNameAvailableWidth;\n\n            if (nameLocation === 'middle') {\n                labelLayout = innerTextLayout(\n                    opt.rotation,\n                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n                    nameDirection\n                );\n            }\n            else {\n                labelLayout = endTextLayout(\n                    opt, nameLocation, nameRotation || 0, extent\n                );\n\n                axisNameAvailableWidth = opt.axisNameAvailableWidth;\n                if (axisNameAvailableWidth != null) {\n                    axisNameAvailableWidth = Math.abs(\n                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\n                    );\n                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n                }\n            }\n\n            var textFont = textStyleModel.getFont();\n\n            var truncateOpt = axisModel.get('nameTruncate', true) || {};\n            var ellipsis = truncateOpt.ellipsis;\n            var maxWidth = retrieve(\n                opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth\n            );\n            // FIXME\n            // truncate rich text? (consider performance)\n            var truncatedText = (ellipsis != null && maxWidth != null)\n                ? formatUtil.truncateText(\n                    name, maxWidth, textFont, ellipsis,\n                    {minChar: 2, placeholder: truncateOpt.placeholder}\n                )\n                : name;\n\n            var tooltipOpt = axisModel.get('tooltip', true);\n\n            var mainType = axisModel.mainType;\n            var formatterParams = {\n                componentType: mainType,\n                name: name,\n                $vars: ['name']\n            };\n            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n\n            var textEl = new graphic.Text({\n                // Id for animation\n                anid: 'name',\n\n                __fullText: name,\n                __truncatedText: truncatedText,\n\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: isSilent(axisModel),\n                z2: 1,\n                tooltip: (tooltipOpt && tooltipOpt.show)\n                    ? zrUtil.extend({\n                        content: name,\n                        formatter: function () {\n                            return name;\n                        },\n                        formatterParams: formatterParams\n                    }, tooltipOpt)\n                    : null\n            });\n\n            graphic.setTextStyle(textEl.style, textStyleModel, {\n                text: truncatedText,\n                textFont: textFont,\n                textFill: textStyleModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color'),\n                textAlign: labelLayout.textAlign,\n                textVerticalAlign: labelLayout.textVerticalAlign\n            });\n\n            if (axisModel.get('triggerEvent')) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisName';\n                textEl.eventData.name = name;\n            }\n\n            // FIXME\n            this._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            this.group.add(textEl);\n\n            textEl.decomposeTransform();\n        }\n\n    };\n\n    /**\n     * @public\n     * @static\n     * @param {Object} opt\n     * @param {number} axisRotation in radian\n     * @param {number} textRotation in radian\n     * @param {number} direction\n     * @return {Object} {\n     *  rotation, // according to axis\n     *  textAlign,\n     *  textVerticalAlign\n     * }\n     */\n    var innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n        var rotationDiff = remRadian(textRotation - axisRotation);\n        var textAlign;\n        var textVerticalAlign;\n\n        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n\n            if (rotationDiff > 0 && rotationDiff < PI) {\n                textAlign = direction > 0 ? 'right' : 'left';\n            }\n            else {\n                textAlign = direction > 0 ? 'left' : 'right';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    };\n\n    function endTextLayout(opt, textPosition, textRotate, extent) {\n        var rotationDiff = remRadian(textRotate - opt.rotation);\n        var textAlign;\n        var textVerticalAlign;\n        var inverse = extent[0] > extent[1];\n        var onLeft = (textPosition === 'start' && !inverse)\n            || (textPosition !== 'start' && inverse);\n\n        if (isRadianAroundZero(rotationDiff - PI / 2)) {\n            textVerticalAlign = onLeft ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n            textVerticalAlign = onLeft ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n                textAlign = onLeft ? 'left' : 'right';\n            }\n            else {\n                textAlign = onLeft ? 'right' : 'left';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    function isSilent(axisModel) {\n        var tooltipOpt = axisModel.get('tooltip');\n        return axisModel.get('silent')\n            // Consider mouse cursor, add these restrictions.\n            || !(\n                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\n            );\n    }\n\n    function fixMinMaxLabelShow(axisModel, textEls) {\n        // If min or max are user set, we need to check\n        // If the tick on min(max) are overlap on their neighbour tick\n        // If they are overlapped, we need to hide the min(max) tick label\n        var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n        var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n        var firstLabel = textEls[0];\n        var nextLabel = textEls[1];\n        var lastLabel = textEls[textEls.length - 1];\n        var prevLabel = textEls[textEls.length - 2];\n\n        if (showMinLabel === false) {\n            firstLabel.ignore = true;\n        }\n        else if (axisModel.getMin() != null && isTwoLabelOverlapped(firstLabel, nextLabel)) {\n            showMinLabel ? (nextLabel.ignore = true) : (firstLabel.ignore = true);\n        }\n\n        if (showMaxLabel === false) {\n            lastLabel.ignore = true;\n        }\n        else if (axisModel.getMax() != null && isTwoLabelOverlapped(prevLabel, lastLabel)) {\n            showMaxLabel ? (prevLabel.ignore = true) : (lastLabel.ignore = true);\n        }\n    }\n\n    function isTwoLabelOverlapped(current, next, labelLayout) {\n        // current and next has the same rotation.\n        var firstRect = current && current.getBoundingRect().clone();\n        var nextRect = next && next.getBoundingRect().clone();\n\n        if (!firstRect || !nextRect) {\n            return;\n        }\n\n        // When checking intersect of two rotated labels, we use mRotationBack\n        // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n        var mRotationBack = matrix.identity([]);\n        matrix.rotate(mRotationBack, mRotationBack, -current.rotation);\n\n        firstRect.applyTransform(matrix.mul([], mRotationBack, current.getLocalTransform()));\n        nextRect.applyTransform(matrix.mul([], mRotationBack, next.getLocalTransform()));\n\n        return firstRect.intersect(nextRect);\n    }\n\n\n    /**\n     * @static\n     */\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval) {\n        var rawTick;\n        var scale = axis.scale;\n        return scale.type === 'ordinal'\n            && (\n                typeof interval === 'function'\n                    ? (\n                        rawTick = scale.getTicks()[i],\n                        !interval(rawTick, scale.getLabel(rawTick))\n                    )\n                    : i % (interval + 1)\n            );\n    };\n\n    /**\n     * @static\n     */\n    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n        var interval = model.get('interval');\n        if (interval == null || interval == 'auto') {\n            interval = labelInterval;\n        }\n        return interval;\n    };\n\n    module.exports = AxisBuilder;\n\n\n\n/***/ }),\n\n/***/ 650:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var numberUtil = __webpack_require__(610);\n    var linearMap = numberUtil.linearMap;\n    var zrUtil = __webpack_require__(606);\n    var axisHelper = __webpack_require__(620);\n\n    function fixExtentWithBands(extent, nTick) {\n        var size = extent[1] - extent[0];\n        var len = nTick;\n        var margin = size / len / 2;\n        extent[0] += margin;\n        extent[1] -= margin;\n    }\n\n    var normalizedExtent = [0, 1];\n    /**\n     * @name module:echarts/coord/CartesianAxis\n     * @constructor\n     */\n    var Axis = function (dim, scale, extent) {\n\n        /**\n         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n         * @type {string}\n         */\n        this.dim = dim;\n\n        /**\n         * Axis scale\n         * @type {module:echarts/coord/scale/*}\n         */\n        this.scale = scale;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        this._extent = extent || [0, 0];\n\n        /**\n         * @type {boolean}\n         */\n        this.inverse = false;\n\n        /**\n         * Usually true when axis has a ordinal scale\n         * @type {boolean}\n         */\n        this.onBand = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._labelInterval;\n    };\n\n    Axis.prototype = {\n\n        constructor: Axis,\n\n        /**\n         * If axis extent contain given coord\n         * @param {number} coord\n         * @return {boolean}\n         */\n        contain: function (coord) {\n            var extent = this._extent;\n            var min = Math.min(extent[0], extent[1]);\n            var max = Math.max(extent[0], extent[1]);\n            return coord >= min && coord <= max;\n        },\n\n        /**\n         * If axis extent contain given data\n         * @param {number} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.contain(this.dataToCoord(data));\n        },\n\n        /**\n         * Get coord extent.\n         * @return {Array.<number>}\n         */\n        getExtent: function () {\n            return this._extent.slice();\n        },\n\n        /**\n         * Get precision used for formatting\n         * @param {Array.<number>} [dataExtent]\n         * @return {number}\n         */\n        getPixelPrecision: function (dataExtent) {\n            return numberUtil.getPixelPrecision(\n                dataExtent || this.scale.getExtent(),\n                this._extent\n            );\n        },\n\n        /**\n         * Set coord extent\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var extent = this._extent;\n            extent[0] = start;\n            extent[1] = end;\n        },\n\n        /**\n         * Convert data to coord. Data is the rank if it has a ordinal scale\n         * @param {number} data\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        dataToCoord: function (data, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n            data = scale.normalize(data);\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            return linearMap(data, normalizedExtent, extent, clamp);\n        },\n\n        /**\n         * Convert coord to data. Data is the rank if it has a ordinal scale\n         * @param {number} coord\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        coordToData: function (coord, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            var t = linearMap(coord, extent, normalizedExtent, clamp);\n\n            return this.scale.scale(t);\n        },\n\n        /**\n         * Convert pixel point to data in axis\n         * @param {Array.<number>} point\n         * @param  {boolean} clamp\n         * @return {number} data\n         */\n        pointToData: function (point, clamp) {\n            // Should be implemented in derived class if necessary.\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicksCoords: function (alignWithLabel) {\n            if (this.onBand && !alignWithLabel) {\n                var bands = this.getBands();\n                var coords = [];\n                for (var i = 0; i < bands.length; i++) {\n                    coords.push(bands[i][0]);\n                }\n                if (bands[i - 1]) {\n                    coords.push(bands[i - 1][1]);\n                }\n                return coords;\n            }\n            else {\n                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n            }\n        },\n\n        /**\n         * Coords of labels are on the ticks or on the middle of bands\n         * @return {Array.<number>}\n         */\n        getLabelsCoords: function () {\n            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n        },\n\n        /**\n         * Get bands.\n         *\n         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n         * |---1---|---2---|---3---|---4---|.\n         *\n         * @return {Array}\n         */\n         // FIXME Situation when labels is on ticks\n        getBands: function () {\n            var extent = this.getExtent();\n            var bands = [];\n            var len = this.scale.count();\n            var start = extent[0];\n            var end = extent[1];\n            var span = end - start;\n\n            for (var i = 0; i < len; i++) {\n                bands.push([\n                    span * i / len + start,\n                    span * (i + 1) / len + start\n                ]);\n            }\n            return bands;\n        },\n\n        /**\n         * Get width of band\n         * @return {number}\n         */\n        getBandWidth: function () {\n            var axisExtent = this._extent;\n            var dataExtent = this.scale.getExtent();\n\n            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\n            // Fix #2728, avoid NaN when only one data.\n            len === 0 && (len = 1);\n\n            var size = Math.abs(axisExtent[1] - axisExtent[0]);\n\n            return Math.abs(size) / len;\n        },\n\n        /**\n         * Get interval of the axis label.\n         * @return {number}\n         */\n        getLabelInterval: function () {\n            var labelInterval = this._labelInterval;\n            if (!labelInterval) {\n                var axisModel = this.model;\n                var labelModel = axisModel.getModel('axisLabel');\n                var interval = labelModel.get('interval');\n                if (!(this.type === 'category' && interval === 'auto')) {\n                    labelInterval = interval === 'auto' ? 0 : interval;\n                }\n                else if (this.isHorizontal){\n                    labelInterval = axisHelper.getAxisLabelInterval(\n                        zrUtil.map(this.scale.getTicks(), this.dataToCoord, this),\n                        axisModel.getFormattedLabels(),\n                        labelModel.getFont(),\n                        this.isHorizontal()\n                    );\n                }\n                this._labelInterval = labelInterval;\n            }\n            return labelInterval;\n        }\n\n    };\n\n    module.exports = Axis;\n\n\n/***/ }),\n\n/***/ 651:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var axisHelper = __webpack_require__(620);\n\n    function getName(obj) {\n        if (zrUtil.isObject(obj) && obj.value != null) {\n            return obj.value;\n        }\n        else {\n            return obj + '';\n        }\n    }\n\n    module.exports = {\n\n        /**\n         * Format labels\n         * @return {Array.<string>}\n         */\n        getFormattedLabels: function () {\n            return axisHelper.getFormattedLabels(\n                this.axis,\n                this.get('axisLabel.formatter')\n            );\n        },\n\n        /**\n         * Get categories\n         */\n        getCategories: function () {\n            return this.get('type') === 'category'\n                && zrUtil.map(this.get('data'), getName);\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n         */\n        getMin: function (origin) {\n            var option = this.option;\n            var min = (!origin && option.rangeStart != null)\n                ? option.rangeStart : option.min;\n\n            if (this.axis && min != null && min !== 'dataMin' && !zrUtil.eqNaN(min)) {\n                min = this.axis.scale.parse(min);\n            }\n            return min;\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n         */\n        getMax: function (origin) {\n            var option = this.option;\n            var max = (!origin && option.rangeEnd != null)\n                ? option.rangeEnd : option.max;\n\n            if (this.axis && max != null && max !== 'dataMax' && !zrUtil.eqNaN(max)) {\n                max = this.axis.scale.parse(max);\n            }\n            return max;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        getNeedCrossZero: function () {\n            var option = this.option;\n            return (option.rangeStart != null || option.rangeEnd != null)\n                ? false : !option.scale;\n        },\n\n        /**\n         * Should be implemented by each axis model if necessary.\n         * @return {module:echarts/model/Component} coordinate system model\n         */\n        getCoordSysModel: zrUtil.noop,\n\n        /**\n         * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n         * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n         */\n        setRange: function (rangeStart, rangeEnd) {\n            this.option.rangeStart = rangeStart;\n            this.option.rangeEnd = rangeEnd;\n        },\n\n        /**\n         * Reset range\n         */\n        resetRange: function () {\n            // rangeStart and rangeEnd is readonly.\n            this.option.rangeStart = this.option.rangeEnd = null;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 657:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var zrUtil = __webpack_require__(606);\n    var symbolUtil = __webpack_require__(639);\n    var graphic = __webpack_require__(608);\n    var numberUtil = __webpack_require__(610);\n    var labelHelper = __webpack_require__(701);\n\n    function getSymbolSize(data, idx) {\n        var symbolSize = data.getItemVisual(idx, 'symbolSize');\n        return symbolSize instanceof Array\n            ? symbolSize.slice()\n            : [+symbolSize, +symbolSize];\n    }\n\n    function getScale(symbolSize) {\n        return [symbolSize[0] / 2, symbolSize[1] / 2];\n    }\n\n    /**\n     * @constructor\n     * @alias {module:echarts/chart/helper/Symbol}\n     * @param {module:echarts/data/List} data\n     * @param {number} idx\n     * @extends {module:zrender/graphic/Group}\n     */\n    function Symbol(data, idx, seriesScope) {\n        graphic.Group.call(this);\n\n        this.updateData(data, idx, seriesScope);\n    }\n\n    var symbolProto = Symbol.prototype;\n\n    function driftSymbol(dx, dy) {\n        this.parent.drift(dx, dy);\n    }\n\n    symbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n        // Remove paths created before\n        this.removeAll();\n\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // var symbolPath = symbolUtil.createSymbol(\n        //     symbolType, -0.5, -0.5, 1, 1, color\n        // );\n        // If width/height are set too small (e.g., set to 1) on ios10\n        // and macOS Sierra, a circle stroke become a rect, no matter what\n        // the scale is set. So we set width/height as 2. See #4150.\n        var symbolPath = symbolUtil.createSymbol(\n            symbolType, -1, -1, 2, 2, color\n        );\n\n        symbolPath.attr({\n            z2: 100,\n            culling: true,\n            scale: [0, 0]\n        });\n        // Rewrite drift method\n        symbolPath.drift = driftSymbol;\n\n        graphic.initProps(symbolPath, {\n            scale: getScale(symbolSize)\n        }, seriesModel, idx);\n        this._symbolType = symbolType;\n\n        this.add(symbolPath);\n    };\n\n    /**\n     * Stop animation\n     * @param {boolean} toLastFrame\n     */\n    symbolProto.stopSymbolAnimation = function (toLastFrame) {\n        this.childAt(0).stopAnimation(toLastFrame);\n    };\n\n    /**\n     * Get symbol path element\n     */\n    symbolProto.getSymbolPath = function () {\n        return this.childAt(0);\n    };\n\n    /**\n     * Get scale(aka, current symbol size).\n     * Including the change caused by animation\n     */\n    symbolProto.getScale = function () {\n        return this.childAt(0).scale;\n    };\n\n    /**\n     * Highlight symbol\n     */\n    symbolProto.highlight = function () {\n        this.childAt(0).trigger('emphasis');\n    };\n\n    /**\n     * Downplay symbol\n     */\n    symbolProto.downplay = function () {\n        this.childAt(0).trigger('normal');\n    };\n\n    /**\n     * @param {number} zlevel\n     * @param {number} z\n     */\n    symbolProto.setZ = function (zlevel, z) {\n        var symbolPath = this.childAt(0);\n        symbolPath.zlevel = zlevel;\n        symbolPath.z = z;\n    };\n\n    symbolProto.setDraggable = function (draggable) {\n        var symbolPath = this.childAt(0);\n        symbolPath.draggable = draggable;\n        symbolPath.cursor = draggable ? 'move' : 'pointer';\n    };\n\n    /**\n     * Update symbol properties\n     * @param  {module:echarts/data/List} data\n     * @param  {number} idx\n     */\n    symbolProto.updateData = function (data, idx, seriesScope) {\n        this.silent = false;\n\n        var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n        var seriesModel = data.hostModel;\n        var symbolSize = getSymbolSize(data, idx);\n\n        if (symbolType !== this._symbolType) {\n            this._createSymbol(symbolType, data, idx, symbolSize);\n        }\n        else {\n            var symbolPath = this.childAt(0);\n            symbolPath.silent = false;\n            graphic.updateProps(symbolPath, {\n                scale: getScale(symbolSize)\n            }, seriesModel, idx);\n        }\n        this._updateCommon(data, idx, symbolSize, seriesScope);\n        this._seriesModel = seriesModel;\n    };\n\n    // Update common properties\n    var normalStyleAccessPath = ['itemStyle', 'normal'];\n    var emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n    var normalLabelAccessPath = ['label', 'normal'];\n    var emphasisLabelAccessPath = ['label', 'emphasis'];\n\n    symbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n        var symbolPath = this.childAt(0);\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // Reset style\n        if (symbolPath.type !== 'image') {\n            symbolPath.useStyle({\n                strokeNoScale: true\n            });\n        }\n\n        seriesScope = seriesScope || null;\n\n        var itemStyle = seriesScope && seriesScope.itemStyle;\n        var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n        var symbolRotate = seriesScope && seriesScope.symbolRotate;\n        var symbolOffset = seriesScope && seriesScope.symbolOffset;\n        var labelModel = seriesScope && seriesScope.labelModel;\n        var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n        var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n        var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n        if (!seriesScope || data.hasItemOption) {\n            var itemModel = data.getItemModel(idx);\n\n            // Color must be excluded.\n            // Because symbol provide setColor individually to set fill and stroke\n            itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n            hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n\n            symbolRotate = itemModel.getShallow('symbolRotate');\n            symbolOffset = itemModel.getShallow('symbolOffset');\n\n            labelModel = itemModel.getModel(normalLabelAccessPath);\n            hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n            hoverAnimation = itemModel.getShallow('hoverAnimation');\n            cursorStyle = itemModel.getShallow('cursor');\n        }\n        else {\n            hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n        }\n\n        var elStyle = symbolPath.style;\n\n        symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n        if (symbolOffset) {\n            symbolPath.attr('position', [\n                numberUtil.parsePercent(symbolOffset[0], symbolSize[0]),\n                numberUtil.parsePercent(symbolOffset[1], symbolSize[1])\n            ]);\n        }\n\n        cursorStyle && symbolPath.attr('cursor', cursorStyle);\n\n        // PENDING setColor before setStyle!!!\n        symbolPath.setColor(color);\n\n        symbolPath.setStyle(itemStyle);\n\n        var opacity = data.getItemVisual(idx, 'opacity');\n        if (opacity != null) {\n            elStyle.opacity = opacity;\n        }\n\n        var valueDim = labelHelper.findLabelValueDim(data);\n\n        if (valueDim != null) {\n            graphic.setText(elStyle, labelModel, color);\n            var normalText = seriesModel.getFormattedLabel(idx, 'normal');\n            var value = data.get(valueDim, idx);\n            elStyle.text = labelModel.getShallow('show')\n                ? zrUtil.retrieve2(\n                    normalText,\n                    value\n                )\n                : null;\n\n            graphic.setText(hoverItemStyle, hoverLabelModel, false);\n            hoverItemStyle.text = hoverLabelModel.getShallow('show')\n                ? zrUtil.retrieve3(\n                    seriesModel.getFormattedLabel(idx, 'emphasis'),\n                    normalText,\n                    value\n                )\n                : null;\n        }\n\n        symbolPath.off('mouseover')\n            .off('mouseout')\n            .off('emphasis')\n            .off('normal');\n\n        symbolPath.hoverStyle = hoverItemStyle;\n\n        graphic.setHoverStyle(symbolPath);\n\n        var scale = getScale(symbolSize);\n\n        if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n            var onEmphasis = function() {\n                var ratio = scale[1] / scale[0];\n                this.animateTo({\n                    scale: [\n                        Math.max(scale[0] * 1.1, scale[0] + 3),\n                        Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)\n                    ]\n                }, 400, 'elasticOut');\n            };\n            var onNormal = function() {\n                this.animateTo({\n                    scale: scale\n                }, 400, 'elasticOut');\n            };\n            symbolPath.on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n    };\n\n    symbolProto.fadeOut = function (cb) {\n        var symbolPath = this.childAt(0);\n        // Avoid mistaken hover when fading out\n        this.silent = symbolPath.silent = true;\n        // Not show text when animating\n        symbolPath.style.text = null;\n        graphic.updateProps(symbolPath, {\n            scale: [0, 0]\n        }, this._seriesModel, this.dataIndex, cb);\n    };\n\n    zrUtil.inherits(Symbol, graphic.Group);\n\n    module.exports = Symbol;\n\n\n/***/ }),\n\n/***/ 658:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var axisPointerModelHelper = __webpack_require__(629);\n\n    /**\n     * Base class of AxisView.\n     */\n    var AxisView = __webpack_require__(607).extendComponentView({\n\n        type: 'axis',\n\n        /**\n         * @private\n         */\n        _axisPointer: null,\n\n        /**\n         * @protected\n         * @type {string}\n         */\n        axisPointerClass: null,\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n            // FIXME\n            // This process should proformed after coordinate systems updated\n            // (axis scale updated), and should be performed each time update.\n            // So put it here temporarily, although it is not appropriate to\n            // put a model-writing procedure in `view`.\n            this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n\n            AxisView.superApply(this, 'render', arguments);\n\n            updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n        },\n\n        /**\n         * Action handler.\n         * @public\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/model/Global} ecModel\n         * @param {module:echarts/ExtensionAPI} api\n         * @param {Object} payload\n         */\n        updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n            updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            var axisPointer = this._axisPointer;\n            axisPointer && axisPointer.remove(api);\n            AxisView.superApply(this, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            disposeAxisPointer(this, api);\n            AxisView.superApply(this, 'dispose', arguments);\n        }\n\n    });\n\n    function updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n        var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n        if (!Clazz) {\n            return;\n        }\n        var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n        axisPointerModel\n            ? (axisView._axisPointer || (axisView._axisPointer = new Clazz()))\n                .render(axisModel, axisPointerModel, api, forceRender)\n            : disposeAxisPointer(axisView, api);\n    }\n\n    function disposeAxisPointer(axisView, ecModel, api) {\n        var axisPointer = axisView._axisPointer;\n        axisPointer && axisPointer.dispose(ecModel, api);\n        axisView._axisPointer = null;\n    }\n\n    var axisPointerClazz = [];\n\n    AxisView.registerAxisPointerClass = function (type, clazz) {\n        if (__DEV__) {\n            if (axisPointerClazz[type]) {\n                throw new Error('axisPointer ' + type + ' exists');\n            }\n        }\n        axisPointerClazz[type] = clazz;\n    };\n\n    AxisView.getAxisPointerClass = function (type) {\n        return type && axisPointerClazz[type];\n    };\n\n    module.exports = AxisView;\n\n\n/***/ }),\n\n/***/ 659:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(606);\n\n    var helper = {};\n\n    /**\n     * @param {Object} opt {labelInside}\n     * @return {Object} {\n     *  position, rotation, labelDirection, labelOffset,\n     *  tickDirection, labelRotate, labelInterval, z2\n     * }\n     */\n    helper.layout = function (gridModel, axisModel, opt) {\n        opt = opt || {};\n        var grid = gridModel.coordinateSystem;\n        var axis = axisModel.axis;\n        var layout = {};\n\n        var rawAxisPosition = axis.position;\n        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n        var axisDim = axis.dim;\n\n        var rect = grid.getRect();\n        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n        var idx = {left: 0, right: 1, top: 0, bottom: 1, onZero: 2};\n        var axisOffset = axisModel.get('offset') || 0;\n\n        var posBound = axisDim === 'x'\n            ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset]\n            : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n        if (axis.onZero) {\n            var otherAxis = grid.getAxis(axisDim === 'x' ? 'y' : 'x', axis.onZeroAxisIndex);\n            var onZeroCoord = otherAxis.toGlobalCoord(otherAxis.dataToCoord(0));\n            posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n        }\n\n        // Axis position\n        layout.position = [\n            axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0],\n            axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]\n        ];\n\n        // Axis rotation\n        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\n\n        // Tick and label direction, x y is axisDim\n        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\n\n        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n        layout.labelOffset = axis.onZero ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n        if (axisModel.get('axisTick.inside')) {\n            layout.tickDirection = -layout.tickDirection;\n        }\n        if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n            layout.labelDirection = -layout.labelDirection;\n        }\n\n        // Special label rotation\n        var labelRotate = axisModel.get('axisLabel.rotate');\n        layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate;\n\n        // label interval when auto mode.\n        layout.labelInterval = axis.getLabelInterval();\n\n        // Over splitLine and splitArea\n        layout.z2 = 1;\n\n        return layout;\n    };\n\n    module.exports = helper;\n\n\n\n/***/ }),\n\n/***/ 660:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var modelUtil = __webpack_require__(609);\n\n    /**\n     * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n     * @param {module:echarts/model/Global} ecModel\n     * @return {Object} {point: [x, y], el: ...} point Will not be null.\n     */\n    module.exports = function (finder, ecModel) {\n        var point = [];\n        var seriesIndex = finder.seriesIndex;\n        var seriesModel;\n        if (seriesIndex == null || !(\n            seriesModel = ecModel.getSeriesByIndex(seriesIndex)\n        )) {\n            return {point: []};\n        }\n\n        var data = seriesModel.getData();\n        var dataIndex = modelUtil.queryDataIndex(data, finder);\n        if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n            return {point: []};\n        }\n\n        var el = data.getItemGraphicEl(dataIndex);\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (seriesModel.getTooltipPosition) {\n            point = seriesModel.getTooltipPosition(dataIndex) || [];\n        }\n        else if (coordSys && coordSys.dataToPoint) {\n            point = coordSys.dataToPoint(\n                data.getValues(\n                    zrUtil.map(coordSys.dimensions, function (dim) {\n                        return seriesModel.coordDimToDataDim(dim)[0];\n                    }), dataIndex, true\n                )\n            ) || [];\n        }\n        else if (el) {\n            // Use graphic bounding rect\n            var rect = el.getBoundingRect().clone();\n            rect.applyTransform(el.transform);\n            point = [\n                rect.x + rect.width / 2,\n                rect.y + rect.height / 2\n            ];\n        }\n\n        return {point: point, el: el};\n    };\n\n\n\n\n/***/ }),\n\n/***/ 661:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var env = __webpack_require__(615);\n    var zrUtil = __webpack_require__(606);\n    var get = __webpack_require__(609).makeGetter();\n\n    var each = zrUtil.each;\n\n    var globalListener = {};\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Function} handler\n     *      param: {string} currTrigger\n     *      param: {Array.<number>} point\n     */\n    globalListener.register = function (key, api, handler) {\n        if (env.node) {\n            return;\n        }\n\n        var zr = api.getZr();\n        get(zr).records || (get(zr).records = {});\n\n        initGlobalListeners(zr, api);\n\n        var record = get(zr).records[key] || (get(zr).records[key] = {});\n        record.handler = handler;\n    };\n\n    function initGlobalListeners(zr, api) {\n        if (get(zr).initialized) {\n            return;\n        }\n\n        get(zr).initialized = true;\n\n        useHandler('click', zrUtil.curry(doEnter, 'click'));\n        useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove'));\n        // useHandler('mouseout', onLeave);\n        useHandler('globalout', onLeave);\n\n        function useHandler(eventType, cb) {\n            zr.on(eventType, function (e) {\n                var dis = makeDispatchAction(api);\n\n                each(get(zr).records, function (record) {\n                    record && cb(record, e, dis.dispatchAction);\n                });\n\n                dispatchTooltipFinally(dis.pendings, api);\n            });\n        }\n    }\n\n    function dispatchTooltipFinally(pendings, api) {\n        var showLen = pendings.showTip.length;\n        var hideLen = pendings.hideTip.length;\n\n        var actuallyPayload;\n        if (showLen) {\n            actuallyPayload = pendings.showTip[showLen - 1];\n        }\n        else if (hideLen) {\n            actuallyPayload = pendings.hideTip[hideLen - 1];\n        }\n        if (actuallyPayload) {\n            actuallyPayload.dispatchAction = null;\n            api.dispatchAction(actuallyPayload);\n        }\n    }\n\n    function onLeave(record, e, dispatchAction) {\n        record.handler('leave', null, dispatchAction);\n    }\n\n    function doEnter(currTrigger, record, e, dispatchAction) {\n        record.handler(currTrigger, e, dispatchAction);\n    }\n\n    function makeDispatchAction(api) {\n        var pendings = {\n            showTip: [],\n            hideTip: []\n        };\n        // FIXME\n        // better approach?\n        // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n        // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n        // So we have to add \"final stage\" to merge those dispatched actions.\n        var dispatchAction = function (payload) {\n            var pendingList = pendings[payload.type];\n            if (pendingList) {\n                pendingList.push(payload);\n            }\n            else {\n                payload.dispatchAction = dispatchAction;\n                api.dispatchAction(payload);\n            }\n        };\n\n        return {\n            dispatchAction: dispatchAction,\n            pendings: pendings\n        };\n    }\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    globalListener.unregister = function (key, api) {\n        if (env.node) {\n            return;\n        }\n        var zr = api.getZr();\n        var record = (get(zr).records || {})[key];\n        if (record) {\n            get(zr).records[key] = null;\n        }\n    };\n\n    module.exports = globalListener;\n\n\n/***/ }),\n\n/***/ 662:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var graphic = __webpack_require__(608);\n    var textContain = __webpack_require__(621);\n    var formatUtil = __webpack_require__(613);\n    var matrix = __webpack_require__(623);\n    var axisHelper = __webpack_require__(620);\n    var AxisBuilder = __webpack_require__(649);\n\n    var helper = {};\n\n    /**\n     * @param {module:echarts/model/Model} axisPointerModel\n     */\n    helper.buildElStyle = function (axisPointerModel) {\n        var axisPointerType = axisPointerModel.get('type');\n        var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n        var style;\n        if (axisPointerType === 'line') {\n            style = styleModel.getLineStyle();\n            style.fill = null;\n        }\n        else if (axisPointerType === 'shadow') {\n            style = styleModel.getAreaStyle();\n            style.stroke = null;\n        }\n        return style;\n    };\n\n    /**\n     * @param {Function} labelPos {align, verticalAlign, position}\n     */\n    helper.buildLabelElOption = function (\n        elOption, axisModel, axisPointerModel, api, labelPos\n    ) {\n        var value = axisPointerModel.get('value');\n        var text = helper.getValueLabel(\n            value, axisModel.axis, axisModel.ecModel,\n            axisPointerModel.get('seriesDataIndices'),\n            {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            }\n        );\n        var labelModel = axisPointerModel.getModel('label');\n        var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n\n        var font = labelModel.getFont();\n        var textRect = textContain.getBoundingRect(text, font);\n\n        var position = labelPos.position;\n        var width = textRect.width + paddings[1] + paddings[3];\n        var height = textRect.height + paddings[0] + paddings[2];\n\n        // Adjust by align.\n        var align = labelPos.align;\n        align === 'right' && (position[0] -= width);\n        align === 'center' && (position[0] -= width / 2);\n        var verticalAlign = labelPos.verticalAlign;\n        verticalAlign === 'bottom' && (position[1] -= height);\n        verticalAlign === 'middle' && (position[1] -= height / 2);\n\n        // Not overflow ec container\n        confineInContainer(position, width, height, api);\n\n        var bgColor = labelModel.get('backgroundColor');\n        if (!bgColor || bgColor === 'auto') {\n            bgColor = axisModel.get('axisLine.lineStyle.color');\n        }\n\n        elOption.label = {\n            shape: {x: 0, y: 0, width: width, height: height, r: labelModel.get('borderRadius')},\n            position: position.slice(),\n            // TODO: rich\n            style: {\n                text: text,\n                textFont: font,\n                textFill: labelModel.getTextColor(),\n                textPosition: 'inside',\n                fill: bgColor,\n                stroke: labelModel.get('borderColor') || 'transparent',\n                lineWidth: labelModel.get('borderWidth') || 0,\n                shadowBlur: labelModel.get('shadowBlur'),\n                shadowColor: labelModel.get('shadowColor'),\n                shadowOffsetX: labelModel.get('shadowOffsetX'),\n                shadowOffsetY: labelModel.get('shadowOffsetY')\n            },\n            // Lable should be over axisPointer.\n            z2: 10\n        };\n    };\n\n    // Do not overflow ec container\n    function confineInContainer(position, width, height, api) {\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n        position[0] = Math.min(position[0] + width, viewWidth) - width;\n        position[1] = Math.min(position[1] + height, viewHeight) - height;\n        position[0] = Math.max(position[0], 0);\n        position[1] = Math.max(position[1], 0);\n    }\n\n    /**\n     * @param {number} value\n     * @param {module:echarts/coord/Axis} axis\n     * @param {module:echarts/model/Global} ecModel\n     * @param {Object} opt\n     * @param {Array.<Object>} seriesDataIndices\n     * @param {number|string} opt.precision 'auto' or a number\n     * @param {string|Function} opt.formatter label formatter\n     */\n    helper.getValueLabel = function (value, axis, ecModel, seriesDataIndices, opt) {\n        var text = axis.scale.getLabel(\n            // If `precision` is set, width can be fixed (like '12.00500'), which\n            // helps to debounce when when moving label.\n            value, {precision: opt.precision}\n        );\n        var formatter = opt.formatter;\n\n        if (formatter) {\n            var params = {\n                value: axisHelper.getAxisRawValue(axis, value),\n                seriesData: []\n            };\n            zrUtil.each(seriesDataIndices, function (idxItem) {\n                var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                var dataIndex = idxItem.dataIndexInside;\n                var dataParams = series && series.getDataParams(dataIndex);\n                dataParams && params.seriesData.push(dataParams);\n            });\n\n            if (zrUtil.isString(formatter)) {\n                text = formatter.replace('{value}', text);\n            }\n            else if (zrUtil.isFunction(formatter)) {\n                text = formatter(params);\n            }\n        }\n\n        return text;\n    };\n\n    /**\n     * @param {module:echarts/coord/Axis} axis\n     * @param {number} value\n     * @param {Object} layoutInfo {\n     *  rotation, position, labelOffset, labelDirection, labelMargin\n     * }\n     */\n    helper.getTransformedPosition = function (axis, value, layoutInfo) {\n        var transform = matrix.create();\n        matrix.rotate(transform, transform, layoutInfo.rotation);\n        matrix.translate(transform, transform, layoutInfo.position);\n\n        return graphic.applyTransform([\n            axis.dataToCoord(value),\n            (layoutInfo.labelOffset || 0)\n                + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)\n        ], transform);\n    };\n\n    helper.buildCartesianSingleLabelElOption = function (\n        value, elOption, layoutInfo, axisModel, axisPointerModel, api\n    ) {\n        var textLayout = AxisBuilder.innerTextLayout(\n            layoutInfo.rotation, 0, layoutInfo.labelDirection\n        );\n        layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n        helper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n            position: helper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n            align: textLayout.textAlign,\n            verticalAlign: textLayout.textVerticalAlign\n        });\n    };\n\n    /**\n     * @param {Array.<number>} p1\n     * @param {Array.<number>} p2\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeLineShape = function (p1, p2, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x1: p1[xDimIndex],\n            y1: p1[1 - xDimIndex],\n            x2: p2[xDimIndex],\n            y2: p2[1 - xDimIndex]\n        };\n    };\n\n    /**\n     * @param {Array.<number>} xy\n     * @param {Array.<number>} wh\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeRectShape = function (xy, wh, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x: xy[xDimIndex],\n            y: xy[1 - xDimIndex],\n            width: wh[xDimIndex],\n            height: wh[1 - xDimIndex]\n        };\n    };\n\n    helper.makeSectorShape = function (cx, cy, r0, r, startAngle, endAngle) {\n        return {\n            cx: cx,\n            cy: cy,\n            r0: r0,\n            r: r,\n            startAngle: startAngle,\n            endAngle: endAngle,\n            clockwise: true\n        };\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n\n/***/ 663:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var ComponentModel = __webpack_require__(618);\n    var zrUtil = __webpack_require__(606);\n    var axisModelCreator = __webpack_require__(725);\n\n    var AxisModel = ComponentModel.extend({\n\n        type: 'cartesian2dAxis',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Axis2D}\n         */\n        axis: null,\n\n        /**\n         * @override\n         */\n        init: function () {\n            AxisModel.superApply(this, 'init', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function () {\n            AxisModel.superApply(this, 'mergeOption', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        restoreData: function () {\n            AxisModel.superApply(this, 'restoreData', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         * @return {module:echarts/model/Component}\n         */\n        getCoordSysModel: function () {\n            return this.ecModel.queryComponents({\n                mainType: 'grid',\n                index: this.option.gridIndex,\n                id: this.option.gridId\n            })[0];\n        }\n\n    });\n\n    function getAxisType(axisDim, option) {\n        // Default axis with data is category axis\n        return option.type || (option.data ? 'category' : 'value');\n    }\n\n    zrUtil.merge(AxisModel.prototype, __webpack_require__(651));\n\n    var extraOption = {\n        // gridIndex: 0,\n        // gridId: '',\n\n        // Offset is for multiple axis on the same position\n        offset: 0\n    };\n\n    axisModelCreator('x', AxisModel, getAxisType, extraOption);\n    axisModelCreator('y', AxisModel, getAxisType, extraOption);\n\n    module.exports = AxisModel;\n\n\n/***/ }),\n\n/***/ 664:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var classUtil = __webpack_require__(616);\n    var set = classUtil.set;\n    var get = classUtil.get;\n\n    module.exports = {\n        clearColorPalette: function () {\n            set(this, 'colorIdx', 0);\n            set(this, 'colorNameMap', {});\n        },\n\n        getColorFromPalette: function (name, scope) {\n            scope = scope || this;\n            var colorIdx = get(scope, 'colorIdx') || 0;\n            var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {});\n            // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n            if (colorNameMap.hasOwnProperty(name)) {\n                return colorNameMap[name];\n            }\n            var colorPalette = this.get('color', true) || [];\n            if (!colorPalette.length) {\n                return;\n            }\n\n            var color = colorPalette[colorIdx];\n            if (name) {\n                colorNameMap[name] = color;\n            }\n            set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n\n            return color;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 665:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * For testable.\n */\n\n\n    var numberUtil = __webpack_require__(610);\n\n    var roundNumber = numberUtil.round;\n\n    var helper = {};\n\n    /**\n     * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n     *                                Should be extent[0] < extent[1].\n     * @param {number} splitNumber splitNumber should be >= 1.\n     * @param {number} [minInterval]\n     * @param {number} [maxInterval]\n     * @return {Object} {interval, intervalPrecision, niceTickExtent}\n     */\n    helper.intervalScaleNiceTicks = function (extent, splitNumber, minInterval, maxInterval) {\n        var result = {};\n        var span = extent[1] - extent[0];\n\n        var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n        if (minInterval != null && interval < minInterval) {\n            interval = result.interval = minInterval;\n        }\n        if (maxInterval != null && interval > maxInterval) {\n            interval = result.interval = maxInterval;\n        }\n        // Tow more digital for tick.\n        var precision = result.intervalPrecision = helper.getIntervalPrecision(interval);\n        // Niced extent inside original extent\n        var niceTickExtent = result.niceTickExtent = [\n            roundNumber(Math.ceil(extent[0] / interval) * interval, precision),\n            roundNumber(Math.floor(extent[1] / interval) * interval, precision)\n        ];\n\n        helper.fixExtent(niceTickExtent, extent);\n\n        return result;\n    };\n\n    /**\n     * @param {number} interval\n     * @return {number} interval precision\n     */\n    helper.getIntervalPrecision = function (interval) {\n        // Tow more digital for tick.\n        return numberUtil.getPrecisionSafe(interval) + 2;\n    };\n\n    function clamp(niceTickExtent, idx, extent) {\n        niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n    }\n\n    // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n    helper.fixExtent = function (niceTickExtent, extent) {\n        !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n        !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n        clamp(niceTickExtent, 0, extent);\n        clamp(niceTickExtent, 1, extent);\n        if (niceTickExtent[0] > niceTickExtent[1]) {\n            niceTickExtent[0] = niceTickExtent[1];\n        }\n    };\n\n    helper.intervalScaleGetTicks = function (interval, extent, niceTickExtent, intervalPrecision) {\n        var ticks = [];\n\n        // If interval is 0, return [];\n        if (!interval) {\n            return ticks;\n        }\n\n        // Consider this case: using dataZoom toolbox, zoom and zoom.\n        var safeLimit = 10000;\n\n        if (extent[0] < niceTickExtent[0]) {\n            ticks.push(extent[0]);\n        }\n        var tick = niceTickExtent[0];\n\n        while (tick <= niceTickExtent[1]) {\n            ticks.push(tick);\n            // Avoid rounding error\n            tick = roundNumber(tick + interval, intervalPrecision);\n            if (tick === ticks[ticks.length - 1]) {\n                // Consider out of safe float point, e.g.,\n                // -3711126.9907707 + 2e-10 === -3711126.9907707\n                break;\n            }\n            if (ticks.length > safeLimit) {\n                return [];\n            }\n        }\n        // Consider this case: the last item of ticks is smaller\n        // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n        if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n            ticks.push(extent[1]);\n        }\n\n        return ticks;\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n\n/***/ 666:\n/***/ (function(module, exports) {\n\n\n\n    var lib = {};\n\n    var ORIGIN_METHOD = '\\0__throttleOriginMethod';\n    var RATE = '\\0__throttleRate';\n    var THROTTLE_TYPE = '\\0__throttleType';\n\n    /**\n     * @public\n     * @param {(Function)} fn\n     * @param {number} [delay=0] Unit: ms.\n     * @param {boolean} [debounce=false]\n     *        true: If call interval less than `delay`, only the last call works.\n     *        false: If call interval less than `delay, call works on fixed rate.\n     * @return {(Function)} throttled fn.\n     */\n    lib.throttle = function (fn, delay, debounce) {\n\n        var currCall;\n        var lastCall = 0;\n        var lastExec = 0;\n        var timer = null;\n        var diff;\n        var scope;\n        var args;\n        var debounceNextCall;\n\n        delay = delay || 0;\n\n        function exec() {\n            lastExec = (new Date()).getTime();\n            timer = null;\n            fn.apply(scope, args || []);\n        }\n\n        var cb = function () {\n            currCall = (new Date()).getTime();\n            scope = this;\n            args = arguments;\n            var thisDelay = debounceNextCall || delay;\n            var thisDebounce = debounceNextCall || debounce;\n            debounceNextCall = null;\n            diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n\n            clearTimeout(timer);\n\n            if (thisDebounce) {\n                timer = setTimeout(exec, thisDelay);\n            }\n            else {\n                if (diff >= 0) {\n                    exec();\n                }\n                else {\n                    timer = setTimeout(exec, -diff);\n                }\n            }\n\n            lastCall = currCall;\n        };\n\n        /**\n         * Clear throttle.\n         * @public\n         */\n        cb.clear = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n\n        /**\n         * Enable debounce once.\n         */\n        cb.debounceNextCall = function (debounceDelay) {\n            debounceNextCall = debounceDelay;\n        };\n\n        return cb;\n    };\n\n    /**\n     * Create throttle method or update throttle rate.\n     *\n     * @example\n     * ComponentView.prototype.render = function () {\n     *     ...\n     *     throttle.createOrUpdate(\n     *         this,\n     *         '_dispatchAction',\n     *         this.model.get('throttle'),\n     *         'fixRate'\n     *     );\n     * };\n     * ComponentView.prototype.remove = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     * ComponentView.prototype.dispose = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     * @param {number} [rate]\n     * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n     * @return {Function} throttled function.\n     */\n    lib.createOrUpdate = function (obj, fnAttr, rate, throttleType) {\n        var fn = obj[fnAttr];\n\n        if (!fn) {\n            return;\n        }\n\n        var originFn = fn[ORIGIN_METHOD] || fn;\n        var lastThrottleType = fn[THROTTLE_TYPE];\n        var lastRate = fn[RATE];\n\n        if (lastRate !== rate || lastThrottleType !== throttleType) {\n            if (rate == null || !throttleType) {\n                return (obj[fnAttr] = originFn);\n            }\n\n            fn = obj[fnAttr] = lib.throttle(\n                originFn, rate, throttleType === 'debounce'\n            );\n            fn[ORIGIN_METHOD] = originFn;\n            fn[THROTTLE_TYPE] = throttleType;\n            fn[RATE] = rate;\n        }\n\n        return fn;\n    };\n\n    /**\n     * Clear throttle. Example see throttle.createOrUpdate.\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     */\n    lib.clear = function (obj, fnAttr) {\n        var fn = obj[fnAttr];\n        if (fn && fn[ORIGIN_METHOD]) {\n            obj[fnAttr] = fn[ORIGIN_METHOD];\n        }\n    };\n\n    module.exports = lib;\n\n\n\n/***/ }),\n\n/***/ 667:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module zrender/Element\n */\n\n\n    var guid = __webpack_require__(672);\n    var Eventful = __webpack_require__(626);\n    var Transformable = __webpack_require__(680);\n    var Animatable = __webpack_require__(783);\n    var zrUtil = __webpack_require__(606);\n\n    /**\n     * @alias module:zrender/Element\n     * @constructor\n     * @extends {module:zrender/mixin/Animatable}\n     * @extends {module:zrender/mixin/Transformable}\n     * @extends {module:zrender/mixin/Eventful}\n     */\n    var Element = function (opts) {\n\n        Transformable.call(this, opts);\n        Eventful.call(this, opts);\n        Animatable.call(this, opts);\n\n        /**\n         * 画布元素ID\n         * @type {string}\n         */\n        this.id = opts.id || guid();\n    };\n\n    Element.prototype = {\n\n        /**\n         * 元素类型\n         * Element type\n         * @type {string}\n         */\n        type: 'element',\n\n        /**\n         * 元素名字\n         * Element name\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n         * ZRender instance will be assigned when element is associated with zrender\n         * @name module:/zrender/Element#__zr\n         * @type {module:zrender/ZRender}\n         */\n        __zr: null,\n\n        /**\n         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n         * If ignore drawing and events of the element object\n         * @name module:/zrender/Element#ignore\n         * @type {boolean}\n         * @default false\n         */\n        ignore: false,\n\n        /**\n         * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n         * 该路径会继承被裁减对象的变换\n         * @type {module:zrender/graphic/Path}\n         * @see http://www.w3.org/TR/2dcontext/#clipping-region\n         * @readOnly\n         */\n        clipPath: null,\n\n        /**\n         * Drift element\n         * @param  {number} dx dx on the global space\n         * @param  {number} dy dy on the global space\n         */\n        drift: function (dx, dy) {\n            switch (this.draggable) {\n                case 'horizontal':\n                    dy = 0;\n                    break;\n                case 'vertical':\n                    dx = 0;\n                    break;\n            }\n\n            var m = this.transform;\n            if (!m) {\n                m = this.transform = [1, 0, 0, 1, 0, 0];\n            }\n            m[4] += dx;\n            m[5] += dy;\n\n            this.decomposeTransform();\n            this.dirty(false);\n        },\n\n        /**\n         * Hook before update\n         */\n        beforeUpdate: function () {},\n        /**\n         * Hook after update\n         */\n        afterUpdate: function () {},\n        /**\n         * Update each frame\n         */\n        update: function () {\n            this.updateTransform();\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {},\n\n        /**\n         * @protected\n         */\n        attrKV: function (key, value) {\n            if (key === 'position' || key === 'scale' || key === 'origin') {\n                // Copy the array\n                if (value) {\n                    var target = this[key];\n                    if (!target) {\n                        target = this[key] = [];\n                    }\n                    target[0] = value[0];\n                    target[1] = value[1];\n                }\n            }\n            else {\n                this[key] = value;\n            }\n        },\n\n        /**\n         * Hide the element\n         */\n        hide: function () {\n            this.ignore = true;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * Show the element\n         */\n        show: function () {\n            this.ignore = false;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * @param {string|Object} key\n         * @param {*} value\n         */\n        attr: function (key, value) {\n            if (typeof key === 'string') {\n                this.attrKV(key, value);\n            }\n            else if (zrUtil.isObject(key)) {\n                for (var name in key) {\n                    if (key.hasOwnProperty(name)) {\n                        this.attrKV(name, key[name]);\n                    }\n                }\n            }\n\n            this.dirty(false);\n\n            return this;\n        },\n\n        /**\n         * @param {module:zrender/graphic/Path} clipPath\n         */\n        setClipPath: function (clipPath) {\n            var zr = this.__zr;\n            if (zr) {\n                clipPath.addSelfToZr(zr);\n            }\n\n            // Remove previous clip path\n            if (this.clipPath && this.clipPath !== clipPath) {\n                this.removeClipPath();\n            }\n\n            this.clipPath = clipPath;\n            clipPath.__zr = zr;\n            clipPath.__clipTarget = this;\n\n            this.dirty(false);\n        },\n\n        /**\n         */\n        removeClipPath: function () {\n            var clipPath = this.clipPath;\n            if (clipPath) {\n                if (clipPath.__zr) {\n                    clipPath.removeSelfFromZr(clipPath.__zr);\n                }\n\n                clipPath.__zr = null;\n                clipPath.__clipTarget = null;\n                this.clipPath = null;\n\n                this.dirty(false);\n            }\n        },\n\n        /**\n         * Add self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        addSelfToZr: function (zr) {\n            this.__zr = zr;\n            // 添加动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.addAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.addSelfToZr(zr);\n            }\n        },\n\n        /**\n         * Remove self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        removeSelfFromZr: function (zr) {\n            this.__zr = null;\n            // 移除动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.removeAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.removeSelfFromZr(zr);\n            }\n        }\n    };\n\n    zrUtil.mixin(Element, Animatable);\n    zrUtil.mixin(Element, Transformable);\n    zrUtil.mixin(Element, Eventful);\n\n    module.exports = Element;\n\n\n/***/ }),\n\n/***/ 668:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/animation/Animator\n */\n\n\n    var Clip = __webpack_require__(756);\n    var color = __webpack_require__(627);\n    var util = __webpack_require__(606);\n    var isArrayLike = util.isArrayLike;\n\n    var arraySlice = Array.prototype.slice;\n\n    function defaultGetter(target, key) {\n        return target[key];\n    }\n\n    function defaultSetter(target, key, value) {\n        target[key] = value;\n    }\n\n    /**\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} percent\n     * @return {number}\n     */\n    function interpolateNumber(p0, p1, percent) {\n        return (p1 - p0) * percent + p0;\n    }\n\n    /**\n     * @param  {string} p0\n     * @param  {string} p1\n     * @param  {number} percent\n     * @return {string}\n     */\n    function interpolateString(p0, p1, percent) {\n        return percent > 0.5 ? p1 : p0;\n    }\n\n    /**\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {number} percent\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function interpolateArray(p0, p1, percent, out, arrDim) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = interpolateNumber(p0[i], p1[i], percent);\n            }\n        }\n        else {\n            var len2 = len && p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = interpolateNumber(\n                        p0[i][j], p1[i][j], percent\n                    );\n                }\n            }\n        }\n    }\n\n    // arr0 is source array, arr1 is target array.\n    // Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n    function fillArr(arr0, arr1, arrDim) {\n        var arr0Len = arr0.length;\n        var arr1Len = arr1.length;\n        if (arr0Len !== arr1Len) {\n            // FIXME Not work for TypedArray\n            var isPreviousLarger = arr0Len > arr1Len;\n            if (isPreviousLarger) {\n                // Cut the previous\n                arr0.length = arr1Len;\n            }\n            else {\n                // Fill the previous\n                for (var i = arr0Len; i < arr1Len; i++) {\n                    arr0.push(\n                        arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i])\n                    );\n                }\n            }\n        }\n        // Handling NaN value\n        var len2 = arr0[0] && arr0[0].length;\n        for (var i = 0; i < arr0.length; i++) {\n            if (arrDim === 1) {\n                if (isNaN(arr0[i])) {\n                    arr0[i] = arr1[i];\n                }\n            }\n            else {\n                for (var j = 0; j < len2; j++) {\n                    if (isNaN(arr0[i][j])) {\n                        arr0[i][j] = arr1[i][j];\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @param  {Array} arr0\n     * @param  {Array} arr1\n     * @param  {number} arrDim\n     * @return {boolean}\n     */\n    function isArraySame(arr0, arr1, arrDim) {\n        if (arr0 === arr1) {\n            return true;\n        }\n        var len = arr0.length;\n        if (len !== arr1.length) {\n            return false;\n        }\n        if (arrDim === 1) {\n            for (var i = 0; i < len; i++) {\n                if (arr0[i] !== arr1[i]) {\n                    return false;\n                }\n            }\n        }\n        else {\n            var len2 = arr0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    if (arr0[i][j] !== arr1[i][j]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Catmull Rom interpolate array\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {Array} p2\n     * @param  {Array} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function catmullRomInterpolateArray(\n        p0, p1, p2, p3, t, t2, t3, out, arrDim\n    ) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = catmullRomInterpolate(\n                    p0[i], p1[i], p2[i], p3[i], t, t2, t3\n                );\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = catmullRomInterpolate(\n                        p0[i][j], p1[i][j], p2[i][j], p3[i][j],\n                        t, t2, t3\n                    );\n                }\n            }\n        }\n    }\n\n    /**\n     * Catmull Rom interpolate number\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @return {number}\n     */\n    function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    function cloneValue(value) {\n        if (isArrayLike(value)) {\n            var len = value.length;\n            if (isArrayLike(value[0])) {\n                var ret = [];\n                for (var i = 0; i < len; i++) {\n                    ret.push(arraySlice.call(value[i]));\n                }\n                return ret;\n            }\n\n            return arraySlice.call(value);\n        }\n\n        return value;\n    }\n\n    function rgba2String(rgba) {\n        rgba[0] = Math.floor(rgba[0]);\n        rgba[1] = Math.floor(rgba[1]);\n        rgba[2] = Math.floor(rgba[2]);\n\n        return 'rgba(' + rgba.join(',') + ')';\n    }\n\n    function getArrayDim(keyframes) {\n        var lastValue = keyframes[keyframes.length - 1].value;\n        return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n    }\n\n    function createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n        var getter = animator._getter;\n        var setter = animator._setter;\n        var useSpline = easing === 'spline';\n\n        var trackLen = keyframes.length;\n        if (!trackLen) {\n            return;\n        }\n        // Guess data type\n        var firstVal = keyframes[0].value;\n        var isValueArray = isArrayLike(firstVal);\n        var isValueColor = false;\n        var isValueString = false;\n\n        // For vertices morphing\n        var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n\n        var trackMaxTime;\n        // Sort keyframe as ascending\n        keyframes.sort(function(a, b) {\n            return a.time - b.time;\n        });\n\n        trackMaxTime = keyframes[trackLen - 1].time;\n        // Percents of each keyframe\n        var kfPercents = [];\n        // Value of each keyframe\n        var kfValues = [];\n        var prevValue = keyframes[0].value;\n        var isAllValueEqual = true;\n        for (var i = 0; i < trackLen; i++) {\n            kfPercents.push(keyframes[i].time / trackMaxTime);\n            // Assume value is a color when it is a string\n            var value = keyframes[i].value;\n\n            // Check if value is equal, deep check if value is array\n            if (!((isValueArray && isArraySame(value, prevValue, arrDim))\n                || (!isValueArray && value === prevValue))) {\n                isAllValueEqual = false;\n            }\n            prevValue = value;\n\n            // Try converting a string to a color array\n            if (typeof value == 'string') {\n                var colorArray = color.parse(value);\n                if (colorArray) {\n                    value = colorArray;\n                    isValueColor = true;\n                }\n                else {\n                    isValueString = true;\n                }\n            }\n            kfValues.push(value);\n        }\n        if (!forceAnimate && isAllValueEqual) {\n            return;\n        }\n\n        var lastValue = kfValues[trackLen - 1];\n        // Polyfill array and NaN value\n        for (var i = 0; i < trackLen - 1; i++) {\n            if (isValueArray) {\n                fillArr(kfValues[i], lastValue, arrDim);\n            }\n            else {\n                if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n                    kfValues[i] = lastValue;\n                }\n            }\n        }\n        isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim);\n\n        // Cache the key of last frame to speed up when\n        // animation playback is sequency\n        var lastFrame = 0;\n        var lastFramePercent = 0;\n        var start;\n        var w;\n        var p0;\n        var p1;\n        var p2;\n        var p3;\n\n        if (isValueColor) {\n            var rgba = [0, 0, 0, 0];\n        }\n\n        var onframe = function (target, percent) {\n            // Find the range keyframes\n            // kf1-----kf2---------current--------kf3\n            // find kf2 and kf3 and do interpolation\n            var frame;\n            // In the easing function like elasticOut, percent may less than 0\n            if (percent < 0) {\n                frame = 0;\n            }\n            else if (percent < lastFramePercent) {\n                // Start from next key\n                // PENDING start from lastFrame ?\n                start = Math.min(lastFrame + 1, trackLen - 1);\n                for (frame = start; frame >= 0; frame--) {\n                    if (kfPercents[frame] <= percent) {\n                        break;\n                    }\n                }\n                // PENDING really need to do this ?\n                frame = Math.min(frame, trackLen - 2);\n            }\n            else {\n                for (frame = lastFrame; frame < trackLen; frame++) {\n                    if (kfPercents[frame] > percent) {\n                        break;\n                    }\n                }\n                frame = Math.min(frame - 1, trackLen - 2);\n            }\n            lastFrame = frame;\n            lastFramePercent = percent;\n\n            var range = (kfPercents[frame + 1] - kfPercents[frame]);\n            if (range === 0) {\n                return;\n            }\n            else {\n                w = (percent - kfPercents[frame]) / range;\n            }\n            if (useSpline) {\n                p1 = kfValues[frame];\n                p0 = kfValues[frame === 0 ? frame : frame - 1];\n                p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n                p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n                if (isValueArray) {\n                    catmullRomInterpolateArray(\n                        p0, p1, p2, p3, w, w * w, w * w * w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        value = catmullRomInterpolateArray(\n                            p0, p1, p2, p3, w, w * w, w * w * w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(p1, p2, w);\n                    }\n                    else {\n                        value = catmullRomInterpolate(\n                            p0, p1, p2, p3, w, w * w, w * w * w\n                        );\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n            else {\n                if (isValueArray) {\n                    interpolateArray(\n                        kfValues[frame], kfValues[frame + 1], w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        interpolateArray(\n                            kfValues[frame], kfValues[frame + 1], w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    else {\n                        value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n        };\n\n        var clip = new Clip({\n            target: animator._target,\n            life: trackMaxTime,\n            loop: animator._loop,\n            delay: animator._delay,\n            onframe: onframe,\n            ondestroy: oneTrackDone\n        });\n\n        if (easing && easing !== 'spline') {\n            clip.easing = easing;\n        }\n\n        return clip;\n    }\n\n    /**\n     * @alias module:zrender/animation/Animator\n     * @constructor\n     * @param {Object} target\n     * @param {boolean} loop\n     * @param {Function} getter\n     * @param {Function} setter\n     */\n    var Animator = function(target, loop, getter, setter) {\n        this._tracks = {};\n        this._target = target;\n\n        this._loop = loop || false;\n\n        this._getter = getter || defaultGetter;\n        this._setter = setter || defaultSetter;\n\n        this._clipCount = 0;\n\n        this._delay = 0;\n\n        this._doneList = [];\n\n        this._onframeList = [];\n\n        this._clipList = [];\n    };\n\n    Animator.prototype = {\n        /**\n         * 设置动画关键帧\n         * @param  {number} time 关键帧时间，单位是ms\n         * @param  {Object} props 关键帧的属性值，key-value表示\n         * @return {module:zrender/animation/Animator}\n         */\n        when: function(time /* ms */, props) {\n            var tracks = this._tracks;\n            for (var propName in props) {\n                if (!props.hasOwnProperty(propName)) {\n                    continue;\n                }\n\n                if (!tracks[propName]) {\n                    tracks[propName] = [];\n                    // Invalid value\n                    var value = this._getter(this._target, propName);\n                    if (value == null) {\n                        // zrLog('Invalid property ' + propName);\n                        continue;\n                    }\n                    // If time is 0\n                    //  Then props is given initialize value\n                    // Else\n                    //  Initialize value from current prop value\n                    if (time !== 0) {\n                        tracks[propName].push({\n                            time: 0,\n                            value: cloneValue(value)\n                        });\n                    }\n                }\n                tracks[propName].push({\n                    time: time,\n                    value: props[propName]\n                });\n            }\n            return this;\n        },\n        /**\n         * 添加动画每一帧的回调函数\n         * @param  {Function} callback\n         * @return {module:zrender/animation/Animator}\n         */\n        during: function (callback) {\n            this._onframeList.push(callback);\n            return this;\n        },\n\n        pause: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].pause();\n            }\n            this._paused = true;\n        },\n\n        resume: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].resume();\n            }\n            this._paused = false;\n        },\n\n        isPaused: function () {\n            return !!this._paused;\n        },\n\n        _doneCallback: function () {\n            // Clear all tracks\n            this._tracks = {};\n            // Clear all clips\n            this._clipList.length = 0;\n\n            var doneList = this._doneList;\n            var len = doneList.length;\n            for (var i = 0; i < len; i++) {\n                doneList[i].call(this);\n            }\n        },\n        /**\n         * 开始执行动画\n         * @param  {string|Function} [easing]\n         *         动画缓动函数，详见{@link module:zrender/animation/easing}\n         * @param  {boolean} forceAnimate\n         * @return {module:zrender/animation/Animator}\n         */\n        start: function (easing, forceAnimate) {\n\n            var self = this;\n            var clipCount = 0;\n\n            var oneTrackDone = function() {\n                clipCount--;\n                if (!clipCount) {\n                    self._doneCallback();\n                }\n            };\n\n            var lastClip;\n            for (var propName in this._tracks) {\n                if (!this._tracks.hasOwnProperty(propName)) {\n                    continue;\n                }\n                var clip = createTrackClip(\n                    this, easing, oneTrackDone,\n                    this._tracks[propName], propName, forceAnimate\n                );\n                if (clip) {\n                    this._clipList.push(clip);\n                    clipCount++;\n\n                    // If start after added to animation\n                    if (this.animation) {\n                        this.animation.addClip(clip);\n                    }\n\n                    lastClip = clip;\n                }\n            }\n\n            // Add during callback on the last clip\n            if (lastClip) {\n                var oldOnFrame = lastClip.onframe;\n                lastClip.onframe = function (target, percent) {\n                    oldOnFrame(target, percent);\n\n                    for (var i = 0; i < self._onframeList.length; i++) {\n                        self._onframeList[i](target, percent);\n                    }\n                };\n            }\n\n            // This optimization will help the case that in the upper application\n            // the view may be refreshed frequently, where animation will be\n            // called repeatly but nothing changed.\n            if (!clipCount) {\n                this._doneCallback();\n            }\n            return this;\n        },\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stop: function (forwardToLast) {\n            var clipList = this._clipList;\n            var animation = this.animation;\n            for (var i = 0; i < clipList.length; i++) {\n                var clip = clipList[i];\n                if (forwardToLast) {\n                    // Move to last frame before stop\n                    clip.onframe(this._target, 1);\n                }\n                animation && animation.removeClip(clip);\n            }\n            clipList.length = 0;\n        },\n        /**\n         * 设置动画延迟开始的时间\n         * @param  {number} time 单位ms\n         * @return {module:zrender/animation/Animator}\n         */\n        delay: function (time) {\n            this._delay = time;\n            return this;\n        },\n        /**\n         * 添加动画结束的回调\n         * @param  {Function} cb\n         * @return {module:zrender/animation/Animator}\n         */\n        done: function(cb) {\n            if (cb) {\n                this._doneList.push(cb);\n            }\n            return this;\n        },\n\n        /**\n         * @return {Array.<module:zrender/animation/Clip>}\n         */\n        getClips: function () {\n            return this._clipList;\n        }\n    };\n\n    module.exports = Animator;\n\n\n/***/ }),\n\n/***/ 669:\n/***/ (function(module, exports) {\n\n\n\n    module.exports = (typeof window !== 'undefined' &&\n                ((window.requestAnimationFrame && window.requestAnimationFrame.bind(window))\n                // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\n                || (window.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window))\n                || window.mozRequestAnimationFrame\n                || window.webkitRequestAnimationFrame)\n            )\n            || function (func) {\n                setTimeout(func, 16);\n            };\n\n\n\n/***/ }),\n\n/***/ 670:\n/***/ (function(module, exports) {\n\n\n\n    var PI2 = Math.PI * 2;\n    module.exports = {\n        normalizeRadian: function(angle) {\n            angle %= PI2;\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return angle;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 671:\n/***/ (function(module, exports) {\n\n// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n\n    /**\n     * Simple double linked list. Compared with array, it has O(1) remove operation.\n     * @constructor\n     */\n    var LinkedList = function () {\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.head = null;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.tail = null;\n\n        this._len = 0;\n    };\n\n    var linkedListProto = LinkedList.prototype;\n    /**\n     * Insert a new value at the tail\n     * @param  {} val\n     * @return {module:zrender/core/LRU~Entry}\n     */\n    linkedListProto.insert = function (val) {\n        var entry = new Entry(val);\n        this.insertEntry(entry);\n        return entry;\n    };\n\n    /**\n     * Insert an entry at the tail\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.insertEntry = function (entry) {\n        if (!this.head) {\n            this.head = this.tail = entry;\n        }\n        else {\n            this.tail.next = entry;\n            entry.prev = this.tail;\n            entry.next = null;\n            this.tail = entry;\n        }\n        this._len++;\n    };\n\n    /**\n     * Remove entry.\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.remove = function (entry) {\n        var prev = entry.prev;\n        var next = entry.next;\n        if (prev) {\n            prev.next = next;\n        }\n        else {\n            // Is head\n            this.head = next;\n        }\n        if (next) {\n            next.prev = prev;\n        }\n        else {\n            // Is tail\n            this.tail = prev;\n        }\n        entry.next = entry.prev = null;\n        this._len--;\n    };\n\n    /**\n     * @return {number}\n     */\n    linkedListProto.len = function () {\n        return this._len;\n    };\n\n    /**\n     * Clear list\n     */\n    linkedListProto.clear = function () {\n        this.head = this.tail = null;\n        this._len = 0;\n    };\n\n    /**\n     * @constructor\n     * @param {} val\n     */\n    var Entry = function (val) {\n        /**\n         * @type {}\n         */\n        this.value = val;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.next;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.prev;\n    };\n\n    /**\n     * LRU Cache\n     * @constructor\n     * @alias module:zrender/core/LRU\n     */\n    var LRU = function (maxSize) {\n\n        this._list = new LinkedList();\n\n        this._map = {};\n\n        this._maxSize = maxSize || 10;\n\n        this._lastRemovedEntry = null;\n    };\n\n    var LRUProto = LRU.prototype;\n\n    /**\n     * @param  {string} key\n     * @param  {} value\n     * @return {} Removed value\n     */\n    LRUProto.put = function (key, value) {\n        var list = this._list;\n        var map = this._map;\n        var removed = null;\n        if (map[key] == null) {\n            var len = list.len();\n            // Reuse last removed entry\n            var entry = this._lastRemovedEntry;\n\n            if (len >= this._maxSize && len > 0) {\n                // Remove the least recently used\n                var leastUsedEntry = list.head;\n                list.remove(leastUsedEntry);\n                delete map[leastUsedEntry.key];\n\n                removed = leastUsedEntry.value;\n                this._lastRemovedEntry = leastUsedEntry;\n            }\n\n            if (entry) {\n                entry.value = value;\n            }\n            else {\n                entry = new Entry(value);\n            }\n            entry.key = key;\n            list.insertEntry(entry);\n            map[key] = entry;\n        }\n\n        return removed;\n    };\n\n    /**\n     * @param  {string} key\n     * @return {}\n     */\n    LRUProto.get = function (key) {\n        var entry = this._map[key];\n        var list = this._list;\n        if (entry != null) {\n            // Put the latest used entry in the tail\n            if (entry !== list.tail) {\n                list.remove(entry);\n                list.insertEntry(entry);\n            }\n\n            return entry.value;\n        }\n    };\n\n    /**\n     * Clear the cache\n     */\n    LRUProto.clear = function () {\n        this._list.clear();\n        this._map = {};\n    };\n\n    module.exports = LRU;\n\n\n/***/ }),\n\n/***/ 672:\n/***/ (function(module, exports) {\n\n/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\n\n\n    var idStart = 0x0907;\n\n    module.exports = function () {\n        return idStart++;\n    };\n\n\n\n/***/ }),\n\n/***/ 673:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n        var config = __webpack_require__(633);\n\n        /**\n         * @exports zrender/tool/log\n         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n         */\n        module.exports = function() {\n            if (config.debugMode === 0) {\n                return;\n            }\n            else if (config.debugMode == 1) {\n                for (var k in arguments) {\n                    throw new Error(arguments[k]);\n                }\n            }\n            else if (config.debugMode > 1) {\n                for (var k in arguments) {\n                    console.log(arguments[k]);\n                }\n            }\n        };\n\n        /* for debug\n        return function(mes) {\n            document.getElementById('wrong-message').innerHTML =\n                mes + ' ' + (new Date() - 0)\n                + '<br/>'\n                + document.getElementById('wrong-message').innerHTML;\n        };\n        */\n    \n\n\n/***/ }),\n\n/***/ 674:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Image element\n * @module zrender/graphic/Image\n */\n\n\n\n    var Displayable = __webpack_require__(644);\n    var BoundingRect = __webpack_require__(617);\n    var zrUtil = __webpack_require__(606);\n    var imageHelper = __webpack_require__(646);\n\n    /**\n     * @alias zrender/graphic/Image\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function ZImage(opts) {\n        Displayable.call(this, opts);\n    }\n\n    ZImage.prototype = {\n\n        constructor: ZImage,\n\n        type: 'image',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var src = style.image;\n\n            // Must bind each time\n            style.bind(ctx, this, prevEl);\n\n            var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this);\n\n            if (!image || !imageHelper.isImageReady(image)) {\n                return;\n            }\n\n            // 图片已经加载完成\n            // if (image.nodeName.toUpperCase() == 'IMG') {\n            //     if (!image.complete) {\n            //         return;\n            //     }\n            // }\n            // Else is canvas\n\n            var x = style.x || 0;\n            var y = style.y || 0;\n            var width = style.width;\n            var height = style.height;\n            var aspect = image.width / image.height;\n            if (width == null && height != null) {\n                // Keep image/height ratio\n                width = height * aspect;\n            }\n            else if (height == null && width != null) {\n                height = width / aspect;\n            }\n            else if (width == null && height == null) {\n                width = image.width;\n                height = image.height;\n            }\n\n            // 设置transform\n            this.setTransform(ctx);\n\n            if (style.sWidth && style.sHeight) {\n                var sx = style.sx || 0;\n                var sy = style.sy || 0;\n                ctx.drawImage(\n                    image,\n                    sx, sy, style.sWidth, style.sHeight,\n                    x, y, width, height\n                );\n            }\n            else if (style.sx && style.sy) {\n                var sx = style.sx;\n                var sy = style.sy;\n                var sWidth = width - sx;\n                var sHeight = height - sy;\n                ctx.drawImage(\n                    image,\n                    sx, sy, sWidth, sHeight,\n                    x, y, width, height\n                );\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (! this._rect) {\n                this._rect = new BoundingRect(\n                    style.x || 0, style.y || 0, style.width || 0, style.height || 0\n                );\n            }\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(ZImage, Displayable);\n\n    module.exports = ZImage;\n\n\n/***/ }),\n\n/***/ 675:\n/***/ (function(module, exports) {\n\n\n\n    var Pattern = function (image, repeat) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {image: ...}`, where this constructor will not be called.\n\n        this.image = image;\n        this.repeat = repeat;\n\n        // Can be cloned\n        this.type = 'pattern';\n    };\n\n    Pattern.prototype.getCanvasPattern = function (ctx) {\n        return ctx.createPattern(this.image, this.repeat || 'repeat');\n    };\n\n    module.exports = Pattern;\n\n\n/***/ }),\n\n/***/ 676:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/graphic/Style\n */\n\n\n    var textHelper = __webpack_require__(647);\n\n    var STYLE_COMMON_PROPS = [\n        ['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'],\n        ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]\n    ];\n\n    // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n    // var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\n    var Style = function (opts, host) {\n        this.extendFrom(opts, false);\n        this.host = host;\n    };\n\n    function createLinearGradient(ctx, obj, rect) {\n        var x = obj.x == null ? 0 : obj.x;\n        var x2 = obj.x2 == null ? 1 : obj.x2;\n        var y = obj.y == null ? 0 : obj.y;\n        var y2 = obj.y2 == null ? 0 : obj.y2;\n\n        if (!obj.global) {\n            x = x * rect.width + rect.x;\n            x2 = x2 * rect.width + rect.x;\n            y = y * rect.height + rect.y;\n            y2 = y2 * rect.height + rect.y;\n        }\n\n        var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n\n        return canvasGradient;\n    }\n\n    function createRadialGradient(ctx, obj, rect) {\n        var width = rect.width;\n        var height = rect.height;\n        var min = Math.min(width, height);\n\n        var x = obj.x == null ? 0.5 : obj.x;\n        var y = obj.y == null ? 0.5 : obj.y;\n        var r = obj.r == null ? 0.5 : obj.r;\n        if (!obj.global) {\n            x = x * width + rect.x;\n            y = y * height + rect.y;\n            r = r * min;\n        }\n\n        var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n\n        return canvasGradient;\n    }\n\n\n    Style.prototype = {\n\n        constructor: Style,\n\n        /**\n         * @type {module:zrender/graphic/Displayable}\n         */\n        host: null,\n\n        /**\n         * @type {string}\n         */\n        fill: '#000000',\n\n        /**\n         * @type {string}\n         */\n        stroke: null,\n\n        /**\n         * @type {number}\n         */\n        opacity: 1,\n\n        /**\n         * @type {Array.<number>}\n         */\n        lineDash: null,\n\n        /**\n         * @type {number}\n         */\n        lineDashOffset: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetY: 0,\n\n        /**\n         * @type {number}\n         */\n        lineWidth: 1,\n\n        /**\n         * If stroke ignore scale\n         * @type {Boolean}\n         */\n        strokeNoScale: false,\n\n        // Bounding rect text configuration\n        // Not affected by element transform\n        /**\n         * @type {string}\n         */\n        text: null,\n\n        /**\n         * If `fontSize` or `fontFamily` exists, `font` will be reset by\n         * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n         * So do not visit it directly in upper application (like echarts),\n         * but use `contain/text#makeFont` instead.\n         * @type {string}\n         */\n        font: null,\n\n        /**\n         * The same as font. Use font please.\n         * @deprecated\n         * @type {string}\n         */\n        textFont: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * @type {string}\n         */\n        fontStyle: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * @type {string}\n         */\n        fontWeight: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * Should be 12 but not '12px'.\n         * @type {number}\n         */\n        fontSize: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * @type {string}\n         */\n        fontFamily: null,\n\n        /**\n         * Reserved for special functinality, like 'hr'.\n         * @type {string}\n         */\n        textTag: null,\n\n        /**\n         * @type {string}\n         */\n        textFill: '#000',\n\n        /**\n         * @type {string}\n         */\n        textStroke: null,\n\n        /**\n         * @type {number}\n         */\n        textWidth: null,\n\n        /**\n         * Only for textBackground.\n         * @type {number}\n         */\n        textHeight: null,\n\n        /**\n         * textStroke may be set as some color as a default\n         * value in upper applicaion, where the default value\n         * of textLineWidth should be 0 to make sure that\n         * user can choose to do not use text stroke.\n         * @type {number}\n         */\n        textLineWidth: 0,\n\n        /**\n         * @type {number}\n         */\n        textLineHeight: null,\n\n        /**\n         * 'inside', 'left', 'right', 'top', 'bottom'\n         * [x, y]\n         * Based on x, y of rect.\n         * @type {string|Array.<number>}\n         * @default 'inside'\n         */\n        textPosition: 'inside',\n\n        /**\n         * If not specified, use the boundingRect of a `displayable`.\n         * @type {Object}\n         */\n        textRect: null,\n\n        /**\n         * [x, y]\n         * @type {Array.<number>}\n         */\n        textOffset: null,\n\n        /**\n         * @type {string}\n         */\n        textAlign: null,\n\n        /**\n         * @type {string}\n         */\n        textVerticalAlign: null,\n\n        /**\n         * @type {number}\n         */\n        textDistance: 5,\n\n        /**\n         * @type {string}\n         */\n        textShadowColor: 'transparent',\n\n        /**\n         * @type {number}\n         */\n        textShadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        textShadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        textShadowOffsetY: 0,\n\n        /**\n         * @type {string}\n         */\n        textBoxShadowColor: 'transparent',\n\n        /**\n         * @type {number}\n         */\n        textBoxShadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        textBoxShadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        textBoxShadowOffsetY: 0,\n\n        /**\n         * Whether transform text.\n         * Only useful in Path and Image element\n         * @type {boolean}\n         */\n        transformText: false,\n\n        /**\n         * Text rotate around position of Path or Image\n         * Only useful in Path and Image element and transformText is false.\n         */\n        textRotation: 0,\n\n        /**\n         * Text origin of text rotation, like [10, 40].\n         * Based on x, y of rect.\n         * Useful in label rotation of circular symbol.\n         * By default, this origin is textPosition.\n         * Can be 'center'.\n         * @type {string|Array.<number>}\n         */\n        textOrigin: null,\n\n        /**\n         * @type {string}\n         */\n        textBackgroundColor: null,\n\n        /**\n         * @type {string}\n         */\n        textBorderColor: null,\n\n        /**\n         * @type {number}\n         */\n        textBorderWidth: 0,\n\n        /**\n         * @type {number}\n         */\n        textBorderRadius: 0,\n\n        /**\n         * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n         * @type {number|Array.<number>}\n         */\n        textPadding: null,\n\n        /**\n         * Text styles for rich text.\n         * @type {Object}\n         */\n        rich: null,\n\n        /**\n         * {outerWidth, outerHeight, ellipsis, placeholder}\n         * @type {Object}\n         */\n        truncate: null,\n\n        /**\n         * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n         * @type {string}\n         */\n        blend: null,\n\n        normalize: function () {\n            textHelper.normalizeTextStyle(this);\n        },\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        bind: function (ctx, el, prevEl) {\n            var style = this;\n            var prevStyle = prevEl && prevEl.style;\n            var firstDraw = !prevStyle;\n\n            for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n                var prop = STYLE_COMMON_PROPS[i];\n                var styleName = prop[0];\n\n                if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n                    // FIXME Invalid property value will cause style leak from previous element.\n                    ctx[styleName] = style[styleName] || prop[1];\n                }\n            }\n\n            if ((firstDraw || style.fill !== prevStyle.fill)) {\n                ctx.fillStyle = style.fill;\n            }\n            if ((firstDraw || style.stroke !== prevStyle.stroke)) {\n                ctx.strokeStyle = style.stroke;\n            }\n            if ((firstDraw || style.opacity !== prevStyle.opacity)) {\n                ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n            }\n\n            if ((firstDraw || style.blend !== prevStyle.blend)) {\n                ctx.globalCompositeOperation = style.blend || 'source-over';\n            }\n            if (this.hasStroke()) {\n                var lineWidth = style.lineWidth;\n                ctx.lineWidth = lineWidth / (\n                    (this.strokeNoScale && el && el.getLineScale) ? el.getLineScale() : 1\n                );\n            }\n        },\n\n        hasFill: function () {\n            var fill = this.fill;\n            return fill != null && fill !== 'none';\n        },\n\n        hasStroke: function () {\n            var stroke = this.stroke;\n            return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n        },\n\n        /**\n         * Extend from other style\n         * @param {zrender/graphic/Style} otherStyle\n         * @param {boolean} overwrite true: overwrirte any way.\n         *                            false: overwrite only when !target.hasOwnProperty\n         *                            others: overwrite when property is not null/undefined.\n         */\n        extendFrom: function (otherStyle, overwrite) {\n            if (otherStyle) {\n                for (var name in otherStyle) {\n                    if (otherStyle.hasOwnProperty(name)\n                        && (overwrite === true\n                            || (\n                                overwrite === false\n                                    ? !this.hasOwnProperty(name)\n                                    : otherStyle[name] != null\n                            )\n                        )\n                    ) {\n                        this[name] = otherStyle[name];\n                    }\n                }\n            }\n        },\n\n        /**\n         * Batch setting style with a given object\n         * @param {Object|string} obj\n         * @param {*} [obj]\n         */\n        set: function (obj, value) {\n            if (typeof obj === 'string') {\n                this[obj] = value;\n            }\n            else {\n                this.extendFrom(obj, true);\n            }\n        },\n\n        /**\n         * Clone\n         * @return {zrender/graphic/Style} [description]\n         */\n        clone: function () {\n            var newStyle = new this.constructor();\n            newStyle.extendFrom(this, true);\n            return newStyle;\n        },\n\n        getGradient: function (ctx, obj, rect) {\n            var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n            var canvasGradient = method(ctx, obj, rect);\n            var colorStops = obj.colorStops;\n            for (var i = 0; i < colorStops.length; i++) {\n                canvasGradient.addColorStop(\n                    colorStops[i].offset, colorStops[i].color\n                );\n            }\n            return canvasGradient;\n        }\n\n    };\n\n    var styleProto = Style.prototype;\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n        var prop = STYLE_COMMON_PROPS[i];\n        if (!(prop[0] in styleProto)) {\n            styleProto[prop[0]] = prop[1];\n        }\n    }\n\n    // Provide for others\n    Style.getGradient = styleProto.getGradient;\n\n    module.exports = Style;\n\n\n/***/ }),\n\n/***/ 677:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var env = __webpack_require__(615);\n\n    // Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n    // where exception \"unexpected call to method or property access\"\n    // might be thrown when calling ctx.fill or ctx.stroke after a path\n    // whose area size is zero is drawn and ctx.clip() is called and\n    // shadowBlur is set. See #4572, #3112, #5777.\n    // (e.g.,\n    //  ctx.moveTo(10, 10);\n    //  ctx.lineTo(20, 10);\n    //  ctx.closePath();\n    //  ctx.clip();\n    //  ctx.shadowBlur = 10;\n    //  ...\n    //  ctx.fill();\n    // )\n\n    var shadowTemp = [\n        ['shadowBlur', 0],\n        ['shadowColor', '#000'],\n        ['shadowOffsetX', 0],\n        ['shadowOffsetY', 0]\n    ];\n\n    module.exports = function (orignalBrush) {\n\n        // version string can be: '11.0'\n        return (env.browser.ie && env.browser.version >= 11)\n\n            ? function () {\n                var clipPaths = this.__clipPaths;\n                var style = this.style;\n                var modified;\n\n                if (clipPaths) {\n                    for (var i = 0; i < clipPaths.length; i++) {\n                        var clipPath = clipPaths[i];\n                        var shape = clipPath && clipPath.shape;\n                        var type = clipPath && clipPath.type;\n\n                        if (shape && (\n                            (type === 'sector' && shape.startAngle === shape.endAngle)\n                            || (type === 'rect' && (!shape.width || !shape.height))\n                        )) {\n                            for (var j = 0; j < shadowTemp.length; j++) {\n                                // It is save to put shadowTemp static, because shadowTemp\n                                // will be all modified each item brush called.\n                                shadowTemp[j][2] = style[shadowTemp[j][0]];\n                                style[shadowTemp[j][0]] = shadowTemp[j][1];\n                            }\n                            modified = true;\n                            break;\n                        }\n                    }\n                }\n\n                orignalBrush.apply(this, arguments);\n\n                if (modified) {\n                    for (var j = 0; j < shadowTemp.length; j++) {\n                        style[shadowTemp[j][0]] = shadowTemp[j][2];\n                    }\n                }\n            }\n\n            : orignalBrush;\n    };\n\n\n\n/***/ }),\n\n/***/ 678:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var smoothSpline = __webpack_require__(772);\n    var smoothBezier = __webpack_require__(771);\n\n    module.exports = {\n        buildPath: function (ctx, shape, closePath) {\n            var points = shape.points;\n            var smooth = shape.smooth;\n            if (points && points.length >= 2) {\n                if (smooth && smooth !== 'spline') {\n                    var controlPoints = smoothBezier(\n                        points, smooth, closePath, shape.smoothConstraint\n                    );\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    var len = points.length;\n                    for (var i = 0; i < (closePath ? len : len - 1); i++) {\n                        var cp1 = controlPoints[i * 2];\n                        var cp2 = controlPoints[i * 2 + 1];\n                        var p = points[(i + 1) % len];\n                        ctx.bezierCurveTo(\n                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\n                        );\n                    }\n                }\n                else {\n                    if (smooth === 'spline') {\n                        points = smoothSpline(points, closePath);\n                    }\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    for (var i = 1, l = points.length; i < l; i++) {\n                        ctx.lineTo(points[i][0], points[i][1]);\n                    }\n                }\n\n                closePath && ctx.closePath();\n            }\n        }\n    };\n\n\n/***/ }),\n\n/***/ 679:\n/***/ (function(module, exports) {\n\n\n\n    module.exports = {\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            var r = shape.r;\n            var r1;\n            var r2;\n            var r3;\n            var r4;\n\n            // Convert width and height to positive for better borderRadius\n            if (width < 0) {\n                x = x + width;\n                width = -width;\n            }\n            if (height < 0) {\n                y = y + height;\n                height = -height;\n            }\n\n            if (typeof r === 'number') {\n                r1 = r2 = r3 = r4 = r;\n            }\n            else if (r instanceof Array) {\n                if (r.length === 1) {\n                    r1 = r2 = r3 = r4 = r[0];\n                }\n                else if (r.length === 2) {\n                    r1 = r3 = r[0];\n                    r2 = r4 = r[1];\n                }\n                else if (r.length === 3) {\n                    r1 = r[0];\n                    r2 = r4 = r[1];\n                    r3 = r[2];\n                }\n                else {\n                    r1 = r[0];\n                    r2 = r[1];\n                    r3 = r[2];\n                    r4 = r[3];\n                }\n            }\n            else {\n                r1 = r2 = r3 = r4 = 0;\n            }\n\n            var total;\n            if (r1 + r2 > width) {\n                total = r1 + r2;\n                r1 *= width / total;\n                r2 *= width / total;\n            }\n            if (r3 + r4 > width) {\n                total = r3 + r4;\n                r3 *= width / total;\n                r4 *= width / total;\n            }\n            if (r2 + r3 > height) {\n                total = r2 + r3;\n                r2 *= height / total;\n                r3 *= height / total;\n            }\n            if (r1 + r4 > height) {\n                total = r1 + r4;\n                r1 *= height / total;\n                r4 *= height / total;\n            }\n            ctx.moveTo(x + r1, y);\n            ctx.lineTo(x + width - r2, y);\n            r2 !== 0 && ctx.quadraticCurveTo(\n                x + width, y, x + width, y + r2\n            );\n            ctx.lineTo(x + width, y + height - r3);\n            r3 !== 0 && ctx.quadraticCurveTo(\n                x + width, y + height, x + width - r3, y + height\n            );\n            ctx.lineTo(x + r4, y + height);\n            r4 !== 0 && ctx.quadraticCurveTo(\n                x, y + height, x, y + height - r4\n            );\n            ctx.lineTo(x, y + r1);\n            r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n        }\n    };\n\n\n/***/ }),\n\n/***/ 680:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\n\n\n    var matrix = __webpack_require__(623);\n    var vector = __webpack_require__(611);\n    var mIdentity = matrix.identity;\n\n    var EPSILON = 5e-5;\n\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n\n    /**\n     * @alias module:zrender/mixin/Transformable\n     * @constructor\n     */\n    var Transformable = function (opts) {\n        opts = opts || {};\n        // If there are no given position, rotation, scale\n        if (!opts.position) {\n            /**\n             * 平移\n             * @type {Array.<number>}\n             * @default [0, 0]\n             */\n            this.position = [0, 0];\n        }\n        if (opts.rotation == null) {\n            /**\n             * 旋转\n             * @type {Array.<number>}\n             * @default 0\n             */\n            this.rotation = 0;\n        }\n        if (!opts.scale) {\n            /**\n             * 缩放\n             * @type {Array.<number>}\n             * @default [1, 1]\n             */\n            this.scale = [1, 1];\n        }\n        /**\n         * 旋转和缩放的原点\n         * @type {Array.<number>}\n         * @default null\n         */\n        this.origin = this.origin || null;\n    };\n\n    var transformableProto = Transformable.prototype;\n    transformableProto.transform = null;\n\n    /**\n     * 判断是否需要有坐标变换\n     * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n     */\n    transformableProto.needLocalTransform = function () {\n        return isNotAroundZero(this.rotation)\n            || isNotAroundZero(this.position[0])\n            || isNotAroundZero(this.position[1])\n            || isNotAroundZero(this.scale[0] - 1)\n            || isNotAroundZero(this.scale[1] - 1);\n    };\n\n    transformableProto.updateTransform = function () {\n        var parent = this.parent;\n        var parentHasTransform = parent && parent.transform;\n        var needLocalTransform = this.needLocalTransform();\n\n        var m = this.transform;\n        if (!(needLocalTransform || parentHasTransform)) {\n            m && mIdentity(m);\n            return;\n        }\n\n        m = m || matrix.create();\n\n        if (needLocalTransform) {\n            this.getLocalTransform(m);\n        }\n        else {\n            mIdentity(m);\n        }\n\n        // 应用父节点变换\n        if (parentHasTransform) {\n            if (needLocalTransform) {\n                matrix.mul(m, parent.transform, m);\n            }\n            else {\n                matrix.copy(m, parent.transform);\n            }\n        }\n        // 保存这个变换矩阵\n        this.transform = m;\n\n        this.invTransform = this.invTransform || matrix.create();\n        matrix.invert(this.invTransform, m);\n    };\n\n    transformableProto.getLocalTransform = function (m) {\n        return Transformable.getLocalTransform(this, m);\n    };\n\n    /**\n     * 将自己的transform应用到context上\n     * @param {CanvasRenderingContext2D} ctx\n     */\n    transformableProto.setTransform = function (ctx) {        \n        var m = this.transform;\n        var dpr = ctx.dpr || 1;\n        if (m) {\n            ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n        }\n        else {\n            ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n        }\n    };\n\n    transformableProto.restoreTransform = function (ctx) {\n        var dpr = ctx.dpr || 1;\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n    };\n\n    var tmpTransform = [];\n\n    /**\n     * 分解`transform`矩阵到`position`, `rotation`, `scale`\n     */\n    transformableProto.decomposeTransform = function () {\n        if (!this.transform) {\n            return;\n        }\n        var parent = this.parent;\n        var m = this.transform;\n        if (parent && parent.transform) {\n            // Get local transform and decompose them to position, scale, rotation\n            matrix.mul(tmpTransform, parent.invTransform, m);\n            m = tmpTransform;\n        }\n        var sx = m[0] * m[0] + m[1] * m[1];\n        var sy = m[2] * m[2] + m[3] * m[3];\n        var position = this.position;\n        var scale = this.scale;\n        if (isNotAroundZero(sx - 1)) {\n            sx = Math.sqrt(sx);\n        }\n        if (isNotAroundZero(sy - 1)) {\n            sy = Math.sqrt(sy);\n        }\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        position[0] = m[4];\n        position[1] = m[5];\n        scale[0] = sx;\n        scale[1] = sy;\n        this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n    };\n\n    /**\n     * Get global scale\n     * @return {Array.<number>}\n     */\n    transformableProto.getGlobalScale = function () {\n        var m = this.transform;\n        if (!m) {\n            return [1, 1];\n        }\n        var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        return [sx, sy];\n    };\n    /**\n     * 变换坐标位置到 shape 的局部坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToLocal = function (x, y) {\n        var v2 = [x, y];\n        var invTransform = this.invTransform;\n        if (invTransform) {\n            vector.applyTransform(v2, v2, invTransform);\n        }\n        return v2;\n    };\n\n    /**\n     * 变换局部坐标位置到全局坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToGlobal = function (x, y) {\n        var v2 = [x, y];\n        var transform = this.transform;\n        if (transform) {\n            vector.applyTransform(v2, v2, transform);\n        }\n        return v2;\n    };\n\n    /**\n     * @static\n     * @param {Object} target\n     * @param {Array.<number>} target.origin\n     * @param {number} target.rotation\n     * @param {Array.<number>} target.position\n     * @param {Array.<number>} [m]\n     */\n    Transformable.getLocalTransform = function (target, m) {\n        m = m || [];\n        mIdentity(m);\n\n        var origin = target.origin;\n        var scale = target.scale || [1, 1];\n        var rotation = target.rotation || 0;\n        var position = target.position || [0, 0];\n\n        if (origin) {\n            // Translate to origin\n            m[4] -= origin[0];\n            m[5] -= origin[1];\n        }\n        matrix.scale(m, m, scale);\n        if (rotation) {\n            matrix.rotate(m, m, rotation);\n        }\n        if (origin) {\n            // Translate back from origin\n            m[4] += origin[0];\n            m[5] += origin[1];\n        }\n\n        m[4] += position[0];\n        m[5] += position[1];\n\n        return m;\n    };\n\n    module.exports = Transformable;\n\n\n\n/***/ }),\n\n/***/ 683:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var graphic = __webpack_require__(608);\n    var zrUtil = __webpack_require__(606);\n    var echarts = __webpack_require__(607);\n\n    __webpack_require__(685);\n\n    __webpack_require__(707);\n\n    // Grid view\n    echarts.extendComponentView({\n\n        type: 'grid',\n\n        render: function (gridModel, ecModel) {\n            this.group.removeAll();\n            if (gridModel.get('show')) {\n                this.group.add(new graphic.Rect({\n                    shape: gridModel.coordinateSystem.getRect(),\n                    style: zrUtil.defaults({\n                        fill: gridModel.get('backgroundColor')\n                    }, gridModel.getItemStyle()),\n                    silent: true,\n                    z2: -1\n                }));\n            }\n        }\n\n    });\n\n    echarts.registerPreprocessor(function (option) {\n        // Only create grid when need\n        if (option.xAxis && option.yAxis && !option.grid) {\n            option.grid = {};\n        }\n    });\n\n\n/***/ }),\n\n/***/ 684:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(606);\n\n    var defaultOption = {\n        show: true,\n        zlevel: 0,                  // 一级层叠\n        z: 0,                       // 二级层叠\n        // 反向坐标轴\n        inverse: false,\n\n        // 坐标轴名字，默认为空\n        name: '',\n        // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n        nameLocation: 'end',\n        // 坐标轴名字旋转，degree。\n        nameRotate: null, // Adapt to axis rotate, when nameLocation is 'middle'.\n        nameTruncate: {\n            maxWidth: null,\n            ellipsis: '...',\n            placeholder: '.'\n        },\n        // 坐标轴文字样式，默认取全局样式\n        nameTextStyle: {},\n        // 文字与轴线距离\n        nameGap: 15,\n\n        silent: false, // Default false to support tooltip.\n        triggerEvent: false, // Default false to avoid legacy user event listener fail.\n\n        tooltip: {\n            show: false\n        },\n\n        axisPointer: {},\n\n        // 坐标轴线\n        axisLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            onZero: true,\n            onZeroAxisIndex: null,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                color: '#333',\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // 属性show控制显示与否，默认显示\n            show: true,\n            // 控制小标记是否在grid里\n            inside: false,\n            // 属性length控制线长\n            length: 5,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                width: 1\n            }\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            show: true,\n            // 控制文本标签是否在grid里\n            inside: false,\n            rotate: 0,\n            showMinLabel: null, // true | false | null (auto)\n            showMaxLabel: null, // true | false | null (auto)\n            margin: 8,\n            // formatter: null,\n            // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n            fontSize: 12\n        },\n        // 分隔线\n        splitLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            // 属性lineStyle（详见lineStyle）控制线条样式\n            lineStyle: {\n                color: ['#ccc'],\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 分隔区域\n        splitArea: {\n            // 默认不显示，属性show控制显示与否\n            show: false,\n            // 属性areaStyle（详见areaStyle）控制区域样式\n            areaStyle: {\n                color: ['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']\n            }\n        }\n    };\n\n    var categoryAxis = zrUtil.merge({\n        // 类目起始和结束两端空白策略\n        boundaryGap: true,\n        // splitArea: {\n            // show: false\n        // },\n        splitLine: {\n            show: false\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // If tick is align with label when boundaryGap is true\n            alignWithLabel: false,\n            interval: 'auto'\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            interval: 'auto'\n        }\n    }, defaultOption);\n\n    var valueAxis = zrUtil.merge({\n        // 数值起始和结束两端空白策略\n        boundaryGap: [0, 0],\n        // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n        // min: null,\n        // 最大值，设置成 'dataMax' 则从数据中计算最大值\n        // max: null,\n        // Readonly prop, specifies start value of the range when using data zoom.\n        // rangeStart: null\n        // Readonly prop, specifies end value of the range when using data zoom.\n        // rangeEnd: null\n        // 脱离0值比例，放大聚焦到最终_min，_max区间\n        // scale: false,\n        // 分割段数，默认为5\n        splitNumber: 5\n        // Minimum interval\n        // minInterval: null\n        // maxInterval: null\n    }, defaultOption);\n\n    // FIXME\n    var timeAxis = zrUtil.defaults({\n        scale: true,\n        min: 'dataMin',\n        max: 'dataMax'\n    }, valueAxis);\n\n    var logAxis = zrUtil.defaults({\n        scale: true,\n        logBase: 10\n    }, valueAxis);\n\n    module.exports = {\n        categoryAxis: categoryAxis,\n        valueAxis: valueAxis,\n        timeAxis: timeAxis,\n        logAxis: logAxis\n    };\n\n\n/***/ }),\n\n/***/ 685:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\nvar factory = exports;\n\n    var layout = __webpack_require__(619);\n    var axisHelper = __webpack_require__(620);\n\n    var zrUtil = __webpack_require__(606);\n    var Cartesian2D = __webpack_require__(728);\n    var Axis2D = __webpack_require__(726);\n\n    var each = zrUtil.each;\n\n    var ifAxisCrossZero = axisHelper.ifAxisCrossZero;\n    var niceScaleExtent = axisHelper.niceScaleExtent;\n\n    // 依赖 GridModel, AxisModel 做预处理\n    __webpack_require__(729);\n\n    /**\n     * Check if the axis is used in the specified grid\n     * @inner\n     */\n    function isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n        return axisModel.getCoordSysModel() === gridModel;\n    }\n\n    function getLabelUnionRect(axis) {\n        var axisModel = axis.model;\n        var labels = axisModel.getFormattedLabels();\n        var axisLabelModel = axisModel.getModel('axisLabel');\n        var rect;\n        var step = 1;\n        var labelCount = labels.length;\n        if (labelCount > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.ceil(labelCount / 40);\n        }\n        for (var i = 0; i < labelCount; i += step) {\n            if (!axis.isLabelIgnored(i)) {\n                var singleRect = axisLabelModel.getTextRect(labels[i]);\n                // FIXME consider label rotate\n                rect ? rect.union(singleRect) : (rect = singleRect);\n            }\n        }\n        return rect;\n    }\n\n    function Grid(gridModel, ecModel, api) {\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n         * @private\n         */\n        this._coordsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n         * @private\n         */\n        this._coordsList = [];\n\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesList = [];\n\n        this._initCartesian(gridModel, ecModel, api);\n\n        this.model = gridModel;\n    }\n\n    var gridProto = Grid.prototype;\n\n    gridProto.type = 'grid';\n\n    gridProto.axisPointerEnabled = true;\n\n    gridProto.getRect = function () {\n        return this._rect;\n    };\n\n    gridProto.update = function (ecModel, api) {\n\n        var axesMap = this._axesMap;\n\n        this._updateScale(ecModel, this.model);\n\n        each(axesMap.x, function (xAxis) {\n            niceScaleExtent(xAxis.scale, xAxis.model);\n        });\n        each(axesMap.y, function (yAxis) {\n            niceScaleExtent(yAxis.scale, yAxis.model);\n        });\n        each(axesMap.x, function (xAxis) {\n            fixAxisOnZero(axesMap, 'y', xAxis);\n        });\n        each(axesMap.y, function (yAxis) {\n            fixAxisOnZero(axesMap, 'x', yAxis);\n        });\n\n        // Resize again if containLabel is enabled\n        // FIXME It may cause getting wrong grid size in data processing stage\n        this.resize(this.model, api);\n    };\n\n    function fixAxisOnZero(axesMap, otherAxisDim, axis) {\n        // onZero can not be enabled in these two situations:\n        // 1. When any other axis is a category axis.\n        // 2. When no axis is cross 0 point.\n        var axes = axesMap[otherAxisDim];\n\n        if (!axis.onZero) {\n            return;\n        }\n\n        var onZeroAxisIndex = axis.onZeroAxisIndex;\n\n        // If target axis is specified.\n        if (onZeroAxisIndex != null) {\n            var otherAxis = axes[onZeroAxisIndex];\n            if (otherAxis && canNotOnZeroToAxis(otherAxis)) {\n                axis.onZero = false;\n            }\n            return;\n        }\n\n        for (var idx in axes) {\n            if (axes.hasOwnProperty(idx)) {\n                var otherAxis = axes[idx];\n                if (otherAxis && !canNotOnZeroToAxis(otherAxis)) {\n                    onZeroAxisIndex = +idx;\n                    break;\n                }\n            }\n        }\n\n        if (onZeroAxisIndex == null) {\n            axis.onZero = false;\n        }\n        axis.onZeroAxisIndex = onZeroAxisIndex;\n    }\n\n    function canNotOnZeroToAxis(axis) {\n        return axis.type === 'category' || axis.type === 'time' || !ifAxisCrossZero(axis);\n    }\n\n    /**\n     * Resize the grid\n     * @param {module:echarts/coord/cartesian/GridModel} gridModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    gridProto.resize = function (gridModel, api, ignoreContainLabel) {\n\n        var gridRect = layout.getLayoutRect(\n            gridModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n\n        this._rect = gridRect;\n\n        var axesList = this._axesList;\n\n        adjustAxes();\n\n        // Minus label size\n        if (!ignoreContainLabel && gridModel.get('containLabel')) {\n            each(axesList, function (axis) {\n                if (!axis.model.get('axisLabel.inside')) {\n                    var labelUnionRect = getLabelUnionRect(axis);\n                    if (labelUnionRect) {\n                        var dim = axis.isHorizontal() ? 'height' : 'width';\n                        var margin = axis.model.get('axisLabel.margin');\n                        gridRect[dim] -= labelUnionRect[dim] + margin;\n                        if (axis.position === 'top') {\n                            gridRect.y += labelUnionRect.height + margin;\n                        }\n                        else if (axis.position === 'left')  {\n                            gridRect.x += labelUnionRect.width + margin;\n                        }\n                    }\n                }\n            });\n\n            adjustAxes();\n        }\n\n        function adjustAxes() {\n            each(axesList, function (axis) {\n                var isHorizontal = axis.isHorizontal();\n                var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n                var idx = axis.inverse ? 1 : 0;\n                axis.setExtent(extent[idx], extent[1 - idx]);\n                updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n            });\n        }\n    };\n\n    /**\n     * @param {string} axisType\n     * @param {number} [axisIndex]\n     */\n    gridProto.getAxis = function (axisType, axisIndex) {\n        var axesMapOnDim = this._axesMap[axisType];\n        if (axesMapOnDim != null) {\n            if (axisIndex == null) {\n                // Find first axis\n                for (var name in axesMapOnDim) {\n                    if (axesMapOnDim.hasOwnProperty(name)) {\n                        return axesMapOnDim[name];\n                    }\n                }\n            }\n            return axesMapOnDim[axisIndex];\n        }\n    };\n\n    /**\n     * @return {Array.<module:echarts/coord/Axis>}\n     */\n    gridProto.getAxes = function () {\n        return this._axesList.slice();\n    };\n\n    /**\n     * Usage:\n     *      grid.getCartesian(xAxisIndex, yAxisIndex);\n     *      grid.getCartesian(xAxisIndex);\n     *      grid.getCartesian(null, yAxisIndex);\n     *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n     *\n     * @param {number|Object} [xAxisIndex]\n     * @param {number} [yAxisIndex]\n     */\n    gridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n        if (xAxisIndex != null && yAxisIndex != null) {\n            var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n            return this._coordsMap[key];\n        }\n\n        if (zrUtil.isObject(xAxisIndex)) {\n            yAxisIndex = xAxisIndex.yAxisIndex;\n            xAxisIndex = xAxisIndex.xAxisIndex;\n        }\n        // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n        for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n            if (coordList[i].getAxis('x').index === xAxisIndex\n                || coordList[i].getAxis('y').index === yAxisIndex\n            ) {\n                return coordList[i];\n            }\n        }\n    };\n\n    gridProto.getCartesians = function () {\n        return this._coordsList.slice();\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertToPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.dataToPoint(value)\n            : target.axis\n            ? target.axis.toGlobalCoord(target.axis.dataToCoord(value))\n            : null;\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertFromPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.pointToData(value)\n            : target.axis\n            ? target.axis.coordToData(target.axis.toLocalCoord(value))\n            : null;\n    };\n\n    /**\n     * @inner\n     */\n    gridProto._findConvertTarget = function (ecModel, finder) {\n        var seriesModel = finder.seriesModel;\n        var xAxisModel = finder.xAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('xAxis')[0]);\n        var yAxisModel = finder.yAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('yAxis')[0]);\n        var gridModel = finder.gridModel;\n        var coordsList = this._coordsList;\n        var cartesian;\n        var axis;\n\n        if (seriesModel) {\n            cartesian = seriesModel.coordinateSystem;\n            zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n        }\n        else if (xAxisModel && yAxisModel) {\n            cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n        }\n        else if (xAxisModel) {\n            axis = this.getAxis('x', xAxisModel.componentIndex);\n        }\n        else if (yAxisModel) {\n            axis = this.getAxis('y', yAxisModel.componentIndex);\n        }\n        // Lowest priority.\n        else if (gridModel) {\n            var grid = gridModel.coordinateSystem;\n            if (grid === this) {\n                cartesian = this._coordsList[0];\n            }\n        }\n\n        return {cartesian: cartesian, axis: axis};\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.containPoint = function (point) {\n        var coord = this._coordsList[0];\n        if (coord) {\n            return coord.containPoint(point);\n        }\n    };\n\n    /**\n     * Initialize cartesian coordinate systems\n     * @private\n     */\n    gridProto._initCartesian = function (gridModel, ecModel, api) {\n        var axisPositionUsed = {\n            left: false,\n            right: false,\n            top: false,\n            bottom: false\n        };\n\n        var axesMap = {\n            x: {},\n            y: {}\n        };\n        var axesCount = {\n            x: 0,\n            y: 0\n        };\n\n        /// Create axis\n        ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n        ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n        if (!axesCount.x || !axesCount.y) {\n            // Roll back when there no either x or y axis\n            this._axesMap = {};\n            this._axesList = [];\n            return;\n        }\n\n        this._axesMap = axesMap;\n\n        /// Create cartesian2d\n        each(axesMap.x, function (xAxis, xAxisIndex) {\n            each(axesMap.y, function (yAxis, yAxisIndex) {\n                var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n                var cartesian = new Cartesian2D(key);\n\n                cartesian.grid = this;\n                cartesian.model = gridModel;\n\n                this._coordsMap[key] = cartesian;\n                this._coordsList.push(cartesian);\n\n                cartesian.addAxis(xAxis);\n                cartesian.addAxis(yAxis);\n            }, this);\n        }, this);\n\n        function createAxisCreator(axisType) {\n            return function (axisModel, idx) {\n                if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n                    return;\n                }\n\n                var axisPosition = axisModel.get('position');\n                if (axisType === 'x') {\n                    // Fix position\n                    if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n                        // Default bottom of X\n                        axisPosition = 'bottom';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n                        }\n                    }\n                }\n                else {\n                    // Fix position\n                    if (axisPosition !== 'left' && axisPosition !== 'right') {\n                        // Default left of Y\n                        axisPosition = 'left';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n                        }\n                    }\n                }\n                axisPositionUsed[axisPosition] = true;\n\n                var axis = new Axis2D(\n                    axisType, axisHelper.createScaleByModel(axisModel),\n                    [0, 0],\n                    axisModel.get('type'),\n                    axisPosition\n                );\n\n                var isCategory = axis.type === 'category';\n                axis.onBand = isCategory && axisModel.get('boundaryGap');\n                axis.inverse = axisModel.get('inverse');\n\n                axis.onZero = axisModel.get('axisLine.onZero');\n                axis.onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex');\n\n                // Inject axis into axisModel\n                axisModel.axis = axis;\n\n                // Inject axisModel into axis\n                axis.model = axisModel;\n\n                // Inject grid info axis\n                axis.grid = this;\n\n                // Index of axis, can be used as key\n                axis.index = idx;\n\n                this._axesList.push(axis);\n\n                axesMap[axisType][idx] = axis;\n                axesCount[axisType]++;\n            };\n        }\n    };\n\n    /**\n     * Update cartesian properties from series\n     * @param  {module:echarts/model/Option} option\n     * @private\n     */\n    gridProto._updateScale = function (ecModel, gridModel) {\n        // Reset scale\n        zrUtil.each(this._axesList, function (axis) {\n            axis.scale.setExtent(Infinity, -Infinity);\n        });\n        ecModel.eachSeries(function (seriesModel) {\n            if (isCartesian2D(seriesModel)) {\n                var axesModels = findAxesModels(seriesModel, ecModel);\n                var xAxisModel = axesModels[0];\n                var yAxisModel = axesModels[1];\n\n                if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel)\n                    || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)\n                 ) {\n                    return;\n                }\n\n                var cartesian = this.getCartesian(\n                    xAxisModel.componentIndex, yAxisModel.componentIndex\n                );\n                var data = seriesModel.getData();\n                var xAxis = cartesian.getAxis('x');\n                var yAxis = cartesian.getAxis('y');\n\n                if (data.type === 'list') {\n                    unionExtent(data, xAxis, seriesModel);\n                    unionExtent(data, yAxis, seriesModel);\n                }\n            }\n        }, this);\n\n        function unionExtent(data, axis, seriesModel) {\n            each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n                axis.scale.unionExtentFromData(data, dim);\n            });\n        }\n    };\n\n    /**\n     * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n     * @return {Object} {baseAxes: [], otherAxes: []}\n     */\n    gridProto.getTooltipAxes = function (dim) {\n        var baseAxes = [];\n        var otherAxes = [];\n\n        each(this.getCartesians(), function (cartesian) {\n            var baseAxis = (dim != null && dim !== 'auto')\n                ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n            var otherAxis = cartesian.getOtherAxis(baseAxis);\n            zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n            zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n        });\n\n        return {baseAxes: baseAxes, otherAxes: otherAxes};\n    };\n\n    /**\n     * @inner\n     */\n    function updateAxisTransfrom(axis, coordBase) {\n        var axisExtent = axis.getExtent();\n        var axisExtentSum = axisExtent[0] + axisExtent[1];\n\n        // Fast transform\n        axis.toGlobalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord + coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n        axis.toLocalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord - coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n    }\n\n    var axesTypes = ['xAxis', 'yAxis'];\n    /**\n     * @inner\n     */\n    function findAxesModels(seriesModel, ecModel) {\n        return zrUtil.map(axesTypes, function (axisType) {\n            var axisModel = seriesModel.getReferringComponents(axisType)[0];\n\n            if (__DEV__) {\n                if (!axisModel) {\n                    throw new Error(axisType + ' \"' + zrUtil.retrieve(\n                        seriesModel.get(axisType + 'Index'),\n                        seriesModel.get(axisType + 'Id'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n            return axisModel;\n        });\n    }\n\n    /**\n     * @inner\n     */\n    function isCartesian2D(seriesModel) {\n        return seriesModel.get('coordinateSystem') === 'cartesian2d';\n    }\n\n    Grid.create = function (ecModel, api) {\n        var grids = [];\n        ecModel.eachComponent('grid', function (gridModel, idx) {\n            var grid = new Grid(gridModel, ecModel, api);\n            grid.name = 'grid_' + idx;\n            // dataSampling requires axis extent, so resize\n            // should be performed in create stage.\n            grid.resize(gridModel, api, true);\n\n            gridModel.coordinateSystem = grid;\n\n            grids.push(grid);\n        });\n\n        // Inject the coordinateSystems into seriesModel\n        ecModel.eachSeries(function (seriesModel) {\n            if (!isCartesian2D(seriesModel)) {\n                return;\n            }\n\n            var axesModels = findAxesModels(seriesModel, ecModel);\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            var gridModel = xAxisModel.getCoordSysModel();\n\n            if (__DEV__) {\n                if (!gridModel) {\n                    throw new Error(\n                        'Grid \"' + zrUtil.retrieve(\n                            xAxisModel.get('gridIndex'),\n                            xAxisModel.get('gridId'),\n                            0\n                        ) + '\" not found'\n                    );\n                }\n                if (xAxisModel.getCoordSysModel() !== yAxisModel.getCoordSysModel()) {\n                    throw new Error('xAxis and yAxis must use the same grid');\n                }\n            }\n\n            var grid = gridModel.coordinateSystem;\n\n            seriesModel.coordinateSystem = grid.getCartesian(\n                xAxisModel.componentIndex, yAxisModel.componentIndex\n            );\n        });\n\n        return grids;\n    };\n\n    // For deciding which dimensions to use when creating list data\n    Grid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\n\n    __webpack_require__(636).register('cartesian2d', Grid);\n\n    module.exports = Grid;\n\n\n/***/ }),\n\n/***/ 686:\n/***/ (function(module, exports) {\n\n\n    module.exports = function (seriesType, ecModel) {\n        var legendModels = ecModel.findComponents({\n            mainType: 'legend'\n        });\n        if (!legendModels || !legendModels.length) {\n            return;\n        }\n        ecModel.eachSeriesByType(seriesType, function (series) {\n            var data = series.getData();\n            data.filterSelf(function (idx) {\n                var name = data.getName(idx);\n                // If in any legend component the status is not selected.\n                for (var i = 0; i < legendModels.length; i++) {\n                    if (!legendModels[i].isSelected(name)) {\n                        return false;\n                    }\n                }\n                return true;\n            }, this);\n        }, this);\n    };\n\n\n/***/ }),\n\n/***/ 687:\n/***/ (function(module, exports) {\n\n// Pick color from palette for each data item.\n// Applicable for charts that require applying color palette\n// in data level (like pie, funnel, chord).\n\n\n    module.exports = function (seriesType, ecModel) {\n        // Pie and funnel may use diferrent scope\n        var paletteScope = {};\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var dataAll = seriesModel.getRawData();\n            var idxMap = {};\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                var data = seriesModel.getData();\n                data.each(function (idx) {\n                    var rawIdx = data.getRawIndex(idx);\n                    idxMap[rawIdx] = idx;\n                });\n                dataAll.each(function (rawIdx) {\n                    var filteredIdx = idxMap[rawIdx];\n\n                    // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n                    var singleDataColor = filteredIdx != null\n                        && data.getItemVisual(filteredIdx, 'color', true);\n\n                    if (!singleDataColor) {\n                        // FIXME Performance\n                        var itemModel = dataAll.getItemModel(rawIdx);\n                        var color = itemModel.get('itemStyle.normal.color')\n                            || seriesModel.getColorFromPalette(dataAll.getName(rawIdx), paletteScope);\n                        // Legend may use the visual info in data before processed\n                        dataAll.setItemVisual(rawIdx, 'color', color);\n\n                        // Data is not filtered\n                        if (filteredIdx != null) {\n                            data.setItemVisual(filteredIdx, 'color', color);\n                        }\n                    }\n                    else {\n                        // Set data all color for legend\n                        dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n                    }\n                });\n            }\n        });\n    };\n\n\n/***/ }),\n\n/***/ 688:\n/***/ (function(module, exports) {\n\n\n\n    module.exports = function (seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n\n        // Encoding visual for all series include which is filtered for legend drawing\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n\n            var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n            var symbolSize = seriesModel.get('symbolSize');\n\n            data.setVisual({\n                legendSymbol: legendSymbol || symbolType,\n                symbol: symbolType,\n                symbolSize: symbolSize\n            });\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof symbolSize === 'function') {\n                    data.each(function (idx) {\n                        var rawValue = seriesModel.getRawValue(idx);\n                        // FIXME\n                        var params = seriesModel.getDataParams(idx);\n                        data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n                    });\n                }\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var itemSymbolType = itemModel.getShallow('symbol', true);\n                    var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n                    // If has item symbol\n                    if (itemSymbolType != null) {\n                        data.setItemVisual(idx, 'symbol', itemSymbolType);\n                    }\n                    if (itemSymbolSize != null) {\n                        // PENDING Transform symbolSize ?\n                        data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n                    }\n                });\n            }\n        });\n    };\n\n\n/***/ }),\n\n/***/ 699:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(606);\n\n    var echartsAPIList = [\n        'getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed',\n        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption',\n        'getViewOfComponentModel', 'getViewOfSeriesModel'\n    ];\n    // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\n    function ExtensionAPI(chartInstance) {\n        zrUtil.each(echartsAPIList, function (name) {\n            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n        }, this);\n    }\n\n    module.exports = ExtensionAPI;\n\n\n/***/ }),\n\n/***/ 700:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n\n    var graphic = __webpack_require__(608);\n    var Symbol = __webpack_require__(657);\n\n    /**\n     * @constructor\n     * @alias module:echarts/chart/helper/SymbolDraw\n     * @param {module:zrender/graphic/Group} [symbolCtor]\n     */\n    function SymbolDraw(symbolCtor) {\n        this.group = new graphic.Group();\n\n        this._symbolCtor = symbolCtor || Symbol;\n    }\n\n    var symbolDrawProto = SymbolDraw.prototype;\n\n    function symbolNeedsDraw(data, idx, isIgnore) {\n        var point = data.getItemLayout(idx);\n        // Is an object\n        // if (point && point.hasOwnProperty('point')) {\n        //     point = point.point;\n        // }\n        return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx))\n                    && data.getItemVisual(idx, 'symbol') !== 'none';\n    }\n    /**\n     * Update symbols draw by new data\n     * @param {module:echarts/data/List} data\n     * @param {Array.<boolean>} [isIgnore]\n     */\n    symbolDrawProto.updateData = function (data, isIgnore) {\n        var group = this.group;\n        var seriesModel = data.hostModel;\n        var oldData = this._data;\n\n        var SymbolCtor = this._symbolCtor;\n\n        var seriesScope = {\n            itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n            hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n            symbolRotate: seriesModel.get('symbolRotate'),\n            symbolOffset: seriesModel.get('symbolOffset'),\n            hoverAnimation: seriesModel.get('hoverAnimation'),\n\n            labelModel: seriesModel.getModel('label.normal'),\n            hoverLabelModel: seriesModel.getModel('label.emphasis'),\n            cursorStyle: seriesModel.get('cursor')\n        };\n\n        data.diff(oldData)\n            .add(function (newIdx) {\n                var point = data.getItemLayout(newIdx);\n                if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n                    symbolEl.attr('position', point);\n                    data.setItemGraphicEl(newIdx, symbolEl);\n                    group.add(symbolEl);\n                }\n            })\n            .update(function (newIdx, oldIdx) {\n                var symbolEl = oldData.getItemGraphicEl(oldIdx);\n                var point = data.getItemLayout(newIdx);\n                if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    group.remove(symbolEl);\n                    return;\n                }\n                if (!symbolEl) {\n                    symbolEl = new SymbolCtor(data, newIdx);\n                    symbolEl.attr('position', point);\n                }\n                else {\n                    symbolEl.updateData(data, newIdx, seriesScope);\n                    graphic.updateProps(symbolEl, {\n                        position: point\n                    }, seriesModel);\n                }\n\n                // Add back\n                group.add(symbolEl);\n\n                data.setItemGraphicEl(newIdx, symbolEl);\n            })\n            .remove(function (oldIdx) {\n                var el = oldData.getItemGraphicEl(oldIdx);\n                el && el.fadeOut(function () {\n                    group.remove(el);\n                });\n            })\n            .execute();\n\n        this._data = data;\n    };\n\n    symbolDrawProto.updateLayout = function () {\n        var data = this._data;\n        if (data) {\n            // Not use animation\n            data.eachItemGraphicEl(function (el, idx) {\n                var point = data.getItemLayout(idx);\n                el.attr('position', point);\n            });\n        }\n    };\n\n    symbolDrawProto.remove = function (enableAnimation) {\n        var group = this.group;\n        var data = this._data;\n        if (data) {\n            if (enableAnimation) {\n                data.eachItemGraphicEl(function (el) {\n                    el.fadeOut(function () {\n                        group.remove(el);\n                    });\n                });\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    };\n\n    module.exports = SymbolDraw;\n\n\n/***/ }),\n\n/***/ 701:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var graphic = __webpack_require__(608);\n    var modelUtil = __webpack_require__(609);\n\n    var helper = {};\n\n    helper.findLabelValueDim = function (data) {\n        var valueDim;\n        var labelDims = modelUtil.otherDimToDataDim(data, 'label');\n\n        if (labelDims.length) {\n            valueDim = labelDims[0];\n        }\n        else {\n            // Get last value dim\n            var dimensions = data.dimensions.slice();\n            var dataType;\n            while (dimensions.length && (\n                valueDim = dimensions.pop(),\n                dataType = data.getDimensionInfo(valueDim).type,\n                dataType === 'ordinal' || dataType === 'time'\n            )) {} // jshint ignore:line\n        }\n\n        return valueDim;\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n\n/***/ 702:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var echarts = __webpack_require__(607);\n    var PRIORITY = echarts.PRIORITY;\n\n    __webpack_require__(703);\n    __webpack_require__(704);\n\n    echarts.registerVisual(zrUtil.curry(\n        __webpack_require__(688), 'line', 'circle', 'line'\n    ));\n    echarts.registerLayout(zrUtil.curry(\n        __webpack_require__(732), 'line'\n    ));\n\n    // Down sample after filter\n    echarts.registerProcessor(PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(\n        __webpack_require__(744), 'line'\n    ));\n\n    // In case developer forget to include grid component\n    __webpack_require__(683);\n\n\n/***/ }),\n\n/***/ 703:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var createListFromArray = __webpack_require__(648);\n    var SeriesModel = __webpack_require__(640);\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.line',\n\n        dependencies: ['grid', 'polar'],\n\n        getInitialData: function (option, ecModel) {\n            if (__DEV__) {\n                var coordSys = option.coordinateSystem;\n                if (coordSys !== 'polar' && coordSys !== 'cartesian2d') {\n                    throw new Error('Line not support coordinateSystem besides cartesian and polar');\n                }\n            }\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // stack: null\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // polarIndex: 0,\n\n            // If clip the overflow value\n            clipOverflow: true,\n            // cursor: null,\n\n            label: {\n                normal: {\n                    position: 'top'\n                }\n            },\n            // itemStyle: {\n            //     normal: {},\n            //     emphasis: {}\n            // },\n            lineStyle: {\n                normal: {\n                    width: 2,\n                    type: 'solid'\n                }\n            },\n            // areaStyle: {},\n            // false, 'start', 'end', 'middle'\n            step: false,\n\n            // Disabled if step is true\n            smooth: false,\n            smoothMonotone: null,\n            // 拐点图形类型\n            symbol: 'emptyCircle',\n            // 拐点图形大小\n            symbolSize: 4,\n            // 拐点图形旋转控制\n            symbolRotate: null,\n\n            // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n            showSymbol: true,\n            // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n            showAllSymbol: false,\n\n            // 是否连接断点\n            connectNulls: false,\n\n            // 数据过滤，'average', 'max', 'min', 'sum'\n            sampling: 'none',\n\n            animationEasing: 'linear',\n\n            // Disable progressive\n            progressive: 0,\n            hoverLayerThreshold: Infinity\n        }\n    });\n\n\n/***/ }),\n\n/***/ 704:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// FIXME step not support polar\n\n\n    var zrUtil = __webpack_require__(606);\n    var SymbolDraw = __webpack_require__(700);\n    var Symbol = __webpack_require__(657);\n    var lineAnimationDiff = __webpack_require__(705);\n    var graphic = __webpack_require__(608);\n    var modelUtil = __webpack_require__(609);\n    var polyHelper = __webpack_require__(706);\n    var ChartView = __webpack_require__(641);\n\n    function isPointsSame(points1, points2) {\n        if (points1.length !== points2.length) {\n            return;\n        }\n        for (var i = 0; i < points1.length; i++) {\n            var p1 = points1[i];\n            var p2 = points2[i];\n            if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n                return;\n            }\n        }\n        return true;\n    }\n\n    function getSmooth(smooth) {\n        return typeof (smooth) === 'number' ? smooth : (smooth ? 0.3 : 0);\n    }\n\n    function getAxisExtentWithGap(axis) {\n        var extent = axis.getGlobalExtent();\n        if (axis.onBand) {\n            // Remove extra 1px to avoid line miter in clipped edge\n            var halfBandWidth = axis.getBandWidth() / 2 - 1;\n            var dir = extent[1] > extent[0] ? 1 : -1;\n            extent[0] += dir * halfBandWidth;\n            extent[1] -= dir * halfBandWidth;\n        }\n        return extent;\n    }\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n    /**\n     * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n     * @param {module:echarts/data/List} data\n     * @param {Array.<Array.<number>>} points\n     * @private\n     */\n    function getStackedOnPoints(coordSys, data) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        return data.mapArray([valueDim], function (val, idx) {\n            var stackedOnSameSign;\n            var stackedOn = data.stackedOn;\n            // Find first stacked value with same sign\n            while (stackedOn &&\n                sign(stackedOn.get(valueDim, idx)) === sign(val)\n            ) {\n                stackedOnSameSign = stackedOn;\n                break;\n            }\n            var stackedData = [];\n            stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n            stackedData[1 - baseDataOffset] = stackedOnSameSign\n                ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n            return coordSys.dataToPoint(stackedData);\n        }, true);\n    }\n\n    function createGridClipShape(cartesian, hasAnimation, seriesModel) {\n        var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n        var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n        var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n\n        var x = Math.min(xExtent[0], xExtent[1]);\n        var y = Math.min(yExtent[0], yExtent[1]);\n        var width = Math.max(xExtent[0], xExtent[1]) - x;\n        var height = Math.max(yExtent[0], yExtent[1]) - y;\n        var lineWidth = seriesModel.get('lineStyle.normal.width') || 2;\n        // Expand clip shape to avoid clipping when line value exceeds axis\n        var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n        if (isHorizontal) {\n            y -= expandSize;\n            height += expandSize * 2;\n        }\n        else {\n            x -= expandSize;\n            width += expandSize * 2;\n        }\n\n        var clipPath = new graphic.Rect({\n            shape: {\n                x: x,\n                y: y,\n                width: width,\n                height: height\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n            graphic.initProps(clipPath, {\n                shape: {\n                    width: width,\n                    height: height\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createPolarClipShape(polar, hasAnimation, seriesModel) {\n        var angleAxis = polar.getAngleAxis();\n        var radiusAxis = polar.getRadiusAxis();\n\n        var radiusExtent = radiusAxis.getExtent();\n        var angleExtent = angleAxis.getExtent();\n\n        var RADIAN = Math.PI / 180;\n\n        var clipPath = new graphic.Sector({\n            shape: {\n                cx: polar.cx,\n                cy: polar.cy,\n                r0: radiusExtent[0],\n                r: radiusExtent[1],\n                startAngle: -angleExtent[0] * RADIAN,\n                endAngle: -angleExtent[1] * RADIAN,\n                clockwise: angleAxis.inverse\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: -angleExtent[1] * RADIAN\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createClipShape(coordSys, hasAnimation, seriesModel) {\n        return coordSys.type === 'polar'\n            ? createPolarClipShape(coordSys, hasAnimation, seriesModel)\n            : createGridClipShape(coordSys, hasAnimation, seriesModel);\n    }\n\n    function turnPointsIntoStep(points, coordSys, stepTurnAt) {\n        var baseAxis = coordSys.getBaseAxis();\n        var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n\n        var stepPoints = [];\n        for (var i = 0; i < points.length - 1; i++) {\n            var nextPt = points[i + 1];\n            var pt = points[i];\n            stepPoints.push(pt);\n\n            var stepPt = [];\n            switch (stepTurnAt) {\n                case 'end':\n                    stepPt[baseIndex] = nextPt[baseIndex];\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n                    break;\n                case 'middle':\n                    // default is start\n                    var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n                    var stepPt2 = [];\n                    stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n                    stepPoints.push(stepPt);\n                    stepPoints.push(stepPt2);\n                    break;\n                default:\n                    stepPt[baseIndex] = pt[baseIndex];\n                    stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n            }\n        }\n        // Last points\n        points[i] && stepPoints.push(points[i]);\n        return stepPoints;\n    }\n\n    function getVisualGradient(data, coordSys) {\n        var visualMetaList = data.getVisual('visualMeta');\n        if (!visualMetaList || !visualMetaList.length || !data.count()) {\n            // When data.count() is 0, gradient range can not be calculated.\n            return;\n        }\n\n        var visualMeta;\n        for (var i = visualMetaList.length - 1; i >= 0; i--) {\n            // Can only be x or y\n            if (visualMetaList[i].dimension < 2) {\n                visualMeta = visualMetaList[i];\n                break;\n            }\n        }\n        if (!visualMeta || coordSys.type !== 'cartesian2d') {\n            if (__DEV__) {\n                console.warn('Visual map on line style only support x or y dimension.');\n            }\n            return;\n        }\n\n        // If the area to be rendered is bigger than area defined by LinearGradient,\n        // the canvas spec prescribes that the color of the first stop and the last\n        // stop should be used. But if two stops are added at offset 0, in effect\n        // browsers use the color of the second stop to render area outside\n        // LinearGradient. So we can only infinitesimally extend area defined in\n        // LinearGradient to render `outerColors`.\n\n        var dimension = visualMeta.dimension;\n        var dimName = data.dimensions[dimension];\n        var axis = coordSys.getAxis(dimName);\n\n        // dataToCoor mapping may not be linear, but must be monotonic.\n        var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n            return {\n                coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n                color: stop.color\n            };\n        });\n        var stopLen = colorStops.length;\n        var outerColors = visualMeta.outerColors.slice();\n\n        if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n            colorStops.reverse();\n            outerColors.reverse();\n        }\n\n        var tinyExtent = 10; // Arbitrary value: 10px\n        var minCoord = colorStops[0].coord - tinyExtent;\n        var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n        var coordSpan = maxCoord - minCoord;\n\n        if (coordSpan < 1e-3) {\n            return 'transparent';\n        }\n\n        zrUtil.each(colorStops, function (stop) {\n            stop.offset = (stop.coord - minCoord) / coordSpan;\n        });\n        colorStops.push({\n            offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n            color: outerColors[1] || 'transparent'\n        });\n        colorStops.unshift({ // notice colorStops.length have been changed.\n            offset: stopLen ? colorStops[0].offset : 0.5,\n            color: outerColors[0] || 'transparent'\n        });\n\n        // zrUtil.each(colorStops, function (colorStop) {\n        //     // Make sure each offset has rounded px to avoid not sharp edge\n        //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n        // });\n\n        var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n        gradient[dimName] = minCoord;\n        gradient[dimName + '2'] = maxCoord;\n\n        return gradient;\n    }\n\n    module.exports = ChartView.extend({\n\n        type: 'line',\n\n        init: function () {\n            var lineGroup = new graphic.Group();\n\n            var symbolDraw = new SymbolDraw();\n            this.group.add(symbolDraw.group);\n\n            this._symbolDraw = symbolDraw;\n            this._lineGroup = lineGroup;\n        },\n\n        render: function (seriesModel, ecModel, api) {\n            var coordSys = seriesModel.coordinateSystem;\n            var group = this.group;\n            var data = seriesModel.getData();\n            var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n            var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n\n            var points = data.mapArray(data.getItemLayout, true);\n\n            var isCoordSysPolar = coordSys.type === 'polar';\n            var prevCoordSys = this._coordSys;\n\n            var symbolDraw = this._symbolDraw;\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n\n            var lineGroup = this._lineGroup;\n\n            var hasAnimation = seriesModel.get('animation');\n\n            var isAreaChart = !areaStyleModel.isEmpty();\n            var stackedOnPoints = getStackedOnPoints(coordSys, data);\n\n            var showSymbol = seriesModel.get('showSymbol');\n\n            var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol')\n                && this._getSymbolIgnoreFunc(data, coordSys);\n\n            // Remove temporary symbols\n            var oldData = this._data;\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            // Remove previous created symbols if showSymbol changed to false\n            if (!showSymbol) {\n                symbolDraw.remove();\n            }\n\n            group.add(lineGroup);\n\n            // FIXME step not support polar\n            var step = !isCoordSysPolar && seriesModel.get('step');\n            // Initialization animation or coordinate system changed\n            if (\n                !(polyline && prevCoordSys.type === coordSys.type && step === this._step)\n            ) {\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                if (step) {\n                    // TODO If stacked series is not step\n                    points = turnPointsIntoStep(points, coordSys, step);\n                    stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                }\n\n                polyline = this._newPolyline(points, coordSys, hasAnimation);\n                if (isAreaChart) {\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n            }\n            else {\n                if (isAreaChart && !polygon) {\n                    // If areaStyle is added\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                else if (polygon && !isAreaChart) {\n                    // If areaStyle is removed\n                    lineGroup.remove(polygon);\n                    polygon = this._polygon = null;\n                }\n\n                // Update clipPath\n                lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel));\n\n                // Always update, or it is wrong in the case turning on legend\n                // because points are not changed\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                // Stop symbol animation and sync with line points\n                // FIXME performance?\n                data.eachItemGraphicEl(function (el) {\n                    el.stopAnimation(true);\n                });\n\n                // In the case data zoom triggerred refreshing frequently\n                // Data may not change if line has a category axis. So it should animate nothing\n                if (!isPointsSame(this._stackedOnPoints, stackedOnPoints)\n                    || !isPointsSame(this._points, points)\n                ) {\n                    if (hasAnimation) {\n                        this._updateAnimation(\n                            data, stackedOnPoints, coordSys, api, step\n                        );\n                    }\n                    else {\n                        // Not do it in update with animation\n                        if (step) {\n                            // TODO If stacked series is not step\n                            points = turnPointsIntoStep(points, coordSys, step);\n                            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                        }\n\n                        polyline.setShape({\n                            points: points\n                        });\n                        polygon && polygon.setShape({\n                            points: points,\n                            stackedOnPoints: stackedOnPoints\n                        });\n                    }\n                }\n            }\n\n            var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n\n            polyline.useStyle(zrUtil.defaults(\n                // Use color in lineStyle first\n                lineStyleModel.getLineStyle(),\n                {\n                    fill: 'none',\n                    stroke: visualColor,\n                    lineJoin: 'bevel'\n                }\n            ));\n\n            var smooth = seriesModel.get('smooth');\n            smooth = getSmooth(seriesModel.get('smooth'));\n            polyline.setShape({\n                smooth: smooth,\n                smoothMonotone: seriesModel.get('smoothMonotone'),\n                connectNulls: seriesModel.get('connectNulls')\n            });\n\n            if (polygon) {\n                var stackedOn = data.stackedOn;\n                var stackedOnSmooth = 0;\n\n                polygon.useStyle(zrUtil.defaults(\n                    areaStyleModel.getAreaStyle(),\n                    {\n                        fill: visualColor,\n                        opacity: 0.7,\n                        lineJoin: 'bevel'\n                    }\n                ));\n\n                if (stackedOn) {\n                    var stackedOnSeries = stackedOn.hostModel;\n                    stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n                }\n\n                polygon.setShape({\n                    smooth: smooth,\n                    stackedOnSmooth: stackedOnSmooth,\n                    smoothMonotone: seriesModel.get('smoothMonotone'),\n                    connectNulls: seriesModel.get('connectNulls')\n                });\n            }\n\n            this._data = data;\n            // Save the coordinate system for transition animation when data changed\n            this._coordSys = coordSys;\n            this._stackedOnPoints = stackedOnPoints;\n            this._points = points;\n            this._step = step;\n        },\n\n        dispose: function () {},\n\n        highlight: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n            if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (!symbol) {\n                    // Create a temporary symbol if it is not exists\n                    var pt = data.getItemLayout(dataIndex);\n                    if (!pt) {\n                        // Null data\n                        return;\n                    }\n                    symbol = new Symbol(data, dataIndex);\n                    symbol.position = pt;\n                    symbol.setZ(\n                        seriesModel.get('zlevel'),\n                        seriesModel.get('z')\n                    );\n                    symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n                    symbol.__temp = true;\n                    data.setItemGraphicEl(dataIndex, symbol);\n\n                    // Stop scale animation\n                    symbol.stopSymbolAnimation(true);\n\n                    this.group.add(symbol);\n                }\n                symbol.highlight();\n            }\n            else {\n                // Highlight whole series\n                ChartView.prototype.highlight.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        downplay: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n            if (dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (symbol) {\n                    if (symbol.__temp) {\n                        data.setItemGraphicEl(dataIndex, null);\n                        this.group.remove(symbol);\n                    }\n                    else {\n                        symbol.downplay();\n                    }\n                }\n            }\n            else {\n                // FIXME\n                // can not downplay completely.\n                // Downplay whole series\n                ChartView.prototype.downplay.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolyline: function (points) {\n            var polyline = this._polyline;\n            // Remove previous created polyline\n            if (polyline) {\n                this._lineGroup.remove(polyline);\n            }\n\n            polyline = new polyHelper.Polyline({\n                shape: {\n                    points: points\n                },\n                silent: true,\n                z2: 10\n            });\n\n            this._lineGroup.add(polyline);\n\n            this._polyline = polyline;\n\n            return polyline;\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} stackedOnPoints\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolygon: function (points, stackedOnPoints) {\n            var polygon = this._polygon;\n            // Remove previous created polygon\n            if (polygon) {\n                this._lineGroup.remove(polygon);\n            }\n\n            polygon = new polyHelper.Polygon({\n                shape: {\n                    points: points,\n                    stackedOnPoints: stackedOnPoints\n                },\n                silent: true\n            });\n\n            this._lineGroup.add(polygon);\n\n            this._polygon = polygon;\n            return polygon;\n        },\n        /**\n         * @private\n         */\n        _getSymbolIgnoreFunc: function (data, coordSys) {\n            var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n            // `getLabelInterval` is provided by echarts/component/axis\n            if (categoryAxis && categoryAxis.isLabelIgnored) {\n                return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n            }\n        },\n\n        /**\n         * @private\n         */\n        // FIXME Two value axis\n        _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n            var seriesModel = data.hostModel;\n\n            var diff = lineAnimationDiff(\n                this._data, data,\n                this._stackedOnPoints, stackedOnPoints,\n                this._coordSys, coordSys\n            );\n\n            var current = diff.current;\n            var stackedOnCurrent = diff.stackedOnCurrent;\n            var next = diff.next;\n            var stackedOnNext = diff.stackedOnNext;\n            if (step) {\n                // TODO If stacked series is not step\n                current = turnPointsIntoStep(diff.current, coordSys, step);\n                stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n                next = turnPointsIntoStep(diff.next, coordSys, step);\n                stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n            }\n            // `diff.current` is subset of `current` (which should be ensured by\n            // turnPointsIntoStep), so points in `__points` can be updated when\n            // points in `current` are update during animation.\n            polyline.shape.__points = diff.current;\n            polyline.shape.points = current;\n\n            graphic.updateProps(polyline, {\n                shape: {\n                    points: next\n                }\n            }, seriesModel);\n\n            if (polygon) {\n                polygon.setShape({\n                    points: current,\n                    stackedOnPoints: stackedOnCurrent\n                });\n                graphic.updateProps(polygon, {\n                    shape: {\n                        points: next,\n                        stackedOnPoints: stackedOnNext\n                    }\n                }, seriesModel);\n            }\n\n            var updatedDataInfo = [];\n            var diffStatus = diff.status;\n\n            for (var i = 0; i < diffStatus.length; i++) {\n                var cmd = diffStatus[i].cmd;\n                if (cmd === '=') {\n                    var el = data.getItemGraphicEl(diffStatus[i].idx1);\n                    if (el) {\n                        updatedDataInfo.push({\n                            el: el,\n                            ptIdx: i    // Index of points\n                        });\n                    }\n                }\n            }\n\n            if (polyline.animators && polyline.animators.length) {\n                polyline.animators[0].during(function () {\n                    for (var i = 0; i < updatedDataInfo.length; i++) {\n                        var el = updatedDataInfo[i].el;\n                        el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n                    }\n                });\n            }\n        },\n\n        remove: function (ecModel) {\n            var group = this.group;\n            var oldData = this._data;\n            this._lineGroup.removeAll();\n            this._symbolDraw.remove(true);\n            // Remove temporary created elements when highlighting\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            this._polyline =\n            this._polygon =\n            this._coordSys =\n            this._points =\n            this._stackedOnPoints =\n            this._data = null;\n        }\n    });\n\n\n/***/ }),\n\n/***/ 705:\n/***/ (function(module, exports) {\n\n\n\n    // var arrayDiff = require('zrender/lib/core/arrayDiff');\n    // 'zrender/core/arrayDiff' has been used before, but it did\n    // not do well in performance when roam with fixed dataZoom window.\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n\n    function getStackedOnPoint(coordSys, data, idx) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        var stackedOnSameSign;\n        var stackedOn = data.stackedOn;\n        var val = data.get(valueDim, idx);\n        // Find first stacked value with same sign\n        while (stackedOn &&\n            sign(stackedOn.get(valueDim, idx)) === sign(val)\n        ) {\n            stackedOnSameSign = stackedOn;\n            break;\n        }\n        var stackedData = [];\n        stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n        stackedData[1 - baseDataOffset] = stackedOnSameSign\n            ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n        return coordSys.dataToPoint(stackedData);\n    }\n\n    // function convertToIntId(newIdList, oldIdList) {\n    //     // Generate int id instead of string id.\n    //     // Compare string maybe slow in score function of arrDiff\n\n    //     // Assume id in idList are all unique\n    //     var idIndicesMap = {};\n    //     var idx = 0;\n    //     for (var i = 0; i < newIdList.length; i++) {\n    //         idIndicesMap[newIdList[i]] = idx;\n    //         newIdList[i] = idx++;\n    //     }\n    //     for (var i = 0; i < oldIdList.length; i++) {\n    //         var oldId = oldIdList[i];\n    //         // Same with newIdList\n    //         if (idIndicesMap[oldId]) {\n    //             oldIdList[i] = idIndicesMap[oldId];\n    //         }\n    //         else {\n    //             oldIdList[i] = idx++;\n    //         }\n    //     }\n    // }\n\n    function diffData(oldData, newData) {\n        var diffResult = [];\n\n        newData.diff(oldData)\n            .add(function (idx) {\n                diffResult.push({cmd: '+', idx: idx});\n            })\n            .update(function (newIdx, oldIdx) {\n                diffResult.push({cmd: '=', idx: oldIdx, idx1: newIdx});\n            })\n            .remove(function (idx) {\n                diffResult.push({cmd: '-', idx: idx});\n            })\n            .execute();\n\n        return diffResult;\n    }\n\n    module.exports = function (\n        oldData, newData,\n        oldStackedOnPoints, newStackedOnPoints,\n        oldCoordSys, newCoordSys\n    ) {\n        var diff = diffData(oldData, newData);\n\n        // var newIdList = newData.mapArray(newData.getId);\n        // var oldIdList = oldData.mapArray(oldData.getId);\n\n        // convertToIntId(newIdList, oldIdList);\n\n        // // FIXME One data ?\n        // diff = arrayDiff(oldIdList, newIdList);\n\n        var currPoints = [];\n        var nextPoints = [];\n        // Points for stacking base line\n        var currStackedPoints = [];\n        var nextStackedPoints = [];\n\n        var status = [];\n        var sortedIndices = [];\n        var rawIndices = [];\n        var dims = newCoordSys.dimensions;\n        for (var i = 0; i < diff.length; i++) {\n            var diffItem = diff[i];\n            var pointAdded = true;\n\n            // FIXME, animation is not so perfect when dataZoom window moves fast\n            // Which is in case remvoing or add more than one data in the tail or head\n            switch (diffItem.cmd) {\n                case '=':\n                    var currentPt = oldData.getItemLayout(diffItem.idx);\n                    var nextPt = newData.getItemLayout(diffItem.idx1);\n                    // If previous data is NaN, use next point directly\n                    if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n                        currentPt = nextPt.slice();\n                    }\n                    currPoints.push(currentPt);\n                    nextPoints.push(nextPt);\n\n                    currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n                    nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n\n                    rawIndices.push(newData.getRawIndex(diffItem.idx1));\n                    break;\n                case '+':\n                    var idx = diffItem.idx;\n                    currPoints.push(\n                        oldCoordSys.dataToPoint([\n                            newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)\n                        ])\n                    );\n\n                    nextPoints.push(newData.getItemLayout(idx).slice());\n\n                    currStackedPoints.push(\n                        getStackedOnPoint(oldCoordSys, newData, idx)\n                    );\n                    nextStackedPoints.push(newStackedOnPoints[idx]);\n\n                    rawIndices.push(newData.getRawIndex(idx));\n                    break;\n                case '-':\n                    var idx = diffItem.idx;\n                    var rawIndex = oldData.getRawIndex(idx);\n                    // Data is replaced. In the case of dynamic data queue\n                    // FIXME FIXME FIXME\n                    if (rawIndex !== idx) {\n                        currPoints.push(oldData.getItemLayout(idx));\n                        nextPoints.push(newCoordSys.dataToPoint([\n                            oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)\n                        ]));\n\n                        currStackedPoints.push(oldStackedOnPoints[idx]);\n                        nextStackedPoints.push(\n                            getStackedOnPoint(\n                                newCoordSys, oldData, idx\n                            )\n                        );\n\n                        rawIndices.push(rawIndex);\n                    }\n                    else {\n                        pointAdded = false;\n                    }\n            }\n\n            // Original indices\n            if (pointAdded) {\n                status.push(diffItem);\n                sortedIndices.push(sortedIndices.length);\n            }\n        }\n\n        // Diff result may be crossed if all items are changed\n        // Sort by data index\n        sortedIndices.sort(function (a, b) {\n            return rawIndices[a] - rawIndices[b];\n        });\n\n        var sortedCurrPoints = [];\n        var sortedNextPoints = [];\n\n        var sortedCurrStackedPoints = [];\n        var sortedNextStackedPoints = [];\n\n        var sortedStatus = [];\n        for (var i = 0; i < sortedIndices.length; i++) {\n            var idx = sortedIndices[i];\n            sortedCurrPoints[i] = currPoints[idx];\n            sortedNextPoints[i] = nextPoints[idx];\n\n            sortedCurrStackedPoints[i] = currStackedPoints[idx];\n            sortedNextStackedPoints[i] = nextStackedPoints[idx];\n\n            sortedStatus[i] = status[idx];\n        }\n\n        return {\n            current: sortedCurrPoints,\n            next: sortedNextPoints,\n\n            stackedOnCurrent: sortedCurrStackedPoints,\n            stackedOnNext: sortedNextStackedPoints,\n\n            status: sortedStatus\n        };\n    };\n\n\n/***/ }),\n\n/***/ 706:\n/***/ (function(module, exports, __webpack_require__) {\n\n// Poly path support NaN point\n\n\n    var Path = __webpack_require__(612);\n    var vec2 = __webpack_require__(611);\n    var fixClipWithShadow = __webpack_require__(677);\n\n    var vec2Min = vec2.min;\n    var vec2Max = vec2.max;\n\n    var scaleAndAdd = vec2.scaleAndAdd;\n    var v2Copy = vec2.copy;\n\n    // Temporary variable\n    var v = [];\n    var cp0 = [];\n    var cp1 = [];\n\n    function isPointNull(p) {\n        return isNaN(p[0]) || isNaN(p[1]);\n    }\n\n    function drawSegment(\n        ctx, points, start, segLen, allLen,\n        dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls\n    ) {\n        var prevIdx = 0;\n        var idx = start;\n        for (var k = 0; k < segLen; k++) {\n            var p = points[idx];\n            if (idx >= allLen || idx < 0) {\n                break;\n            }\n            if (isPointNull(p)) {\n                if (connectNulls) {\n                    idx += dir;\n                    continue;\n                }\n                break;\n            }\n\n            if (idx === start) {\n                ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n                v2Copy(cp0, p);\n            }\n            else {\n                if (smooth > 0) {\n                    var nextIdx = idx + dir;\n                    var nextP = points[nextIdx];\n                    if (connectNulls) {\n                        // Find next point not null\n                        while (nextP && isPointNull(points[nextIdx])) {\n                            nextIdx += dir;\n                            nextP = points[nextIdx];\n                        }\n                    }\n\n                    var ratioNextSeg = 0.5;\n                    var prevP = points[prevIdx];\n                    var nextP = points[nextIdx];\n                    // Last point\n                    if (!nextP || isPointNull(nextP)) {\n                        v2Copy(cp1, p);\n                    }\n                    else {\n                        // If next data is null in not connect case\n                        if (isPointNull(nextP) && !connectNulls) {\n                            nextP = p;\n                        }\n\n                        vec2.sub(v, nextP, prevP);\n\n                        var lenPrevSeg;\n                        var lenNextSeg;\n                        if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n                            var dim = smoothMonotone === 'x' ? 0 : 1;\n                            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n                            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n                        }\n                        else {\n                            lenPrevSeg = vec2.dist(p, prevP);\n                            lenNextSeg = vec2.dist(p, nextP);\n                        }\n\n                        // Use ratio of seg length\n                        ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n\n                        scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n                    }\n                    // Smooth constraint\n                    vec2Min(cp0, cp0, smoothMax);\n                    vec2Max(cp0, cp0, smoothMin);\n                    vec2Min(cp1, cp1, smoothMax);\n                    vec2Max(cp1, cp1, smoothMin);\n\n                    ctx.bezierCurveTo(\n                        cp0[0], cp0[1],\n                        cp1[0], cp1[1],\n                        p[0], p[1]\n                    );\n                    // cp0 of next segment\n                    scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n                }\n                else {\n                    ctx.lineTo(p[0], p[1]);\n                }\n            }\n\n            prevIdx = idx;\n            idx += dir;\n        }\n\n        return k;\n    }\n\n    function getBoundingBox(points, smoothConstraint) {\n        var ptMin = [Infinity, Infinity];\n        var ptMax = [-Infinity, -Infinity];\n        if (smoothConstraint) {\n            for (var i = 0; i < points.length; i++) {\n                var pt = points[i];\n                if (pt[0] < ptMin[0]) { ptMin[0] = pt[0]; }\n                if (pt[1] < ptMin[1]) { ptMin[1] = pt[1]; }\n                if (pt[0] > ptMax[0]) { ptMax[0] = pt[0]; }\n                if (pt[1] > ptMax[1]) { ptMax[1] = pt[1]; }\n            }\n        }\n        return {\n            min: smoothConstraint ? ptMin : ptMax,\n            max: smoothConstraint ? ptMax : ptMin\n        };\n    }\n\n    module.exports = {\n\n        Polyline: Path.extend({\n\n            type: 'ec-polyline',\n\n            shape: {\n                points: [],\n\n                smooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            style: {\n                fill: null,\n\n                stroke: '#000'\n            },\n\n            brush: fixClipWithShadow(Path.prototype.brush),\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n\n                var i = 0;\n                var len = points.length;\n\n                var result = getBoundingBox(points, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    i += drawSegment(\n                        ctx, points, i, len, len,\n                        1, result.min, result.max, shape.smooth,\n                        shape.smoothMonotone, shape.connectNulls\n                    ) + 1;\n                }\n            }\n        }),\n\n        Polygon: Path.extend({\n\n            type: 'ec-polygon',\n\n            shape: {\n                points: [],\n\n                // Offset between stacked base points and points\n                stackedOnPoints: [],\n\n                smooth: 0,\n\n                stackedOnSmooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            brush: fixClipWithShadow(Path.prototype.brush),\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n                var stackedOnPoints = shape.stackedOnPoints;\n\n                var i = 0;\n                var len = points.length;\n                var smoothMonotone = shape.smoothMonotone;\n                var bbox = getBoundingBox(points, shape.smoothConstraint);\n                var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    var k = drawSegment(\n                        ctx, points, i, len, len,\n                        1, bbox.min, bbox.max, shape.smooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    drawSegment(\n                        ctx, stackedOnPoints, i + k - 1, k, len,\n                        -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    i += k + 1;\n\n                    ctx.closePath();\n                }\n            }\n        })\n    };\n\n\n/***/ }),\n\n/***/ 707:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// TODO boundaryGap\n\n\n    __webpack_require__(663);\n\n    __webpack_require__(708);\n\n\n/***/ }),\n\n/***/ 708:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var graphic = __webpack_require__(608);\n    var AxisBuilder = __webpack_require__(649);\n    var AxisView = __webpack_require__(658);\n    var cartesianAxisHelper = __webpack_require__(659);\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\n    var getInterval = AxisBuilder.getInterval;\n\n    var axisBuilderAttrs = [\n        'axisLine', 'axisLabel', 'axisTick', 'axisName'\n    ];\n    var selfBuilderAttrs = [\n        'splitArea', 'splitLine'\n    ];\n\n    // function getAlignWithLabel(model, axisModel) {\n    //     var alignWithLabel = model.get('alignWithLabel');\n    //     if (alignWithLabel === 'auto') {\n    //         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n    //     }\n    //     return alignWithLabel;\n    // }\n\n    var CartesianAxisView = AxisView.extend({\n\n        type: 'cartesianAxis',\n\n        axisPointerClass: 'CartesianAxisPointer',\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n\n            this.group.removeAll();\n\n            var oldAxisGroup = this._axisGroup;\n            this._axisGroup = new graphic.Group();\n\n            this.group.add(this._axisGroup);\n\n            if (!axisModel.get('show')) {\n                return;\n            }\n\n            var gridModel = axisModel.getCoordSysModel();\n\n            var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n\n            var axisBuilder = new AxisBuilder(axisModel, layout);\n\n            zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n            this._axisGroup.add(axisBuilder.getGroup());\n\n            zrUtil.each(selfBuilderAttrs, function (name) {\n                if (axisModel.get(name + '.show')) {\n                    this['_' + name](axisModel, gridModel, layout.labelInterval);\n                }\n            }, this);\n\n            graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n\n            CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitLine: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.scale.isBlank()) {\n                return;\n            }\n\n            var splitLineModel = axisModel.getModel('splitLine');\n            var lineStyleModel = splitLineModel.getModel('lineStyle');\n            var lineColors = lineStyleModel.get('color');\n\n            var lineInterval = getInterval(splitLineModel, labelInterval);\n\n            lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n            var isHorizontal = axis.isHorizontal();\n\n            var lineCount = 0;\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitLineModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var p1 = [];\n            var p2 = [];\n            // Simple optimization\n            // Batching the lines if color are the same\n            var lineStyle = lineStyleModel.getLineStyle();\n            for (var i = 0; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, lineInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                if (isHorizontal) {\n                    p1[0] = tickCoord;\n                    p1[1] = gridRect.y;\n                    p2[0] = tickCoord;\n                    p2[1] = gridRect.y + gridRect.height;\n                }\n                else {\n                    p1[0] = gridRect.x;\n                    p1[1] = tickCoord;\n                    p2[0] = gridRect.x + gridRect.width;\n                    p2[1] = tickCoord;\n                }\n\n                var colorIndex = (lineCount++) % lineColors.length;\n                this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n                    anid: 'line_' + ticks[i],\n\n                    shape: {\n                        x1: p1[0],\n                        y1: p1[1],\n                        x2: p2[0],\n                        y2: p2[1]\n                    },\n                    style: zrUtil.defaults({\n                        stroke: lineColors[colorIndex]\n                    }, lineStyle),\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitArea: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.scale.isBlank()) {\n                return;\n            }\n\n            var splitAreaModel = axisModel.getModel('splitArea');\n            var areaStyleModel = splitAreaModel.getModel('areaStyle');\n            var areaColors = areaStyleModel.get('color');\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitAreaModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var prevX = axis.toGlobalCoord(ticksCoords[0]);\n            var prevY = axis.toGlobalCoord(ticksCoords[0]);\n\n            var count = 0;\n\n            var areaInterval = getInterval(splitAreaModel, labelInterval);\n\n            var areaStyle = areaStyleModel.getAreaStyle();\n            areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n            for (var i = 1; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, areaInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                var x;\n                var y;\n                var width;\n                var height;\n                if (axis.isHorizontal()) {\n                    x = prevX;\n                    y = gridRect.y;\n                    width = tickCoord - x;\n                    height = gridRect.height;\n                }\n                else {\n                    x = gridRect.x;\n                    y = prevY;\n                    width = gridRect.width;\n                    height = tickCoord - y;\n                }\n\n                var colorIndex = (count++) % areaColors.length;\n                this._axisGroup.add(new graphic.Rect({\n                    anid: 'area_' + ticks[i],\n\n                    shape: {\n                        x: x,\n                        y: y,\n                        width: width,\n                        height: height\n                    },\n                    style: zrUtil.defaults({\n                        fill: areaColors[colorIndex]\n                    }, areaStyle),\n                    silent: true\n                }));\n\n                prevX = x + width;\n                prevY = y + height;\n            }\n        }\n    });\n\n    CartesianAxisView.extend({\n        type: 'xAxis'\n    });\n    CartesianAxisView.extend({\n        type: 'yAxis'\n    });\n\n\n\n/***/ }),\n\n/***/ 709:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var echarts = __webpack_require__(607);\n    var axisPointerModelHelper = __webpack_require__(629);\n    var axisTrigger = __webpack_require__(714);\n    var zrUtil = __webpack_require__(606);\n\n    __webpack_require__(710);\n    __webpack_require__(711);\n\n    // CartesianAxisPointer is not supposed to be required here. But consider\n    // echarts.simple.js and online build tooltip, which only require gridSimple,\n    // CartesianAxisPointer should be able to required somewhere.\n    __webpack_require__(713);\n\n    echarts.registerPreprocessor(function (option) {\n        // Always has a global axisPointerModel for default setting.\n        if (option) {\n            (!option.axisPointer || option.axisPointer.length === 0)\n                && (option.axisPointer = {});\n\n            var link = option.axisPointer.link;\n            // Normalize to array to avoid object mergin. But if link\n            // is not set, remain null/undefined, otherwise it will\n            // override existent link setting.\n            if (link && !zrUtil.isArray(link)) {\n                option.axisPointer.link = [link];\n            }\n        }\n    });\n\n    // This process should proformed after coordinate systems created\n    // and series data processed. So put it on statistic processing stage.\n    echarts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n        // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n        // allAxesInfo should be updated when setOption performed.\n        ecModel.getComponent('axisPointer').coordSysAxesInfo\n            = axisPointerModelHelper.collect(ecModel, api);\n    });\n\n    // Broadcast to all views.\n    echarts.registerAction({\n        type: 'updateAxisPointer',\n        event: 'updateAxisPointer',\n        update: ':updateAxisPointer'\n    }, axisTrigger);\n\n\n\n/***/ }),\n\n/***/ 710:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var echarts = __webpack_require__(607);\n\n    var AxisPointerModel = echarts.extendComponentModel({\n\n        type: 'axisPointer',\n\n        coordSysAxesInfo: null,\n\n        defaultOption: {\n            // 'auto' means that show when triggered by tooltip or handle.\n            show: 'auto',\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: null, // set default in AxisPonterView.js\n\n            zlevel: 0,\n            z: 50,\n\n            type: 'line',\n            // axispointer triggered by tootip determine snap automatically,\n            // see `modelHelper`.\n            snap: false,\n            triggerTooltip: true,\n\n            value: null,\n            status: null, // Init value depends on whether handle is used.\n\n            // [group0, group1, ...]\n            // Each group can be: {\n            //      mapper: function () {},\n            //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n            //      xAxisId: ...,\n            //      yAxisName: ...,\n            //      angleAxisIndex: ...\n            // }\n            // mapper: can be ignored.\n            //      input: {axisInfo, value}\n            //      output: {axisInfo, value}\n            link: [],\n\n            // Do not set 'auto' here, otherwise global animation: false\n            // will not effect at this axispointer.\n            animation: null,\n            animationDurationUpdate: 200,\n\n            lineStyle: {\n                color: '#aaa',\n                width: 1,\n                type: 'solid'\n            },\n\n            shadowStyle: {\n                color: 'rgba(150,150,150,0.3)'\n            },\n\n            label: {\n                show: true,\n                formatter: null, // string | Function\n                precision: 'auto', // Or a number like 0, 1, 2 ...\n                margin: 3,\n                color: '#fff',\n                padding: [5, 7, 5, 7],\n                backgroundColor: 'auto', // default: axis line color\n                borderColor: null,\n                borderWidth: 0,\n                shadowBlur: 3,\n                shadowColor: '#aaa'\n                // Considering applicability, common style should\n                // better not have shadowOffset.\n                // shadowOffsetX: 0,\n                // shadowOffsetY: 2\n            },\n\n            handle: {\n                show: false,\n                icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z', // jshint ignore:line\n                size: 45,\n                // handle margin is from symbol center to axis, which is stable when circular move.\n                margin: 50,\n                // color: '#1b8bbd'\n                // color: '#2f4554'\n                color: '#333',\n                shadowBlur: 3,\n                shadowColor: '#aaa',\n                shadowOffsetX: 0,\n                shadowOffsetY: 2,\n\n                // For mobile performance\n                throttle: 40\n            }\n        }\n\n    });\n\n    module.exports = AxisPointerModel;\n\n\n\n/***/ }),\n\n/***/ 711:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var globalListener = __webpack_require__(661);\n\n    var AxisPonterView = __webpack_require__(607).extendComponentView({\n\n        type: 'axisPointer',\n\n        render: function (globalAxisPointerModel, ecModel, api) {\n            var globalTooltipModel = ecModel.getComponent('tooltip');\n            var triggerOn = globalAxisPointerModel.get('triggerOn')\n                || (globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click');\n\n            // Register global listener in AxisPointerView to enable\n            // AxisPointerView to be independent to Tooltip.\n            globalListener.register(\n                'axisPointer',\n                api,\n                function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none'\n                        && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)\n                    ) {\n                        dispatchAction({\n                            type: 'updateAxisPointer',\n                            currTrigger: currTrigger,\n                            x: e && e.offsetX,\n                            y: e && e.offsetY\n                        });\n                    }\n                }\n            );\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            globalListener.disopse(api.getZr(), 'axisPointer');\n            AxisPonterView.superApply(this._model, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            globalListener.unregister('axisPointer', api);\n            AxisPonterView.superApply(this._model, 'dispose', arguments);\n        }\n\n    });\n\n\n\n/***/ }),\n\n/***/ 712:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var clazzUtil = __webpack_require__(616);\n    var graphic = __webpack_require__(608);\n    var get = __webpack_require__(609).makeGetter();\n    var axisPointerModelHelper = __webpack_require__(629);\n    var eventTool = __webpack_require__(625);\n    var throttle = __webpack_require__(666);\n\n    var clone = zrUtil.clone;\n    var bind = zrUtil.bind;\n\n    /**\n     * Base axis pointer class in 2D.\n     * Implemenents {module:echarts/component/axis/IAxisPointer}.\n     */\n    function BaseAxisPointer () {\n    }\n\n    BaseAxisPointer.prototype = {\n\n        /**\n         * @private\n         */\n        _group: null,\n\n        /**\n         * @private\n         */\n        _lastGraphicKey: null,\n\n        /**\n         * @private\n         */\n        _handle: null,\n\n        /**\n         * @private\n         */\n        _dragging: false,\n\n        /**\n         * @private\n         */\n        _lastValue: null,\n\n        /**\n         * @private\n         */\n        _lastStatus: null,\n\n        /**\n         * @private\n         */\n        _payloadInfo: null,\n\n        /**\n         * In px, arbitrary value. Do not set too small,\n         * no animation is ok for most cases.\n         * @protected\n         */\n        animationThreshold: 15,\n\n        /**\n         * @implement\n         */\n        render: function (axisModel, axisPointerModel, api, forceRender) {\n            var value = axisPointerModel.get('value');\n            var status = axisPointerModel.get('status');\n\n            // Bind them to `this`, not in closure, otherwise they will not\n            // be replaced when user calling setOption in not merge mode.\n            this._axisModel = axisModel;\n            this._axisPointerModel = axisPointerModel;\n            this._api = api;\n\n            // Optimize: `render` will be called repeatly during mouse move.\n            // So it is power consuming if performing `render` each time,\n            // especially on mobile device.\n            if (!forceRender\n                && this._lastValue === value\n                && this._lastStatus === status\n            ) {\n                return;\n            }\n            this._lastValue = value;\n            this._lastStatus = status;\n\n            var group = this._group;\n            var handle = this._handle;\n\n            if (!status || status === 'hide') {\n                // Do not clear here, for animation better.\n                group && group.hide();\n                handle && handle.hide();\n                return;\n            }\n            group && group.show();\n            handle && handle.show();\n\n            // Otherwise status is 'show'\n            var elOption = {};\n            this.makeElOption(elOption, value, axisModel, axisPointerModel, api);\n\n            // Enable change axis pointer type.\n            var graphicKey = elOption.graphicKey;\n            if (graphicKey !== this._lastGraphicKey) {\n                this.clear(api);\n            }\n            this._lastGraphicKey = graphicKey;\n\n            var moveAnimation = this._moveAnimation =\n                this.determineAnimation(axisModel, axisPointerModel);\n\n            if (!group) {\n                group = this._group = new graphic.Group();\n                this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n                this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n                api.getZr().add(group);\n            }\n            else {\n                var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n                this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n                this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n            }\n\n            updateMandatoryProps(group, axisPointerModel, true);\n\n            this._renderHandle(value);\n        },\n\n        /**\n         * @implement\n         */\n        remove: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @implement\n         */\n        dispose: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @protected\n         */\n        determineAnimation: function (axisModel, axisPointerModel) {\n            var animation = axisPointerModel.get('animation');\n            var axis = axisModel.axis;\n            var isCategoryAxis = axis.type === 'category';\n            var useSnap = axisPointerModel.get('snap');\n\n            // Value axis without snap always do not snap.\n            if (!useSnap && !isCategoryAxis) {\n                return false;\n            }\n\n            if (animation === 'auto' || animation == null) {\n                var animationThreshold = this.animationThreshold;\n                if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n                    return true;\n                }\n\n                // It is important to auto animation when snap used. Consider if there is\n                // a dataZoom, animation will be disabled when too many points exist, while\n                // it will be enabled for better visual effect when little points exist.\n                if (useSnap) {\n                    var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n                    var axisExtent = axis.getExtent();\n                    // Approximate band width\n                    return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n                }\n\n                return false;\n            }\n\n            return animation === true;\n        },\n\n        /**\n         * add {pointer, label, graphicKey} to elOption\n         * @protected\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            // Shoule be implemenented by sub-class.\n        },\n\n        /**\n         * @protected\n         */\n        createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n            var pointerOption = elOption.pointer;\n            if (pointerOption) {\n                var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](\n                    clone(elOption.pointer)\n                );\n                group.add(pointerEl);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n            if (elOption.label) {\n                var labelEl = get(group).labelEl = new graphic.Rect(\n                    clone(elOption.label)\n                );\n\n                group.add(labelEl);\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updatePointerEl: function (group, elOption, updateProps) {\n            var pointerEl = get(group).pointerEl;\n            if (pointerEl) {\n                pointerEl.setStyle(elOption.pointer.style);\n                updateProps(pointerEl, {shape: elOption.pointer.shape});\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n            var labelEl = get(group).labelEl;\n            if (labelEl) {\n                labelEl.setStyle(elOption.label.style);\n                updateProps(labelEl, {\n                    // Consider text length change in vertical axis, animation should\n                    // be used on shape, otherwise the effect will be weird.\n                    shape: elOption.label.shape,\n                    position: elOption.label.position\n                });\n\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _renderHandle: function (value) {\n            if (this._dragging || !this.updateHandleTransform) {\n                return;\n            }\n\n            var axisPointerModel = this._axisPointerModel;\n            var zr = this._api.getZr();\n            var handle = this._handle;\n            var handleModel = axisPointerModel.getModel('handle');\n\n            var status = axisPointerModel.get('status');\n            if (!handleModel.get('show') || !status || status === 'hide') {\n                handle && zr.remove(handle);\n                this._handle = null;\n                return;\n            }\n\n            var isInit;\n            if (!this._handle) {\n                isInit = true;\n                handle = this._handle = graphic.createIcon(\n                    handleModel.get('icon'), \n                    {\n                        cursor: 'move',\n                        draggable: true,\n                        onmousemove: function (e) {\n                            // Fot mobile devicem, prevent screen slider on the button.\n                            eventTool.stop(e.event);\n                        },\n                        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n                        drift: bind(this._onHandleDragMove, this),\n                        ondragend: bind(this._onHandleDragEnd, this)\n                    }\n                );\n                zr.add(handle);\n            }\n\n            updateMandatoryProps(handle, axisPointerModel, false);\n\n            // update style\n            var includeStyles = [\n                'color', 'borderColor', 'borderWidth', 'opacity',\n                'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'\n            ];\n            handle.setStyle(handleModel.getItemStyle(null, includeStyles));\n\n            // update position\n            var handleSize = handleModel.get('size');\n            if (!zrUtil.isArray(handleSize)) {\n                handleSize = [handleSize, handleSize];\n            }\n            handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n\n            throttle.createOrUpdate(\n                this,\n                '_doDispatchAxisPointer',\n                handleModel.get('throttle') || 0,\n                'fixRate'\n            );\n\n            this._moveHandleToValue(value, isInit);\n        },\n\n        /**\n         * @private\n         */\n        _moveHandleToValue: function (value, isInit) {\n            updateProps(\n                this._axisPointerModel,\n                !isInit && this._moveAnimation,\n                this._handle,\n                getHandleTransProps(this.getHandleTransform(\n                    value, this._axisModel, this._axisPointerModel\n                ))\n            );\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragMove: function (dx, dy) {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            this._dragging = true;\n\n            // Persistent for throttle.\n            var trans = this.updateHandleTransform(\n                getHandleTransProps(handle),\n                [dx, dy],\n                this._axisModel,\n                this._axisPointerModel\n            );\n            this._payloadInfo = trans;\n\n            handle.stopAnimation();\n            handle.attr(getHandleTransProps(trans));\n            get(handle).lastProp = null;\n\n            this._doDispatchAxisPointer();\n        },\n\n        /**\n         * Throttled method.\n         * @private\n         */\n        _doDispatchAxisPointer: function () {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var payloadInfo = this._payloadInfo;\n            var axisModel = this._axisModel;\n            this._api.dispatchAction({\n                type: 'updateAxisPointer',\n                x: payloadInfo.cursorPoint[0],\n                y: payloadInfo.cursorPoint[1],\n                tooltipOption: payloadInfo.tooltipOption,\n                axesInfo: [{\n                    axisDim: axisModel.axis.dim,\n                    axisIndex: axisModel.componentIndex\n                }]\n            });\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragEnd: function (moveAnimation) {\n            this._dragging = false;\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var value = this._axisPointerModel.get('value');\n            // Consider snap or categroy axis, handle may be not consistent with\n            // axisPointer. So move handle to align the exact value position when\n            // drag ended.\n            this._moveHandleToValue(value);\n\n            // For the effect: tooltip will be shown when finger holding on handle\n            // button, and will be hidden after finger left handle button.\n            this._api.dispatchAction({\n                type: 'hideTip'\n            });\n        },\n\n        /**\n         * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {number} value\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0}\n         */\n        getHandleTransform: null,\n\n        /**\n         * * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {Object} transform {position, rotation}\n         * @param {Array.<number>} delta [dx, dy]\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n         */\n        updateHandleTransform: null,\n\n        /**\n         * @private\n         */\n        clear: function (api) {\n            this._lastValue = null;\n            this._lastStatus = null;\n\n            var zr = api.getZr();\n            var group = this._group;\n            var handle = this._handle;\n            if (zr && group) {\n                this._lastGraphicKey = null;\n                group && zr.remove(group);\n                handle && zr.remove(handle);\n                this._group = null;\n                this._handle = null;\n                this._payloadInfo = null;\n            }\n        },\n\n        /**\n         * @protected\n         */\n        doClear: function () {\n            // Implemented by sub-class if necessary.\n        },\n\n        /**\n         * @protected\n         * @param {Array.<number>} xy\n         * @param {Array.<number>} wh\n         * @param {number} [xDimIndex=0] or 1\n         */\n        buildLabel: function (xy, wh, xDimIndex) {\n            xDimIndex = xDimIndex || 0;\n            return {\n                x: xy[xDimIndex],\n                y: xy[1 - xDimIndex],\n                width: wh[xDimIndex],\n                height: wh[1 - xDimIndex]\n            };\n        }\n    };\n\n    BaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\n\n    function updateProps(animationModel, moveAnimation, el, props) {\n        // Animation optimize.\n        if (!propsEqual(get(el).lastProp, props)) {\n            get(el).lastProp = props;\n            moveAnimation\n                ? graphic.updateProps(el, props, animationModel)\n                : (el.stopAnimation(), el.attr(props));\n        }\n    }\n\n    function propsEqual(lastProps, newProps) {\n        if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n            var equals = true;\n            zrUtil.each(newProps, function (item, key) {\n                equals = equals && propsEqual(lastProps[key], item);\n            });\n            return !!equals;\n        }\n        else {\n            return lastProps === newProps;\n        }\n    }\n\n    function updateLabelShowHide(labelEl, axisPointerModel) {\n        labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n    }\n\n    function getHandleTransProps(trans) {\n        return {\n            position: trans.position.slice(),\n            rotation: trans.rotation || 0\n        };\n    }\n\n    function updateMandatoryProps(group, axisPointerModel, silent) {\n        var z = axisPointerModel.get('z');\n        var zlevel = axisPointerModel.get('zlevel');\n\n        group && group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n                el.silent = silent;\n            }\n        });\n    }\n\n    clazzUtil.enableClassExtend(BaseAxisPointer);\n\n    module.exports = BaseAxisPointer;\n\n\n/***/ }),\n\n/***/ 713:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var graphic = __webpack_require__(608);\n    var BaseAxisPointer = __webpack_require__(712);\n    var viewHelper = __webpack_require__(662);\n    var cartesianAxisHelper = __webpack_require__(659);\n    var AxisView = __webpack_require__(658);\n\n    var CartesianAxisPointer = BaseAxisPointer.extend({\n\n        /**\n         * @override\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisPointerType = axisPointerModel.get('type');\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n            if (axisPointerType && axisPointerType !== 'none') {\n                var elStyle = viewHelper.buildElStyle(axisPointerModel);\n                var pointerOption = pointerShapeBuilder[axisPointerType](\n                    axis, pixelValue, otherExtent, elStyle\n                );\n                pointerOption.style = elStyle;\n                elOption.graphicKey = pointerOption.type;\n                elOption.pointer = pointerOption;\n            }\n\n            var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n            viewHelper.buildCartesianSingleLabelElOption(\n                value, elOption, layoutInfo, axisModel, axisPointerModel, api\n            );\n        },\n\n        /**\n         * @override\n         */\n        getHandleTransform: function (value, axisModel, axisPointerModel) {\n            var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n                labelInside: false\n            });\n            layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n            return {\n                position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n                rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n            };\n        },\n\n        /**\n         * @override\n         */\n        updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisExtent = axis.getGlobalExtent(true);\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var dimIndex = axis.dim === 'x' ? 0 : 1;\n\n            var currPosition = transform.position;\n            currPosition[dimIndex] += delta[dimIndex];\n            currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n            currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n\n            var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n            var cursorPoint = [cursorOtherValue, cursorOtherValue];\n            cursorPoint[dimIndex] = currPosition[dimIndex];\n\n            // Make tooltip do not overlap axisPointer and in the middle of the grid.\n            var tooltipOptions = [{verticalAlign: 'middle'}, {align: 'center'}];\n\n            return {\n                position: currPosition,\n                rotation: transform.rotation,\n                cursorPoint: cursorPoint,\n                tooltipOption: tooltipOptions[dimIndex]\n            };\n        }\n\n    });\n\n    function getCartesian(grid, axis) {\n        var opt = {};\n        opt[axis.dim + 'AxisIndex'] = axis.index;\n        return grid.getCartesian(opt);\n    }\n\n    var pointerShapeBuilder = {\n\n        line: function (axis, pixelValue, otherExtent, elStyle) {\n            var targetShape = viewHelper.makeLineShape(\n                [pixelValue, otherExtent[0]],\n                [pixelValue, otherExtent[1]],\n                getAxisDimIndex(axis)\n            );\n            graphic.subPixelOptimizeLine({\n                shape: targetShape,\n                style: elStyle\n            });\n            return {\n                type: 'Line',\n                shape: targetShape\n            };\n        },\n\n        shadow: function (axis, pixelValue, otherExtent, elStyle) {\n            var bandWidth = axis.getBandWidth();\n            var span = otherExtent[1] - otherExtent[0];\n            return {\n                type: 'Rect',\n                shape: viewHelper.makeRectShape(\n                    [pixelValue - bandWidth / 2, otherExtent[0]],\n                    [bandWidth, span],\n                    getAxisDimIndex(axis)\n                )\n            };\n        }\n    };\n\n    function getAxisDimIndex(axis) {\n        return axis.dim === 'x' ? 0 : 1;\n    }\n\n    AxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\n\n    module.exports = CartesianAxisPointer;\n\n\n/***/ }),\n\n/***/ 714:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var modelUtil = __webpack_require__(609);\n    var modelHelper = __webpack_require__(629);\n    var findPointFromSeries = __webpack_require__(660);\n\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n    var get = modelUtil.makeGetter();\n\n    /**\n     * Basic logic: check all axis, if they do not demand show/highlight,\n     * then hide/downplay them.\n     *\n     * @param {Object} coordSysAxesInfo\n     * @param {Object} payload\n     * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n     * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n     *              trigger axisPointer and tooltip.\n     * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n     *              trigger axisPointer and tooltip.\n     * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n     * @param {Object} [payload.dataIndex] finder, restrict target axes.\n     * @param {Object} [payload.axesInfo] finder, restrict target axes.\n     *        [{\n     *          axisDim: 'x'|'y'|'angle'|...,\n     *          axisIndex: ...,\n     *          value: ...\n     *        }, ...]\n     * @param {Function} [payload.dispatchAction]\n     * @param {Object} [payload.tooltipOption]\n     * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n     *        which can be specified in dispatchAction\n     * @param {module:echarts/model/Global} ecModel\n     * @param {module:echarts/ExtensionAPI} api\n     * @return {Object} content of event obj for echarts.connect.\n     */\n    function axisTrigger(payload, ecModel, api) {\n        var currTrigger = payload.currTrigger;\n        var point = [payload.x, payload.y];\n        var finder = payload;\n        var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n        var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n        // Pending\n        // See #6121. But we are not able to reproduce it yet.\n        if (!coordSysAxesInfo) {\n            return;\n        }\n\n        if (illegalPoint(point)) {\n            // Used in the default behavior of `connection`: use the sample seriesIndex\n            // and dataIndex. And also used in the tooltipView trigger.\n            point = findPointFromSeries({\n                seriesIndex: finder.seriesIndex,\n                // Do not use dataIndexInside from other ec instance.\n                // FIXME: auto detect it?\n                dataIndex: finder.dataIndex\n            }, ecModel).point;\n        }\n        var isIllegalPoint = illegalPoint(point);\n\n        // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n        // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n        // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n        // and dataIndex.\n        var inputAxesInfo = finder.axesInfo;\n\n        var axesInfo = coordSysAxesInfo.axesInfo;\n        var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n        var outputFinder = {};\n\n        var showValueMap = {};\n        var dataByCoordSys = {list: [], map: {}};\n        var updaters = {\n            showPointer: curry(showPointer, showValueMap),\n            showTooltip: curry(showTooltip, dataByCoordSys)\n        };\n\n        // Process for triggered axes.\n        each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n            // If a point given, it must be contained by the coordinate system.\n            var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n\n            each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n                var axis = axisInfo.axis;\n                var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo);\n                // If no inputAxesInfo, no axis is restricted.\n                if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n                    var val = inputAxisInfo && inputAxisInfo.value;\n                    if (val == null && !isIllegalPoint) {\n                        val = axis.pointToData(point);\n                    }\n                    val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n                }\n            });\n        });\n\n        // Process for linked axes.\n        var linkTriggers = {};\n        each(axesInfo, function (tarAxisInfo, tarKey) {\n            var linkGroup = tarAxisInfo.linkGroup;\n\n            // If axis has been triggered in the previous stage, it should not be triggered by link.\n            if (linkGroup && !showValueMap[tarKey]) {\n                each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n                    var srcValItem = showValueMap[srcKey];\n                    // If srcValItem exist, source axis is triggered, so link to target axis.\n                    if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n                        var val = srcValItem.value;\n                        linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(\n                            val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo)\n                        )));\n                        linkTriggers[tarAxisInfo.key] = val;\n                    }\n                });\n            }\n        });\n        each(linkTriggers, function (val, tarKey) {\n            processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n        });\n\n        updateModelActually(showValueMap, axesInfo, outputFinder);\n        dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n        dispatchHighDownActually(axesInfo, dispatchAction, api);\n\n        return outputFinder;\n    }\n\n    function processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n        var axis = axisInfo.axis;\n\n        if (axis.scale.isBlank() || !axis.containData(newValue)) {\n            return;\n        }\n\n        if (!axisInfo.involveSeries) {\n            updaters.showPointer(axisInfo, newValue);\n            return;\n        }\n\n        // Heavy calculation. So put it after axis.containData checking.\n        var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n        var payloadBatch = payloadInfo.payloadBatch;\n        var snapToValue = payloadInfo.snapToValue;\n\n        // Fill content of event obj for echarts.connect.\n        // By defualt use the first involved series data as a sample to connect.\n        if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n            zrUtil.extend(outputFinder, payloadBatch[0]);\n        }\n\n        // If no linkSource input, this process is for collecting link\n        // target, where snap should not be accepted.\n        if (!dontSnap && axisInfo.snap) {\n            if (axis.containData(snapToValue) && snapToValue != null) {\n                newValue = snapToValue;\n            }\n        }\n\n        updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder);\n        // Tooltip should always be snapToValue, otherwise there will be\n        // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n        updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n    }\n\n    function buildPayloadsBySeries(value, axisInfo) {\n        var axis = axisInfo.axis;\n        var dim = axis.dim;\n        var snapToValue = value;\n        var payloadBatch = [];\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n\n        each(axisInfo.seriesModels, function (series, idx) {\n            var dataDim = series.coordDimToDataDim(dim);\n            var seriesNestestValue;\n            var dataIndices;\n\n            if (series.getAxisTooltipData) {\n                var result = series.getAxisTooltipData(dataDim, value, axis);\n                dataIndices = result.dataIndices;\n                seriesNestestValue = result.nestestValue;\n            }\n            else {\n                dataIndices = series.getData().indicesOfNearest(\n                    dataDim[0],\n                    value,\n                    // Add a threshold to avoid find the wrong dataIndex\n                    // when data length is not same.\n                    false, axis.type === 'category' ? 0.5 : null\n                );\n                if (!dataIndices.length) {\n                    return;\n                }\n                seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n            }\n\n            if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n                return;\n            }\n\n            var diff = value - seriesNestestValue;\n            var dist = Math.abs(diff);\n            // Consider category case\n            if (dist <= minDist) {\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    snapToValue = seriesNestestValue;\n                    payloadBatch.length = 0;\n                }\n                each(dataIndices, function (dataIndex) {\n                    payloadBatch.push({\n                        seriesIndex: series.seriesIndex,\n                        dataIndexInside: dataIndex,\n                        dataIndex: series.getData().getRawIndex(dataIndex)\n                    });\n                });\n            }\n        });\n\n        return {\n            payloadBatch: payloadBatch,\n            snapToValue: snapToValue\n        };\n    }\n\n    function showPointer(showValueMap, axisInfo, value, payloadBatch) {\n        showValueMap[axisInfo.key] = {value: value, payloadBatch: payloadBatch};\n    }\n\n    function showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n        var payloadBatch = payloadInfo.payloadBatch;\n        var axis = axisInfo.axis;\n        var axisModel = axis.model;\n        var axisPointerModel = axisInfo.axisPointerModel;\n\n        // If no data, do not create anything in dataByCoordSys,\n        // whose length will be used to judge whether dispatch action.\n        if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n            return;\n        }\n\n        var coordSysModel = axisInfo.coordSys.model;\n        var coordSysKey = modelHelper.makeKey(coordSysModel);\n        var coordSysItem = dataByCoordSys.map[coordSysKey];\n        if (!coordSysItem) {\n            coordSysItem = dataByCoordSys.map[coordSysKey] = {\n                coordSysId: coordSysModel.id,\n                coordSysIndex: coordSysModel.componentIndex,\n                coordSysType: coordSysModel.type,\n                coordSysMainType: coordSysModel.mainType,\n                dataByAxis: []\n            };\n            dataByCoordSys.list.push(coordSysItem);\n        }\n\n        coordSysItem.dataByAxis.push({\n            axisDim: axis.dim,\n            axisIndex: axisModel.componentIndex,\n            axisType: axisModel.type,\n            axisId: axisModel.id,\n            value: value,\n            // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n            // depends that all models have been updated. So it should not be performed\n            // here. Considering axisPointerModel used here is volatile, which is hard\n            // to be retrieve in TooltipView, we prepare parameters here.\n            valueLabelOpt: {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            },\n            seriesDataIndices: payloadBatch.slice()\n        });\n    }\n\n    function updateModelActually(showValueMap, axesInfo, outputFinder) {\n        var outputAxesInfo = outputFinder.axesInfo = [];\n        // Basic logic: If no 'show' required, 'hide' this axisPointer.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            var valItem = showValueMap[key];\n\n            if (valItem) {\n                !axisInfo.useHandle && (option.status = 'show');\n                option.value = valItem.value;\n                // For label formatter param and highlight.\n                option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n            }\n            // When always show (e.g., handle used), remain\n            // original value and status.\n            else {\n                // If hide, value still need to be set, consider\n                // click legend to toggle axis blank.\n                !axisInfo.useHandle && (option.status = 'hide');\n            }\n\n            // If status is 'hide', should be no info in payload.\n            option.status === 'show' && outputAxesInfo.push({\n                axisDim: axisInfo.axis.dim,\n                axisIndex: axisInfo.axis.model.componentIndex,\n                value: option.value\n            });\n        });\n    }\n\n    function dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n        // Basic logic: If no showTip required, hideTip will be dispatched.\n        if (illegalPoint(point) || !dataByCoordSys.list.length) {\n            dispatchAction({type: 'hideTip'});\n            return;\n        }\n\n        // In most case only one axis (or event one series is used). It is\n        // convinient to fetch payload.seriesIndex and payload.dataIndex\n        // dirtectly. So put the first seriesIndex and dataIndex of the first\n        // axis on the payload.\n        var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n\n        dispatchAction({\n            type: 'showTip',\n            escapeConnect: true,\n            x: point[0],\n            y: point[1],\n            tooltipOption: payload.tooltipOption,\n            position: payload.position,\n            dataIndexInside: sampleItem.dataIndexInside,\n            dataIndex: sampleItem.dataIndex,\n            seriesIndex: sampleItem.seriesIndex,\n            dataByCoordSys: dataByCoordSys.list\n        });\n    }\n\n    function dispatchHighDownActually(axesInfo, dispatchAction, api) {\n        // FIXME\n        // highlight status modification shoule be a stage of main process?\n        // (Consider confilct (e.g., legend and axisPointer) and setOption)\n\n        var zr = api.getZr();\n        var highDownKey = 'axisPointerLastHighlights';\n        var lastHighlights = get(zr)[highDownKey] || {};\n        var newHighlights = get(zr)[highDownKey] = {};\n\n        // Update highlight/downplay status according to axisPointer model.\n        // Build hash map and remove duplicate incidentally.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n                var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n                newHighlights[key] = batchItem;\n            });\n        });\n\n        // Diff.\n        var toHighlight = [];\n        var toDownplay = [];\n        zrUtil.each(lastHighlights, function (batchItem, key) {\n            !newHighlights[key] && toDownplay.push(batchItem);\n        });\n        zrUtil.each(newHighlights, function (batchItem, key) {\n            !lastHighlights[key] && toHighlight.push(batchItem);\n        });\n\n        toDownplay.length && api.dispatchAction({\n            type: 'downplay', escapeConnect: true, batch: toDownplay\n        });\n        toHighlight.length && api.dispatchAction({\n            type: 'highlight', escapeConnect: true, batch: toHighlight\n        });\n    }\n\n    function findInputAxisInfo(inputAxesInfo, axisInfo) {\n        for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n            var inputAxisInfo = inputAxesInfo[i];\n            if (axisInfo.axis.dim === inputAxisInfo.axisDim\n                && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex\n            ) {\n                return inputAxisInfo;\n            }\n        }\n    }\n\n    function makeMapperParam(axisInfo) {\n        var axisModel = axisInfo.axis.model;\n        var item = {};\n        var dim = item.axisDim = axisInfo.axis.dim;\n        item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n        item.axisName = item[dim + 'AxisName'] = axisModel.name;\n        item.axisId = item[dim + 'AxisId'] = axisModel.id;\n        return item;\n    }\n\n    function illegalPoint(point) {\n        return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n    }\n\n    module.exports = axisTrigger;\n\n\n/***/ }),\n\n/***/ 715:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    // List layout\n    var layout = __webpack_require__(619);\n    var formatUtil = __webpack_require__(613);\n    var graphic = __webpack_require__(608);\n\n    module.exports = {\n        /**\n         * Layout list like component.\n         * It will box layout each items in group of component and then position the whole group in the viewport\n         * @param {module:zrender/group/Group} group\n         * @param {module:echarts/model/Component} componentModel\n         * @param {module:echarts/ExtensionAPI}\n         */\n        layout: function (group, componentModel, api) {\n            var boxLayoutParams = componentModel.getBoxLayoutParams();\n            var padding = componentModel.get('padding');\n            var viewportSize = {width: api.getWidth(), height: api.getHeight()};\n\n            var rect = layout.getLayoutRect(\n                boxLayoutParams,\n                viewportSize,\n                padding\n            );\n\n            layout.box(\n                componentModel.get('orient'),\n                group,\n                componentModel.get('itemGap'),\n                rect.width,\n                rect.height\n            );\n\n            layout.positionElement(\n                group,\n                boxLayoutParams,\n                viewportSize,\n                padding\n            );\n        },\n\n        makeBackground: function (rect, componentModel) {\n            var padding = formatUtil.normalizeCssArray(\n                componentModel.get('padding')\n            );\n            var style = componentModel.getItemStyle(['color', 'opacity']);\n            style.fill = componentModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: rect.x - padding[3],\n                    y: rect.y - padding[0],\n                    width: rect.width + padding[1] + padding[3],\n                    height: rect.height + padding[0] + padding[2],\n                    r: componentModel.get('borderRadius')\n                },\n                style: style,\n                silent: true,\n                z2: -1\n            });\n            // FIXME\n            // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n            // and background rect when setting like `left: 0`, `top: 0`.\n            // graphic.subPixelOptimizeRect(rect);\n\n            return rect;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 716:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    // Do not contain scrollable legend, for sake of file size.\n\n    __webpack_require__(717);\n    __webpack_require__(719);\n    __webpack_require__(718);\n\n    var echarts = __webpack_require__(607);\n    // Series Filter\n    echarts.registerProcessor(__webpack_require__(720));\n\n    __webpack_require__(618).registerSubTypeDefaulter('legend', function () {\n        // Default 'plain' when no type specified.\n        return 'plain';\n    });\n\n\n\n/***/ }),\n\n/***/ 717:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var Model = __webpack_require__(614);\n\n    var LegendModel = __webpack_require__(607).extendComponentModel({\n\n        type: 'legend.plain',\n\n        dependencies: ['series'],\n\n        layoutMode: {\n            type: 'box',\n            // legend.width/height are maxWidth/maxHeight actually,\n            // whereas realy width/height is calculated by its content.\n            // (Setting {left: 10, right: 10} does not make sense).\n            // So consider the case:\n            // `setOption({legend: {left: 10});`\n            // then `setOption({legend: {right: 10});`\n            // The previous `left` should be cleared by setting `ignoreSize`.\n            ignoreSize: true\n        },\n\n        init: function (option, parentModel, ecModel) {\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            option.selected = option.selected || {};\n        },\n\n        mergeOption: function (option) {\n            LegendModel.superCall(this, 'mergeOption', option);\n        },\n\n        optionUpdated: function () {\n            this._updateData(this.ecModel);\n\n            var legendData = this._data;\n\n            // If selectedMode is single, try to select one\n            if (legendData[0] && this.get('selectedMode') === 'single') {\n                var hasSelected = false;\n                // If has any selected in option.selected\n                for (var i = 0; i < legendData.length; i++) {\n                    var name = legendData[i].get('name');\n                    if (this.isSelected(name)) {\n                        // Force to unselect others\n                        this.select(name);\n                        hasSelected = true;\n                        break;\n                    }\n                }\n                // Try select the first if selectedMode is single\n                !hasSelected && this.select(legendData[0].get('name'));\n            }\n        },\n\n        _updateData: function (ecModel) {\n            var legendData = zrUtil.map(this.get('data') || [], function (dataItem) {\n                // Can be string or number\n                if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n                    dataItem = {\n                        name: dataItem\n                    };\n                }\n                return new Model(dataItem, this, this.ecModel);\n            }, this);\n            this._data = legendData;\n\n            var availableNames = zrUtil.map(ecModel.getSeries(), function (series) {\n                return series.name;\n            });\n            ecModel.eachSeries(function (seriesModel) {\n                if (seriesModel.legendDataProvider) {\n                    var data = seriesModel.legendDataProvider();\n                    availableNames = availableNames.concat(data.mapArray(data.getName));\n                }\n            });\n            /**\n             * @type {Array.<string>}\n             * @private\n             */\n            this._availableNames = availableNames;\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Model>}\n         */\n        getData: function () {\n            return this._data;\n        },\n\n        /**\n         * @param {string} name\n         */\n        select: function (name) {\n            var selected = this.option.selected;\n            var selectedMode = this.get('selectedMode');\n            if (selectedMode === 'single') {\n                var data = this._data;\n                zrUtil.each(data, function (dataItem) {\n                    selected[dataItem.get('name')] = false;\n                });\n            }\n            selected[name] = true;\n        },\n\n        /**\n         * @param {string} name\n         */\n        unSelect: function (name) {\n            if (this.get('selectedMode') !== 'single') {\n                this.option.selected[name] = false;\n            }\n        },\n\n        /**\n         * @param {string} name\n         */\n        toggleSelected: function (name) {\n            var selected = this.option.selected;\n            // Default is true\n            if (!selected.hasOwnProperty(name)) {\n                selected[name] = true;\n            }\n            this[selected[name] ? 'unSelect' : 'select'](name);\n        },\n\n        /**\n         * @param {string} name\n         */\n        isSelected: function (name) {\n            var selected = this.option.selected;\n            return !(selected.hasOwnProperty(name) && !selected[name])\n                && zrUtil.indexOf(this._availableNames, name) >= 0;\n        },\n\n        defaultOption: {\n            // 一级层叠\n            zlevel: 0,\n            // 二级层叠\n            z: 4,\n            show: true,\n\n            // 布局方式，默认为水平布局，可选为：\n            // 'horizontal' | 'vertical'\n            orient: 'horizontal',\n\n            left: 'center',\n            // right: 'center',\n\n            top: 0,\n            // bottom: null,\n\n            // 水平对齐\n            // 'auto' | 'left' | 'right'\n            // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n            align: 'auto',\n\n            backgroundColor: 'rgba(0,0,0,0)',\n            // 图例边框颜色\n            borderColor: '#ccc',\n            borderRadius: 0,\n            // 图例边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n            // 图例内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n            // 各个item之间的间隔，单位px，默认为10，\n            // 横向布局时为水平间隔，纵向布局时为纵向间隔\n            itemGap: 10,\n            // 图例图形宽度\n            itemWidth: 25,\n            // 图例图形高度\n            itemHeight: 14,\n\n            // 图例关闭时候的颜色\n            inactiveColor: '#ccc',\n\n            textStyle: {\n                // 图例文字颜色\n                color: '#333'\n            },\n            // formatter: '',\n            // 选择模式，默认开启图例开关\n            selectedMode: true,\n            // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n            // selected: null,\n            // 图例内容（详见legend.data，数组中每一项代表一个item\n            // data: [],\n\n            // Tooltip 相关配置\n            tooltip: {\n                show: false\n            }\n        }\n    });\n\n    module.exports = LegendModel;\n\n\n/***/ }),\n\n/***/ 718:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var symbolCreator = __webpack_require__(639);\n    var graphic = __webpack_require__(608);\n    var listComponentHelper = __webpack_require__(715);\n    var layoutUtil = __webpack_require__(619);\n\n    var curry = zrUtil.curry;\n    var each = zrUtil.each;\n    var Group = graphic.Group;\n\n    module.exports = __webpack_require__(607).extendComponentView({\n\n        type: 'legend.plain',\n\n        newlineDisabled: false,\n\n        /**\n         * @override\n         */\n        init: function () {\n\n            /**\n             * @private\n             * @type {module:zrender/container/Group}\n             */\n            this.group.add(this._contentGroup = new Group());\n\n            /**\n             * @private\n             * @type {module:zrender/Element}\n             */\n            this._backgroundEl;\n        },\n\n        /**\n         * @protected\n         */\n        getContentGroup: function () {\n            return this._contentGroup;\n        },\n\n        /**\n         * @override\n         */\n        render: function (legendModel, ecModel, api) {\n\n            this.resetInner();\n\n            if (!legendModel.get('show', true)) {\n                return;\n            }\n\n            var itemAlign = legendModel.get('align');\n            if (!itemAlign || itemAlign === 'auto') {\n                itemAlign = (\n                    legendModel.get('left') === 'right'\n                    && legendModel.get('orient') === 'vertical'\n                ) ? 'right' : 'left';\n            }\n\n            this.renderInner(itemAlign, legendModel, ecModel, api);\n\n            // Perform layout.\n            var positionInfo = legendModel.getBoxLayoutParams();\n            var viewportSize = {width: api.getWidth(), height: api.getHeight()};\n            var padding = legendModel.get('padding');\n\n            var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n            var mainRect = this.layoutInner(legendModel, itemAlign, maxSize);\n\n            // Place mainGroup, based on the calculated `mainRect`.\n            var layoutRect = layoutUtil.getLayoutRect(\n                zrUtil.defaults({width: mainRect.width, height: mainRect.height}, positionInfo),\n                viewportSize,\n                padding\n            );\n            this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]);\n\n            // Render background after group is layout.\n            this.group.add(\n                this._backgroundEl = listComponentHelper.makeBackground(mainRect, legendModel)\n            );\n        },\n\n        /**\n         * @protected\n         */\n        resetInner: function () {\n            this.getContentGroup().removeAll();\n            this._backgroundEl && this.group.remove(this._backgroundEl);\n        },\n\n        /**\n         * @protected\n         */\n        renderInner: function (itemAlign, legendModel, ecModel, api) {\n            var contentGroup = this.getContentGroup();\n            var legendDrawnMap = zrUtil.createHashMap();\n            var selectMode = legendModel.get('selectedMode');\n\n            each(legendModel.getData(), function (itemModel, dataIndex) {\n                var name = itemModel.get('name');\n\n                // Use empty string or \\n as a newline string\n                if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n                    contentGroup.add(new Group({\n                        newline: true\n                    }));\n                    return;\n                }\n\n                var seriesModel = ecModel.getSeriesByName(name)[0];\n\n                if (legendDrawnMap.get(name)) {\n                    // Have been drawed\n                    return;\n                }\n\n                // Series legend\n                if (seriesModel) {\n                    var data = seriesModel.getData();\n                    var color = data.getVisual('color');\n\n                    // If color is a callback function\n                    if (typeof color === 'function') {\n                        // Use the first data\n                        color = color(seriesModel.getDataParams(0));\n                    }\n\n                    // Using rect symbol defaultly\n                    var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n                    var symbolType = data.getVisual('symbol');\n\n                    var itemGroup = this._createItem(\n                        name, dataIndex, itemModel, legendModel,\n                        legendSymbolType, symbolType,\n                        itemAlign, color,\n                        selectMode\n                    );\n\n                    itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                        .on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api))\n                        .on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n\n                    legendDrawnMap.set(name, true);\n                }\n                else {\n                    // Data legend of pie, funnel\n                    ecModel.eachRawSeries(function (seriesModel) {\n                        // In case multiple series has same data name\n                        if (legendDrawnMap.get(name)) {\n                            return;\n                        }\n                        if (seriesModel.legendDataProvider) {\n                            var data = seriesModel.legendDataProvider();\n                            var idx = data.indexOfName(name);\n                            if (idx < 0) {\n                                return;\n                            }\n\n                            var color = data.getItemVisual(idx, 'color');\n\n                            var legendSymbolType = 'roundRect';\n\n                            var itemGroup = this._createItem(\n                                name, dataIndex, itemModel, legendModel,\n                                legendSymbolType, null,\n                                itemAlign, color,\n                                selectMode\n                            );\n\n                            itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                                // FIXME Should not specify the series name\n                                .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api))\n                                .on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n\n                            legendDrawnMap.set(name, true);\n                        }\n                    }, this);\n                }\n\n                if (__DEV__) {\n                    if (!legendDrawnMap.get(name)) {\n                        console.warn(name + ' series not exists. Legend data should be same with series name or data name.');\n                    }\n                }\n            }, this);\n        },\n\n        _createItem: function (\n            name, dataIndex, itemModel, legendModel,\n            legendSymbolType, symbolType,\n            itemAlign, color, selectMode\n        ) {\n            var itemWidth = legendModel.get('itemWidth');\n            var itemHeight = legendModel.get('itemHeight');\n            var inactiveColor = legendModel.get('inactiveColor');\n\n            var isSelected = legendModel.isSelected(name);\n            var itemGroup = new Group();\n\n            var textStyleModel = itemModel.getModel('textStyle');\n\n            var itemIcon = itemModel.get('icon');\n\n            var tooltipModel = itemModel.getModel('tooltip');\n            var legendGlobalTooltipModel = tooltipModel.parentModel;\n\n            // Use user given icon first\n            legendSymbolType = itemIcon || legendSymbolType;\n            itemGroup.add(symbolCreator.createSymbol(\n                legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor\n            ));\n\n            // Compose symbols\n            // PENDING\n            if (!itemIcon && symbolType\n                // At least show one symbol, can't be all none\n                && ((symbolType !== legendSymbolType) || symbolType == 'none')\n            ) {\n                var size = itemHeight * 0.8;\n                if (symbolType === 'none') {\n                    symbolType = 'circle';\n                }\n                // Put symbol in the center\n                itemGroup.add(symbolCreator.createSymbol(\n                    symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size,\n                    isSelected ? color : inactiveColor\n                ));\n            }\n\n            var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n            var textAlign = itemAlign;\n\n            var formatter = legendModel.get('formatter');\n            var content = name;\n            if (typeof formatter === 'string' && formatter) {\n                content = formatter.replace('{name}', name != null ? name : '');\n            }\n            else if (typeof formatter === 'function') {\n                content = formatter(name);\n            }\n\n            itemGroup.add(new graphic.Text({\n                style: graphic.setTextStyle({}, textStyleModel, {\n                    text: content,\n                    x: textX,\n                    y: itemHeight / 2,\n                    textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n                    textAlign: textAlign,\n                    textVerticalAlign: 'middle'\n                })\n            }));\n\n            // Add a invisible rect to increase the area of mouse hover\n            var hitRect = new graphic.Rect({\n                shape: itemGroup.getBoundingRect(),\n                invisible: true,\n                tooltip: tooltipModel.get('show') ? zrUtil.extend({\n                    content: name,\n                    // Defaul formatter\n                    formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n                        return name;\n                    },\n                    formatterParams: {\n                        componentType: 'legend',\n                        legendIndex: legendModel.componentIndex,\n                        name: name,\n                        $vars: ['name']\n                    }\n                }, tooltipModel.option) : null\n            });\n            itemGroup.add(hitRect);\n\n            itemGroup.eachChild(function (child) {\n                child.silent = true;\n            });\n\n            hitRect.silent = !selectMode;\n\n            this.getContentGroup().add(itemGroup);\n\n            graphic.setHoverStyle(itemGroup);\n\n            itemGroup.__legendDataIndex = dataIndex;\n\n            return itemGroup;\n        },\n\n        /**\n         * @protected\n         */\n        layoutInner: function (legendModel, itemAlign, maxSize) {\n            var contentGroup = this.getContentGroup();\n\n            // Place items in contentGroup.\n            layoutUtil.box(\n                legendModel.get('orient'),\n                contentGroup,\n                legendModel.get('itemGap'),\n                maxSize.width,\n                maxSize.height\n            );\n\n            var contentRect = contentGroup.getBoundingRect();\n            contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n\n            return this.group.getBoundingRect();\n        }\n\n    });\n\n    function dispatchSelectAction(name, api) {\n        api.dispatchAction({\n            type: 'legendToggleSelect',\n            name: name\n        });\n    }\n\n    function dispatchHighlightAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'highlight',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n    function dispatchDownplayAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'downplay',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n\n\n/***/ }),\n\n/***/ 719:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Legend action\n */\n\n\n    var echarts = __webpack_require__(607);\n    var zrUtil = __webpack_require__(606);\n\n    function legendSelectActionHandler(methodName, payload, ecModel) {\n        var selectedMap = {};\n        var isToggleSelect = methodName === 'toggleSelected';\n        var isSelected;\n        // Update all legend components\n        ecModel.eachComponent('legend', function (legendModel) {\n            if (isToggleSelect && isSelected != null) {\n                // Force other legend has same selected status\n                // Or the first is toggled to true and other are toggled to false\n                // In the case one legend has some item unSelected in option. And if other legend\n                // doesn't has the item, they will assume it is selected.\n                legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n            }\n            else {\n                legendModel[methodName](payload.name);\n                isSelected = legendModel.isSelected(payload.name);\n            }\n            var legendData = legendModel.getData();\n            zrUtil.each(legendData, function (model) {\n                var name = model.get('name');\n                // Wrap element\n                if (name === '\\n' || name === '') {\n                    return;\n                }\n                var isItemSelected = legendModel.isSelected(name);\n                if (selectedMap.hasOwnProperty(name)) {\n                    // Unselected if any legend is unselected\n                    selectedMap[name] = selectedMap[name] && isItemSelected;\n                }\n                else {\n                    selectedMap[name] = isItemSelected;\n                }\n            });\n        });\n        // Return the event explicitly\n        return {\n            name: payload.name,\n            selected: selectedMap\n        };\n    }\n    /**\n     * @event legendToggleSelect\n     * @type {Object}\n     * @property {string} type 'legendToggleSelect'\n     * @property {string} [from]\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendToggleSelect', 'legendselectchanged',\n        zrUtil.curry(legendSelectActionHandler, 'toggleSelected')\n    );\n\n    /**\n     * @event legendSelect\n     * @type {Object}\n     * @property {string} type 'legendSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendSelect', 'legendselected',\n        zrUtil.curry(legendSelectActionHandler, 'select')\n    );\n\n    /**\n     * @event legendUnSelect\n     * @type {Object}\n     * @property {string} type 'legendUnSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendUnSelect', 'legendunselected',\n        zrUtil.curry(legendSelectActionHandler, 'unSelect')\n    );\n\n\n\n/***/ }),\n\n/***/ 720:\n/***/ (function(module, exports) {\n\n\n   module.exports = function (ecModel) {\n        var legendModels = ecModel.findComponents({\n            mainType: 'legend'\n        });\n        if (legendModels && legendModels.length) {\n            ecModel.filterSeries(function (series) {\n                // If in any legend component the status is not selected.\n                // Because in legend series is assumed selected when it is not in the legend data.\n                for (var i = 0; i < legendModels.length; i++) {\n                    if (!legendModels[i].isSelected(series.name)) {\n                        return false;\n                    }\n                }\n                return true;\n            });\n        }\n    };\n\n\n/***/ }),\n\n/***/ 721:\n/***/ (function(module, exports, __webpack_require__) {\n\n// FIXME Better way to pack data in graphic element\n\n\n    __webpack_require__(709);\n\n    __webpack_require__(723);\n\n    __webpack_require__(724);\n\n\n    // Show tip action\n    /**\n     * @action\n     * @property {string} type\n     * @property {number} seriesIndex\n     * @property {number} dataIndex\n     * @property {number} [x]\n     * @property {number} [y]\n     */\n    __webpack_require__(607).registerAction(\n        {\n            type: 'showTip',\n            event: 'showTip',\n            update: 'tooltip:manuallyShowTip'\n        },\n        // noop\n        function () {}\n    );\n    // Hide tip action\n    __webpack_require__(607).registerAction(\n        {\n            type: 'hideTip',\n            event: 'hideTip',\n            update: 'tooltip:manuallyHideTip'\n        },\n        // noop\n        function () {}\n    );\n\n\n/***/ }),\n\n/***/ 722:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/component/tooltip/TooltipContent\n */\n\n\n    var zrUtil = __webpack_require__(606);\n    var zrColor = __webpack_require__(627);\n    var eventUtil = __webpack_require__(625);\n    var formatUtil = __webpack_require__(613);\n    var each = zrUtil.each;\n    var toCamelCase = formatUtil.toCamelCase;\n    var env = __webpack_require__(615);\n\n    var vendors = ['', '-webkit-', '-moz-', '-o-'];\n\n    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n\n    /**\n     * @param {number} duration\n     * @return {string}\n     * @inner\n     */\n    function assembleTransition(duration) {\n        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\n                            + 'top ' + duration + 's ' + transitionCurve;\n        return zrUtil.map(vendors, function (vendorPrefix) {\n            return vendorPrefix + 'transition:' + transitionText;\n        }).join(';');\n    }\n\n    /**\n     * @param {Object} textStyle\n     * @return {string}\n     * @inner\n     */\n    function assembleFont(textStyleModel) {\n        var cssText = [];\n\n        var fontSize = textStyleModel.get('fontSize');\n        var color = textStyleModel.getTextColor();\n\n        color && cssText.push('color:' + color);\n\n        cssText.push('font:' + textStyleModel.getFont());\n\n        fontSize &&\n            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n\n        each(['decoration', 'align'], function (name) {\n            var val = textStyleModel.get(name);\n            val && cssText.push('text-' + name + ':' + val);\n        });\n\n        return cssText.join(';');\n    }\n\n    /**\n     * @param {Object} tooltipModel\n     * @return {string}\n     * @inner\n     */\n    function assembleCssText(tooltipModel) {\n\n        var cssText = [];\n\n        var transitionDuration = tooltipModel.get('transitionDuration');\n        var backgroundColor = tooltipModel.get('backgroundColor');\n        var textStyleModel = tooltipModel.getModel('textStyle');\n        var padding = tooltipModel.get('padding');\n\n        // Animation transition. Do not animate when transitionDuration is 0.\n        transitionDuration &&\n            cssText.push(assembleTransition(transitionDuration));\n\n        if (backgroundColor) {\n            if (env.canvasSupported) {\n                cssText.push('background-Color:' + backgroundColor);\n            }\n            else {\n                // for ie\n                cssText.push(\n                    'background-Color:#' + zrColor.toHex(backgroundColor)\n                );\n                cssText.push('filter:alpha(opacity=70)');\n            }\n        }\n\n        // Border style\n        each(['width', 'color', 'radius'], function (name) {\n            var borderName = 'border-' + name;\n            var camelCase = toCamelCase(borderName);\n            var val = tooltipModel.get(camelCase);\n            val != null &&\n                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n        });\n\n        // Text style\n        cssText.push(assembleFont(textStyleModel));\n\n        // Padding\n        if (padding != null) {\n            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n        }\n\n        return cssText.join(';') + ';';\n    }\n\n    /**\n     * @alias module:echarts/component/tooltip/TooltipContent\n     * @constructor\n     */\n    function TooltipContent(container, api) {\n        var el = document.createElement('div');\n        var zr = this._zr = api.getZr();\n\n        this.el = el;\n\n        this._x = api.getWidth() / 2;\n        this._y = api.getHeight() / 2;\n\n        container.appendChild(el);\n\n        this._container = container;\n\n        this._show = false;\n\n        /**\n         * @private\n         */\n        this._hideTimeout;\n\n        var self = this;\n        el.onmouseenter = function () {\n            // clear the timeout in hideLater and keep showing tooltip\n            if (self._enterable) {\n                clearTimeout(self._hideTimeout);\n                self._show = true;\n            }\n            self._inContent = true;\n        };\n        el.onmousemove = function (e) {\n            e = e || window.event;\n            if (!self._enterable) {\n                // Try trigger zrender event to avoid mouse\n                // in and out shape too frequently\n                var handler = zr.handler;\n                eventUtil.normalizeEvent(container, e, true);\n                handler.dispatch('mousemove', e);\n            }\n        };\n        el.onmouseleave = function () {\n            if (self._enterable) {\n                if (self._show) {\n                    self.hideLater(self._hideDelay);\n                }\n            }\n            self._inContent = false;\n        };\n    }\n\n    TooltipContent.prototype = {\n\n        constructor: TooltipContent,\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _enterable: true,\n\n        /**\n         * Update when tooltip is rendered\n         */\n        update: function () {\n            // FIXME\n            // Move this logic to ec main?\n            var container = this._container;\n            var stl = container.currentStyle\n                || document.defaultView.getComputedStyle(container);\n            var domStyle = container.style;\n            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n                domStyle.position = 'relative';\n            }\n            // Hide the tooltip\n            // PENDING\n            // this.hide();\n        },\n\n        show: function (tooltipModel) {\n            clearTimeout(this._hideTimeout);\n            var el = this.el;\n\n            el.style.cssText = gCssText + assembleCssText(tooltipModel)\n                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\n                + (tooltipModel.get('extraCssText') || '');\n\n            el.style.display = el.innerHTML ?  'block' : 'none';\n\n            this._show = true;\n        },\n\n        setContent: function (content) {\n            this.el.innerHTML = content == null ? '' : content;\n        },\n\n        setEnterable: function (enterable) {\n            this._enterable = enterable;\n        },\n\n        getSize: function () {\n            var el = this.el;\n            return [el.clientWidth, el.clientHeight];\n        },\n\n        moveTo: function (x, y) {\n            // xy should be based on canvas root. But tooltipContent is\n            // the sibling of canvas root. So padding of ec container\n            // should be considered here.\n            var zr = this._zr;\n            var viewportRootOffset;\n            if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n                x += viewportRootOffset.offsetLeft;\n                y += viewportRootOffset.offsetTop;\n            }\n\n            var style = this.el.style;\n            style.left = x + 'px';\n            style.top = y + 'px';\n\n            this._x = x;\n            this._y = y;\n        },\n\n        hide: function () {\n            this.el.style.display = 'none';\n            this._show = false;\n        },\n\n        hideLater: function (time) {\n            if (this._show && !(this._inContent && this._enterable)) {\n                if (time) {\n                    this._hideDelay = time;\n                    // Set show false to avoid invoke hideLater mutiple times\n                    this._show = false;\n                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n                }\n                else {\n                    this.hide();\n                }\n            }\n        },\n\n        isShow: function () {\n            return this._show;\n        }\n    };\n\n    module.exports = TooltipContent;\n\n\n/***/ }),\n\n/***/ 723:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    __webpack_require__(607).extendComponentModel({\n\n        type: 'tooltip',\n\n        dependencies: ['axisPointer'],\n\n        defaultOption: {\n            zlevel: 0,\n\n            z: 8,\n\n            show: true,\n\n            // tooltip主体内容\n            showContent: true,\n\n            // 'trigger' only works on coordinate system.\n            // 'item' | 'axis' | 'none'\n            trigger: 'item',\n\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: 'mousemove|click',\n\n            alwaysShowContent: false,\n\n            displayMode: 'single', // 'single' | 'multipleByCoordSys'\n\n            // 位置 {Array} | {Function}\n            // position: null\n            // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n            // align: null,\n            // verticalAlign: null,\n\n            // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n            confine: false,\n\n            // 内容格式器：{string}（Template） ¦ {Function}\n            // formatter: null\n\n            showDelay: 0,\n\n            // 隐藏延迟，单位ms\n            hideDelay: 100,\n\n            // 动画变换时间，单位s\n            transitionDuration: 0.4,\n\n            enterable: false,\n\n            // 提示背景颜色，默认为透明度为0.7的黑色\n            backgroundColor: 'rgba(50,50,50,0.7)',\n\n            // 提示边框颜色\n            borderColor: '#333',\n\n            // 提示边框圆角，单位px，默认为4\n            borderRadius: 4,\n\n            // 提示边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 提示内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // Extra css text\n            extraCssText: '',\n\n            // 坐标轴指示器，坐标轴触发有效\n            axisPointer: {\n                // 默认为直线\n                // 可选为：'line' | 'shadow' | 'cross'\n                type: 'line',\n\n                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n                // 极坐标系会默认选择 angle 轴\n                axis: 'auto',\n\n                animation: 'auto',\n                animationDurationUpdate: 200,\n                animationEasingUpdate: 'exponentialOut',\n\n                crossStyle: {\n                    color: '#999',\n                    width: 1,\n                    type: 'dashed',\n\n                    // TODO formatter\n                    textStyle: {}\n                }\n\n                // lineStyle and shadowStyle should not be specified here,\n                // otherwise it will always override those styles on option.axisPointer.\n            },\n            textStyle: {\n                color: '#fff',\n                fontSize: 14\n            }\n        }\n    });\n\n\n/***/ }),\n\n/***/ 724:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var TooltipContent = __webpack_require__(722);\n    var zrUtil = __webpack_require__(606);\n    var formatUtil = __webpack_require__(613);\n    var numberUtil = __webpack_require__(610);\n    var graphic = __webpack_require__(608);\n    var findPointFromSeries = __webpack_require__(660);\n    var layoutUtil = __webpack_require__(619);\n    var env = __webpack_require__(615);\n    var Model = __webpack_require__(614);\n    var globalListener = __webpack_require__(661);\n    var axisHelper = __webpack_require__(620);\n    var axisPointerViewHelper = __webpack_require__(662);\n\n    var bind = zrUtil.bind;\n    var each = zrUtil.each;\n    var parsePercent = numberUtil.parsePercent;\n\n\n    var proxyRect = new graphic.Rect({\n        shape: {x: -1, y: -1, width: 2, height: 2}\n    });\n\n    __webpack_require__(607).extendComponentView({\n\n        type: 'tooltip',\n\n        init: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var tooltipContent = new TooltipContent(api.getDom(), api);\n            this._tooltipContent = tooltipContent;\n        },\n\n        render: function (tooltipModel, ecModel, api) {\n            if (env.node) {\n                return;\n            }\n\n            // Reset\n            this.group.removeAll();\n\n            /**\n             * @private\n             * @type {module:echarts/component/tooltip/TooltipModel}\n             */\n            this._tooltipModel = tooltipModel;\n\n            /**\n             * @private\n             * @type {module:echarts/model/Global}\n             */\n            this._ecModel = ecModel;\n\n            /**\n             * @private\n             * @type {module:echarts/ExtensionAPI}\n             */\n            this._api = api;\n\n            /**\n             * Should be cleaned when render.\n             * @private\n             * @type {Array.<Array.<Object>>}\n             */\n            this._lastDataByCoordSys = null;\n\n            /**\n             * @private\n             * @type {boolean}\n             */\n            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n\n            var tooltipContent = this._tooltipContent;\n            tooltipContent.update();\n            tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n            this._initGlobalListener();\n\n            this._keepShow();\n        },\n\n        _initGlobalListener: function () {\n            var tooltipModel = this._tooltipModel;\n            var triggerOn = tooltipModel.get('triggerOn');\n\n            globalListener.register(\n                'itemTooltip',\n                this._api,\n                bind(function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none') {\n                        if (triggerOn.indexOf(currTrigger) >= 0) {\n                            this._tryShow(e, dispatchAction);\n                        }\n                        else if (currTrigger === 'leave') {\n                            this._hide(dispatchAction);\n                        }\n                    }\n                }, this)\n            );\n        },\n\n        _keepShow: function () {\n            var tooltipModel = this._tooltipModel;\n            var ecModel = this._ecModel;\n            var api = this._api;\n\n            // Try to keep the tooltip show when refreshing\n            if (this._lastX != null\n                && this._lastY != null\n                // When user is willing to control tooltip totally using API,\n                // self.manuallyShowTip({x, y}) might cause tooltip hide,\n                // which is not expected.\n                && tooltipModel.get('triggerOn') !== 'none'\n            ) {\n                var self = this;\n                clearTimeout(this._refreshUpdateTimeout);\n                this._refreshUpdateTimeout = setTimeout(function () {\n                    // Show tip next tick after other charts are rendered\n                    // In case highlight action has wrong result\n                    // FIXME\n                    self.manuallyShowTip(tooltipModel, ecModel, api, {\n                        x: self._lastX,\n                        y: self._lastY\n                    });\n                });\n            }\n        },\n\n        /**\n         * Show tip manually by\n         * dispatchAction({\n         *     type: 'showTip',\n         *     x: 10,\n         *     y: 10\n         * });\n         * Or\n         * dispatchAction({\n         *      type: 'showTip',\n         *      seriesIndex: 0,\n         *      dataIndex or dataIndexInside or name\n         * });\n         *\n         *  TODO Batch\n         */\n        manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n            if (payload.from === this.uid || env.node) {\n                return;\n            }\n\n            var dispatchAction = makeDispatchAction(payload, api);\n\n            // Reset ticket\n            this._ticket = '';\n\n            // When triggered from axisPointer.\n            var dataByCoordSys = payload.dataByCoordSys;\n\n            if (payload.tooltip && payload.x != null && payload.y != null) {\n                var el = proxyRect;\n                el.position = [payload.x, payload.y];\n                el.update();\n                el.tooltip = payload.tooltip;\n                // Manually show tooltip while view is not using zrender elements.\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    target: el\n                }, dispatchAction);\n            }\n            else if (dataByCoordSys) {\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    event: {},\n                    dataByCoordSys: payload.dataByCoordSys,\n                    tooltipOption: payload.tooltipOption\n                }, dispatchAction);\n            }\n            else if (payload.seriesIndex != null) {\n\n                if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n                    return;\n                }\n\n                var pointInfo = findPointFromSeries(payload, ecModel);\n                var cx = pointInfo.point[0];\n                var cy = pointInfo.point[1];\n                if (cx != null && cy != null) {\n                    this._tryShow({\n                        offsetX: cx,\n                        offsetY: cy,\n                        position: payload.position,\n                        target: pointInfo.el,\n                        event: {}\n                    }, dispatchAction);\n                }\n            }\n            else if (payload.x != null && payload.y != null) {\n                // FIXME\n                // should wrap dispatchAction like `axisPointer/globalListener` ?\n                api.dispatchAction({\n                    type: 'updateAxisPointer',\n                    x: payload.x,\n                    y: payload.y\n                });\n\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    target: api.getZr().findHover(payload.x, payload.y).target,\n                    event: {}\n                }, dispatchAction);\n            }\n        },\n\n        manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n            var tooltipContent = this._tooltipContent;\n\n            if (!this._alwaysShowContent) {\n                tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n            }\n\n            this._lastX = this._lastY = null;\n\n            if (payload.from !== this.uid) {\n                this._hide(makeDispatchAction(payload, api));\n            }\n        },\n\n        // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n        // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n        // and tooltip.\n        _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n            var seriesIndex = payload.seriesIndex;\n            var dataIndex = payload.dataIndex;\n            var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n            if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n                return;\n            }\n\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n            if (!seriesModel) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                seriesModel,\n                (seriesModel.coordinateSystem || {}).model,\n                tooltipModel\n            ]);\n\n            if (tooltipModel.get('trigger') !== 'axis') {\n                return;\n            }\n\n            api.dispatchAction({\n                type: 'updateAxisPointer',\n                seriesIndex: seriesIndex,\n                dataIndex: dataIndex,\n                position: payload.position\n            });\n\n            return true;\n        },\n\n        _tryShow: function (e, dispatchAction) {\n            var el = e.target;\n            var tooltipModel = this._tooltipModel;\n\n            if (!tooltipModel) {\n                return;\n            }\n\n            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n            this._lastX = e.offsetX;\n            this._lastY = e.offsetY;\n\n            var dataByCoordSys = e.dataByCoordSys;\n            if (dataByCoordSys && dataByCoordSys.length) {\n                this._showAxisTooltip(dataByCoordSys, e);\n            }\n            // Always show item tooltip if mouse is on the element with dataIndex\n            else if (el && el.dataIndex != null) {\n                this._lastDataByCoordSys = null;\n                this._showSeriesItemTooltip(e, el, dispatchAction);\n            }\n            // Tooltip provided directly. Like legend.\n            else if (el && el.tooltip) {\n                this._lastDataByCoordSys = null;\n                this._showComponentItemTooltip(e, el, dispatchAction);\n            }\n            else {\n                this._lastDataByCoordSys = null;\n                this._hide(dispatchAction);\n            }\n        },\n\n        _showOrMove: function (tooltipModel, cb) {\n            // showDelay is used in this case: tooltip.enterable is set\n            // as true. User intent to move mouse into tooltip and click\n            // something. `showDelay` makes it easyer to enter the content\n            // but tooltip do not move immediately.\n            var delay = tooltipModel.get('showDelay');\n            cb = zrUtil.bind(cb, this);\n            clearTimeout(this._showTimout);\n            delay > 0\n                ? (this._showTimout = setTimeout(cb, delay))\n                : cb();\n        },\n\n        _showAxisTooltip: function (dataByCoordSys, e) {\n            var ecModel = this._ecModel;\n            var globalTooltipModel = this._tooltipModel;\n            var point = [e.offsetX, e.offsetY];\n            var singleDefaultHTML = [];\n            var singleParamsList = [];\n            var singleTooltipModel = buildTooltipModel([\n                e.tooltipOption,\n                globalTooltipModel\n            ]);\n\n            each(dataByCoordSys, function (itemCoordSys) {\n                // var coordParamList = [];\n                // var coordDefaultHTML = [];\n                // var coordTooltipModel = buildTooltipModel([\n                //     e.tooltipOption,\n                //     itemCoordSys.tooltipOption,\n                //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n                //     globalTooltipModel\n                // ]);\n                // var displayMode = coordTooltipModel.get('displayMode');\n                // var paramsList = displayMode === 'single' ? singleParamsList : [];\n\n                each(itemCoordSys.dataByAxis, function (item) {\n                    var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n                    var axisValue = item.value;\n                    var seriesDefaultHTML = [];\n\n                    if (!axisModel || axisValue == null) {\n                        return;\n                    }\n\n                    var valueLabel = axisPointerViewHelper.getValueLabel(\n                        axisValue, axisModel.axis, ecModel,\n                        item.seriesDataIndices,\n                        item.valueLabelOpt\n                    );\n\n                    zrUtil.each(item.seriesDataIndices, function (idxItem) {\n                        var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                        var dataIndex = idxItem.dataIndexInside;\n                        var dataParams = series && series.getDataParams(dataIndex);\n                        dataParams.axisDim = item.axisDim;\n                        dataParams.axisIndex = item.axisIndex;\n                        dataParams.axisType = item.axisType;\n                        dataParams.axisId = item.axisId;\n                        dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n                        dataParams.axisValueLabel = valueLabel;\n\n                        if (dataParams) {\n                            singleParamsList.push(dataParams);\n                            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n                        }\n                    });\n\n                    // Default tooltip content\n                    // FIXME\n                    // (1) shold be the first data which has name?\n                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n                    var firstLine = valueLabel;\n                    singleDefaultHTML.push(\n                        (firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '')\n                        + seriesDefaultHTML.join('<br />')\n                    );\n                });\n            }, this);\n\n            // In most case, the second axis is shown upper than the first one.\n            singleDefaultHTML.reverse();\n            singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n\n            var positionExpr = e.position;\n            this._showOrMove(singleTooltipModel, function () {\n                if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n                    this._updatePosition(\n                        singleTooltipModel,\n                        positionExpr,\n                        point[0], point[1],\n                        this._tooltipContent,\n                        singleParamsList\n                    );\n                }\n                else {\n                    this._showTooltipContent(\n                        singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(),\n                        point[0], point[1], positionExpr\n                    );\n                }\n            });\n\n            // Do not trigger events here, because this branch only be entered\n            // from dispatchAction.\n        },\n\n        _showSeriesItemTooltip: function (e, el, dispatchAction) {\n            var ecModel = this._ecModel;\n            // Use dataModel in element if possible\n            // Used when mouseover on a element like markPoint or edge\n            // In which case, the data is not main data in series.\n            var seriesIndex = el.seriesIndex;\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n            // For example, graph link.\n            var dataModel = el.dataModel || seriesModel;\n            var dataIndex = el.dataIndex;\n            var dataType = el.dataType;\n            var data = dataModel.getData();\n\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                dataModel,\n                seriesModel && (seriesModel.coordinateSystem || {}).model,\n                this._tooltipModel\n            ]);\n\n            var tooltipTrigger = tooltipModel.get('trigger');\n            if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n                return;\n            }\n\n            var params = dataModel.getDataParams(dataIndex, dataType);\n            var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n            var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n            this._showOrMove(tooltipModel, function () {\n                this._showTooltipContent(\n                    tooltipModel, defaultHtml, params, asyncTicket,\n                    e.offsetX, e.offsetY, e.position, e.target\n                );\n            });\n\n            // FIXME\n            // duplicated showtip if manuallyShowTip is called from dispatchAction.\n            dispatchAction({\n                type: 'showTip',\n                dataIndexInside: dataIndex,\n                dataIndex: data.getRawIndex(dataIndex),\n                seriesIndex: seriesIndex,\n                from: this.uid\n            });\n        },\n\n        _showComponentItemTooltip: function (e, el, dispatchAction) {\n            var tooltipOpt = el.tooltip;\n            if (typeof tooltipOpt === 'string') {\n                var content = tooltipOpt;\n                tooltipOpt = {\n                    content: content,\n                    // Fixed formatter\n                    formatter: content\n                };\n            }\n            var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n            var defaultHtml = subTooltipModel.get('content');\n            var asyncTicket = Math.random();\n\n            // Do not check whether `trigger` is 'none' here, because `trigger`\n            // only works on cooridinate system. In fact, we have not found case\n            // that requires setting `trigger` nothing on component yet.\n\n            this._showOrMove(subTooltipModel, function () {\n                this._showTooltipContent(\n                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\n                    asyncTicket, e.offsetX, e.offsetY, e.position, el\n                );\n            });\n\n            // If not dispatch showTip, tip may be hide triggered by axis.\n            dispatchAction({\n                type: 'showTip',\n                from: this.uid\n            });\n        },\n\n        _showTooltipContent: function (\n            tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el\n        ) {\n            // Reset ticket\n            this._ticket = '';\n\n            if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n                return;\n            }\n\n            var tooltipContent = this._tooltipContent;\n\n            var formatter = tooltipModel.get('formatter');\n            positionExpr = positionExpr || tooltipModel.get('position');\n            var html = defaultHtml;\n\n            if (formatter && typeof formatter === 'string') {\n                html = formatUtil.formatTpl(formatter, params, true);\n            }\n            else if (typeof formatter === 'function') {\n                var callback = bind(function (cbTicket, html) {\n                    if (cbTicket === this._ticket) {\n                        tooltipContent.setContent(html);\n                        this._updatePosition(\n                            tooltipModel, positionExpr, x, y, tooltipContent, params, el\n                        );\n                    }\n                }, this);\n                this._ticket = asyncTicket;\n                html = formatter(params, asyncTicket, callback);\n            }\n\n            tooltipContent.setContent(html);\n            tooltipContent.show(tooltipModel);\n\n            this._updatePosition(\n                tooltipModel, positionExpr, x, y, tooltipContent, params, el\n            );\n        },\n\n        /**\n         * @param  {string|Function|Array.<number>|Object} positionExpr\n         * @param  {number} x Mouse x\n         * @param  {number} y Mouse y\n         * @param  {boolean} confine Whether confine tooltip content in view rect.\n         * @param  {Object|<Array.<Object>} params\n         * @param  {module:zrender/Element} el target element\n         * @param  {module:echarts/ExtensionAPI} api\n         * @return {Array.<number>}\n         */\n        _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n            var viewWidth = this._api.getWidth();\n            var viewHeight = this._api.getHeight();\n            positionExpr = positionExpr || tooltipModel.get('position');\n\n            var contentSize = content.getSize();\n            var align = tooltipModel.get('align');\n            var vAlign = tooltipModel.get('verticalAlign');\n            var rect = el && el.getBoundingRect().clone();\n            el && rect.applyTransform(el.transform);\n\n            if (typeof positionExpr === 'function') {\n                // Callback of position can be an array or a string specify the position\n                positionExpr = positionExpr([x, y], params, content.el, rect, {\n                    viewSize: [viewWidth, viewHeight],\n                    contentSize: contentSize.slice()\n                });\n            }\n\n            if (zrUtil.isArray(positionExpr)) {\n                x = parsePercent(positionExpr[0], viewWidth);\n                y = parsePercent(positionExpr[1], viewHeight);\n            }\n            else if (zrUtil.isObject(positionExpr)) {\n                positionExpr.width = contentSize[0];\n                positionExpr.height = contentSize[1];\n                var layoutRect = layoutUtil.getLayoutRect(\n                    positionExpr, {width: viewWidth, height: viewHeight}\n                );\n                x = layoutRect.x;\n                y = layoutRect.y;\n                align = null;\n                // When positionExpr is left/top/right/bottom,\n                // align and verticalAlign will not work.\n                vAlign = null;\n            }\n            // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n            else if (typeof positionExpr === 'string' && el) {\n                var pos = calcTooltipPosition(\n                    positionExpr, rect, contentSize\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n            else {\n                var pos = refixTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n            vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n            if (tooltipModel.get('confine')) {\n                var pos = confineTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            content.moveTo(x, y);\n        },\n\n        // FIXME\n        // Should we remove this but leave this to user?\n        _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n            var lastCoordSys = this._lastDataByCoordSys;\n            var contentNotChanged = !!lastCoordSys\n                && lastCoordSys.length === dataByCoordSys.length;\n\n            contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n                var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n                var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n                var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n                contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n\n                contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n                    var thisItem = thisDataByAxis[indexAxis] || {};\n                    var lastIndices = lastItem.seriesDataIndices || [];\n                    var newIndices = thisItem.seriesDataIndices || [];\n\n                    contentNotChanged &=\n                        lastItem.value === thisItem.value\n                        && lastItem.axisType === thisItem.axisType\n                        && lastItem.axisId === thisItem.axisId\n                        && lastIndices.length === newIndices.length;\n\n                    contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n                        var newIdxItem = newIndices[j];\n                        contentNotChanged &=\n                            lastIdxItem.seriesIndex === newIdxItem.seriesIndex\n                            && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n                    });\n                });\n            });\n\n            this._lastDataByCoordSys = dataByCoordSys;\n\n            return !!contentNotChanged;\n        },\n\n        _hide: function (dispatchAction) {\n            // Do not directly hideLater here, because this behavior may be prevented\n            // in dispatchAction when showTip is dispatched.\n\n            // FIXME\n            // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n            this._lastDataByCoordSys = null;\n            dispatchAction({\n                type: 'hideTip',\n                from: this.uid\n            });\n        },\n\n        dispose: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            this._tooltipContent.hide();\n            globalListener.unregister('itemTooltip', api);\n        }\n    });\n\n\n    /**\n     * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n     * From top to bottom. (the last one should be globalTooltipModel);\n     */\n    function buildTooltipModel(modelCascade) {\n        var resultModel = modelCascade.pop();\n        while (modelCascade.length) {\n            var tooltipOpt = modelCascade.pop();\n            if (tooltipOpt) {\n                if (tooltipOpt instanceof Model) {\n                    tooltipOpt = tooltipOpt.get('tooltip', true);\n                }\n                // In each data item tooltip can be simply write:\n                // {\n                //  value: 10,\n                //  tooltip: 'Something you need to know'\n                // }\n                if (typeof tooltipOpt === 'string') {\n                    tooltipOpt = {formatter: tooltipOpt};\n                }\n                resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n            }\n        }\n        return resultModel;\n    }\n\n    function makeDispatchAction(payload, api) {\n        return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n    }\n\n    function refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n        var size = getOuterSize(el);\n        var width = size.width;\n        var height = size.height;\n\n        if (gapH != null) {\n            if (x + width + gapH > viewWidth) {\n                x -= width + gapH;\n            }\n            else {\n                x += gapH;\n            }\n        }\n        if (gapV != null) {\n            if (y + height + gapV > viewHeight) {\n                y -= height + gapV;\n            }\n            else {\n                y += gapV;\n            }\n        }\n        return [x, y];\n    }\n\n    function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var size = getOuterSize(el);\n        var width = size.width;\n        var height = size.height;\n\n        x = Math.min(x + width, viewWidth) - width;\n        y = Math.min(y + height, viewHeight) - height;\n        x = Math.max(x, 0);\n        y = Math.max(y, 0);\n\n        return [x, y];\n    }\n\n    function getOuterSize(el) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        // Consider browser compatibility.\n        // IE8 does not support getComputedStyle.\n        if (document.defaultView && document.defaultView.getComputedStyle) {\n            var stl = document.defaultView.getComputedStyle(el);\n            if (stl) {\n                width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10)\n                    + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n                height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10)\n                    + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n            }\n        }\n\n        return {width: width, height: height};\n    }\n\n    function calcTooltipPosition(position, rect, contentSize) {\n        var domWidth = contentSize[0];\n        var domHeight = contentSize[1];\n        var gap = 5;\n        var x = 0;\n        var y = 0;\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n        switch (position) {\n            case 'inside':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'top':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y - domHeight - gap;\n                break;\n            case 'bottom':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight + gap;\n                break;\n            case 'left':\n                x = rect.x - domWidth - gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'right':\n                x = rect.x + rectWidth + gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n        }\n        return [x, y];\n    }\n\n    function isCenterAlign(align) {\n        return align === 'center' || align === 'middle';\n    }\n\n\n\n\n/***/ }),\n\n/***/ 725:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var axisDefault = __webpack_require__(684);\n    var zrUtil = __webpack_require__(606);\n    var ComponentModel = __webpack_require__(618);\n    var layout = __webpack_require__(619);\n\n    // FIXME axisType is fixed ?\n    var AXIS_TYPES = ['value', 'category', 'time', 'log'];\n\n    /**\n     * Generate sub axis model class\n     * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n     * @param {module:echarts/model/Component} BaseAxisModelClass\n     * @param {Function} axisTypeDefaulter\n     * @param {Object} [extraDefaultOption]\n     */\n    module.exports = function (axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n\n        zrUtil.each(AXIS_TYPES, function (axisType) {\n\n            BaseAxisModelClass.extend({\n\n                type: axisName + 'Axis.' + axisType,\n\n                mergeDefaultAndTheme: function (option, ecModel) {\n                    var layoutMode = this.layoutMode;\n                    var inputPositionParams = layoutMode\n                        ? layout.getLayoutParams(option) : {};\n\n                    var themeModel = ecModel.getTheme();\n                    zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n                    zrUtil.merge(option, this.getDefaultOption());\n\n                    option.type = axisTypeDefaulter(axisName, option);\n\n                    if (layoutMode) {\n                        layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n                    }\n                },\n\n                defaultOption: zrUtil.mergeAll(\n                    [\n                        {},\n                        axisDefault[axisType + 'Axis'],\n                        extraDefaultOption\n                    ],\n                    true\n                )\n            });\n        });\n\n        ComponentModel.registerSubTypeDefaulter(\n            axisName + 'Axis',\n            zrUtil.curry(axisTypeDefaulter, axisName)\n        );\n    };\n\n\n/***/ }),\n\n/***/ 726:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var Axis = __webpack_require__(650);\n\n    /**\n     * Extend axis 2d\n     * @constructor module:echarts/coord/cartesian/Axis2D\n     * @extends {module:echarts/coord/cartesian/Axis}\n     * @param {string} dim\n     * @param {*} scale\n     * @param {Array.<number>} coordExtent\n     * @param {string} axisType\n     * @param {string} position\n     */\n    var Axis2D = function (dim, scale, coordExtent, axisType, position) {\n        Axis.call(this, dim, scale, coordExtent);\n        /**\n         * Axis type\n         *  - 'category'\n         *  - 'value'\n         *  - 'time'\n         *  - 'log'\n         * @type {string}\n         */\n        this.type = axisType || 'value';\n\n        /**\n         * Axis position\n         *  - 'top'\n         *  - 'bottom'\n         *  - 'left'\n         *  - 'right'\n         */\n        this.position = position || 'bottom';\n    };\n\n    Axis2D.prototype = {\n\n        constructor: Axis2D,\n\n        /**\n         * Index of axis, can be used as key\n         */\n        index: 0,\n        /**\n         * If axis is on the zero position of the other axis\n         * @type {boolean}\n         */\n        onZero: false,\n\n        /**\n         * Axis model\n         * @param {module:echarts/coord/cartesian/AxisModel}\n         */\n        model: null,\n\n        isHorizontal: function () {\n            var position = this.position;\n            return position === 'top' || position === 'bottom';\n        },\n\n        /**\n         * Each item cooresponds to this.getExtent(), which\n         * means globalExtent[0] may greater than globalExtent[1],\n         * unless `asc` is input.\n         *\n         * @param {boolean} [asc]\n         * @return {Array.<number>}\n         */\n        getGlobalExtent: function (asc) {\n            var ret = this.getExtent();\n            ret[0] = this.toGlobalCoord(ret[0]);\n            ret[1] = this.toGlobalCoord(ret[1]);\n            asc && ret[0] > ret[1] && ret.reverse();\n            return ret;\n        },\n\n        getOtherAxis: function () {\n            this.grid.getOtherAxis();\n        },\n\n        /**\n         * If label is ignored.\n         * Automatically used when axis is category and label can not be all shown\n         * @param  {number}  idx\n         * @return {boolean}\n         */\n        isLabelIgnored: function (idx) {\n            if (this.type === 'category') {\n                var labelInterval = this.getLabelInterval();\n                return ((typeof labelInterval === 'function')\n                    && !labelInterval(idx, this.scale.getLabel(idx)))\n                    || idx % (labelInterval + 1);\n            }\n        },\n\n        /**\n         * @override\n         */\n        pointToData: function (point, clamp) {\n            return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n        },\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var localCoord = axis.toLocalCoord(80);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toLocalCoord: null,\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var globalCoord = axis.toLocalCoord(40);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toGlobalCoord: null\n\n    };\n    zrUtil.inherits(Axis2D, Axis);\n\n    module.exports = Axis2D;\n\n\n/***/ }),\n\n/***/ 727:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\n\n\n    var zrUtil = __webpack_require__(606);\n\n    function dimAxisMapper(dim) {\n        return this._axes[dim];\n    }\n\n    /**\n     * @alias module:echarts/coord/Cartesian\n     * @constructor\n     */\n    var Cartesian = function (name) {\n        this._axes = {};\n\n        this._dimList = [];\n\n        /**\n         * @type {string}\n         */\n        this.name = name || '';\n    };\n\n    Cartesian.prototype = {\n\n        constructor: Cartesian,\n\n        type: 'cartesian',\n\n        /**\n         * Get axis\n         * @param  {number|string} dim\n         * @return {module:echarts/coord/Cartesian~Axis}\n         */\n        getAxis: function (dim) {\n            return this._axes[dim];\n        },\n\n        /**\n         * Get axes list\n         * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n         */\n        getAxes: function () {\n            return zrUtil.map(this._dimList, dimAxisMapper, this);\n        },\n\n        /**\n         * Get axes list by given scale type\n         */\n        getAxesByScale: function (scaleType) {\n            scaleType = scaleType.toLowerCase();\n            return zrUtil.filter(\n                this.getAxes(),\n                function (axis) {\n                    return axis.scale.type === scaleType;\n                }\n            );\n        },\n\n        /**\n         * Add axis\n         * @param {module:echarts/coord/Cartesian.Axis}\n         */\n        addAxis: function (axis) {\n            var dim = axis.dim;\n\n            this._axes[dim] = axis;\n\n            this._dimList.push(dim);\n        },\n\n        /**\n         * Convert data to coord in nd space\n         * @param {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        dataToCoord: function (val) {\n            return this._dataCoordConvert(val, 'dataToCoord');\n        },\n\n        /**\n         * Convert coord in nd space to data\n         * @param  {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        coordToData: function (val) {\n            return this._dataCoordConvert(val, 'coordToData');\n        },\n\n        _dataCoordConvert: function (input, method) {\n            var dimList = this._dimList;\n\n            var output = input instanceof Array ? [] : {};\n\n            for (var i = 0; i < dimList.length; i++) {\n                var dim = dimList[i];\n                var axis = this._axes[dim];\n\n                output[dim] = axis[method](input[dim]);\n            }\n\n            return output;\n        }\n    };\n\n    module.exports = Cartesian;\n\n\n/***/ }),\n\n/***/ 728:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var Cartesian = __webpack_require__(727);\n\n    function Cartesian2D(name) {\n\n        Cartesian.call(this, name);\n    }\n\n    Cartesian2D.prototype = {\n\n        constructor: Cartesian2D,\n\n        type: 'cartesian2d',\n\n        /**\n         * @type {Array.<string>}\n         * @readOnly\n         */\n        dimensions: ['x', 'y'],\n\n        /**\n         * Base axis will be used on stacking.\n         *\n         * @return {module:echarts/coord/cartesian/Axis2D}\n         */\n        getBaseAxis: function () {\n            return this.getAxesByScale('ordinal')[0]\n                || this.getAxesByScale('time')[0]\n                || this.getAxis('x');\n        },\n\n        /**\n         * If contain point\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        containPoint: function (point) {\n            var axisX = this.getAxis('x');\n            var axisY = this.getAxis('y');\n            return axisX.contain(axisX.toLocalCoord(point[0]))\n                && axisY.contain(axisY.toLocalCoord(point[1]));\n        },\n\n        /**\n         * If contain data\n         * @param {Array.<number>} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.getAxis('x').containData(data[0])\n                && this.getAxis('y').containData(data[1]);\n        },\n\n        /**\n         * @param {Array.<number>} data\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        dataToPoint: function (data, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)),\n                yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))\n            ];\n        },\n\n        /**\n         * @param {Array.<number>} point\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        pointToData: function (point, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp),\n                yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)\n            ];\n        },\n\n        /**\n         * Get other axis\n         * @param {module:echarts/coord/cartesian/Axis2D} axis\n         */\n        getOtherAxis: function (axis) {\n            return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n        }\n\n    };\n\n    zrUtil.inherits(Cartesian2D, Cartesian);\n\n    module.exports = Cartesian2D;\n\n\n/***/ }),\n\n/***/ 729:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\n\n\n    __webpack_require__(663);\n\n    var ComponentModel = __webpack_require__(618);\n\n    module.exports = ComponentModel.extend({\n\n        type: 'grid',\n\n        dependencies: ['xAxis', 'yAxis'],\n\n        layoutMode: 'box',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Grid}\n         */\n        coordinateSystem: null,\n\n        defaultOption: {\n            show: false,\n            zlevel: 0,\n            z: 0,\n            left: '10%',\n            top: 60,\n            right: '10%',\n            bottom: 60,\n            // If grid size contain label\n            containLabel: false,\n            // width: {totalWidth} - left - right,\n            // height: {totalHeight} - top - bottom,\n            backgroundColor: 'rgba(0,0,0,0)',\n            borderWidth: 1,\n            borderColor: '#ccc'\n        }\n    });\n\n\n/***/ }),\n\n/***/ 730:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    function defaultKeyGetter(item) {\n        return item;\n    }\n\n    /**\n     * @param {Array} oldArr\n     * @param {Array} newArr\n     * @param {Function} oldKeyGetter\n     * @param {Function} newKeyGetter\n     * @param {Object} [context] Can be visited by this.context in callback.\n     */\n    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n        this._old = oldArr;\n        this._new = newArr;\n\n        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n\n        this.context = context;\n    }\n\n    DataDiffer.prototype = {\n\n        constructor: DataDiffer,\n\n        /**\n         * Callback function when add a data\n         */\n        add: function (func) {\n            this._add = func;\n            return this;\n        },\n\n        /**\n         * Callback function when update a data\n         */\n        update: function (func) {\n            this._update = func;\n            return this;\n        },\n\n        /**\n         * Callback function when remove a data\n         */\n        remove: function (func) {\n            this._remove = func;\n            return this;\n        },\n\n        execute: function () {\n            var oldArr = this._old;\n            var newArr = this._new;\n\n            var oldDataIndexMap = {};\n            var newDataIndexMap = {};\n            var oldDataKeyArr = [];\n            var newDataKeyArr = [];\n            var i;\n\n            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this);\n\n            // Travel by inverted order to make sure order consistency\n            // when duplicate keys exists (consider newDataIndex.pop() below).\n            // For performance consideration, these code below do not look neat.\n            for (i = 0; i < oldArr.length; i++) {\n                var key = oldDataKeyArr[i];\n                var idx = newDataIndexMap[key];\n\n                // idx can never be empty array here. see 'set null' logic below.\n                if (idx != null) {\n                    // Consider there is duplicate key (for example, use dataItem.name as key).\n                    // We should make sure every item in newArr and oldArr can be visited.\n                    var len = idx.length;\n                    if (len) {\n                        len === 1 && (newDataIndexMap[key] = null);\n                        idx = idx.unshift();\n                    }\n                    else {\n                        newDataIndexMap[key] = null;\n                    }\n                    this._update && this._update(idx, i);\n                }\n                else {\n                    this._remove && this._remove(i);\n                }\n            }\n\n            for (var i = 0; i < newDataKeyArr.length; i++) {\n                var key = newDataKeyArr[i];\n                if (newDataIndexMap.hasOwnProperty(key)) {\n                    var idx = newDataIndexMap[key];\n                    if (idx == null) {\n                        continue;\n                    }\n                    // idx can never be empty array here. see 'set null' logic above.\n                    if (!idx.length) {\n                        this._add && this._add(idx);\n                    }\n                    else {\n                        for (var j = 0, len = idx.length; j < len; j++) {\n                            this._add && this._add(idx[j]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    function initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n        for (var i = 0; i < arr.length; i++) {\n            // Add prefix to avoid conflict with Object.prototype.\n            var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n            var existence = map[key];\n            if (existence == null) {\n                keyArr.push(key);\n                map[key] = i;\n            }\n            else {\n                if (!existence.length) {\n                    map[key] = existence = [existence];\n                }\n                existence.push(i);\n            }\n        }\n    }\n\n    module.exports = DataDiffer;\n\n\n/***/ }),\n\n/***/ 731:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var createListFromArray = __webpack_require__(648);\n    var symbolUtil = __webpack_require__(639);\n    var axisHelper = __webpack_require__(620);\n    var axisModelCommonMixin = __webpack_require__(651);\n    var Model = __webpack_require__(614);\n    var util = __webpack_require__(606);\n\n    module.exports = {\n        /**\n         * Create a muti dimension List structure from seriesModel.\n         * @param  {module:echarts/model/Model} seriesModel\n         * @return {module:echarts/data/List} list\n         */\n        createList: function (seriesModel) {\n            var data = seriesModel.get('data');\n            return createListFromArray(data, seriesModel, seriesModel.ecModel);\n        },\n\n        /**\n         * @see {module:echarts/data/helper/completeDimensions}\n         */\n        completeDimensions: __webpack_require__(631),\n\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @see http://echarts.baidu.com/option.html#series-scatter.symbol\n         * @param {string} symbolDesc\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: symbolUtil.createSymbol,\n\n        /**\n         * Create scale\n         * @param {Array.<number>} dataExtent\n         * @param {Object|module:echarts/Model} option\n         */\n        createScale: function (dataExtent, option) {\n            var axisModel = option;\n            if (!(option instanceof Model)) {\n                axisModel = new Model(option);\n                util.mixin(axisModel, axisModelCommonMixin);\n            }\n\n            var scale = axisHelper.createScaleByModel(axisModel);\n            scale.setExtent(dataExtent[0], dataExtent[1]);\n\n            axisHelper.niceScaleExtent(scale, axisModel);\n            return scale;\n        },\n\n        /**\n         * Mixin common methods to axis model,\n         *\n         * Inlcude methods\n         * `getFormattedLabels() => Array.<string>`\n         * `getCategories() => Array.<string>`\n         * `getMin(origin: boolean) => number`\n         * `getMax(origin: boolean) => number`\n         * `getNeedCrossZero() => boolean`\n         * `setRange(start: number, end: number)`\n         * `resetRange()`\n         */\n        mixinAxisModelCommonMethods: function (Model) {\n            util.mixin(Model, axisModelCommonMixin);\n        }\n    };\n\n\n/***/ }),\n\n/***/ 732:\n/***/ (function(module, exports) {\n\n\n\n    module.exports = function (seriesType, ecModel) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var coordSys = seriesModel.coordinateSystem;\n\n            if (!coordSys) {\n                return;\n            }\n\n            var dims = [];\n            var coordDims = coordSys.dimensions;\n            for (var i = 0; i < coordDims.length; i++) {\n                dims.push(seriesModel.coordDimToDataDim(coordSys.dimensions[i])[0]);\n            }\n\n            if (dims.length === 1) {\n                data.each(dims[0], function (x, idx) {\n                    // Also {Array.<number>}, not undefined to avoid if...else... statement\n                    data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n                });\n            }\n            else if (dims.length === 2) {\n                data.each(dims, function (x, y, idx) {\n                    // Also {Array.<number>}, not undefined to avoid if...else... statement\n                    data.setItemLayout(\n                        idx, (isNaN(x) || isNaN(y)) ? [NaN, NaN] : coordSys.dataToPoint([x, y])\n                    );\n                }, true);\n            }\n        });\n    };\n\n\n\n/***/ }),\n\n/***/ 733:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var graphic = __webpack_require__(608);\n    var zrUtil = __webpack_require__(606);\n    var PI = Math.PI;\n    /**\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [opts]\n     * @param {string} [opts.text]\n     * @param {string} [opts.color]\n     * @param {string} [opts.textColor]\n     * @return {module:zrender/Element}\n     */\n    module.exports = function (api, opts) {\n        opts = opts || {};\n        zrUtil.defaults(opts, {\n            text: 'loading',\n            color: '#c23531',\n            textColor: '#000',\n            maskColor: 'rgba(255, 255, 255, 0.8)',\n            zlevel: 0\n        });\n        var mask = new graphic.Rect({\n            style: {\n                fill: opts.maskColor\n            },\n            zlevel: opts.zlevel,\n            z: 10000\n        });\n        var arc = new graphic.Arc({\n            shape: {\n                startAngle: -PI / 2,\n                endAngle: -PI / 2 + 0.1,\n                r: 10\n            },\n            style: {\n                stroke: opts.color,\n                lineCap: 'round',\n                lineWidth: 5\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n        var labelRect = new graphic.Rect({\n            style: {\n                fill: 'none',\n                text: opts.text,\n                textPosition: 'right',\n                textDistance: 10,\n                textFill: opts.textColor\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n\n        arc.animateShape(true)\n            .when(1000, {\n                endAngle: PI * 3 / 2\n            })\n            .start('circularInOut');\n        arc.animateShape(true)\n            .when(1000, {\n                startAngle: PI * 3 / 2\n            })\n            .delay(300)\n            .start('circularInOut');\n\n        var group = new graphic.Group();\n        group.add(arc);\n        group.add(labelRect);\n        group.add(mask);\n        // Inject resize\n        group.resize = function () {\n            var cx = api.getWidth() / 2;\n            var cy = api.getHeight() / 2;\n            arc.setShape({\n                cx: cx,\n                cy: cy\n            });\n            var r = arc.shape.r;\n            labelRect.setShape({\n                x: cx - r,\n                y: cy - r,\n                width: r * 2,\n                height: r * 2\n            });\n\n            mask.setShape({\n                x: 0,\n                y: 0,\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n        };\n        group.resize();\n        return group;\n    };\n\n\n/***/ }),\n\n/***/ 734:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n\n\n    /**\n     * Caution: If the mechanism should be changed some day, these cases\n     * should be considered:\n     *\n     * (1) In `merge option` mode, if using the same option to call `setOption`\n     * many times, the result should be the same (try our best to ensure that).\n     * (2) In `merge option` mode, if a component has no id/name specified, it\n     * will be merged by index, and the result sequence of the components is\n     * consistent to the original sequence.\n     * (3) `reset` feature (in toolbox). Find detailed info in comments about\n     * `mergeOption` in module:echarts/model/OptionManager.\n     */\n\n    var zrUtil = __webpack_require__(606);\n    var modelUtil = __webpack_require__(609);\n    var Model = __webpack_require__(614);\n    var each = zrUtil.each;\n    var filter = zrUtil.filter;\n    var map = zrUtil.map;\n    var isArray = zrUtil.isArray;\n    var indexOf = zrUtil.indexOf;\n    var isObject = zrUtil.isObject;\n\n    var ComponentModel = __webpack_require__(618);\n\n    var globalDefault = __webpack_require__(736);\n\n    var OPTION_INNER_KEY = '\\0_ec_inner';\n\n    /**\n     * @alias module:echarts/model/Global\n     *\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {Object} theme\n     */\n    var GlobalModel = Model.extend({\n\n        constructor: GlobalModel,\n\n        init: function (option, parentModel, theme, optionManager) {\n            theme = theme || {};\n\n            this.option = null; // Mark as not initialized.\n\n            /**\n             * @type {module:echarts/model/Model}\n             * @private\n             */\n            this._theme = new Model(theme);\n\n            /**\n             * @type {module:echarts/model/OptionManager}\n             */\n            this._optionManager = optionManager;\n        },\n\n        setOption: function (option, optionPreprocessorFuncs) {\n            zrUtil.assert(\n                !(OPTION_INNER_KEY in option),\n                'please use chart.getOption()'\n            );\n\n            this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n            this.resetOption(null);\n        },\n\n        /**\n         * @param {string} type null/undefined: reset all.\n         *                      'recreate': force recreate all.\n         *                      'timeline': only reset timeline option\n         *                      'media': only reset media query option\n         * @return {boolean} Whether option changed.\n         */\n        resetOption: function (type) {\n            var optionChanged = false;\n            var optionManager = this._optionManager;\n\n            if (!type || type === 'recreate') {\n                var baseOption = optionManager.mountOption(type === 'recreate');\n\n                if (!this.option || type === 'recreate') {\n                    initBase.call(this, baseOption);\n                }\n                else {\n                    this.restoreData();\n                    this.mergeOption(baseOption);\n                }\n                optionChanged = true;\n            }\n\n            if (type === 'timeline' || type === 'media') {\n                this.restoreData();\n            }\n\n            if (!type || type === 'recreate' || type === 'timeline') {\n                var timelineOption = optionManager.getTimelineOption(this);\n                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n            }\n\n            if (!type || type === 'recreate' || type === 'media') {\n                var mediaOptions = optionManager.getMediaOption(this, this._api);\n                if (mediaOptions.length) {\n                    each(mediaOptions, function (mediaOption) {\n                        this.mergeOption(mediaOption, optionChanged = true);\n                    }, this);\n                }\n            }\n\n            return optionChanged;\n        },\n\n        /**\n         * @protected\n         */\n        mergeOption: function (newOption) {\n            var option = this.option;\n            var componentsMap = this._componentsMap;\n            var newCptTypes = [];\n\n            // 如果不存在对应的 component model 则直接 merge\n            each(newOption, function (componentOption, mainType) {\n                if (componentOption == null) {\n                    return;\n                }\n\n                if (!ComponentModel.hasClass(mainType)) {\n                    option[mainType] = option[mainType] == null\n                        ? zrUtil.clone(componentOption)\n                        : zrUtil.merge(option[mainType], componentOption, true);\n                }\n                else {\n                    newCptTypes.push(mainType);\n                }\n            });\n\n            // FIXME OPTION 同步是否要改回原来的\n            ComponentModel.topologicalTravel(\n                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\n            );\n\n            this._seriesIndices = this._seriesIndices || [];\n\n            function visitComponent(mainType, dependencies) {\n                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n\n                var mapResult = modelUtil.mappingToExists(\n                    componentsMap.get(mainType), newCptOptionList\n                );\n\n                modelUtil.makeIdAndName(mapResult);\n\n                // Set mainType and complete subType.\n                each(mapResult, function (item, index) {\n                    var opt = item.option;\n                    if (isObject(opt)) {\n                        item.keyInfo.mainType = mainType;\n                        item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n                    }\n                });\n\n                var dependentModels = getComponentsByTypes(\n                    componentsMap, dependencies\n                );\n\n                option[mainType] = [];\n                componentsMap.set(mainType, []);\n\n                each(mapResult, function (resultItem, index) {\n                    var componentModel = resultItem.exist;\n                    var newCptOption = resultItem.option;\n\n                    zrUtil.assert(\n                        isObject(newCptOption) || componentModel,\n                        'Empty component definition'\n                    );\n\n                    // Consider where is no new option and should be merged using {},\n                    // see removeEdgeAndAdd in topologicalTravel and\n                    // ComponentModel.getAllClassMainTypes.\n                    if (!newCptOption) {\n                        componentModel.mergeOption({}, this);\n                        componentModel.optionUpdated({}, false);\n                    }\n                    else {\n                        var ComponentModelClass = ComponentModel.getClass(\n                            mainType, resultItem.keyInfo.subType, true\n                        );\n\n                        if (componentModel && componentModel instanceof ComponentModelClass) {\n                            componentModel.name = resultItem.keyInfo.name;\n                            componentModel.mergeOption(newCptOption, this);\n                            componentModel.optionUpdated(newCptOption, false);\n                        }\n                        else {\n                            // PENDING Global as parent ?\n                            var extraOpt = zrUtil.extend(\n                                {\n                                    dependentModels: dependentModels,\n                                    componentIndex: index\n                                },\n                                resultItem.keyInfo\n                            );\n                            componentModel = new ComponentModelClass(\n                                newCptOption, this, this, extraOpt\n                            );\n                            zrUtil.extend(componentModel, extraOpt);\n                            componentModel.init(newCptOption, this, this, extraOpt);\n                            // Call optionUpdated after init.\n                            // newCptOption has been used as componentModel.option\n                            // and may be merged with theme and default, so pass null\n                            // to avoid confusion.\n                            componentModel.optionUpdated(null, true);\n                        }\n                    }\n\n                    componentsMap.get(mainType)[index] = componentModel;\n                    option[mainType][index] = componentModel.option;\n                }, this);\n\n                // Backup series for filtering.\n                if (mainType === 'series') {\n                    this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n                }\n            }\n        },\n\n        /**\n         * Get option for output (cloned option and inner info removed)\n         * @public\n         * @return {Object}\n         */\n        getOption: function () {\n            var option = zrUtil.clone(this.option);\n\n            each(option, function (opts, mainType) {\n                if (ComponentModel.hasClass(mainType)) {\n                    var opts = modelUtil.normalizeToArray(opts);\n                    for (var i = opts.length - 1; i >= 0; i--) {\n                        // Remove options with inner id.\n                        if (modelUtil.isIdInner(opts[i])) {\n                            opts.splice(i, 1);\n                        }\n                    }\n                    option[mainType] = opts;\n                }\n            });\n\n            delete option[OPTION_INNER_KEY];\n\n            return option;\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        getTheme: function () {\n            return this._theme;\n        },\n\n        /**\n         * @param {string} mainType\n         * @param {number} [idx=0]\n         * @return {module:echarts/model/Component}\n         */\n        getComponent: function (mainType, idx) {\n            var list = this._componentsMap.get(mainType);\n            if (list) {\n                return list[idx || 0];\n            }\n        },\n\n        /**\n         * If none of index and id and name used, return all components with mainType.\n         * @param {Object} condition\n         * @param {string} condition.mainType\n         * @param {string} [condition.subType] If ignore, only query by mainType\n         * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        queryComponents: function (condition) {\n            var mainType = condition.mainType;\n            if (!mainType) {\n                return [];\n            }\n\n            var index = condition.index;\n            var id = condition.id;\n            var name = condition.name;\n\n            var cpts = this._componentsMap.get(mainType);\n\n            if (!cpts || !cpts.length) {\n                return [];\n            }\n\n            var result;\n\n            if (index != null) {\n                if (!isArray(index)) {\n                    index = [index];\n                }\n                result = filter(map(index, function (idx) {\n                    return cpts[idx];\n                }), function (val) {\n                    return !!val;\n                });\n            }\n            else if (id != null) {\n                var isIdArray = isArray(id);\n                result = filter(cpts, function (cpt) {\n                    return (isIdArray && indexOf(id, cpt.id) >= 0)\n                        || (!isIdArray && cpt.id === id);\n                });\n            }\n            else if (name != null) {\n                var isNameArray = isArray(name);\n                result = filter(cpts, function (cpt) {\n                    return (isNameArray && indexOf(name, cpt.name) >= 0)\n                        || (!isNameArray && cpt.name === name);\n                });\n            }\n            else {\n                // Return all components with mainType\n                result = cpts.slice();\n            }\n\n            return filterBySubType(result, condition);\n        },\n\n        /**\n         * The interface is different from queryComponents,\n         * which is convenient for inner usage.\n         *\n         * @usage\n         * var result = findComponents(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series'},\n         *     function (model, index) {...}\n         * );\n         * // result like [component0, componnet1, ...]\n         *\n         * @param {Object} condition\n         * @param {string} condition.mainType Mandatory.\n         * @param {string} [condition.subType] Optional.\n         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n         *        where xxx is mainType.\n         *        If query attribute is null/undefined or has no index/id/name,\n         *        do not filtering by query conditions, which is convenient for\n         *        no-payload situations or when target of action is global.\n         * @param {Function} [condition.filter] parameter: component, return boolean.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        findComponents: function (condition) {\n            var query = condition.query;\n            var mainType = condition.mainType;\n\n            var queryCond = getQueryCond(query);\n            var result = queryCond\n                ? this.queryComponents(queryCond)\n                : this._componentsMap.get(mainType);\n\n            return doFilter(filterBySubType(result, condition));\n\n            function getQueryCond(q) {\n                var indexAttr = mainType + 'Index';\n                var idAttr = mainType + 'Id';\n                var nameAttr = mainType + 'Name';\n                return q && (\n                        q[indexAttr] != null\n                        || q[idAttr] != null\n                        || q[nameAttr] != null\n                    )\n                    ? {\n                        mainType: mainType,\n                        // subType will be filtered finally.\n                        index: q[indexAttr],\n                        id: q[idAttr],\n                        name: q[nameAttr]\n                    }\n                    : null;\n            }\n\n            function doFilter(res) {\n                return condition.filter\n                     ? filter(res, condition.filter)\n                     : res;\n            }\n        },\n\n        /**\n         * @usage\n         * eachComponent('legend', function (legendModel, index) {\n         *     ...\n         * });\n         * eachComponent(function (componentType, model, index) {\n         *     // componentType does not include subType\n         *     // (componentType is 'xxx' but not 'xxx.aa')\n         * });\n         * eachComponent(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n         *     function (model, index) {...}\n         * );\n         * eachComponent(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n         *     function (model, index) {...}\n         * );\n         *\n         * @param {string|Object=} mainType When mainType is object, the definition\n         *                                  is the same as the method 'findComponents'.\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachComponent: function (mainType, cb, context) {\n            var componentsMap = this._componentsMap;\n\n            if (typeof mainType === 'function') {\n                context = cb;\n                cb = mainType;\n                componentsMap.each(function (components, componentType) {\n                    each(components, function (component, index) {\n                        cb.call(context, componentType, component, index);\n                    });\n                });\n            }\n            else if (zrUtil.isString(mainType)) {\n                each(componentsMap.get(mainType), cb, context);\n            }\n            else if (isObject(mainType)) {\n                var queryResult = this.findComponents(mainType);\n                each(queryResult, cb, context);\n            }\n        },\n\n        /**\n         * @param {string} name\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByName: function (name) {\n            var series = this._componentsMap.get('series');\n            return filter(series, function (oneSeries) {\n                return oneSeries.name === name;\n            });\n        },\n\n        /**\n         * @param {number} seriesIndex\n         * @return {module:echarts/model/Series}\n         */\n        getSeriesByIndex: function (seriesIndex) {\n            return this._componentsMap.get('series')[seriesIndex];\n        },\n\n        /**\n         * @param {string} subType\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByType: function (subType) {\n            var series = this._componentsMap.get('series');\n            return filter(series, function (oneSeries) {\n                return oneSeries.subType === subType;\n            });\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeries: function () {\n            return this._componentsMap.get('series').slice();\n        },\n\n        /**\n         * After filtering, series may be different\n         * frome raw series.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.get('series')[rawSeriesIndex];\n                cb.call(context, series, rawSeriesIndex);\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeries: function (cb, context) {\n            each(this._componentsMap.get('series'), cb, context);\n        },\n\n        /**\n         * After filtering, series may be different.\n         * frome raw series.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeriesByType: function (subType, cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.get('series')[rawSeriesIndex];\n                if (series.subType === subType) {\n                    cb.call(context, series, rawSeriesIndex);\n                }\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered of given type.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeriesByType: function (subType, cb, context) {\n            return each(this.getSeriesByType(subType), cb, context);\n        },\n\n        /**\n         * @param {module:echarts/model/Series} seriesModel\n         */\n        isSeriesFiltered: function (seriesModel) {\n            assertSeriesInitialized(this);\n            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getCurrentSeriesIndices: function () {\n            return (this._seriesIndices || []).slice();\n        },\n\n        /**\n         * @param {Function} cb\n         * @param {*} context\n         */\n        filterSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            var filteredSeries = filter(\n                this._componentsMap.get('series'), cb, context\n            );\n            this._seriesIndices = createSeriesIndices(filteredSeries);\n        },\n\n        restoreData: function () {\n            var componentsMap = this._componentsMap;\n\n            this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n\n            var componentTypes = [];\n            componentsMap.each(function (components, componentType) {\n                componentTypes.push(componentType);\n            });\n\n            ComponentModel.topologicalTravel(\n                componentTypes,\n                ComponentModel.getAllClassMainTypes(),\n                function (componentType, dependencies) {\n                    each(componentsMap.get(componentType), function (component) {\n                        component.restoreData();\n                    });\n                }\n            );\n        }\n\n    });\n\n    /**\n     * @inner\n     */\n    function mergeTheme(option, theme) {\n        zrUtil.each(theme, function (themeItem, name) {\n            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n            if (!ComponentModel.hasClass(name)) {\n                if (typeof themeItem === 'object') {\n                    option[name] = !option[name]\n                        ? zrUtil.clone(themeItem)\n                        : zrUtil.merge(option[name], themeItem, false);\n                }\n                else {\n                    if (option[name] == null) {\n                        option[name] = themeItem;\n                    }\n                }\n            }\n        });\n    }\n\n    function initBase(baseOption) {\n        baseOption = baseOption;\n\n        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n        this.option = {};\n        this.option[OPTION_INNER_KEY] = 1;\n\n        /**\n         * Init with series: [], in case of calling findSeries method\n         * before series initialized.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @private\n         */\n        this._componentsMap = zrUtil.createHashMap({series: []});\n\n        /**\n         * Mapping between filtered series list and raw series list.\n         * key: filtered series indices, value: raw series indices.\n         * @type {Array.<nubmer>}\n         * @private\n         */\n        this._seriesIndices = null;\n\n        mergeTheme(baseOption, this._theme.option);\n\n        // TODO Needs clone when merging to the unexisted property\n        zrUtil.merge(baseOption, globalDefault, false);\n\n        this.mergeOption(baseOption);\n    }\n\n    /**\n     * @inner\n     * @param {Array.<string>|string} types model types\n     * @return {Object} key: {string} type, value: {Array.<Object>} models\n     */\n    function getComponentsByTypes(componentsMap, types) {\n        if (!zrUtil.isArray(types)) {\n            types = types ? [types] : [];\n        }\n\n        var ret = {};\n        each(types, function (type) {\n            ret[type] = (componentsMap.get(type) || []).slice();\n        });\n\n        return ret;\n    }\n\n    /**\n     * @inner\n     */\n    function determineSubType(mainType, newCptOption, existComponent) {\n        var subType = newCptOption.type\n            ? newCptOption.type\n            : existComponent\n            ? existComponent.subType\n            // Use determineSubType only when there is no existComponent.\n            : ComponentModel.determineSubType(mainType, newCptOption);\n\n        // tooltip, markline, markpoint may always has no subType\n        return subType;\n    }\n\n    /**\n     * @inner\n     */\n    function createSeriesIndices(seriesModels) {\n        return map(seriesModels, function (series) {\n            return series.componentIndex;\n        }) || [];\n    }\n\n    /**\n     * @inner\n     */\n    function filterBySubType(components, condition) {\n        // Using hasOwnProperty for restrict. Consider\n        // subType is undefined in user payload.\n        return condition.hasOwnProperty('subType')\n            ? filter(components, function (cpt) {\n                return cpt.subType === condition.subType;\n            })\n            : components;\n    }\n\n    /**\n     * @inner\n     */\n    function assertSeriesInitialized(ecModel) {\n        // Components that use _seriesIndices should depends on series component,\n        // which make sure that their initialization is after series.\n        if (__DEV__) {\n            if (!ecModel._seriesIndices) {\n                throw new Error('Option should contains series.');\n            }\n        }\n    }\n\n    zrUtil.mixin(GlobalModel, __webpack_require__(664));\n\n    module.exports = GlobalModel;\n\n\n/***/ }),\n\n/***/ 735:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var modelUtil = __webpack_require__(609);\n    var ComponentModel = __webpack_require__(618);\n    var each = zrUtil.each;\n    var clone = zrUtil.clone;\n    var map = zrUtil.map;\n    var merge = zrUtil.merge;\n\n    var QUERY_REG = /^(min|max)?(.+)$/;\n\n    /**\n     * TERM EXPLANATIONS:\n     *\n     * [option]:\n     *\n     *     An object that contains definitions of components. For example:\n     *     var option = {\n     *         title: {...},\n     *         legend: {...},\n     *         visualMap: {...},\n     *         series: [\n     *             {data: [...]},\n     *             {data: [...]},\n     *             ...\n     *         ]\n     *     };\n     *\n     * [rawOption]:\n     *\n     *     An object input to echarts.setOption. 'rawOption' may be an\n     *     'option', or may be an object contains multi-options. For example:\n     *     var option = {\n     *         baseOption: {\n     *             title: {...},\n     *             legend: {...},\n     *             series: [\n     *                 {data: [...]},\n     *                 {data: [...]},\n     *                 ...\n     *             ]\n     *         },\n     *         timeline: {...},\n     *         options: [\n     *             {title: {...}, series: {data: [...]}},\n     *             {title: {...}, series: {data: [...]}},\n     *             ...\n     *         ],\n     *         media: [\n     *             {\n     *                 query: {maxWidth: 320},\n     *                 option: {series: {x: 20}, visualMap: {show: false}}\n     *             },\n     *             {\n     *                 query: {minWidth: 320, maxWidth: 720},\n     *                 option: {series: {x: 500}, visualMap: {show: true}}\n     *             },\n     *             {\n     *                 option: {series: {x: 1200}, visualMap: {show: true}}\n     *             }\n     *         ]\n     *     };\n     *\n     * @alias module:echarts/model/OptionManager\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function OptionManager(api) {\n\n        /**\n         * @private\n         * @type {module:echarts/ExtensionAPI}\n         */\n        this._api = api;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._timelineOptions = [];\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._mediaList = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._mediaDefault;\n\n        /**\n         * -1, means default.\n         * empty means no media.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._currentMediaIndices = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._optionBackup;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._newBaseOption;\n    }\n\n    // timeline.notMerge is not supported in ec3. Firstly there is rearly\n    // case that notMerge is needed. Secondly supporting 'notMerge' requires\n    // rawOption cloned and backuped when timeline changed, which does no\n    // good to performance. What's more, that both timeline and setOption\n    // method supply 'notMerge' brings complex and some problems.\n    // Consider this case:\n    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n    OptionManager.prototype = {\n\n        constructor: OptionManager,\n\n        /**\n         * @public\n         * @param {Object} rawOption Raw option.\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Array.<Function>} optionPreprocessorFuncs\n         * @return {Object} Init option\n         */\n        setOption: function (rawOption, optionPreprocessorFuncs) {\n            rawOption = clone(rawOption, true);\n\n            // FIXME\n            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n            var oldOptionBackup = this._optionBackup;\n            var newParsedOption = parseRawOption.call(\n                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\n            );\n            this._newBaseOption = newParsedOption.baseOption;\n\n            // For setOption at second time (using merge mode);\n            if (oldOptionBackup) {\n                // Only baseOption can be merged.\n                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\n\n                // For simplicity, timeline options and media options do not support merge,\n                // that is, if you `setOption` twice and both has timeline options, the latter\n                // timeline opitons will not be merged to the formers, but just substitude them.\n                if (newParsedOption.timelineOptions.length) {\n                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n                }\n                if (newParsedOption.mediaList.length) {\n                    oldOptionBackup.mediaList = newParsedOption.mediaList;\n                }\n                if (newParsedOption.mediaDefault) {\n                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n                }\n            }\n            else {\n                this._optionBackup = newParsedOption;\n            }\n        },\n\n        /**\n         * @param {boolean} isRecreate\n         * @return {Object}\n         */\n        mountOption: function (isRecreate) {\n            var optionBackup = this._optionBackup;\n\n            // TODO\n            // 如果没有reset功能则不clone。\n\n            this._timelineOptions = map(optionBackup.timelineOptions, clone);\n            this._mediaList = map(optionBackup.mediaList, clone);\n            this._mediaDefault = clone(optionBackup.mediaDefault);\n            this._currentMediaIndices = [];\n\n            return clone(isRecreate\n                // this._optionBackup.baseOption, which is created at the first `setOption`\n                // called, and is merged into every new option by inner method `mergeOption`\n                // each time `setOption` called, can be only used in `isRecreate`, because\n                // its reliability is under suspicion. In other cases option merge is\n                // performed by `model.mergeOption`.\n                ? optionBackup.baseOption : this._newBaseOption\n            );\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object}\n         */\n        getTimelineOption: function (ecModel) {\n            var option;\n            var timelineOptions = this._timelineOptions;\n\n            if (timelineOptions.length) {\n                // getTimelineOption can only be called after ecModel inited,\n                // so we can get currentIndex from timelineModel.\n                var timelineModel = ecModel.getComponent('timeline');\n                if (timelineModel) {\n                    option = clone(\n                        timelineOptions[timelineModel.getCurrentIndex()],\n                        true\n                    );\n                }\n            }\n\n            return option;\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Array.<Object>}\n         */\n        getMediaOption: function (ecModel) {\n            var ecWidth = this._api.getWidth();\n            var ecHeight = this._api.getHeight();\n            var mediaList = this._mediaList;\n            var mediaDefault = this._mediaDefault;\n            var indices = [];\n            var result = [];\n\n            // No media defined.\n            if (!mediaList.length && !mediaDefault) {\n                return result;\n            }\n\n            // Multi media may be applied, the latter defined media has higher priority.\n            for (var i = 0, len = mediaList.length; i < len; i++) {\n                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n                    indices.push(i);\n                }\n            }\n\n            // FIXME\n            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n            if (!indices.length && mediaDefault) {\n                indices = [-1];\n            }\n\n            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n                result = map(indices, function (index) {\n                    return clone(\n                        index === -1 ? mediaDefault.option : mediaList[index].option\n                    );\n                });\n            }\n            // Otherwise return nothing.\n\n            this._currentMediaIndices = indices;\n\n            return result;\n        }\n    };\n\n    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n        var timelineOptions = [];\n        var mediaList = [];\n        var mediaDefault;\n        var baseOption;\n\n        // Compatible with ec2.\n        var timelineOpt = rawOption.timeline;\n\n        if (rawOption.baseOption) {\n            baseOption = rawOption.baseOption;\n        }\n\n        // For timeline\n        if (timelineOpt || rawOption.options) {\n            baseOption = baseOption || {};\n            timelineOptions = (rawOption.options || []).slice();\n        }\n\n        // For media query\n        if (rawOption.media) {\n            baseOption = baseOption || {};\n            var media = rawOption.media;\n            each(media, function (singleMedia) {\n                if (singleMedia && singleMedia.option) {\n                    if (singleMedia.query) {\n                        mediaList.push(singleMedia);\n                    }\n                    else if (!mediaDefault) {\n                        // Use the first media default.\n                        mediaDefault = singleMedia;\n                    }\n                }\n            });\n        }\n\n        // For normal option\n        if (!baseOption) {\n            baseOption = rawOption;\n        }\n\n        // Set timelineOpt to baseOption in ec3,\n        // which is convenient for merge option.\n        if (!baseOption.timeline) {\n            baseOption.timeline = timelineOpt;\n        }\n\n        // Preprocess.\n        each([baseOption].concat(timelineOptions)\n            .concat(zrUtil.map(mediaList, function (media) {\n                return media.option;\n            })),\n            function (option) {\n                each(optionPreprocessorFuncs, function (preProcess) {\n                    preProcess(option, isNew);\n                });\n            }\n        );\n\n        return {\n            baseOption: baseOption,\n            timelineOptions: timelineOptions,\n            mediaDefault: mediaDefault,\n            mediaList: mediaList\n        };\n    }\n\n    /**\n     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n     * Support: width, height, aspectRatio\n     * Can use max or min as prefix.\n     */\n    function applyMediaQuery(query, ecWidth, ecHeight) {\n        var realMap = {\n            width: ecWidth,\n            height: ecHeight,\n            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n        };\n\n        var applicatable = true;\n\n        zrUtil.each(query, function (value, attr) {\n            var matched = attr.match(QUERY_REG);\n\n            if (!matched || !matched[1] || !matched[2]) {\n                return;\n            }\n\n            var operator = matched[1];\n            var realAttr = matched[2].toLowerCase();\n\n            if (!compare(realMap[realAttr], value, operator)) {\n                applicatable = false;\n            }\n        });\n\n        return applicatable;\n    }\n\n    function compare(real, expect, operator) {\n        if (operator === 'min') {\n            return real >= expect;\n        }\n        else if (operator === 'max') {\n            return real <= expect;\n        }\n        else { // Equals\n            return real === expect;\n        }\n    }\n\n    function indicesEquals(indices1, indices2) {\n        // indices is always order by asc and has only finite number.\n        return indices1.join(',') === indices2.join(',');\n    }\n\n    /**\n     * Consider case:\n     * `chart.setOption(opt1);`\n     * Then user do some interaction like dataZoom, dataView changing.\n     * `chart.setOption(opt2);`\n     * Then user press 'reset button' in toolbox.\n     *\n     * After doing that all of the interaction effects should be reset, the\n     * chart should be the same as the result of invoke\n     * `chart.setOption(opt1); chart.setOption(opt2);`.\n     *\n     * Although it is not able ensure that\n     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n     * `chart.setOption(merge(opt1, opt2));` exactly,\n     * this might be the only simple way to implement that feature.\n     *\n     * MEMO: We've considered some other approaches:\n     * 1. Each model handle its self restoration but not uniform treatment.\n     *     (Too complex in logic and error-prone)\n     * 2. Use a shadow ecModel. (Performace expensive)\n     */\n    function mergeOption(oldOption, newOption) {\n        newOption = newOption || {};\n\n        each(newOption, function (newCptOpt, mainType) {\n            if (newCptOpt == null) {\n                return;\n            }\n\n            var oldCptOpt = oldOption[mainType];\n\n            if (!ComponentModel.hasClass(mainType)) {\n                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n            }\n            else {\n                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n\n                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n\n                oldOption[mainType] = map(mapResult, function (item) {\n                    return (item.option && item.exist)\n                        ? merge(item.exist, item.option, true)\n                        : (item.exist || item.option);\n                });\n            }\n        });\n    }\n\n    module.exports = OptionManager;\n\n\n/***/ }),\n\n/***/ 736:\n/***/ (function(module, exports) {\n\n\n    var platform = '';\n    // Navigator not exists in node\n    if (typeof navigator !== 'undefined') {\n        platform = navigator.platform || '';\n    }\n    module.exports = {\n        // 全图默认背景\n        // backgroundColor: 'rgba(0,0,0,0)',\n\n        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n        // 浅色\n        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n        // 深色\n        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\n\n        // 默认需要 Grid 配置项\n        // grid: {},\n        // 主题，主题\n        textStyle: {\n            // color: '#000',\n            // decoration: 'none',\n            // PENDING\n            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n            // fontFamily: 'Arial, Verdana, sans-serif',\n            fontSize: 12,\n            fontStyle: 'normal',\n            fontWeight: 'normal'\n        },\n\n        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n        // Default is source-over\n        blendMode: null,\n\n        animation: 'auto',\n        animationDuration: 1000,\n        animationDurationUpdate: 300,\n        animationEasing: 'exponentialOut',\n        animationEasingUpdate: 'cubicOut',\n\n        animationThreshold: 2000,\n        // Configuration for progressive/incremental rendering\n        progressiveThreshold: 3000,\n        progressive: 400,\n\n        // Threshold of if use single hover layer to optimize.\n        // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n        // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n        // which is unexpected.\n        // see example <echarts/test/heatmap-large.html>.\n        hoverLayerThreshold: 3000,\n\n        // See: module:echarts/scale/Time\n        useUTC: false\n    };\n\n\n/***/ }),\n\n/***/ 737:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    module.exports = {\n        getAreaStyle: __webpack_require__(637)(\n            [\n                ['fill', 'color'],\n                ['shadowBlur'],\n                ['shadowOffsetX'],\n                ['shadowOffsetY'],\n                ['opacity'],\n                ['shadowColor']\n            ]\n        )\n    };\n\n\n/***/ }),\n\n/***/ 738:\n/***/ (function(module, exports) {\n\n\n\n    module.exports = {\n        getBoxLayoutParams: function () {\n            return {\n                left: this.get('left'),\n                top: this.get('top'),\n                right: this.get('right'),\n                bottom: this.get('bottom'),\n                width: this.get('width'),\n                height: this.get('height')\n            };\n        }\n    };\n\n\n/***/ }),\n\n/***/ 739:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var getItemStyle = __webpack_require__(637)(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor'],\n            ['textPosition'],\n            ['textAlign']\n        ]\n    );\n    module.exports = {\n        getItemStyle: function (excludes, includes) {\n            var style = getItemStyle.call(this, excludes, includes);\n            var lineDash = this.getBorderLineDash();\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getBorderLineDash: function () {\n            var lineType = this.get('borderType');\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\n        }\n    };\n\n\n/***/ }),\n\n/***/ 740:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var getLineStyle = __webpack_require__(637)(\n        [\n            ['lineWidth', 'width'],\n            ['stroke', 'color'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getLineStyle: function (excludes) {\n            var style = getLineStyle.call(this, excludes);\n            var lineDash = this.getLineDash(style.lineWidth);\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getLineDash: function (lineWidth) {\n            if (lineWidth == null) {\n                lineWidth = 1;\n            }\n            var lineType = this.get('type');\n            var dotSize = Math.max(lineWidth, 2);\n            var dashSize = lineWidth * 4;\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize]);\n        }\n    };\n\n\n/***/ }),\n\n/***/ 741:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var textContain = __webpack_require__(621);\n    var graphicUtil = __webpack_require__(608);\n\n    var PATH_COLOR = ['textStyle', 'color'];\n\n    module.exports = {\n        /**\n         * Get color property or get color from option.textStyle.color\n         * @param {boolean} [noDefault]\n         * @return {string}\n         */\n        getTextColor: function (noDefault) {\n            var ecModel = this.ecModel;\n            return this.getShallow('color')\n                || (\n                    (!noDefault && ecModel) ? ecModel.get(PATH_COLOR) : null\n                );\n        },\n\n        /**\n         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n         * @return {string}\n         */\n        getFont: function () {\n            return graphicUtil.getFont({\n                fontStyle: this.getShallow('fontStyle'),\n                fontWeight: this.getShallow('fontWeight'),\n                fontSize: this.getShallow('fontSize'),\n                fontFamily: this.getShallow('fontFamily')\n            }, this.ecModel);\n        },\n\n        getTextRect: function (text) {\n            return textContain.getBoundingRect(\n                text,\n                this.getFont(),\n                this.getShallow('align'),\n                this.getShallow('verticalAlign') || this.getShallow('baseline'),\n                this.getShallow('padding'),\n                this.getShallow('rich'),\n                this.getShallow('truncateText')\n            );\n        }\n    };\n\n\n/***/ }),\n\n/***/ 742:\n/***/ (function(module, exports, __webpack_require__) {\n\n// Compatitable with 2.0\n\n\n    var zrUtil = __webpack_require__(606);\n    var compatStyle = __webpack_require__(743);\n\n    function get(opt, path) {\n        path = path.split(',');\n        var obj = opt;\n        for (var i = 0; i < path.length; i++) {\n            obj = obj && obj[path[i]];\n            if (obj == null) {\n                break;\n            }\n        }\n        return obj;\n    }\n\n    function set(opt, path, val, overwrite) {\n        path = path.split(',');\n        var obj = opt;\n        var key;\n        for (var i = 0; i < path.length - 1; i++) {\n            key = path[i];\n            if (obj[key] == null) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        }\n        if (overwrite || obj[path[i]] == null) {\n            obj[path[i]] = val;\n        }\n    }\n\n    function compatLayoutProperties(option) {\n        each(LAYOUT_PROPERTIES, function (prop) {\n            if (prop[0] in option && !(prop[1] in option)) {\n                option[prop[1]] = option[prop[0]];\n            }\n        });\n    }\n\n    var LAYOUT_PROPERTIES = [\n        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\n    ];\n\n    var COMPATITABLE_COMPONENTS = [\n        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\n    ];\n\n    var COMPATITABLE_SERIES = [\n        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\n        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\n        'pie', 'radar', 'sankey', 'scatter', 'treemap'\n    ];\n\n    var each = zrUtil.each;\n\n    module.exports = function (option) {\n        compatStyle(option);\n\n        var series = option.series;\n        each(zrUtil.isArray(series) ? series : [series], function (seriesOpt) {\n            if (!zrUtil.isObject(seriesOpt)) {\n                return;\n            }\n\n            var seriesType = seriesOpt.type;\n\n            if (seriesType === 'pie' || seriesType === 'gauge') {\n                if (seriesOpt.clockWise != null) {\n                    seriesOpt.clockwise = seriesOpt.clockWise;\n                }\n            }\n            if (seriesType === 'gauge') {\n                var pointerColor = get(seriesOpt, 'pointer.color');\n                pointerColor != null\n                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n            }\n\n            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n                    compatLayoutProperties(seriesOpt);\n                    break;\n                }\n            }\n        });\n\n        // dataRange has changed to visualMap\n        if (option.dataRange) {\n            option.visualMap = option.dataRange;\n        }\n\n        each(COMPATITABLE_COMPONENTS, function (componentName) {\n            var options = option[componentName];\n            if (options) {\n                if (!zrUtil.isArray(options)) {\n                    options = [options];\n                }\n                each(options, function (option) {\n                    compatLayoutProperties(option);\n                });\n            }\n        });\n    };\n\n\n/***/ }),\n\n/***/ 743:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var modelUtil = __webpack_require__(609);\n\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var POSSIBLE_STYLES = [\n        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\n        'chordStyle', 'label', 'labelLine'\n    ];\n\n    function compatItemStyle(opt) {\n        var itemStyleOpt = opt && opt.itemStyle;\n        if (!itemStyleOpt) {\n            return;\n        }\n        for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n            var styleName = POSSIBLE_STYLES[i];\n            var normalItemStyleOpt = itemStyleOpt.normal;\n            var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n            if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n                opt[styleName] = opt[styleName] || {};\n                if (!opt[styleName].normal) {\n                    opt[styleName].normal = normalItemStyleOpt[styleName];\n                }\n                else {\n                    zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n                }\n                normalItemStyleOpt[styleName] = null;\n            }\n            if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n                opt[styleName] = opt[styleName] || {};\n                if (!opt[styleName].emphasis) {\n                    opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n                }\n                else {\n                    zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n                }\n                emphasisItemStyleOpt[styleName] = null;\n            }\n        }\n    }\n\n    function compatTextStyle(opt, propName) {\n        var labelOptSingle = isObject(opt) && opt[propName];\n        var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n        if (textStyle) {\n            for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n                var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n                if (textStyle.hasOwnProperty(propName)) {\n                    labelOptSingle[propName] = textStyle[propName];\n                }\n            }\n        }\n    }\n\n    function compatLabelTextStyle(labelOpt) {\n        if (isObject(labelOpt)) {\n            compatTextStyle(labelOpt, 'normal');\n            compatTextStyle(labelOpt, 'emphasis');\n        }\n    }\n\n    function processSeries(seriesOpt) {\n        if (!isObject(seriesOpt)) {\n            return;\n        }\n\n        compatItemStyle(seriesOpt);\n        compatLabelTextStyle(seriesOpt.label);\n        // treemap\n        compatLabelTextStyle(seriesOpt.upperLabel);\n        // graph\n        compatLabelTextStyle(seriesOpt.edgeLabel);\n\n        var markPoint = seriesOpt.markPoint;\n        compatItemStyle(markPoint);\n        compatLabelTextStyle(markPoint && markPoint.label);\n\n        var markLine = seriesOpt.markLine;\n        compatItemStyle(seriesOpt.markLine);\n        compatLabelTextStyle(markLine && markLine.label);\n\n        var markArea = seriesOpt.markArea;\n        compatLabelTextStyle(markArea && markArea.label);\n\n        // For gauge\n        compatTextStyle(seriesOpt, 'axisLabel');\n        compatTextStyle(seriesOpt, 'title');\n        compatTextStyle(seriesOpt, 'detail');\n\n        var data = seriesOpt.data;\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                compatItemStyle(data[i]);\n                compatLabelTextStyle(data[i] && data[i].label);\n            }\n            // mark point data\n            var markPoint = seriesOpt.markPoint;\n            if (markPoint && markPoint.data) {\n                var mpData = markPoint.data;\n                for (var i = 0; i < mpData.length; i++) {\n                    compatItemStyle(mpData[i]);\n                    compatLabelTextStyle(mpData[i] && mpData[i].label);\n                }\n            }\n            // mark line data\n            var markLine = seriesOpt.markLine;\n            if (markLine && markLine.data) {\n                var mlData = markLine.data;\n                for (var i = 0; i < mlData.length; i++) {\n                    if (zrUtil.isArray(mlData[i])) {\n                        compatItemStyle(mlData[i][0]);\n                        compatLabelTextStyle(mlData[i][0] && mlData[i][0].label);\n                        compatItemStyle(mlData[i][1]);\n                        compatLabelTextStyle(mlData[i][1] && mlData[i][1].label);\n                    }\n                    else {\n                        compatItemStyle(mlData[i]);\n                        compatLabelTextStyle(mlData[i] && mlData[i].label);\n                    }\n                }\n            }\n        }\n    }\n\n    function toArr(o) {\n        return zrUtil.isArray(o) ? o : o ? [o] : [];\n    }\n\n    function toObj(o) {\n        return (zrUtil.isArray(o) ? o[0] : o) || {};\n    }\n\n    module.exports = function (option) {\n        each(toArr(option.series), function (seriesOpt) {\n            isObject(seriesOpt) && processSeries(seriesOpt);\n        });\n\n        each(\n            ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'],\n            function (axisName) {\n                each(toArr(option[axisName]), function (axisOpt) {\n                    if (axisOpt) {\n                        compatTextStyle(axisOpt, 'axisLabel');\n                        compatTextStyle(axisOpt.axisPointer, 'label');\n                    }\n                });\n            }\n        );\n\n        each(toArr(option.parallel), function (parallelOpt) {\n            var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n            compatTextStyle(parallelAxisDefault, 'axisLabel');\n            compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n        });\n\n        each(toArr(option.calendar), function (calendarOpt) {\n            compatTextStyle(calendarOpt, 'dayLabel');\n            compatTextStyle(calendarOpt, 'monthLabel');\n            compatTextStyle(calendarOpt, 'yearLabel');\n        });\n\n        // radar.name.textStyle\n        each(toArr(option.radar), function (radarOpt) {\n            compatTextStyle(radarOpt, 'name');\n        });\n\n        each(toArr(option.geo), function (geoOpt) {\n            isObject(geoOpt) && compatLabelTextStyle(geoOpt.label);\n        });\n\n        compatLabelTextStyle(toObj(option.timeline).label);\n        compatTextStyle(toObj(option.axisPointer), 'label');\n        compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n    };\n\n\n/***/ }),\n\n/***/ 744:\n/***/ (function(module, exports) {\n\n\n    var samplers = {\n        average: function (frame) {\n            var sum = 0;\n            var count = 0;\n            for (var i = 0; i < frame.length; i++) {\n                if (!isNaN(frame[i])) {\n                    sum += frame[i];\n                    count++;\n                }\n            }\n            // Return NaN if count is 0\n            return count === 0 ? NaN : sum / count;\n        },\n        sum: function (frame) {\n            var sum = 0;\n            for (var i = 0; i < frame.length; i++) {\n                // Ignore NaN\n                sum += frame[i] || 0;\n            }\n            return sum;\n        },\n        max: function (frame) {\n            var max = -Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] > max && (max = frame[i]);\n            }\n            return max;\n        },\n        min: function (frame) {\n            var min = Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] < min && (min = frame[i]);\n            }\n            return min;\n        },\n        // TODO\n        // Median\n        nearest: function (frame) {\n            return frame[0];\n        }\n    };\n\n    var indexSampler = function (frame, value) {\n        return Math.round(frame.length / 2);\n    };\n    module.exports = function (seriesType, ecModel, api) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var sampling = seriesModel.get('sampling');\n            var coordSys = seriesModel.coordinateSystem;\n            // Only cartesian2d support down sampling\n            if (coordSys.type === 'cartesian2d' && sampling) {\n                var baseAxis = coordSys.getBaseAxis();\n                var valueAxis = coordSys.getOtherAxis(baseAxis);\n                var extent = baseAxis.getExtent();\n                // Coordinste system has been resized\n                var size = extent[1] - extent[0];\n                var rate = Math.round(data.count() / size);\n                if (rate > 1) {\n                    var sampler;\n                    if (typeof sampling === 'string') {\n                        sampler = samplers[sampling];\n                    }\n                    else if (typeof sampling === 'function') {\n                        sampler = sampling;\n                    }\n                    if (sampler) {\n                        data = data.downSample(\n                            valueAxis.dim, 1 / rate, sampler, indexSampler\n                        );\n                        seriesModel.setData(data);\n                    }\n                }\n            }\n        }, this);\n    };\n\n\n/***/ }),\n\n/***/ 745:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n\n\n    var zrUtil = __webpack_require__(606);\n    var Scale = __webpack_require__(632);\n    var numberUtil = __webpack_require__(610);\n\n    // Use some method of IntervalScale\n    var IntervalScale = __webpack_require__(638);\n\n    var scaleProto = Scale.prototype;\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n    var mathPow = Math.pow;\n\n    var mathLog = Math.log;\n\n    var LogScale = Scale.extend({\n\n        type: 'log',\n\n        base: 10,\n\n        $constructor: function () {\n            Scale.apply(this, arguments);\n            this._originalScale = new IntervalScale();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            var originalScale = this._originalScale;\n            var extent = this._extent;\n            var originalExtent = originalScale.getExtent();\n\n            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n                var powVal = numberUtil.round(mathPow(this.base, val));\n\n                // Fix #4158\n                powVal = (val === extent[0] && originalScale.__fixMin)\n                    ? fixRoundingError(powVal, originalExtent[0])\n                    : powVal;\n                powVal = (val === extent[1] && originalScale.__fixMax)\n                    ? fixRoundingError(powVal, originalExtent[1])\n                    : powVal;\n\n                return powVal;\n            }, this);\n        },\n\n        /**\n         * @param {number} val\n         * @return {string}\n         */\n        getLabel: intervalScaleProto.getLabel,\n\n        /**\n         * @param  {number} val\n         * @return {number}\n         */\n        scale: function (val) {\n            val = scaleProto.scale.call(this, val);\n            return mathPow(this.base, val);\n        },\n\n        /**\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var base = this.base;\n            start = mathLog(start) / mathLog(base);\n            end = mathLog(end) / mathLog(base);\n            intervalScaleProto.setExtent.call(this, start, end);\n        },\n\n        /**\n         * @return {number} end\n         */\n        getExtent: function () {\n            var base = this.base;\n            var extent = scaleProto.getExtent.call(this);\n            extent[0] = mathPow(base, extent[0]);\n            extent[1] = mathPow(base, extent[1]);\n\n            // Fix #4158\n            var originalScale = this._originalScale;\n            var originalExtent = originalScale.getExtent();\n            originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n            originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n\n            return extent;\n        },\n\n        /**\n         * @param  {Array.<number>} extent\n         */\n        unionExtent: function (extent) {\n            this._originalScale.unionExtent(extent);\n\n            var base = this.base;\n            extent[0] = mathLog(extent[0]) / mathLog(base);\n            extent[1] = mathLog(extent[1]) / mathLog(base);\n            scaleProto.unionExtent.call(this, extent);\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, true, function (val) {\n                return val > 0;\n            }));\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         * @param  {number} [approxTickNum = 10] Given approx tick number\n         */\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (span === Infinity || span <= 0) {\n                return;\n            }\n\n            var interval = numberUtil.quantity(span);\n            var err = approxTickNum / span * interval;\n\n            // Filter ticks to get closer to the desired count.\n            if (err <= 0.5) {\n                interval *= 10;\n            }\n\n            // Interval should be integer\n            while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n                interval *= 10;\n            }\n\n            var niceExtent = [\n                numberUtil.round(mathCeil(extent[0] / interval) * interval),\n                numberUtil.round(mathFloor(extent[1] / interval) * interval)\n            ];\n\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @override\n         */\n        niceExtent: function (opt) {\n            intervalScaleProto.niceExtent.call(this, opt);\n\n            var originalScale = this._originalScale;\n            originalScale.__fixMin = opt.fixMin;\n            originalScale.__fixMax = opt.fixMax;\n        }\n\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        LogScale.prototype[methodName] = function (val) {\n            val = mathLog(val) / mathLog(this.base);\n            return scaleProto[methodName].call(this, val);\n        };\n    });\n\n    LogScale.create = function () {\n        return new LogScale();\n    };\n\n    function fixRoundingError(val, originalVal) {\n        return roundingErrorFix(val, getPrecisionSafe(originalVal));\n    }\n\n    module.exports = LogScale;\n\n\n/***/ }),\n\n/***/ 746:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n\n// FIXME only one data\n\n\n    var zrUtil = __webpack_require__(606);\n    var Scale = __webpack_require__(632);\n\n    var scaleProto = Scale.prototype;\n\n    var OrdinalScale = Scale.extend({\n\n        type: 'ordinal',\n\n        init: function (data, extent) {\n            this._data = data;\n            this._extent = extent || [0, data.length - 1];\n        },\n\n        parse: function (val) {\n            return typeof val === 'string'\n                ? zrUtil.indexOf(this._data, val)\n                // val might be float.\n                : Math.round(val);\n        },\n\n        contain: function (rank) {\n            rank = this.parse(rank);\n            return scaleProto.contain.call(this, rank)\n                && this._data[rank] != null;\n        },\n\n        /**\n         * Normalize given rank or name to linear [0, 1]\n         * @param {number|string} [val]\n         * @return {number}\n         */\n        normalize: function (val) {\n            return scaleProto.normalize.call(this, this.parse(val));\n        },\n\n        scale: function (val) {\n            return Math.round(scaleProto.scale.call(this, val));\n        },\n\n        /**\n         * @return {Array}\n         */\n        getTicks: function () {\n            var ticks = [];\n            var extent = this._extent;\n            var rank = extent[0];\n\n            while (rank <= extent[1]) {\n                ticks.push(rank);\n                rank++;\n            }\n\n            return ticks;\n        },\n\n        /**\n         * Get item on rank n\n         * @param {number} n\n         * @return {string}\n         */\n        getLabel: function (n) {\n            return this._data[n];\n        },\n\n        /**\n         * @return {number}\n         */\n        count: function () {\n            return this._extent[1] - this._extent[0] + 1;\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, false));\n        },\n\n        niceTicks: zrUtil.noop,\n        niceExtent: zrUtil.noop\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    OrdinalScale.create = function () {\n        return new OrdinalScale();\n    };\n\n    module.exports = OrdinalScale;\n\n\n/***/ }),\n\n/***/ 747:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Interval scale\n * @module echarts/coord/scale/Time\n */\n\n\n\n    // [About UTC and local time zone]:\n    // In most cases, `number.parseDate` will treat input data string as local time\n    // (except time zone is specified in time string). And `format.formateTime` returns\n    // local time by default. option.useUTC is false by default. This design have\n    // concidered these common case:\n    // (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n    // in local time by default.\n    // (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n    // as its original time, without any time difference.\n\n    var zrUtil = __webpack_require__(606);\n    var numberUtil = __webpack_require__(610);\n    var formatUtil = __webpack_require__(613);\n    var scaleHelper = __webpack_require__(665);\n\n    var IntervalScale = __webpack_require__(638);\n\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var mathCeil = Math.ceil;\n    var mathFloor = Math.floor;\n    var ONE_SECOND = 1000;\n    var ONE_MINUTE = ONE_SECOND * 60;\n    var ONE_HOUR = ONE_MINUTE * 60;\n    var ONE_DAY = ONE_HOUR * 24;\n\n    // FIXME 公用？\n    var bisect = function (a, x, lo, hi) {\n        while (lo < hi) {\n            var mid = lo + hi >>> 1;\n            if (a[mid][2] < x) {\n                lo = mid + 1;\n            }\n            else {\n                hi  = mid;\n            }\n        }\n        return lo;\n    };\n\n    /**\n     * @alias module:echarts/coord/scale/Time\n     * @constructor\n     */\n    var TimeScale = IntervalScale.extend({\n        type: 'time',\n\n        /**\n         * @override\n         */\n        getLabel: function (val) {\n            var stepLvl = this._stepLvl;\n\n            var date = new Date(val);\n\n            return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n        },\n\n        /**\n         * @override\n         */\n        niceExtent: function (opt) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                // Expand extent\n                extent[0] -= ONE_DAY;\n                extent[1] += ONE_DAY;\n            }\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (extent[1] === -Infinity && extent[0] === Infinity) {\n                var d = new Date();\n                extent[1] = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                extent[0] = extent[1] - ONE_DAY;\n            }\n\n            this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!opt.fixMin) {\n                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!opt.fixMax) {\n                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n            }\n        },\n\n        /**\n         * @override\n         */\n        niceTicks: function (approxTickNum, minInterval, maxInterval) {\n            var timezoneOffset = this.getSetting('useUTC')\n                ? 0 : numberUtil.getTimezoneOffset() * 60 * 1000;\n            approxTickNum = approxTickNum || 10;\n\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            var approxInterval = span / approxTickNum;\n\n            if (minInterval != null && approxInterval < minInterval) {\n                approxInterval = minInterval;\n            }\n            if (maxInterval != null && approxInterval > maxInterval) {\n                approxInterval = maxInterval;\n            }\n\n            var scaleLevelsLen = scaleLevels.length;\n            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n\n            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n            var interval = level[2];\n            // Same with interval scale if span is much larger than 1 year\n            if (level[0] === 'year') {\n                var yearSpan = span / interval;\n\n                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n                // var niceYearSpan = numberUtil.nice(yearSpan, false);\n                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n\n                interval *= yearStep;\n            }\n\n            var niceExtent = [\n                Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset),\n                Math.round(mathFloor((extent[1] - timezoneOffset)/ interval) * interval + timezoneOffset)\n            ];\n\n            scaleHelper.fixExtent(niceExtent, extent);\n\n            this._stepLvl = level;\n            // Interval will be used in getTicks\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        parse: function (val) {\n            // val might be float.\n            return +numberUtil.parseDate(val);\n        }\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        TimeScale.prototype[methodName] = function (val) {\n            return intervalScaleProto[methodName].call(this, this.parse(val));\n        };\n    });\n\n    // Steps from d3\n    var scaleLevels = [\n        // Format       step    interval\n        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\n        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\n        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\n        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\n        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\n        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\n        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\n        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\n        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\n        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\n        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\n        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\n        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\n        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\n        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\n        ['week',        7,      ONE_DAY * 7],        // 7d\n        ['month',       1,      ONE_DAY * 31],       // 1M\n        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\n        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\n        ['year',        1,      ONE_DAY * 380]       // 1Y\n    ];\n\n    /**\n     * @param {module:echarts/model/Model}\n     * @return {module:echarts/scale/Time}\n     */\n    TimeScale.create = function (model) {\n        return new TimeScale({useUTC: model.ecModel.get('useUTC')});\n    };\n\n    module.exports = TimeScale;\n\n\n/***/ }),\n\n/***/ 748:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Group = __webpack_require__(634);\n    var componentUtil = __webpack_require__(642);\n    var clazzUtil = __webpack_require__(616);\n\n    var Component = function () {\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewComponent');\n    };\n\n    Component.prototype = {\n\n        constructor: Component,\n\n        init: function (ecModel, api) {},\n\n        render: function (componentModel, ecModel, api, payload) {},\n\n        dispose: function () {}\n\n    };\n\n    var componentProto = Component.prototype;\n    componentProto.updateView\n        = componentProto.updateLayout\n        = componentProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            // Do nothing;\n        };\n    // Enable Component.extend.\n    clazzUtil.enableClassExtend(Component);\n\n    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\n\n    module.exports = Component;\n\n\n/***/ }),\n\n/***/ 749:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var Gradient = __webpack_require__(645);\n    module.exports = function (ecModel) {\n        function encodeColor(seriesModel) {\n            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n            var data = seriesModel.getData();\n            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\n\n            // FIXME Set color function or use the platte color\n            data.setVisual('color', color);\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof color === 'function' && !(color instanceof Gradient)) {\n                    data.each(function (idx) {\n                        data.setItemVisual(\n                            idx, 'color', color(seriesModel.getDataParams(idx))\n                        );\n                    });\n                }\n\n                // itemStyle in each data item\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var color = itemModel.get(colorAccessPath, true);\n                    if (color != null) {\n                        data.setItemVisual(idx, 'color', color);\n                    }\n                });\n            }\n        }\n        ecModel.eachRawSeries(encodeColor);\n    };\n\n\n/***/ }),\n\n/***/ 751:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\n\n\n    var util = __webpack_require__(606);\n    var Draggable = __webpack_require__(784);\n\n    var Eventful = __webpack_require__(626);\n\n    var SILENT = 'silent';\n\n    function makeEventPacket(eveType, targetInfo, event) {\n        return {\n            type: eveType,\n            event: event,\n            // target can only be an element that is not silent.\n            target: targetInfo.target,\n            // topTarget can be a silent element.\n            topTarget: targetInfo.topTarget,\n            cancelBubble: false,\n            offsetX: event.zrX,\n            offsetY: event.zrY,\n            gestureEvent: event.gestureEvent,\n            pinchX: event.pinchX,\n            pinchY: event.pinchY,\n            pinchScale: event.pinchScale,\n            wheelDelta: event.zrDelta,\n            zrByTouch: event.zrByTouch\n        };\n    }\n\n    function EmptyProxy () {}\n    EmptyProxy.prototype.dispose = function () {};\n\n    var handlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n    /**\n     * @alias module:zrender/Handler\n     * @constructor\n     * @extends module:zrender/mixin/Eventful\n     * @param {module:zrender/Storage} storage Storage instance.\n     * @param {module:zrender/Painter} painter Painter instance.\n     * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n     * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n     */\n    var Handler = function(storage, painter, proxy, painterRoot) {\n        Eventful.call(this);\n\n        this.storage = storage;\n\n        this.painter = painter;\n\n        this.painterRoot = painterRoot;\n\n        proxy = proxy || new EmptyProxy();\n\n        /**\n         * Proxy of event. can be Dom, WebGLSurface, etc.\n         */\n        this.proxy = proxy;\n\n        // Attach handler\n        proxy.handler = this;\n\n        /**\n         * {target, topTarget, x, y}\n         * @private\n         * @type {Object}\n         */\n        this._hovered = {};\n\n        /**\n         * @private\n         * @type {Date}\n         */\n        this._lastTouchMoment;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastX;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastY;\n\n\n        Draggable.call(this);\n\n        util.each(handlerNames, function (name) {\n            proxy.on && proxy.on(name, this[name], this);\n        }, this);\n    };\n\n    Handler.prototype = {\n\n        constructor: Handler,\n\n        mousemove: function (event) {\n            var x = event.zrX;\n            var y = event.zrY;\n\n            var lastHovered = this._hovered;\n            var lastHoveredTarget = lastHovered.target;\n\n            // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n            // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n            // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n            // See #6198.\n            if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n                lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n                lastHoveredTarget = lastHovered.target;\n            }\n\n            var hovered = this._hovered = this.findHover(x, y);\n            var hoveredTarget = hovered.target;\n\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default');\n\n            // Mouse out on previous hovered element\n            if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(lastHovered, 'mouseout', event);\n            }\n\n            // Mouse moving on one element\n            this.dispatchToElement(hovered, 'mousemove', event);\n\n            // Mouse over on a new element\n            if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(hovered, 'mouseover', event);\n            }\n        },\n\n        mouseout: function (event) {\n            this.dispatchToElement(this._hovered, 'mouseout', event);\n\n            // There might be some doms created by upper layer application\n            // at the same level of painter.getViewportRoot() (e.g., tooltip\n            // dom created by echarts), where 'globalout' event should not\n            // be triggered when mouse enters these doms. (But 'mouseout'\n            // should be triggered at the original hovered element as usual).\n            var element = event.toElement || event.relatedTarget;\n            var innerDom;\n            do {\n                element = element && element.parentNode;\n            }\n            while (element && element.nodeType != 9 && !(\n                innerDom = element === this.painterRoot\n            ));\n\n            !innerDom && this.trigger('globalout', {event: event});\n        },\n\n        /**\n         * Resize\n         */\n        resize: function (event) {\n            this._hovered = {};\n        },\n\n        /**\n         * Dispatch event\n         * @param {string} eventName\n         * @param {event=} eventArgs\n         */\n        dispatch: function (eventName, eventArgs) {\n            var handler = this[eventName];\n            handler && handler.call(this, eventArgs);\n        },\n\n        /**\n         * Dispose\n         */\n        dispose: function () {\n\n            this.proxy.dispose();\n\n            this.storage =\n            this.proxy =\n            this.painter = null;\n        },\n\n        /**\n         * 设置默认的cursor style\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(cursorStyle);\n        },\n\n        /**\n         * 事件分发代理\n         *\n         * @private\n         * @param {Object} targetInfo {target, topTarget} 目标图形元素\n         * @param {string} eventName 事件名称\n         * @param {Object} event 事件对象\n         */\n        dispatchToElement: function (targetInfo, eventName, event) {\n            targetInfo = targetInfo || {};\n            var el = targetInfo.target;\n            if (el && el.silent) {\n                return;\n            }\n            var eventHandler = 'on' + eventName;\n            var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n            while (el) {\n                el[eventHandler]\n                    && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n\n                el.trigger(eventName, eventPacket);\n\n                el = el.parent;\n\n                if (eventPacket.cancelBubble) {\n                    break;\n                }\n            }\n\n            if (!eventPacket.cancelBubble) {\n                // 冒泡到顶级 zrender 对象\n                this.trigger(eventName, eventPacket);\n                // 分发事件到用户自定义层\n                // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n                this.painter && this.painter.eachOtherLayer(function (layer) {\n                    if (typeof(layer[eventHandler]) == 'function') {\n                        layer[eventHandler].call(layer, eventPacket);\n                    }\n                    if (layer.trigger) {\n                        layer.trigger(eventName, eventPacket);\n                    }\n                });\n            }\n        },\n\n        /**\n         * @private\n         * @param {number} x\n         * @param {number} y\n         * @param {module:zrender/graphic/Displayable} exclude\n         * @return {model:zrender/Element}\n         * @method\n         */\n        findHover: function(x, y, exclude) {\n            var list = this.storage.getDisplayList();\n            var out = {x: x, y: y};\n\n            for (var i = list.length - 1; i >= 0 ; i--) {\n                var hoverCheckResult;\n                if (list[i] !== exclude\n                    // getDisplayList may include ignored item in VML mode\n                    && !list[i].ignore\n                    && (hoverCheckResult = isHover(list[i], x, y))\n                ) {\n                    !out.topTarget && (out.topTarget = list[i]);\n                    if (hoverCheckResult !== SILENT) {\n                        out.target = list[i];\n                        break;\n                    }\n                }\n            }\n\n            return out;\n        }\n    };\n\n    // Common handlers\n    util.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        Handler.prototype[name] = function (event) {\n            // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n            var hovered = this.findHover(event.zrX, event.zrY);\n            var hoveredTarget = hovered.target;\n\n            if (name === 'mousedown') {\n                this._downel = hoveredTarget;\n                // In case click triggered before mouseup\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'mosueup') {\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'click') {\n                if (this._downel !== this._upel) {\n                    return;\n                }\n            }\n\n            this.dispatchToElement(hovered, name, event);\n        };\n    });\n\n    function isHover(displayable, x, y) {\n        if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n            var el = displayable;\n            var isSilent;\n            while (el) {\n                // If clipped by ancestor.\n                // FIXME: If clipPath has neither stroke nor fill,\n                // el.clipPath.contain(x, y) will always return false.\n                if (el.clipPath && !el.clipPath.contain(x, y))  {\n                    return false;\n                }\n                if (el.silent) {\n                    isSilent = true;\n                }\n                el = el.parent;\n            }\n            return isSilent ? SILENT : true;\n        }\n\n        return false;\n    }\n\n    util.mixin(Handler, Eventful);\n    util.mixin(Handler, Draggable);\n\n    module.exports = Handler;\n\n\n\n/***/ }),\n\n/***/ 752:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var util = __webpack_require__(606);\n    var config = __webpack_require__(633);\n    var Style = __webpack_require__(676);\n    var Pattern = __webpack_require__(675);\n\n    function returnFalse() {\n        return false;\n    }\n\n    /**\n     * 创建dom\n     *\n     * @inner\n     * @param {string} id dom id 待用\n     * @param {string} type dom type，such as canvas, div etc.\n     * @param {Painter} painter painter instance\n     * @param {number} number\n     */\n    function createDom(id, type, painter, dpr) {\n        var newDom = document.createElement(type);\n        var width = painter.getWidth();\n        var height = painter.getHeight();\n\n        var newDomStyle = newDom.style;\n        // 没append呢，请原谅我这样写，清晰~\n        newDomStyle.position = 'absolute';\n        newDomStyle.left = 0;\n        newDomStyle.top = 0;\n        newDomStyle.width = width + 'px';\n        newDomStyle.height = height + 'px';\n        newDom.width = width * dpr;\n        newDom.height = height * dpr;\n\n        // id不作为索引用，避免可能造成的重名，定义为私有属性\n        newDom.setAttribute('data-zr-dom-id', id);\n        return newDom;\n    }\n\n    /**\n     * @alias module:zrender/Layer\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @param {string} id\n     * @param {module:zrender/Painter} painter\n     * @param {number} [dpr]\n     */\n    var Layer = function(id, painter, dpr) {\n        var dom;\n        dpr = dpr || config.devicePixelRatio;\n        if (typeof id === 'string') {\n            dom = createDom(id, 'canvas', painter, dpr);\n        }\n        // Not using isDom because in node it will return false\n        else if (util.isObject(id)) {\n            dom = id;\n            id = dom.id;\n        }\n        this.id = id;\n        this.dom = dom;\n\n        var domStyle = dom.style;\n        if (domStyle) { // Not in node\n            dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n            domStyle['-webkit-user-select'] = 'none';\n            domStyle['user-select'] = 'none';\n            domStyle['-webkit-touch-callout'] = 'none';\n            domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n            domStyle['padding'] = 0;\n            domStyle['margin'] = 0;\n            domStyle['border-width'] = 0;\n        }\n\n        this.domBack = null;\n        this.ctxBack = null;\n\n        this.painter = painter;\n\n        this.config = null;\n\n        // Configs\n        /**\n         * 每次清空画布的颜色\n         * @type {string}\n         * @default 0\n         */\n        this.clearColor = 0;\n        /**\n         * 是否开启动态模糊\n         * @type {boolean}\n         * @default false\n         */\n        this.motionBlur = false;\n        /**\n         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         * @type {number}\n         * @default 0.7\n         */\n        this.lastFrameAlpha = 0.7;\n\n        /**\n         * Layer dpr\n         * @type {number}\n         */\n        this.dpr = dpr;\n    };\n\n    Layer.prototype = {\n\n        constructor: Layer,\n\n        elCount: 0,\n\n        __dirty: true,\n\n        initContext: function () {\n            this.ctx = this.dom.getContext('2d');\n            this.ctx.__currentValues = {};\n            this.ctx.dpr = this.dpr;\n        },\n\n        createBackBuffer: function () {\n            var dpr = this.dpr;\n\n            this.domBack = createDom('back-' + this.id, 'canvas', this.painter, dpr);\n            this.ctxBack = this.domBack.getContext('2d');\n            this.ctxBack.__currentValues = {};\n\n            if (dpr != 1) {\n                this.ctxBack.scale(dpr, dpr);\n            }\n        },\n\n        /**\n         * @param  {number} width\n         * @param  {number} height\n         */\n        resize: function (width, height) {\n            var dpr = this.dpr;\n\n            var dom = this.dom;\n            var domStyle = dom.style;\n            var domBack = this.domBack;\n\n            domStyle.width = width + 'px';\n            domStyle.height = height + 'px';\n\n            dom.width = width * dpr;\n            dom.height = height * dpr;\n\n            if (domBack) {\n                domBack.width = width * dpr;\n                domBack.height = height * dpr;\n\n                if (dpr != 1) {\n                    this.ctxBack.scale(dpr, dpr);\n                }\n            }\n        },\n\n        /**\n         * 清空该层画布\n         * @param {boolean} clearAll Clear all with out motion blur\n         */\n        clear: function (clearAll) {\n            var dom = this.dom;\n            var ctx = this.ctx;\n            var width = dom.width;\n            var height = dom.height;\n\n            var clearColor = this.clearColor;\n            var haveMotionBLur = this.motionBlur && !clearAll;\n            var lastFrameAlpha = this.lastFrameAlpha;\n\n            var dpr = this.dpr;\n\n            if (haveMotionBLur) {\n                if (!this.domBack) {\n                    this.createBackBuffer();\n                }\n\n                this.ctxBack.globalCompositeOperation = 'copy';\n                this.ctxBack.drawImage(\n                    dom, 0, 0,\n                    width / dpr,\n                    height / dpr\n                );\n            }\n\n            ctx.clearRect(0, 0, width, height);\n            if (clearColor) {\n                var clearColorGradientOrPattern;\n                // Gradient\n                if (clearColor.colorStops) {\n                    // Cache canvas gradient\n                    clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n                        x: 0,\n                        y: 0,\n                        width: width,\n                        height: height\n                    });\n\n                    clearColor.__canvasGradient = clearColorGradientOrPattern;\n                }\n                // Pattern\n                else if (clearColor.image) {\n                    clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n                }\n                ctx.save();\n                ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n                ctx.fillRect(0, 0, width, height);\n                ctx.restore();\n            }\n\n            if (haveMotionBLur) {\n                var domBack = this.domBack;\n                ctx.save();\n                ctx.globalAlpha = lastFrameAlpha;\n                ctx.drawImage(domBack, 0, 0, width, height);\n                ctx.restore();\n            }\n        }\n    };\n\n    module.exports = Layer;\n\n\n/***/ }),\n\n/***/ 753:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n \n\n    var config = __webpack_require__(633);\n    var util = __webpack_require__(606);\n    var log = __webpack_require__(673);\n    var BoundingRect = __webpack_require__(617);\n    var timsort = __webpack_require__(643);\n\n    var Layer = __webpack_require__(752);\n\n    var requestAnimationFrame = __webpack_require__(669);\n\n    // PENDIGN\n    // Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n    //\n    // Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\n    var MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\n    function parseInt10(val) {\n        return parseInt(val, 10);\n    }\n\n    function isLayerValid(layer) {\n        if (!layer) {\n            return false;\n        }\n\n        if (layer.__builtin__) {\n            return true;\n        }\n\n        if (typeof(layer.resize) !== 'function'\n            || typeof(layer.refresh) !== 'function'\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function preProcessLayer(layer) {\n        layer.__unusedCount++;\n    }\n\n    function postProcessLayer(layer) {\n        if (layer.__unusedCount == 1) {\n            layer.clear();\n        }\n    }\n\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var viewRect = new BoundingRect(0, 0, 0, 0);\n    function isDisplayableCulled(el, width, height) {\n        tmpRect.copy(el.getBoundingRect());\n        if (el.transform) {\n            tmpRect.applyTransform(el.transform);\n        }\n        viewRect.width = width;\n        viewRect.height = height;\n        return !tmpRect.intersect(viewRect);\n    }\n\n    function isClipPathChanged(clipPaths, prevClipPaths) {\n        if (clipPaths == prevClipPaths) { // Can both be null or undefined\n            return false;\n        }\n\n        if (!clipPaths || !prevClipPaths || (clipPaths.length !== prevClipPaths.length)) {\n            return true;\n        }\n        for (var i = 0; i < clipPaths.length; i++) {\n            if (clipPaths[i] !== prevClipPaths[i]) {\n                return true;\n            }\n        }\n    }\n\n    function doClip(clipPaths, ctx) {\n        for (var i = 0; i < clipPaths.length; i++) {\n            var clipPath = clipPaths[i];\n\n            clipPath.setTransform(ctx);\n            ctx.beginPath();\n            clipPath.buildPath(ctx, clipPath.shape);\n            ctx.clip();\n            // Transform back\n            clipPath.restoreTransform(ctx);\n        }\n    }\n\n    function createRoot(width, height) {\n        var domRoot = document.createElement('div');\n\n        // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n        domRoot.style.cssText = [\n            'position:relative',\n            'overflow:hidden',\n            'width:' + width + 'px',\n            'height:' + height + 'px',\n            'padding:0',\n            'margin:0',\n            'border-width:0'\n        ].join(';') + ';';\n\n        return domRoot;\n    }\n\n    /**\n     * @alias module:zrender/Painter\n     * @constructor\n     * @param {HTMLElement} root 绘图容器\n     * @param {module:zrender/Storage} storage\n     * @param {Object} opts\n     */\n    var Painter = function (root, storage, opts) {\n        // In node environment using node-canvas\n        var singleCanvas = !root.nodeName // In node ?\n            || root.nodeName.toUpperCase() === 'CANVAS';\n\n        this._opts = opts = util.extend({}, opts || {});\n\n        /**\n         * @type {number}\n         */\n        this.dpr = opts.devicePixelRatio || config.devicePixelRatio;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._singleCanvas = singleCanvas;\n        /**\n         * 绘图容器\n         * @type {HTMLElement}\n         */\n        this.root = root;\n\n        var rootStyle = root.style;\n\n        if (rootStyle) {\n            rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n            rootStyle['-webkit-user-select'] =\n            rootStyle['user-select'] =\n            rootStyle['-webkit-touch-callout'] = 'none';\n\n            root.innerHTML = '';\n        }\n\n        /**\n         * @type {module:zrender/Storage}\n         */\n        this.storage = storage;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        var zlevelList = this._zlevelList = [];\n\n        /**\n         * @type {Object.<string, module:zrender/Layer>}\n         * @private\n         */\n        var layers = this._layers = {};\n\n        /**\n         * @type {Object.<string, Object>}\n         * @type {private}\n         */\n        this._layerConfig = {};\n\n        if (!singleCanvas) {\n            this._width = this._getSize(0);\n            this._height = this._getSize(1);\n\n            var domRoot = this._domRoot = createRoot(\n                this._width, this._height\n            );\n            root.appendChild(domRoot);\n        }\n        else {\n            if (opts.width != null) {\n                root.width = opts.width;\n            }\n            if (opts.height != null) {\n                root.height = opts.height;\n            }\n            // Use canvas width and height directly\n            var width = root.width;\n            var height = root.height;\n            this._width = width;\n            this._height = height;\n\n            // Create layer if only one given canvas\n            // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n            var mainLayer = new Layer(root, this, 1);\n            mainLayer.initContext();\n            // FIXME Use canvas width and height\n            // mainLayer.resize(width, height);\n            layers[0] = mainLayer;\n            zlevelList.push(0);\n\n            this._domRoot = root;\n        }\n\n        // Layers for progressive rendering\n        this._progressiveLayers = [];\n\n        /**\n         * @type {module:zrender/Layer}\n         * @private\n         */\n        this._hoverlayer;\n\n        this._hoverElements = [];\n    };\n\n    Painter.prototype = {\n\n        constructor: Painter,\n\n        /**\n         * If painter use a single canvas\n         * @return {boolean}\n         */\n        isSingleCanvas: function () {\n            return this._singleCanvas;\n        },\n        /**\n         * @return {HTMLDivElement}\n         */\n        getViewportRoot: function () {\n            return this._domRoot;\n        },\n\n        getViewportRootOffset: function () {\n            var viewportRoot = this.getViewportRoot();\n            if (viewportRoot) {\n                return {\n                    offsetLeft: viewportRoot.offsetLeft || 0,\n                    offsetTop: viewportRoot.offsetTop || 0\n                };\n            }\n        },\n\n        /**\n         * 刷新\n         * @param {boolean} [paintAll=false] 强制绘制所有displayable\n         */\n        refresh: function (paintAll) {\n\n            var list = this.storage.getDisplayList(true);\n\n            var zlevelList = this._zlevelList;\n\n            this._paintList(list, paintAll);\n\n            // Paint custum layers\n            for (var i = 0; i < zlevelList.length; i++) {\n                var z = zlevelList[i];\n                var layer = this._layers[z];\n                if (!layer.__builtin__ && layer.refresh) {\n                    layer.refresh();\n                }\n            }\n\n            this.refreshHover();\n\n            if (this._progressiveLayers.length) {\n                this._startProgessive();\n            }\n\n            return this;\n        },\n\n        addHover: function (el, hoverStyle) {\n            if (el.__hoverMir) {\n                return;\n            }\n            var elMirror = new el.constructor({\n                style: el.style,\n                shape: el.shape\n            });\n            elMirror.__from = el;\n            el.__hoverMir = elMirror;\n            elMirror.setStyle(hoverStyle);\n            this._hoverElements.push(elMirror);\n        },\n\n        removeHover: function (el) {\n            var elMirror = el.__hoverMir;\n            var hoverElements = this._hoverElements;\n            var idx = util.indexOf(hoverElements, elMirror);\n            if (idx >= 0) {\n                hoverElements.splice(idx, 1);\n            }\n            el.__hoverMir = null;\n        },\n\n        clearHover: function (el) {\n            var hoverElements = this._hoverElements;\n            for (var i = 0; i < hoverElements.length; i++) {\n                var from = hoverElements[i].__from;\n                if (from) {\n                    from.__hoverMir = null;\n                }\n            }\n            hoverElements.length = 0;\n        },\n\n        refreshHover: function () {\n            var hoverElements = this._hoverElements;\n            var len = hoverElements.length;\n            var hoverLayer = this._hoverlayer;\n            hoverLayer && hoverLayer.clear();\n\n            if (!len) {\n                return;\n            }\n            timsort(hoverElements, this.storage.displayableSortFunc);\n\n            // Use a extream large zlevel\n            // FIXME?\n            if (!hoverLayer) {\n                hoverLayer = this._hoverlayer = this.getLayer(1e5);\n            }\n\n            var scope = {};\n            hoverLayer.ctx.save();\n            for (var i = 0; i < len;) {\n                var el = hoverElements[i];\n                var originalEl = el.__from;\n                // Original el is removed\n                // PENDING\n                if (!(originalEl && originalEl.__zr)) {\n                    hoverElements.splice(i, 1);\n                    originalEl.__hoverMir = null;\n                    len--;\n                    continue;\n                }\n                i++;\n\n                // Use transform\n                // FIXME style and shape ?\n                if (!originalEl.invisible) {\n                    el.transform = originalEl.transform;\n                    el.invTransform = originalEl.invTransform;\n                    el.__clipPaths = originalEl.__clipPaths;\n                    // el.\n                    this._doPaintEl(el, hoverLayer, true, scope);\n                }\n            }\n            hoverLayer.ctx.restore();\n        },\n\n        _startProgessive: function () {\n            var self = this;\n\n            if (!self._furtherProgressive) {\n                return;\n            }\n\n            // Use a token to stop progress steps triggered by\n            // previous zr.refresh calling.\n            var token = self._progressiveToken = +new Date();\n\n            self._progress++;\n            requestAnimationFrame(step);\n\n            function step() {\n                // In case refreshed or disposed\n                if (token === self._progressiveToken && self.storage) {\n\n                    self._doPaintList(self.storage.getDisplayList());\n\n                    if (self._furtherProgressive) {\n                        self._progress++;\n                        requestAnimationFrame(step);\n                    }\n                    else {\n                        self._progressiveToken = -1;\n                    }\n                }\n            }\n        },\n\n        _clearProgressive: function () {\n            this._progressiveToken = -1;\n            this._progress = 0;\n            util.each(this._progressiveLayers, function (layer) {\n                layer.__dirty && layer.clear();\n            });\n        },\n\n        _paintList: function (list, paintAll) {\n\n            if (paintAll == null) {\n                paintAll = false;\n            }\n\n            this._updateLayerStatus(list);\n\n            this._clearProgressive();\n\n            this.eachBuiltinLayer(preProcessLayer);\n\n            this._doPaintList(list, paintAll);\n\n            this.eachBuiltinLayer(postProcessLayer);\n        },\n\n        _doPaintList: function (list, paintAll) {\n            var currentLayer;\n            var currentZLevel;\n            var ctx;\n\n            // var invTransform = [];\n            var scope;\n\n            var progressiveLayerIdx = 0;\n            var currentProgressiveLayer;\n\n            var width = this._width;\n            var height = this._height;\n            var layerProgress;\n            var frame = this._progress;\n            function flushProgressiveLayer(layer) {\n                var dpr = ctx.dpr || 1;\n                ctx.save();\n                ctx.globalAlpha = 1;\n                ctx.shadowBlur = 0;\n                // Avoid layer don't clear in next progressive frame\n                currentLayer.__dirty = true;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n                ctx.restore();\n            }\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n\n                var elFrame = el.__frame;\n\n                // Flush at current context\n                // PENDING\n                if (elFrame < 0 && currentProgressiveLayer) {\n                    flushProgressiveLayer(currentProgressiveLayer);\n                    currentProgressiveLayer = null;\n                }\n\n                // Change draw layer\n                if (currentZLevel !== elZLevel) {\n                    if (ctx) {\n                        ctx.restore();\n                    }\n\n                    // Reset scope\n                    scope = {};\n\n                    // Only 0 zlevel if only has one canvas\n                    currentZLevel = elZLevel;\n                    currentLayer = this.getLayer(currentZLevel);\n\n                    if (!currentLayer.__builtin__) {\n                        log(\n                            'ZLevel ' + currentZLevel\n                            + ' has been used by unkown layer ' + currentLayer.id\n                        );\n                    }\n\n                    ctx = currentLayer.ctx;\n                    ctx.save();\n\n                    // Reset the count\n                    currentLayer.__unusedCount = 0;\n\n                    if (currentLayer.__dirty || paintAll) {\n                        currentLayer.clear();\n                    }\n                }\n\n                if (!(currentLayer.__dirty || paintAll)) {\n                    continue;\n                }\n\n                if (elFrame >= 0) {\n                    // Progressive layer changed\n                    if (!currentProgressiveLayer) {\n                        currentProgressiveLayer = this._progressiveLayers[\n                            Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)\n                        ];\n\n                        currentProgressiveLayer.ctx.save();\n                        currentProgressiveLayer.renderScope = {};\n\n                        if (currentProgressiveLayer\n                            && (currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress)\n                        ) {\n                            // flushProgressiveLayer(currentProgressiveLayer);\n                            // Quick jump all progressive elements\n                            // All progressive element are not dirty, jump over and flush directly\n                            i = currentProgressiveLayer.__nextIdxNotProg - 1;\n                            // currentProgressiveLayer = null;\n                            continue;\n                        }\n\n                        layerProgress = currentProgressiveLayer.__progress;\n\n                        if (!currentProgressiveLayer.__dirty) {\n                            // Keep rendering\n                            frame = layerProgress;\n                        }\n\n                        currentProgressiveLayer.__progress = frame + 1;\n                    }\n\n                    if (elFrame === frame) {\n                        this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n                    }\n                }\n                else {\n                    this._doPaintEl(el, currentLayer, paintAll, scope);\n                }\n\n                el.__dirty = false;\n            }\n\n            if (currentProgressiveLayer) {\n                flushProgressiveLayer(currentProgressiveLayer);\n            }\n\n            // Restore the lastLayer ctx\n            ctx && ctx.restore();\n            // If still has clipping state\n            // if (scope.prevElClipPaths) {\n            //     ctx.restore();\n            // }\n\n            this._furtherProgressive = false;\n            util.each(this._progressiveLayers, function (layer) {\n                if (layer.__maxProgress >= layer.__progress) {\n                    this._furtherProgressive = true;\n                }\n            }, this);\n        },\n\n        _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n            var ctx = currentLayer.ctx;\n            var m = el.transform;\n            if (\n                (currentLayer.__dirty || forcePaint)\n                // Ignore invisible element\n                && !el.invisible\n                // Ignore transparent element\n                && el.style.opacity !== 0\n                // Ignore scale 0 element, in some environment like node-canvas\n                // Draw a scale 0 element can cause all following draw wrong\n                // And setTransform with scale 0 will cause set back transform failed.\n                && !(m && !m[0] && !m[3])\n                // Ignore culled element\n                && !(el.culling && isDisplayableCulled(el, this._width, this._height))\n            ) {\n\n                var clipPaths = el.__clipPaths;\n\n                // Optimize when clipping on group with several elements\n                if (scope.prevClipLayer !== currentLayer\n                    || isClipPathChanged(clipPaths, scope.prevElClipPaths)\n                ) {\n                    // If has previous clipping state, restore from it\n                    if (scope.prevElClipPaths) {\n                        scope.prevClipLayer.ctx.restore();\n                        scope.prevClipLayer = scope.prevElClipPaths = null;\n\n                        // Reset prevEl since context has been restored\n                        scope.prevEl = null;\n                    }\n                    // New clipping state\n                    if (clipPaths) {\n                        ctx.save();\n                        doClip(clipPaths, ctx);\n                        scope.prevClipLayer = currentLayer;\n                        scope.prevElClipPaths = clipPaths;\n                    }\n                }\n                el.beforeBrush && el.beforeBrush(ctx);\n\n                el.brush(ctx, scope.prevEl || null);\n                scope.prevEl = el;\n\n                el.afterBrush && el.afterBrush(ctx);\n            }\n        },\n\n        /**\n         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n         * @param {number} zlevel\n         * @return {module:zrender/Layer}\n         */\n        getLayer: function (zlevel) {\n            if (this._singleCanvas) {\n                return this._layers[0];\n            }\n\n            var layer = this._layers[zlevel];\n            if (!layer) {\n                // Create a new layer\n                layer = new Layer('zr_' + zlevel, this, this.dpr);\n                layer.__builtin__ = true;\n\n                if (this._layerConfig[zlevel]) {\n                    util.merge(layer, this._layerConfig[zlevel], true);\n                }\n\n                this.insertLayer(zlevel, layer);\n\n                // Context is created after dom inserted to document\n                // Or excanvas will get 0px clientWidth and clientHeight\n                layer.initContext();\n            }\n\n            return layer;\n        },\n\n        insertLayer: function (zlevel, layer) {\n\n            var layersMap = this._layers;\n            var zlevelList = this._zlevelList;\n            var len = zlevelList.length;\n            var prevLayer = null;\n            var i = -1;\n            var domRoot = this._domRoot;\n\n            if (layersMap[zlevel]) {\n                log('ZLevel ' + zlevel + ' has been used already');\n                return;\n            }\n            // Check if is a valid layer\n            if (!isLayerValid(layer)) {\n                log('Layer of zlevel ' + zlevel + ' is not valid');\n                return;\n            }\n\n            if (len > 0 && zlevel > zlevelList[0]) {\n                for (i = 0; i < len - 1; i++) {\n                    if (\n                        zlevelList[i] < zlevel\n                        && zlevelList[i + 1] > zlevel\n                    ) {\n                        break;\n                    }\n                }\n                prevLayer = layersMap[zlevelList[i]];\n            }\n            zlevelList.splice(i + 1, 0, zlevel);\n\n            layersMap[zlevel] = layer;\n\n            // Vitual layer will not directly show on the screen.\n            // (It can be a WebGL layer and assigned to a ZImage element)\n            // But it still under management of zrender.\n            if (!layer.virtual) {\n                if (prevLayer) {\n                    var prevDom = prevLayer.dom;\n                    if (prevDom.nextSibling) {\n                        domRoot.insertBefore(\n                            layer.dom,\n                            prevDom.nextSibling\n                        );\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n                else {\n                    if (domRoot.firstChild) {\n                        domRoot.insertBefore(layer.dom, domRoot.firstChild);\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n            }\n        },\n\n        // Iterate each layer\n        eachLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                cb.call(context, this._layers[z], z);\n            }\n        },\n\n        // Iterate each buildin layer\n        eachBuiltinLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        // Iterate each other layer except buildin layer\n        eachOtherLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (!layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        /**\n         * 获取所有已创建的层\n         * @param {Array.<module:zrender/Layer>} [prevLayer]\n         */\n        getLayers: function () {\n            return this._layers;\n        },\n\n        _updateLayerStatus: function (list) {\n\n            var layers = this._layers;\n            var progressiveLayers = this._progressiveLayers;\n\n            var elCountsLastFrame = {};\n            var progressiveElCountsLastFrame = {};\n\n            this.eachBuiltinLayer(function (layer, z) {\n                elCountsLastFrame[z] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            util.each(progressiveLayers, function (layer, idx) {\n                progressiveElCountsLastFrame[idx] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            var progressiveLayerCount = 0;\n            var currentProgressiveLayer;\n            var lastProgressiveKey;\n            var frameCount = 0;\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var zlevel = this._singleCanvas ? 0 : el.zlevel;\n                var layer = layers[zlevel];\n                var elProgress = el.progressive;\n                if (layer) {\n                    layer.elCount++;\n                    layer.__dirty = layer.__dirty || el.__dirty;\n                }\n\n                /////// Update progressive\n                if (elProgress >= 0) {\n                    // Fix wrong progressive sequence problem.\n                    if (lastProgressiveKey !== elProgress) {\n                        lastProgressiveKey = elProgress;\n                        frameCount++;\n                    }\n                    var elFrame = el.__frame = frameCount - 1;\n                    if (!currentProgressiveLayer) {\n                        var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n                        currentProgressiveLayer = progressiveLayers[idx];\n                        if (!currentProgressiveLayer) {\n                            currentProgressiveLayer = progressiveLayers[idx] = new Layer(\n                                'progressive', this, this.dpr\n                            );\n                            currentProgressiveLayer.initContext();\n                        }\n                        currentProgressiveLayer.__maxProgress = 0;\n                    }\n                    currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n                    currentProgressiveLayer.elCount++;\n\n                    currentProgressiveLayer.__maxProgress = Math.max(\n                        currentProgressiveLayer.__maxProgress, elFrame\n                    );\n\n                    if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n                        // Should keep rendering this  layer because progressive rendering is not finished yet\n                        layer.__dirty = true;\n                    }\n                }\n                else {\n                    el.__frame = -1;\n\n                    if (currentProgressiveLayer) {\n                        currentProgressiveLayer.__nextIdxNotProg = i;\n                        progressiveLayerCount++;\n                        currentProgressiveLayer = null;\n                    }\n                }\n            }\n\n            if (currentProgressiveLayer) {\n                progressiveLayerCount++;\n                currentProgressiveLayer.__nextIdxNotProg = i;\n            }\n\n            // 层中的元素数量有发生变化\n            this.eachBuiltinLayer(function (layer, z) {\n                if (elCountsLastFrame[z] !== layer.elCount) {\n                    layer.__dirty = true;\n                }\n            });\n\n            progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n            util.each(progressiveLayers, function (layer, idx) {\n                if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n                    el.__dirty = true;\n                }\n                if (layer.__dirty) {\n                    layer.__progress = 0;\n                }\n            });\n        },\n\n        /**\n         * 清除hover层外所有内容\n         */\n        clear: function () {\n            this.eachBuiltinLayer(this._clearLayer);\n            return this;\n        },\n\n        _clearLayer: function (layer) {\n            layer.clear();\n        },\n\n        /**\n         * 修改指定zlevel的绘制参数\n         *\n         * @param {string} zlevel\n         * @param {Object} config 配置对象\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\n         * @param {number} [config.lastFrameAlpha=0.7]\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         */\n        configLayer: function (zlevel, config) {\n            if (config) {\n                var layerConfig = this._layerConfig;\n                if (!layerConfig[zlevel]) {\n                    layerConfig[zlevel] = config;\n                }\n                else {\n                    util.merge(layerConfig[zlevel], config, true);\n                }\n\n                var layer = this._layers[zlevel];\n\n                if (layer) {\n                    util.merge(layer, layerConfig[zlevel], true);\n                }\n            }\n        },\n\n        /**\n         * 删除指定层\n         * @param {number} zlevel 层所在的zlevel\n         */\n        delLayer: function (zlevel) {\n            var layers = this._layers;\n            var zlevelList = this._zlevelList;\n            var layer = layers[zlevel];\n            if (!layer) {\n                return;\n            }\n            layer.dom.parentNode.removeChild(layer.dom);\n            delete layers[zlevel];\n\n            zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n        },\n\n        /**\n         * 区域大小变化后重绘\n         */\n        resize: function (width, height) {\n            var domRoot = this._domRoot;\n            // FIXME Why ?\n            domRoot.style.display = 'none';\n\n            // Save input w/h\n            var opts = this._opts;\n            width != null && (opts.width = width);\n            height != null && (opts.height = height);\n\n            width = this._getSize(0);\n            height = this._getSize(1);\n\n            domRoot.style.display = '';\n\n            // 优化没有实际改变的resize\n            if (this._width != width || height != this._height) {\n                domRoot.style.width = width + 'px';\n                domRoot.style.height = height + 'px';\n\n                for (var id in this._layers) {\n                    if (this._layers.hasOwnProperty(id)) {\n                        this._layers[id].resize(width, height);\n                    }\n                }\n                util.each(this._progressiveLayers, function (layer) {\n                    layer.resize(width, height);\n                });\n\n                this.refresh(true);\n            }\n\n            this._width = width;\n            this._height = height;\n\n            return this;\n        },\n\n        /**\n         * 清除单独的一个层\n         * @param {number} zlevel\n         */\n        clearLayer: function (zlevel) {\n            var layer = this._layers[zlevel];\n            if (layer) {\n                layer.clear();\n            }\n        },\n\n        /**\n         * 释放\n         */\n        dispose: function () {\n            this.root.innerHTML = '';\n\n            this.root =\n            this.storage =\n\n            this._domRoot =\n            this._layers = null;\n        },\n\n        /**\n         * Get canvas which has all thing rendered\n         * @param {Object} opts\n         * @param {string} [opts.backgroundColor]\n         */\n        getRenderedCanvas: function (opts) {\n            opts = opts || {};\n            if (this._singleCanvas) {\n                return this._layers[0].dom;\n            }\n\n            var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n            imageLayer.initContext();\n\n            imageLayer.clearColor = opts.backgroundColor;\n            imageLayer.clear();\n\n            var displayList = this.storage.getDisplayList(true);\n\n            var scope = {};\n            var zlevel;\n\n            var self = this;\n            function findAndDrawOtherLayer(smaller, larger) {\n                var zlevelList = self._zlevelList;\n                if (smaller == null) {\n                    smaller = -Infinity;\n                }\n                var intermediateLayer;\n                for (var i = 0; i < zlevelList.length; i++) {\n                    var z = zlevelList[i];\n                    var layer = self._layers[z];\n                    if (!layer.__builtin__ && z > smaller && z < larger) {\n                        intermediateLayer = layer;\n                        break;\n                    }\n                }\n                if (intermediateLayer && intermediateLayer.renderToCanvas) {\n                    imageLayer.ctx.save();\n                    intermediateLayer.renderToCanvas(imageLayer.ctx);\n                    imageLayer.ctx.restore();\n                }\n            }\n            for (var i = 0; i < displayList.length; i++) {\n                var el = displayList[i];\n\n                if (el.zlevel !== zlevel) {\n                    findAndDrawOtherLayer(zlevel, el.zlevel);\n                    zlevel = el.zlevel;\n                }\n                this._doPaintEl(el, imageLayer, true, scope);\n            }\n\n            findAndDrawOtherLayer(zlevel, Infinity);\n\n            return imageLayer.dom;\n        },\n        /**\n         * 获取绘图区域宽度\n         */\n        getWidth: function () {\n            return this._width;\n        },\n\n        /**\n         * 获取绘图区域高度\n         */\n        getHeight: function () {\n            return this._height;\n        },\n\n        _getSize: function (whIdx) {\n            var opts = this._opts;\n            var wh = ['width', 'height'][whIdx];\n            var cwh = ['clientWidth', 'clientHeight'][whIdx];\n            var plt = ['paddingLeft', 'paddingTop'][whIdx];\n            var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n            if (opts[wh] != null && opts[wh] !== 'auto') {\n                return parseFloat(opts[wh]);\n            }\n\n            var root = this.root;\n            // IE8 does not support getComputedStyle, but it use VML.\n            var stl = document.defaultView.getComputedStyle(root);\n\n            return (\n                (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n                - (parseInt10(stl[plt]) || 0)\n                - (parseInt10(stl[prb]) || 0)\n            ) | 0;\n        },\n\n        pathToImage: function (path, dpr) {\n            dpr = dpr || this.dpr;\n\n            var canvas = document.createElement('canvas');\n            var ctx = canvas.getContext('2d');\n            var rect = path.getBoundingRect();\n            var style = path.style;\n            var shadowBlurSize = style.shadowBlur;\n            var shadowOffsetX = style.shadowOffsetX;\n            var shadowOffsetY = style.shadowOffsetY;\n            var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n\n            var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n            var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n            var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n            var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n            var width = rect.width + leftMargin + rightMargin;\n            var height = rect.height + topMargin + bottomMargin;\n\n            canvas.width = width * dpr;\n            canvas.height = height * dpr;\n\n            ctx.scale(dpr, dpr);\n            ctx.clearRect(0, 0, width, height);\n            ctx.dpr = dpr;\n\n            var pathTransform = {\n                position: path.position,\n                rotation: path.rotation,\n                scale: path.scale\n            };\n            path.position = [leftMargin - rect.x, topMargin - rect.y];\n            path.rotation = 0;\n            path.scale = [1, 1];\n            path.updateTransform();\n            if (path) {\n                path.brush(ctx);\n            }\n\n            var ImageShape = __webpack_require__(674);\n            var imgShape = new ImageShape({\n                style: {\n                    x: 0,\n                    y: 0,\n                    image: canvas\n                }\n            });\n\n            if (pathTransform.position != null) {\n                imgShape.position = path.position = pathTransform.position;\n            }\n\n            if (pathTransform.rotation != null) {\n                imgShape.rotation = path.rotation = pathTransform.rotation;\n            }\n\n            if (pathTransform.scale != null) {\n                imgShape.scale = path.scale = pathTransform.scale;\n            }\n\n            return imgShape;\n        }\n    };\n\n    module.exports = Painter;\n\n\n\n/***/ }),\n\n/***/ 754:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n\n\n    var util = __webpack_require__(606);\n    var env = __webpack_require__(615);\n\n    var Group = __webpack_require__(634);\n\n    // Use timsort because in most case elements are partially sorted\n    // https://jsfiddle.net/pissang/jr4x7mdm/8/\n    var timsort = __webpack_require__(643);\n\n    function shapeCompareFunc(a, b) {\n        if (a.zlevel === b.zlevel) {\n            if (a.z === b.z) {\n                // if (a.z2 === b.z2) {\n                //     // FIXME Slow has renderidx compare\n                //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n                //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n                //     return a.__renderidx - b.__renderidx;\n                // }\n                return a.z2 - b.z2;\n            }\n            return a.z - b.z;\n        }\n        return a.zlevel - b.zlevel;\n    }\n    /**\n     * 内容仓库 (M)\n     * @alias module:zrender/Storage\n     * @constructor\n     */\n    var Storage = function () {\n        this._roots = [];\n\n        this._displayList = [];\n\n        this._displayListLen = 0;\n    };\n\n    Storage.prototype = {\n\n        constructor: Storage,\n\n        /**\n         * @param  {Function} cb\n         *\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._roots.length; i++) {\n                this._roots[i].traverse(cb, context);\n            }\n        },\n\n        /**\n         * 返回所有图形的绘制队列\n         * @param {boolean} [update=false] 是否在返回前更新该数组\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n         *\n         * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n         * @return {Array.<module:zrender/graphic/Displayable>}\n         */\n        getDisplayList: function (update, includeIgnore) {\n            includeIgnore = includeIgnore || false;\n            if (update) {\n                this.updateDisplayList(includeIgnore);\n            }\n            return this._displayList;\n        },\n\n        /**\n         * 更新图形的绘制队列。\n         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n         */\n        updateDisplayList: function (includeIgnore) {\n            this._displayListLen = 0;\n            var roots = this._roots;\n            var displayList = this._displayList;\n            for (var i = 0, len = roots.length; i < len; i++) {\n                this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n            }\n            displayList.length = this._displayListLen;\n\n            // for (var i = 0, len = displayList.length; i < len; i++) {\n            //     displayList[i].__renderidx = i;\n            // }\n\n            // displayList.sort(shapeCompareFunc);\n            env.canvasSupported && timsort(displayList, shapeCompareFunc);\n        },\n\n        _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n\n            if (el.ignore && !includeIgnore) {\n                return;\n            }\n\n            el.beforeUpdate();\n\n            if (el.__dirty) {\n\n                el.update();\n\n            }\n\n            el.afterUpdate();\n\n            var userSetClipPath = el.clipPath;\n            if (userSetClipPath) {\n\n                // FIXME 效率影响\n                if (clipPaths) {\n                    clipPaths = clipPaths.slice();\n                }\n                else {\n                    clipPaths = [];\n                }\n\n                var currentClipPath = userSetClipPath;\n                var parentClipPath = el;\n                // Recursively add clip path\n                while (currentClipPath) {\n                    // clipPath 的变换是基于使用这个 clipPath 的元素\n                    currentClipPath.parent = parentClipPath;\n                    currentClipPath.updateTransform();\n\n                    clipPaths.push(currentClipPath);\n\n                    parentClipPath = currentClipPath;\n                    currentClipPath = currentClipPath.clipPath;\n                }\n            }\n\n            if (el.isGroup) {\n                var children = el._children;\n\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n\n                    // Force to mark as dirty if group is dirty\n                    // FIXME __dirtyPath ?\n                    if (el.__dirty) {\n                        child.__dirty = true;\n                    }\n\n                    this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n                }\n\n                // Mark group clean here\n                el.__dirty = false;\n\n            }\n            else {\n                el.__clipPaths = clipPaths;\n\n                this._displayList[this._displayListLen++] = el;\n            }\n        },\n\n        /**\n         * 添加图形(Shape)或者组(Group)到根节点\n         * @param {module:zrender/Element} el\n         */\n        addRoot: function (el) {\n            if (el.__storage === this) {\n                return;\n            }\n\n            if (el instanceof Group) {\n                el.addChildrenToStorage(this);\n            }\n\n            this.addToStorage(el);\n            this._roots.push(el);\n        },\n\n        /**\n         * 删除指定的图形(Shape)或者组(Group)\n         * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n         */\n        delRoot: function (el) {\n            if (el == null) {\n                // 不指定el清空\n                for (var i = 0; i < this._roots.length; i++) {\n                    var root = this._roots[i];\n                    if (root instanceof Group) {\n                        root.delChildrenFromStorage(this);\n                    }\n                }\n\n                this._roots = [];\n                this._displayList = [];\n                this._displayListLen = 0;\n\n                return;\n            }\n\n            if (el instanceof Array) {\n                for (var i = 0, l = el.length; i < l; i++) {\n                    this.delRoot(el[i]);\n                }\n                return;\n            }\n\n\n            var idx = util.indexOf(this._roots, el);\n            if (idx >= 0) {\n                this.delFromStorage(el);\n                this._roots.splice(idx, 1);\n                if (el instanceof Group) {\n                    el.delChildrenFromStorage(this);\n                }\n            }\n        },\n\n        addToStorage: function (el) {\n            el.__storage = this;\n            el.dirty(false);\n\n            return this;\n        },\n\n        delFromStorage: function (el) {\n            if (el) {\n                el.__storage = null;\n            }\n\n            return this;\n        },\n\n        /**\n         * 清空并且释放Storage\n         */\n        dispose: function () {\n            this._renderList =\n            this._roots = null;\n        },\n\n        displayableSortFunc: shapeCompareFunc\n    };\n\n    module.exports = Storage;\n\n\n\n/***/ }),\n\n/***/ 755:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n\n    var util = __webpack_require__(606);\n    var Dispatcher = __webpack_require__(625).Dispatcher;\n\n    var requestAnimationFrame = __webpack_require__(669);\n\n    var Animator = __webpack_require__(668);\n    /**\n     * @typedef {Object} IZRenderStage\n     * @property {Function} update\n     */\n\n    /**\n     * @alias module:zrender/animation/Animation\n     * @constructor\n     * @param {Object} [options]\n     * @param {Function} [options.onframe]\n     * @param {IZRenderStage} [options.stage]\n     * @example\n     *     var animation = new Animation();\n     *     var obj = {\n     *         x: 100,\n     *         y: 100\n     *     };\n     *     animation.animate(node.position)\n     *         .when(1000, {\n     *             x: 500,\n     *             y: 500\n     *         })\n     *         .when(2000, {\n     *             x: 100,\n     *             y: 100\n     *         })\n     *         .start('spline');\n     */\n    var Animation = function (options) {\n\n        options = options || {};\n\n        this.stage = options.stage || {};\n\n        this.onframe = options.onframe || function() {};\n\n        // private properties\n        this._clips = [];\n\n        this._running = false;\n\n        this._time;\n\n        this._pausedTime;\n\n        this._pauseStart;\n\n        this._paused = false;\n\n        Dispatcher.call(this);\n    };\n\n    Animation.prototype = {\n\n        constructor: Animation,\n        /**\n         * 添加 clip\n         * @param {module:zrender/animation/Clip} clip\n         */\n        addClip: function (clip) {\n            this._clips.push(clip);\n        },\n        /**\n         * 添加 animator\n         * @param {module:zrender/animation/Animator} animator\n         */\n        addAnimator: function (animator) {\n            animator.animation = this;\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.addClip(clips[i]);\n            }\n        },\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Clip} clip\n         */\n        removeClip: function(clip) {\n            var idx = util.indexOf(this._clips, clip);\n            if (idx >= 0) {\n                this._clips.splice(idx, 1);\n            }\n        },\n\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Animator} animator\n         */\n        removeAnimator: function (animator) {\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.removeClip(clips[i]);\n            }\n            animator.animation = null;\n        },\n\n        _update: function() {\n\n            var time = new Date().getTime() - this._pausedTime;\n            var delta = time - this._time;\n            var clips = this._clips;\n            var len = clips.length;\n\n            var deferredEvents = [];\n            var deferredClips = [];\n            for (var i = 0; i < len; i++) {\n                var clip = clips[i];\n                var e = clip.step(time, delta);\n                // Throw out the events need to be called after\n                // stage.update, like destroy\n                if (e) {\n                    deferredEvents.push(e);\n                    deferredClips.push(clip);\n                }\n            }\n\n            // Remove the finished clip\n            for (var i = 0; i < len;) {\n                if (clips[i]._needsRemove) {\n                    clips[i] = clips[len - 1];\n                    clips.pop();\n                    len--;\n                }\n                else {\n                    i++;\n                }\n            }\n\n            len = deferredEvents.length;\n            for (var i = 0; i < len; i++) {\n                deferredClips[i].fire(deferredEvents[i]);\n            }\n\n            this._time = time;\n\n            this.onframe(delta);\n\n            this.trigger('frame', delta);\n\n            if (this.stage.update) {\n                this.stage.update();\n            }\n        },\n\n        _startLoop: function () {\n            var self = this;\n\n            this._running = true;\n\n            function step() {\n                if (self._running) {\n\n                    requestAnimationFrame(step);\n\n                    !self._paused && self._update();\n                }\n            }\n\n            requestAnimationFrame(step);\n        },\n\n        /**\n         * 开始运行动画\n         */\n        start: function () {\n\n            this._time = new Date().getTime();\n            this._pausedTime = 0;\n\n            this._startLoop();\n        },\n        /**\n         * 停止运行动画\n         */\n        stop: function () {\n            this._running = false;\n        },\n\n        /**\n         * Pause\n         */\n        pause: function () {\n            if (!this._paused) {\n                this._pauseStart = new Date().getTime();\n                this._paused = true;\n            }\n        },\n\n        /**\n         * Resume\n         */\n        resume: function () {\n            if (this._paused) {\n                this._pausedTime += (new Date().getTime()) - this._pauseStart;\n                this._paused = false;\n            }\n        },\n\n        /**\n         * 清除所有动画片段\n         */\n        clear: function () {\n            this._clips = [];\n        },\n        /**\n         * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n         * @param  {Object} target\n         * @param  {Object} options\n         * @param  {boolean} [options.loop=false] 是否循环播放动画\n         * @param  {Function} [options.getter=null]\n         *         如果指定getter函数，会通过getter函数取属性值\n         * @param  {Function} [options.setter=null]\n         *         如果指定setter函数，会通过setter函数设置属性值\n         * @return {module:zrender/animation/Animation~Animator}\n         */\n        // TODO Gap\n        animate: function (target, options) {\n            options = options || {};\n\n            var animator = new Animator(\n                target,\n                options.loop,\n                options.getter,\n                options.setter\n            );\n\n            this.addAnimator(animator);\n\n            return animator;\n        }\n    };\n\n    util.mixin(Animation, Dispatcher);\n\n    module.exports = Animation;\n\n\n\n/***/ }),\n\n/***/ 756:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\n\n\n    var easingFuncs = __webpack_require__(757);\n\n    function Clip(options) {\n\n        this._target = options.target;\n\n        // 生命周期\n        this._life = options.life || 1000;\n        // 延时\n        this._delay = options.delay || 0;\n        // 开始时间\n        // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n        this._initialized = false;\n\n        // 是否循环\n        this.loop = options.loop == null ? false : options.loop;\n\n        this.gap = options.gap || 0;\n\n        this.easing = options.easing || 'Linear';\n\n        this.onframe = options.onframe;\n        this.ondestroy = options.ondestroy;\n        this.onrestart = options.onrestart;\n\n        this._pausedTime = 0;\n        this._paused = false;\n    }\n\n    Clip.prototype = {\n\n        constructor: Clip,\n\n        step: function (globalTime, deltaTime) {\n            // Set startTime on first step, or _startTime may has milleseconds different between clips\n            // PENDING\n            if (!this._initialized) {\n                this._startTime = globalTime + this._delay;\n                this._initialized = true;\n            }\n\n            if (this._paused) {\n                this._pausedTime += deltaTime;\n                return;\n            }\n\n            var percent = (globalTime - this._startTime - this._pausedTime) / this._life;\n\n            // 还没开始\n            if (percent < 0) {\n                return;\n            }\n\n            percent = Math.min(percent, 1);\n\n            var easing = this.easing;\n            var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n            var schedule = typeof easingFunc === 'function'\n                ? easingFunc(percent)\n                : percent;\n\n            this.fire('frame', schedule);\n\n            // 结束\n            if (percent == 1) {\n                if (this.loop) {\n                    this.restart (globalTime);\n                    // 重新开始周期\n                    // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n                    return 'restart';\n                }\n\n                // 动画完成将这个控制器标识为待删除\n                // 在Animation.update中进行批量删除\n                this._needsRemove = true;\n                return 'destroy';\n            }\n\n            return null;\n        },\n\n        restart: function (globalTime) {\n            var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n            this._startTime = globalTime - remainder + this.gap;\n            this._pausedTime = 0;\n\n            this._needsRemove = false;\n        },\n\n        fire: function (eventType, arg) {\n            eventType = 'on' + eventType;\n            if (this[eventType]) {\n                this[eventType](this._target, arg);\n            }\n        },\n\n        pause: function () {\n            this._paused = true;\n        },\n\n        resume: function () {\n            this._paused = false;\n        }\n    };\n\n    module.exports = Clip;\n\n\n\n/***/ }),\n\n/***/ 757:\n/***/ (function(module, exports) {\n\n/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\n\n    var easing = {\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        linear: function (k) {\n            return k;\n        },\n\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticIn: function (k) {\n            return k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticOut: function (k) {\n            return k * (2 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k;\n            }\n            return -0.5 * (--k * (k - 2) - 1);\n        },\n\n        // 三次方的缓动（t^3）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicIn: function (k) {\n            return k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicOut: function (k) {\n            return --k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k + 2);\n        },\n\n        // 四次方的缓动（t^4）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticIn: function (k) {\n            return k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticOut: function (k) {\n            return 1 - (--k * k * k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k;\n            }\n            return -0.5 * ((k -= 2) * k * k * k - 2);\n        },\n\n        // 五次方的缓动（t^5）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticIn: function (k) {\n            return k * k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticOut: function (k) {\n            return --k * k * k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k * k * k + 2);\n        },\n\n        // 正弦曲线的缓动（sin(t)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalIn: function (k) {\n            return 1 - Math.cos(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalOut: function (k) {\n            return Math.sin(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalInOut: function (k) {\n            return 0.5 * (1 - Math.cos(Math.PI * k));\n        },\n\n        // 指数曲线的缓动（2^t）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialIn: function (k) {\n            return k === 0 ? 0 : Math.pow(1024, k - 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialOut: function (k) {\n            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialInOut: function (k) {\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if ((k *= 2) < 1) {\n                return 0.5 * Math.pow(1024, k - 1);\n            }\n            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n        },\n\n        // 圆形曲线的缓动（sqrt(1-t^2)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularIn: function (k) {\n            return 1 - Math.sqrt(1 - k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularOut: function (k) {\n            return Math.sqrt(1 - (--k * k));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - k * k) - 1);\n            }\n            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n        },\n\n        // 创建类似于弹簧在停止前来回振荡的动画\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticIn: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return -(a * Math.pow(2, 10 * (k -= 1)) *\n                        Math.sin((k - s) * (2 * Math.PI) / p));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return (a * Math.pow(2, -10 * k) *\n                    Math.sin((k - s) * (2 * Math.PI) / p) + 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticInOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            if ((k *= 2) < 1) {\n                return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p));\n            }\n            return a * Math.pow(2, -10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\n        },\n\n        // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backIn: function (k) {\n            var s = 1.70158;\n            return k * k * ((s + 1) * k - s);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backOut: function (k) {\n            var s = 1.70158;\n            return --k * k * ((s + 1) * k + s) + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backInOut: function (k) {\n            var s = 1.70158 * 1.525;\n            if ((k *= 2) < 1) {\n                return 0.5 * (k * k * ((s + 1) * k - s));\n            }\n            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n        },\n\n        // 创建弹跳效果\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceIn: function (k) {\n            return 1 - easing.bounceOut(1 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceOut: function (k) {\n            if (k < (1 / 2.75)) {\n                return 7.5625 * k * k;\n            }\n            else if (k < (2 / 2.75)) {\n                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n            }\n            else if (k < (2.5 / 2.75)) {\n                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n            }\n            else {\n                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n            }\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceInOut: function (k) {\n            if (k < 0.5) {\n                return easing.bounceIn(k * 2) * 0.5;\n            }\n            return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n        }\n    };\n\n    module.exports = easing;\n\n\n\n\n/***/ }),\n\n/***/ 758:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var normalizeRadian = __webpack_require__(670).normalizeRadian;\n    var PI2 = Math.PI * 2;\n\n    module.exports = {\n        /**\n         * 圆弧描边包含判断\n         * @param  {number}  cx\n         * @param  {number}  cy\n         * @param  {number}  r\n         * @param  {number}  startAngle\n         * @param  {number}  endAngle\n         * @param  {boolean}  anticlockwise\n         * @param  {number} lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {Boolean}\n         */\n        containStroke: function (\n            cx, cy, r, startAngle, endAngle, anticlockwise,\n            lineWidth, x, y\n        ) {\n\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n\n            x -= cx;\n            y -= cy;\n            var d = Math.sqrt(x * x + y * y);\n\n            if ((d - _l > r) || (d + _l < r)) {\n                return false;\n            }\n            if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n                // Is a circle\n                return true;\n            }\n            if (anticlockwise) {\n                var tmp = startAngle;\n                startAngle = normalizeRadian(endAngle);\n                endAngle = normalizeRadian(tmp);\n            } else {\n                startAngle = normalizeRadian(startAngle);\n                endAngle = normalizeRadian(endAngle);\n            }\n            if (startAngle > endAngle) {\n                endAngle += PI2;\n            }\n\n            var angle = Math.atan2(y, x);\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return (angle >= startAngle && angle <= endAngle)\n                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\n        }\n    };\n\n\n/***/ }),\n\n/***/ 759:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var curve = __webpack_require__(622);\n\n    module.exports = {\n        /**\n         * 三次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  x3\n         * @param  {number}  y3\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.cubicProjectPoint(\n                x0, y0, x1, y1, x2, y2, x3, y3,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 760:\n/***/ (function(module, exports) {\n\n\n    module.exports = {\n        /**\n         * 线段包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            var _a = 0;\n            var _b = x0;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l)\n                || (y < y0 - _l && y < y1 - _l)\n                || (x > x0 + _l && x > x1 + _l)\n                || (x < x0 - _l && x < x1 - _l)\n            ) {\n                return false;\n            }\n\n            if (x0 !== x1) {\n                _a = (y0 - y1) / (x0 - x1);\n                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\n            }\n            else {\n                return Math.abs(x - x0) <= _l / 2;\n            }\n            var tmp = _a * x - y + _b;\n            var _s = tmp * tmp / (_a * _a + 1);\n            return _s <= _l / 2 * _l / 2;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 761:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var CMD = __webpack_require__(635).CMD;\n    var line = __webpack_require__(760);\n    var cubic = __webpack_require__(759);\n    var quadratic = __webpack_require__(762);\n    var arc = __webpack_require__(758);\n    var normalizeRadian = __webpack_require__(670).normalizeRadian;\n    var curve = __webpack_require__(622);\n\n    var windingLine = __webpack_require__(763);\n\n    var containStroke = line.containStroke;\n\n    var PI2 = Math.PI * 2;\n\n    var EPSILON = 1e-4;\n\n    function isAroundEqual(a, b) {\n        return Math.abs(a - b) < EPSILON;\n    }\n\n    // 临时数组\n    var roots = [-1, -1, -1];\n    var extrema = [-1, -1];\n\n    function swapExtrema() {\n        var tmp = extrema[0];\n        extrema[0] = extrema[1];\n        extrema[1] = tmp;\n    }\n\n    function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2 && y > y3)\n            || (y < y0 && y < y1 && y < y2 && y < y3)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var w = 0;\n            var nExtrema = -1;\n            var y0_, y1_;\n            for (var i = 0; i < nRoots; i++) {\n                var t = roots[i];\n\n                // Avoid winding error when intersection point is the connect point of two line of polygon\n                var unit = (t === 0 || t === 1) ? 0.5 : 1;\n\n                var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n                if (x_ < x) { // Quick reject\n                    continue;\n                }\n                if (nExtrema < 0) {\n                    nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n                    if (extrema[1] < extrema[0] && nExtrema > 1) {\n                        swapExtrema();\n                    }\n                    y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n                    if (nExtrema > 1) {\n                        y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n                    }\n                }\n                if (nExtrema == 2) {\n                    // 分成三段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else if (t < extrema[1]) {\n                        w += y1_ < y0_ ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y1_ ? unit : -unit;\n                    }\n                }\n                else {\n                    // 分成两段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y0_ ? unit : -unit;\n                    }\n                }\n            }\n            return w;\n        }\n    }\n\n    function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2)\n            || (y < y0 && y < y1 && y < y2)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var t = curve.quadraticExtremum(y0, y1, y2);\n            if (t >= 0 && t <= 1) {\n                var w = 0;\n                var y_ = curve.quadraticAt(y0, y1, y2, t);\n                for (var i = 0; i < nRoots; i++) {\n                    // Remove one endpoint.\n                    var unit = (roots[i] === 0 || roots[i] === 1) ? 0.5 : 1;\n\n                    var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n                    if (x_ < x) {   // Quick reject\n                        continue;\n                    }\n                    if (roots[i] < t) {\n                        w += y_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y2 < y_ ? unit : -unit;\n                    }\n                }\n                return w;\n            }\n            else {\n                // Remove one endpoint.\n                var unit = (roots[0] === 0 || roots[0] === 1) ? 0.5 : 1;\n\n                var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n                if (x_ < x) {   // Quick reject\n                    return 0;\n                }\n                return y2 < y0 ? unit : -unit;\n            }\n        }\n    }\n\n    // TODO\n    // Arc 旋转\n    function windingArc(\n        cx, cy, r, startAngle, endAngle, anticlockwise, x, y\n    ) {\n        y -= cy;\n        if (y > r || y < -r) {\n            return 0;\n        }\n        var tmp = Math.sqrt(r * r - y * y);\n        roots[0] = -tmp;\n        roots[1] = tmp;\n\n        var diff = Math.abs(startAngle - endAngle);\n        if (diff < 1e-4) {\n            return 0;\n        }\n        if (diff % PI2 < 1e-4) {\n            // Is a circle\n            startAngle = 0;\n            endAngle = PI2;\n            var dir = anticlockwise ? 1 : -1;\n            if (x >= roots[0] + cx && x <= roots[1] + cx) {\n                return dir;\n            } else {\n                return 0;\n            }\n        }\n\n        if (anticlockwise) {\n            var tmp = startAngle;\n            startAngle = normalizeRadian(endAngle);\n            endAngle = normalizeRadian(tmp);\n        }\n        else {\n            startAngle = normalizeRadian(startAngle);\n            endAngle = normalizeRadian(endAngle);\n        }\n        if (startAngle > endAngle) {\n            endAngle += PI2;\n        }\n\n        var w = 0;\n        for (var i = 0; i < 2; i++) {\n            var x_ = roots[i];\n            if (x_ + cx > x) {\n                var angle = Math.atan2(y, x_);\n                var dir = anticlockwise ? 1 : -1;\n                if (angle < 0) {\n                    angle = PI2 + angle;\n                }\n                if (\n                    (angle >= startAngle && angle <= endAngle)\n                    || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\n                ) {\n                    if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n                        dir = -dir;\n                    }\n                    w += dir;\n                }\n            }\n        }\n        return w;\n    }\n\n    function containPath(data, lineWidth, isStroke, x, y) {\n        var w = 0;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n\n        for (var i = 0; i < data.length;) {\n            var cmd = data[i++];\n            // Begin a new subpath\n            if (cmd === CMD.M && i > 1) {\n                // Close previous subpath\n                if (!isStroke) {\n                    w += windingLine(xi, yi, x0, y0, x, y);\n                }\n                // 如果被任何一个 subpath 包含\n                // if (w !== 0) {\n                //     return true;\n                // }\n            }\n\n            if (i == 1) {\n                // 如果第一个命令是 L, C, Q\n                // 则 previous point 同绘制命令的第一个 point\n                //\n                // 第一个命令为 Arc 的情况下会在后面特殊处理\n                xi = data[i];\n                yi = data[i + 1];\n\n                x0 = xi;\n                y0 = yi;\n            }\n\n            switch (cmd) {\n                case CMD.M:\n                    // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                    // 在 closePath 的时候使用\n                    x0 = data[i++];\n                    y0 = data[i++];\n                    xi = x0;\n                    yi = y0;\n                    break;\n                case CMD.L:\n                    if (isStroke) {\n                        if (containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n                        w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.C:\n                    if (isStroke) {\n                        if (cubic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingCubic(\n                            xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.Q:\n                    if (isStroke) {\n                        if (quadratic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingQuadratic(\n                            xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.A:\n                    // TODO Arc 判断的开销比较大\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var theta = data[i++];\n                    var dTheta = data[i++];\n                    // TODO Arc 旋转\n                    var psi = data[i++];\n                    var anticlockwise = 1 - data[i++];\n                    var x1 = Math.cos(theta) * rx + cx;\n                    var y1 = Math.sin(theta) * ry + cy;\n                    // 不是直接使用 arc 命令\n                    if (i > 1) {\n                        w += windingLine(xi, yi, x1, y1, x, y);\n                    }\n                    else {\n                        // 第一个命令起点还未定义\n                        x0 = x1;\n                        y0 = y1;\n                    }\n                    // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n                    var _x = (x - cx) * ry / rx + cx;\n                    if (isStroke) {\n                        if (arc.containStroke(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            lineWidth, _x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingArc(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            _x, y\n                        );\n                    }\n                    xi = Math.cos(theta + dTheta) * rx + cx;\n                    yi = Math.sin(theta + dTheta) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    var x1 = x0 + width;\n                    var y1 = y0 + height;\n                    if (isStroke) {\n                        if (containStroke(x0, y0, x1, y0, lineWidth, x, y)\n                          || containStroke(x1, y0, x1, y1, lineWidth, x, y)\n                          || containStroke(x1, y1, x0, y1, lineWidth, x, y)\n                          || containStroke(x0, y1, x0, y0, lineWidth, x, y)\n                        ) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // FIXME Clockwise ?\n                        w += windingLine(x1, y0, x1, y1, x, y);\n                        w += windingLine(x0, y1, x0, y0, x, y);\n                    }\n                    break;\n                case CMD.Z:\n                    if (isStroke) {\n                        if (containStroke(\n                            xi, yi, x0, y0, lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // Close a subpath\n                        w += windingLine(xi, yi, x0, y0, x, y);\n                        // 如果被任何一个 subpath 包含\n                        // FIXME subpaths may overlap\n                        // if (w !== 0) {\n                        //     return true;\n                        // }\n                    }\n                    xi = x0;\n                    yi = y0;\n                    break;\n            }\n        }\n        if (!isStroke && !isAroundEqual(yi, y0)) {\n            w += windingLine(xi, yi, x0, y0, x, y) || 0;\n        }\n        return w !== 0;\n    }\n\n    module.exports = {\n        contain: function (pathData, x, y) {\n            return containPath(pathData, 0, false, x, y);\n        },\n\n        containStroke: function (pathData, lineWidth, x, y) {\n            return containPath(pathData, lineWidth, true, x, y);\n        }\n    };\n\n\n/***/ }),\n\n/***/ 762:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var curve = __webpack_require__(622);\n\n    module.exports = {\n        /**\n         * 二次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.quadraticProjectPoint(\n                x0, y0, x1, y1, x2, y2,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 763:\n/***/ (function(module, exports) {\n\n\n    module.exports = function windingLine(x0, y0, x1, y1, x, y) {\n        if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\n            return 0;\n        }\n        // Ignore horizontal line\n        if (y1 === y0) {\n            return 0;\n        }\n        var dir = y1 < y0 ? 1 : -1;\n        var t = (y - y0) / (y1 - y0);\n\n        // Avoid winding error when intersection point is the connect point of two line of polygon\n        if (t === 1 || t === 0) {\n            dir = y1 < y0 ? 0.5 : -0.5;\n        }\n\n        var x_ = t * (x1 - x0) + x0;\n\n        return x_ > x ? dir : 0;\n    };\n\n\n/***/ }),\n\n/***/ 764:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Only implements needed gestures for mobile.\n */\n\n\n    var eventUtil = __webpack_require__(625);\n\n    var GestureMgr = function () {\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._track = [];\n    };\n\n    GestureMgr.prototype = {\n\n        constructor: GestureMgr,\n\n        recognize: function (event, target, root) {\n            this._doTrack(event, target, root);\n            return this._recognize(event);\n        },\n\n        clear: function () {\n            this._track.length = 0;\n            return this;\n        },\n\n        _doTrack: function (event, target, root) {\n            var touches = event.touches;\n\n            if (!touches) {\n                return;\n            }\n\n            var trackItem = {\n                points: [],\n                touches: [],\n                target: target,\n                event: event\n            };\n\n            for (var i = 0, len = touches.length; i < len; i++) {\n                var touch = touches[i];\n                var pos = eventUtil.clientToLocal(root, touch, {});\n                trackItem.points.push([pos.zrX, pos.zrY]);\n                trackItem.touches.push(touch);\n            }\n\n            this._track.push(trackItem);\n        },\n\n        _recognize: function (event) {\n            for (var eventName in recognizers) {\n                if (recognizers.hasOwnProperty(eventName)) {\n                    var gestureInfo = recognizers[eventName](this._track, event);\n                    if (gestureInfo) {\n                        return gestureInfo;\n                    }\n                }\n            }\n        }\n    };\n\n    function dist(pointPair) {\n        var dx = pointPair[1][0] - pointPair[0][0];\n        var dy = pointPair[1][1] - pointPair[0][1];\n\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    function center(pointPair) {\n        return [\n            (pointPair[0][0] + pointPair[1][0]) / 2,\n            (pointPair[0][1] + pointPair[1][1]) / 2\n        ];\n    }\n\n    var recognizers = {\n\n        pinch: function (track, event) {\n            var trackLen = track.length;\n\n            if (!trackLen) {\n                return;\n            }\n\n            var pinchEnd = (track[trackLen - 1] || {}).points;\n            var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n            if (pinchPre\n                && pinchPre.length > 1\n                && pinchEnd\n                && pinchEnd.length > 1\n            ) {\n                var pinchScale = dist(pinchEnd) / dist(pinchPre);\n                !isFinite(pinchScale) && (pinchScale = 1);\n\n                event.pinchScale = pinchScale;\n\n                var pinchCenter = center(pinchEnd);\n                event.pinchX = pinchCenter[0];\n                event.pinchY = pinchCenter[1];\n\n                return {\n                    type: 'pinch',\n                    target: track[0].target,\n                    event: event\n                };\n            }\n        }\n\n        // Only pinch currently.\n    };\n\n    module.exports = GestureMgr;\n\n\n\n/***/ }),\n\n/***/ 765:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\n\n\n    var vec2 = __webpack_require__(611);\n    var curve = __webpack_require__(622);\n\n    var bbox = {};\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n\n    var start = vec2.create();\n    var end = vec2.create();\n    var extremity = vec2.create();\n\n    var PI2 = Math.PI * 2;\n    /**\n     * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n     * @module zrender/core/bbox\n     * @param {Array<Object>} points 顶点数组\n     * @param {number} min\n     * @param {number} max\n     */\n    bbox.fromPoints = function(points, min, max) {\n        if (points.length === 0) {\n            return;\n        }\n        var p = points[0];\n        var left = p[0];\n        var right = p[0];\n        var top = p[1];\n        var bottom = p[1];\n        var i;\n\n        for (i = 1; i < points.length; i++) {\n            p = points[i];\n            left = mathMin(left, p[0]);\n            right = mathMax(right, p[0]);\n            top = mathMin(top, p[1]);\n            bottom = mathMax(bottom, p[1]);\n        }\n\n        min[0] = left;\n        min[1] = top;\n        max[0] = right;\n        max[1] = bottom;\n    };\n\n    /**\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromLine = function (x0, y0, x1, y1, min, max) {\n        min[0] = mathMin(x0, x1);\n        min[1] = mathMin(y0, y1);\n        max[0] = mathMax(x0, x1);\n        max[1] = mathMax(y0, y1);\n    };\n\n    var xDim = [];\n    var yDim = [];\n    /**\n     * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromCubic = function(\n        x0, y0, x1, y1, x2, y2, x3, y3, min, max\n    ) {\n        var cubicExtrema = curve.cubicExtrema;\n        var cubicAt = curve.cubicAt;\n        var i;\n        var n = cubicExtrema(x0, x1, x2, x3, xDim);\n        min[0] = Infinity;\n        min[1] = Infinity;\n        max[0] = -Infinity;\n        max[1] = -Infinity;\n\n        for (i = 0; i < n; i++) {\n            var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n            min[0] = mathMin(x, min[0]);\n            max[0] = mathMax(x, max[0]);\n        }\n        n = cubicExtrema(y0, y1, y2, y3, yDim);\n        for (i = 0; i < n; i++) {\n            var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n            min[1] = mathMin(y, min[1]);\n            max[1] = mathMax(y, max[1]);\n        }\n\n        min[0] = mathMin(x0, min[0]);\n        max[0] = mathMax(x0, max[0]);\n        min[0] = mathMin(x3, min[0]);\n        max[0] = mathMax(x3, max[0]);\n\n        min[1] = mathMin(y0, min[1]);\n        max[1] = mathMax(y0, max[1]);\n        min[1] = mathMin(y3, min[1]);\n        max[1] = mathMax(y3, max[1]);\n    };\n\n    /**\n     * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromQuadratic = function(x0, y0, x1, y1, x2, y2, min, max) {\n        var quadraticExtremum = curve.quadraticExtremum;\n        var quadraticAt = curve.quadraticAt;\n        // Find extremities, where derivative in x dim or y dim is zero\n        var tx =\n            mathMax(\n                mathMin(quadraticExtremum(x0, x1, x2), 1), 0\n            );\n        var ty =\n            mathMax(\n                mathMin(quadraticExtremum(y0, y1, y2), 1), 0\n            );\n\n        var x = quadraticAt(x0, x1, x2, tx);\n        var y = quadraticAt(y0, y1, y2, ty);\n\n        min[0] = mathMin(x0, x2, x);\n        min[1] = mathMin(y0, y2, y);\n        max[0] = mathMax(x0, x2, x);\n        max[1] = mathMax(y0, y2, y);\n    };\n\n    /**\n     * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n     * @method\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x\n     * @param {number} y\n     * @param {number} rx\n     * @param {number} ry\n     * @param {number} startAngle\n     * @param {number} endAngle\n     * @param {number} anticlockwise\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromArc = function (\n        x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max\n    ) {\n        var vec2Min = vec2.min;\n        var vec2Max = vec2.max;\n\n        var diff = Math.abs(startAngle - endAngle);\n\n\n        if (diff % PI2 < 1e-4 && diff > 1e-4) {\n            // Is a circle\n            min[0] = x - rx;\n            min[1] = y - ry;\n            max[0] = x + rx;\n            max[1] = y + ry;\n            return;\n        }\n\n        start[0] = mathCos(startAngle) * rx + x;\n        start[1] = mathSin(startAngle) * ry + y;\n\n        end[0] = mathCos(endAngle) * rx + x;\n        end[1] = mathSin(endAngle) * ry + y;\n\n        vec2Min(min, start, end);\n        vec2Max(max, start, end);\n\n        // Thresh to [0, Math.PI * 2]\n        startAngle = startAngle % (PI2);\n        if (startAngle < 0) {\n            startAngle = startAngle + PI2;\n        }\n        endAngle = endAngle % (PI2);\n        if (endAngle < 0) {\n            endAngle = endAngle + PI2;\n        }\n\n        if (startAngle > endAngle && !anticlockwise) {\n            endAngle += PI2;\n        }\n        else if (startAngle < endAngle && anticlockwise) {\n            startAngle += PI2;\n        }\n        if (anticlockwise) {\n            var tmp = endAngle;\n            endAngle = startAngle;\n            startAngle = tmp;\n        }\n\n        // var number = 0;\n        // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n        for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n            if (angle > startAngle) {\n                extremity[0] = mathCos(angle) * rx + x;\n                extremity[1] = mathSin(angle) * ry + y;\n\n                vec2Min(min, extremity, min);\n                vec2Max(max, extremity, max);\n            }\n        }\n    };\n\n    module.exports = bbox;\n\n\n\n/***/ }),\n\n/***/ 766:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var eventTool = __webpack_require__(625);\n    var zrUtil = __webpack_require__(606);\n    var Eventful = __webpack_require__(626);\n    var env = __webpack_require__(615);\n    var GestureMgr = __webpack_require__(764);\n\n    var addEventListener = eventTool.addEventListener;\n    var removeEventListener = eventTool.removeEventListener;\n    var normalizeEvent = eventTool.normalizeEvent;\n\n    var TOUCH_CLICK_DELAY = 300;\n\n    var mouseHandlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n\n    var touchHandlerNames = [\n        'touchstart', 'touchend', 'touchmove'\n    ];\n\n    var pointerEventNames = {\n        pointerdown: 1, pointerup: 1, pointermove: 1, pointerout: 1\n    };\n\n    var pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n        var nm = name.replace('mouse', 'pointer');\n        return pointerEventNames[nm] ? nm : name;\n    });\n\n    function eventNameFix(name) {\n        return (name === 'mousewheel' && env.browser.firefox) ? 'DOMMouseScroll' : name;\n    }\n\n    function processGesture(proxy, event, stage) {\n        var gestureMgr = proxy._gestureMgr;\n\n        stage === 'start' && gestureMgr.clear();\n\n        var gestureInfo = gestureMgr.recognize(\n            event,\n            proxy.handler.findHover(event.zrX, event.zrY, null).target,\n            proxy.dom\n        );\n\n        stage === 'end' && gestureMgr.clear();\n\n        // Do not do any preventDefault here. Upper application do that if necessary.\n        if (gestureInfo) {\n            var type = gestureInfo.type;\n            event.gestureEvent = type;\n\n            proxy.handler.dispatchToElement({target: gestureInfo.target}, type, gestureInfo.event);\n        }\n    }\n\n    // function onMSGestureChange(proxy, event) {\n    //     if (event.translationX || event.translationY) {\n    //         // mousemove is carried by MSGesture to reduce the sensitivity.\n    //         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n    //     }\n    //     if (event.scale !== 1) {\n    //         event.pinchX = event.offsetX;\n    //         event.pinchY = event.offsetY;\n    //         event.pinchScale = event.scale;\n    //         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n    //     }\n    // }\n\n    /**\n     * Prevent mouse event from being dispatched after Touch Events action\n     * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n     * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n     * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n     * Result: Blocking Mouse Events for 700ms.\n     */\n    function setTouchTimer(instance) {\n        instance._touching = true;\n        clearTimeout(instance._touchTimer);\n        instance._touchTimer = setTimeout(function () {\n            instance._touching = false;\n        }, 700);\n    }\n\n\n    var domHandlers = {\n        /**\n         * Mouse move handler\n         * @inner\n         * @param {Event} event\n         */\n        mousemove: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            this.trigger('mousemove', event);\n        },\n\n        /**\n         * Mouse out handler\n         * @inner\n         * @param {Event} event\n         */\n        mouseout: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            var element = event.toElement || event.relatedTarget;\n            if (element != this.dom) {\n                while (element && element.nodeType != 9) {\n                    // 忽略包含在root中的dom引起的mouseOut\n                    if (element === this.dom) {\n                        return;\n                    }\n\n                    element = element.parentNode;\n                }\n            }\n\n            this.trigger('mouseout', event);\n        },\n\n        /**\n         * Touch开始响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchstart: function (event) {\n            // Default mouse behaviour should not be disabled here.\n            // For example, page may needs to be slided.\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            this._lastTouchMoment = new Date();\n\n            processGesture(this, event, 'start');\n\n            // In touch device, trigger `mousemove`(`mouseover`) should\n            // be triggered, and must before `mousedown` triggered.\n            domHandlers.mousemove.call(this, event);\n\n            domHandlers.mousedown.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch移动响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchmove: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'change');\n\n            // Mouse move should always be triggered no matter whether\n            // there is gestrue event, because mouse move and pinch may\n            // be used at the same time.\n            domHandlers.mousemove.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch结束响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchend: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'end');\n\n            domHandlers.mouseup.call(this, event);\n\n            // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n            // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n            // we can conveniently implement \"hover style\" in both PC and touch device just\n            // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n            // to remove \"hover style\" on an element, without any additional code for\n            // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n            // style\" will remain for user view)\n\n            // click event should always be triggered no matter whether\n            // there is gestrue event. System click can not be prevented.\n            if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n                domHandlers.click.call(this, event);\n            }\n\n            setTouchTimer(this);\n        },\n\n        pointerdown: function (event) {\n            domHandlers.mousedown.call(this, event);\n\n            // if (useMSGuesture(this, event)) {\n            //     this._msGesture.addPointer(event.pointerId);\n            // }\n        },\n\n        pointermove: function (event) {\n            // FIXME\n            // pointermove is so sensitive that it always triggered when\n            // tap(click) on touch screen, which affect some judgement in\n            // upper application. So, we dont support mousemove on MS touch\n            // device yet.\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mousemove.call(this, event);\n            }\n        },\n\n        pointerup: function (event) {\n            domHandlers.mouseup.call(this, event);\n        },\n\n        pointerout: function (event) {\n            // pointerout will be triggered when tap on touch screen\n            // (IE11+/Edge on MS Surface) after click event triggered,\n            // which is inconsistent with the mousout behavior we defined\n            // in touchend. So we unify them.\n            // (check domHandlers.touchend for detailed explanation)\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mouseout.call(this, event);\n            }\n        }\n    };\n\n    function isPointerFromTouch(event) {\n        var pointerType = event.pointerType;\n        return pointerType === 'pen' || pointerType === 'touch';\n    }\n\n    // function useMSGuesture(handlerProxy, event) {\n    //     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n    // }\n\n    // Common handlers\n    zrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        domHandlers[name] = function (event) {\n            event = normalizeEvent(this.dom, event);\n            this.trigger(name, event);\n        };\n    });\n\n    /**\n     * 为控制类实例初始化dom 事件处理函数\n     *\n     * @inner\n     * @param {module:zrender/Handler} instance 控制类实例\n     */\n    function initDomHandler(instance) {\n        zrUtil.each(touchHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(pointerHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(mouseHandlerNames, function (name) {\n            instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n        });\n\n        function makeMouseHandler(fn, instance) {\n            return function () {\n                if (instance._touching) {\n                    return;\n                }\n                return fn.apply(instance, arguments);\n            };\n        }\n    }\n\n\n    function HandlerDomProxy(dom) {\n        Eventful.call(this);\n\n        this.dom = dom;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._touching = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._touchTimer;\n\n        /**\n         * @private\n         * @type {module:zrender/core/GestureMgr}\n         */\n        this._gestureMgr = new GestureMgr();\n\n        this._handlers = {};\n\n        initDomHandler(this);\n\n        if (env.pointerEventsSupported) { // Only IE11+/Edge\n            // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n            // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n            // at the same time.\n            // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n            // screen, which do not occurs in pointer event.\n            // So we use pointer event to both detect touch gesture and mouse behavior.\n            mountHandlers(pointerHandlerNames, this);\n\n            // FIXME\n            // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n            // which does not prevent defuault behavior occasionally (which may cause view port\n            // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n            // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n            // touch screen. And we only support click behavior on MS touch screen now.\n\n            // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n            // We dont support touch on IE on win7.\n            // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n            // if (typeof MSGesture === 'function') {\n            //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n            //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n            // }\n        }\n        else {\n            if (env.touchEventsSupported) {\n                mountHandlers(touchHandlerNames, this);\n                // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n                // addEventListener(root, 'mouseout', this._mouseoutHandler);\n            }\n\n            // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n            // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n            // mouse event can not be handle in those devices.\n            // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n            // mouseevent after touch event triggered, see `setTouchTimer`.\n            mountHandlers(mouseHandlerNames, this);\n        }\n\n        function mountHandlers(handlerNames, instance) {\n            zrUtil.each(handlerNames, function (name) {\n                addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n            }, instance);\n        }\n    }\n\n    var handlerDomProxyProto = HandlerDomProxy.prototype;\n    handlerDomProxyProto.dispose = function () {\n        var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n        for (var i = 0; i < handlerNames.length; i++) {\n            var name = handlerNames[i];\n            removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n        }\n    };\n\n    handlerDomProxyProto.setCursor = function (cursorStyle) {\n        this.dom.style.cursor = cursorStyle || 'default';\n    };\n\n    zrUtil.mixin(HandlerDomProxy, Eventful);\n\n    module.exports = HandlerDomProxy;\n\n\n/***/ }),\n\n/***/ 767:\n/***/ (function(module, exports, __webpack_require__) {\n\n// CompoundPath to improve performance\n\n\n    var Path = __webpack_require__(612);\n\n    module.exports = Path.extend({\n\n        type: 'compound',\n\n        shape: {\n\n            paths: null\n        },\n\n        _updatePathDirty: function () {\n            var dirtyPath = this.__dirtyPath;\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                // Mark as dirty if any subpath is dirty\n                dirtyPath = dirtyPath || paths[i].__dirtyPath;\n            }\n            this.__dirtyPath = dirtyPath;\n            this.__dirty = this.__dirty || dirtyPath;\n        },\n\n        beforeBrush: function () {\n            this._updatePathDirty();\n            var paths = this.shape.paths || [];\n            var scale = this.getGlobalScale();\n            // Update path scale\n            for (var i = 0; i < paths.length; i++) {\n                if (!paths[i].path) {\n                    paths[i].createPathProxy();\n                }\n                paths[i].path.setScale(scale[0], scale[1]);\n            }\n        },\n\n        buildPath: function (ctx, shape) {\n            var paths = shape.paths || [];\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].buildPath(ctx, paths[i].shape, true);\n            }\n        },\n\n        afterBrush: function () {\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].__dirtyPath = false;\n            }\n        },\n\n        getBoundingRect: function () {\n            this._updatePathDirty();\n            return Path.prototype.getBoundingRect.call(this);\n        }\n    });\n\n\n/***/ }),\n\n/***/ 768:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(606);\n\n    var Gradient = __webpack_require__(645);\n\n    /**\n     * x, y, x2, y2 are all percent from 0 to 1\n     * @param {number} [x=0]\n     * @param {number} [y=0]\n     * @param {number} [x2=1]\n     * @param {number} [y2=0]\n     * @param {Array.<Object>} colorStops\n     * @param {boolean} [globalCoord=false]\n     */\n    var LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'linear', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0 : x;\n\n        this.y = y == null ? 0 : y;\n\n        this.x2 = x2 == null ? 1 : x2;\n\n        this.y2 = y2 == null ? 0 : y2;\n\n        // Can be cloned\n        this.type = 'linear';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    LinearGradient.prototype = {\n\n        constructor: LinearGradient\n    };\n\n    zrUtil.inherits(LinearGradient, Gradient);\n\n    module.exports = LinearGradient;\n\n\n/***/ }),\n\n/***/ 769:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(606);\n\n    var Gradient = __webpack_require__(645);\n\n    /**\n     * x, y, r are all percent from 0 to 1\n     * @param {number} [x=0.5]\n     * @param {number} [y=0.5]\n     * @param {number} [r=0.5]\n     * @param {Array.<Object>} [colorStops]\n     * @param {boolean} [globalCoord=false]\n     */\n    var RadialGradient = function (x, y, r, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'radial', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0.5 : x;\n\n        this.y = y == null ? 0.5 : y;\n\n        this.r = r == null ? 0.5 : r;\n\n        // Can be cloned\n        this.type = 'radial';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    RadialGradient.prototype = {\n\n        constructor: RadialGradient\n    };\n\n    zrUtil.inherits(RadialGradient, Gradient);\n\n    module.exports = RadialGradient;\n\n\n/***/ }),\n\n/***/ 770:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Text element\n * @module zrender/graphic/Text\n *\n * TODO Wrapping\n *\n * Text not support gradient\n */\n\n\n\n    var Displayable = __webpack_require__(644);\n    var zrUtil = __webpack_require__(606);\n    var textContain = __webpack_require__(621);\n    var textHelper = __webpack_require__(647);\n\n    /**\n     * @alias zrender/graphic/Text\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    var Text = function (opts) {\n        Displayable.call(this, opts);\n    };\n\n    Text.prototype = {\n\n        constructor: Text,\n\n        type: 'text',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n\n            // Optimize, avoid normalize every time.\n            this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n            // Use props with prefix 'text'.\n            style.fill = style.stroke = style.shadowBlur = style.shadowColor =\n                style.shadowOffsetX = style.shadowOffsetY = null;\n\n            var text = style.text;\n            // Convert to string\n            text != null && (text += '');\n\n            // Always bind style\n            style.bind(ctx, this, prevEl);\n\n            if (!textHelper.needDrawText(text, style)) {\n                return;\n            }\n\n            this.setTransform(ctx);\n\n            textHelper.renderText(this, ctx, text, style);\n\n            this.restoreTransform(ctx);\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n\n            // Optimize, avoid normalize every time.\n            this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n            if (!this._rect) {\n                var text = style.text;\n                text != null ? (text += '') : (text = '');\n\n                var rect = textContain.getBoundingRect(\n                    style.text + '',\n                    style.font,\n                    style.textAlign,\n                    style.textVerticalAlign,\n                    style.textPadding,\n                    style.rich\n                );\n\n                rect.x += style.x || 0;\n                rect.y += style.y || 0;\n\n                if (textHelper.getStroke(style.textStroke, style.textLineWidth)) {\n                    var w = style.textLineWidth;\n                    rect.x -= w / 2;\n                    rect.y -= w / 2;\n                    rect.width += w;\n                    rect.height += w;\n                }\n\n                this._rect = rect;\n            }\n\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(Text, Displayable);\n\n    module.exports = Text;\n\n\n/***/ }),\n\n/***/ 771:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n\n    var vec2 = __webpack_require__(611);\n    var v2Min = vec2.min;\n    var v2Max = vec2.max;\n    var v2Scale = vec2.scale;\n    var v2Distance = vec2.distance;\n    var v2Add = vec2.add;\n\n    /**\n     * 贝塞尔平滑曲线\n     * @alias module:zrender/shape/util/smoothBezier\n     * @param {Array} points 线段顶点数组\n     * @param {number} smooth 平滑等级, 0-1\n     * @param {boolean} isLoop\n     * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n     *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n     *                           整个折线的包围盒做一个并集用来约束控制点。\n     * @param {Array} 计算出来的控制点数组\n     */\n    module.exports = function (points, smooth, isLoop, constraint) {\n        var cps = [];\n\n        var v = [];\n        var v1 = [];\n        var v2 = [];\n        var prevPoint;\n        var nextPoint;\n\n        var min, max;\n        if (constraint) {\n            min = [Infinity, Infinity];\n            max = [-Infinity, -Infinity];\n            for (var i = 0, len = points.length; i < len; i++) {\n                v2Min(min, min, points[i]);\n                v2Max(max, max, points[i]);\n            }\n            // 与指定的包围盒做并集\n            v2Min(min, min, constraint[0]);\n            v2Max(max, max, constraint[1]);\n        }\n\n        for (var i = 0, len = points.length; i < len; i++) {\n            var point = points[i];\n\n            if (isLoop) {\n                prevPoint = points[i ? i - 1 : len - 1];\n                nextPoint = points[(i + 1) % len];\n            }\n            else {\n                if (i === 0 || i === len - 1) {\n                    cps.push(vec2.clone(points[i]));\n                    continue;\n                }\n                else {\n                    prevPoint = points[i - 1];\n                    nextPoint = points[i + 1];\n                }\n            }\n\n            vec2.sub(v, nextPoint, prevPoint);\n\n            // use degree to scale the handle length\n            v2Scale(v, v, smooth);\n\n            var d0 = v2Distance(point, prevPoint);\n            var d1 = v2Distance(point, nextPoint);\n            var sum = d0 + d1;\n            if (sum !== 0) {\n                d0 /= sum;\n                d1 /= sum;\n            }\n\n            v2Scale(v1, v, -d0);\n            v2Scale(v2, v, d1);\n            var cp0 = v2Add([], point, v1);\n            var cp1 = v2Add([], point, v2);\n            if (constraint) {\n                v2Max(cp0, cp0, min);\n                v2Min(cp0, cp0, max);\n                v2Max(cp1, cp1, min);\n                v2Min(cp1, cp1, max);\n            }\n            cps.push(cp0);\n            cps.push(cp1);\n        }\n\n        if (isLoop) {\n            cps.push(cps.shift());\n        }\n\n        return cps;\n    };\n\n\n\n/***/ }),\n\n/***/ 772:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n    var vec2 = __webpack_require__(611);\n\n    /**\n     * @inner\n     */\n    function interpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    /**\n     * @alias module:zrender/shape/util/smoothSpline\n     * @param {Array} points 线段顶点数组\n     * @param {boolean} isLoop\n     * @return {Array}\n     */\n    module.exports = function (points, isLoop) {\n        var len = points.length;\n        var ret = [];\n\n        var distance = 0;\n        for (var i = 1; i < len; i++) {\n            distance += vec2.distance(points[i - 1], points[i]);\n        }\n\n        var segs = distance / 2;\n        segs = segs < len ? len : segs;\n        for (var i = 0; i < segs; i++) {\n            var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n            var idx = Math.floor(pos);\n\n            var w = pos - idx;\n\n            var p0;\n            var p1 = points[idx % len];\n            var p2;\n            var p3;\n            if (!isLoop) {\n                p0 = points[idx === 0 ? idx : idx - 1];\n                p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n                p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n            }\n            else {\n                p0 = points[(idx - 1 + len) % len];\n                p2 = points[(idx + 1) % len];\n                p3 = points[(idx + 2) % len];\n            }\n\n            var w2 = w * w;\n            var w3 = w * w2;\n\n            ret.push([\n                interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\n                interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\n            ]);\n        }\n        return ret;\n    };\n\n\n\n/***/ }),\n\n/***/ 773:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\n\n\n\n    var textHelper = __webpack_require__(647);\n    var BoundingRect = __webpack_require__(617);\n\n    var tmpRect = new BoundingRect();\n\n    var RectText = function () {};\n\n    RectText.prototype = {\n\n        constructor: RectText,\n\n        /**\n         * Draw text in a rect with specified position.\n         * @param  {CanvasRenderingContext2D} ctx\n         * @param  {Object} rect Displayable rect\n         */\n        drawRectText: function (ctx, rect) {\n            var style = this.style;\n\n            rect = style.textRect || rect;\n\n            // Optimize, avoid normalize every time.\n            this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n            var text = style.text;\n\n            // Convert to string\n            text != null && (text += '');\n\n            if (!textHelper.needDrawText(text, style)) {\n                return;\n            }\n\n            // FIXME\n            ctx.save();\n\n            // Transform rect to view space\n            var transform = this.transform;\n            if (!style.transformText) {\n                if (transform) {\n                    tmpRect.copy(rect);\n                    tmpRect.applyTransform(transform);\n                    rect = tmpRect;\n                }\n            }\n            else {\n                this.setTransform(ctx);\n            }\n\n            // transformText and textRotation can not be used at the same time.\n            textHelper.renderText(this, ctx, text, style, rect);\n\n            ctx.restore();\n        }\n    };\n\n    module.exports = RectText;\n\n\n/***/ }),\n\n/***/ 774:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\n \n\n    module.exports = __webpack_require__(612).extend({\n\n        type: 'arc',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        style: {\n\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r + x, unitY * r + y);\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n        }\n    });\n\n\n/***/ }),\n\n/***/ 775:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\n\n\n    var curveTool = __webpack_require__(622);\n    var vec2 = __webpack_require__(611);\n    var quadraticSubdivide = curveTool.quadraticSubdivide;\n    var cubicSubdivide = curveTool.cubicSubdivide;\n    var quadraticAt = curveTool.quadraticAt;\n    var cubicAt = curveTool.cubicAt;\n    var quadraticDerivativeAt = curveTool.quadraticDerivativeAt;\n    var cubicDerivativeAt = curveTool.cubicDerivativeAt;\n\n    var out = [];\n\n    function someVectorAt(shape, t, isTangent) {\n        var cpx2 = shape.cpx2;\n        var cpy2 = shape.cpy2;\n        if (cpx2 === null || cpy2 === null) {\n            return [\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t),\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)\n            ];\n        }\n        else {\n            return [\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t),\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)\n            ];\n        }\n    }\n    module.exports = __webpack_require__(612).extend({\n\n        type: 'bezier-curve',\n\n        shape: {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n            cpx1: 0,\n            cpy1: 0,\n            // cpx2: 0,\n            // cpy2: 0\n\n            // Curve show percent, for animating\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var cpx1 = shape.cpx1;\n            var cpy1 = shape.cpy1;\n            var cpx2 = shape.cpx2;\n            var cpy2 = shape.cpy2;\n            var percent = shape.percent;\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (cpx2 == null || cpy2 == null) {\n                if (percent < 1) {\n                    quadraticSubdivide(\n                        x1, cpx1, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    x2 = out[2];\n                    quadraticSubdivide(\n                        y1, cpy1, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    y2 = out[2];\n                }\n\n                ctx.quadraticCurveTo(\n                    cpx1, cpy1,\n                    x2, y2\n                );\n            }\n            else {\n                if (percent < 1) {\n                    cubicSubdivide(\n                        x1, cpx1, cpx2, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    cpx2 = out[2];\n                    x2 = out[3];\n                    cubicSubdivide(\n                        y1, cpy1, cpy2, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    cpy2 = out[2];\n                    y2 = out[3];\n                }\n                ctx.bezierCurveTo(\n                    cpx1, cpy1,\n                    cpx2, cpy2,\n                    x2, y2\n                );\n            }\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        pointAt: function (t) {\n            return someVectorAt(this.shape, t, false);\n        },\n\n        /**\n         * Get tangent at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        tangentAt: function (t) {\n            var p = someVectorAt(this.shape, t, true);\n            return vec2.normalize(p, p);\n        }\n    });\n\n\n\n/***/ }),\n\n/***/ 776:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\n\n\n\n    module.exports = __webpack_require__(612).extend({\n\n        type: 'circle',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0\n        },\n\n\n        buildPath : function (ctx, shape, inBundle) {\n            // Better stroking in ShapeBundle\n            // Always do it may have performence issue ( fill may be 2x more cost)\n            if (inBundle) {\n                ctx.moveTo(shape.cx + shape.r, shape.cy);\n            }\n            // else {\n            //     if (ctx.allocate && !ctx.data.length) {\n            //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n            //     }\n            // }\n            // Better stroking in ShapeBundle\n            // ctx.moveTo(shape.cx + shape.r, shape.cy);\n            ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n        }\n    });\n\n\n\n/***/ }),\n\n/***/ 777:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\n\n    module.exports = __webpack_require__(612).extend({\n\n        type: 'line',\n\n        shape: {\n            // Start point\n            x1: 0,\n            y1: 0,\n            // End point\n            x2: 0,\n            y2: 0,\n\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var percent = shape.percent;\n\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (percent < 1) {\n                x2 = x1 * (1 - percent) + x2 * percent;\n                y2 = y1 * (1 - percent) + y2 * percent;\n            }\n            ctx.lineTo(x2, y2);\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} percent\n         * @return {Array.<number>}\n         */\n        pointAt: function (p) {\n            var shape = this.shape;\n            return [\n                shape.x1 * (1 - p) + shape.x2 * p,\n                shape.y1 * (1 - p) + shape.y2 * p\n            ];\n        }\n    });\n\n\n\n/***/ }),\n\n/***/ 778:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\n\n\n    var polyHelper = __webpack_require__(678);\n\n    module.exports = __webpack_require__(612).extend({\n        \n        type: 'polygon',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, true);\n        }\n    });\n\n\n/***/ }),\n\n/***/ 779:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\n\n\n    var polyHelper = __webpack_require__(678);\n\n    module.exports = __webpack_require__(612).extend({\n        \n        type: 'polyline',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        style: {\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, false);\n        }\n    });\n\n\n/***/ }),\n\n/***/ 780:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\n\n\n    var roundRectHelper = __webpack_require__(679);\n\n    module.exports = __webpack_require__(612).extend({\n\n        type: 'rect',\n\n        shape: {\n            // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n            // r缩写为1         相当于 [1, 1, 1, 1]\n            // r缩写为[1]       相当于 [1, 1, 1, 1]\n            // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n            // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n            r: 0,\n\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            if (!shape.r) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, shape);\n            }\n            ctx.closePath();\n            return;\n        }\n    });\n\n\n\n/***/ }),\n\n/***/ 781:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\n\n\n    module.exports = __webpack_require__(612).extend({\n\n        type: 'ring',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0,\n            r0: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.cx;\n            var y = shape.cy;\n            var PI2 = Math.PI * 2;\n            ctx.moveTo(x + shape.r, y);\n            ctx.arc(x, y, shape.r, 0, PI2, false);\n            ctx.moveTo(x + shape.r0, y);\n            ctx.arc(x, y, shape.r0, 0, PI2, true);\n        }\n    });\n\n\n\n/***/ }),\n\n/***/ 782:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\n\n\n\n    var Path = __webpack_require__(612);\n    var fixClipWithShadow = __webpack_require__(677);\n\n    module.exports = Path.extend({\n\n        type: 'sector',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r0: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        brush: fixClipWithShadow(Path.prototype.brush),\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r0 = Math.max(shape.r0 || 0, 0);\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n\n            ctx.lineTo(unitX * r + x, unitY * r + y);\n\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n\n            ctx.lineTo(\n                Math.cos(endAngle) * r0 + x,\n                Math.sin(endAngle) * r0 + y\n            );\n\n            if (r0 !== 0) {\n                ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n            }\n\n            ctx.closePath();\n        }\n    });\n\n\n\n/***/ }),\n\n/***/ 783:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module zrender/mixin/Animatable\n */\n\n\n    var Animator = __webpack_require__(668);\n    var util = __webpack_require__(606);\n    var isString = util.isString;\n    var isFunction = util.isFunction;\n    var isObject = util.isObject;\n    var log = __webpack_require__(673);\n\n    /**\n     * @alias modue:zrender/mixin/Animatable\n     * @constructor\n     */\n    var Animatable = function () {\n\n        /**\n         * @type {Array.<module:zrender/animation/Animator>}\n         * @readOnly\n         */\n        this.animators = [];\n    };\n\n    Animatable.prototype = {\n\n        constructor: Animatable,\n\n        /**\n         * 动画\n         *\n         * @param {string} path The path to fetch value from object, like 'a.b.c'.\n         * @param {boolean} [loop] Whether to loop animation.\n         * @return {module:zrender/animation/Animator}\n         * @example:\n         *     el.animate('style', false)\n         *         .when(1000, {x: 10} )\n         *         .done(function(){ // Animation done })\n         *         .start()\n         */\n        animate: function (path, loop) {\n            var target;\n            var animatingShape = false;\n            var el = this;\n            var zr = this.__zr;\n            if (path) {\n                var pathSplitted = path.split('.');\n                var prop = el;\n                // If animating shape\n                animatingShape = pathSplitted[0] === 'shape';\n                for (var i = 0, l = pathSplitted.length; i < l; i++) {\n                    if (!prop) {\n                        continue;\n                    }\n                    prop = prop[pathSplitted[i]];\n                }\n                if (prop) {\n                    target = prop;\n                }\n            }\n            else {\n                target = el;\n            }\n\n            if (!target) {\n                log(\n                    'Property \"'\n                    + path\n                    + '\" is not existed in element '\n                    + el.id\n                );\n                return;\n            }\n\n            var animators = el.animators;\n\n            var animator = new Animator(target, loop);\n\n            animator.during(function (target) {\n                el.dirty(animatingShape);\n            })\n            .done(function () {\n                // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n                animators.splice(util.indexOf(animators, animator), 1);\n            });\n\n            animators.push(animator);\n\n            // If animate after added to the zrender\n            if (zr) {\n                zr.animation.addAnimator(animator);\n            }\n\n            return animator;\n        },\n\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stopAnimation: function (forwardToLast) {\n            var animators = this.animators;\n            var len = animators.length;\n            for (var i = 0; i < len; i++) {\n                animators[i].stop(forwardToLast);\n            }\n            animators.length = 0;\n\n            return this;\n        },\n\n        /**\n         * @param {Object} target\n         * @param {number} [time=500] Time in ms\n         * @param {string} [easing='linear']\n         * @param {number} [delay=0]\n         * @param {Function} [callback]\n         * @param {Function} [forceAnimate] Prevent stop animation and callback\n         *        immediently when target values are the same as current values.\n         *\n         * @example\n         *  // Animate position\n         *  el.animateTo({\n         *      position: [10, 10]\n         *  }, function () { // done })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n         *  el.animateTo({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100, 'cubicOut', function () { // done })\n         */\n         // TODO Return animation key\n        animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n            // animateTo(target, time, easing, callback);\n            if (isString(delay)) {\n                callback = easing;\n                easing = delay;\n                delay = 0;\n            }\n            // animateTo(target, time, delay, callback);\n            else if (isFunction(easing)) {\n                callback = easing;\n                easing = 'linear';\n                delay = 0;\n            }\n            // animateTo(target, time, callback);\n            else if (isFunction(delay)) {\n                callback = delay;\n                delay = 0;\n            }\n            // animateTo(target, callback)\n            else if (isFunction(time)) {\n                callback = time;\n                time = 500;\n            }\n            // animateTo(target)\n            else if (!time) {\n                time = 500;\n            }\n            // Stop all previous animations\n            this.stopAnimation();\n            this._animateToShallow('', this, target, time, delay, easing, callback);\n\n            // Animators may be removed immediately after start\n            // if there is nothing to animate\n            var animators = this.animators.slice();\n            var count = animators.length;\n            function done() {\n                count--;\n                if (!count) {\n                    callback && callback();\n                }\n            }\n\n            // No animators. This should be checked before animators[i].start(),\n            // because 'done' may be executed immediately if no need to animate.\n            if (!count) {\n                callback && callback();\n            }\n            // Start after all animators created\n            // Incase any animator is done immediately when all animation properties are not changed\n            for (var i = 0; i < animators.length; i++) {\n                animators[i]\n                    .done(done)\n                    .start(easing, forceAnimate);\n            }\n        },\n\n        /**\n         * @private\n         * @param {string} path=''\n         * @param {Object} source=this\n         * @param {Object} target\n         * @param {number} [time=500]\n         * @param {number} [delay=0]\n         *\n         * @example\n         *  // Animate position\n         *  el._animateToShallow({\n         *      position: [10, 10]\n         *  })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms\n         *  el._animateToShallow({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100)\n         */\n        _animateToShallow: function (path, source, target, time, delay) {\n            var objShallow = {};\n            var propertyCount = 0;\n            for (var name in target) {\n                if (!target.hasOwnProperty(name)) {\n                    continue;\n                }\n\n                if (source[name] != null) {\n                    if (isObject(target[name]) && !util.isArrayLike(target[name])) {\n                        this._animateToShallow(\n                            path ? path + '.' + name : name,\n                            source[name],\n                            target[name],\n                            time,\n                            delay\n                        );\n                    }\n                    else {\n                        objShallow[name] = target[name];\n                        propertyCount++;\n                    }\n                }\n                else if (target[name] != null) {\n                    // Attr directly if not has property\n                    // FIXME, if some property not needed for element ?\n                    if (!path) {\n                        this.attr(name, target[name]);\n                    }\n                    else {  // Shape or style\n                        var props = {};\n                        props[path] = {};\n                        props[path][name] = target[name];\n                        this.attr(props);\n                    }\n                }\n            }\n\n            if (propertyCount > 0) {\n                this.animate(path, false)\n                    .when(time == null ? 500 : time, objShallow)\n                    .delay(delay || 0);\n            }\n\n            return this;\n        }\n    };\n\n    module.exports = Animatable;\n\n\n/***/ }),\n\n/***/ 784:\n/***/ (function(module, exports) {\n\n// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\n\n    function Draggable() {\n\n        this.on('mousedown', this._dragStart, this);\n        this.on('mousemove', this._drag, this);\n        this.on('mouseup', this._dragEnd, this);\n        this.on('globalout', this._dragEnd, this);\n        // this._dropTarget = null;\n        // this._draggingTarget = null;\n\n        // this._x = 0;\n        // this._y = 0;\n    }\n\n    Draggable.prototype = {\n\n        constructor: Draggable,\n\n        _dragStart: function (e) {\n            var draggingTarget = e.target;\n            if (draggingTarget && draggingTarget.draggable) {\n                this._draggingTarget = draggingTarget;\n                draggingTarget.dragging = true;\n                this._x = e.offsetX;\n                this._y = e.offsetY;\n\n                this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n            }\n        },\n\n        _drag: function (e) {\n            var draggingTarget = this._draggingTarget;\n            if (draggingTarget) {\n\n                var x = e.offsetX;\n                var y = e.offsetY;\n\n                var dx = x - this._x;\n                var dy = y - this._y;\n                this._x = x;\n                this._y = y;\n\n                draggingTarget.drift(dx, dy, e);\n                this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n\n                var dropTarget = this.findHover(x, y, draggingTarget).target;\n                var lastDropTarget = this._dropTarget;\n                this._dropTarget = dropTarget;\n\n                if (draggingTarget !== dropTarget) {\n                    if (lastDropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n                    }\n                    if (dropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n                    }\n                }\n            }\n        },\n\n        _dragEnd: function (e) {\n            var draggingTarget = this._draggingTarget;\n\n            if (draggingTarget) {\n                draggingTarget.dragging = false;\n            }\n\n            this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n            if (this._dropTarget) {\n                this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n            }\n\n            this._draggingTarget = null;\n            this._dropTarget = null;\n        }\n\n    };\n\n    function param(target, e) {\n        return {target: target, topTarget: e && e.topTarget};\n    }\n\n    module.exports = Draggable;\n\n\n/***/ }),\n\n/***/ 785:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Path = __webpack_require__(612);\n    var PathProxy = __webpack_require__(635);\n    var transformPath = __webpack_require__(786);\n\n    // command chars\n    var cc = [\n        'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\n        'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\n    ];\n\n    var mathSqrt = Math.sqrt;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n    var PI = Math.PI;\n\n    var vMag = function(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n    var vRatio = function(u, v) {\n        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n    var vAngle = function(u, v) {\n        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)\n                * Math.acos(vRatio(u, v));\n    };\n\n    function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n        var psi = psiDeg * (PI / 180.0);\n        var xp = mathCos(psi) * (x1 - x2) / 2.0\n                 + mathSin(psi) * (y1 - y2) / 2.0;\n        var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0\n                 + mathCos(psi) * (y1 - y2) / 2.0;\n\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n\n        if (lambda > 1) {\n            rx *= mathSqrt(lambda);\n            ry *= mathSqrt(lambda);\n        }\n\n        var f = (fa === fs ? -1 : 1)\n            * mathSqrt((((rx * rx) * (ry * ry))\n                    - ((rx * rx) * (yp * yp))\n                    - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)\n                    + (ry * ry) * (xp * xp))\n                ) || 0;\n\n        var cxp = f * rx * yp / ry;\n        var cyp = f * -ry * xp / rx;\n\n        var cx = (x1 + x2) / 2.0\n                 + mathCos(psi) * cxp\n                 - mathSin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0\n                + mathSin(psi) * cxp\n                + mathCos(psi) * cyp;\n\n        var theta = vAngle([ 1, 0 ], [ (xp - cxp) / rx, (yp - cyp) / ry ]);\n        var u = [ (xp - cxp) / rx, (yp - cyp) / ry ];\n        var v = [ (-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry ];\n        var dTheta = vAngle(u, v);\n\n        if (vRatio(u, v) <= -1) {\n            dTheta = PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * PI;\n        }\n\n        path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n    }\n\n    function createPathProxyFromString(data) {\n        if (!data) {\n            return [];\n        }\n\n        // command string\n        var cs = data.replace(/-/g, ' -')\n            .replace(/  /g, ' ')\n            .replace(/ /g, ',')\n            .replace(/,,/g, ',');\n\n        var n;\n        // create pipes so that we can split the data\n        for (n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n\n        // create array\n        var arr = cs.split('|');\n        // init context point\n        var cpx = 0;\n        var cpy = 0;\n\n        var path = new PathProxy();\n        var CMD = PathProxy.CMD;\n\n        var prevCmd;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            var off = 0;\n            var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n            var cmd;\n\n            if (p.length > 0 && p[0] === '') {\n                p.shift();\n            }\n\n            for (var i = 0; i < p.length; i++) {\n                p[i] = parseFloat(p[i]);\n            }\n            while (off < p.length && !isNaN(p[off])) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var ctlPtx;\n                var ctlPty;\n\n                var rx;\n                var ry;\n                var psi;\n                var fa;\n                var fs;\n\n                var x1 = cpx;\n                var y1 = cpy;\n\n                // convert l, H, h, V, and v to L\n                switch (c) {\n                    case 'l':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'm':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'C':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]\n                        );\n                        cpx = p[off - 2];\n                        cpy = p[off - 1];\n                        break;\n                    case 'c':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy\n                        );\n                        cpx += p[off - 2];\n                        cpy += p[off - 1];\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = cpx + p[off++];\n                        y1 = cpy + p[off++];\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 'Q':\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'q':\n                        x1 = p[off++] + cpx;\n                        y1 = p[off++] + cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                    case 'a':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                }\n            }\n\n            if (c === 'z' || c === 'Z') {\n                cmd = CMD.Z;\n                path.addData(cmd);\n            }\n\n            prevCmd = cmd;\n        }\n\n        path.toStatic();\n\n        return path;\n    }\n\n    // TODO Optimize double memory cost problem\n    function createPathOptions(str, opts) {\n        var pathProxy = createPathProxyFromString(str);\n        opts = opts || {};\n        opts.buildPath = function (path) {\n            if (path.setData) {\n                path.setData(pathProxy.data);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            }\n            else {\n                var ctx = path;\n                pathProxy.rebuildPath(ctx);\n            }\n        };\n\n        opts.applyTransform = function (m) {\n            transformPath(pathProxy, m);\n\n            this.dirty(true);\n        };\n\n        return opts;\n    }\n\n    module.exports = {\n        /**\n         * Create a Path object from path string data\n         * http://www.w3.org/TR/SVG/paths.html#PathData\n         * @param  {Object} opts Other options\n         */\n        createFromString: function (str, opts) {\n            return new Path(createPathOptions(str, opts));\n        },\n\n        /**\n         * Create a Path class from path string data\n         * @param  {string} str\n         * @param  {Object} opts Other options\n         */\n        extendFromString: function (str, opts) {\n            return Path.extend(createPathOptions(str, opts));\n        },\n\n        /**\n         * Merge multiple paths\n         */\n        // TODO Apply transform\n        // TODO stroke dash\n        // TODO Optimize double memory cost problem\n        mergePath: function (pathEls, opts) {\n            var pathList = [];\n            var len = pathEls.length;\n            for (var i = 0; i < len; i++) {\n                var pathEl = pathEls[i];\n                if (!pathEl.path) {\n                    pathEl.createPathProxy();\n                }\n                if (pathEl.__dirtyPath) {\n                    pathEl.buildPath(pathEl.path, pathEl.shape, true);\n                }\n                pathList.push(pathEl.path);\n            }\n\n            var pathBundle = new Path(opts);\n            // Need path proxy.\n            pathBundle.createPathProxy();\n            pathBundle.buildPath = function (path) {\n                path.appendPath(pathList);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            };\n\n            return pathBundle;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 786:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var CMD = __webpack_require__(635).CMD;\n    var vec2 = __webpack_require__(611);\n    var v2ApplyTransform = vec2.applyTransform;\n\n    var points = [[], [], []];\n    var mathSqrt = Math.sqrt;\n    var mathAtan2 = Math.atan2;\n    function transformPath(path, m) {\n        var data = path.data;\n        var cmd;\n        var nPoint;\n        var i;\n        var j;\n        var k;\n        var p;\n\n        var M = CMD.M;\n        var C = CMD.C;\n        var L = CMD.L;\n        var R = CMD.R;\n        var A = CMD.A;\n        var Q = CMD.Q;\n\n        for (i = 0, j = 0; i < data.length;) {\n            cmd = data[i++];\n            j = i;\n            nPoint = 0;\n\n            switch (cmd) {\n                case M:\n                    nPoint = 1;\n                    break;\n                case L:\n                    nPoint = 1;\n                    break;\n                case C:\n                    nPoint = 3;\n                    break;\n                case Q:\n                    nPoint = 2;\n                    break;\n                case A:\n                    var x = m[4];\n                    var y = m[5];\n                    var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n                    var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n                    var angle = mathAtan2(-m[1] / sy, m[0] / sx);\n                    // cx\n                    data[i] *= sx;\n                    data[i++] += x;\n                    // cy\n                    data[i] *= sy;\n                    data[i++] += y;\n                    // Scale rx and ry\n                    // FIXME Assume psi is 0 here\n                    data[i++] *= sx;\n                    data[i++] *= sy;\n\n                    // Start angle\n                    data[i++] += angle;\n                    // end angle\n                    data[i++] += angle;\n                    // FIXME psi\n                    i += 2;\n                    j = i;\n                    break;\n                case R:\n                    // x0, y0\n                    p[0] = data[i++];\n                    p[1] = data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n                    // x1, y1\n                    p[0] += data[i++];\n                    p[1] += data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n            }\n\n            for (k = 0; k < nPoint; k++) {\n                var p = points[k];\n                p[0] = data[i++];\n                p[1] = data[i++];\n\n                v2ApplyTransform(p, p, m);\n                // Write back\n                data[j++] = p[0];\n                data[j++] = p[1];\n            }\n        }\n    }\n\n    module.exports = transformPath;\n\n\n/***/ }),\n\n/***/ 787:\n/***/ (function(module, exports, __webpack_require__) {\n\n/*!\n * ZRender, a high performance 2d drawing library.\n *\n * Copyright (c) 2013, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n */\n// Global defines\n\n    var guid = __webpack_require__(672);\n    var env = __webpack_require__(615);\n    var zrUtil = __webpack_require__(606);\n\n    var Handler = __webpack_require__(751);\n    var Storage = __webpack_require__(754);\n    var Animation = __webpack_require__(755);\n    var HandlerProxy = __webpack_require__(766);\n\n    var useVML = !env.canvasSupported;\n\n    var painterCtors = {\n        canvas: __webpack_require__(753)\n    };\n\n    var instances = {};    // ZRender实例map索引\n\n    var zrender = {};\n\n    /**\n     * @type {string}\n     */\n    zrender.version = '3.6.0';\n\n    /**\n     * Initializing a zrender instance\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @return {module:zrender/ZRender}\n     */\n    zrender.init = function (dom, opts) {\n        var zr = new ZRender(guid(), dom, opts);\n        instances[zr.id] = zr;\n        return zr;\n    };\n\n    /**\n     * Dispose zrender instance\n     * @param {module:zrender/ZRender} zr\n     */\n    zrender.dispose = function (zr) {\n        if (zr) {\n            zr.dispose();\n        }\n        else {\n            for (var key in instances) {\n                if (instances.hasOwnProperty(key)) {\n                    instances[key].dispose();\n                }\n            }\n            instances = {};\n        }\n\n        return zrender;\n    };\n\n    /**\n     * Get zrender instance by id\n     * @param {string} id zrender instance id\n     * @return {module:zrender/ZRender}\n     */\n    zrender.getInstance = function (id) {\n        return instances[id];\n    };\n\n    zrender.registerPainter = function (name, Ctor) {\n        painterCtors[name] = Ctor;\n    };\n\n    function delInstance(id) {\n        delete instances[id];\n    }\n\n    /**\n     * @module zrender/ZRender\n     */\n    /**\n     * @constructor\n     * @alias module:zrender/ZRender\n     * @param {string} id\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     */\n    var ZRender = function (id, dom, opts) {\n\n        opts = opts || {};\n\n        /**\n         * @type {HTMLDomElement}\n         */\n        this.dom = dom;\n\n        /**\n         * @type {string}\n         */\n        this.id = id;\n\n        var self = this;\n        var storage = new Storage();\n\n        var rendererType = opts.renderer;\n        // TODO WebGL\n        if (useVML) {\n            if (!painterCtors.vml) {\n                throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n            }\n            rendererType = 'vml';\n        }\n        else if (!rendererType || !painterCtors[rendererType]) {\n            rendererType = 'canvas';\n        }\n        var painter = new painterCtors[rendererType](dom, storage, opts);\n\n        this.storage = storage;\n        this.painter = painter;\n\n        var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n        this.handler = new Handler(storage, painter, handerProxy, painter.root);\n\n        /**\n         * @type {module:zrender/animation/Animation}\n         */\n        this.animation = new Animation({\n            stage: {\n                update: zrUtil.bind(this.flush, this)\n            }\n        });\n        this.animation.start();\n\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._needsRefresh;\n\n        // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n        // FIXME 有点ugly\n        var oldDelFromStorage = storage.delFromStorage;\n        var oldAddToStorage = storage.addToStorage;\n\n        storage.delFromStorage = function (el) {\n            oldDelFromStorage.call(storage, el);\n\n            el && el.removeSelfFromZr(self);\n        };\n\n        storage.addToStorage = function (el) {\n            oldAddToStorage.call(storage, el);\n\n            el.addSelfToZr(self);\n        };\n    };\n\n    ZRender.prototype = {\n\n        constructor: ZRender,\n        /**\n         * 获取实例唯一标识\n         * @return {string}\n         */\n        getId: function () {\n            return this.id;\n        },\n\n        /**\n         * 添加元素\n         * @param  {module:zrender/Element} el\n         */\n        add: function (el) {\n            this.storage.addRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * 删除元素\n         * @param  {module:zrender/Element} el\n         */\n        remove: function (el) {\n            this.storage.delRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Change configuration of layer\n         * @param {string} zLevel\n         * @param {Object} config\n         * @param {string} [config.clearColor=0] Clear color\n         * @param {string} [config.motionBlur=false] If enable motion blur\n         * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n        */\n        configLayer: function (zLevel, config) {\n            this.painter.configLayer(zLevel, config);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Repaint the canvas immediately\n         */\n        refreshImmediately: function () {\n            // var start = new Date();\n            // Clear needsRefresh ahead to avoid something wrong happens in refresh\n            // Or it will cause zrender refreshes again and again.\n            this._needsRefresh = false;\n            this.painter.refresh();\n            /**\n             * Avoid trigger zr.refresh in Element#beforeUpdate hook\n             */\n            this._needsRefresh = false;\n            // var end = new Date();\n\n            // var log = document.getElementById('log');\n            // if (log) {\n            //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n            // }\n        },\n\n        /**\n         * Mark and repaint the canvas in the next frame of browser\n         */\n        refresh: function() {\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Perform all refresh\n         */\n        flush: function () {\n            if (this._needsRefresh) {\n                this.refreshImmediately();\n            }\n            if (this._needsRefreshHover) {\n                this.refreshHoverImmediately();\n            }\n        },\n\n        /**\n         * Add element to hover layer\n         * @param  {module:zrender/Element} el\n         * @param {Object} style\n         */\n        addHover: function (el, style) {\n            if (this.painter.addHover) {\n                this.painter.addHover(el, style);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Add element from hover layer\n         * @param  {module:zrender/Element} el\n         */\n        removeHover: function (el) {\n            if (this.painter.removeHover) {\n                this.painter.removeHover(el);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Clear all hover elements in hover layer\n         * @param  {module:zrender/Element} el\n         */\n        clearHover: function () {\n            if (this.painter.clearHover) {\n                this.painter.clearHover();\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Refresh hover in next frame\n         */\n        refreshHover: function () {\n            this._needsRefreshHover = true;\n        },\n\n        /**\n         * Refresh hover immediately\n         */\n        refreshHoverImmediately: function () {\n            this._needsRefreshHover = false;\n            this.painter.refreshHover && this.painter.refreshHover();\n        },\n\n        /**\n         * Resize the canvas.\n         * Should be invoked when container size is changed\n         * @param {Object} [opts]\n         * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n         * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n         */\n        resize: function(opts) {\n            opts = opts || {};\n            this.painter.resize(opts.width, opts.height);\n            this.handler.resize();\n        },\n\n        /**\n         * Stop and clear all animation immediately\n         */\n        clearAnimation: function () {\n            this.animation.clear();\n        },\n\n        /**\n         * Get container width\n         */\n        getWidth: function() {\n            return this.painter.getWidth();\n        },\n\n        /**\n         * Get container height\n         */\n        getHeight: function() {\n            return this.painter.getHeight();\n        },\n\n        /**\n         * Export the canvas as Base64 URL\n         * @param {string} type\n         * @param {string} [backgroundColor='#fff']\n         * @return {string} Base64 URL\n         */\n        // toDataURL: function(type, backgroundColor) {\n        //     return this.painter.getRenderedCanvas({\n        //         backgroundColor: backgroundColor\n        //     }).toDataURL(type);\n        // },\n\n        /**\n         * Converting a path to image.\n         * It has much better performance of drawing image rather than drawing a vector path.\n         * @param {module:zrender/graphic/Path} e\n         * @param {number} width\n         * @param {number} height\n         */\n        pathToImage: function(e, dpr) {\n            return this.painter.pathToImage(e, dpr);\n        },\n\n        /**\n         * Set default cursor\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            this.handler.setCursorStyle(cursorStyle);\n        },\n\n        /**\n         * Find hovered element\n         * @param {number} x\n         * @param {number} y\n         * @return {Object} {target, topTarget}\n         */\n        findHover: function (x, y) {\n            return this.handler.findHover(x, y);\n        },\n\n        /**\n         * Bind event\n         *\n         * @param {string} eventName Event name\n         * @param {Function} eventHandler Handler function\n         * @param {Object} [context] Context object\n         */\n        on: function(eventName, eventHandler, context) {\n            this.handler.on(eventName, eventHandler, context);\n        },\n\n        /**\n         * Unbind event\n         * @param {string} eventName Event name\n         * @param {Function} [eventHandler] Handler function\n         */\n        off: function(eventName, eventHandler) {\n            this.handler.off(eventName, eventHandler);\n        },\n\n        /**\n         * Trigger event manually\n         *\n         * @param {string} eventName Event name\n         * @param {event=} event Event object\n         */\n        trigger: function (eventName, event) {\n            this.handler.trigger(eventName, event);\n        },\n\n\n        /**\n         * Clear all objects and the canvas.\n         */\n        clear: function () {\n            this.storage.delRoot();\n            this.painter.clear();\n        },\n\n        /**\n         * Dispose self.\n         */\n        dispose: function () {\n            this.animation.stop();\n\n            this.clear();\n            this.storage.dispose();\n            this.painter.dispose();\n            this.handler.dispose();\n\n            this.animation =\n            this.storage =\n            this.painter =\n            this.handler = null;\n\n            delInstance(this.id);\n        }\n    };\n\n    module.exports = zrender;\n\n\n\n/***/ }),\n\n/***/ 801:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var echarts = __webpack_require__(607);\n    var zrUtil = __webpack_require__(606);\n    module.exports = function (seriesType, actionInfos) {\n        zrUtil.each(actionInfos, function (actionInfo) {\n            actionInfo.update = 'updateView';\n            /**\n             * @payload\n             * @property {string} seriesName\n             * @property {string} name\n             */\n            echarts.registerAction(actionInfo, function (payload, ecModel) {\n                var selected = {};\n                ecModel.eachComponent(\n                    {mainType: 'series', subType: seriesType, query: payload},\n                    function (seriesModel) {\n                        if (seriesModel[actionInfo.method]) {\n                            seriesModel[actionInfo.method](\n                                payload.name,\n                                payload.dataIndex\n                            );\n                        }\n                        var data = seriesModel.getData();\n                        // Create selected map\n                        data.each(function (idx) {\n                            var name = data.getName(idx);\n                            selected[name] = seriesModel.isSelected(name)\n                                || false;\n                        });\n                    }\n                );\n                return {\n                    name: payload.name,\n                    selected: selected\n                };\n            });\n        });\n    };\n\n\n/***/ }),\n\n/***/ 802:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(606);\n\n    __webpack_require__(685);\n\n    __webpack_require__(803);\n    __webpack_require__(804);\n\n    var barLayoutGrid = __webpack_require__(828);\n    var echarts = __webpack_require__(607);\n\n    echarts.registerLayout(zrUtil.curry(barLayoutGrid, 'bar'));\n\n    // Visual coding for legend\n    echarts.registerVisual(function (ecModel) {\n        ecModel.eachSeriesByType('bar', function (seriesModel) {\n            var data = seriesModel.getData();\n            data.setVisual('legendSymbol', 'roundRect');\n        });\n    });\n\n    // In case developer forget to include grid component\n    __webpack_require__(683);\n\n\n/***/ }),\n\n/***/ 803:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    module.exports = __webpack_require__(805).extend({\n\n        type: 'series.bar',\n\n        dependencies: ['grid', 'polar'],\n\n        brushSelector: 'rect'\n    });\n\n\n/***/ }),\n\n/***/ 804:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var graphic = __webpack_require__(608);\n    var helper = __webpack_require__(807);\n\n    var BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'normal', 'barBorderWidth'];\n\n    // FIXME\n    // Just for compatible with ec2.\n    zrUtil.extend(__webpack_require__(614).prototype, __webpack_require__(806));\n\n    var BarView = __webpack_require__(607).extendChartView({\n\n        type: 'bar',\n\n        render: function (seriesModel, ecModel, api) {\n            var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n            if (coordinateSystemType === 'cartesian2d'\n                || coordinateSystemType === 'polar'\n            ) {\n                this._render(seriesModel, ecModel, api);\n            }\n            else if (__DEV__) {\n                console.warn('Only cartesian2d and polar supported for bar.');\n            }\n\n            return this.group;\n        },\n\n        dispose: zrUtil.noop,\n\n        _render: function (seriesModel, ecModel, api) {\n            var group = this.group;\n            var data = seriesModel.getData();\n            var oldData = this._data;\n\n            var coord = seriesModel.coordinateSystem;\n            var baseAxis = coord.getBaseAxis();\n            var isHorizontalOrRadial;\n\n            if (coord.type === 'cartesian2d') {\n                isHorizontalOrRadial = baseAxis.isHorizontal();\n            }\n            else if (coord.type === 'polar') {\n                isHorizontalOrRadial = baseAxis.dim === 'angle';\n            }\n\n            var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n\n            data.diff(oldData)\n                .add(function (dataIndex) {\n                    if (!data.hasValue(dataIndex)) {\n                        return;\n                    }\n\n                    var itemModel = data.getItemModel(dataIndex);\n                    var layout = getLayout[coord.type](data, dataIndex, itemModel);\n                    var el = elementCreator[coord.type](\n                        data, dataIndex, itemModel, layout, isHorizontalOrRadial, animationModel\n                    );\n                    data.setItemGraphicEl(dataIndex, el);\n                    group.add(el);\n\n                    updateStyle(\n                        el, data, dataIndex, itemModel, layout,\n                        seriesModel, isHorizontalOrRadial, coord.type === 'polar'\n                    );\n                })\n                .update(function (newIndex, oldIndex) {\n                    var el = oldData.getItemGraphicEl(oldIndex);\n\n                    if (!data.hasValue(newIndex)) {\n                        group.remove(el);\n                        return;\n                    }\n\n                    var itemModel = data.getItemModel(newIndex);\n                    var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n                    if (el) {\n                        graphic.updateProps(el, {shape: layout}, animationModel, newIndex);\n                    }\n                    else {\n                        el = elementCreator[coord.type](\n                            data, newIndex, itemModel, layout, isHorizontalOrRadial, animationModel, true\n                        );\n                    }\n\n                    data.setItemGraphicEl(newIndex, el);\n                    // Add back\n                    group.add(el);\n\n                    updateStyle(\n                        el, data, newIndex, itemModel, layout,\n                        seriesModel, isHorizontalOrRadial, coord.type === 'polar'\n                    );\n                })\n                .remove(function (dataIndex) {\n                    var el = oldData.getItemGraphicEl(dataIndex);\n                    if (coord.type === 'cartesian2d') {\n                        el && removeRect(dataIndex, animationModel, el);\n                    }\n                    else {\n                        el && removeSector(dataIndex, animationModel, el);\n                    }\n                })\n                .execute();\n\n            this._data = data;\n        },\n\n        remove: function (ecModel, api) {\n            var group = this.group;\n            var data = this._data;\n            if (ecModel.get('animation')) {\n                if (data) {\n                    data.eachItemGraphicEl(function (el) {\n                        if (el.type === 'sector') {\n                            removeSector(el.dataIndex, ecModel, el);\n                        }\n                        else {\n                            removeRect(el.dataIndex, ecModel, el);\n                        }\n                    });\n                }\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    });\n\n    var elementCreator = {\n\n        cartesian2d: function (\n            data, dataIndex, itemModel, layout, isHorizontal,\n            animationModel, isUpdate\n        ) {\n            var rect = new graphic.Rect({shape: zrUtil.extend({}, layout)});\n\n            // Animation\n            if (animationModel) {\n                var rectShape = rect.shape;\n                var animateProperty = isHorizontal ? 'height' : 'width';\n                var animateTarget = {};\n                rectShape[animateProperty] = 0;\n                animateTarget[animateProperty] = layout[animateProperty];\n                graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n                    shape: animateTarget\n                }, animationModel, dataIndex);\n            }\n\n            return rect;\n        },\n\n        polar: function (\n            data, dataIndex, itemModel, layout, isRadial,\n            animationModel, isUpdate\n        ) {\n            var sector = new graphic.Sector({shape: zrUtil.extend({}, layout)});\n\n            // Animation\n            if (animationModel) {\n                var sectorShape = sector.shape;\n                var animateProperty = isRadial ? 'r' : 'endAngle';\n                var animateTarget = {};\n                sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n                animateTarget[animateProperty] = layout[animateProperty];\n                graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n                    shape: animateTarget\n                }, animationModel, dataIndex);\n            }\n\n            return sector;\n        }\n    };\n\n    function removeRect(dataIndex, animationModel, el) {\n        // Not show text when animating\n        el.style.text = null;\n        graphic.updateProps(el, {\n            shape: {\n                width: 0\n            }\n        }, animationModel, dataIndex, function () {\n            el.parent && el.parent.remove(el);\n        });\n    }\n\n    function removeSector(dataIndex, animationModel, el) {\n        // Not show text when animating\n        el.style.text = null;\n        graphic.updateProps(el, {\n            shape: {\n                r: el.shape.r0\n            }\n        }, animationModel, dataIndex, function () {\n            el.parent && el.parent.remove(el);\n        });\n    }\n\n    var getLayout = {\n        cartesian2d: function (data, dataIndex, itemModel) {\n            var layout = data.getItemLayout(dataIndex);\n            var fixedLineWidth = getLineWidth(itemModel, layout);\n\n            // fix layout with lineWidth\n            var signX = layout.width > 0 ? 1 : -1;\n            var signY = layout.height > 0 ? 1 : -1;\n            return {\n                x: layout.x + signX * fixedLineWidth / 2,\n                y: layout.y + signY * fixedLineWidth / 2,\n                width: layout.width - signX * fixedLineWidth,\n                height: layout.height - signY * fixedLineWidth\n            };\n        },\n\n        polar: function (data, dataIndex, itemModel) {\n            var layout = data.getItemLayout(dataIndex);\n            return {\n                cx: layout.cx,\n                cy: layout.cy,\n                r0: layout.r0,\n                r: layout.r,\n                startAngle: layout.startAngle,\n                endAngle: layout.endAngle\n            };\n        }\n    };\n\n    function updateStyle(\n        el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar\n    ) {\n        var color = data.getItemVisual(dataIndex, 'color');\n        var opacity = data.getItemVisual(dataIndex, 'opacity');\n        var itemStyleModel = itemModel.getModel('itemStyle.normal');\n        var hoverStyle = itemModel.getModel('itemStyle.emphasis').getBarItemStyle();\n\n        if (!isPolar) {\n            el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n        }\n\n        el.useStyle(zrUtil.defaults(\n            {\n                fill: color,\n                opacity: opacity\n            },\n            itemStyleModel.getBarItemStyle()\n        ));\n\n        var cursorStyle = itemModel.getShallow('cursor');\n        cursorStyle && el.attr('cursor', cursorStyle);\n\n        var labelPositionOutside = isHorizontal\n            ? (layout.height > 0 ? 'bottom' : 'top')\n            : (layout.width > 0 ? 'left' : 'right');\n\n        if (!isPolar) {\n            helper.setLabel(\n                el.style, hoverStyle, itemModel, color,\n                seriesModel, dataIndex, labelPositionOutside\n            );\n        }\n\n        graphic.setHoverStyle(el, hoverStyle);\n    }\n\n    // In case width or height are too small.\n    function getLineWidth(itemModel, rawLayout) {\n        var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n        return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n    }\n\n    module.exports = BarView;\n\n\n/***/ }),\n\n/***/ 805:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var SeriesModel = __webpack_require__(640);\n    var createListFromArray = __webpack_require__(648);\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.__base_bar__',\n\n        getInitialData: function (option, ecModel) {\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        getMarkerPosition: function (value) {\n            var coordSys = this.coordinateSystem;\n            if (coordSys) {\n                // PENDING if clamp ?\n                var pt = coordSys.dataToPoint(value, true);\n                var data = this.getData();\n                var offset = data.getLayout('offset');\n                var size = data.getLayout('size');\n                var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n                pt[offsetIndex] += offset + size / 2;\n                return pt;\n            }\n            return [NaN, NaN];\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n            // stack: null\n\n            // Cartesian coordinate system\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // 最小高度改为0\n            barMinHeight: 0,\n            // 最小角度为0，仅对极坐标系下的柱状图有效\n            barMinAngle: 0,\n            // cursor: null,\n\n            // barMaxWidth: null,\n            // 默认自适应\n            // barWidth: null,\n            // 柱间距离，默认为柱形宽度的30%，可设固定值\n            // barGap: '30%',\n            // 类目间柱形距离，默认为类目间距的20%，可设固定值\n            // barCategoryGap: '20%',\n            // label: {\n            //     normal: {\n            //         show: false\n            //     }\n            // },\n            itemStyle: {\n                normal: {\n                    // color: '各异'\n                },\n                emphasis: {}\n            }\n        }\n    });\n\n\n/***/ }),\n\n/***/ 806:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n\n    var getBarItemStyle = __webpack_require__(637)(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            // Compatitable with 2\n            ['stroke', 'barBorderColor'],\n            ['lineWidth', 'barBorderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getBarItemStyle: function (excludes) {\n            var style = getBarItemStyle.call(this, excludes);\n            if (this.getBorderLineDash) {\n                var lineDash = this.getBorderLineDash();\n                lineDash && (style.lineDash = lineDash);\n            }\n            return style;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 807:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var graphic = __webpack_require__(608);\n\n    var helper = {};\n\n    helper.setLabel = function (\n        normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside\n    ) {\n        var labelModel = itemModel.getModel('label.normal');\n        var hoverLabelModel = itemModel.getModel('label.emphasis');\n\n        if (labelModel.get('show')) {\n            setLabel(\n                normalStyle, labelModel, color,\n                zrUtil.retrieve2(\n                    seriesModel.getFormattedLabel(dataIndex, 'normal'),\n                    seriesModel.getRawValue(dataIndex)\n                ),\n                labelPositionOutside\n            );\n        }\n        else {\n            normalStyle.text = null;\n        }\n\n        if (hoverLabelModel.get('show')) {\n            setLabel(\n                hoverStyle, hoverLabelModel, false,\n                seriesModel.getFormattedLabel(dataIndex, 'emphasis'),\n                labelPositionOutside\n            );\n        }\n        else {\n            hoverStyle.text = null;\n        }\n    };\n\n    function setLabel(style, model, defaultColor, labelText, labelPositionOutside) {\n        graphic.setText(style, model, defaultColor);\n        style.text = labelText;\n        if (style.textPosition === 'outside') {\n            style.textPosition = labelPositionOutside;\n        }\n    }\n\n    module.exports = helper;\n\n\n/***/ }),\n\n/***/ 808:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var echarts = __webpack_require__(607);\n\n    __webpack_require__(809);\n    __webpack_require__(810);\n\n    echarts.registerVisual(zrUtil.curry(__webpack_require__(687), 'funnel'));\n    echarts.registerLayout(__webpack_require__(811));\n\n    echarts.registerProcessor(zrUtil.curry(__webpack_require__(686), 'funnel'));\n\n\n/***/ }),\n\n/***/ 809:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var List = __webpack_require__(630);\n    var modelUtil = __webpack_require__(609);\n    var completeDimensions = __webpack_require__(631);\n\n    var FunnelSeries = __webpack_require__(607).extendSeriesModel({\n\n        type: 'series.funnel',\n\n        init: function (option) {\n            FunnelSeries.superApply(this, 'init', arguments);\n\n            // Enable legend selection for each data item\n            // Use a function instead of direct access because data reference may changed\n            this.legendDataProvider = function () {\n                return this.getRawData();\n            };\n            // Extend labelLine emphasis\n            this._defaultLabelLine(option);\n        },\n\n        getInitialData: function (option, ecModel) {\n            var dimensions = completeDimensions(['value'], option.data);\n            var list = new List(dimensions, this);\n            list.initData(option.data);\n            return list;\n        },\n\n        _defaultLabelLine: function (option) {\n            // Extend labelLine emphasis\n            modelUtil.defaultEmphasis(option.labelLine, ['show']);\n\n            var labelLineNormalOpt = option.labelLine.normal;\n            var labelLineEmphasisOpt = option.labelLine.emphasis;\n            // Not show label line if `label.normal.show = false`\n            labelLineNormalOpt.show = labelLineNormalOpt.show\n                && option.label.normal.show;\n            labelLineEmphasisOpt.show = labelLineEmphasisOpt.show\n                && option.label.emphasis.show;\n        },\n\n        // Overwrite\n        getDataParams: function (dataIndex) {\n            var data = this.getData();\n            var params = FunnelSeries.superCall(this, 'getDataParams', dataIndex);\n            var sum = data.getSum('value');\n            // Percent is 0 if sum is 0\n            params.percent = !sum ? 0 : +(data.get('value', dataIndex) / sum * 100).toFixed(2);\n\n            params.$vars.push('percent');\n            return params;\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            legendHoverLink: true,\n            left: 80,\n            top: 60,\n            right: 80,\n            bottom: 60,\n            // width: {totalWidth} - left - right,\n            // height: {totalHeight} - top - bottom,\n\n            // 默认取数据最小最大值\n            // min: 0,\n            // max: 100,\n            minSize: '0%',\n            maxSize: '100%',\n            sort: 'descending', // 'ascending', 'descending'\n            gap: 0,\n            funnelAlign: 'center',\n            label: {\n                normal: {\n                    show: true,\n                    position: 'outer'\n                    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n                },\n                emphasis: {\n                    show: true\n                }\n            },\n            labelLine: {\n                normal: {\n                    show: true,\n                    length: 20,\n                    lineStyle: {\n                        // color: 各异,\n                        width: 1,\n                        type: 'solid'\n                    }\n                },\n                emphasis: {}\n            },\n            itemStyle: {\n                normal: {\n                    // color: 各异,\n                    borderColor: '#fff',\n                    borderWidth: 1\n                },\n                emphasis: {\n                    // color: 各异,\n                }\n            }\n        }\n    });\n\n    module.exports = FunnelSeries;\n\n\n\n/***/ }),\n\n/***/ 810:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var graphic = __webpack_require__(608);\n    var zrUtil = __webpack_require__(606);\n\n    /**\n     * Piece of pie including Sector, Label, LabelLine\n     * @constructor\n     * @extends {module:zrender/graphic/Group}\n     */\n    function FunnelPiece(data, idx) {\n\n        graphic.Group.call(this);\n\n        var polygon = new graphic.Polygon();\n        var labelLine = new graphic.Polyline();\n        var text = new graphic.Text();\n        this.add(polygon);\n        this.add(labelLine);\n        this.add(text);\n\n        this.updateData(data, idx, true);\n\n        // Hover to change label and labelLine\n        function onEmphasis() {\n            labelLine.ignore = labelLine.hoverIgnore;\n            text.ignore = text.hoverIgnore;\n        }\n        function onNormal() {\n            labelLine.ignore = labelLine.normalIgnore;\n            text.ignore = text.normalIgnore;\n        }\n        this.on('emphasis', onEmphasis)\n            .on('normal', onNormal)\n            .on('mouseover', onEmphasis)\n            .on('mouseout', onNormal);\n    }\n\n    var funnelPieceProto = FunnelPiece.prototype;\n\n    var opacityAccessPath = ['itemStyle', 'normal', 'opacity'];\n    funnelPieceProto.updateData = function (data, idx, firstCreate) {\n\n        var polygon = this.childAt(0);\n\n        var seriesModel = data.hostModel;\n        var itemModel = data.getItemModel(idx);\n        var layout = data.getItemLayout(idx);\n        var opacity = data.getItemModel(idx).get(opacityAccessPath);\n        opacity = opacity == null ? 1 : opacity;\n\n        // Reset style\n        polygon.useStyle({});\n\n        if (firstCreate) {\n            polygon.setShape({\n                points: layout.points\n            });\n            polygon.setStyle({ opacity : 0 });\n            graphic.initProps(polygon, {\n                style: {\n                    opacity: opacity\n                }\n            }, seriesModel, idx);\n        }\n        else {\n            graphic.updateProps(polygon, {\n                style: {\n                    opacity: opacity\n                },\n                shape: {\n                    points: layout.points\n                }\n            }, seriesModel, idx);\n        }\n\n        // Update common style\n        var itemStyleModel = itemModel.getModel('itemStyle');\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        polygon.setStyle(\n            zrUtil.defaults(\n                {\n                    lineJoin: 'round',\n                    fill: visualColor\n                },\n                itemStyleModel.getModel('normal').getItemStyle(['opacity'])\n            )\n        );\n        polygon.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n\n        this._updateLabel(data, idx);\n\n        graphic.setHoverStyle(this);\n    };\n\n    funnelPieceProto._updateLabel = function (data, idx) {\n\n        var labelLine = this.childAt(1);\n        var labelText = this.childAt(2);\n\n        var seriesModel = data.hostModel;\n        var itemModel = data.getItemModel(idx);\n        var layout = data.getItemLayout(idx);\n        var labelLayout = layout.label;\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        graphic.updateProps(labelLine, {\n            shape: {\n                points: labelLayout.linePoints || labelLayout.linePoints\n            }\n        }, seriesModel, idx);\n\n        graphic.updateProps(labelText, {\n            style: {\n                x: labelLayout.x,\n                y: labelLayout.y\n            }\n        }, seriesModel, idx);\n        labelText.attr({\n            rotation: labelLayout.rotation,\n            origin: [labelLayout.x, labelLayout.y],\n            z2: 10\n        });\n\n        var labelModel = itemModel.getModel('label.normal');\n        var labelHoverModel = itemModel.getModel('label.emphasis');\n        var labelLineModel = itemModel.getModel('labelLine.normal');\n        var labelLineHoverModel = itemModel.getModel('labelLine.emphasis');\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        graphic.setTextStyle(labelText.style, labelModel, {\n            textAlign: labelLayout.textAlign,\n            textVerticalAlign: labelLayout.verticalAlign,\n            text: zrUtil.retrieve(data.hostModel.getFormattedLabel(idx, 'normal'), data.getName(idx))\n        }, {\n            defaultTextColor: visualColor,\n            autoColor: visualColor,\n            checkInside: function (model, opt) {\n                return labelLayout.inside;\n            }\n        });\n\n        labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n        labelText.hoverIgnore = !labelHoverModel.get('show');\n\n        labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n        labelLine.hoverIgnore = !labelLineHoverModel.get('show');\n\n        // Default use item visual color\n        labelLine.setStyle({\n            stroke: visualColor\n        });\n        labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n\n        labelText.hoverStyle = graphic.setTextStyle({}, labelHoverModel, {\n            text: data.hostModel.getFormattedLabel(idx, 'emphasis')\n        }, {forMerge: true});\n\n        labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n    };\n\n    zrUtil.inherits(FunnelPiece, graphic.Group);\n\n\n    var Funnel = __webpack_require__(641).extend({\n\n        type: 'funnel',\n\n        render: function (seriesModel, ecModel, api) {\n            var data = seriesModel.getData();\n            var oldData = this._data;\n\n            var group = this.group;\n\n            data.diff(oldData)\n                .add(function (idx) {\n                    var funnelPiece = new FunnelPiece(data, idx);\n\n                    data.setItemGraphicEl(idx, funnelPiece);\n\n                    group.add(funnelPiece);\n                })\n                .update(function (newIdx, oldIdx) {\n                    var piePiece = oldData.getItemGraphicEl(oldIdx);\n\n                    piePiece.updateData(data, newIdx);\n\n                    group.add(piePiece);\n                    data.setItemGraphicEl(newIdx, piePiece);\n                })\n                .remove(function (idx) {\n                    var piePiece = oldData.getItemGraphicEl(idx);\n                    group.remove(piePiece);\n                })\n                .execute();\n\n            this._data = data;\n        },\n\n        remove: function () {\n            this.group.removeAll();\n            this._data = null;\n        },\n\n        dispose: function () {}\n    });\n\n    module.exports = Funnel;\n\n\n/***/ }),\n\n/***/ 811:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var layout = __webpack_require__(619);\n    var number = __webpack_require__(610);\n\n    var parsePercent = number.parsePercent;\n\n    function getViewRect(seriesModel, api) {\n        return layout.getLayoutRect(\n            seriesModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            }\n        );\n    }\n\n    function getSortedIndices(data, sort) {\n        var valueArr = data.mapArray('value', function (val) {\n            return val;\n        });\n        var indices = [];\n        var isAscending = sort === 'ascending';\n        for (var i = 0, len = data.count(); i < len; i++) {\n            indices[i] = i;\n        }\n\n        // Add custom sortable function & none sortable opetion by \"options.sort\"\n        if (typeof sort === 'function') {\n            indices.sort(sort);\n        } else if (sort !== 'none') {\n            indices.sort(function (a, b) {\n                return isAscending ? valueArr[a] - valueArr[b] : valueArr[b] - valueArr[a];\n            });\n        }\n        return indices;\n    }\n\n    function labelLayout(data) {\n        data.each(function (idx) {\n            var itemModel = data.getItemModel(idx);\n            var labelModel = itemModel.getModel('label.normal');\n            var labelPosition = labelModel.get('position');\n\n            var labelLineModel = itemModel.getModel('labelLine.normal');\n\n            var layout = data.getItemLayout(idx);\n            var points = layout.points;\n\n            var isLabelInside = labelPosition === 'inner'\n                || labelPosition === 'inside' || labelPosition === 'center';\n\n            var textAlign;\n            var textX;\n            var textY;\n            var linePoints;\n\n            if (isLabelInside) {\n                textX = (points[0][0] + points[1][0] + points[2][0] + points[3][0]) / 4;\n                textY = (points[0][1] + points[1][1] + points[2][1] + points[3][1]) / 4;\n                textAlign = 'center';\n                linePoints = [\n                    [textX, textY], [textX, textY]\n                ];\n            }\n            else {\n                var x1;\n                var y1;\n                var x2;\n                var labelLineLen = labelLineModel.get('length');\n                if (labelPosition === 'left') {\n                    // Left side\n                    x1 = (points[3][0] + points[0][0]) / 2;\n                    y1 = (points[3][1] + points[0][1]) / 2;\n                    x2 = x1 - labelLineLen;\n                    textX = x2 - 5;\n                    textAlign = 'right';\n                }\n                else {\n                    // Right side\n                    x1 = (points[1][0] + points[2][0]) / 2;\n                    y1 = (points[1][1] + points[2][1]) / 2;\n                    x2 = x1 + labelLineLen;\n                    textX = x2 + 5;\n                    textAlign = 'left';\n                }\n                var y2 = y1;\n\n                linePoints = [[x1, y1], [x2, y2]];\n                textY = y2;\n            }\n\n            layout.label = {\n                linePoints: linePoints,\n                x: textX,\n                y: textY,\n                verticalAlign: 'middle',\n                textAlign: textAlign,\n                inside: isLabelInside\n            };\n        });\n    }\n\n    module.exports = function (ecModel, api, payload) {\n        ecModel.eachSeriesByType('funnel', function (seriesModel) {\n            var data = seriesModel.getData();\n            var sort = seriesModel.get('sort');\n            var viewRect = getViewRect(seriesModel, api);\n            var indices = getSortedIndices(data, sort);\n\n            var sizeExtent = [\n                parsePercent(seriesModel.get('minSize'), viewRect.width),\n                parsePercent(seriesModel.get('maxSize'), viewRect.width)\n            ];\n            var dataExtent = data.getDataExtent('value');\n            var min = seriesModel.get('min');\n            var max = seriesModel.get('max');\n            if (min == null) {\n                min = Math.min(dataExtent[0], 0);\n            }\n            if (max == null) {\n                max = dataExtent[1];\n            }\n\n            var funnelAlign = seriesModel.get('funnelAlign');\n            var gap = seriesModel.get('gap');\n            var itemHeight = (viewRect.height - gap * (data.count() - 1)) / data.count();\n\n            var y = viewRect.y;\n\n            var getLinePoints = function (idx, offY) {\n                // End point index is data.count() and we assign it 0\n                var val = data.get('value', idx) || 0;\n                var itemWidth = number.linearMap(val, [min, max], sizeExtent, true);\n                var x0;\n                switch (funnelAlign) {\n                    case 'left':\n                        x0 = viewRect.x;\n                        break;\n                    case 'center':\n                        x0 = viewRect.x + (viewRect.width - itemWidth) / 2;\n                        break;\n                    case 'right':\n                        x0 = viewRect.x + viewRect.width - itemWidth;\n                        break;\n                }\n                return [\n                    [x0, offY],\n                    [x0 + itemWidth, offY]\n                ];\n            };\n\n            if (sort === 'ascending') {\n                // From bottom to top\n                itemHeight = -itemHeight;\n                gap = -gap;\n                y += viewRect.height;\n                indices = indices.reverse();\n            }\n\n            for (var i = 0; i < indices.length; i++) {\n                var idx = indices[i];\n                var nextIdx = indices[i + 1];\n                var start = getLinePoints(idx, y);\n                var end = getLinePoints(nextIdx, y + itemHeight);\n\n                y += itemHeight + gap;\n\n                data.setItemLayout(idx, {\n                    points: start.concat(end.slice().reverse())\n                });\n            }\n\n            labelLayout(data);\n        });\n    };\n\n\n\n/***/ }),\n\n/***/ 812:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var echarts = __webpack_require__(607);\n\n    __webpack_require__(813);\n    __webpack_require__(814);\n\n    __webpack_require__(801)('pie', [{\n        type: 'pieToggleSelect',\n        event: 'pieselectchanged',\n        method: 'toggleSelected'\n    }, {\n        type: 'pieSelect',\n        event: 'pieselected',\n        method: 'select'\n    }, {\n        type: 'pieUnSelect',\n        event: 'pieunselected',\n        method: 'unSelect'\n    }]);\n\n    echarts.registerVisual(zrUtil.curry(__webpack_require__(687), 'pie'));\n\n    echarts.registerLayout(zrUtil.curry(\n        __webpack_require__(816), 'pie'\n    ));\n\n    echarts.registerProcessor(zrUtil.curry(__webpack_require__(686), 'pie'));\n\n\n/***/ }),\n\n/***/ 813:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var List = __webpack_require__(630);\n    var zrUtil = __webpack_require__(606);\n    var modelUtil = __webpack_require__(609);\n    var numberUtil = __webpack_require__(610);\n    var completeDimensions = __webpack_require__(631);\n\n    var dataSelectableMixin = __webpack_require__(822);\n\n    var PieSeries = __webpack_require__(607).extendSeriesModel({\n\n        type: 'series.pie',\n\n        // Overwrite\n        init: function (option) {\n            PieSeries.superApply(this, 'init', arguments);\n\n            // Enable legend selection for each data item\n            // Use a function instead of direct access because data reference may changed\n            this.legendDataProvider = function () {\n                return this.getRawData();\n            };\n\n            this.updateSelectedMap(option.data);\n\n            this._defaultLabelLine(option);\n        },\n\n        // Overwrite\n        mergeOption: function (newOption) {\n            PieSeries.superCall(this, 'mergeOption', newOption);\n            this.updateSelectedMap(this.option.data);\n        },\n\n        getInitialData: function (option, ecModel) {\n            var dimensions = completeDimensions(['value'], option.data);\n            var list = new List(dimensions, this);\n            list.initData(option.data);\n            return list;\n        },\n\n        // Overwrite\n        getDataParams: function (dataIndex) {\n            var data = this.getData();\n            var params = PieSeries.superCall(this, 'getDataParams', dataIndex);\n            // FIXME toFixed?\n\n            var valueList = [];\n            data.each('value', function (value) {\n                valueList.push(value);\n            });\n\n            params.percent = numberUtil.getPercentWithPrecision(\n                valueList,\n                dataIndex,\n                data.hostModel.get('percentPrecision')\n            );\n\n            params.$vars.push('percent');\n            return params;\n        },\n\n        _defaultLabelLine: function (option) {\n            // Extend labelLine emphasis\n            modelUtil.defaultEmphasis(option.labelLine, ['show']);\n\n            var labelLineNormalOpt = option.labelLine.normal;\n            var labelLineEmphasisOpt = option.labelLine.emphasis;\n            // Not show label line if `label.normal.show = false`\n            labelLineNormalOpt.show = labelLineNormalOpt.show\n                && option.label.normal.show;\n            labelLineEmphasisOpt.show = labelLineEmphasisOpt.show\n                && option.label.emphasis.show;\n        },\n\n        defaultOption: {\n            zlevel: 0,\n            z: 2,\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // 默认全局居中\n            center: ['50%', '50%'],\n            radius: [0, '75%'],\n            // 默认顺时针\n            clockwise: true,\n            startAngle: 90,\n            // 最小角度改为0\n            minAngle: 0,\n            // 选中是扇区偏移量\n            selectedOffset: 10,\n\n            // If use strategy to avoid label overlapping\n            avoidLabelOverlap: true,\n            // 选择模式，默认关闭，可选single，multiple\n            // selectedMode: false,\n            // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n            // roseType: null,\n\n            percentPrecision: 2,\n\n            // If still show when all data zero.\n            stillShowZeroSum: true,\n\n            // cursor: null,\n\n            label: {\n                normal: {\n                    // If rotate around circle\n                    rotate: false,\n                    show: true,\n                    // 'outer', 'inside', 'center'\n                    position: 'outer'\n                    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n                    // 默认使用全局文本样式，详见TEXTSTYLE\n                    // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n                },\n                emphasis: {}\n            },\n            // Enabled when label.normal.position is 'outer'\n            labelLine: {\n                normal: {\n                    show: true,\n                    // 引导线两段中的第一段长度\n                    length: 15,\n                    // 引导线两段中的第二段长度\n                    length2: 15,\n                    smooth: false,\n                    lineStyle: {\n                        // color: 各异,\n                        width: 1,\n                        type: 'solid'\n                    }\n                }\n            },\n            itemStyle: {\n                normal: {\n                    borderWidth: 1\n                },\n                emphasis: {}\n            },\n\n            // Animation type canbe expansion, scale\n            animationType: 'expansion',\n\n            animationEasing: 'cubicOut',\n\n            data: []\n        }\n    });\n\n    zrUtil.mixin(PieSeries, dataSelectableMixin);\n\n    module.exports = PieSeries;\n\n\n/***/ }),\n\n/***/ 814:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var graphic = __webpack_require__(608);\n    var zrUtil = __webpack_require__(606);\n\n    /**\n     * @param {module:echarts/model/Series} seriesModel\n     * @param {boolean} hasAnimation\n     * @inner\n     */\n    function updateDataSelected(uid, seriesModel, hasAnimation, api) {\n        var data = seriesModel.getData();\n        var dataIndex = this.dataIndex;\n        var name = data.getName(dataIndex);\n        var selectedOffset = seriesModel.get('selectedOffset');\n\n        api.dispatchAction({\n            type: 'pieToggleSelect',\n            from: uid,\n            name: name,\n            seriesId: seriesModel.id\n        });\n\n        data.each(function (idx) {\n            toggleItemSelected(\n                data.getItemGraphicEl(idx),\n                data.getItemLayout(idx),\n                seriesModel.isSelected(data.getName(idx)),\n                selectedOffset,\n                hasAnimation\n            );\n        });\n    }\n\n    /**\n     * @param {module:zrender/graphic/Sector} el\n     * @param {Object} layout\n     * @param {boolean} isSelected\n     * @param {number} selectedOffset\n     * @param {boolean} hasAnimation\n     * @inner\n     */\n    function toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n        var midAngle = (layout.startAngle + layout.endAngle) / 2;\n\n        var dx = Math.cos(midAngle);\n        var dy = Math.sin(midAngle);\n\n        var offset = isSelected ? selectedOffset : 0;\n        var position = [dx * offset, dy * offset];\n\n        hasAnimation\n            // animateTo will stop revious animation like update transition\n            ? el.animate()\n                .when(200, {\n                    position: position\n                })\n                .start('bounceOut')\n            : el.attr('position', position);\n    }\n\n    /**\n     * Piece of pie including Sector, Label, LabelLine\n     * @constructor\n     * @extends {module:zrender/graphic/Group}\n     */\n    function PiePiece(data, idx) {\n\n        graphic.Group.call(this);\n\n        var sector = new graphic.Sector({\n            z2: 2\n        });\n        var polyline = new graphic.Polyline();\n        var text = new graphic.Text();\n        this.add(sector);\n        this.add(polyline);\n        this.add(text);\n\n        this.updateData(data, idx, true);\n\n        // Hover to change label and labelLine\n        function onEmphasis() {\n            polyline.ignore = polyline.hoverIgnore;\n            text.ignore = text.hoverIgnore;\n        }\n        function onNormal() {\n            polyline.ignore = polyline.normalIgnore;\n            text.ignore = text.normalIgnore;\n        }\n        this.on('emphasis', onEmphasis)\n            .on('normal', onNormal)\n            .on('mouseover', onEmphasis)\n            .on('mouseout', onNormal);\n    }\n\n    var piePieceProto = PiePiece.prototype;\n\n    piePieceProto.updateData = function (data, idx, firstCreate) {\n\n        var sector = this.childAt(0);\n\n        var seriesModel = data.hostModel;\n        var itemModel = data.getItemModel(idx);\n        var layout = data.getItemLayout(idx);\n        var sectorShape = zrUtil.extend({}, layout);\n        sectorShape.label = null;\n\n        if (firstCreate) {\n            sector.setShape(sectorShape);\n\n            var animationType = seriesModel.getShallow('animationType');\n            if (animationType === 'scale') {\n                sector.shape.r = layout.r0;\n                graphic.initProps(sector, {\n                    shape: {\n                        r: layout.r\n                    }\n                }, seriesModel, idx);\n            }\n            // Expansion\n            else {\n                sector.shape.endAngle = layout.startAngle;\n                graphic.updateProps(sector, {\n                    shape: {\n                        endAngle: layout.endAngle\n                    }\n                }, seriesModel, idx);\n            }\n\n        }\n        else {\n            graphic.updateProps(sector, {\n                shape: sectorShape\n            }, seriesModel, idx);\n        }\n\n        // Update common style\n        var itemStyleModel = itemModel.getModel('itemStyle');\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        sector.useStyle(\n            zrUtil.defaults(\n                {\n                    lineJoin: 'bevel',\n                    fill: visualColor\n                },\n                itemStyleModel.getModel('normal').getItemStyle()\n            )\n        );\n        sector.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n\n        var cursorStyle = itemModel.getShallow('cursor');\n        cursorStyle && sector.attr('cursor', cursorStyle);\n\n        // Toggle selected\n        toggleItemSelected(\n            this,\n            data.getItemLayout(idx),\n            itemModel.get('selected'),\n            seriesModel.get('selectedOffset'),\n            seriesModel.get('animation')\n        );\n\n        function onEmphasis() {\n            // Sector may has animation of updating data. Force to move to the last frame\n            // Or it may stopped on the wrong shape\n            sector.stopAnimation(true);\n            sector.animateTo({\n                shape: {\n                    r: layout.r + 10\n                }\n            }, 300, 'elasticOut');\n        }\n        function onNormal() {\n            sector.stopAnimation(true);\n            sector.animateTo({\n                shape: {\n                    r: layout.r\n                }\n            }, 300, 'elasticOut');\n        }\n        sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n        if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {\n            sector\n                .on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n\n        this._updateLabel(data, idx);\n\n        graphic.setHoverStyle(this);\n    };\n\n    piePieceProto._updateLabel = function (data, idx) {\n\n        var labelLine = this.childAt(1);\n        var labelText = this.childAt(2);\n\n        var seriesModel = data.hostModel;\n        var itemModel = data.getItemModel(idx);\n        var layout = data.getItemLayout(idx);\n        var labelLayout = layout.label;\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        graphic.updateProps(labelLine, {\n            shape: {\n                points: labelLayout.linePoints || [\n                    [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]\n                ]\n            }\n        }, seriesModel, idx);\n\n        graphic.updateProps(labelText, {\n            style: {\n                x: labelLayout.x,\n                y: labelLayout.y\n            }\n        }, seriesModel, idx);\n        labelText.attr({\n            rotation: labelLayout.rotation,\n            origin: [labelLayout.x, labelLayout.y],\n            z2: 10\n        });\n\n        var labelModel = itemModel.getModel('label.normal');\n        var labelHoverModel = itemModel.getModel('label.emphasis');\n        var labelLineModel = itemModel.getModel('labelLine.normal');\n        var labelLineHoverModel = itemModel.getModel('labelLine.emphasis');\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        graphic.setTextStyle(labelText.style, labelModel, {\n            textVerticalAlign: labelLayout.verticalAlign,\n            textAlign: labelLayout.textAlign,\n            opacity: data.getItemVisual(idx, 'opacity'),\n            text: zrUtil.retrieve(data.hostModel.getFormattedLabel(idx, 'normal'), data.getName(idx))\n        }, {\n            defaultTextColor: visualColor,\n            autoColor: visualColor,\n            checkInside: function (model, opt) {\n                return labelLayout.inside;\n            }\n        });\n\n        labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n        labelText.hoverIgnore = !labelHoverModel.get('show');\n\n        labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n        labelLine.hoverIgnore = !labelLineHoverModel.get('show');\n\n        // Default use item visual color\n        labelLine.setStyle({\n            stroke: visualColor,\n            opacity: data.getItemVisual(idx, 'opacity')\n        });\n        labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n\n        labelText.hoverStyle = graphic.setTextStyle({}, labelHoverModel, {\n            text: data.hostModel.getFormattedLabel(idx, 'emphasis')\n        }, {forMerge: true});\n\n        labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n\n        var smooth = labelLineModel.get('smooth');\n        if (smooth && smooth === true) {\n            smooth = 0.4;\n        }\n        labelLine.setShape({\n            smooth: smooth\n        });\n    };\n\n    zrUtil.inherits(PiePiece, graphic.Group);\n\n\n    // Pie view\n    var Pie = __webpack_require__(641).extend({\n\n        type: 'pie',\n\n        init: function () {\n            var sectorGroup = new graphic.Group();\n            this._sectorGroup = sectorGroup;\n        },\n\n        render: function (seriesModel, ecModel, api, payload) {\n            if (payload && (payload.from === this.uid)) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var oldData = this._data;\n            var group = this.group;\n\n            var hasAnimation = ecModel.get('animation');\n            var isFirstRender = !oldData;\n            var animationType = seriesModel.get('animationType');\n\n            var onSectorClick = zrUtil.curry(\n                updateDataSelected, this.uid, seriesModel, hasAnimation, api\n            );\n\n            var selectedMode = seriesModel.get('selectedMode');\n\n            data.diff(oldData)\n                .add(function (idx) {\n                    var piePiece = new PiePiece(data, idx);\n                    // Default expansion animation\n                    if (isFirstRender && animationType !== 'scale') {\n                        piePiece.eachChild(function (child) {\n                            child.stopAnimation(true);\n                        });\n                    }\n\n                    selectedMode && piePiece.on('click', onSectorClick);\n\n                    data.setItemGraphicEl(idx, piePiece);\n\n                    group.add(piePiece);\n                })\n                .update(function (newIdx, oldIdx) {\n                    var piePiece = oldData.getItemGraphicEl(oldIdx);\n\n                    piePiece.updateData(data, newIdx);\n\n                    piePiece.off('click');\n                    selectedMode && piePiece.on('click', onSectorClick);\n                    group.add(piePiece);\n                    data.setItemGraphicEl(newIdx, piePiece);\n                })\n                .remove(function (idx) {\n                    var piePiece = oldData.getItemGraphicEl(idx);\n                    group.remove(piePiece);\n                })\n                .execute();\n\n            if (\n                hasAnimation && isFirstRender && data.count() > 0\n                // Default expansion animation\n                && animationType !== 'scale'\n            ) {\n                var shape = data.getItemLayout(0);\n                var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n\n                var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n                group.setClipPath(this._createClipPath(\n                    shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel\n                ));\n            }\n\n            this._data = data;\n        },\n\n        dispose: function () {},\n\n        _createClipPath: function (\n            cx, cy, r, startAngle, clockwise, cb, seriesModel\n        ) {\n            var clipPath = new graphic.Sector({\n                shape: {\n                    cx: cx,\n                    cy: cy,\n                    r0: 0,\n                    r: r,\n                    startAngle: startAngle,\n                    endAngle: startAngle,\n                    clockwise: clockwise\n                }\n            });\n\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n                }\n            }, seriesModel, cb);\n\n            return clipPath;\n        },\n\n        /**\n         * @implement\n         */\n        containPoint: function (point, seriesModel) {\n            var data = seriesModel.getData();\n            var itemLayout = data.getItemLayout(0);\n            if (itemLayout) {\n                var dx = point[0] - itemLayout.cx;\n                var dy = point[1] - itemLayout.cy;\n                var radius = Math.sqrt(dx * dx + dy * dy);\n                return radius <= itemLayout.r && radius >= itemLayout.r0;\n            }\n        }\n\n    });\n\n    module.exports = Pie;\n\n\n/***/ }),\n\n/***/ 815:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// FIXME emphasis label position is not same with normal label position\n\n\n    var textContain = __webpack_require__(621);\n\n    function adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n        list.sort(function (a, b) {\n            return a.y - b.y;\n        });\n\n        // 压\n        function shiftDown(start, end, delta, dir) {\n            for (var j = start; j < end; j++) {\n                list[j].y += delta;\n                if (j > start\n                    && j + 1 < end\n                    && list[j + 1].y > list[j].y + list[j].height\n                ) {\n                    shiftUp(j, delta / 2);\n                    return;\n                }\n            }\n\n            shiftUp(end - 1, delta / 2);\n        }\n\n        // 弹\n        function shiftUp(end, delta) {\n            for (var j = end; j >= 0; j--) {\n                list[j].y -= delta;\n                if (j > 0\n                    && list[j].y > list[j - 1].y + list[j - 1].height\n                ) {\n                    break;\n                }\n            }\n        }\n\n        function changeX(list, isDownList, cx, cy, r, dir) {\n            var lastDeltaX = dir > 0\n                ? isDownList                // 右侧\n                    ? Number.MAX_VALUE      // 下\n                    : 0                     // 上\n                : isDownList                // 左侧\n                    ? Number.MAX_VALUE      // 下\n                    : 0;                    // 上\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                // Not change x for center label\n                if (list[i].position === 'center') {\n                    continue;\n                }\n                var deltaY = Math.abs(list[i].y - cy);\n                var length = list[i].len;\n                var length2 = list[i].len2;\n                var deltaX = (deltaY < r + length)\n                    ? Math.sqrt(\n                          (r + length + length2) * (r + length + length2)\n                          - deltaY * deltaY\n                      )\n                    : Math.abs(list[i].x - cx);\n                if (isDownList && deltaX >= lastDeltaX) {\n                    // 右下，左下\n                    deltaX = lastDeltaX - 10;\n                }\n                if (!isDownList && deltaX <= lastDeltaX) {\n                    // 右上，左上\n                    deltaX = lastDeltaX + 10;\n                }\n\n                list[i].x = cx + deltaX * dir;\n                lastDeltaX = deltaX;\n            }\n        }\n\n        var lastY = 0;\n        var delta;\n        var len = list.length;\n        var upList = [];\n        var downList = [];\n        for (var i = 0; i < len; i++) {\n            delta = list[i].y - lastY;\n            if (delta < 0) {\n                shiftDown(i, len, -delta, dir);\n            }\n            lastY = list[i].y + list[i].height;\n        }\n        if (viewHeight - lastY < 0) {\n            shiftUp(len - 1, lastY - viewHeight);\n        }\n        for (var i = 0; i < len; i++) {\n            if (list[i].y >= cy) {\n                downList.push(list[i]);\n            }\n            else {\n                upList.push(list[i]);\n            }\n        }\n        changeX(upList, false, cx, cy, r, dir);\n        changeX(downList, true, cx, cy, r, dir);\n    }\n\n    function avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n        var leftList = [];\n        var rightList = [];\n        for (var i = 0; i < labelLayoutList.length; i++) {\n            if (labelLayoutList[i].x < cx) {\n                leftList.push(labelLayoutList[i]);\n            }\n            else {\n                rightList.push(labelLayoutList[i]);\n            }\n        }\n\n        adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n        adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n        for (var i = 0; i < labelLayoutList.length; i++) {\n            var linePoints = labelLayoutList[i].linePoints;\n            if (linePoints) {\n                var dist = linePoints[1][0] - linePoints[2][0];\n                if (labelLayoutList[i].x < cx) {\n                    linePoints[2][0] = labelLayoutList[i].x + 3;\n                }\n                else {\n                    linePoints[2][0] = labelLayoutList[i].x - 3;\n                }\n                linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n                linePoints[1][0] = linePoints[2][0] + dist;\n            }\n        }\n    }\n\n    module.exports = function (seriesModel, r, viewWidth, viewHeight) {\n        var data = seriesModel.getData();\n        var labelLayoutList = [];\n        var cx;\n        var cy;\n        var hasLabelRotate = false;\n\n        data.each(function (idx) {\n            var layout = data.getItemLayout(idx);\n\n            var itemModel = data.getItemModel(idx);\n            var labelModel = itemModel.getModel('label.normal');\n            // Use position in normal or emphasis\n            var labelPosition = labelModel.get('position') || itemModel.get('label.emphasis.position');\n\n            var labelLineModel = itemModel.getModel('labelLine.normal');\n            var labelLineLen = labelLineModel.get('length');\n            var labelLineLen2 = labelLineModel.get('length2');\n\n            var midAngle = (layout.startAngle + layout.endAngle) / 2;\n            var dx = Math.cos(midAngle);\n            var dy = Math.sin(midAngle);\n\n            var textX;\n            var textY;\n            var linePoints;\n            var textAlign;\n\n            cx = layout.cx;\n            cy = layout.cy;\n\n            var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n            if (labelPosition === 'center') {\n                textX = layout.cx;\n                textY = layout.cy;\n                textAlign = 'center';\n            }\n            else {\n                var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n                var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n\n                textX = x1 + dx * 3;\n                textY = y1 + dy * 3;\n\n                if (!isLabelInside) {\n                    // For roseType\n                    var x2 = x1 + dx * (labelLineLen + r - layout.r);\n                    var y2 = y1 + dy * (labelLineLen + r - layout.r);\n                    var x3 = x2 + ((dx < 0 ? -1 : 1) * labelLineLen2);\n                    var y3 = y2;\n\n                    textX = x3 + (dx < 0 ? -5 : 5);\n                    textY = y3;\n                    linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n                }\n\n                textAlign = isLabelInside ? 'center' : (dx > 0 ? 'left' : 'right');\n            }\n            var font = labelModel.getFont();\n\n            var labelRotate = labelModel.get('rotate')\n                ? (dx < 0 ? -midAngle + Math.PI : -midAngle) : 0;\n            var text = seriesModel.getFormattedLabel(idx, 'normal')\n                        || data.getName(idx);\n            var textRect = textContain.getBoundingRect(\n                text, font, textAlign, 'top'\n            );\n            hasLabelRotate = !!labelRotate;\n            layout.label = {\n                x: textX,\n                y: textY,\n                position: labelPosition,\n                height: textRect.height,\n                len: labelLineLen,\n                len2: labelLineLen2,\n                linePoints: linePoints,\n                textAlign: textAlign,\n                verticalAlign: 'middle',\n                rotation: labelRotate,\n                inside: isLabelInside\n            };\n\n            // Not layout the inside label\n            if (!isLabelInside) {\n                labelLayoutList.push(layout.label);\n            }\n        });\n        if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n            avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n        }\n    };\n\n\n/***/ }),\n\n/***/ 816:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var numberUtil = __webpack_require__(610);\n    var parsePercent = numberUtil.parsePercent;\n    var labelLayout = __webpack_require__(815);\n    var zrUtil = __webpack_require__(606);\n\n    var PI2 = Math.PI * 2;\n    var RADIAN = Math.PI / 180;\n\n    module.exports = function (seriesType, ecModel, api, payload) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var center = seriesModel.get('center');\n            var radius = seriesModel.get('radius');\n\n            if (!zrUtil.isArray(radius)) {\n                radius = [0, radius];\n            }\n            if (!zrUtil.isArray(center)) {\n                center = [center, center];\n            }\n\n            var width = api.getWidth();\n            var height = api.getHeight();\n            var size = Math.min(width, height);\n            var cx = parsePercent(center[0], width);\n            var cy = parsePercent(center[1], height);\n            var r0 = parsePercent(radius[0], size / 2);\n            var r = parsePercent(radius[1], size / 2);\n\n            var data = seriesModel.getData();\n\n            var startAngle = -seriesModel.get('startAngle') * RADIAN;\n\n            var minAngle = seriesModel.get('minAngle') * RADIAN;\n\n            var validDataCount = 0;\n            data.each('value', function (value) {\n                !isNaN(value) && validDataCount++;\n            });\n\n            var sum = data.getSum('value');\n            // Sum may be 0\n            var unitRadian = Math.PI / (sum || validDataCount) * 2;\n\n            var clockwise = seriesModel.get('clockwise');\n\n            var roseType = seriesModel.get('roseType');\n            var stillShowZeroSum = seriesModel.get('stillShowZeroSum');\n\n            // [0...max]\n            var extent = data.getDataExtent('value');\n            extent[0] = 0;\n\n            // In the case some sector angle is smaller than minAngle\n            var restAngle = PI2;\n            var valueSumLargerThanMinAngle = 0;\n\n            var currentAngle = startAngle;\n            var dir = clockwise ? 1 : -1;\n\n            data.each('value', function (value, idx) {\n                var angle;\n                if (isNaN(value)) {\n                    data.setItemLayout(idx, {\n                        angle: NaN,\n                        startAngle: NaN,\n                        endAngle: NaN,\n                        clockwise: clockwise,\n                        cx: cx,\n                        cy: cy,\n                        r0: r0,\n                        r: roseType\n                            ? NaN\n                            : r\n                    });\n                    return;\n                }\n\n                // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n                if (roseType !== 'area') {\n                    angle = (sum === 0 && stillShowZeroSum)\n                        ? unitRadian : (value * unitRadian);\n                }\n                else {\n                    angle = PI2 / validDataCount;\n                }\n\n                if (angle < minAngle) {\n                    angle = minAngle;\n                    restAngle -= minAngle;\n                }\n                else {\n                    valueSumLargerThanMinAngle += value;\n                }\n\n                var endAngle = currentAngle + dir * angle;\n                data.setItemLayout(idx, {\n                    angle: angle,\n                    startAngle: currentAngle,\n                    endAngle: endAngle,\n                    clockwise: clockwise,\n                    cx: cx,\n                    cy: cy,\n                    r0: r0,\n                    r: roseType\n                        ? numberUtil.linearMap(value, extent, [r0, r])\n                        : r\n                });\n\n                currentAngle = endAngle;\n            }, true);\n\n            // Some sector is constrained by minAngle\n            // Rest sectors needs recalculate angle\n            if (restAngle < PI2 && validDataCount) {\n                // Average the angle if rest angle is not enough after all angles is\n                // Constrained by minAngle\n                if (restAngle <= 1e-3) {\n                    var angle = PI2 / validDataCount;\n                    data.each('value', function (value, idx) {\n                        if (!isNaN(value)) {\n                            var layout = data.getItemLayout(idx);\n                            layout.angle = angle;\n                            layout.startAngle = startAngle + dir * idx * angle;\n                            layout.endAngle = startAngle + dir * (idx + 1) * angle;\n                        }\n                    });\n                }\n                else {\n                    unitRadian = restAngle / valueSumLargerThanMinAngle;\n                    currentAngle = startAngle;\n                    data.each('value', function (value, idx) {\n                        if (!isNaN(value)) {\n                            var layout = data.getItemLayout(idx);\n                            var angle = layout.angle === minAngle\n                                ? minAngle : value * unitRadian;\n                            layout.startAngle = currentAngle;\n                            layout.endAngle = currentAngle + dir * angle;\n                            currentAngle += dir * angle;\n                        }\n                    });\n                }\n            }\n\n            labelLayout(seriesModel, r, width, height);\n        });\n    };\n\n\n/***/ }),\n\n/***/ 817:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var echarts = __webpack_require__(607);\n\n    // Must use radar component\n    __webpack_require__(823);\n\n    __webpack_require__(818);\n    __webpack_require__(819);\n\n    echarts.registerVisual(zrUtil.curry(__webpack_require__(687), 'radar'));\n    echarts.registerVisual(zrUtil.curry(\n        __webpack_require__(688), 'radar', 'circle', null\n    ));\n    echarts.registerLayout(__webpack_require__(821));\n\n    echarts.registerProcessor(\n        zrUtil.curry(__webpack_require__(686), 'radar')\n    );\n\n    echarts.registerPreprocessor(__webpack_require__(820));\n\n\n/***/ }),\n\n/***/ 818:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var SeriesModel = __webpack_require__(640);\n    var List = __webpack_require__(630);\n    var completeDimensions = __webpack_require__(631);\n    var zrUtil = __webpack_require__(606);\n    var encodeHTML = __webpack_require__(613).encodeHTML;\n\n    var RadarSeries = SeriesModel.extend({\n\n        type: 'series.radar',\n\n        dependencies: ['radar'],\n\n\n        // Overwrite\n        init: function (option) {\n            RadarSeries.superApply(this, 'init', arguments);\n\n            // Enable legend selection for each data item\n            // Use a function instead of direct access because data reference may changed\n            this.legendDataProvider = function () {\n                return this.getRawData();\n            };\n        },\n\n        getInitialData: function (option, ecModel) {\n            var data = option.data || [];\n            var dimensions = completeDimensions(\n                [], data, {extraPrefix: 'indicator_', extraFromZero: true}\n            );\n            var list = new List(dimensions, this);\n            list.initData(data);\n            return list;\n        },\n\n        formatTooltip: function (dataIndex) {\n            var value = this.getRawValue(dataIndex);\n            var coordSys = this.coordinateSystem;\n            var indicatorAxes = coordSys.getIndicatorAxes();\n            var name = this.getData().getName(dataIndex);\n            return encodeHTML(name === '' ? this.name : name) + '<br/>'\n                + zrUtil.map(indicatorAxes, function (axis, idx) {\n                    return encodeHTML(axis.name + ' : ' + value[idx]);\n                }).join('<br />');\n        },\n\n        defaultOption: {\n            zlevel: 0,\n            z: 2,\n            coordinateSystem: 'radar',\n            legendHoverLink: true,\n            radarIndex: 0,\n            lineStyle: {\n                normal: {\n                    width: 2,\n                    type: 'solid'\n                }\n            },\n            label: {\n                normal: {\n                    position: 'top'\n                }\n            },\n            // areaStyle: {\n            // },\n            // itemStyle: {}\n            symbol: 'emptyCircle',\n            symbolSize: 4\n            // symbolRotate: null\n        }\n    });\n\n    module.exports = RadarSeries;\n\n\n/***/ }),\n\n/***/ 819:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var graphic = __webpack_require__(608);\n    var zrUtil = __webpack_require__(606);\n    var symbolUtil = __webpack_require__(639);\n\n    function normalizeSymbolSize(symbolSize) {\n        if (!zrUtil.isArray(symbolSize)) {\n            symbolSize = [+symbolSize, +symbolSize];\n        }\n        return symbolSize;\n    }\n    module.exports = __webpack_require__(607).extendChartView({\n        type: 'radar',\n\n        render: function (seriesModel, ecModel, api) {\n            var polar = seriesModel.coordinateSystem;\n            var group = this.group;\n\n            var data = seriesModel.getData();\n            var oldData = this._data;\n\n            function createSymbol(data, idx) {\n                var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n                var color = data.getItemVisual(idx, 'color');\n                if (symbolType === 'none') {\n                    return;\n                }\n                var symbolSize = normalizeSymbolSize(\n                    data.getItemVisual(idx, 'symbolSize')\n                );\n                var symbolPath = symbolUtil.createSymbol(\n                    symbolType, -1, -1, 2, 2, color\n                );\n                symbolPath.attr({\n                    style: {\n                        strokeNoScale: true\n                    },\n                    z2: 100,\n                    scale: [symbolSize[0] / 2, symbolSize[1] / 2]\n                });\n                return symbolPath;\n            }\n\n            function updateSymbols(oldPoints, newPoints, symbolGroup, data, idx, isInit) {\n                // Simply rerender all\n                symbolGroup.removeAll();\n                for (var i = 0; i < newPoints.length - 1; i++) {\n                    var symbolPath = createSymbol(data, idx);\n                    if (symbolPath) {\n                        symbolPath.__dimIdx = i;\n                        if (oldPoints[i]) {\n                            symbolPath.attr('position', oldPoints[i]);\n                            graphic[isInit ? 'initProps' : 'updateProps'](\n                                symbolPath, {\n                                    position: newPoints[i]\n                                }, seriesModel, idx\n                            );\n                        }\n                        else {\n                            symbolPath.attr('position', newPoints[i]);\n                        }\n                        symbolGroup.add(symbolPath);\n                    }\n                }\n            }\n\n            function getInitialPoints(points) {\n                return zrUtil.map(points, function (pt) {\n                    return [polar.cx, polar.cy];\n                });\n            }\n            data.diff(oldData)\n                .add(function (idx) {\n                    var points = data.getItemLayout(idx);\n                    if (!points) {\n                        return;\n                    }\n                    var polygon = new graphic.Polygon();\n                    var polyline = new graphic.Polyline();\n                    var target = {\n                        shape: {\n                            points: points\n                        }\n                    };\n                    polygon.shape.points = getInitialPoints(points);\n                    polyline.shape.points = getInitialPoints(points);\n                    graphic.initProps(polygon, target, seriesModel, idx);\n                    graphic.initProps(polyline, target, seriesModel, idx);\n\n                    var itemGroup = new graphic.Group();\n                    var symbolGroup = new graphic.Group();\n                    itemGroup.add(polyline);\n                    itemGroup.add(polygon);\n                    itemGroup.add(symbolGroup);\n\n                    updateSymbols(\n                        polyline.shape.points, points, symbolGroup, data, idx, true\n                    );\n\n                    data.setItemGraphicEl(idx, itemGroup);\n                })\n                .update(function (newIdx, oldIdx) {\n                    var itemGroup = oldData.getItemGraphicEl(oldIdx);\n                    var polyline = itemGroup.childAt(0);\n                    var polygon = itemGroup.childAt(1);\n                    var symbolGroup = itemGroup.childAt(2);\n                    var target = {\n                        shape: {\n                            points: data.getItemLayout(newIdx)\n                        }\n                    };\n                    if (!target.shape.points) {\n                        return;\n                    }\n                    updateSymbols(\n                        polyline.shape.points, target.shape.points, symbolGroup, data, newIdx, false\n                    );\n\n                    graphic.updateProps(polyline, target, seriesModel);\n                    graphic.updateProps(polygon, target, seriesModel);\n\n                    data.setItemGraphicEl(newIdx, itemGroup);\n                })\n                .remove(function (idx) {\n                    group.remove(oldData.getItemGraphicEl(idx));\n                })\n                .execute();\n\n            data.eachItemGraphicEl(function (itemGroup, idx) {\n                var itemModel = data.getItemModel(idx);\n                var polyline = itemGroup.childAt(0);\n                var polygon = itemGroup.childAt(1);\n                var symbolGroup = itemGroup.childAt(2);\n                var color = data.getItemVisual(idx, 'color');\n\n                group.add(itemGroup);\n\n                polyline.useStyle(\n                    zrUtil.defaults(\n                        itemModel.getModel('lineStyle.normal').getLineStyle(),\n                        {\n                            fill: 'none',\n                            stroke: color\n                        }\n                    )\n                );\n                polyline.hoverStyle = itemModel.getModel('lineStyle.emphasis').getLineStyle();\n\n                var areaStyleModel = itemModel.getModel('areaStyle.normal');\n                var hoverAreaStyleModel = itemModel.getModel('areaStyle.emphasis');\n                var polygonIgnore = areaStyleModel.isEmpty() && areaStyleModel.parentModel.isEmpty();\n                var hoverPolygonIgnore = hoverAreaStyleModel.isEmpty() && hoverAreaStyleModel.parentModel.isEmpty();\n\n                hoverPolygonIgnore = hoverPolygonIgnore && polygonIgnore;\n                polygon.ignore = polygonIgnore;\n\n                polygon.useStyle(\n                    zrUtil.defaults(\n                        areaStyleModel.getAreaStyle(),\n                        {\n                            fill: color,\n                            opacity: 0.7\n                        }\n                    )\n                );\n                polygon.hoverStyle = hoverAreaStyleModel.getAreaStyle();\n\n                var itemStyle = itemModel.getModel('itemStyle.normal').getItemStyle(['color']);\n                var itemHoverStyle = itemModel.getModel('itemStyle.emphasis').getItemStyle();\n                var labelModel = itemModel.getModel('label.normal');\n                var labelHoverModel = itemModel.getModel('label.emphasis');\n                symbolGroup.eachChild(function (symbolPath) {\n                    symbolPath.setStyle(itemStyle);\n                    symbolPath.hoverStyle = zrUtil.clone(itemHoverStyle);\n\n                    var defaultText = data.get(data.dimensions[symbolPath.__dimIdx], idx);\n                    graphic.setText(symbolPath.style, labelModel, color);\n                    symbolPath.setStyle({\n                        text: labelModel.get('show')\n                            ? zrUtil.retrieve(\n                                seriesModel.getFormattedLabel(\n                                    idx, 'normal', null, symbolPath.__dimIdx\n                                ),\n                                defaultText\n                            )\n                            : null\n                    });\n\n                    graphic.setText(symbolPath.hoverStyle, labelHoverModel, true);\n                    symbolPath.hoverStyle.text = labelHoverModel.get('show')\n                        ? seriesModel.getFormattedLabel(\n                            idx, 'emphasis', null, symbolPath.__dimIdx\n                        )\n                        : null;\n                });\n\n                function onEmphasis() {\n                    polygon.attr('ignore', hoverPolygonIgnore);\n                }\n\n                function onNormal() {\n                    polygon.attr('ignore', polygonIgnore);\n                }\n\n                itemGroup.off('mouseover').off('mouseout').off('normal').off('emphasis');\n                itemGroup.on('emphasis', onEmphasis)\n                    .on('mouseover', onEmphasis)\n                    .on('normal', onNormal)\n                    .on('mouseout', onNormal);\n\n                graphic.setHoverStyle(itemGroup);\n            });\n\n            this._data = data;\n        },\n\n        remove: function () {\n            this.group.removeAll();\n            this._data = null;\n        },\n\n        dispose: function () {}\n    });\n\n\n/***/ }),\n\n/***/ 820:\n/***/ (function(module, exports, __webpack_require__) {\n\n// Backward compat for radar chart in 2\n\n\n    var zrUtil = __webpack_require__(606);\n\n    module.exports = function (option) {\n        var polarOptArr = option.polar;\n        if (polarOptArr) {\n            if (!zrUtil.isArray(polarOptArr)) {\n                polarOptArr = [polarOptArr];\n            }\n            var polarNotRadar = [];\n            zrUtil.each(polarOptArr, function (polarOpt, idx) {\n                if (polarOpt.indicator) {\n                    if (polarOpt.type && !polarOpt.shape) {\n                        polarOpt.shape = polarOpt.type;\n                    }\n                    option.radar = option.radar || [];\n                    if (!zrUtil.isArray(option.radar)) {\n                        option.radar = [option.radar];\n                    }\n                    option.radar.push(polarOpt);\n                }\n                else {\n                    polarNotRadar.push(polarOpt);\n                }\n            });\n            option.polar = polarNotRadar;\n        }\n        zrUtil.each(option.series, function (seriesOpt) {\n            if (seriesOpt.type === 'radar' && seriesOpt.polarIndex) {\n                seriesOpt.radarIndex = seriesOpt.polarIndex;\n            }\n        });\n    };\n\n\n/***/ }),\n\n/***/ 821:\n/***/ (function(module, exports) {\n\n\n\n    module.exports = function (ecModel) {\n        ecModel.eachSeriesByType('radar', function (seriesModel) {\n            var data = seriesModel.getData();\n            var points = [];\n            var coordSys = seriesModel.coordinateSystem;\n            if (!coordSys) {\n                return;\n            }\n\n            function pointsConverter(val, idx) {\n                points[idx] = points[idx] || [];\n                points[idx][i] = coordSys.dataToPoint(val, i);\n            }\n            for (var i = 0; i < coordSys.getIndicatorAxes().length; i++) {\n                var dim = data.dimensions[i];\n                data.each(dim, pointsConverter);\n            }\n\n            data.each(function (idx) {\n                // Close polygon\n                points[idx][0] && points[idx].push(points[idx][0].slice());\n                data.setItemLayout(idx, points[idx]);\n            });\n        });\n    };\n\n\n/***/ }),\n\n/***/ 822:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n *\n * @module echarts/chart/helper/DataSelectable\n */\n\n\n    var zrUtil = __webpack_require__(606);\n\n    module.exports = {\n\n        updateSelectedMap: function (targetList) {\n            this._targetList = targetList.slice();\n            this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n                targetMap.set(target.name, target);\n                return targetMap;\n            }, zrUtil.createHashMap());\n        },\n\n        /**\n         * Either name or id should be passed as input here.\n         * If both of them are defined, id is used.\n         *\n         * @param {string|undefined} name name of data\n         * @param {number|undefined} id dataIndex of data\n         */\n        // PENGING If selectedMode is null ?\n        select: function (name, id) {\n            var target = id != null\n                ? this._targetList[id]\n                : this._selectTargetMap.get(name);\n            var selectedMode = this.get('selectedMode');\n            if (selectedMode === 'single') {\n                this._selectTargetMap.each(function (target) {\n                    target.selected = false;\n                });\n            }\n            target && (target.selected = true);\n        },\n\n        /**\n         * Either name or id should be passed as input here.\n         * If both of them are defined, id is used.\n         *\n         * @param {string|undefined} name name of data\n         * @param {number|undefined} id dataIndex of data\n         */\n        unSelect: function (name, id) {\n            var target = id != null\n                ? this._targetList[id]\n                : this._selectTargetMap.get(name);\n            // var selectedMode = this.get('selectedMode');\n            // selectedMode !== 'single' && target && (target.selected = false);\n            target && (target.selected = false);\n        },\n\n        /**\n         * Either name or id should be passed as input here.\n         * If both of them are defined, id is used.\n         *\n         * @param {string|undefined} name name of data\n         * @param {number|undefined} id dataIndex of data\n         */\n        toggleSelected: function (name, id) {\n            var target = id != null\n                ? this._targetList[id]\n                : this._selectTargetMap.get(name);\n            if (target != null) {\n                this[target.selected ? 'unSelect' : 'select'](name, id);\n                return target.selected;\n            }\n        },\n\n        /**\n         * Either name or id should be passed as input here.\n         * If both of them are defined, id is used.\n         *\n         * @param {string|undefined} name name of data\n         * @param {number|undefined} id dataIndex of data\n         */\n        isSelected: function (name, id) {\n            var target = id != null\n                ? this._targetList[id]\n                : this._selectTargetMap.get(name);\n            return target && target.selected;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 823:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    __webpack_require__(826);\n    __webpack_require__(827);\n\n    __webpack_require__(824);\n\n\n/***/ }),\n\n/***/ 824:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var AxisBuilder = __webpack_require__(649);\n    var zrUtil = __webpack_require__(606);\n    var graphic = __webpack_require__(608);\n\n    var axisBuilderAttrs = [\n        'axisLine', 'axisLabel', 'axisTick', 'axisName'\n    ];\n\n    module.exports = __webpack_require__(607).extendComponentView({\n\n        type: 'radar',\n\n        render: function (radarModel, ecModel, api) {\n            var group = this.group;\n            group.removeAll();\n\n            this._buildAxes(radarModel);\n            this._buildSplitLineAndArea(radarModel);\n        },\n\n        _buildAxes: function (radarModel) {\n            var radar = radarModel.coordinateSystem;\n            var indicatorAxes = radar.getIndicatorAxes();\n            var axisBuilders = zrUtil.map(indicatorAxes, function (indicatorAxis) {\n                var axisBuilder = new AxisBuilder(indicatorAxis.model, {\n                    position: [radar.cx, radar.cy],\n                    rotation: indicatorAxis.angle,\n                    labelDirection: -1,\n                    tickDirection: -1,\n                    nameDirection: 1\n                });\n                return axisBuilder;\n            });\n\n            zrUtil.each(axisBuilders, function (axisBuilder) {\n                zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n                this.group.add(axisBuilder.getGroup());\n            }, this);\n        },\n\n        _buildSplitLineAndArea: function (radarModel) {\n            var radar = radarModel.coordinateSystem;\n            var indicatorAxes = radar.getIndicatorAxes();\n            if (!indicatorAxes.length) {\n                return;\n            }\n            var shape = radarModel.get('shape');\n            var splitLineModel = radarModel.getModel('splitLine');\n            var splitAreaModel = radarModel.getModel('splitArea');\n            var lineStyleModel = splitLineModel.getModel('lineStyle');\n            var areaStyleModel = splitAreaModel.getModel('areaStyle');\n\n            var showSplitLine = splitLineModel.get('show');\n            var showSplitArea = splitAreaModel.get('show');\n            var splitLineColors = lineStyleModel.get('color');\n            var splitAreaColors = areaStyleModel.get('color');\n\n            splitLineColors = zrUtil.isArray(splitLineColors) ? splitLineColors : [splitLineColors];\n            splitAreaColors = zrUtil.isArray(splitAreaColors) ? splitAreaColors : [splitAreaColors];\n\n            var splitLines = [];\n            var splitAreas = [];\n\n            function getColorIndex(areaOrLine, areaOrLineColorList, idx) {\n                var colorIndex = idx % areaOrLineColorList.length;\n                areaOrLine[colorIndex] = areaOrLine[colorIndex] || [];\n                return colorIndex;\n            }\n\n            if (shape === 'circle') {\n                var ticksRadius = indicatorAxes[0].getTicksCoords();\n                var cx = radar.cx;\n                var cy = radar.cy;\n                for (var i = 0; i < ticksRadius.length; i++) {\n                    if (showSplitLine) {\n                        var colorIndex = getColorIndex(splitLines, splitLineColors, i);\n                        splitLines[colorIndex].push(new graphic.Circle({\n                            shape: {\n                                cx: cx,\n                                cy: cy,\n                                r: ticksRadius[i]\n                            }\n                        }));\n                    }\n                    if (showSplitArea && i < ticksRadius.length - 1) {\n                        var colorIndex = getColorIndex(splitAreas, splitAreaColors, i);\n                        splitAreas[colorIndex].push(new graphic.Ring({\n                            shape: {\n                                cx: cx,\n                                cy: cy,\n                                r0: ticksRadius[i],\n                                r: ticksRadius[i + 1]\n                            }\n                        }));\n                    }\n                }\n            }\n            // Polyyon\n            else {\n                var realSplitNumber;\n                var axesTicksPoints = zrUtil.map(indicatorAxes, function (indicatorAxis, idx) {\n                    var ticksCoords = indicatorAxis.getTicksCoords();\n                    realSplitNumber = realSplitNumber == null\n                        ? ticksCoords.length - 1\n                        : Math.min(ticksCoords.length - 1, realSplitNumber);\n                    return zrUtil.map(ticksCoords, function (tickCoord) {\n                        return radar.coordToPoint(tickCoord, idx);\n                    });\n                });\n\n                var prevPoints = [];\n                for (var i = 0; i <= realSplitNumber; i++) {\n                    var points = [];\n                    for (var j = 0; j < indicatorAxes.length; j++) {\n                        points.push(axesTicksPoints[j][i]);\n                    }\n                    // Close\n                    if (points[0]) {\n                        points.push(points[0].slice());\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.error('Can\\'t draw value axis ' + i);\n                        }\n                    }\n\n                    if (showSplitLine) {\n                        var colorIndex = getColorIndex(splitLines, splitLineColors, i);\n                        splitLines[colorIndex].push(new graphic.Polyline({\n                            shape: {\n                                points: points\n                            }\n                        }));\n                    }\n                    if (showSplitArea && prevPoints) {\n                        var colorIndex = getColorIndex(splitAreas, splitAreaColors, i - 1);\n                        splitAreas[colorIndex].push(new graphic.Polygon({\n                            shape: {\n                                points: points.concat(prevPoints)\n                            }\n                        }));\n                    }\n                    prevPoints = points.slice().reverse();\n                }\n            }\n\n            var lineStyle = lineStyleModel.getLineStyle();\n            var areaStyle = areaStyleModel.getAreaStyle();\n            // Add splitArea before splitLine\n            zrUtil.each(splitAreas, function (splitAreas, idx) {\n                this.group.add(graphic.mergePath(\n                    splitAreas, {\n                        style: zrUtil.defaults({\n                            stroke: 'none',\n                            fill: splitAreaColors[idx % splitAreaColors.length]\n                        }, areaStyle),\n                        silent: true\n                    }\n                ));\n            }, this);\n\n            zrUtil.each(splitLines, function (splitLines, idx) {\n                this.group.add(graphic.mergePath(\n                    splitLines, {\n                        style: zrUtil.defaults({\n                            fill: 'none',\n                            stroke: splitLineColors[idx % splitLineColors.length]\n                        }, lineStyle),\n                        silent: true\n                    }\n                ));\n            }, this);\n\n        }\n    });\n\n\n/***/ }),\n\n/***/ 825:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var Axis = __webpack_require__(650);\n\n    function IndicatorAxis(dim, scale, radiusExtent) {\n        Axis.call(this, dim, scale, radiusExtent);\n\n        /**\n         * Axis type\n         *  - 'category'\n         *  - 'value'\n         *  - 'time'\n         *  - 'log'\n         * @type {string}\n         */\n        this.type = 'value';\n\n        this.angle = 0;\n\n        /**\n         * Indicator name\n         * @type {string}\n         */\n        this.name = '';\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.model;\n    }\n\n    zrUtil.inherits(IndicatorAxis, Axis);\n\n    module.exports = IndicatorAxis;\n\n\n/***/ }),\n\n/***/ 826:\n/***/ (function(module, exports, __webpack_require__) {\n\n// TODO clockwise\n\n\n    var zrUtil = __webpack_require__(606);\n    var IndicatorAxis = __webpack_require__(825);\n    var IntervalScale = __webpack_require__(638);\n    var numberUtil = __webpack_require__(610);\n    var axisHelper = __webpack_require__(620);\n\n    function Radar(radarModel, ecModel, api) {\n\n        this._model = radarModel;\n        /**\n         * Radar dimensions\n         * @type {Array.<string>}\n         */\n        this.dimensions = [];\n\n        this._indicatorAxes = zrUtil.map(radarModel.getIndicatorModels(), function (indicatorModel, idx) {\n            var dim = 'indicator_' + idx;\n            var indicatorAxis = new IndicatorAxis(dim, new IntervalScale());\n            indicatorAxis.name = indicatorModel.get('name');\n            // Inject model and axis\n            indicatorAxis.model = indicatorModel;\n            indicatorModel.axis = indicatorAxis;\n            this.dimensions.push(dim);\n            return indicatorAxis;\n        }, this);\n\n        this.resize(radarModel, api);\n\n        /**\n         * @type {number}\n         * @readOnly\n         */\n        this.cx;\n        /**\n         * @type {number}\n         * @readOnly\n         */\n        this.cy;\n        /**\n         * @type {number}\n         * @readOnly\n         */\n        this.r;\n        /**\n         * @type {number}\n         * @readOnly\n         */\n        this.startAngle;\n    }\n\n    Radar.prototype.getIndicatorAxes = function () {\n        return this._indicatorAxes;\n    };\n\n    Radar.prototype.dataToPoint = function (value, indicatorIndex) {\n        var indicatorAxis = this._indicatorAxes[indicatorIndex];\n\n        return this.coordToPoint(indicatorAxis.dataToCoord(value), indicatorIndex);\n    };\n\n    Radar.prototype.coordToPoint = function (coord, indicatorIndex) {\n        var indicatorAxis = this._indicatorAxes[indicatorIndex];\n        var angle = indicatorAxis.angle;\n        var x = this.cx + coord * Math.cos(angle);\n        var y = this.cy - coord * Math.sin(angle);\n        return [x, y];\n    };\n\n    Radar.prototype.pointToData = function (pt) {\n        var dx = pt[0] - this.cx;\n        var dy = pt[1] - this.cy;\n        var radius = Math.sqrt(dx * dx + dy * dy);\n        dx /= radius;\n        dy /= radius;\n\n        var radian = Math.atan2(-dy, dx);\n\n        // Find the closest angle\n        // FIXME index can calculated directly\n        var minRadianDiff = Infinity;\n        var closestAxis;\n        var closestAxisIdx = -1;\n        for (var i = 0; i < this._indicatorAxes.length; i++) {\n            var indicatorAxis = this._indicatorAxes[i];\n            var diff = Math.abs(radian - indicatorAxis.angle);\n            if (diff < minRadianDiff) {\n                closestAxis = indicatorAxis;\n                closestAxisIdx = i;\n                minRadianDiff = diff;\n            }\n        }\n\n        return [closestAxisIdx, +(closestAxis && closestAxis.coodToData(radius))];\n    };\n\n    Radar.prototype.resize = function (radarModel, api) {\n        var center = radarModel.get('center');\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n        var viewSize = Math.min(viewWidth, viewHeight) / 2;\n        this.cx = numberUtil.parsePercent(center[0], viewWidth);\n        this.cy = numberUtil.parsePercent(center[1], viewHeight);\n\n        this.startAngle = radarModel.get('startAngle') * Math.PI / 180;\n\n        this.r = numberUtil.parsePercent(radarModel.get('radius'), viewSize);\n\n        zrUtil.each(this._indicatorAxes, function (indicatorAxis, idx) {\n            indicatorAxis.setExtent(0, this.r);\n            var angle = (this.startAngle + idx * Math.PI * 2 / this._indicatorAxes.length);\n            // Normalize to [-PI, PI]\n            angle = Math.atan2(Math.sin(angle), Math.cos(angle));\n            indicatorAxis.angle = angle;\n        }, this);\n    };\n\n    Radar.prototype.update = function (ecModel, api) {\n        var indicatorAxes = this._indicatorAxes;\n        var radarModel = this._model;\n        zrUtil.each(indicatorAxes, function (indicatorAxis) {\n            indicatorAxis.scale.setExtent(Infinity, -Infinity);\n        });\n        ecModel.eachSeriesByType('radar', function (radarSeries, idx) {\n            if (radarSeries.get('coordinateSystem') !== 'radar'\n                || ecModel.getComponent('radar', radarSeries.get('radarIndex')) !== radarModel\n            ) {\n                return;\n            }\n            var data = radarSeries.getData();\n            zrUtil.each(indicatorAxes, function (indicatorAxis) {\n                indicatorAxis.scale.unionExtentFromData(data, indicatorAxis.dim);\n            });\n        }, this);\n\n        var splitNumber = radarModel.get('splitNumber');\n\n        function increaseInterval(interval) {\n            var exp10 = Math.pow(10, Math.floor(Math.log(interval) / Math.LN10));\n            // Increase interval\n            var f = interval / exp10;\n            if (f === 2) {\n                f = 5;\n            }\n            else { // f is 2 or 5\n                f *= 2;\n            }\n            return f * exp10;\n        }\n        // Force all the axis fixing the maxSplitNumber.\n        zrUtil.each(indicatorAxes, function (indicatorAxis, idx) {\n            var rawExtent = axisHelper.getScaleExtent(indicatorAxis.scale, indicatorAxis.model);\n            axisHelper.niceScaleExtent(indicatorAxis.scale, indicatorAxis.model);\n\n            var axisModel = indicatorAxis.model;\n            var scale = indicatorAxis.scale;\n            var fixedMin = axisModel.getMin();\n            var fixedMax = axisModel.getMax();\n            var interval = scale.getInterval();\n\n            if (fixedMin != null && fixedMax != null) {\n                // User set min, max, divide to get new interval\n                scale.setExtent(+fixedMin, +fixedMax);\n                scale.setInterval(\n                    (fixedMax - fixedMin) / splitNumber\n                );\n            }\n            else if (fixedMin != null) {\n                var max;\n                // User set min, expand extent on the other side\n                do {\n                    max = fixedMin + interval * splitNumber;\n                    scale.setExtent(+fixedMin, max);\n                    // Interval must been set after extent\n                    // FIXME\n                    scale.setInterval(interval);\n\n                    interval = increaseInterval(interval);\n                } while (max < rawExtent[1] && isFinite(max) && isFinite(rawExtent[1]));\n            }\n            else if (fixedMax != null) {\n                var min;\n                // User set min, expand extent on the other side\n                do {\n                    min = fixedMax - interval * splitNumber;\n                    scale.setExtent(min, +fixedMax);\n                    scale.setInterval(interval);\n                    interval = increaseInterval(interval);\n                } while (min > rawExtent[0] && isFinite(min) && isFinite(rawExtent[0]));\n            }\n            else {\n                var nicedSplitNumber = scale.getTicks().length - 1;\n                if (nicedSplitNumber > splitNumber) {\n                    interval = increaseInterval(interval);\n                }\n                // PENDING\n                var center = Math.round((rawExtent[0] + rawExtent[1]) / 2 / interval) * interval;\n                var halfSplitNumber = Math.round(splitNumber / 2);\n                scale.setExtent(\n                    numberUtil.round(center - halfSplitNumber * interval),\n                    numberUtil.round(center + (splitNumber - halfSplitNumber) * interval)\n                );\n                scale.setInterval(interval);\n            }\n        });\n    };\n\n    /**\n     * Radar dimensions is based on the data\n     * @type {Array}\n     */\n    Radar.dimensions = [];\n\n    Radar.create = function (ecModel, api) {\n        var radarList = [];\n        ecModel.eachComponent('radar', function (radarModel) {\n            var radar = new Radar(radarModel, ecModel, api);\n            radarList.push(radar);\n            radarModel.coordinateSystem = radar;\n        });\n        ecModel.eachSeriesByType('radar', function (radarSeries) {\n            if (radarSeries.get('coordinateSystem') === 'radar') {\n                // Inject coordinate system\n                radarSeries.coordinateSystem = radarList[radarSeries.get('radarIndex') || 0];\n            }\n        });\n        return radarList;\n    };\n\n    __webpack_require__(636).register('radar', Radar);\n    module.exports = Radar;\n\n\n/***/ }),\n\n/***/ 827:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n\n    var axisDefault = __webpack_require__(684);\n    var valueAxisDefault = axisDefault.valueAxis;\n    var Model = __webpack_require__(614);\n    var zrUtil = __webpack_require__(606);\n\n    var axisModelCommonMixin = __webpack_require__(651);\n\n    function defaultsShow(opt, show) {\n        return zrUtil.defaults({\n            show: show\n        }, opt);\n    }\n\n    var RadarModel = __webpack_require__(607).extendComponentModel({\n\n        type: 'radar',\n\n        optionUpdated: function () {\n            var boundaryGap = this.get('boundaryGap');\n            var splitNumber = this.get('splitNumber');\n            var scale = this.get('scale');\n            var axisLine = this.get('axisLine');\n            var axisTick = this.get('axisTick');\n            var axisLabel = this.get('axisLabel');\n            var nameTextStyle = this.get('name');\n            var showName = this.get('name.show');\n            var nameFormatter = this.get('name.formatter');\n            var nameGap = this.get('nameGap');\n            var triggerEvent = this.get('triggerEvent');\n\n            var indicatorModels = zrUtil.map(this.get('indicator') || [], function (indicatorOpt) {\n                // PENDING\n                if (indicatorOpt.max != null && indicatorOpt.max > 0 && !indicatorOpt.min) {\n                    indicatorOpt.min = 0;\n                }\n                else if (indicatorOpt.min != null && indicatorOpt.min < 0 && !indicatorOpt.max) {\n                    indicatorOpt.max = 0;\n                }\n                var iNameTextStyle = nameTextStyle;\n                if(indicatorOpt.color != null) {\n                    iNameTextStyle = zrUtil.defaults({color: indicatorOpt.color}, nameTextStyle);\n                }\n                // Use same configuration\n                indicatorOpt = zrUtil.merge(zrUtil.clone(indicatorOpt), {\n                    boundaryGap: boundaryGap,\n                    splitNumber: splitNumber,\n                    scale: scale,\n                    axisLine: axisLine,\n                    axisTick: axisTick,\n                    axisLabel: axisLabel,\n                    // Competitable with 2 and use text\n                    name: indicatorOpt.text,\n                    nameLocation: 'end',\n                    nameGap: nameGap,\n                    // min: 0,\n                    nameTextStyle: iNameTextStyle,\n                    triggerEvent: triggerEvent\n                }, false);\n                if (!showName) {\n                    indicatorOpt.name = '';\n                }\n                if (typeof nameFormatter === 'string') {\n                    var indName = indicatorOpt.name;\n                    indicatorOpt.name = nameFormatter.replace('{value}', indName != null ? indName : '');\n                }\n                else if (typeof nameFormatter === 'function') {\n                    indicatorOpt.name = nameFormatter(\n                        indicatorOpt.name, indicatorOpt\n                    );\n                }\n                var model = zrUtil.extend(\n                    new Model(indicatorOpt, null, this.ecModel),\n                    axisModelCommonMixin\n                );\n\n                // For triggerEvent.\n                model.mainType = 'radar';\n                model.componentIndex = this.componentIndex;\n\n                return model;\n            }, this);\n\n            this.getIndicatorModels = function () {\n                return indicatorModels;\n            };\n        },\n\n        defaultOption: {\n\n            zlevel: 0,\n\n            z: 0,\n\n            center: ['50%', '50%'],\n\n            radius: '75%',\n\n            startAngle: 90,\n\n            name: {\n                show: true\n                // formatter: null\n                // textStyle: {}\n            },\n\n            boundaryGap: [0, 0],\n\n            splitNumber: 5,\n\n            nameGap: 15,\n\n            scale: false,\n\n            // Polygon or circle\n            shape: 'polygon',\n\n            axisLine: zrUtil.merge(\n                {\n                    lineStyle: {\n                        color: '#bbb'\n                    }\n                },\n                valueAxisDefault.axisLine\n            ),\n            axisLabel: defaultsShow(valueAxisDefault.axisLabel, false),\n            axisTick: defaultsShow(valueAxisDefault.axisTick, false),\n            splitLine: defaultsShow(valueAxisDefault.splitLine, true),\n            splitArea: defaultsShow(valueAxisDefault.splitArea, true),\n\n            // {text, min, max}\n            indicator: []\n        }\n    });\n\n    module.exports = RadarModel;\n\n\n/***/ }),\n\n/***/ 828:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var numberUtil = __webpack_require__(610);\n    var parsePercent = numberUtil.parsePercent;\n\n    var STACK_PREFIX = '__ec_stack_';\n\n    function getSeriesStackId(seriesModel) {\n        return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\n    }\n\n    function getAxisKey(axis) {\n        return axis.dim + axis.index;\n    }\n\n    /**\n     * @param {Object} opt\n     * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.\n     * @param {number} opt.count Positive interger.\n     * @param {number} [opt.barWidth]\n     * @param {number} [opt.barMaxWidth]\n     * @param {number} [opt.barGap]\n     * @param {number} [opt.barCategoryGap]\n     * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\n     */\n    function getLayoutOnAxis(opt, api) {\n        var params = [];\n        var baseAxis = opt.axis;\n        var axisKey = 'axis0';\n\n        if (baseAxis.type !== 'category') {\n            return;\n        }\n        var bandWidth = baseAxis.getBandWidth();\n\n        for (var i = 0; i < opt.count || 0; i++) {\n            params.push(zrUtil.defaults({\n                bandWidth: bandWidth,\n                axisKey: axisKey,\n                stackId: STACK_PREFIX + i\n            }, opt));\n        }\n        var widthAndOffsets = doCalBarWidthAndOffset(params, api);\n\n        var result = [];\n        for (var i = 0; i < opt.count; i++) {\n            var item = widthAndOffsets[axisKey][STACK_PREFIX + i];\n            item.offsetCenter = item.offset + item.width / 2;\n            result.push(item);\n        }\n\n        return result;\n    }\n\n    function calBarWidthAndOffset(barSeries, api) {\n        var seriesInfoList = zrUtil.map(barSeries, function (seriesModel) {\n            var data = seriesModel.getData();\n            var cartesian = seriesModel.coordinateSystem;\n            var baseAxis = cartesian.getBaseAxis();\n            var axisExtent = baseAxis.getExtent();\n            var bandWidth = baseAxis.type === 'category'\n                ? baseAxis.getBandWidth()\n                : (Math.abs(axisExtent[1] - axisExtent[0]) / data.count());\n\n            var barWidth = parsePercent(\n                seriesModel.get('barWidth'), bandWidth\n            );\n            var barMaxWidth = parsePercent(\n                seriesModel.get('barMaxWidth'), bandWidth\n            );\n            var barGap = seriesModel.get('barGap');\n            var barCategoryGap = seriesModel.get('barCategoryGap');\n\n            return {\n                bandWidth: bandWidth,\n                barWidth: barWidth,\n                barMaxWidth: barMaxWidth,\n                barGap: barGap,\n                barCategoryGap: barCategoryGap,\n                axisKey: getAxisKey(baseAxis),\n                stackId: getSeriesStackId(seriesModel)\n            };\n        });\n\n        return doCalBarWidthAndOffset(seriesInfoList, api);\n    }\n\n    function doCalBarWidthAndOffset(seriesInfoList, api) {\n        // Columns info on each category axis. Key is cartesian name\n        var columnsMap = {};\n\n        zrUtil.each(seriesInfoList, function (seriesInfo, idx) {\n            var axisKey = seriesInfo.axisKey;\n            var bandWidth = seriesInfo.bandWidth;\n            var columnsOnAxis = columnsMap[axisKey] || {\n                bandWidth: bandWidth,\n                remainedWidth: bandWidth,\n                autoWidthCount: 0,\n                categoryGap: '20%',\n                gap: '30%',\n                stacks: {}\n            };\n            var stacks = columnsOnAxis.stacks;\n            columnsMap[axisKey] = columnsOnAxis;\n\n            var stackId = seriesInfo.stackId;\n\n            if (!stacks[stackId]) {\n                columnsOnAxis.autoWidthCount++;\n            }\n            stacks[stackId] = stacks[stackId] || {\n                width: 0,\n                maxWidth: 0\n            };\n\n            // Caution: In a single coordinate system, these barGrid attributes\n            // will be shared by series. Consider that they have default values,\n            // only the attributes set on the last series will work.\n            // Do not change this fact unless there will be a break change.\n\n            // TODO\n            var barWidth = seriesInfo.barWidth;\n            if (barWidth && !stacks[stackId].width) {\n                // See #6312, do not restrict width.\n                stacks[stackId].width = barWidth;\n                barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n                columnsOnAxis.remainedWidth -= barWidth;\n            }\n\n            var barMaxWidth = seriesInfo.barMaxWidth;\n            barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n            var barGap = seriesInfo.barGap;\n            (barGap != null) && (columnsOnAxis.gap = barGap);\n            var barCategoryGap = seriesInfo.barCategoryGap;\n            (barCategoryGap != null) && (columnsOnAxis.categoryGap = barCategoryGap);\n        });\n\n        var result = {};\n\n        zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n\n            result[coordSysName] = {};\n\n            var stacks = columnsOnAxis.stacks;\n            var bandWidth = columnsOnAxis.bandWidth;\n            var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n            var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n\n            var remainedWidth = columnsOnAxis.remainedWidth;\n            var autoWidthCount = columnsOnAxis.autoWidthCount;\n            var autoWidth = (remainedWidth - categoryGap)\n                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n            autoWidth = Math.max(autoWidth, 0);\n\n            // Find if any auto calculated bar exceeded maxBarWidth\n            zrUtil.each(stacks, function (column, stack) {\n                var maxWidth = column.maxWidth;\n                if (maxWidth && maxWidth < autoWidth) {\n                    maxWidth = Math.min(maxWidth, remainedWidth);\n                    if (column.width) {\n                        maxWidth = Math.min(maxWidth, column.width);\n                    }\n                    remainedWidth -= maxWidth;\n                    column.width = maxWidth;\n                    autoWidthCount--;\n                }\n            });\n\n            // Recalculate width again\n            autoWidth = (remainedWidth - categoryGap)\n                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n            autoWidth = Math.max(autoWidth, 0);\n\n            var widthSum = 0;\n            var lastColumn;\n            zrUtil.each(stacks, function (column, idx) {\n                if (!column.width) {\n                    column.width = autoWidth;\n                }\n                lastColumn = column;\n                widthSum += column.width * (1 + barGapPercent);\n            });\n            if (lastColumn) {\n                widthSum -= lastColumn.width * barGapPercent;\n            }\n\n            var offset = -widthSum / 2;\n            zrUtil.each(stacks, function (column, stackId) {\n                result[coordSysName][stackId] = result[coordSysName][stackId] || {\n                    offset: offset,\n                    width: column.width\n                };\n\n                offset += column.width * (1 + barGapPercent);\n            });\n        });\n\n        return result;\n    }\n\n    /**\n     * @param {string} seriesType\n     * @param {module:echarts/model/Global} ecModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function barLayoutGrid(seriesType, ecModel, api) {\n\n        var barWidthAndOffset = calBarWidthAndOffset(\n            zrUtil.filter(\n                ecModel.getSeriesByType(seriesType),\n                function (seriesModel) {\n                    return !ecModel.isSeriesFiltered(seriesModel)\n                        && seriesModel.coordinateSystem\n                        && seriesModel.coordinateSystem.type === 'cartesian2d';\n                }\n            )\n        );\n\n        var lastStackCoords = {};\n        var lastStackCoordsOrigin = {};\n\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n\n            // Check series coordinate, do layout for cartesian2d only\n            if (seriesModel.coordinateSystem.type !== 'cartesian2d') {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var cartesian = seriesModel.coordinateSystem;\n            var baseAxis = cartesian.getBaseAxis();\n\n            var stackId = getSeriesStackId(seriesModel);\n            var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n            var columnOffset = columnLayoutInfo.offset;\n            var columnWidth = columnLayoutInfo.width;\n            var valueAxis = cartesian.getOtherAxis(baseAxis);\n\n            var barMinHeight = seriesModel.get('barMinHeight') || 0;\n\n            var valueAxisStart = baseAxis.onZero\n                ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0))\n                : valueAxis.getGlobalExtent()[0];\n\n            var coordDims = [\n                seriesModel.coordDimToDataDim('x')[0],\n                seriesModel.coordDimToDataDim('y')[0]\n            ];\n            var coords = data.mapArray(coordDims, function (x, y) {\n                return cartesian.dataToPoint([x, y]);\n            }, true);\n\n            lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n            lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n            data.setLayout({\n                offset: columnOffset,\n                size: columnWidth\n            });\n\n            data.each(seriesModel.coordDimToDataDim(valueAxis.dim)[0], function (value, idx) {\n                if (isNaN(value)) {\n                    return;\n                }\n\n                if (!lastStackCoords[stackId][idx]) {\n                    lastStackCoords[stackId][idx] = {\n                        p: valueAxisStart, // Positive stack\n                        n: valueAxisStart  // Negative stack\n                    };\n                    lastStackCoordsOrigin[stackId][idx] = {\n                        p: valueAxisStart, // Positive stack\n                        n: valueAxisStart  // Negative stack\n                    };\n                }\n                var sign = value >= 0 ? 'p' : 'n';\n                var coord = coords[idx];\n                var lastCoord = lastStackCoords[stackId][idx][sign];\n                var lastCoordOrigin = lastStackCoordsOrigin[stackId][idx][sign];\n                var x;\n                var y;\n                var width;\n                var height;\n\n                if (valueAxis.isHorizontal()) {\n                    x = lastCoord;\n                    y = coord[1] + columnOffset;\n                    width = coord[0] - lastCoordOrigin;\n                    height = columnWidth;\n\n                    lastStackCoordsOrigin[stackId][idx][sign] += width;\n                    if (Math.abs(width) < barMinHeight) {\n                        width = (width < 0 ? -1 : 1) * barMinHeight;\n                    }\n                    lastStackCoords[stackId][idx][sign] += width;\n                }\n                else {\n                    x = coord[0] + columnOffset;\n                    y = lastCoord;\n                    width = columnWidth;\n                    height = coord[1] - lastCoordOrigin;\n\n                    lastStackCoordsOrigin[stackId][idx][sign] += height;\n                    if (Math.abs(height) < barMinHeight) {\n                        // Include zero to has a positive bar\n                        height = (height <= 0 ? -1 : 1) * barMinHeight;\n                    }\n                    lastStackCoords[stackId][idx][sign] += height;\n                }\n\n                data.setItemLayout(idx, {\n                    x: x,\n                    y: y,\n                    width: width,\n                    height: height\n                });\n            }, true);\n\n        }, this);\n    }\n\n    barLayoutGrid.getLayoutOnAxis = getLayoutOnAxis;\n\n    module.exports = barLayoutGrid;\n\n\n/***/ }),\n\n/***/ 834:\n/***/ (function(module, exports, __webpack_require__) {\n\n!function(e,i){ true?module.exports=i(__webpack_require__(607),__webpack_require__(721),__webpack_require__(716),__webpack_require__(802),__webpack_require__(702),__webpack_require__(812),__webpack_require__(808),__webpack_require__(817)):\"function\"==typeof define&&define.amd?define([\"echarts/lib/echarts\",\"echarts/lib/component/tooltip\",\"echarts/lib/component/legend\",\"echarts/lib/chart/bar\",\"echarts/lib/chart/line\",\"echarts/lib/chart/pie\",\"echarts/lib/chart/funnel\",\"echarts/lib/chart/radar\"],i):e.VeChart=i(e.echarts)}(this,function(e){\"use strict\";function i(e){var i=e.innerRows,t=e.dimAxisName,n=e.dimension,a=e.axisVisible;return n.map(function(e){return{type:\"category\",name:t,nameLocation:\"middle\",nameGap:22,data:i.map(function(i){return i[e]}),axisLabel:{formatter:function(e){return String(e)}},show:a}})}function t(e){for(var i=e.meaAxisName,t=e.meaAxisType,n=e.axisVisible,a=e.digit,r=e.scale,o=e.min,s=e.max,l={type:\"value\",axisTick:{show:!1},show:n},c=[],u=0;u<2;u++)!function(e){t[e]?c[e]=Object.assign({},l,{axisLabel:{formatter:function(i){return V(i,t[e],a)}}}):c[e]=Object.assign({},l),c[e].name=i[e]||\"\",c[e].scale=r[e]||!1,c[e].min=o[e]||null,c[e].max=s[e]||null}(u);return c}function n(e){var i=e.axisSite,t=e.isHistogram,n=e.meaAxisType,a=e.digit,r=e.labelMap,o=t?i.right:i.top;return r&&(o=o.map(function(e){return void 0===r[e]?e:r[e]})),{trigger:\"axis\",formatter:function(e){var i=[];return i.push(e[0].name+\"<br>\"),e.forEach(function(e){var t=e.seriesName,r=~o.indexOf(t)?n[1]:n[0];i.push(j(e.color)),i.push(t+\": \"),i.push(V(e.value,r,a)),i.push(\"<br>\")}),i.join(\"\")}}}function a(e){var i=e.innerRows,t=e.metrics,n=e.stack,a=e.axisSite,r=e.isHistogram,o=e.labelMap,s=e.itemStyle,l=e.label,c=e.showLine,u=void 0===c?[]:c,d=[],m={},h=r?a.right:a.top,f=r?\"yAxisIndex\":\"xAxisIndex\",p=n&&E(n);return t.forEach(function(e){m[e]=[]}),i.forEach(function(e){t.forEach(function(i){m[i].push(e[i])})}),!!(d=Object.keys(m).map(function(e){var i=H({name:o&&o[e]||e,type:~u.indexOf(e)?\"line\":\"bar\",data:m[e]},f,~h.indexOf(e)?\"1\":\"0\");return n&&p[e]&&(i.stack=p[e]),l&&(i.label=l),s&&(i.itemStyle=s),i})).length&&d}function r(e){var i=e.metrics,t=e.labelMap,n=e.legendName;return n||t?{data:t?i.map(function(e){return null==t[e]?e:t[e]}):i,formatter:function(e){return n&&n[e]||e}}:{data:i}}function o(e){var i=e.dimension,t=e.rows,n=e.xAxisName,a=e.axisVisible;return i.map(function(e,i){return{type:\"category\",nameLocation:\"middle\",nameGap:22,boundaryGap:!1,name:n[i]||\"\",axisTick:{show:!0,lineStyle:{color:\"#eee\"}},data:t.map(function(i){return i[e]}),axisLabel:{formatter:function(e){return String(e)}},show:a}})}function s(e){var i=e.rows,t=e.axisSite,n=e.metrics,a=e.area,r=e.stack,o=e.nullAddZero,s=e.labelMap,l=e.label,c=e.itemStyle,u=e.lineStyle,d=e.areaStyle,m=[],h={},f=r&&E(r);return n.forEach(function(e){h[e]=[]}),i.forEach(function(e){n.forEach(function(i){var t=null;null!=e[i]?t=e[i]:o&&(t=0),h[i].push(t)})}),n.forEach(function(e){var i={name:s&&s[e]||e,type:\"line\",data:h[e]};a&&(i.areaStyle={normal:{}}),i.yAxisIndex=~t.right.indexOf(e)?1:0,r&&f[e]&&(i.stack=f[e]),l&&(i.label=l),c&&(i.itemStyle=c),u&&(i.lineStyle=u),d&&(i.areaStyle=d),m.push(i)}),!!m.length&&m}function l(e){for(var i=e.yAxisName,t=e.yAxisType,n=e.axisVisible,a=e.scale,r=e.min,o=e.max,s=e.digit,l={type:\"value\",axisTick:{show:!1},show:n},c=[],u=0;u<2;u++)!function(e){t[e]?c[e]=Object.assign({},l,{axisLabel:{formatter:function(i){return V(i,t[e],s)}}}):c[e]=Object.assign({},l),c[e].name=i[e]||\"\",c[e].scale=a[e]||!1,c[e].min=r[e]||null,c[e].max=o[e]||null}(u);return c}function c(e){var i=e.axisSite,t=e.yAxisType,n=e.digit,a=e.labelMap,r=a?i.right.map(function(e){return void 0===a[e]?e:a[e]}):i.right;return{trigger:\"axis\",formatter:function(e){var i=[];return i.push(e[0].name+\"<br>\"),e.forEach(function(e){var a=null,o=~r.indexOf(e.seriesName)?t[1]:t[0];a=V(e.data,o,n),i.push(j(e.color)),i.push(e.seriesName+\": \"+a),i.push(\"<br>\")}),i.join(\"\")}}}function u(e){var i=e.metrics,t=e.legendName,n=e.labelMap;return t||n?{data:n?i.map(function(e){return null==n[e]?e:n[e]}):i,formatter:function(e){return t&&t[e]||e}}:{data:i}}function d(e){var i=e.innerRows,t=e.dataType,n=e.percentShow,a=e.dimension,r=e.metrics,o=e.radius,s=e.offsetY,l=e.selectedMode,c=e.hoverAnimation,u=e.digit,d=e.roseType,m=e.label,h=e.level,f=e.limitShowNum,p=e.isRing,v=[],b={},g=[];h?(h.forEach(function(e,i){e.forEach(function(e){b[e]=i})}),i.forEach(function(e){var i=b[e[a]];void 0!==i&&(g[i]?g[i].push(e):g[i]=[e])})):g.push(i);var x={type:\"pie\",selectedMode:l,hoverAnimation:c,roseType:d,center:[\"50%\",s]},y=g.length;if(g.forEach(function(e,i){var s=Object.assign({data:[]},x),l=o/y;if(i){var c=l+o/(2*y)*(2*i-1),d=c+o/(2*y);s.radius=[c,d]}else s.radius=p?o:l;y>1&&0===i&&(s.label={normal:{position:\"inner\"}}),m&&(s.label=m),n&&(s.label={normal:{show:!0,position:y>1&&0===i?\"inner\":\"outside\",formatter:function(e){var i=[];return i.push(e.name+\":\"),i.push(V(e.value,t,u)),i.push(\"(\"+e.percent+\"%)\"),i.join(\" \")}}}),s.data=e.map(function(e){return{name:e[a],value:e[r]}}),v.push(s)}),f&&f<v[0].data.length){var O=v[0].data,w=0;O.slice(f,O.length).forEach(function(e){w+=e.value}),v[0].data=O.slice(0,f),v[0].data.push({name:\"其他\",value:w})}return v}function m(e){var i=e.innerRows,t=e.dimension,n=e.legendLimit,a=e.level,r=e.limitShowNum,o=[],s=[];if(a)a.forEach(function(e){e.forEach(function(e){s.push(e)})}),o=s;else if(r&&r<i.length){for(var l=0;l<r;l++)o.push(i[l][t]);o.push(\"其他\")}else o=i.map(function(e){return e[t]});return!!o.length&&{data:o,show:o.length<n}}function h(e){var i=e.dataType,t=e.innerRows,n=e.limitShowNum,a=e.digit,r=e.metrics,o=e.dimension,s=0,l=t.map(function(e){return s+=e[r],{name:e[o],value:e[r]}}).slice(n,t.length);return{formatter:function(e){var t=[];return t.push(j(e.color)),n&&\"其他\"===e.name?(t.push(\"其他:\"),l.forEach(function(e){var n=e.name,r=e.value,o=V(r/s,\"percent\");t.push(\"<br>\"+n+\":\"),t.push(V(r,i,a)),t.push(\"(\"+o+\")\")})):(t.push(e.name+\":\"),t.push(V(e.value,i,a)),t.push(\"(\"+e.percent+\"%)\")),t.join(\" \")}}}function f(e,i){return{trigger:\"item\",formatter:function(t){var n=[];return n.push(j(t.color)),n.push(t.name+\": \"+V(t.data.realValue,e,i)),n.join(\"\")}}}function p(e){var i=e.dimension,t=e.metrics,n=e.rows,a=e.sequence,r=e.ascending,o={type:\"funnel\"};n.sort(function(e,t){return a.indexOf(e[i])-a.indexOf(t[i])});var s=!1;n.some(function(e,i){if(i&&e[t]>n[i-1][t])return s=!0,!0});var l=100/n.length;return o.data=s?n.slice().reverse().map(function(e,n){return{name:e[i],value:(n+1)*l,realValue:e[t]}}):n.map(function(e){return{name:e[i],value:e[t],realValue:e[t]}}),r&&(o.sort=\"ascending\"),o}function v(e,i){return{data:e.map(function(e){return e[i]})}}function b(e,i,t){var n=[],a=[];return i.indicator.map(function(i,t){n[t]=e[i.name],a[t]=i.name}),{formatter:function(e){var i=[];return i.push(j(e.color)),i.push(e.seriesName+\"<br />\"),e.data.value.forEach(function(e,r){i.push(a[r]+\": \"),i.push(V(e,n[r],t)+\"<br />\")}),i.join(\"\")}}}function g(e,i){var t={indicator:[],shape:\"circle\",splitNumber:5},n={};return e.forEach(function(e){i.forEach(function(i){n[i]?n[i].push(e[i]):n[i]=[e[i]]})}),t.indicator=Object.keys(n).map(function(e){return{name:e,max:Math.max.apply(null,n[e])}}),t}function x(e){var i=e.rows,t=e.dimension,n=e.metrics,a={};e.radar.indicator.forEach(function(e,i){a[e.name]=i});var r=i.map(function(e){var i={value:[],name:e[t]};return Object.keys(e).forEach(function(t){~n.indexOf(t)&&(i.value[a[t]]=e[t])}),i});return[{name:t,type:\"radar\",data:r}]}function y(e,i){return{trigger:\"axis\",axisPointer:{type:\"shadow\"},formatter:function(t){var n=t[1];return[n.name+\"<br/>\"+n.seriesName+\" :\",\"\"+V(n.value,e,i)].join(\"\")}}}function O(e){var i=e.dimension,t=e.rows,n=e.remainStatus,a=e.totalName,r=e.remainName,o=e.xAxisName,s=e.axisVisible,l=[a].concat(t.map(function(e){return e[i]}));return\"have-remain\"===n&&(l=l.concat([r])),{type:\"category\",name:o,splitLine:{show:!1},data:l,show:s}}function w(e){var i=e.dataType,t=e.yAxisName,n=e.axisVisible,a=e.digit;return{type:\"value\",name:t,axisTick:{show:!1},axisLabel:{formatter:function(e){return V(e,i,a)}},show:n}}function S(e){var i=e.dataType,t=e.rows,n=e.metrics,a=e.totalNum,r=e.remainStatus,o=e.dataSum,s=e.digit,l={type:\"bar\",stack:\"总量\"},c=o,u=a,d=void 0,m=void 0,h=t.map(function(e){return e[n]});\"have-remain\"===r?(d=[0].concat(t.map(function(e){return u-=e[n]})).concat([0]),m=[a].concat(h).concat([a-o])):(d=[0].concat(t.map(function(e){return c-=e[n]})),m=[o].concat(h));var f=[];return f.push(Object.assign({name:\"辅助\",itemStyle:{normal:{opacity:0},emphasis:{opacity:0}},data:d},l)),f.push(Object.assign({name:\"数值\",label:{normal:{show:!0,position:\"top\",formatter:function(e){return V(e.value,i,s)}}},data:m},l)),f}function A(e,i){return i?i>e?\"have-remain\":\"none-remain\":\"not-total\"}e=\"default\"in e?e.default:e,\"function\"!=typeof Object.assign&&(Object.assign=function(e){if(null==e)throw new TypeError(\"Cannot convert undefined or null to object\");e=Object(e);for(var i=1;i<arguments.length;i++){var t=arguments[i];if(null!=t)for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e}),e.registerTheme(\"ve-chart\",{categoryAxis:{axisLine:{show:!1},axisTick:{show:!1},splitLine:{show:!1}},valueAxis:{axisLine:{show:!1}},line:{smooth:!0},grid:{containLabel:!0,left:10,right:10}});var j=function(e){return['<span style=\"',\"background-color:\"+e+\";\",\"display: inline-block;\",\"width: 10px;\",\"height: 10px;\",\"border-radius: 50%;\",\"margin-right:2px;\",'\"></span>'].join(\"\")},N=[\"#19d4ae\",\"#5ab1ef\",\"#fa6e86\",\"#ffb980\",\"#0067a6\",\"#c4b4e4\",\"#d87a80\",\"#9cbbff\",\"#d9d0c7\",\"#87a997\",\"#d49ea2\",\"#5b4947\",\"#7ba3a8\"],k=function(e){var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;if(isNaN(+e))return e;for(var t=[{value:1e18,symbol:\"E\"},{value:1e15,symbol:\"P\"},{value:1e12,symbol:\"T\"},{value:1e9,symbol:\"B\"},{value:1e6,symbol:\"M\"},{value:1e3,symbol:\"k\"}],n=0;n<t.length;n++)if(Math.abs(e)>=t[n].value)return(e/t[n].value).toFixed(i)+t[n].symbol;return e.toString()},T=function(e){return String(e).replace(/^(\\s+|-)?\\d+(?=.?\\d*($|\\s))/g,function(e){return e.replace(/(?=(?!\\b)(\\d{3})+$)/g,\",\")})},V=function(e,i){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:2,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:\"-\";if(null==e||isNaN(e))return n;switch(i){case\"KMB\":return k(e);case\"percent\":return parseFloat((100*e).toFixed(t))+\"%\";case\"normal\":return T(e);default:return e}},E=function(e){var i={};return Object.keys(e).forEach(function(t){e[t].forEach(function(e){i[e]=t})}),i},L=function(e){return JSON.parse(JSON.stringify(e))},M=function(e){return Object.prototype.toString.call(e)},H=function(e,i,t){return i in e?Object.defineProperty(e,i,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[i]=t,e},P=function(e,o,s,l){var c=L(o),u=s.axisSite,d=void 0===u?{top:[]}:u,m=s.dimension,h=void 0===m?[e[0]]:m,f=s.stack,p=void 0===f?{}:f,v=s.axisVisible,b=void 0===v||v,g=s.digit,x=void 0===g?2:g,y=s.dataOrder,O=void 0!==y&&y,w=s.scale,S=void 0===w?[!1,!1]:w,A=s.min,j=void 0===A?[null,null]:A,N=s.max,k=void 0===N?[null,null]:N,T=s.legendName,V=s.labelMap,E=s.label,M=s.itemStyle,H=s.showLine,P=l.tooltipVisible,C=l.legendVisible,R=e.slice();s.metrics?R=s.metrics:R.splice(e.indexOf(h[0]),1);var q=s.xAxisType||[\"normal\",\"normal\"],F=s.xAxisName||[],$=s.yAxisName||\"\";if(O){var _=O.label,Z=O.order;_&&Z?c.sort(function(e,i){return\"desc\"===Z?e[_]-i[_]:i[_]-e[_]}):console.warn(\"Need to provide name and order parameters\")}var z=C&&r({metrics:R,labelMap:V,legendName:T}),B=i({innerRows:c,dimAxisName:$,dimension:h,axisVisible:b}),G=t({meaAxisName:F,meaAxisType:q,axisVisible:b,digit:x,scale:S,min:j,max:k}),I={axisSite:d,isHistogram:!1,meaAxisType:q,digit:x,labelMap:V};return{legend:z,yAxis:B,series:a({innerRows:c,metrics:R,stack:p,axisSite:d,isHistogram:!1,labelMap:V,itemStyle:M,label:E,showLine:H}),xAxis:G,tooltip:P&&n(I)}},C=function(e,o,s,l){var c=L(o),u=s.axisSite,d=void 0===u?{right:[]}:u,m=s.dimension,h=void 0===m?[e[0]]:m,f=s.stack,p=void 0===f?{}:f,v=s.axisVisible,b=void 0===v||v,g=s.digit,x=void 0===g?2:g,y=s.dataOrder,O=void 0!==y&&y,w=s.scale,S=void 0===w?[!1,!1]:w,A=s.min,j=void 0===A?[null,null]:A,N=s.max,k=void 0===N?[null,null]:N,T=s.labelMap,V=s.legendName,E=s.label,M=s.itemStyle,H=s.showLine;if(O){var P=O.label,C=O.order;P&&C?c.sort(function(e,i){return\"desc\"===C?e[P]-i[P]:i[P]-e[P]}):console.warn(\"Need to provide name and order parameters\")}var R=l.tooltipVisible,q=l.legendVisible,F=e.slice();s.metrics?F=s.metrics:F.splice(e.indexOf(h[0]),1);var $=s.yAxisType||[\"normal\",\"normal\"],_=s.yAxisName||[],Z=s.xAxisName||\"\",z=q&&r({metrics:F,labelMap:T,legendName:V}),B=i({innerRows:c,dimAxisName:Z,dimension:h,axisVisible:b}),G={axisSite:d,isHistogram:!0,meaAxisType:$,digit:x,labelMap:T};return{legend:z,yAxis:t({meaAxisName:_,meaAxisType:$,axisVisible:b,digit:x,scale:S,min:j,max:k}),series:a({innerRows:c,metrics:F,stack:p,axisSite:d,isHistogram:!0,labelMap:T,itemStyle:M,label:E,showLine:H}),xAxis:B,tooltip:R&&n(G)}},R=function(e,i,t,n){var a=t.axisSite,r=void 0===a?{right:[]}:a,d=t.yAxisType,m=void 0===d?[\"normal\",\"normal\"]:d,h=t.yAxisName,f=void 0===h?[]:h,p=t.dimension,v=void 0===p?[e[0]]:p,b=t.xAxisName,g=void 0===b?[]:b,x=t.axisVisible,y=void 0===x||x,O=t.area,w=t.stack,S=t.scale,A=void 0===S?[!1,!1]:S,j=t.min,N=void 0===j?[null,null]:j,k=t.max,T=void 0===k?[null,null]:k,V=t.nullAddZero,E=void 0!==V&&V,L=t.digit,M=void 0===L?2:L,H=t.legendName,P=t.labelMap,C=t.label,R=t.itemStyle,q=t.lineStyle,F=t.areaStyle,$=n.tooltipVisible,_=n.legendVisible,Z=e.slice();t.metrics?Z=t.metrics:Z.splice(e.indexOf(v[0]),1);var z=_&&u({metrics:Z,legendName:H,labelMap:P}),B=$&&c({axisSite:r,yAxisType:m,digit:M,labelMap:P}),G=o({dimension:v,rows:i,xAxisName:g,axisVisible:y}),I=l({yAxisName:f,yAxisType:m,axisVisible:y,scale:A,min:N,max:T,digit:M}),Y=s({rows:i,axisSite:r,metrics:Z,area:O,stack:w,nullAddZero:E,labelMap:P,label:C,itemStyle:R,lineStyle:q,areaStyle:F});return!(!G||!Y)&&{legend:z,xAxis:G,series:Y,yAxis:I,tooltip:B}},q=[80,100],F=[20,100],$=function(e,i,t,n,a){var r=L(i),o=t.dataType,s=void 0===o?\"normal\":o,l=t.percentShow,c=t.dimension,u=void 0===c?e[0]:c,f=t.metrics,p=void 0===f?e[1]:f,v=t.roseType,b=void 0!==v&&v,g=t.radius,x=void 0===g?a?b?F:q:100:g,y=t.offsetY,O=void 0===y?200:y,w=t.legendLimit,S=void 0===w?30:w,A=t.selectedMode,j=void 0!==A&&A,N=t.hoverAnimation,k=void 0===N||N,T=t.digit,V=void 0===T?2:T,E=t.label,M=void 0!==E&&E,H=t.level,P=void 0!==H&&H,C=t.limitShowNum,R=void 0===C?0:C,$=n.tooltipVisible,_=n.legendVisible;R&&r.sort(function(e,i){return i[p]-e[p]});var Z={innerRows:r,dimension:u,legendLimit:S,level:P,limitShowNum:R};return{series:d({innerRows:r,dataType:s,percentShow:l,dimension:u,metrics:p,radius:x,offsetY:O,selectedMode:j,hoverAnimation:k,digit:V,roseType:b,label:M,level:P,limitShowNum:R,isRing:a}),legend:_&&m(Z),tooltip:$&&h({dataType:s,innerRows:r,limitShowNum:R,digit:V,metrics:p,dimension:u})}},_=function(e,i,t,n){return $(e,i,t,n,!0)},Z=function(e,i,t,n){var a=e.slice(),r=i.slice(),o=t.dataType,s=void 0===o?\"normal\":o,l=t.dimension,c=void 0===l?a[0]:l,u=t.sequence,d=void 0===u?r.map(function(e){return e[c]}):u,m=t.digit,h=void 0===m?2:m,v=t.ascending,b=n.tooltipVisible,g=n.legendVisible,x=void 0;if(t.metrics)x=t.metrics;else{var y=a.slice();y.splice(a.indexOf(c),1),x=y[0]}return{tooltip:b&&f(s,h),legend:g&&{data:d},series:p({dimension:c,metrics:x,rows:r,sequence:d,ascending:v})}},z=function(e,i,t,n){var a=t.dataType,r=void 0===a?{}:a,o=t.dimension,s=void 0===o?e[0]:o,l=t.digit,c=void 0===l?2:l,u=n.tooltipVisible,d=n.legendVisible,m=e.slice();t.metrics?m=t.metrics:m.splice(e.indexOf(s),1);var h=d&&v(i,s),f=g(i,m);return{legend:h,tooltip:u&&b(r,f,c),radar:f,series:x({rows:i,dimension:s,metrics:m,radar:f})}},B=function(e,i,t,n){var a=t.dataType,r=void 0===a?\"normal\":a,o=t.dimension,s=void 0===o?e[0]:o,l=t.totalName,c=void 0===l?\"总计\":l,u=t.totalNum,d=t.remainName,m=void 0===d?\"其他\":d,h=t.xAxisName,f=void 0===h?s:h,p=t.axisVisible,v=void 0===p||p,b=t.digit,g=void 0===b?2:b,x=n.tooltipVisible,j=e.slice();j.splice(j.indexOf(s),1);var N=j[0],k=N,T=x&&y(r,g),V=i.reduce(function(e,i){return e+Number(i[N])},0).toFixed(2),E=A(V,u);return{tooltip:T,xAxis:O({dimension:s,rows:i,remainStatus:E,totalName:c,remainName:m,xAxisName:f,axisVisible:v}),yAxis:w({dataType:r,yAxisName:k,axisVisible:v,digit:g}),series:S({dataType:r,rows:i,dimension:s,metrics:N,totalNum:u,remainStatus:E,dataSum:V,digit:g})}};return{render:function(){var e=this,i=e.$createElement;return(e._self._c||i)(\"div\",{ref:\"canvas\",staticClass:\"ve-chart\",style:e.canvasStyle})},staticRenderFns:[],name:\"VeChart\",mixins:[{props:{data:{type:[Object,Array],default:function(){return{}}},settings:{type:Object,default:function(){return{}}},width:{type:String,default:\"auto\"},height:{type:String,default:\"400px\"},beforeConfig:{type:Function},afterConfig:{type:Function},afterSetOption:{type:Function},afterSetOptionOnce:{type:Function},events:{type:Object},grid:{type:Object},colors:{type:Array},tooltipVisible:{type:Boolean,default:!0},legendVisible:{type:Boolean,default:!0},legendPosition:{type:String},markLine:{type:Object},markArea:{type:Object},markPoint:{type:Object},visualMap:{type:[Object,Array]},dataZoom:{type:[Object,Array]},toolbox:{type:Object},initOptions:{type:Object,default:function(){return{}}},title:Object,legend:Object,xAxis:Object,yAxis:Object,radar:Object,tooltip:Object,axisPointer:Object,brush:Object,geo:Object,timeline:Object,graphic:Object,series:[Object,Array],backgroundColor:[Object,String],textStyle:Object,animation:Object,theme:Object,themeName:String},watch:{data:{deep:!0,handler:function(e){e&&this.dataHandler(e)}},settings:{deep:!0,handler:function(e){e.type&&this.chartLib&&(this.chartHandler=this.chartLib[e.type]),this.dataHandler(this.data)}}},computed:{canvasStyle:function(){return{width:this.width,height:this.height,position:\"relative\"}},chartColor:function(){return this.colors||this.theme&&this.theme.color||N}},methods:{dataHandler:function(e){if(this.chartHandler){var i=e,t=i.columns,n=i.rows,a={tooltipVisible:this.tooltipVisible,legendVisible:this.legendVisible,echarts:this.echarts,color:this.chartColor};this.beforeConfig&&(e=this.beforeConfig(e));var r=this.chartHandler(t,n,this.settings,a);r&&(\"function\"==typeof r.then?r.then(this.optionsHandler):this.optionsHandler(r))}},optionsHandler:function(e){var i=this;if(this.legendPosition&&e.legend&&(e.legend[this.legendPosition]=10,~[\"left\",\"right\"].indexOf(this.legendPosition)&&(e.legend.top=\"middle\",e.legend.orient=\"vertical\")),this.themeName||(e.color=this.chartColor),[\"grid\",\"dataZoom\",\"visualMap\",\"toolbox\",\"title\",\"legend\",\"xAxis\",\"yAxis\",\"radar\",\"tooltip\",\"axisPointer\",\"brush\",\"geo\",\"timeline\",\"graphic\",\"series\",\"backgroundColor\",\"textStyle\"].forEach(function(t){i[t]&&(e[t]=i[t])}),this.animation&&Object.keys(this.animation).forEach(function(t){e[t]=i.animation[t]}),this.markArea||this.markLine||this.markPoint){var t={markArea:this.markArea,markLine:this.markLine,markPoint:this.markPoint},n=e.series;\"[object Array]\"===M(n)?n.forEach(function(e){i.addMark(e,t)}):\"[object Object]\"===M(n)&&this.addMark(n,t)}this.afterConfig&&(e=this.afterConfig(e)),this.echarts.setOption(e,!0),this.afterSetOption&&this.afterSetOption(this.echarts),this.afterSetOptionOnce&&!this._once.afterSetOptionOnce&&(this._once.afterSetOptionOnce=this.afterSetOptionOnce(this.echarts))},addMark:function(e,i){Object.keys(i).forEach(function(t){i[t]&&(e[t]=i[t])})},init:function(){if(!this.echarts){var e=this.themeName||(this.theme?\"outer-theme\":\"ve-chart\");this.echarts=this.echartsLib.init(this.$refs.canvas,e,this.initOptions),this.data&&this.dataHandler(this.data),this.events&&this.bindEvents()}},bindEvents:function(){var e=this;Object.keys(this.events).forEach(function(i){e.echarts.on(i,e.events[i])})},addWatchToProps:function(){var e=this,i=this._watchers.map(function(e){return e.expression});Object.keys(this.$props).forEach(function(t){if(!~i.indexOf(t)){var n={};\"[object Object]\"===M(t)&&(n.deep=!0),e.$watch(t,function(){e.dataHandler(e.data)},n)}})},registerTheme:function(){e.registerTheme(\"outer-theme\",this.theme)}},created:function(){this.echarts=null,this._once={},this.addWatchToProps(),this.theme&&this.registerTheme()},mounted:function(){this.init(),window.addEventListener(\"resize\",this.echarts.resize)},beforeDestory:function(){window.removeEventListener(\"resize\",this.echarts.resize),this.echarts.dispose()}}],created:function(){this.chartLib={bar:P,histogram:C,line:R,pie:$,ring:_,funnel:Z,radar:z,waterfall:B},this.chartHandler=this.chartLib[this.settings.type],this.echartsLib=e}}});\n\n\n/***/ }),\n\n/***/ 879:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_slicedToArray__ = __webpack_require__(210);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_slicedToArray___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_slicedToArray__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_promise__ = __webpack_require__(139);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_promise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_promise__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_regenerator__ = __webpack_require__(96);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_regenerator___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_regenerator__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_asyncToGenerator__ = __webpack_require__(95);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_asyncToGenerator___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_asyncToGenerator__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_extends__ = __webpack_require__(67);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_extends___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_extends__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_v_charts_lib_chart_min__ = __webpack_require__(834);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_v_charts_lib_chart_min___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_v_charts_lib_chart_min__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_components_v_header_v_header__ = __webpack_require__(205);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_components_v_header_v_header___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_components_v_header_v_header__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_base_loading_loading__ = __webpack_require__(208);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_base_loading_loading___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_base_loading_loading__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_vuex__ = __webpack_require__(68);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_common_js_mixin__ = __webpack_require__(628);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_api_config__ = __webpack_require__(69);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_api__ = __webpack_require__(70);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'analysis-detail',\n  mixins: [__WEBPACK_IMPORTED_MODULE_9_common_js_mixin__[\"a\" /* chartDataMixin */], __WEBPACK_IMPORTED_MODULE_9_common_js_mixin__[\"b\" /* dateMixin */]],\n  props: {},\n  data: function data() {\n    return {\n      chartSettings: {},\n      chartData0: {\n        bars: [],\n        times: []\n      }\n    };\n  },\n\n  computed: __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_extends___default()({}, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_8_vuex__[\"a\" /* mapGetters */])(['analysisItem']), __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_8_vuex__[\"a\" /* mapGetters */])({\n    selectedItem: 'analysis/selectedItem'\n  })),\n  components: {\n    VeChart: __WEBPACK_IMPORTED_MODULE_5_v_charts_lib_chart_min___default.a,\n    VHeader: __WEBPACK_IMPORTED_MODULE_6_components_v_header_v_header___default.a,\n    Loading: __WEBPACK_IMPORTED_MODULE_7_base_loading_loading___default.a\n  },\n  methods: {\n    _getChart0: function _getChart0() {\n      var _this = this;\n\n      return __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_asyncToGenerator___default()(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_regenerator___default.a.mark(function _callee() {\n        var params;\n        return __WEBPACK_IMPORTED_MODULE_2_babel_runtime_regenerator___default.a.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                params = {\n                  id: _this.selectedItem.id,\n                  q: _this.selectedItem.q,\n                  tag: _this.selectedItem.tag,\n                  startPoTime: _this.selectedItem.startPoTime,\n                  endPoTime: _this.selectedItem.endPoTime\n                };\n                _context.next = 3;\n                return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_11_api__[\"g\" /* getChart0 */])(params).then(function (data) {\n                  if (data.code === __WEBPACK_IMPORTED_MODULE_10_api_config__[\"a\" /* ERR_OK */]) {\n                    return data;\n                  }\n                });\n\n              case 3:\n                return _context.abrupt('return', _context.sent);\n\n              case 4:\n              case 'end':\n                return _context.stop();\n            }\n          }\n        }, _callee, _this);\n      }))();\n    },\n    _concurrent: function _concurrent() {\n      var _this2 = this;\n\n      return __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_asyncToGenerator___default()(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_regenerator___default.a.mark(function _callee2() {\n        var data, _data, chartData0;\n\n        return __WEBPACK_IMPORTED_MODULE_2_babel_runtime_regenerator___default.a.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_promise___default.a.all([_this2._getChart0()]);\n\n              case 2:\n                data = _context2.sent;\n                _data = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_slicedToArray___default()(data, 1), chartData0 = _data[0].obj;\n\n                _this2.chartData0 = chartData0;\n\n              case 5:\n              case 'end':\n                return _context2.stop();\n            }\n          }\n        }, _callee2, _this2);\n      }))();\n    },\n    getTitle: function getTitle(label) {\n      switch (label) {\n        case 'company':\n          {\n            return '企业竞争力分析报告';\n          }\n        case 'product':\n          {\n            return '产品竞争力分析报告';\n          }\n        case 'tenderProduct':\n          {\n            return '产品招标竞争力分析报告';\n          }\n        case 'tenderCompany':\n          {\n            return '企业招标竞争力分析报告';\n          }\n        default:\n          {\n            return '';\n          }\n      }\n    }\n  },\n  created: function created() {\n    this.chartSettings = {\n      type: 'line',\n      label: {\n        normal: { show: true }\n      }\n    };\n    this._concurrent();\n    if (!this.selectedItem.id) this.$router.push('/analysis');\n  },\n  mounted: function mounted() {}\n});\n\n/***/ }),\n\n/***/ 916:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(586)();\n// imports\n\n\n// module\nexports.push([module.i, \".analysis-detail[data-v-5314579c]{position:fixed;top:0;bottom:0;left:0;right:0;z-index:100;background-color:#fff}.analysis-detail .title-wrapper[data-v-5314579c]{padding:.266666666666667rem;line-height:1.5em;display:-webkit-box;display:-webkit-flex;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;flex-direction:column}.analysis-detail .title-wrapper>span[data-v-5314579c]{font-size:.32rem;color:#949697}.analysis-detail .chart[data-v-5314579c]{width:100%}.analysis-detail .chart>.chart-title[data-v-5314579c]{font-size:.373333333333333rem;color:#0b62c9;background-color:rgba(11,98,201,.2);padding:.133333333333333rem .266666666666667rem}.analysis-detail .loading[data-v-5314579c]{position:absolute;top:50%}.analysis-detail .slide-enter-active[data-v-5314579c],.analysis-detail .slide-leave-active[data-v-5314579c]{-webkit-transition:all .3s;transition:all .3s}.analysis-detail .slide-enter[data-v-5314579c],.analysis-detail .slide-leave-to[data-v-5314579c]{-webkit-transform:translate3d(100%,0,0);transform:translate3d(100%,0,0)}\", \"\", {\"version\":3,\"sources\":[\"/Users/yangran/workspace/industries/src/components/analysis-detail/analysis-detail.vue\"],\"names\":[],\"mappings\":\"AAAA,kCACE,eAAgB,AAChB,MAAO,AACP,SAAU,AACV,OAAQ,AACR,QAAS,AACT,YAAa,AACb,qBAAuB,CACxB,AAED,iDACE,4BAA8B,AAC9B,kBAAmB,AACnB,oBAAqB,AACrB,qBAAsB,AACtB,aAAc,AACd,4BAA6B,AAC7B,6BAA8B,AAC9B,8BAA+B,AAC/B,qBAAuB,CACxB,AAED,sDACE,iBAAmB,AACnB,aAAe,CAChB,AAED,yCACE,UAAY,CACb,AAED,sDACE,8BAAgC,AAChC,cAAe,AACf,oCAAsC,AACtC,+CAAmD,CACpD,AAED,2CACE,kBAAmB,AACnB,OAAS,CACV,AAED,4GAEE,2BAA6B,AAC7B,kBAAqB,CACtB,AAED,iGAEE,wCAA2C,AAC3C,+BAAmC,CACpC\",\"file\":\"analysis-detail.vue\",\"sourcesContent\":[\".analysis-detail[data-v-5314579c] {\\n  position: fixed;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  z-index: 100;\\n  background-color: #fff;\\n}\\n\\n.analysis-detail .title-wrapper[data-v-5314579c] {\\n  padding: 0.266666666666667rem;\\n  line-height: 1.5em;\\n  display: -webkit-box;\\n  display: -webkit-flex;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n  -webkit-flex-direction: column;\\n  flex-direction: column;\\n}\\n\\n.analysis-detail .title-wrapper > span[data-v-5314579c] {\\n  font-size: 0.32rem;\\n  color: #949697;\\n}\\n\\n.analysis-detail .chart[data-v-5314579c] {\\n  width: 100%;\\n}\\n\\n.analysis-detail .chart > .chart-title[data-v-5314579c] {\\n  font-size: 0.373333333333333rem;\\n  color: #0b62c9;\\n  background-color: rgba(11,98,201,0.2);\\n  padding: 0.133333333333333rem 0.266666666666667rem;\\n}\\n\\n.analysis-detail .loading[data-v-5314579c] {\\n  position: absolute;\\n  top: 50%;\\n}\\n\\n.analysis-detail .slide-enter-active[data-v-5314579c],\\n.analysis-detail .slide-leave-active[data-v-5314579c] {\\n  -webkit-transition: all 0.3s;\\n  transition: all 0.3s;\\n}\\n\\n.analysis-detail .slide-enter[data-v-5314579c],\\n.analysis-detail .slide-leave-to[data-v-5314579c] {\\n  -webkit-transform: translate3d(100%, 0, 0);\\n  transform: translate3d(100%, 0, 0);\\n}\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ 954:\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(916);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(587)(\"3016f508\", content, true);\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// industries/js/1.d3162b6ce42e6dd73bcb.js","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('transition', {\n    attrs: {\n      \"name\": \"slide\"\n    }\n  }, [_c('div', {\n    staticClass: \"analysis-detail\"\n  }, [_c('v-header', {\n    staticClass: \"header\",\n    attrs: {\n      \"title\": _vm.getTitle(_vm.analysisItem)\n    }\n  }), _vm._v(\" \"), _c('div', {\n    staticClass: \"title-wrapper\"\n  }, [_c('h2', [_vm._v(_vm._s(_vm.selectedItem.name))]), _vm._v(\" \"), _c('span', {\n    staticClass: \"time\"\n  }, [_vm._v(_vm._s(_vm._f(\"formatDate\")(_vm.selectedItem.startPoTime)) + \" 至 \" + _vm._s(_vm._f(\"formatDate\")(_vm.selectedItem.endPoTime)))])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"chart\"\n  }, [_c('div', {\n    staticClass: \"chart-title\"\n  }, [_vm._v(\"时间趋势图表\")]), _vm._v(\" \"), _c('ve-chart', {\n    attrs: {\n      \"data\": _vm.normalizLineData(_vm.chartData0),\n      \"settings\": _vm.chartSettings\n    }\n  })], 1), _vm._v(\" \"), _c('loading', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (!_vm.chartData0.times.length),\n      expression: \"!chartData0.times.length\"\n    }],\n    staticClass: \"loading\"\n  })], 1)])\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-5314579c\"}!./~/vux-loader/src/before-template-compiler-loader.js!./~/vux-loader/src/template-loader.js!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/analysis-detail/analysis-detail.vue\n// module id = 1046\n// module chunks = 1","\n/* styles */\nrequire(\"!!../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-5314579c\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":true}!stylus-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vux-loader/src/style-loader.js!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./analysis-detail.vue\")\n\nvar Component = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../node_modules/vux-loader/src/script-loader.js!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./analysis-detail.vue\"),\n  /* template */\n  require(\"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-5314579c\\\"}!../../../node_modules/vux-loader/src/before-template-compiler-loader.js!../../../node_modules/vux-loader/src/template-loader.js!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./analysis-detail.vue\"),\n  /* scopeId */\n  \"data-v-5314579c\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/analysis-detail/analysis-detail.vue\n// module id = 591\n// module chunks = 1","/**\n * @module zrender/core/util\n */\n\n\n    // 用于处理merge时无法遍历Date等对象的问题\n    var BUILTIN_OBJECT = {\n        '[object Function]': 1,\n        '[object RegExp]': 1,\n        '[object Date]': 1,\n        '[object Error]': 1,\n        '[object CanvasGradient]': 1,\n        '[object CanvasPattern]': 1,\n        // For node-canvas\n        '[object Image]': 1,\n        '[object Canvas]': 1\n    };\n\n    var TYPED_ARRAY = {\n        '[object Int8Array]': 1,\n        '[object Uint8Array]': 1,\n        '[object Uint8ClampedArray]': 1,\n        '[object Int16Array]': 1,\n        '[object Uint16Array]': 1,\n        '[object Int32Array]': 1,\n        '[object Uint32Array]': 1,\n        '[object Float32Array]': 1,\n        '[object Float64Array]': 1\n    };\n\n    var objToString = Object.prototype.toString;\n\n    var arrayProto = Array.prototype;\n    var nativeForEach = arrayProto.forEach;\n    var nativeFilter = arrayProto.filter;\n    var nativeSlice = arrayProto.slice;\n    var nativeMap = arrayProto.map;\n    var nativeReduce = arrayProto.reduce;\n\n    /**\n     * Those data types can be cloned:\n     *     Plain object, Array, TypedArray, number, string, null, undefined.\n     * Those data types will be assgined using the orginal data:\n     *     BUILTIN_OBJECT\n     * Instance of user defined class will be cloned to a plain object, without\n     * properties in prototype.\n     * Other data types is not supported (not sure what will happen).\n     *\n     * Caution: do not support clone Date, for performance consideration.\n     * (There might be a large number of date in `series.data`).\n     * So date should not be modified in and out of echarts.\n     *\n     * @param {*} source\n     * @return {*} new\n     */\n    function clone(source) {\n        if (source == null || typeof source != 'object') {\n            return source;\n        }\n\n        var result = source;\n        var typeStr = objToString.call(source);\n\n        if (typeStr === '[object Array]') {\n            result = [];\n            for (var i = 0, len = source.length; i < len; i++) {\n                result[i] = clone(source[i]);\n            }\n        }\n        else if (TYPED_ARRAY[typeStr]) {\n            var Ctor = source.constructor;\n            if (source.constructor.from) {\n                result = Ctor.from(source);\n            }\n            else {\n                result = new Ctor(source.length);\n                for (var i = 0, len = source.length; i < len; i++) {\n                    result[i] = clone(source[i]);\n                }\n            }\n        }\n        else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n            result = {};\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    result[key] = clone(source[key]);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overwrite=false]\n     */\n    function merge(target, source, overwrite) {\n        // We should escapse that source is string\n        // and enter for ... in ...\n        if (!isObject(source) || !isObject(target)) {\n            return overwrite ? clone(source) : target;\n        }\n\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                var targetProp = target[key];\n                var sourceProp = source[key];\n\n                if (isObject(sourceProp)\n                    && isObject(targetProp)\n                    && !isArray(sourceProp)\n                    && !isArray(targetProp)\n                    && !isDom(sourceProp)\n                    && !isDom(targetProp)\n                    && !isBuiltInObject(sourceProp)\n                    && !isBuiltInObject(targetProp)\n                    && !isPrimitive(sourceProp)\n                    && !isPrimitive(targetProp)\n                ) {\n                    // 如果需要递归覆盖，就递归调用merge\n                    merge(targetProp, sourceProp, overwrite);\n                }\n                else if (overwrite || !(key in target)) {\n                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n                    // NOTE，在 target[key] 不存在的时候也是直接覆盖\n                    target[key] = clone(source[key], true);\n                }\n            }\n        }\n\n        return target;\n    }\n\n    /**\n     * @param {Array} targetAndSources The first item is target, and the rests are source.\n     * @param {boolean} [overwrite=false]\n     * @return {*} target\n     */\n    function mergeAll(targetAndSources, overwrite) {\n        var result = targetAndSources[0];\n        for (var i = 1, len = targetAndSources.length; i < len; i++) {\n            result = merge(result, targetAndSources[i], overwrite);\n        }\n        return result;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @memberOf module:zrender/core/util\n     */\n    function extend(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overlay=false]\n     * @memberOf module:zrender/core/util\n     */\n    function defaults(target, source, overlay) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)\n                && (overlay ? source[key] != null : target[key] == null)\n            ) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    function createCanvas() {\n        return document.createElement('canvas');\n    }\n    // FIXME\n    var _ctx;\n    function getContext() {\n        if (!_ctx) {\n            // Use util.createCanvas instead of createCanvas\n            // because createCanvas may be overwritten in different environment\n            _ctx = util.createCanvas().getContext('2d');\n        }\n        return _ctx;\n    }\n\n    /**\n     * 查询数组中元素的index\n     * @memberOf module:zrender/core/util\n     */\n    function indexOf(array, value) {\n        if (array) {\n            if (array.indexOf) {\n                return array.indexOf(value);\n            }\n            for (var i = 0, len = array.length; i < len; i++) {\n                if (array[i] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * 构造类继承关系\n     *\n     * @memberOf module:zrender/core/util\n     * @param {Function} clazz 源类\n     * @param {Function} baseClazz 基类\n     */\n    function inherits(clazz, baseClazz) {\n        var clazzPrototype = clazz.prototype;\n        function F() {}\n        F.prototype = baseClazz.prototype;\n        clazz.prototype = new F();\n\n        for (var prop in clazzPrototype) {\n            clazz.prototype[prop] = clazzPrototype[prop];\n        }\n        clazz.prototype.constructor = clazz;\n        clazz.superClass = baseClazz;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Object|Function} target\n     * @param {Object|Function} sorce\n     * @param {boolean} overlay\n     */\n    function mixin(target, source, overlay) {\n        target = 'prototype' in target ? target.prototype : target;\n        source = 'prototype' in source ? source.prototype : source;\n\n        defaults(target, source, overlay);\n    }\n\n    /**\n     * Consider typed array.\n     * @param {Array|TypedArray} data\n     */\n    function isArrayLike(data) {\n        if (! data) {\n            return;\n        }\n        if (typeof data == 'string') {\n            return false;\n        }\n        return typeof data.length == 'number';\n    }\n\n    /**\n     * 数组或对象遍历\n     * @memberOf module:zrender/core/util\n     * @param {Object|Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     */\n    function each(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.forEach && obj.forEach === nativeForEach) {\n            obj.forEach(cb, context);\n        }\n        else if (obj.length === +obj.length) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                cb.call(context, obj[i], i, obj);\n            }\n        }\n        else {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    cb.call(context, obj[key], key, obj);\n                }\n            }\n        }\n    }\n\n    /**\n     * 数组映射\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function map(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.map && obj.map === nativeMap) {\n            return obj.map(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                result.push(cb.call(context, obj[i], i, obj));\n            }\n            return result;\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {Object} [memo]\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function reduce(obj, cb, memo, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.reduce && obj.reduce === nativeReduce) {\n            return obj.reduce(cb, memo, context);\n        }\n        else {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                memo = cb.call(context, memo, obj[i], i, obj);\n            }\n            return memo;\n        }\n    }\n\n    /**\n     * 数组过滤\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function filter(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.filter && obj.filter === nativeFilter) {\n            return obj.filter(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                if (cb.call(context, obj[i], i, obj)) {\n                    result.push(obj[i]);\n                }\n            }\n            return result;\n        }\n    }\n\n    /**\n     * 数组项查找\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function find(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        for (var i = 0, len = obj.length; i < len; i++) {\n            if (cb.call(context, obj[i], i, obj)) {\n                return obj[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @param {*} context\n     * @return {Function}\n     */\n    function bind(func, context) {\n        var args = nativeSlice.call(arguments, 2);\n        return function () {\n            return func.apply(context, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @return {Function}\n     */\n    function curry(func) {\n        var args = nativeSlice.call(arguments, 1);\n        return function () {\n            return func.apply(this, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isArray(value) {\n        return objToString.call(value) === '[object Array]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isString(value) {\n        return objToString.call(value) === '[object String]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isObject(value) {\n        // Avoid a V8 JIT bug in Chrome 19-20.\n        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n        var type = typeof value;\n        return type === 'function' || (!!value && type == 'object');\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isBuiltInObject(value) {\n        return !!BUILTIN_OBJECT[objToString.call(value)];\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isDom(value) {\n        return typeof value === 'object'\n            && typeof value.nodeType === 'number'\n            && typeof value.ownerDocument === 'object';\n    }\n\n    /**\n     * Whether is exactly NaN. Notice isNaN('a') returns true.\n     * @param {*} value\n     * @return {boolean}\n     */\n    function eqNaN(value) {\n        return value !== value;\n    }\n\n    /**\n     * If value1 is not null, then return value1, otherwise judget rest of values.\n     * Low performance.\n     * @memberOf module:zrender/core/util\n     * @return {*} Final value\n     */\n    function retrieve(values) {\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            if (arguments[i] != null) {\n                return arguments[i];\n            }\n        }\n    }\n\n    function retrieve2(value0, value1) {\n        return value0 != null\n            ? value0\n            : value1;\n    }\n\n    function retrieve3(value0, value1, value2) {\n        return value0 != null\n            ? value0\n            : value1 != null\n            ? value1\n            : value2;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} arr\n     * @param {number} startIndex\n     * @param {number} endIndex\n     * @return {Array}\n     */\n    function slice() {\n        return Function.call.apply(nativeSlice, arguments);\n    }\n\n    /**\n     * Normalize css liked array configuration\n     * e.g.\n     *  3 => [3, 3, 3, 3]\n     *  [4, 2] => [4, 2, 4, 2]\n     *  [4, 3, 2] => [4, 3, 2, 3]\n     * @param {number|Array.<number>} val\n     * @return {Array.<number>}\n     */\n    function normalizeCssArray(val) {\n        if (typeof (val) === 'number') {\n            return [val, val, val, val];\n        }\n        var len = val.length;\n        if (len === 2) {\n            // vertical | horizontal\n            return [val[0], val[1], val[0], val[1]];\n        }\n        else if (len === 3) {\n            // top | horizontal | bottom\n            return [val[0], val[1], val[2], val[1]];\n        }\n        return val;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {boolean} condition\n     * @param {string} message\n     */\n    function assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n\n    var primitiveKey = '__ec_primitive__';\n    /**\n     * Set an object as primitive to be ignored traversing children in clone or merge\n     */\n    function setAsPrimitive(obj) {\n        obj[primitiveKey] = true;\n    }\n\n    function isPrimitive(obj) {\n        return obj[primitiveKey];\n    }\n\n    /**\n     * @constructor\n     * @param {Object} obj Only apply `ownProperty`.\n     */\n    function HashMap(obj) {\n        obj && each(obj, function (value, key) {\n            this.set(key, value);\n        }, this);\n    }\n\n    // Add prefix to avoid conflict with Object.prototype.\n    var HASH_MAP_PREFIX = '_ec_';\n    var HASH_MAP_PREFIX_LENGTH = 4;\n\n    HashMap.prototype = {\n        constructor: HashMap,\n        // Do not provide `has` method to avoid defining what is `has`.\n        // (We usually treat `null` and `undefined` as the same, different\n        // from ES6 Map).\n        get: function (key) {\n            return this[HASH_MAP_PREFIX + key];\n        },\n        set: function (key, value) {\n            this[HASH_MAP_PREFIX + key] = value;\n            // Comparing with invocation chaining, `return value` is more commonly\n            // used in this case: `var someVal = map.set('a', genVal());`\n            return value;\n        },\n        // Although util.each can be performed on this hashMap directly, user\n        // should not use the exposed keys, who are prefixed.\n        each: function (cb, context) {\n            context !== void 0 && (cb = bind(cb, context));\n            for (var prefixedKey in this) {\n                this.hasOwnProperty(prefixedKey)\n                    && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n            }\n        },\n        // Do not use this method if performance sensitive.\n        removeKey: function (key) {\n            delete this[key];\n        }\n    };\n\n    function createHashMap(obj) {\n        return new HashMap(obj);\n    }\n\n    var util = {\n        inherits: inherits,\n        mixin: mixin,\n        clone: clone,\n        merge: merge,\n        mergeAll: mergeAll,\n        extend: extend,\n        defaults: defaults,\n        getContext: getContext,\n        createCanvas: createCanvas,\n        indexOf: indexOf,\n        slice: slice,\n        find: find,\n        isArrayLike: isArrayLike,\n        each: each,\n        map: map,\n        reduce: reduce,\n        filter: filter,\n        bind: bind,\n        curry: curry,\n        isArray: isArray,\n        isString: isString,\n        isObject: isObject,\n        isFunction: isFunction,\n        isBuiltInObject: isBuiltInObject,\n        isDom: isDom,\n        eqNaN: eqNaN,\n        retrieve: retrieve,\n        retrieve2: retrieve2,\n        retrieve3: retrieve3,\n        assert: assert,\n        setAsPrimitive: setAsPrimitive,\n        createHashMap: createHashMap,\n        normalizeCssArray: normalizeCssArray,\n        noop: function () {}\n    };\n    module.exports = util;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/util.js\n// module id = 606\n// module chunks = 0 1 2","// Enable DEV mode when using source code without build. which has no __DEV__ variable\n// In build process 'typeof __DEV__' will be replace with 'boolean'\n// So this code will be removed or disabled anyway after built.\nif (typeof __DEV__ === 'undefined') {\n    // In browser\n    if (typeof window !== 'undefined') {\n        window.__DEV__ = true;\n    }\n    // In node\n    else if (typeof global !== 'undefined') {\n        global.__DEV__ = true;\n    }\n}\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\n\n/**\n * @module echarts\n */\n\n\n    var env = require('zrender/lib/core/env');\n\n    var GlobalModel = require('./model/Global');\n    var ExtensionAPI = require('./ExtensionAPI');\n    var CoordinateSystemManager = require('./CoordinateSystem');\n    var OptionManager = require('./model/OptionManager');\n\n    var ComponentModel = require('./model/Component');\n    var SeriesModel = require('./model/Series');\n\n    var ComponentView = require('./view/Component');\n    var ChartView = require('./view/Chart');\n    var graphic = require('./util/graphic');\n    var modelUtil = require('./util/model');\n    var throttle = require('./util/throttle');\n\n    var zrender = require('zrender');\n    var zrUtil = require('zrender/lib/core/util');\n    var colorTool = require('zrender/lib/tool/color');\n    var Eventful = require('zrender/lib/mixin/Eventful');\n    var timsort = require('zrender/lib/core/timsort');\n\n    var each = zrUtil.each;\n    var parseClassType = ComponentModel.parseClassType;\n\n    var PRIORITY_PROCESSOR_FILTER = 1000;\n    var PRIORITY_PROCESSOR_STATISTIC = 5000;\n\n\n    var PRIORITY_VISUAL_LAYOUT = 1000;\n    var PRIORITY_VISUAL_GLOBAL = 2000;\n    var PRIORITY_VISUAL_CHART = 3000;\n    var PRIORITY_VISUAL_COMPONENT = 4000;\n    // FIXME\n    // necessary?\n    var PRIORITY_VISUAL_BRUSH = 5000;\n\n    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n    // where they must not be invoked nestedly, except the only case: invoke\n    // dispatchAction with updateMethod \"none\" in main process.\n    // This flag is used to carry out this rule.\n    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n    var IN_MAIN_PROCESS = '__flagInMainProcess';\n    var HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\n    var OPTION_UPDATED = '__optionUpdated';\n    var ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\n    function createRegisterEventWithLowercaseName(method) {\n        return function (eventName, handler, context) {\n            // Event name is all lowercase\n            eventName = eventName && eventName.toLowerCase();\n            Eventful.prototype[method].call(this, eventName, handler, context);\n        };\n    }\n\n    /**\n     * @module echarts~MessageCenter\n     */\n    function MessageCenter() {\n        Eventful.call(this);\n    }\n    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\n    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\n    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\n    zrUtil.mixin(MessageCenter, Eventful);\n\n    /**\n     * @module echarts~ECharts\n     */\n    function ECharts(dom, theme, opts) {\n        opts = opts || {};\n\n        // Get theme by name\n        if (typeof theme === 'string') {\n            theme = themeStorage[theme];\n        }\n\n        /**\n         * @type {string}\n         */\n        this.id;\n        /**\n         * Group id\n         * @type {string}\n         */\n        this.group;\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        this._dom = dom;\n        /**\n         * @type {module:zrender/ZRender}\n         * @private\n         */\n        var zr = this._zr = zrender.init(dom, {\n            renderer: opts.renderer || 'canvas',\n            devicePixelRatio: opts.devicePixelRatio,\n            width: opts.width,\n            height: opts.height\n        });\n\n        /**\n         * Expect 60 pfs.\n         * @type {Function}\n         * @private\n         */\n        this._throttledZrFlush = throttle.throttle(zrUtil.bind(zr.flush, zr), 17);\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._theme = zrUtil.clone(theme);\n\n        /**\n         * @type {Array.<module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * @type {module:echarts/CoordinateSystem}\n         * @private\n         */\n        this._coordSysMgr = new CoordinateSystemManager();\n\n        /**\n         * @type {module:echarts/ExtensionAPI}\n         * @private\n         */\n        this._api = createExtensionAPI(this);\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:echarts~MessageCenter}\n         * @private\n         */\n        this._messageCenter = new MessageCenter();\n\n        // Init mouse events\n        this._initEvents();\n\n        // In case some people write `window.onresize = chart.resize`\n        this.resize = zrUtil.bind(this.resize, this);\n\n        // Can't dispatch action during rendering procedure\n        this._pendingActions = [];\n        // Sort on demand\n        function prioritySortFunc(a, b) {\n            return a.prio - b.prio;\n        }\n        timsort(visualFuncs, prioritySortFunc);\n        timsort(dataProcessorFuncs, prioritySortFunc);\n\n        zr.animation.on('frame', this._onframe, this);\n\n        // ECharts instance can be used as value.\n        zrUtil.setAsPrimitive(this);\n    }\n\n    var echartsProto = ECharts.prototype;\n\n    echartsProto._onframe = function () {\n        // Lazy update\n        if (this[OPTION_UPDATED]) {\n            var silent = this[OPTION_UPDATED].silent;\n\n            this[IN_MAIN_PROCESS] = true;\n\n            updateMethods.prepareAndUpdate.call(this);\n\n            this[IN_MAIN_PROCESS] = false;\n\n            this[OPTION_UPDATED] = false;\n\n            flushPendingActions.call(this, silent);\n\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n    /**\n     * @return {HTMLElement}\n     */\n    echartsProto.getDom = function () {\n        return this._dom;\n    };\n\n    /**\n     * @return {module:zrender~ZRender}\n     */\n    echartsProto.getZr = function () {\n        return this._zr;\n    };\n\n    /**\n     * Usage:\n     * chart.setOption(option, notMerge, lazyUpdate);\n     * chart.setOption(option, {\n     *     notMerge: ...,\n     *     lazyUpdate: ...,\n     *     silent: ...\n     * });\n     *\n     * @param {Object} option\n     * @param {Object|boolean} [opts] opts or notMerge.\n     * @param {boolean} [opts.notMerge=false]\n     * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n     */\n    echartsProto.setOption = function (option, notMerge, lazyUpdate) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\n        }\n\n        var silent;\n        if (zrUtil.isObject(notMerge)) {\n            lazyUpdate = notMerge.lazyUpdate;\n            silent = notMerge.silent;\n            notMerge = notMerge.notMerge;\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        if (!this._model || notMerge) {\n            var optionManager = new OptionManager(this._api);\n            var theme = this._theme;\n            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n            ecModel.init(null, null, theme, optionManager);\n        }\n\n        this._model.setOption(option, optionPreprocessorFuncs);\n\n        if (lazyUpdate) {\n            this[OPTION_UPDATED] = {silent: silent};\n            this[IN_MAIN_PROCESS] = false;\n        }\n        else {\n            updateMethods.prepareAndUpdate.call(this);\n            // Ensure zr refresh sychronously, and then pixel in canvas can be\n            // fetched after `setOption`.\n            this._zr.flush();\n\n            this[OPTION_UPDATED] = false;\n            this[IN_MAIN_PROCESS] = false;\n\n            flushPendingActions.call(this, silent);\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n\n    /**\n     * @DEPRECATED\n     */\n    echartsProto.setTheme = function () {\n        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n    };\n\n    /**\n     * @return {module:echarts/model/Global}\n     */\n    echartsProto.getModel = function () {\n        return this._model;\n    };\n\n    /**\n     * @return {Object}\n     */\n    echartsProto.getOption = function () {\n        return this._model && this._model.getOption();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getWidth = function () {\n        return this._zr.getWidth();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getHeight = function () {\n        return this._zr.getHeight();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getDevicePixelRatio = function () {\n        return this._zr.painter.dpr || window.devicePixelRatio || 1;\n    };\n\n    /**\n     * Get canvas which has all thing rendered\n     * @param {Object} opts\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getRenderedCanvas = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        opts = opts || {};\n        opts.pixelRatio = opts.pixelRatio || 1;\n        opts.backgroundColor = opts.backgroundColor\n            || this._model.get('backgroundColor');\n        var zr = this._zr;\n        var list = zr.storage.getDisplayList();\n        // Stop animations\n        zrUtil.each(list, function (el) {\n            el.stopAnimation(true);\n        });\n        return zr.painter.getRenderedCanvas(opts);\n    };\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     * @param {string} [opts.excludeComponents]\n     */\n    echartsProto.getDataURL = function (opts) {\n        opts = opts || {};\n        var excludeComponents = opts.excludeComponents;\n        var ecModel = this._model;\n        var excludesComponentViews = [];\n        var self = this;\n\n        each(excludeComponents, function (componentType) {\n            ecModel.eachComponent({\n                mainType: componentType\n            }, function (component) {\n                var view = self._componentsMap[component.__viewId];\n                if (!view.group.ignore) {\n                    excludesComponentViews.push(view);\n                    view.group.ignore = true;\n                }\n            });\n        });\n\n        var url = this.getRenderedCanvas(opts).toDataURL(\n            'image/' + (opts && opts.type || 'png')\n        );\n\n        each(excludesComponentViews, function (view) {\n            view.group.ignore = false;\n        });\n        return url;\n    };\n\n\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getConnectedDataURL = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        var groupId = this.group;\n        var mathMin = Math.min;\n        var mathMax = Math.max;\n        var MAX_NUMBER = Infinity;\n        if (connectedGroups[groupId]) {\n            var left = MAX_NUMBER;\n            var top = MAX_NUMBER;\n            var right = -MAX_NUMBER;\n            var bottom = -MAX_NUMBER;\n            var canvasList = [];\n            var dpr = (opts && opts.pixelRatio) || 1;\n\n            zrUtil.each(instances, function (chart, id) {\n                if (chart.group === groupId) {\n                    var canvas = chart.getRenderedCanvas(\n                        zrUtil.clone(opts)\n                    );\n                    var boundingRect = chart.getDom().getBoundingClientRect();\n                    left = mathMin(boundingRect.left, left);\n                    top = mathMin(boundingRect.top, top);\n                    right = mathMax(boundingRect.right, right);\n                    bottom = mathMax(boundingRect.bottom, bottom);\n                    canvasList.push({\n                        dom: canvas,\n                        left: boundingRect.left,\n                        top: boundingRect.top\n                    });\n                }\n            });\n\n            left *= dpr;\n            top *= dpr;\n            right *= dpr;\n            bottom *= dpr;\n            var width = right - left;\n            var height = bottom - top;\n            var targetCanvas = zrUtil.createCanvas();\n            targetCanvas.width = width;\n            targetCanvas.height = height;\n            var zr = zrender.init(targetCanvas);\n\n            each(canvasList, function (item) {\n                var img = new graphic.Image({\n                    style: {\n                        x: item.left * dpr - left,\n                        y: item.top * dpr - top,\n                        image: item.dom\n                    }\n                });\n                zr.add(img);\n            });\n            zr.refreshImmediately();\n\n            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n        }\n        else {\n            return this.getDataURL(opts);\n        }\n    };\n\n    /**\n     * Convert from logical coordinate system to pixel coordinate system.\n     * See CoordinateSystem#convertToPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId, geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n\n    /**\n     * Convert from pixel coordinate system to logical coordinate system.\n     * See CoordinateSystem#convertFromPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\n    function doConvertPixel(methodName, finder, value) {\n        var ecModel = this._model;\n        var coordSysList = this._coordSysMgr.getCoordinateSystems();\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        for (var i = 0; i < coordSysList.length; i++) {\n            var coordSys = coordSysList[i];\n            if (coordSys[methodName]\n                && (result = coordSys[methodName](ecModel, finder, value)) != null\n            ) {\n                return result;\n            }\n        }\n\n        if (__DEV__) {\n            console.warn(\n                'No coordinate system that supports ' + methodName + ' found by the given finder.'\n            );\n        }\n    }\n\n    /**\n     * Is the specified coordinate systems or components contain the given pixel point.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {boolean} result\n     */\n    echartsProto.containPixel = function (finder, value) {\n        var ecModel = this._model;\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        zrUtil.each(finder, function (models, key) {\n            key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n                var coordSys = model.coordinateSystem;\n                if (coordSys && coordSys.containPoint) {\n                    result |= !!coordSys.containPoint(value);\n                }\n                else if (key === 'seriesModels') {\n                    var view = this._chartsMap[model.__viewId];\n                    if (view && view.containPoint) {\n                        result |= view.containPoint(value, model);\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.warn(key + ': ' + (view\n                                ? 'The found component do not support containPoint.'\n                                : 'No view mapping to the found component.'\n                            ));\n                        }\n                    }\n                }\n                else {\n                    if (__DEV__) {\n                        console.warn(key + ': containPoint is not supported');\n                    }\n                }\n            }, this);\n        }, this);\n\n        return !!result;\n    };\n\n    /**\n     * Get visual from series or data.\n     * @param {string|Object} finder\n     *        If string, e.g., 'series', means {seriesIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            dataIndex / dataIndexInside\n     *        }\n     *        If dataIndex is not specified, series visual will be fetched,\n     *        but not data item visual.\n     *        If all of seriesIndex, seriesId, seriesName are not specified,\n     *        visual will be fetched from first series.\n     * @param {string} visualType 'color', 'symbol', 'symbolSize'\n     */\n    echartsProto.getVisual = function (finder, visualType) {\n        var ecModel = this._model;\n\n        finder = modelUtil.parseFinder(ecModel, finder, {defaultMainType: 'series'});\n\n        var seriesModel = finder.seriesModel;\n\n        if (__DEV__) {\n            if (!seriesModel) {\n                console.warn('There is no specified seires model');\n            }\n        }\n\n        var data = seriesModel.getData();\n\n        var dataIndexInside = finder.hasOwnProperty('dataIndexInside')\n            ? finder.dataIndexInside\n            : finder.hasOwnProperty('dataIndex')\n            ? data.indexOfRawIndex(finder.dataIndex)\n            : null;\n\n        return dataIndexInside != null\n            ? data.getItemVisual(dataIndexInside, visualType)\n            : data.getVisual(visualType);\n    };\n\n    /**\n     * Get view of corresponding component model\n     * @param  {module:echarts/model/Component} componentModel\n     * @return {module:echarts/view/Component}\n     */\n    echartsProto.getViewOfComponentModel = function (componentModel) {\n        return this._componentsMap[componentModel.__viewId];\n    };\n\n    /**\n     * Get view of corresponding series model\n     * @param  {module:echarts/model/Series} seriesModel\n     * @return {module:echarts/view/Chart}\n     */\n    echartsProto.getViewOfSeriesModel = function (seriesModel) {\n        return this._chartsMap[seriesModel.__viewId];\n    };\n\n\n    var updateMethods = {\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        update: function (payload) {\n            // console.profile && console.profile('update');\n\n            var ecModel = this._model;\n            var api = this._api;\n            var coordSysMgr = this._coordSysMgr;\n            var zr = this._zr;\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            // Fixme First time update ?\n            ecModel.restoreData();\n\n            // TODO\n            // Save total ecModel here for undo/redo (after restoring data and before processing data).\n            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n\n            // Create new coordinate system each update\n            // In LineView may save the old coordinate system and use it to get the orignal point\n            coordSysMgr.create(this._model, this._api);\n\n            processData.call(this, ecModel, api);\n\n            stackSeriesData.call(this, ecModel);\n\n            coordSysMgr.update(ecModel, api);\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            doRender.call(this, ecModel, payload);\n\n            // Set background\n            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n\n            var painter = zr.painter;\n            // TODO all use clearColor ?\n            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n                zr.configLayer(0, {\n                    clearColor: backgroundColor\n                });\n            }\n            else {\n                // In IE8\n                if (!env.canvasSupported) {\n                    var colorArr = colorTool.parse(backgroundColor);\n                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\n                    if (colorArr[3] === 0) {\n                        backgroundColor = 'transparent';\n                    }\n                }\n                if (backgroundColor.colorStops || backgroundColor.image) {\n                    // Gradient background\n                    // FIXME Fixed layer？\n                    zr.configLayer(0, {\n                        clearColor: backgroundColor\n                    });\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n\n                    this._dom.style.background = 'transparent';\n                }\n                else {\n                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n                        zr.configLayer(0, {\n                            clearColor: null\n                        });\n                    }\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n\n                    this._dom.style.background = backgroundColor;\n                }\n            }\n\n            each(postUpdateFuncs, function (func) {\n                func(ecModel, api);\n            });\n\n            // console.profile && console.profileEnd('update');\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateView: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateVisual: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload, true);\n\n            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateLayout: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            doLayout.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        prepareAndUpdate: function (payload) {\n            var ecModel = this._model;\n\n            prepareView.call(this, 'component', ecModel);\n\n            prepareView.call(this, 'chart', ecModel);\n\n            updateMethods.update.call(this, payload);\n        }\n    };\n\n    /**\n     * @private\n     */\n    function updateDirectly(ecIns, method, payload, mainType, subType) {\n        var ecModel = ecIns._model;\n\n        // broadcast\n        if (!mainType) {\n            each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n            return;\n        }\n\n        var query = {};\n        query[mainType + 'Id'] = payload[mainType + 'Id'];\n        query[mainType + 'Index'] = payload[mainType + 'Index'];\n        query[mainType + 'Name'] = payload[mainType + 'Name'];\n\n        var condition = {mainType: mainType, query: query};\n        subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n        // If dispatchAction before setOption, do nothing.\n        ecModel && ecModel.eachComponent(condition, function (model, index) {\n            callView(ecIns[\n                mainType === 'series' ? '_chartsMap' : '_componentsMap'\n            ][model.__viewId]);\n        }, ecIns);\n\n        function callView(view) {\n            view && view.__alive && view[method] && view[method](\n                view.__model, ecModel, ecIns._api, payload\n            );\n        }\n    }\n\n    /**\n     * Resize the chart\n     * @param {Object} opts\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @param {boolean} [opts.silent=false]\n     */\n    echartsProto.resize = function (opts) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        this._zr.resize(opts);\n\n        var optionChanged = this._model && this._model.resetOption('media');\n        var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n\n        updateMethods[updateMethod].call(this);\n\n        // Resize loading effect\n        this._loadingFX && this._loadingFX.resize();\n\n        this[IN_MAIN_PROCESS] = false;\n\n        var silent = opts && opts.silent;\n\n        flushPendingActions.call(this, silent);\n\n        triggerUpdatedEvent.call(this, silent);\n    };\n\n    /**\n     * Show loading effect\n     * @param  {string} [name='default']\n     * @param  {Object} [cfg]\n     */\n    echartsProto.showLoading = function (name, cfg) {\n        if (zrUtil.isObject(name)) {\n            cfg = name;\n            name = '';\n        }\n        name = name || 'default';\n\n        this.hideLoading();\n        if (!loadingEffects[name]) {\n            if (__DEV__) {\n                console.warn('Loading effects ' + name + ' not exists.');\n            }\n            return;\n        }\n        var el = loadingEffects[name](this._api, cfg);\n        var zr = this._zr;\n        this._loadingFX = el;\n\n        zr.add(el);\n    };\n\n    /**\n     * Hide loading effect\n     */\n    echartsProto.hideLoading = function () {\n        this._loadingFX && this._zr.remove(this._loadingFX);\n        this._loadingFX = null;\n    };\n\n    /**\n     * @param {Object} eventObj\n     * @return {Object}\n     */\n    echartsProto.makeActionFromEvent = function (eventObj) {\n        var payload = zrUtil.extend({}, eventObj);\n        payload.type = eventActionMap[eventObj.type];\n        return payload;\n    };\n\n    /**\n     * @pubilc\n     * @param {Object} payload\n     * @param {string} [payload.type] Action type\n     * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n     * @param {boolean} [opt.silent=false] Whether trigger events.\n     * @param {boolean} [opt.flush=undefined]\n     *                  true: Flush immediately, and then pixel in canvas can be fetched\n     *                      immediately. Caution: it might affect performance.\n     *                  false: Not not flush.\n     *                  undefined: Auto decide whether perform flush.\n     */\n    echartsProto.dispatchAction = function (payload, opt) {\n        if (!zrUtil.isObject(opt)) {\n            opt = {silent: !!opt};\n        }\n\n        if (!actions[payload.type]) {\n            return;\n        }\n\n        // Avoid dispatch action before setOption. Especially in `connect`.\n        if (!this._model) {\n            return;\n        }\n\n        // May dispatchAction in rendering procedure\n        if (this[IN_MAIN_PROCESS]) {\n            this._pendingActions.push(payload);\n            return;\n        }\n\n        doDispatchAction.call(this, payload, opt.silent);\n\n        if (opt.flush) {\n            this._zr.flush(true);\n        }\n        else if (opt.flush !== false && env.browser.weChat) {\n            // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n            // hang when sliding page (on touch event), which cause that zr does not\n            // refresh util user interaction finished, which is not expected.\n            // But `dispatchAction` may be called too frequently when pan on touch\n            // screen, which impacts performance if do not throttle them.\n            this._throttledZrFlush();\n        }\n\n        flushPendingActions.call(this, opt.silent);\n\n        triggerUpdatedEvent.call(this, opt.silent);\n    };\n\n    function doDispatchAction(payload, silent) {\n        var payloadType = payload.type;\n        var escapeConnect = payload.escapeConnect;\n        var actionWrap = actions[payloadType];\n        var actionInfo = actionWrap.actionInfo;\n\n        var cptType = (actionInfo.update || 'update').split(':');\n        var updateMethod = cptType.pop();\n        cptType = cptType[0] != null && parseClassType(cptType[0]);\n\n        this[IN_MAIN_PROCESS] = true;\n\n        var payloads = [payload];\n        var batched = false;\n        // Batch action\n        if (payload.batch) {\n            batched = true;\n            payloads = zrUtil.map(payload.batch, function (item) {\n                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n                item.batch = null;\n                return item;\n            });\n        }\n\n        var eventObjBatch = [];\n        var eventObj;\n        var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n\n        each(payloads, function (batchItem) {\n            // Action can specify the event by return it.\n            eventObj = actionWrap.action(batchItem, this._model, this._api);\n            // Emit event outside\n            eventObj = eventObj || zrUtil.extend({}, batchItem);\n            // Convert type to eventType\n            eventObj.type = actionInfo.event || eventObj.type;\n            eventObjBatch.push(eventObj);\n\n            // light update does not perform data process, layout and visual.\n            if (isHighDown) {\n                // method, payload, mainType, subType\n                updateDirectly(this, updateMethod, batchItem, 'series');\n            }\n            else if (cptType) {\n                updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n            }\n        }, this);\n\n        if (updateMethod !== 'none' && !isHighDown && !cptType) {\n            // Still dirty\n            if (this[OPTION_UPDATED]) {\n                // FIXME Pass payload ?\n                updateMethods.prepareAndUpdate.call(this, payload);\n                this[OPTION_UPDATED] = false;\n            }\n            else {\n                updateMethods[updateMethod].call(this, payload);\n            }\n        }\n\n        // Follow the rule of action batch\n        if (batched) {\n            eventObj = {\n                type: actionInfo.event || payloadType,\n                escapeConnect: escapeConnect,\n                batch: eventObjBatch\n            };\n        }\n        else {\n            eventObj = eventObjBatch[0];\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n    }\n\n    function flushPendingActions(silent) {\n        var pendingActions = this._pendingActions;\n        while (pendingActions.length) {\n            var payload = pendingActions.shift();\n            doDispatchAction.call(this, payload, silent);\n        }\n    }\n\n    function triggerUpdatedEvent(silent) {\n        !silent && this.trigger('updated');\n    }\n\n    /**\n     * Register event\n     * @method\n     */\n    echartsProto.on = createRegisterEventWithLowercaseName('on');\n    echartsProto.off = createRegisterEventWithLowercaseName('off');\n    echartsProto.one = createRegisterEventWithLowercaseName('one');\n\n    /**\n     * @param {string} methodName\n     * @private\n     */\n    function invokeUpdateMethod(methodName, ecModel, payload) {\n        var api = this._api;\n\n        // Update all components\n        each(this._componentsViews, function (component) {\n            var componentModel = component.__model;\n            component[methodName](componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, component);\n        }, this);\n\n        // Upate all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chart = this._chartsMap[seriesModel.__viewId];\n            chart[methodName](seriesModel, ecModel, api, payload);\n\n            updateZ(seriesModel, chart);\n\n            updateProgressiveAndBlend(seriesModel, chart);\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Post render\n        each(postUpdateFuncs, function (func) {\n            func(ecModel, api);\n        });\n    }\n\n    /**\n     * Prepare view instances of charts and components\n     * @param  {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function prepareView(type, ecModel) {\n        var isComponent = type === 'component';\n        var viewList = isComponent ? this._componentsViews : this._chartsViews;\n        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n        var zr = this._zr;\n\n        for (var i = 0; i < viewList.length; i++) {\n            viewList[i].__alive = false;\n        }\n\n        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n            if (isComponent) {\n                if (componentType === 'series') {\n                    return;\n                }\n            }\n            else {\n                model = componentType;\n            }\n\n            // Consider: id same and type changed.\n            var viewId = '_ec_' + model.id + '_' + model.type;\n            var view = viewMap[viewId];\n            if (!view) {\n                var classType = parseClassType(model.type);\n                var Clazz = isComponent\n                    ? ComponentView.getClass(classType.main, classType.sub)\n                    : ChartView.getClass(classType.sub);\n                if (Clazz) {\n                    view = new Clazz();\n                    view.init(ecModel, this._api);\n                    viewMap[viewId] = view;\n                    viewList.push(view);\n                    zr.add(view.group);\n                }\n                else {\n                    // Error\n                    return;\n                }\n            }\n\n            model.__viewId = view.__id = viewId;\n            view.__alive = true;\n            view.__model = model;\n            view.group.__ecComponentInfo = {\n                mainType: model.mainType,\n                index: model.componentIndex\n            };\n        }, this);\n\n        for (var i = 0; i < viewList.length;) {\n            var view = viewList[i];\n            if (!view.__alive) {\n                zr.remove(view.group);\n                view.dispose(ecModel, this._api);\n                viewList.splice(i, 1);\n                delete viewMap[view.__id];\n                view.__id = view.group.__ecComponentInfo = null;\n            }\n            else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Processor data in each series\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function processData(ecModel, api) {\n        each(dataProcessorFuncs, function (process) {\n            process.func(ecModel, api);\n        });\n    }\n\n    /**\n     * @private\n     */\n    function stackSeriesData(ecModel) {\n        var stackedDataMap = {};\n        ecModel.eachSeries(function (series) {\n            var stack = series.get('stack');\n            var data = series.getData();\n            if (stack && data.type === 'list') {\n                var previousStack = stackedDataMap[stack];\n                // Avoid conflict with Object.prototype\n                if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n                    data.stackedOn = previousStack;\n                }\n                stackedDataMap[stack] = data;\n            }\n        });\n    }\n\n    /**\n     * Layout before each chart render there series, special visual encoding stage\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doLayout(ecModel, payload) {\n        var api = this._api;\n        each(visualFuncs, function (visual) {\n            if (visual.isLayout) {\n                visual.func(ecModel, api, payload);\n            }\n        });\n    }\n\n    /**\n     * Encode visual infomation from data after data processing\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @param {object} layout\n     * @param {boolean} [excludesLayout]\n     * @private\n     */\n    function doVisualEncoding(ecModel, payload, excludesLayout) {\n        var api = this._api;\n        ecModel.clearColorPalette();\n        ecModel.eachSeries(function (seriesModel) {\n            seriesModel.clearColorPalette();\n        });\n        each(visualFuncs, function (visual) {\n            (!excludesLayout || !visual.isLayout)\n                && visual.func(ecModel, api, payload);\n        });\n    }\n\n    /**\n     * Render each chart and component\n     * @private\n     */\n    function doRender(ecModel, payload) {\n        var api = this._api;\n        // Render all components\n        each(this._componentsViews, function (componentView) {\n            var componentModel = componentView.__model;\n            componentView.render(componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, componentView);\n        }, this);\n\n        each(this._chartsViews, function (chart) {\n            chart.__alive = false;\n        }, this);\n\n        // Render all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chartView = this._chartsMap[seriesModel.__viewId];\n            chartView.__alive = true;\n            chartView.render(seriesModel, ecModel, api, payload);\n\n            chartView.group.silent = !!seriesModel.get('silent');\n\n            updateZ(seriesModel, chartView);\n\n            updateProgressiveAndBlend(seriesModel, chartView);\n\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Remove groups of unrendered charts\n        each(this._chartsViews, function (chart) {\n            if (!chart.__alive) {\n                chart.remove(ecModel, api);\n            }\n        }, this);\n    }\n\n    var MOUSE_EVENT_NAMES = [\n        'click', 'dblclick', 'mouseover', 'mouseout', 'mousemove',\n        'mousedown', 'mouseup', 'globalout', 'contextmenu'\n    ];\n    /**\n     * @private\n     */\n    echartsProto._initEvents = function () {\n        each(MOUSE_EVENT_NAMES, function (eveName) {\n            this._zr.on(eveName, function (e) {\n                var ecModel = this.getModel();\n                var el = e.target;\n                var params;\n\n                // no e.target when 'globalout'.\n                if (eveName === 'globalout') {\n                    params = {};\n                }\n                else if (el && el.dataIndex != null) {\n                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                    params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n                }\n                // If element has custom eventData of components\n                else if (el && el.eventData) {\n                    params = zrUtil.extend({}, el.eventData);\n                }\n\n                if (params) {\n                    params.event = e;\n                    params.type = eveName;\n                    this.trigger(eveName, params);\n                }\n\n            }, this);\n        }, this);\n\n        each(eventActionMap, function (actionType, eventType) {\n            this._messageCenter.on(eventType, function (event) {\n                this.trigger(eventType, event);\n            }, this);\n        }, this);\n    };\n\n    /**\n     * @return {boolean}\n     */\n    echartsProto.isDisposed = function () {\n        return this._disposed;\n    };\n\n    /**\n     * Clear\n     */\n    echartsProto.clear = function () {\n        this.setOption({ series: [] }, true);\n    };\n\n    /**\n     * Dispose instance\n     */\n    echartsProto.dispose = function () {\n        if (this._disposed) {\n            if (__DEV__) {\n                console.warn('Instance ' + this.id + ' has been disposed');\n            }\n            return;\n        }\n        this._disposed = true;\n\n        var api = this._api;\n        var ecModel = this._model;\n\n        each(this._componentsViews, function (component) {\n            component.dispose(ecModel, api);\n        });\n        each(this._chartsViews, function (chart) {\n            chart.dispose(ecModel, api);\n        });\n\n        // Dispose after all views disposed\n        this._zr.dispose();\n\n        delete instances[this.id];\n    };\n\n    zrUtil.mixin(ECharts, Eventful);\n\n    function updateHoverLayerStatus(zr, ecModel) {\n        var storage = zr.storage;\n        var elCount = 0;\n        storage.traverse(function (el) {\n            if (!el.isGroup) {\n                elCount++;\n            }\n        });\n        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n            storage.traverse(function (el) {\n                if (!el.isGroup) {\n                    el.useHoverLayer = true;\n                }\n            });\n        }\n    }\n\n    /**\n     * Update chart progressive and blend.\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateProgressiveAndBlend(seriesModel, chartView) {\n        // Progressive configuration\n        var elCount = 0;\n        chartView.group.traverse(function (el) {\n            if (el.type !== 'group' && !el.ignore) {\n                elCount++;\n            }\n        });\n        var frameDrawNum = +seriesModel.get('progressive');\n        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n        if (needProgressive) {\n            chartView.group.traverse(function (el) {\n                // FIXME marker and other components\n                if (!el.isGroup) {\n                    el.progressive = needProgressive ?\n                        Math.floor(elCount++ / frameDrawNum) : -1;\n                    if (needProgressive) {\n                        el.stopAnimation(true);\n                    }\n                }\n            });\n        }\n\n        // Blend configration\n        var blendMode = seriesModel.get('blendMode') || null;\n        if (__DEV__) {\n            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n                console.warn('Only canvas support blendMode');\n            }\n        }\n        chartView.group.traverse(function (el) {\n            // FIXME marker and other components\n            if (!el.isGroup) {\n                el.setStyle('blend', blendMode);\n            }\n        });\n    }\n\n    /**\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateZ(model, view) {\n        var z = model.get('z');\n        var zlevel = model.get('zlevel');\n        // Set z and zlevel\n        view.group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n            }\n        });\n    }\n\n    function createExtensionAPI(ecInstance) {\n        var coordSysMgr = ecInstance._coordSysMgr;\n        return zrUtil.extend(new ExtensionAPI(ecInstance), {\n            // Inject methods\n            getCoordinateSystems: zrUtil.bind(\n                coordSysMgr.getCoordinateSystems, coordSysMgr\n            ),\n            getComponentByElement: function (el) {\n                while (el) {\n                    var modelInfo = el.__ecComponentInfo;\n                    if (modelInfo != null) {\n                        return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n                    }\n                    el = el.parent;\n                }\n            }\n        });\n    }\n\n    /**\n     * @type {Object} key: actionType.\n     * @inner\n     */\n    var actions = {};\n\n    /**\n     * Map eventType to actionType\n     * @type {Object}\n     */\n    var eventActionMap = {};\n\n    /**\n     * Data processor functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var dataProcessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var optionPreprocessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var postUpdateFuncs = [];\n\n    /**\n     * Visual encoding functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var visualFuncs = [];\n    /**\n     * Theme storage\n     * @type {Object.<key, Object>}\n     */\n    var themeStorage = {};\n    /**\n     * Loading effects\n     */\n    var loadingEffects = {};\n\n\n    var instances = {};\n    var connectedGroups = {};\n\n    var idBase = new Date() - 0;\n    var groupIdBase = new Date() - 0;\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n\n    /**\n     * @alias module:echarts\n     */\n    var echarts = {\n        /**\n         * @type {number}\n         */\n        version: '3.7.0',\n        dependencies: {\n            zrender: '3.6.0'\n        }\n    };\n\n    function enableConnect(chart) {\n        var STATUS_PENDING = 0;\n        var STATUS_UPDATING = 1;\n        var STATUS_UPDATED = 2;\n        var STATUS_KEY = '__connectUpdateStatus';\n\n        function updateConnectedChartsStatus(charts, status) {\n            for (var i = 0; i < charts.length; i++) {\n                var otherChart = charts[i];\n                otherChart[STATUS_KEY] = status;\n            }\n        }\n\n        zrUtil.each(eventActionMap, function (actionType, eventType) {\n            chart._messageCenter.on(eventType, function (event) {\n                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n                    if (event && event.escapeConnect) {\n                        return;\n                    }\n\n                    var action = chart.makeActionFromEvent(event);\n                    var otherCharts = [];\n\n                    zrUtil.each(instances, function (otherChart) {\n                        if (otherChart !== chart && otherChart.group === chart.group) {\n                            otherCharts.push(otherChart);\n                        }\n                    });\n\n                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n                    each(otherCharts, function (otherChart) {\n                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n                            otherChart.dispatchAction(action);\n                        }\n                    });\n                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n                }\n            });\n        });\n    }\n\n    /**\n     * @param {HTMLElement} dom\n     * @param {Object} [theme]\n     * @param {Object} opts\n     * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n     * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n     * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n     *                              Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n     *                               Can be 'auto' (the same as null/undefined)\n     */\n    echarts.init = function (dom, theme, opts) {\n        if (__DEV__) {\n            // Check version\n            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\n                throw new Error(\n                    'ZRender ' + zrender.version\n                    + ' is too old for ECharts ' + echarts.version\n                    + '. Current version need ZRender '\n                    + echarts.dependencies.zrender + '+'\n                );\n            }\n\n            if (!dom) {\n                throw new Error('Initialize failed: invalid dom.');\n            }\n        }\n\n        var existInstance = echarts.getInstanceByDom(dom);\n        if (existInstance) {\n            if (__DEV__) {\n                console.warn('There is a chart instance already initialized on the dom.');\n            }\n            return existInstance;\n        }\n\n        if (__DEV__) {\n            if (zrUtil.isDom(dom)\n                && dom.nodeName.toUpperCase() !== 'CANVAS'\n                && (\n                    (!dom.clientWidth && (!opts || opts.width == null))\n                    || (!dom.clientHeight && (!opts || opts.height == null))\n                )\n            ) {\n                console.warn('Can\\'t get dom width or height');\n            }\n        }\n\n        var chart = new ECharts(dom, theme, opts);\n        chart.id = 'ec_' + idBase++;\n        instances[chart.id] = chart;\n\n        if (dom.setAttribute) {\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n        }\n        else {\n            dom[DOM_ATTRIBUTE_KEY] = chart.id;\n        }\n\n        enableConnect(chart);\n\n        return chart;\n    };\n\n    /**\n     * @return {string|Array.<module:echarts~ECharts>} groupId\n     */\n    echarts.connect = function (groupId) {\n        // Is array of charts\n        if (zrUtil.isArray(groupId)) {\n            var charts = groupId;\n            groupId = null;\n            // If any chart has group\n            zrUtil.each(charts, function (chart) {\n                if (chart.group != null) {\n                    groupId = chart.group;\n                }\n            });\n            groupId = groupId || ('g_' + groupIdBase++);\n            zrUtil.each(charts, function (chart) {\n                chart.group = groupId;\n            });\n        }\n        connectedGroups[groupId] = true;\n        return groupId;\n    };\n\n    /**\n     * @DEPRECATED\n     * @return {string} groupId\n     */\n    echarts.disConnect = function (groupId) {\n        connectedGroups[groupId] = false;\n    };\n\n    /**\n     * @return {string} groupId\n     */\n    echarts.disconnect = echarts.disConnect;\n\n    /**\n     * Dispose a chart instance\n     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n     */\n    echarts.dispose = function (chart) {\n        if (typeof chart === 'string') {\n            chart = instances[chart];\n        }\n        else if (!(chart instanceof ECharts)){\n            // Try to treat as dom\n            chart = echarts.getInstanceByDom(chart);\n        }\n        if ((chart instanceof ECharts) && !chart.isDisposed()) {\n            chart.dispose();\n        }\n    };\n\n    /**\n     * @param  {HTMLElement} dom\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceByDom = function (dom) {\n        var key;\n        if (dom.getAttribute) {\n            key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n        }\n        else {\n            key = dom[DOM_ATTRIBUTE_KEY];\n        }\n        return instances[key];\n    };\n\n    /**\n     * @param {string} key\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceById = function (key) {\n        return instances[key];\n    };\n\n    /**\n     * Register theme\n     */\n    echarts.registerTheme = function (name, theme) {\n        themeStorage[name] = theme;\n    };\n\n    /**\n     * Register option preprocessor\n     * @param {Function} preprocessorFunc\n     */\n    echarts.registerPreprocessor = function (preprocessorFunc) {\n        optionPreprocessorFuncs.push(preprocessorFunc);\n    };\n\n    /**\n     * @param {number} [priority=1000]\n     * @param {Function} processorFunc\n     */\n    echarts.registerProcessor = function (priority, processorFunc) {\n        if (typeof priority === 'function') {\n            processorFunc = priority;\n            priority = PRIORITY_PROCESSOR_FILTER;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown processor priority');\n            }\n        }\n        dataProcessorFuncs.push({\n            prio: priority,\n            func: processorFunc\n        });\n    };\n\n    /**\n     * Register postUpdater\n     * @param {Function} postUpdateFunc\n     */\n    echarts.registerPostUpdate = function (postUpdateFunc) {\n        postUpdateFuncs.push(postUpdateFunc);\n    };\n\n    /**\n     * Usage:\n     * registerAction('someAction', 'someEvent', function () { ... });\n     * registerAction('someAction', function () { ... });\n     * registerAction(\n     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n     *     function () { ... }\n     * );\n     *\n     * @param {(string|Object)} actionInfo\n     * @param {string} actionInfo.type\n     * @param {string} [actionInfo.event]\n     * @param {string} [actionInfo.update]\n     * @param {string} [eventName]\n     * @param {Function} action\n     */\n    echarts.registerAction = function (actionInfo, eventName, action) {\n        if (typeof eventName === 'function') {\n            action = eventName;\n            eventName = '';\n        }\n        var actionType = zrUtil.isObject(actionInfo)\n            ? actionInfo.type\n            : ([actionInfo, actionInfo = {\n                event: eventName\n            }][0]);\n\n        // Event name is all lowercase\n        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n        eventName = actionInfo.event;\n\n        // Validate action type and event name.\n        zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n        if (!actions[actionType]) {\n            actions[actionType] = {action: action, actionInfo: actionInfo};\n        }\n        eventActionMap[eventName] = actionType;\n    };\n\n    /**\n     * @param {string} type\n     * @param {*} CoordinateSystem\n     */\n    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\n        CoordinateSystemManager.register(type, CoordinateSystem);\n    };\n\n    /**\n     * Get dimensions of specified coordinate system.\n     * @param {string} type\n     * @return {Array.<string|Object>}\n     */\n    echarts.getCoordinateSystemDimensions = function (type) {\n        var coordSysCreator = CoordinateSystemManager.get(type);\n        if (coordSysCreator) {\n            return coordSysCreator.getDimensionsInfo\n                    ? coordSysCreator.getDimensionsInfo()\n                    : coordSysCreator.dimensions.slice();\n        }\n    };\n\n    /**\n     * Layout is a special stage of visual encoding\n     * Most visual encoding like color are common for different chart\n     * But each chart has it's own layout algorithm\n     *\n     * @param {number} [priority=1000]\n     * @param {Function} layoutFunc\n     */\n    echarts.registerLayout = function (priority, layoutFunc) {\n        if (typeof priority === 'function') {\n            layoutFunc = priority;\n            priority = PRIORITY_VISUAL_LAYOUT;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown layout priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: layoutFunc,\n            isLayout: true\n        });\n    };\n\n    /**\n     * @param {number} [priority=3000]\n     * @param {Function} visualFunc\n     */\n    echarts.registerVisual = function (priority, visualFunc) {\n        if (typeof priority === 'function') {\n            visualFunc = priority;\n            priority = PRIORITY_VISUAL_CHART;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown visual priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: visualFunc\n        });\n    };\n\n    /**\n     * @param {string} name\n     */\n    echarts.registerLoading = function (name, loadingFx) {\n        loadingEffects[name] = loadingFx;\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentModel = function (opts/*, superClass*/) {\n        // var Clazz = ComponentModel;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentView = function (opts/*, superClass*/) {\n        // var Clazz = ComponentView;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentView.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendSeriesModel = function (opts/*, superClass*/) {\n        // var Clazz = SeriesModel;\n        // if (superClass) {\n        //     superClass = 'series.' + superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return SeriesModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendChartView = function (opts/*, superClass*/) {\n        // var Clazz = ChartView;\n        // if (superClass) {\n        //     superClass = superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ChartView.getClass(classType.main, true);\n        // }\n        return ChartView.extend(opts);\n    };\n\n    /**\n     * ZRender need a canvas context to do measureText.\n     * But in node environment canvas may be created by node-canvas.\n     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n     *\n     * Be careful of using it in the browser.\n     *\n     * @param {Function} creator\n     * @example\n     *     var Canvas = require('canvas');\n     *     var echarts = require('echarts');\n     *     echarts.setCanvasCreator(function () {\n     *         // Small size is enough.\n     *         return new Canvas(32, 32);\n     *     });\n     */\n    echarts.setCanvasCreator = function (creator) {\n        zrUtil.createCanvas = creator;\n    };\n\n    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, require('./visual/seriesColor'));\n    echarts.registerPreprocessor(require('./preprocessor/backwardCompat'));\n    echarts.registerLoading('default', require('./loading/default'));\n\n    // Default action\n    echarts.registerAction({\n        type: 'highlight',\n        event: 'highlight',\n        update: 'highlight'\n    }, zrUtil.noop);\n    echarts.registerAction({\n        type: 'downplay',\n        event: 'downplay',\n        update: 'downplay'\n    }, zrUtil.noop);\n\n\n    // --------\n    // Exports\n    // --------\n    echarts.zrender = zrender;\n\n    echarts.List = require('./data/List');\n    echarts.Model = require('./model/Model');\n\n    echarts.Axis = require('./coord/Axis');\n\n    echarts.graphic = require('./util/graphic');\n    echarts.number = require('./util/number');\n    echarts.format = require('./util/format');\n    echarts.throttle = throttle.throttle;\n    echarts.matrix = require('zrender/lib/core/matrix');\n    echarts.vector = require('zrender/lib/core/vector');\n    echarts.color = require('zrender/lib/tool/color');\n\n    echarts.util = {};\n    each([\n            'map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter',\n            'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction',\n            'extend', 'defaults', 'clone', 'merge'\n        ],\n        function (name) {\n            echarts.util[name] = zrUtil[name];\n        }\n    );\n\n    echarts.helper = require('./helper');\n\n\n    // PRIORITY\n    echarts.PRIORITY = {\n        PROCESSOR: {\n            FILTER: PRIORITY_PROCESSOR_FILTER,\n            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n        },\n        VISUAL: {\n            LAYOUT: PRIORITY_VISUAL_LAYOUT,\n            GLOBAL: PRIORITY_VISUAL_GLOBAL,\n            CHART: PRIORITY_VISUAL_CHART,\n            COMPONENT: PRIORITY_VISUAL_COMPONENT,\n            BRUSH: PRIORITY_VISUAL_BRUSH\n        }\n    };\n\n    module.exports = echarts;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/echarts.js\n// module id = 607\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var pathTool = require('zrender/lib/tool/path');\n    var Path = require('zrender/lib/graphic/Path');\n    var colorTool = require('zrender/lib/tool/color');\n    var matrix = require('zrender/lib/core/matrix');\n    var vector = require('zrender/lib/core/vector');\n    var Transformable = require('zrender/lib/mixin/Transformable');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n\n    var round = Math.round;\n    var mathMax = Math.max;\n    var mathMin = Math.min;\n\n    var EMPTY_OBJ = {};\n\n    var graphic = {};\n\n    graphic.Group = require('zrender/lib/container/Group');\n\n    graphic.Image = require('zrender/lib/graphic/Image');\n\n    graphic.Text = require('zrender/lib/graphic/Text');\n\n    graphic.Circle = require('zrender/lib/graphic/shape/Circle');\n\n    graphic.Sector = require('zrender/lib/graphic/shape/Sector');\n\n    graphic.Ring = require('zrender/lib/graphic/shape/Ring');\n\n    graphic.Polygon = require('zrender/lib/graphic/shape/Polygon');\n\n    graphic.Polyline = require('zrender/lib/graphic/shape/Polyline');\n\n    graphic.Rect = require('zrender/lib/graphic/shape/Rect');\n\n    graphic.Line = require('zrender/lib/graphic/shape/Line');\n\n    graphic.BezierCurve = require('zrender/lib/graphic/shape/BezierCurve');\n\n    graphic.Arc = require('zrender/lib/graphic/shape/Arc');\n\n    graphic.CompoundPath = require('zrender/lib/graphic/CompoundPath');\n\n    graphic.LinearGradient = require('zrender/lib/graphic/LinearGradient');\n\n    graphic.RadialGradient = require('zrender/lib/graphic/RadialGradient');\n\n    graphic.BoundingRect = BoundingRect;\n\n    /**\n     * Extend shape with parameters\n     */\n    graphic.extendShape = function (opts) {\n        return Path.extend(opts);\n    };\n\n    /**\n     * Extend path\n     */\n    graphic.extendPath = function (pathData, opts) {\n        return pathTool.extendFromString(pathData, opts);\n    };\n\n    /**\n     * Create a path element from path data string\n     * @param {string} pathData\n     * @param {Object} opts\n     * @param {module:zrender/core/BoundingRect} rect\n     * @param {string} [layout=cover] 'center' or 'cover'\n     */\n    graphic.makePath = function (pathData, opts, rect, layout) {\n        var path = pathTool.createFromString(pathData, opts);\n        var boundingRect = path.getBoundingRect();\n        if (rect) {\n            var aspect = boundingRect.width / boundingRect.height;\n\n            if (layout === 'center') {\n                // Set rect to center, keep width / height ratio.\n                var width = rect.height * aspect;\n                var height;\n                if (width <= rect.width) {\n                    height = rect.height;\n                }\n                else {\n                    width = rect.width;\n                    height = width / aspect;\n                }\n                var cx = rect.x + rect.width / 2;\n                var cy = rect.y + rect.height / 2;\n\n                rect.x = cx - width / 2;\n                rect.y = cy - height / 2;\n                rect.width = width;\n                rect.height = height;\n            }\n\n            graphic.resizePath(path, rect);\n        }\n        return path;\n    };\n\n    graphic.mergePath = pathTool.mergePath,\n\n    /**\n     * Resize a path to fit the rect\n     * @param {module:zrender/graphic/Path} path\n     * @param {Object} rect\n     */\n    graphic.resizePath = function (path, rect) {\n        if (!path.applyTransform) {\n            return;\n        }\n\n        var pathRect = path.getBoundingRect();\n\n        var m = pathRect.calculateTransform(rect);\n\n        path.applyTransform(m);\n    };\n\n    /**\n     * Sub pixel optimize line for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x1]\n     * @param {number} [param.shape.y1]\n     * @param {number} [param.shape.x2]\n     * @param {number} [param.shape.y2]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeLine = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n\n        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n        }\n        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n        }\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize rect for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x]\n     * @param {number} [param.shape.y]\n     * @param {number} [param.shape.width]\n     * @param {number} [param.shape.height]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeRect = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n        var originX = shape.x;\n        var originY = shape.y;\n        var originWidth = shape.width;\n        var originHeight = shape.height;\n        shape.x = subPixelOptimize(shape.x, lineWidth, true);\n        shape.y = subPixelOptimize(shape.y, lineWidth, true);\n        shape.width = Math.max(\n            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\n            originWidth === 0 ? 0 : 1\n        );\n        shape.height = Math.max(\n            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\n            originHeight === 0 ? 0 : 1\n        );\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize for canvas\n     *\n     * @param {number} position Coordinate, such as x, y\n     * @param {number} lineWidth Should be nonnegative integer.\n     * @param {boolean=} positiveOrNegative Default false (negative).\n     * @return {number} Optimized position.\n     */\n    graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\n        // Assure that (position + lineWidth / 2) is near integer edge,\n        // otherwise line will be fuzzy in canvas.\n        var doubledPosition = round(position * 2);\n        return (doubledPosition + round(lineWidth)) % 2 === 0\n            ? doubledPosition / 2\n            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n    };\n\n    function hasFillOrStroke(fillOrStroke) {\n        return fillOrStroke != null && fillOrStroke != 'none';\n    }\n\n    function liftColor(color) {\n        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n    }\n\n    /**\n     * @private\n     */\n    function cacheElementStl(el) {\n        if (el.__hoverStlDirty) {\n            var stroke = el.style.stroke;\n            var fill = el.style.fill;\n\n            // Create hoverStyle on mouseover\n            var hoverStyle = el.__hoverStl;\n            hoverStyle.fill = hoverStyle.fill\n                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n            hoverStyle.stroke = hoverStyle.stroke\n                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n\n            var normalStyle = {};\n            for (var name in hoverStyle) {\n                // See comment in `doSingleEnterHover`.\n                if (hoverStyle[name] != null) {\n                    normalStyle[name] = el.style[name];\n                }\n            }\n\n            el.__normalStl = normalStyle;\n\n            el.__hoverStlDirty = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    function doSingleEnterHover(el) {\n        if (el.__isHover) {\n            return;\n        }\n\n        cacheElementStl(el);\n\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.addHover(el, el.__hoverStl);\n        }\n        else {\n            // styles can be:\n            // {\n            //     label: {\n            //         normal: {\n            //             show: false,\n            //             position: 'outside',\n            //             fontSize: 18\n            //         },\n            //         emphasis: {\n            //             show: true\n            //         }\n            //     }\n            // },\n            // where properties of `emphasis` may not appear in `normal`. We previously use\n            // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n            // But consider rich text and setOption in merge mode, it is impossible to cover\n            // all properties in merge. So we use merge mode when setting style here, where\n            // only properties that is not `null/undefined` can be set. The disadventage:\n            // null/undefined can not be used to remove style any more in `emphasis`.\n            el.style.extendFrom(el.__hoverStl);\n            el.dirty(false);\n            el.z2 += 1;\n        }\n\n        el.__isHover = true;\n    }\n\n    /**\n     * @inner\n     */\n    function doSingleLeaveHover(el) {\n        if (!el.__isHover) {\n            return;\n        }\n\n        var normalStl = el.__normalStl;\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.removeHover(el);\n        }\n        else {\n            // Consider null/undefined value, should use\n            // `setStyle` but not `extendFrom(stl, true)`.\n            normalStl && el.setStyle(normalStl);\n            el.z2 -= 1;\n        }\n\n        el.__isHover = false;\n    }\n\n    /**\n     * @inner\n     */\n    function doEnterHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleEnterHover(child);\n                }\n            })\n            : doSingleEnterHover(el);\n    }\n\n    function doLeaveHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleLeaveHover(child);\n                }\n            })\n            : doSingleLeaveHover(el);\n    }\n\n    /**\n     * @inner\n     */\n    function setElementHoverStl(el, hoverStl) {\n        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n        // Often used when item group has a label element and it's hoverStyle is different\n        el.__hoverStl = el.hoverStyle || hoverStl || {};\n        el.__hoverStlDirty = true;\n\n        if (el.__isHover) {\n            cacheElementStl(el);\n        }\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOver(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOut(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doLeaveHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function enterEmphasis() {\n        this.__isEmphasis = true;\n        doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function leaveEmphasis() {\n        this.__isEmphasis = false;\n        doLeaveHover(this);\n    }\n\n    /**\n     * Set hover style of element.\n     * This method can be called repeatly without side-effects.\n     * @param {module:zrender/Element} el\n     * @param {Object} [hoverStyle]\n     * @param {Object} [opt]\n     * @param {boolean} [opt.hoverSilentOnTouch=false]\n     *        In touch device, mouseover event will be trigger on touchstart event\n     *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n     *        conviniently use hoverStyle when tap on touch screen without additional\n     *        code for compatibility.\n     *        But if the chart/component has select feature, which usually also use\n     *        hoverStyle, there might be conflict between 'select-highlight' and\n     *        'hover-highlight' especially when roam is enabled (see geo for example).\n     *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n     *        on touch device.\n     */\n    graphic.setHoverStyle = function (el, hoverStyle, opt) {\n        el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    setElementHoverStl(child, hoverStyle);\n                }\n            })\n            : setElementHoverStl(el, hoverStyle);\n\n        // Duplicated function will be auto-ignored, see Eventful.js.\n        el.on('mouseover', onElementMouseOver)\n          .on('mouseout', onElementMouseOut);\n\n        // Emphasis, normal can be triggered manually\n        el.on('emphasis', enterEmphasis)\n          .on('normal', leaveEmphasis);\n    };\n\n    /**\n     * Set basic textStyle properties.\n     * @param {Object|module:zrender/graphic/Style} textStyle\n     * @param {module:echarts/model/Model} model\n     * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n     * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n     */\n    graphic.setTextStyle = function (textStyle, textStyleModel, specifiedTextStyle, opt) {\n        setTextStyleCommon(textStyle, textStyleModel, opt);\n        specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n        textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n\n        return textStyle;\n    };\n\n    /**\n     * Set text option in the style\n     * @param {Object} textStyle\n     * @param {module:echarts/model/Model} labelModel\n     * @param {string|boolean} defaultColor Default text color.\n     *        If set as false, it will be processed as a emphasis style.\n     */\n    graphic.setText = function (textStyle, labelModel, defaultColor) {\n        var opt = {isRectText: true};\n        if (defaultColor === false) {\n            opt.forMerge = true;\n        }\n        else {\n            // Support setting color as 'auto' to get visual color.\n            opt.defaultTextColor = opt.autoColor = defaultColor;\n            opt.checkInside = checkInsideForSetText;\n        }\n        setTextStyleCommon(textStyle, labelModel, opt);\n        textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n    };\n\n    function checkInsideForSetText(labelModel, textPosition) {\n        return textPosition && textPosition.indexOf('inside') >= 0;\n    }\n\n    /**\n     * {\n     *      disableBox: boolean, Whether diable drawing box of block (outer most).\n     *      isRectText: boolean,\n     *      autoColor: string, specify a color when color is 'auto',\n     *                 for textFill, textStroke, textBackgroundColor, and textBorderColor,\n     *      defaultTextColor: string,\n     *      checkInside: function, higher priority than `defaultTextColor`.\n     *      forceRich: boolean,\n     *      forMerge: boolean\n     * }\n     */\n    function setTextStyleCommon(textStyle, textStyleModel, opt) {\n        // Consider there will be abnormal when merge hover style to normal style if given default value.\n        opt = opt || EMPTY_OBJ;\n\n        if (opt.isRectText) {\n            var textPosition = textStyleModel.getShallow('position')\n                || (opt.forMerge ? null : 'inside');\n            // 'outside' is not a valid zr textPostion value, but used\n            // in bar series, and magric type should be considered.\n            textPosition === 'outside' && (textPosition = 'top');\n            textStyle.textPosition = textPosition;\n            textStyle.textOffset = textStyleModel.getShallow('offset');\n            var labelRotate = textStyleModel.getShallow('rotate');\n            labelRotate != null && (labelRotate *= Math.PI / 180);\n            textStyle.textRotation = labelRotate;\n            textStyle.textDistance = zrUtil.retrieve2(\n                textStyleModel.getShallow('distance'), opt.forMerge ? null : 5\n            );\n        }\n\n        var ecModel = textStyleModel.ecModel;\n        var globalTextStyle = ecModel && ecModel.option.textStyle;\n\n        // Consider case:\n        // {\n        //     data: [{\n        //         value: 12,\n        //         label: {\n        //             normal: {\n        //                 rich: {\n        //                     // no 'a' here but using parent 'a'.\n        //                 }\n        //             }\n        //         }\n        //     }],\n        //     rich: {\n        //         a: { ... }\n        //     }\n        // }\n        var richItemNames = getRichItemNames(textStyleModel);\n        var richResult;\n        if (richItemNames) {\n            richResult = {};\n            for (var name in richItemNames) {\n                if (richItemNames.hasOwnProperty(name)) {\n                    // Cascade is supported in rich.\n                    var richTextStyle = textStyleModel.getModel(['rich', name]);\n                    // In rich, never `disableBox`.\n                    setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt);\n                }\n            }\n        }\n        textStyle.rich = richResult;\n\n        setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, true);\n\n        if (opt.forceRich && !opt.textStyle) {\n            opt.textStyle = {};\n        }\n\n        return textStyle;\n    }\n\n    // Consider case:\n    // {\n    //     data: [{\n    //         value: 12,\n    //         label: {\n    //             normal: {\n    //                 rich: {\n    //                     // no 'a' here but using parent 'a'.\n    //                 }\n    //             }\n    //         }\n    //     }],\n    //     rich: {\n    //         a: { ... }\n    //     }\n    // }\n    function getRichItemNames(textStyleModel) {\n        // Use object to remove duplicated names.\n        var richItemNameMap;\n        while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n            var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n            if (rich) {\n                richItemNameMap = richItemNameMap || {};\n                for (var name in rich) {\n                    if (rich.hasOwnProperty(name)) {\n                        richItemNameMap[name] = 1;\n                    }\n                }\n            }\n            textStyleModel = textStyleModel.parentModel;\n        }\n        return richItemNameMap;\n    }\n\n    function setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isBlock) {\n        var forMerge = opt.forMerge;\n\n        // In merge mode, default value should not be given.\n        globalTextStyle = !forMerge && globalTextStyle || EMPTY_OBJ;\n\n        var textFill = getAutoColor(textStyleModel.getShallow('color'));\n        var textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'));\n        var textLineWidth = textStyleModel.getShallow('textBorderWidth');\n\n        if (!forMerge) {\n            textFill == null && (textFill = globalTextStyle.color);\n            textStroke == null && (textStroke = globalTextStyle.textBorderColor);\n            textLineWidth == null && (textLineWidth = globalTextStyle.textBorderWidth);\n\n            if (textFill == null\n                && opt.checkInside\n                && opt.checkInside(textStyleModel, textStyle.textPosition)\n            ) {\n                textFill = '#fff';\n                // Consider text with #fff overflow its container.\n                if (textStroke == null) {\n                    textStroke = opt.defaultTextColor;\n                    textLineWidth == null && (textLineWidth = 2);\n                }\n            }\n\n            textFill == null && (textFill = opt.defaultTextColor);\n        }\n\n        textStyle.textFill = textFill;\n        textStyle.textStroke = textStroke;\n        textStyle.textLineWidth = textLineWidth;\n\n        // Do not use `getFont` here, because merge should be supported, where\n        // part of these properties may be changed in emphasis style, and the\n        // others should remain their original value got from normal style.\n        textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n        textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n        textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n        textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n\n        textStyle.textAlign = textStyleModel.getShallow('align');\n        textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign')\n            || textStyleModel.getShallow('baseline');\n\n        textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n        textStyle.textWidth = textStyleModel.getShallow('width');\n        textStyle.textHeight = textStyleModel.getShallow('height');\n        textStyle.textTag = textStyleModel.getShallow('tag');\n\n        if (!isBlock || !opt.disableBox) {\n            textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n            textStyle.textPadding = textStyleModel.getShallow('padding');\n            textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n            textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n            textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n\n            textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n            textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n            textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n            textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n        }\n\n        textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor')\n            || globalTextStyle.textShadowColor;\n        textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur')\n            || globalTextStyle.textShadowBlur;\n        textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX')\n            || globalTextStyle.textShadowOffsetX;\n        textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY')\n            || globalTextStyle.textShadowOffsetY;\n    }\n\n    function getAutoColor(color, opt) {\n        return color !== 'auto' ? color : (opt && opt.autoColor) ? opt.autoColor : null;\n    }\n\n    graphic.getFont = function (opt, ecModel) {\n        // ecModel or default text style model.\n        var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n        return [\n            // FIXME in node-canvas fontWeight is before fontStyle\n            opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '',\n            opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '',\n            (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px',\n            opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'\n        ].join(' ');\n    };\n\n    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n        if (typeof dataIndex === 'function') {\n            cb = dataIndex;\n            dataIndex = null;\n        }\n        // Do not check 'animation' property directly here. Consider this case:\n        // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n        // but its parent model (`seriesModel`) does.\n        var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n        if (animationEnabled) {\n            var postfix = isUpdate ? 'Update' : '';\n            var duration = animatableModel.getShallow('animationDuration' + postfix);\n            var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n            var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n            if (typeof animationDelay === 'function') {\n                animationDelay = animationDelay(\n                    dataIndex,\n                    animatableModel.getAnimationDelayParams\n                        ? animatableModel.getAnimationDelayParams(el, dataIndex)\n                        : null\n                );\n            }\n            if (typeof duration === 'function') {\n                duration = duration(dataIndex);\n            }\n\n            duration > 0\n                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb)\n                : (el.stopAnimation(), el.attr(props), cb && cb());\n        }\n        else {\n            el.stopAnimation();\n            el.attr(props);\n            cb && cb();\n        }\n    }\n\n    /**\n     * Update graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} [cb]\n     * @example\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n     *     // Or\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, function () { console.log('Animation done!'); });\n     */\n    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Init graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} cb\n     */\n    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Get transform matrix of target (param target),\n     * in coordinate of its ancestor (param ancestor)\n     *\n     * @param {module:zrender/mixin/Transformable} target\n     * @param {module:zrender/mixin/Transformable} [ancestor]\n     */\n    graphic.getTransform = function (target, ancestor) {\n        var mat = matrix.identity([]);\n\n        while (target && target !== ancestor) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n\n        return mat;\n    };\n\n    /**\n     * Apply transform to an vertex.\n     * @param {Array.<number>} target [x, y]\n     * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n     *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n     *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {Array.<number>} [x, y]\n     */\n    graphic.applyTransform = function (target, transform, invert) {\n        if (transform && !zrUtil.isArrayLike(transform)) {\n            transform = Transformable.getLocalTransform(transform);\n        }\n\n        if (invert) {\n            transform = matrix.invert([], transform);\n        }\n        return vector.applyTransform([], target, transform);\n    };\n\n    /**\n     * @param {string} direction 'left' 'right' 'top' 'bottom'\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n     */\n    graphic.transformDirection = function (direction, transform, invert) {\n\n        // Pick a base, ensure that transform result will not be (0, 0).\n        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[0]);\n        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[2]);\n\n        var vertex = [\n            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\n            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\n        ];\n\n        vertex = graphic.applyTransform(vertex, transform, invert);\n\n        return Math.abs(vertex[0]) > Math.abs(vertex[1])\n            ? (vertex[0] > 0 ? 'right' : 'left')\n            : (vertex[1] > 0 ? 'bottom' : 'top');\n    };\n\n    /**\n     * Apply group transition animation from g1 to g2.\n     * If no animatableModel, no animation.\n     */\n    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\n        if (!g1 || !g2) {\n            return;\n        }\n\n        function getElMap(g) {\n            var elMap = {};\n            g.traverse(function (el) {\n                if (!el.isGroup && el.anid) {\n                    elMap[el.anid] = el;\n                }\n            });\n            return elMap;\n        }\n        function getAnimatableProps(el) {\n            var obj = {\n                position: vector.clone(el.position),\n                rotation: el.rotation\n            };\n            if (el.shape) {\n                obj.shape = zrUtil.extend({}, el.shape);\n            }\n            return obj;\n        }\n        var elMap1 = getElMap(g1);\n\n        g2.traverse(function (el) {\n            if (!el.isGroup && el.anid) {\n                var oldEl = elMap1[el.anid];\n                if (oldEl) {\n                    var newProp = getAnimatableProps(el);\n                    el.attr(getAnimatableProps(oldEl));\n                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\n                }\n                // else {\n                //     if (el.previousProps) {\n                //         graphic.updateProps\n                //     }\n                // }\n            }\n        });\n    };\n\n    /**\n     * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n     * @param {Object} rect {x, y, width, height}\n     * @return {Array.<Array.<number>>} A new clipped points.\n     */\n    graphic.clipPointsByRect = function (points, rect) {\n        return zrUtil.map(points, function (point) {\n            var x = point[0];\n            x = mathMax(x, rect.x);\n            x = mathMin(x, rect.x + rect.width);\n            var y = point[1];\n            y = mathMax(y, rect.y);\n            y = mathMin(y, rect.y + rect.height);\n            return [x, y];\n        });\n    };\n\n    /**\n     * @param {Object} targetRect {x, y, width, height}\n     * @param {Object} rect {x, y, width, height}\n     * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n     */\n    graphic.clipRectByRect = function (targetRect, rect) {\n        var x = mathMax(targetRect.x, rect.x);\n        var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n        var y = mathMax(targetRect.y, rect.y);\n        var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n        if (x2 >= x && y2 >= y) {\n            return {\n                x: x,\n                y: y,\n                width: x2 - x,\n                height: y2 - y\n            };\n        }\n    };\n\n    /**\n     * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n     * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n     * @param {Object} [rect] {x, y, width, height}\n     * @return {module:zrender/Element} Icon path or image element.\n     */\n    graphic.createIcon = function (iconStr, opt, rect) {\n        opt = zrUtil.extend({rectHover: true}, opt);\n        var style = opt.style = {strokeNoScale: true};\n        rect = rect || {x: -1, y: -1, width: 2, height: 2};\n\n        if (iconStr) {\n            return iconStr.indexOf('image://') === 0\n                ? (\n                    style.image = iconStr.slice(8),\n                    zrUtil.defaults(style, rect),\n                    new graphic.Image(opt)\n                )\n                : (\n                    graphic.makePath(\n                        iconStr.replace('path://', ''),\n                        opt,\n                        rect,\n                        'center'\n                    )\n                );\n        }\n\n    };\n\n    module.exports = graphic;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/graphic.js\n// module id = 608\n// module chunks = 0 1 2","\n\n    var formatUtil = require('./format');\n    var nubmerUtil = require('./number');\n    var Model = require('../model/Model');\n    var zrUtil = require('zrender/lib/core/util');\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var modelUtil = {};\n\n    /**\n     * If value is not array, then translate it to array.\n     * @param  {*} value\n     * @return {Array} [value] or value\n     */\n    modelUtil.normalizeToArray = function (value) {\n        return value instanceof Array\n            ? value\n            : value == null\n            ? []\n            : [value];\n    };\n\n    /**\n     * Sync default option between normal and emphasis like `position` and `show`\n     * In case some one will write code like\n     *     label: {\n     *         normal: {\n     *             show: false,\n     *             position: 'outside',\n     *             fontSize: 18\n     *         },\n     *         emphasis: {\n     *             show: true\n     *         }\n     *     }\n     * @param {Object} opt\n     * @param {Array.<string>} subOpts\n     */\n     modelUtil.defaultEmphasis = function (opt, subOpts) {\n        if (opt) {\n            var emphasisOpt = opt.emphasis = opt.emphasis || {};\n            var normalOpt = opt.normal = opt.normal || {};\n\n            // Default emphasis option from normal\n            for (var i = 0, len = subOpts.length; i < len; i++) {\n                var subOptName = subOpts[i];\n                if (!emphasisOpt.hasOwnProperty(subOptName)\n                    && normalOpt.hasOwnProperty(subOptName)\n                ) {\n                    emphasisOpt[subOptName] = normalOpt[subOptName];\n                }\n            }\n        }\n    };\n\n    modelUtil.TEXT_STYLE_OPTIONS = [\n        'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n        'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth',\n        'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline',\n        'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY',\n        'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY',\n        'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding'\n    ];\n\n    // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n    //     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n    //     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n    //     // FIXME: deprecated, check and remove it.\n    //     'textStyle'\n    // ]);\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method retieves value from data.\n     * @param {string|number|Date|Array|Object} dataItem\n     * @return {number|string|Date|Array.<number|string|Date>}\n     */\n    modelUtil.getDataItemValue = function (dataItem) {\n        // Performance sensitive.\n        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n    };\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method determine if dataItem has extra option besides value\n     * @param {string|number|Date|Array|Object} dataItem\n     */\n    modelUtil.isDataItemOption = function (dataItem) {\n        return isObject(dataItem)\n            && !(dataItem instanceof Array);\n            // // markLine data can be array\n            // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n    };\n\n    /**\n     * This helper method convert value in data.\n     * @param {string|number|Date} value\n     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n     */\n    modelUtil.converDataValue = function (value, dimInfo) {\n        // Performance sensitive.\n        var dimType = dimInfo && dimInfo.type;\n        if (dimType === 'ordinal') {\n            return value;\n        }\n\n        if (dimType === 'time'\n            // spead up when using timestamp\n            && typeof value !== 'number'\n            && value != null\n            && value !== '-'\n        ) {\n            value = +nubmerUtil.parseDate(value);\n        }\n\n        // dimType defaults 'number'.\n        // If dimType is not ordinal and value is null or undefined or NaN or '-',\n        // parse to NaN.\n        return (value == null || value === '')\n            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n    };\n\n    /**\n     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n     * @param {module:echarts/data/List} data\n     * @param {Object} opt\n     * @param {string} [opt.seriesIndex]\n     * @param {Object} [opt.name]\n     * @param {Object} [opt.mainType]\n     * @param {Object} [opt.subType]\n     */\n    modelUtil.createDataFormatModel = function (data, opt) {\n        var model = new Model();\n        zrUtil.mixin(model, modelUtil.dataFormatMixin);\n        model.seriesIndex = opt.seriesIndex;\n        model.name = opt.name || '';\n        model.mainType = opt.mainType;\n        model.subType = opt.subType;\n\n        model.getData = function () {\n            return data;\n        };\n        return model;\n    };\n\n    // PENDING A little ugly\n    modelUtil.dataFormatMixin = {\n        /**\n         * Get params for formatter\n         * @param {number} dataIndex\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getDataParams: function (dataIndex, dataType) {\n            var data = this.getData(dataType);\n            var rawValue = this.getRawValue(dataIndex, dataType);\n            var rawDataIndex = data.getRawIndex(dataIndex);\n            var name = data.getName(dataIndex, true);\n            var itemOpt = data.getRawDataItem(dataIndex);\n            var color = data.getItemVisual(dataIndex, 'color');\n\n            return {\n                componentType: this.mainType,\n                componentSubType: this.subType,\n                seriesType: this.mainType === 'series' ? this.subType : null,\n                seriesIndex: this.seriesIndex,\n                seriesId: this.id,\n                seriesName: this.name,\n                name: name,\n                dataIndex: rawDataIndex,\n                data: itemOpt,\n                dataType: dataType,\n                value: rawValue,\n                color: color,\n                marker: formatUtil.getTooltipMarker(color),\n\n                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n                $vars: ['seriesName', 'name', 'value']\n            };\n        },\n\n        /**\n         * Format label\n         * @param {number} dataIndex\n         * @param {string} [status='normal'] 'normal' or 'emphasis'\n         * @param {string} [dataType]\n         * @param {number} [dimIndex]\n         * @param {string} [labelProp='label']\n         * @return {string}\n         */\n        getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n            status = status || 'normal';\n            var data = this.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var params = this.getDataParams(dataIndex, dataType);\n            if (dimIndex != null && (params.value instanceof Array)) {\n                params.value = params.value[dimIndex];\n            }\n\n            var formatter = itemModel.get([labelProp || 'label', status, 'formatter']);\n\n            if (typeof formatter === 'function') {\n                params.status = status;\n                return formatter(params);\n            }\n            else if (typeof formatter === 'string') {\n                return formatUtil.formatTpl(formatter, params);\n            }\n        },\n\n        /**\n         * Get raw value in option\n         * @param {number} idx\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getRawValue: function (idx, dataType) {\n            var data = this.getData(dataType);\n            var dataItem = data.getRawDataItem(idx);\n            if (dataItem != null) {\n                return (isObject(dataItem) && !(dataItem instanceof Array))\n                    ? dataItem.value : dataItem;\n            }\n        },\n\n        /**\n         * Should be implemented.\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         * @return {string} tooltip string\n         */\n        formatTooltip: zrUtil.noop\n    };\n\n    /**\n     * Mapping to exists for merge.\n     *\n     * @public\n     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n     * @param {Object|Array.<Object>} newCptOptions\n     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          index of which is the same as exists.\n     */\n    modelUtil.mappingToExists = function (exists, newCptOptions) {\n        // Mapping by the order by original option (but not order of\n        // new option) in merge mode. Because we should ensure\n        // some specified index (like xAxisIndex) is consistent with\n        // original option, which is easy to understand, espatially in\n        // media query. And in most case, merge option is used to\n        // update partial option but not be expected to change order.\n        newCptOptions = (newCptOptions || []).slice();\n\n        var result = zrUtil.map(exists || [], function (obj, index) {\n            return {exist: obj};\n        });\n\n        // Mapping by id or name if specified.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            // id has highest priority.\n            for (var i = 0; i < result.length; i++) {\n                if (!result[i].option // Consider name: two map to one.\n                    && cptOption.id != null\n                    && result[i].exist.id === cptOption.id + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n\n            for (var i = 0; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option // Consider name: two map to one.\n                    // Can not match when both ids exist but different.\n                    && (exist.id == null || cptOption.id == null)\n                    && cptOption.name != null\n                    && !modelUtil.isIdInner(cptOption)\n                    && !modelUtil.isIdInner(exist)\n                    && exist.name === cptOption.name + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n        });\n\n        // Otherwise mapping by index.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            var i = 0;\n            for (; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option\n                    // Existing model that already has id should be able to\n                    // mapped to (because after mapping performed model may\n                    // be assigned with a id, whish should not affect next\n                    // mapping), except those has inner id.\n                    && !modelUtil.isIdInner(exist)\n                    // Caution:\n                    // Do not overwrite id. But name can be overwritten,\n                    // because axis use name as 'show label text'.\n                    // 'exist' always has id and name and we dont\n                    // need to check it.\n                    && cptOption.id == null\n                ) {\n                    result[i].option = cptOption;\n                    break;\n                }\n            }\n\n            if (i >= result.length) {\n                result.push({option: cptOption});\n            }\n        });\n\n        return result;\n    };\n\n    /**\n     * Make id and name for mapping result (result of mappingToExists)\n     * into `keyInfo` field.\n     *\n     * @public\n     * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          which order is the same as exists.\n     * @return {Array.<Object>} The input.\n     */\n    modelUtil.makeIdAndName = function (mapResult) {\n        // We use this id to hash component models and view instances\n        // in echarts. id can be specified by user, or auto generated.\n\n        // The id generation rule ensures new view instance are able\n        // to mapped to old instance when setOption are called in\n        // no-merge mode. So we generate model id by name and plus\n        // type in view id.\n\n        // name can be duplicated among components, which is convenient\n        // to specify multi components (like series) by one name.\n\n        // Ensure that each id is distinct.\n        var idMap = zrUtil.createHashMap();\n\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            existCpt && idMap.set(existCpt.id, item);\n        });\n\n        each(mapResult, function (item, index) {\n            var opt = item.option;\n\n            zrUtil.assert(\n                !opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item,\n                'id duplicates: ' + (opt && opt.id)\n            );\n\n            opt && opt.id != null && idMap.set(opt.id, item);\n            !item.keyInfo && (item.keyInfo = {});\n        });\n\n        // Make name and id.\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            var opt = item.option;\n            var keyInfo = item.keyInfo;\n\n            if (!isObject(opt)) {\n                return;\n            }\n\n            // name can be overwitten. Consider case: axis.name = '20km'.\n            // But id generated by name will not be changed, which affect\n            // only in that case: setOption with 'not merge mode' and view\n            // instance will be recreated, which can be accepted.\n            keyInfo.name = opt.name != null\n                ? opt.name + ''\n                : existCpt\n                ? existCpt.name\n                : '\\0-'; // name may be displayed on screen, so use '-'.\n\n            if (existCpt) {\n                keyInfo.id = existCpt.id;\n            }\n            else if (opt.id != null) {\n                keyInfo.id = opt.id + '';\n            }\n            else {\n                // Consider this situatoin:\n                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n                // Series with the same name between optionA and optionB\n                // should be mapped.\n                var idNum = 0;\n                do {\n                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n                }\n                while (idMap.get(keyInfo.id));\n            }\n\n            idMap.set(keyInfo.id, item);\n        });\n    };\n\n    /**\n     * @public\n     * @param {Object} cptOption\n     * @return {boolean}\n     */\n    modelUtil.isIdInner = function (cptOption) {\n        return isObject(cptOption)\n            && cptOption.id\n            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n    };\n\n    /**\n     * A helper for removing duplicate items between batchA and batchB,\n     * and in themselves, and categorize by series.\n     *\n     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n     */\n    modelUtil.compressBatches = function (batchA, batchB) {\n        var mapA = {};\n        var mapB = {};\n\n        makeMap(batchA || [], mapA);\n        makeMap(batchB || [], mapB, mapA);\n\n        return [mapToArray(mapA), mapToArray(mapB)];\n\n        function makeMap(sourceBatch, map, otherMap) {\n            for (var i = 0, len = sourceBatch.length; i < len; i++) {\n                var seriesId = sourceBatch[i].seriesId;\n                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\n                var otherDataIndices = otherMap && otherMap[seriesId];\n\n                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n                    var dataIndex = dataIndices[j];\n\n                    if (otherDataIndices && otherDataIndices[dataIndex]) {\n                        otherDataIndices[dataIndex] = null;\n                    }\n                    else {\n                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n                    }\n                }\n            }\n        }\n\n        function mapToArray(map, isData) {\n            var result = [];\n            for (var i in map) {\n                if (map.hasOwnProperty(i) && map[i] != null) {\n                    if (isData) {\n                        result.push(+i);\n                    }\n                    else {\n                        var dataIndices = mapToArray(map[i], true);\n                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\n                    }\n                }\n            }\n            return result;\n        }\n    };\n\n    /**\n     * @param {module:echarts/data/List} data\n     * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n     *                         each of which can be Array or primary type.\n     * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n     */\n    modelUtil.queryDataIndex = function (data, payload) {\n        if (payload.dataIndexInside != null) {\n            return payload.dataIndexInside;\n        }\n        else if (payload.dataIndex != null) {\n            return zrUtil.isArray(payload.dataIndex)\n                ? zrUtil.map(payload.dataIndex, function (value) {\n                    return data.indexOfRawIndex(value);\n                })\n                : data.indexOfRawIndex(payload.dataIndex);\n        }\n        else if (payload.name != null) {\n            return zrUtil.isArray(payload.name)\n                ? zrUtil.map(payload.name, function (value) {\n                    return data.indexOfName(value);\n                })\n                : data.indexOfName(payload.name);\n        }\n    };\n\n    /**\n     * Enable property storage to any host object.\n     * Notice: Serialization is not supported.\n     *\n     * For example:\n     * var get = modelUitl.makeGetter();\n     *\n     * function some(hostObj) {\n     *      get(hostObj)._someProperty = 1212;\n     *      ...\n     * }\n     *\n     * @return {Function}\n     */\n    modelUtil.makeGetter = (function () {\n        var index = 0;\n        return function () {\n            var key = '\\0__ec_prop_getter_' + index++;\n            return function (hostObj) {\n                return hostObj[key] || (hostObj[key] = {});\n            };\n        };\n    })();\n\n    /**\n     * @param {module:echarts/model/Global} ecModel\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex, seriesId, seriesName,\n     *            geoIndex, geoId, geoName,\n     *            bmapIndex, bmapId, bmapName,\n     *            xAxisIndex, xAxisId, xAxisName,\n     *            yAxisIndex, yAxisId, yAxisName,\n     *            gridIndex, gridId, gridName,\n     *            ... (can be extended)\n     *        }\n     *        Each properties can be number|string|Array.<number>|Array.<string>\n     *        For example, a finder could be\n     *        {\n     *            seriesIndex: 3,\n     *            geoId: ['aa', 'cc'],\n     *            gridName: ['xx', 'rr']\n     *        }\n     *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n     *        If nothing or null/undefined specified, return nothing.\n     * @param {Object} [opt]\n     * @param {string} [opt.defaultMainType]\n     * @param {Array.<string>} [opt.includeMainTypes]\n     * @return {Object} result like:\n     *        {\n     *            seriesModels: [seriesModel1, seriesModel2],\n     *            seriesModel: seriesModel1, // The first model\n     *            geoModels: [geoModel1, geoModel2],\n     *            geoModel: geoModel1, // The first model\n     *            ...\n     *        }\n     */\n    modelUtil.parseFinder = function (ecModel, finder, opt) {\n        if (zrUtil.isString(finder)) {\n            var obj = {};\n            obj[finder + 'Index'] = 0;\n            finder = obj;\n        }\n\n        var defaultMainType = opt && opt.defaultMainType;\n        if (defaultMainType\n            && !has(finder, defaultMainType + 'Index')\n            && !has(finder, defaultMainType + 'Id')\n            && !has(finder, defaultMainType + 'Name')\n        ) {\n            finder[defaultMainType + 'Index'] = 0;\n        }\n\n        var result = {};\n\n        each(finder, function (value, key) {\n            var value = finder[key];\n\n            // Exclude 'dataIndex' and other illgal keys.\n            if (key === 'dataIndex' || key === 'dataIndexInside') {\n                result[key] = value;\n                return;\n            }\n\n            var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n            var mainType = parsedKey[1];\n            var queryType = (parsedKey[2] || '').toLowerCase();\n\n            if (!mainType\n                || !queryType\n                || value == null\n                || (queryType === 'index' && value === 'none')\n                || (opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0)\n            ) {\n                return;\n            }\n\n            var queryParam = {mainType: mainType};\n            if (queryType !== 'index' || value !== 'all') {\n                queryParam[queryType] = value;\n            }\n\n            var models = ecModel.queryComponents(queryParam);\n            result[mainType + 'Models'] = models;\n            result[mainType + 'Model'] = models[0];\n        });\n\n        return result;\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string|number} dataDim\n     * @return {string}\n     */\n    modelUtil.dataDimToCoordDim = function (data, dataDim) {\n        var dimensions = data.dimensions;\n        dataDim = data.getDimension(dataDim);\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimItem = data.getDimensionInfo(dimensions[i]);\n            if (dimItem.name === dataDim) {\n                return dimItem.coordDim;\n            }\n        }\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string} coordDim\n     * @return {Array.<string>} data dimensions on the coordDim.\n     */\n    modelUtil.coordDimToDataDim = function (data, coordDim) {\n        var dataDim = [];\n        each(data.dimensions, function (dimName) {\n            var dimItem = data.getDimensionInfo(dimName);\n            if (dimItem.coordDim === coordDim) {\n                dataDim[dimItem.coordDimIndex] = dimItem.name;\n            }\n        });\n        return dataDim;\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string} otherDim Can be `otherDims`\n     *                        like 'label' or 'tooltip'.\n     * @return {Array.<string>} data dimensions on the otherDim.\n     */\n    modelUtil.otherDimToDataDim = function (data, otherDim) {\n        var dataDim = [];\n        each(data.dimensions, function (dimName) {\n            var dimItem = data.getDimensionInfo(dimName);\n            var otherDims = dimItem.otherDims;\n            var dimIndex = otherDims[otherDim];\n            if (dimIndex != null && dimIndex !== false) {\n                dataDim[dimIndex] = dimItem.name;\n            }\n        });\n        return dataDim;\n    };\n\n    function has(obj, prop) {\n        return obj && obj.hasOwnProperty(prop);\n    }\n\n    module.exports = modelUtil;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/model.js\n// module id = 609\n// module chunks = 0 1 2","/**\n * 数值处理模块\n * @module echarts/util/number\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var number = {};\n\n    var RADIAN_EPSILON = 1e-4;\n\n    function _trim(str) {\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n\n    /**\n     * Linear mapping a value from domain to range\n     * @memberOf module:echarts/util/number\n     * @param  {(number|Array.<number>)} val\n     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n     * @param  {boolean} clamp\n     * @return {(number|Array.<number>}\n     */\n    number.linearMap = function (val, domain, range, clamp) {\n        var subDomain = domain[1] - domain[0];\n        var subRange = range[1] - range[0];\n\n        if (subDomain === 0) {\n            return subRange === 0\n                ? range[0]\n                : (range[0] + range[1]) / 2;\n        }\n\n        // Avoid accuracy problem in edge, such as\n        // 146.39 - 62.83 === 83.55999999999999.\n        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n        // It is a little verbose for efficiency considering this method\n        // is a hotspot.\n        if (clamp) {\n            if (subDomain > 0) {\n                if (val <= domain[0]) {\n                    return range[0];\n                }\n                else if (val >= domain[1]) {\n                    return range[1];\n                }\n            }\n            else {\n                if (val >= domain[0]) {\n                    return range[0];\n                }\n                else if (val <= domain[1]) {\n                    return range[1];\n                }\n            }\n        }\n        else {\n            if (val === domain[0]) {\n                return range[0];\n            }\n            if (val === domain[1]) {\n                return range[1];\n            }\n        }\n\n        return (val - domain[0]) / subDomain * subRange + range[0];\n    };\n\n    /**\n     * Convert a percent string to absolute number.\n     * Returns NaN if percent is not a valid string or number\n     * @memberOf module:echarts/util/number\n     * @param {string|number} percent\n     * @param {number} all\n     * @return {number}\n     */\n    number.parsePercent = function(percent, all) {\n        switch (percent) {\n            case 'center':\n            case 'middle':\n                percent = '50%';\n                break;\n            case 'left':\n            case 'top':\n                percent = '0%';\n                break;\n            case 'right':\n            case 'bottom':\n                percent = '100%';\n                break;\n        }\n        if (typeof percent === 'string') {\n            if (_trim(percent).match(/%$/)) {\n                return parseFloat(percent) / 100 * all;\n            }\n\n            return parseFloat(percent);\n        }\n\n        return percent == null ? NaN : +percent;\n    };\n\n    /**\n     * (1) Fix rounding error of float numbers.\n     * (2) Support return string to avoid scientific notation like '3.5e-7'.\n     *\n     * @param {number} x\n     * @param {number} [precision]\n     * @param {boolean} [returnStr]\n     * @return {number|string}\n     */\n    number.round = function (x, precision, returnStr) {\n        if (precision == null) {\n            precision = 10;\n        }\n        // Avoid range error\n        precision = Math.min(Math.max(0, precision), 20);\n        x = (+x).toFixed(precision);\n        return returnStr ? x : +x;\n    };\n\n    number.asc = function (arr) {\n        arr.sort(function (a, b) {\n            return a - b;\n        });\n        return arr;\n    };\n\n    /**\n     * Get precision\n     * @param {number} val\n     */\n    number.getPrecision = function (val) {\n        val = +val;\n        if (isNaN(val)) {\n            return 0;\n        }\n        // It is much faster than methods converting number to string as follows\n        //      var tmp = val.toString();\n        //      return tmp.length - 1 - tmp.indexOf('.');\n        // especially when precision is low\n        var e = 1;\n        var count = 0;\n        while (Math.round(val * e) / e !== val) {\n            e *= 10;\n            count++;\n        }\n        return count;\n    };\n\n    /**\n     * @param {string|number} val\n     * @return {number}\n     */\n    number.getPrecisionSafe = function (val) {\n        var str = val.toString();\n\n        // Consider scientific notation: '3.4e-12' '3.4e+12'\n        var eIndex = str.indexOf('e');\n        if (eIndex > 0) {\n            var precision = +str.slice(eIndex + 1);\n            return precision < 0 ? -precision : 0;\n        }\n        else {\n            var dotIndex = str.indexOf('.');\n            return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n        }\n    };\n\n    /**\n     * Minimal dicernible data precisioin according to a single pixel.\n     *\n     * @param {Array.<number>} dataExtent\n     * @param {Array.<number>} pixelExtent\n     * @return {number} precision\n     */\n    number.getPixelPrecision = function (dataExtent, pixelExtent) {\n        var log = Math.log;\n        var LN10 = Math.LN10;\n        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n        // toFixed() digits argument must be between 0 and 20.\n        var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n        return !isFinite(precision) ? 20 : precision;\n    };\n\n    /**\n     * Get a data of given precision, assuring the sum of percentages\n     * in valueList is 1.\n     * The largest remainer method is used.\n     * https://en.wikipedia.org/wiki/Largest_remainder_method\n     *\n     * @param {Array.<number>} valueList a list of all data\n     * @param {number} idx index of the data to be processed in valueList\n     * @param {number} precision integer number showing digits of precision\n     * @return {number} percent ranging from 0 to 100\n     */\n    number.getPercentWithPrecision = function (valueList, idx, precision) {\n        if (!valueList[idx]) {\n            return 0;\n        }\n\n        var sum = zrUtil.reduce(valueList, function (acc, val) {\n            return acc + (isNaN(val) ? 0 : val);\n        }, 0);\n        if (sum === 0) {\n            return 0;\n        }\n\n        var digits = Math.pow(10, precision);\n        var votesPerQuota = zrUtil.map(valueList, function (val) {\n            return (isNaN(val) ? 0 : val) / sum * digits * 100;\n        });\n        var targetSeats = digits * 100;\n\n        var seats = zrUtil.map(votesPerQuota, function (votes) {\n            // Assign automatic seats.\n            return Math.floor(votes);\n        });\n        var currentSum = zrUtil.reduce(seats, function (acc, val) {\n            return acc + val;\n        }, 0);\n\n        var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n            return votes - seats[idx];\n        });\n\n        // Has remainding votes.\n        while (currentSum < targetSeats) {\n            // Find next largest remainder.\n            var max = Number.NEGATIVE_INFINITY;\n            var maxId = null;\n            for (var i = 0, len = remainder.length; i < len; ++i) {\n                if (remainder[i] > max) {\n                    max = remainder[i];\n                    maxId = i;\n                }\n            }\n\n            // Add a vote to max remainder.\n            ++seats[maxId];\n            remainder[maxId] = 0;\n            ++currentSum;\n        }\n\n        return seats[idx] / digits;\n    };\n\n    // Number.MAX_SAFE_INTEGER, ie do not support.\n    number.MAX_SAFE_INTEGER = 9007199254740991;\n\n    /**\n     * To 0 - 2 * PI, considering negative radian.\n     * @param {number} radian\n     * @return {number}\n     */\n    number.remRadian = function (radian) {\n        var pi2 = Math.PI * 2;\n        return (radian % pi2 + pi2) % pi2;\n    };\n\n    /**\n     * @param {type} radian\n     * @return {boolean}\n     */\n    number.isRadianAroundZero = function (val) {\n        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n    };\n\n    var TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n    /**\n     * @return {number} in minutes\n     */\n    number.getTimezoneOffset = function () {\n        return (new Date()).getTimezoneOffset();\n    };\n\n    /**\n     * @param {string|Date|number} value These values can be accepted:\n     *   + An instance of Date, represent a time in its own time zone.\n     *   + Or string in a subset of ISO 8601, only including:\n     *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n     *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n     *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n     *     all of which will be treated as local time if time zone is not specified\n     *     (see <https://momentjs.com/>).\n     *   + Or other string format, including (all of which will be treated as loacal time):\n     *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n     *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n     *   + a timestamp, which represent a time in UTC.\n     * @return {Date} date\n     */\n    number.parseDate = function (value) {\n        if (value instanceof Date) {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            // Different browsers parse date in different way, so we parse it manually.\n            // Some other issues:\n            // new Date('1970-01-01') is UTC,\n            // new Date('1970/01/01') and new Date('1970-1-01') is local.\n            // See issue #3623\n            var match = TIME_REG.exec(value);\n\n            if (!match) {\n                // return Invalid Date.\n                return new Date(NaN);\n            }\n\n            var timezoneOffset = number.getTimezoneOffset();\n            var timeOffset = !match[8]\n                ? 0\n                : match[8].toUpperCase() === 'Z'\n                ? timezoneOffset\n                : +match[8].slice(0, 3) * 60 + timezoneOffset;\n\n            // match[n] can only be string or undefined.\n            // But take care of '12' + 1 => '121'.\n            return new Date(\n                +match[1],\n                +(match[2] || 1) - 1,\n                +match[3] || 1,\n                +match[4] || 0,\n                +(match[5] || 0) - timeOffset,\n                +match[6] || 0,\n                +match[7] || 0\n            );\n        }\n        else if (value == null) {\n            return new Date(NaN);\n        }\n\n        return new Date(Math.round(value));\n    };\n\n    /**\n     * Quantity of a number. e.g. 0.1, 1, 10, 100\n     *\n     * @param  {number} val\n     * @return {number}\n     */\n    number.quantity = function (val) {\n        return Math.pow(10, quantityExponent(val));\n    };\n\n    function quantityExponent(val) {\n        return Math.floor(Math.log(val) / Math.LN10);\n    }\n\n    /**\n     * find a “nice” number approximately equal to x. Round the number if round = true,\n     * take ceiling if round = false. The primary observation is that the “nicest”\n     * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n     *\n     * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n     *\n     * @param  {number} val Non-negative value.\n     * @param  {boolean} round\n     * @return {number}\n     */\n    number.nice = function (val, round) {\n        var exponent = quantityExponent(val);\n        var exp10 = Math.pow(10, exponent);\n        var f = val / exp10; // 1 <= f < 10\n        var nf;\n        if (round) {\n            if (f < 1.5) { nf = 1; }\n            else if (f < 2.5) { nf = 2; }\n            else if (f < 4) { nf = 3; }\n            else if (f < 7) { nf = 5; }\n            else { nf = 10; }\n        }\n        else {\n            if (f < 1) { nf = 1; }\n            else if (f < 2) { nf = 2; }\n            else if (f < 3) { nf = 3; }\n            else if (f < 5) { nf = 5; }\n            else { nf = 10; }\n        }\n        val = nf * exp10;\n\n        // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n        // 20 is the uppper bound of toFixed.\n        return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n    };\n\n    /**\n     * Order intervals asc, and split them when overlap.\n     * expect(numberUtil.reformIntervals([\n     *     {interval: [18, 62], close: [1, 1]},\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [1, 1]},\n     *     {interval: [62, 150], close: [1, 1]},\n     *     {interval: [106, 150], close: [1, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ])).toEqual([\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [0, 1]},\n     *     {interval: [18, 62], close: [0, 1]},\n     *     {interval: [62, 150], close: [0, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ]);\n     * @param {Array.<Object>} list, where `close` mean open or close\n     *        of the interval, and Infinity can be used.\n     * @return {Array.<Object>} The origin list, which has been reformed.\n     */\n    number.reformIntervals = function (list) {\n        list.sort(function (a, b) {\n            return littleThan(a, b, 0) ? -1 : 1;\n        });\n\n        var curr = -Infinity;\n        var currClose = 1;\n        for (var i = 0; i < list.length;) {\n            var interval = list[i].interval;\n            var close = list[i].close;\n\n            for (var lg = 0; lg < 2; lg++) {\n                if (interval[lg] <= curr) {\n                    interval[lg] = curr;\n                    close[lg] = !lg ? 1 - currClose : 1;\n                }\n                curr = interval[lg];\n                currClose = close[lg];\n            }\n\n            if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n                list.splice(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n\n        return list;\n\n        function littleThan(a, b, lg) {\n            return a.interval[lg] < b.interval[lg]\n                || (\n                    a.interval[lg] === b.interval[lg]\n                    && (\n                        (a.close[lg] - b.close[lg] === (!lg ? 1 : -1))\n                        || (!lg && littleThan(a, b, 1))\n                    )\n                );\n        }\n    };\n\n    /**\n     * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n     * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n     * subtraction forces infinities to NaN\n     *\n     * @param {*} v\n     * @return {boolean}\n     */\n    number.isNumeric = function (v) {\n        return v - parseFloat(v) >= 0;\n    };\n\n    module.exports = number;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/number.js\n// module id = 610\n// module chunks = 0 1 2","\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n\n    /**\n     * @typedef {Float32Array|Array.<number>} Vector2\n     */\n    /**\n     * 二维向量类\n     * @exports zrender/tool/vector\n     */\n    var vector = {\n        /**\n         * 创建一个向量\n         * @param {number} [x=0]\n         * @param {number} [y=0]\n         * @return {Vector2}\n         */\n        create: function (x, y) {\n            var out = new ArrayCtor(2);\n            if (x == null) {\n                x = 0;\n            }\n            if (y == null) {\n                y = 0;\n            }\n            out[0] = x;\n            out[1] = y;\n            return out;\n        },\n\n        /**\n         * 复制向量数据\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        copy: function (out, v) {\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 克隆一个向量\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        clone: function (v) {\n            var out = new ArrayCtor(2);\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 设置向量的两个项\n         * @param {Vector2} out\n         * @param {number} a\n         * @param {number} b\n         * @return {Vector2} 结果\n         */\n        set: function (out, a, b) {\n            out[0] = a;\n            out[1] = b;\n            return out;\n        },\n\n        /**\n         * 向量相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        add: function (out, v1, v2) {\n            out[0] = v1[0] + v2[0];\n            out[1] = v1[1] + v2[1];\n            return out;\n        },\n\n        /**\n         * 向量缩放后相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} a\n         */\n        scaleAndAdd: function (out, v1, v2, a) {\n            out[0] = v1[0] + v2[0] * a;\n            out[1] = v1[1] + v2[1] * a;\n            return out;\n        },\n\n        /**\n         * 向量相减\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        sub: function (out, v1, v2) {\n            out[0] = v1[0] - v2[0];\n            out[1] = v1[1] - v2[1];\n            return out;\n        },\n\n        /**\n         * 向量长度\n         * @param {Vector2} v\n         * @return {number}\n         */\n        len: function (v) {\n            return Math.sqrt(this.lenSquare(v));\n        },\n\n        /**\n         * 向量长度平方\n         * @param {Vector2} v\n         * @return {number}\n         */\n        lenSquare: function (v) {\n            return v[0] * v[0] + v[1] * v[1];\n        },\n\n        /**\n         * 向量乘法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        mul: function (out, v1, v2) {\n            out[0] = v1[0] * v2[0];\n            out[1] = v1[1] * v2[1];\n            return out;\n        },\n\n        /**\n         * 向量除法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        div: function (out, v1, v2) {\n            out[0] = v1[0] / v2[0];\n            out[1] = v1[1] / v2[1];\n            return out;\n        },\n\n        /**\n         * 向量点乘\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        dot: function (v1, v2) {\n            return v1[0] * v2[0] + v1[1] * v2[1];\n        },\n\n        /**\n         * 向量缩放\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {number} s\n         */\n        scale: function (out, v, s) {\n            out[0] = v[0] * s;\n            out[1] = v[1] * s;\n            return out;\n        },\n\n        /**\n         * 向量归一化\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        normalize: function (out, v) {\n            var d = vector.len(v);\n            if (d === 0) {\n                out[0] = 0;\n                out[1] = 0;\n            }\n            else {\n                out[0] = v[0] / d;\n                out[1] = v[1] / d;\n            }\n            return out;\n        },\n\n        /**\n         * 计算向量间距离\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distance: function (v1, v2) {\n            return Math.sqrt(\n                (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1])\n            );\n        },\n\n        /**\n         * 向量距离平方\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distanceSquare: function (v1, v2) {\n            return (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n        },\n\n        /**\n         * 求负向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        negate: function (out, v) {\n            out[0] = -v[0];\n            out[1] = -v[1];\n            return out;\n        },\n\n        /**\n         * 插值两个点\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} t\n         */\n        lerp: function (out, v1, v2, t) {\n            out[0] = v1[0] + t * (v2[0] - v1[0]);\n            out[1] = v1[1] + t * (v2[1] - v1[1]);\n            return out;\n        },\n\n        /**\n         * 矩阵左乘向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {Vector2} m\n         */\n        applyTransform: function (out, v, m) {\n            var x = v[0];\n            var y = v[1];\n            out[0] = m[0] * x + m[2] * y + m[4];\n            out[1] = m[1] * x + m[3] * y + m[5];\n            return out;\n        },\n        /**\n         * 求两个向量最小值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        min: function (out, v1, v2) {\n            out[0] = Math.min(v1[0], v2[0]);\n            out[1] = Math.min(v1[1], v2[1]);\n            return out;\n        },\n        /**\n         * 求两个向量最大值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        max: function (out, v1, v2) {\n            out[0] = Math.max(v1[0], v2[0]);\n            out[1] = Math.max(v1[1], v2[1]);\n            return out;\n        }\n    };\n\n    vector.length = vector.len;\n    vector.lengthSquare = vector.lenSquare;\n    vector.dist = vector.distance;\n    vector.distSquare = vector.distanceSquare;\n\n    module.exports = vector;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/vector.js\n// module id = 611\n// module chunks = 0 1 2","/**\n * Path element\n * @module zrender/graphic/Path\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var zrUtil = require('../core/util');\n    var PathProxy = require('../core/PathProxy');\n    var pathContain = require('../contain/path');\n\n    var Pattern = require('./Pattern');\n    var getCanvasPattern = Pattern.prototype.getCanvasPattern;\n\n    var abs = Math.abs;\n\n    var pathProxyForDraw = new PathProxy(true);\n    /**\n     * @alias module:zrender/graphic/Path\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function Path(opts) {\n        Displayable.call(this, opts);\n\n        /**\n         * @type {module:zrender/core/PathProxy}\n         * @readOnly\n         */\n        this.path = null;\n    }\n\n    Path.prototype = {\n\n        constructor: Path,\n\n        type: 'path',\n\n        __dirtyPath: true,\n\n        strokeContainThreshold: 5,\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var path = this.path || pathProxyForDraw;\n            var hasStroke = style.hasStroke();\n            var hasFill = style.hasFill();\n            var fill = style.fill;\n            var stroke = style.stroke;\n            var hasFillGradient = hasFill && !!(fill.colorStops);\n            var hasStrokeGradient = hasStroke && !!(stroke.colorStops);\n            var hasFillPattern = hasFill && !!(fill.image);\n            var hasStrokePattern = hasStroke && !!(stroke.image);\n\n            style.bind(ctx, this, prevEl);\n            this.setTransform(ctx);\n\n            if (this.__dirty) {\n                var rect;\n                // Update gradient because bounding rect may changed\n                if (hasFillGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._fillGradient = style.getGradient(ctx, fill, rect);\n                }\n                if (hasStrokeGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._strokeGradient = style.getGradient(ctx, stroke, rect);\n                }\n            }\n            // Use the gradient or pattern\n            if (hasFillGradient) {\n                // PENDING If may have affect the state\n                ctx.fillStyle = this._fillGradient;\n            }\n            else if (hasFillPattern) {\n                ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n            }\n            if (hasStrokeGradient) {\n                ctx.strokeStyle = this._strokeGradient;\n            }\n            else if (hasStrokePattern) {\n                ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n            }\n\n            var lineDash = style.lineDash;\n            var lineDashOffset = style.lineDashOffset;\n\n            var ctxLineDash = !!ctx.setLineDash;\n\n            // Update path sx, sy\n            var scale = this.getGlobalScale();\n            path.setScale(scale[0], scale[1]);\n\n            // Proxy context\n            // Rebuild path in following 2 cases\n            // 1. Path is dirty\n            // 2. Path needs javascript implemented lineDash stroking.\n            //    In this case, lineDash information will not be saved in PathProxy\n            if (this.__dirtyPath\n                || (lineDash && !ctxLineDash && hasStroke)\n            ) {\n                path.beginPath(ctx);\n\n                // Setting line dash before build path\n                if (lineDash && !ctxLineDash) {\n                    path.setLineDash(lineDash);\n                    path.setLineDashOffset(lineDashOffset);\n                }\n\n                this.buildPath(path, this.shape, false);\n\n                // Clear path dirty flag\n                if (this.path) {\n                    this.__dirtyPath = false;\n                }\n            }\n            else {\n                // Replay path building\n                ctx.beginPath();\n                this.path.rebuildPath(ctx);\n            }\n\n            hasFill && path.fill(ctx);\n\n            if (lineDash && ctxLineDash) {\n                ctx.setLineDash(lineDash);\n                ctx.lineDashOffset = lineDashOffset;\n            }\n\n            hasStroke && path.stroke(ctx);\n\n            if (lineDash && ctxLineDash) {\n                // PENDING\n                // Remove lineDash\n                ctx.setLineDash([]);\n            }\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n        // Like in circle\n        buildPath: function (ctx, shapeCfg, inBundle) {},\n\n        createPathProxy: function () {\n            this.path = new PathProxy();\n        },\n\n        getBoundingRect: function () {\n            var rect = this._rect;\n            var style = this.style;\n            var needsUpdateRect = !rect;\n            if (needsUpdateRect) {\n                var path = this.path;\n                if (!path) {\n                    // Create path on demand.\n                    path = this.path = new PathProxy();\n                }\n                if (this.__dirtyPath) {\n                    path.beginPath();\n                    this.buildPath(path, this.shape, false);\n                }\n                rect = path.getBoundingRect();\n            }\n            this._rect = rect;\n\n            if (style.hasStroke()) {\n                // Needs update rect with stroke lineWidth when\n                // 1. Element changes scale or lineWidth\n                // 2. Shape is changed\n                var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n                if (this.__dirty || needsUpdateRect) {\n                    rectWithStroke.copy(rect);\n                    // FIXME Must after updateTransform\n                    var w = style.lineWidth;\n                    // PENDING, Min line width is needed when line is horizontal or vertical\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n\n                    // Only add extra hover lineWidth when there are no fill\n                    if (!style.hasFill()) {\n                        w = Math.max(w, this.strokeContainThreshold || 4);\n                    }\n                    // Consider line width\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        rectWithStroke.width += w / lineScale;\n                        rectWithStroke.height += w / lineScale;\n                        rectWithStroke.x -= w / lineScale / 2;\n                        rectWithStroke.y -= w / lineScale / 2;\n                    }\n                }\n\n                // Return rect with stroke\n                return rectWithStroke;\n            }\n\n            return rect;\n        },\n\n        contain: function (x, y) {\n            var localPos = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            var style = this.style;\n            x = localPos[0];\n            y = localPos[1];\n\n            if (rect.contain(x, y)) {\n                var pathData = this.path.data;\n                if (style.hasStroke()) {\n                    var lineWidth = style.lineWidth;\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        // Only add extra hover lineWidth when there are no fill\n                        if (!style.hasFill()) {\n                            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n                        }\n                        if (pathContain.containStroke(\n                            pathData, lineWidth / lineScale, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                }\n                if (style.hasFill()) {\n                    return pathContain.contain(pathData, x, y);\n                }\n            }\n            return false;\n        },\n\n        /**\n         * @param  {boolean} dirtyPath\n         */\n        dirty: function (dirtyPath) {\n            if (dirtyPath == null) {\n                dirtyPath = true;\n            }\n            // Only mark dirty, not mark clean\n            if (dirtyPath) {\n                this.__dirtyPath = dirtyPath;\n                this._rect = null;\n            }\n\n            this.__dirty = true;\n\n            this.__zr && this.__zr.refresh();\n\n            // Used as a clipping path\n            if (this.__clipTarget) {\n                this.__clipTarget.dirty();\n            }\n        },\n\n        /**\n         * Alias for animate('shape')\n         * @param {boolean} loop\n         */\n        animateShape: function (loop) {\n            return this.animate('shape', loop);\n        },\n\n        // Overwrite attrKV\n        attrKV: function (key, value) {\n            // FIXME\n            if (key === 'shape') {\n                this.setShape(value);\n                this.__dirtyPath = true;\n                this._rect = null;\n            }\n            else {\n                Displayable.prototype.attrKV.call(this, key, value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setShape: function (key, value) {\n            var shape = this.shape;\n            // Path from string may not have shape\n            if (shape) {\n                if (zrUtil.isObject(key)) {\n                    for (var name in key) {\n                        if (key.hasOwnProperty(name)) {\n                            shape[name] = key[name];\n                        }\n                    }\n                }\n                else {\n                    shape[key] = value;\n                }\n                this.dirty(true);\n            }\n            return this;\n        },\n\n        getLineScale: function () {\n            var m = this.transform;\n            // Get the line scale.\n            // Determinant of `m` means how much the area is enlarged by the\n            // transformation. So its square root can be used as a scale factor\n            // for width.\n            return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\n                ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\n                : 1;\n        }\n    };\n\n    /**\n     * 扩展一个 Path element, 比如星形，圆等。\n     * Extend a path element\n     * @param {Object} props\n     * @param {string} props.type Path type\n     * @param {Function} props.init Initialize\n     * @param {Function} props.buildPath Overwrite buildPath method\n     * @param {Object} [props.style] Extended default style config\n     * @param {Object} [props.shape] Extended default shape config\n     */\n    Path.extend = function (defaults) {\n        var Sub = function (opts) {\n            Path.call(this, opts);\n\n            if (defaults.style) {\n                // Extend default style\n                this.style.extendFrom(defaults.style, false);\n            }\n\n            // Extend default shape\n            var defaultShape = defaults.shape;\n            if (defaultShape) {\n                this.shape = this.shape || {};\n                var thisShape = this.shape;\n                for (var name in defaultShape) {\n                    if (\n                        ! thisShape.hasOwnProperty(name)\n                        && defaultShape.hasOwnProperty(name)\n                    ) {\n                        thisShape[name] = defaultShape[name];\n                    }\n                }\n            }\n\n            defaults.init && defaults.init.call(this, opts);\n        };\n\n        zrUtil.inherits(Sub, Path);\n\n        // FIXME 不能 extend position, rotation 等引用对象\n        for (var name in defaults) {\n            // Extending prototype values and methods\n            if (name !== 'style' && name !== 'shape') {\n                Sub.prototype[name] = defaults[name];\n            }\n        }\n\n        return Sub;\n    };\n\n    zrUtil.inherits(Path, Displayable);\n\n    module.exports = Path;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Path.js\n// module id = 612\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('./number');\n    var textContain = require('zrender/lib/contain/text');\n\n    var formatUtil = {};\n\n    /**\n     * 每三位默认加,格式化\n     * @param {string|number} x\n     * @return {string}\n     */\n    formatUtil.addCommas = function (x) {\n        if (isNaN(x)) {\n            return '-';\n        }\n        x = (x + '').split('.');\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\n               + (x.length > 1 ? ('.' + x[1]) : '');\n    };\n\n    /**\n     * @param {string} str\n     * @param {boolean} [upperCaseFirst=false]\n     * @return {string} str\n     */\n    formatUtil.toCamelCase = function (str, upperCaseFirst) {\n        str = (str || '').toLowerCase().replace(/-(.)/g, function(match, group1) {\n            return group1.toUpperCase();\n        });\n\n        if (upperCaseFirst && str) {\n            str = str.charAt(0).toUpperCase() + str.slice(1);\n        }\n\n        return str;\n    };\n\n    formatUtil.normalizeCssArray = zrUtil.normalizeCssArray;\n\n    var encodeHTML = formatUtil.encodeHTML = function (source) {\n        return String(source)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    };\n\n    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\n    var wrapVar = function (varName, seriesIdx) {\n        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n    };\n\n    /**\n     * Template formatter\n     * @param {string} tpl\n     * @param {Array.<Object>|Object} paramsList\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTpl = function (tpl, paramsList, encode) {\n        if (!zrUtil.isArray(paramsList)) {\n            paramsList = [paramsList];\n        }\n        var seriesLen = paramsList.length;\n        if (!seriesLen) {\n            return '';\n        }\n\n        var $vars = paramsList[0].$vars || [];\n        for (var i = 0; i < $vars.length; i++) {\n            var alias = TPL_VAR_ALIAS[i];\n            var val = wrapVar(alias, 0);\n            tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n        }\n        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n            for (var k = 0; k < $vars.length; k++) {\n                var val = paramsList[seriesIdx][$vars[k]];\n                tpl = tpl.replace(\n                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\n                    encode ? encodeHTML(val) : val\n                );\n            }\n        }\n\n        return tpl;\n    };\n\n    /**\n     * simple Template formatter\n     *\n     * @param {string} tpl\n     * @param {Object} param\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTplSimple = function (tpl, param, encode) {\n        zrUtil.each(param, function (value, key) {\n            tpl = tpl.replace(\n                '{' + key + '}',\n                encode ? encodeHTML(value) : value\n            );\n        });\n        return tpl;\n    };\n\n    /**\n     * @param {string} color\n     * @param {string} [extraCssText]\n     * @return {string}\n     */\n    formatUtil.getTooltipMarker = function (color, extraCssText) {\n        return color\n            ? '<span style=\"display:inline-block;margin-right:5px;'\n                + 'border-radius:10px;width:9px;height:9px;background-color:'\n                + formatUtil.encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>'\n            : '';\n    };\n\n    /**\n     * @param {string} str\n     * @return {string}\n     * @inner\n     */\n    var s2d = function (str) {\n        return str < 10 ? ('0' + str) : str;\n    };\n\n    /**\n     * ISO Date format\n     * @param {string} tpl\n     * @param {number} value\n     * @param {boolean} [isUTC=false] Default in local time.\n     *           see `module:echarts/scale/Time`\n     *           and `module:echarts/util/number#parseDate`.\n     * @inner\n     */\n    formatUtil.formatTime = function (tpl, value, isUTC) {\n        if (tpl === 'week'\n            || tpl === 'month'\n            || tpl === 'quarter'\n            || tpl === 'half-year'\n            || tpl === 'year'\n        ) {\n            tpl = 'MM-dd\\nyyyy';\n        }\n\n        var date = numberUtil.parseDate(value);\n        var utc = isUTC ? 'UTC' : '';\n        var y = date['get' + utc + 'FullYear']();\n        var M = date['get' + utc + 'Month']() + 1;\n        var d = date['get' + utc + 'Date']();\n        var h = date['get' + utc + 'Hours']();\n        var m = date['get' + utc + 'Minutes']();\n        var s = date['get' + utc + 'Seconds']();\n\n        tpl = tpl.replace('MM', s2d(M))\n            .replace('M', M)\n            .replace('yyyy', y)\n            .replace('yy', y % 100)\n            .replace('dd', s2d(d))\n            .replace('d', d)\n            .replace('hh', s2d(h))\n            .replace('h', h)\n            .replace('mm', s2d(m))\n            .replace('m', m)\n            .replace('ss', s2d(s))\n            .replace('s', s);\n\n        return tpl;\n    };\n\n    /**\n     * Capital first\n     * @param {string} str\n     * @return {string}\n     */\n    formatUtil.capitalFirst = function (str) {\n        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n    };\n\n    formatUtil.truncateText = textContain.truncateText;\n\n    formatUtil.getTextRect = textContain.getBoundingRect;\n\n    module.exports = formatUtil;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/format.js\n// module id = 613\n// module chunks = 0 1 2","/**\n * @module echarts/model/Model\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazzUtil = require('../util/clazz');\n    var env = require('zrender/lib/core/env');\n\n    /**\n     * @alias module:echarts/model/Model\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} [parentModel]\n     * @param {module:echarts/model/Global} [ecModel]\n     */\n    function Model(option, parentModel, ecModel) {\n        /**\n         * @type {module:echarts/model/Model}\n         * @readOnly\n         */\n        this.parentModel = parentModel;\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        this.option = option;\n\n        // Simple optimization\n        // if (this.init) {\n        //     if (arguments.length <= 4) {\n        //         this.init(option, parentModel, ecModel, extraOpt);\n        //     }\n        //     else {\n        //         this.init.apply(this, arguments);\n        //     }\n        // }\n    }\n\n    Model.prototype = {\n\n        constructor: Model,\n\n        /**\n         * Model 的初始化函数\n         * @param {Object} option\n         */\n        init: null,\n\n        /**\n         * 从新的 Option merge\n         */\n        mergeOption: function (option) {\n            zrUtil.merge(this.option, option, true);\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        get: function (path, ignoreParent) {\n            if (path == null) {\n                return this.option;\n            }\n\n            return doGet(\n                this.option,\n                this.parsePath(path),\n                !ignoreParent && getParent(this, path)\n            );\n        },\n\n        /**\n         * @param {string} key\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        getShallow: function (key, ignoreParent) {\n            var option = this.option;\n\n            var val = option == null ? option : option[key];\n            var parentModel = !ignoreParent && getParent(this, key);\n            if (val == null && parentModel) {\n                val = parentModel.getShallow(key);\n            }\n            return val;\n        },\n\n        /**\n         * @param {string|Array.<string>} [path]\n         * @param {module:echarts/model/Model} [parentModel]\n         * @return {module:echarts/model/Model}\n         */\n        getModel: function (path, parentModel) {\n            var obj = path == null\n                ? this.option\n                : doGet(this.option, path = this.parsePath(path));\n\n            var thisParentModel;\n            parentModel = parentModel || (\n                (thisParentModel = getParent(this, path))\n                    && thisParentModel.getModel(path)\n            );\n\n            return new Model(obj, parentModel, this.ecModel);\n        },\n\n        /**\n         * If model has option\n         */\n        isEmpty: function () {\n            return this.option == null;\n        },\n\n        restoreData: function () {},\n\n        // Pending\n        clone: function () {\n            var Ctor = this.constructor;\n            return new Ctor(zrUtil.clone(this.option));\n        },\n\n        setReadOnly: function (properties) {\n            clazzUtil.setReadOnly(this, properties);\n        },\n\n        // If path is null/undefined, return null/undefined.\n        parsePath: function(path) {\n            if (typeof path === 'string') {\n                path = path.split('.');\n            }\n            return path;\n        },\n\n        /**\n         * @param {Function} getParentMethod\n         *        param {Array.<string>|string} path\n         *        return {module:echarts/model/Model}\n         */\n        customizeGetParent: function (getParentMethod) {\n            clazzUtil.set(this, 'getParent', getParentMethod);\n        },\n\n        isAnimationEnabled: function () {\n            if (!env.node) {\n                if (this.option.animation != null) {\n                    return !!this.option.animation;\n                }\n                else if (this.parentModel) {\n                    return this.parentModel.isAnimationEnabled();\n                }\n            }\n        }\n    };\n\n    function doGet(obj, pathArr, parentModel) {\n        for (var i = 0; i < pathArr.length; i++) {\n            // Ignore empty\n            if (!pathArr[i]) {\n                continue;\n            }\n            // obj could be number/string/... (like 0)\n            obj = (obj && typeof obj === 'object') ? obj[pathArr[i]] : null;\n            if (obj == null) {\n                break;\n            }\n        }\n        if (obj == null && parentModel) {\n            obj = parentModel.get(pathArr);\n        }\n        return obj;\n    }\n\n    // `path` can be null/undefined\n    function getParent(model, path) {\n        var getParentMethod = clazzUtil.get(model, 'getParent');\n        return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n    }\n\n    // Enable Model.extend.\n    clazzUtil.enableClassExtend(Model);\n\n    var mixin = zrUtil.mixin;\n    mixin(Model, require('./mixin/lineStyle'));\n    mixin(Model, require('./mixin/areaStyle'));\n    mixin(Model, require('./mixin/textStyle'));\n    mixin(Model, require('./mixin/itemStyle'));\n\n    module.exports = Model;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Model.js\n// module id = 614\n// module chunks = 0 1 2","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\n\n    var env = {};\n    if (typeof navigator === 'undefined') {\n        // In node\n        env = {\n            browser: {},\n            os: {},\n            node: true,\n            // Assume canvas is supported\n            canvasSupported: true\n        };\n    }\n    else {\n        env = detect(navigator.userAgent);\n    }\n\n    module.exports = env;\n\n    // Zepto.js\n    // (c) 2010-2013 Thomas Fuchs\n    // Zepto.js may be freely distributed under the MIT license.\n\n    function detect(ua) {\n        var os = {};\n        var browser = {};\n        // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n        // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n        // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n        // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n        // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n        // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n        // var touchpad = webos && ua.match(/TouchPad/);\n        // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n        // var silk = ua.match(/Silk\\/([\\d._]+)/);\n        // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n        // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n        // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n        // var playbook = ua.match(/PlayBook/);\n        // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n        var firefox = ua.match(/Firefox\\/([\\d.]+)/);\n        // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n        // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n        var ie = ua.match(/MSIE\\s([\\d.]+)/)\n            // IE 11 Trident/7.0; rv:11.0\n            || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n        var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n        var weChat = (/micromessenger/i).test(ua);\n\n        // Todo: clean this up with a better OS/browser seperation:\n        // - discern (more) between multiple browsers on android\n        // - decide if kindle fire in silk mode is android or not\n        // - Firefox on Android doesn't specify the Android version\n        // - possibly devide in os, device and browser hashes\n\n        // if (browser.webkit = !!webkit) browser.version = webkit[1];\n\n        // if (android) os.android = true, os.version = android[2];\n        // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n        // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n        // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n        // if (webos) os.webos = true, os.version = webos[2];\n        // if (touchpad) os.touchpad = true;\n        // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n        // if (bb10) os.bb10 = true, os.version = bb10[2];\n        // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n        // if (playbook) browser.playbook = true;\n        // if (kindle) os.kindle = true, os.version = kindle[1];\n        // if (silk) browser.silk = true, browser.version = silk[1];\n        // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n        // if (chrome) browser.chrome = true, browser.version = chrome[1];\n        if (firefox) {\n            browser.firefox = true;\n            browser.version = firefox[1];\n        }\n        // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n        // if (webview) browser.webview = true;\n\n        if (ie) {\n            browser.ie = true;\n            browser.version = ie[1];\n        }\n\n        if (edge) {\n            browser.edge = true;\n            browser.version = edge[1];\n        }\n\n        // It is difficult to detect WeChat in Win Phone precisely, because ua can\n        // not be set on win phone. So we do not consider Win Phone.\n        if (weChat) {\n            browser.weChat = true;\n        }\n\n        // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n        //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n        // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n        //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n        //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n        return {\n            browser: browser,\n            os: os,\n            node: false,\n            // 原生canvas支持，改极端点了\n            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n            canvasSupported : document.createElement('canvas').getContext ? true : false,\n            // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n            // works on most browsers\n            // IE10/11 does not support touch event, and MS Edge supports them but not by\n            // default, so we dont check navigator.maxTouchPoints for them here.\n            touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n            // <http://caniuse.com/#search=pointer%20event>.\n            pointerEventsSupported: 'onpointerdown' in window\n                // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n                // events currently. So we dont use that on other browsers unless tested sufficiently.\n                // Although IE 10 supports pointer event, it use old style and is different from the\n                // standard. So we exclude that. (IE 10 is hardly used on touch device)\n                && (browser.edge || (browser.ie && browser.version >= 11))\n        };\n    }\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/env.js\n// module id = 615\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var clazz = {};\n\n    var TYPE_DELIMITER = '.';\n    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n    var MEMBER_PRIFIX = '\\0ec_\\0';\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name] = value;` (can be right-value)\n     * @public\n     */\n    clazz.set = function (host, name, value) {\n        return (host[MEMBER_PRIFIX + name] = value);\n    };\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name];`\n     * @public\n     */\n    clazz.get = function (host, name) {\n        return host[MEMBER_PRIFIX + name];\n    };\n\n    /**\n     * For hidden private class member.\n     * The same behavior as `host.hasOwnProperty(name);`\n     * @public\n     */\n    clazz.hasOwn = function (host, name) {\n        return host.hasOwnProperty(MEMBER_PRIFIX + name);\n    };\n\n    /**\n     * Notice, parseClassType('') should returns {main: '', sub: ''}\n     * @public\n     */\n    var parseClassType = clazz.parseClassType = function (componentType) {\n        var ret = {main: '', sub: ''};\n        if (componentType) {\n            componentType = componentType.split(TYPE_DELIMITER);\n            ret.main = componentType[0] || '';\n            ret.sub = componentType[1] || '';\n        }\n        return ret;\n    };\n\n    /**\n     * @public\n     */\n    function checkClassType(componentType) {\n        zrUtil.assert(\n            /^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType),\n            'componentType \"' + componentType + '\" illegal'\n        );\n    }\n\n    /**\n     * @public\n     */\n    clazz.enableClassExtend = function (RootClass, mandatoryMethods) {\n\n        RootClass.$constructor = RootClass;\n        RootClass.extend = function (proto) {\n\n            if (__DEV__) {\n                zrUtil.each(mandatoryMethods, function (method) {\n                    if (!proto[method]) {\n                        console.warn(\n                            'Method `' + method + '` should be implemented'\n                            + (proto.type ? ' in ' + proto.type : '') + '.'\n                        );\n                    }\n                });\n            }\n\n            var superClass = this;\n            var ExtendedClass = function () {\n                if (!proto.$constructor) {\n                    superClass.apply(this, arguments);\n                }\n                else {\n                    proto.$constructor.apply(this, arguments);\n                }\n            };\n\n            zrUtil.extend(ExtendedClass.prototype, proto);\n\n            ExtendedClass.extend = this.extend;\n            ExtendedClass.superCall = superCall;\n            ExtendedClass.superApply = superApply;\n            zrUtil.inherits(ExtendedClass, this);\n            ExtendedClass.superClass = superClass;\n\n            return ExtendedClass;\n        };\n    };\n\n    // superCall should have class info, which can not be fetch from 'this'.\n    // Consider this case:\n    // class A has method f,\n    // class B inherits class A, overrides method f, f call superApply('f'),\n    // class C inherits class B, do not overrides method f,\n    // then when method of class C is called, dead loop occured.\n    function superCall(context, methodName) {\n        var args = zrUtil.slice(arguments, 2);\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    function superApply(context, methodName, args) {\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    /**\n     * @param {Object} entity\n     * @param {Object} options\n     * @param {boolean} [options.registerWhenExtend]\n     * @public\n     */\n    clazz.enableClassManagement = function (entity, options) {\n        options = options || {};\n\n        /**\n         * Component model classes\n         * key: componentType,\n         * value:\n         *     componentClass, when componentType is 'xxx'\n         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n         * @type {Object}\n         */\n        var storage = {};\n\n        entity.registerClass = function (Clazz, componentType) {\n            if (componentType) {\n                checkClassType(componentType);\n                componentType = parseClassType(componentType);\n\n                if (!componentType.sub) {\n                    if (__DEV__) {\n                        if (storage[componentType.main]) {\n                            console.warn(componentType.main + ' exists.');\n                        }\n                    }\n                    storage[componentType.main] = Clazz;\n                }\n                else if (componentType.sub !== IS_CONTAINER) {\n                    var container = makeContainer(componentType);\n                    container[componentType.sub] = Clazz;\n                }\n            }\n            return Clazz;\n        };\n\n        entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n            var Clazz = storage[componentMainType];\n\n            if (Clazz && Clazz[IS_CONTAINER]) {\n                Clazz = subType ? Clazz[subType] : null;\n            }\n\n            if (throwWhenNotFound && !Clazz) {\n                throw new Error(\n                    !subType\n                        ? componentMainType + '.' + 'type should be specified.'\n                        : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.'\n                );\n            }\n\n            return Clazz;\n        };\n\n        entity.getClassesByMainType = function (componentType) {\n            componentType = parseClassType(componentType);\n\n            var result = [];\n            var obj = storage[componentType.main];\n\n            if (obj && obj[IS_CONTAINER]) {\n                zrUtil.each(obj, function (o, type) {\n                    type !== IS_CONTAINER && result.push(o);\n                });\n            }\n            else {\n                result.push(obj);\n            }\n\n            return result;\n        };\n\n        entity.hasClass = function (componentType) {\n            // Just consider componentType.main.\n            componentType = parseClassType(componentType);\n            return !!storage[componentType.main];\n        };\n\n        /**\n         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n         */\n        entity.getAllClassMainTypes = function () {\n            var types = [];\n            zrUtil.each(storage, function (obj, type) {\n                types.push(type);\n            });\n            return types;\n        };\n\n        /**\n         * If a main type is container and has sub types\n         * @param  {string}  mainType\n         * @return {boolean}\n         */\n        entity.hasSubTypes = function (componentType) {\n            componentType = parseClassType(componentType);\n            var obj = storage[componentType.main];\n            return obj && obj[IS_CONTAINER];\n        };\n\n        entity.parseClassType = parseClassType;\n\n        function makeContainer(componentType) {\n            var container = storage[componentType.main];\n            if (!container || !container[IS_CONTAINER]) {\n                container = storage[componentType.main] = {};\n                container[IS_CONTAINER] = true;\n            }\n            return container;\n        }\n\n        if (options.registerWhenExtend) {\n            var originalExtend = entity.extend;\n            if (originalExtend) {\n                entity.extend = function (proto) {\n                    var ExtendedClass = originalExtend.call(this, proto);\n                    return entity.registerClass(ExtendedClass, proto.type);\n                };\n            }\n        }\n\n        return entity;\n    };\n\n    /**\n     * @param {string|Array.<string>} properties\n     */\n    clazz.setReadOnly = function (obj, properties) {\n        // FIXME It seems broken in IE8 simulation of IE11\n        // if (!zrUtil.isArray(properties)) {\n        //     properties = properties != null ? [properties] : [];\n        // }\n        // zrUtil.each(properties, function (prop) {\n        //     var value = obj[prop];\n\n        //     Object.defineProperty\n        //         && Object.defineProperty(obj, prop, {\n        //             value: value, writable: false\n        //         });\n        //     zrUtil.isArray(obj[prop])\n        //         && Object.freeze\n        //         && Object.freeze(obj[prop]);\n        // });\n    };\n\n    module.exports = clazz;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/clazz.js\n// module id = 616\n// module chunks = 0 1 2","'use strict';\n/**\n * @module echarts/core/BoundingRect\n */\n\n\n    var vec2 = require('./vector');\n    var matrix = require('./matrix');\n\n    var v2ApplyTransform = vec2.applyTransform;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    /**\n     * @alias module:echarts/core/BoundingRect\n     */\n    function BoundingRect(x, y, width, height) {\n\n        if (width < 0) {\n            x = x + width;\n            width = -width;\n        }\n        if (height < 0) {\n            y = y + height;\n            height = -height;\n        }\n\n        /**\n         * @type {number}\n         */\n        this.x = x;\n        /**\n         * @type {number}\n         */\n        this.y = y;\n        /**\n         * @type {number}\n         */\n        this.width = width;\n        /**\n         * @type {number}\n         */\n        this.height = height;\n    }\n\n    BoundingRect.prototype = {\n\n        constructor: BoundingRect,\n\n        /**\n         * @param {module:echarts/core/BoundingRect} other\n         */\n        union: function (other) {\n            var x = mathMin(other.x, this.x);\n            var y = mathMin(other.y, this.y);\n\n            this.width = mathMax(\n                    other.x + other.width,\n                    this.x + this.width\n                ) - x;\n            this.height = mathMax(\n                    other.y + other.height,\n                    this.y + this.height\n                ) - y;\n            this.x = x;\n            this.y = y;\n        },\n\n        /**\n         * @param {Array.<number>} m\n         * @methods\n         */\n        applyTransform: (function () {\n            var lt = [];\n            var rb = [];\n            var lb = [];\n            var rt = [];\n            return function (m) {\n                // In case usage like this\n                // el.getBoundingRect().applyTransform(el.transform)\n                // And element has no transform\n                if (!m) {\n                    return;\n                }\n                lt[0] = lb[0] = this.x;\n                lt[1] = rt[1] = this.y;\n                rb[0] = rt[0] = this.x + this.width;\n                rb[1] = lb[1] = this.y + this.height;\n\n                v2ApplyTransform(lt, lt, m);\n                v2ApplyTransform(rb, rb, m);\n                v2ApplyTransform(lb, lb, m);\n                v2ApplyTransform(rt, rt, m);\n\n                this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n                this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n                var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n                var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n                this.width = maxX - this.x;\n                this.height = maxY - this.y;\n            };\n        })(),\n\n        /**\n         * Calculate matrix of transforming from self to target rect\n         * @param  {module:zrender/core/BoundingRect} b\n         * @return {Array.<number>}\n         */\n        calculateTransform: function (b) {\n            var a = this;\n            var sx = b.width / a.width;\n            var sy = b.height / a.height;\n\n            var m = matrix.create();\n\n            // 矩阵右乘\n            matrix.translate(m, m, [-a.x, -a.y]);\n            matrix.scale(m, m, [sx, sy]);\n            matrix.translate(m, m, [b.x, b.y]);\n\n            return m;\n        },\n\n        /**\n         * @param {(module:echarts/core/BoundingRect|Object)} b\n         * @return {boolean}\n         */\n        intersect: function (b) {\n            if (!b) {\n                return false;\n            }\n\n            if (!(b instanceof BoundingRect)) {\n                // Normalize negative width/height.\n                b = BoundingRect.create(b);\n            }\n\n            var a = this;\n            var ax0 = a.x;\n            var ax1 = a.x + a.width;\n            var ay0 = a.y;\n            var ay1 = a.y + a.height;\n\n            var bx0 = b.x;\n            var bx1 = b.x + b.width;\n            var by0 = b.y;\n            var by1 = b.y + b.height;\n\n            return ! (ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n        },\n\n        contain: function (x, y) {\n            var rect = this;\n            return x >= rect.x\n                && x <= (rect.x + rect.width)\n                && y >= rect.y\n                && y <= (rect.y + rect.height);\n        },\n\n        /**\n         * @return {module:echarts/core/BoundingRect}\n         */\n        clone: function () {\n            return new BoundingRect(this.x, this.y, this.width, this.height);\n        },\n\n        /**\n         * Copy from another rect\n         */\n        copy: function (other) {\n            this.x = other.x;\n            this.y = other.y;\n            this.width = other.width;\n            this.height = other.height;\n        },\n\n        plain: function () {\n            return {\n                x: this.x,\n                y: this.y,\n                width: this.width,\n                height: this.height\n            };\n        }\n    };\n\n    /**\n     * @param {Object|module:zrender/core/BoundingRect} rect\n     * @param {number} rect.x\n     * @param {number} rect.y\n     * @param {number} rect.width\n     * @param {number} rect.height\n     * @return {module:zrender/core/BoundingRect}\n     */\n    BoundingRect.create = function (rect) {\n        return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n    };\n\n    module.exports = BoundingRect;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/BoundingRect.js\n// module id = 617\n// module chunks = 0 1 2","/**\n * Component model\n *\n * @module echarts/model/Component\n */\n\n\n    var Model = require('./Model');\n    var zrUtil = require('zrender/lib/core/util');\n    var arrayPush = Array.prototype.push;\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n    var layout = require('../util/layout');\n\n    /**\n     * @alias module:echarts/model/Component\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {module:echarts/model/Model} ecModel\n     */\n    var ComponentModel = Model.extend({\n\n        type: 'component',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        id: '',\n\n        /**\n         * @readOnly\n         */\n        name: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        mainType: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        subType: '',\n\n        /**\n         * @readOnly\n         * @type {number}\n         */\n        componentIndex: 0,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        ecModel: null,\n\n        /**\n         * key: componentType\n         * value:  Component model list, can not be null.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @readOnly\n         */\n        dependentModels: [],\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        uid: null,\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        $constructor: function (option, parentModel, ecModel, extraOpt) {\n            Model.call(this, option, parentModel, ecModel, extraOpt);\n\n            this.uid = componentUtil.getUID('componentModel');\n        },\n\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n            this.mergeDefaultAndTheme(option, ecModel);\n        },\n\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            var themeModel = ecModel.getTheme();\n            zrUtil.merge(option, themeModel.get(this.mainType));\n            zrUtil.merge(option, this.getDefaultOption());\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (option, extraOpt) {\n            zrUtil.merge(this.option, option, true);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, option, layoutMode);\n            }\n        },\n\n        // Hooker after init or mergeOption\n        optionUpdated: function (newCptOption, isInit) {},\n\n        getDefaultOption: function () {\n            if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n                var optList = [];\n                var Class = this.constructor;\n                while (Class) {\n                    var opt = Class.prototype.defaultOption;\n                    opt && optList.push(opt);\n                    Class = Class.superClass;\n                }\n\n                var defaultOption = {};\n                for (var i = optList.length - 1; i >= 0; i--) {\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n                }\n                clazzUtil.set(this, '__defaultOption', defaultOption);\n            }\n            return clazzUtil.get(this, '__defaultOption');\n        },\n\n        getReferringComponents: function (mainType) {\n            return this.ecModel.queryComponents({\n                mainType: mainType,\n                index: this.get(mainType + 'Index', true),\n                id: this.get(mainType + 'Id', true)\n            });\n        }\n\n    });\n\n    // Reset ComponentModel.extend, add preConstruct.\n    // clazzUtil.enableClassExtend(\n    //     ComponentModel,\n    //     function (option, parentModel, ecModel, extraOpt) {\n    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\n    //         zrUtil.extend(this, extraOpt);\n\n    //         this.uid = componentUtil.getUID('componentModel');\n\n    //         // this.setReadOnly([\n    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n    //         //     'dependentModels', 'componentIndex'\n    //         // ]);\n    //     }\n    // );\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(\n        ComponentModel, {registerWhenExtend: true}\n    );\n    componentUtil.enableSubTypeDefaulter(ComponentModel);\n\n    // Add capability of ComponentModel.topologicalTravel.\n    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\n    function getDependencies(componentType) {\n        var deps = [];\n        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n        });\n        // Ensure main type\n        return zrUtil.map(deps, function (type) {\n            return clazzUtil.parseClassType(type).main;\n        });\n    }\n\n    zrUtil.mixin(ComponentModel, require('./mixin/boxLayout'));\n\n    module.exports = ComponentModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Component.js\n// module id = 618\n// module chunks = 0 1 2","'use strict';\n// Layout helpers for each component positioning\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n    var numberUtil = require('./number');\n    var formatUtil = require('./format');\n    var parsePercent = numberUtil.parsePercent;\n    var each = zrUtil.each;\n\n    var layout = {};\n\n    /**\n     * @public\n     */\n    var LOCATION_PARAMS = layout.LOCATION_PARAMS = [\n        'left', 'right', 'top', 'bottom', 'width', 'height'\n    ];\n\n    /**\n     * @public\n     */\n    var HV_NAMES = layout.HV_NAMES = [\n        ['width', 'left', 'right'],\n        ['height', 'top', 'bottom']\n    ];\n\n    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\n        var x = 0;\n        var y = 0;\n\n        if (maxWidth == null) {\n            maxWidth = Infinity;\n        }\n        if (maxHeight == null) {\n            maxHeight = Infinity;\n        }\n        var currentLineMaxSize = 0;\n\n        group.eachChild(function (child, idx) {\n            var position = child.position;\n            var rect = child.getBoundingRect();\n            var nextChild = group.childAt(idx + 1);\n            var nextChildRect = nextChild && nextChild.getBoundingRect();\n            var nextX;\n            var nextY;\n\n            if (orient === 'horizontal') {\n                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\n                nextX = x + moveX;\n                // Wrap when width exceeds maxWidth or meet a `newline` group\n                // FIXME compare before adding gap?\n                if (nextX > maxWidth || child.newline) {\n                    x = 0;\n                    nextX = moveX;\n                    y += currentLineMaxSize + gap;\n                    currentLineMaxSize = rect.height;\n                }\n                else {\n                    // FIXME: consider rect.y is not `0`?\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n                }\n            }\n            else {\n                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\n                nextY = y + moveY;\n                // Wrap when width exceeds maxHeight or meet a `newline` group\n                if (nextY > maxHeight || child.newline) {\n                    x += currentLineMaxSize + gap;\n                    y = 0;\n                    nextY = moveY;\n                    currentLineMaxSize = rect.width;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n                }\n            }\n\n            if (child.newline) {\n                return;\n            }\n\n            position[0] = x;\n            position[1] = y;\n\n            orient === 'horizontal'\n                ? (x = nextX + gap)\n                : (y = nextY + gap);\n        });\n    }\n\n    /**\n     * VBox or HBox layouting\n     * @param {string} orient\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.box = boxLayout;\n\n    /**\n     * VBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\n\n    /**\n     * HBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\n\n    /**\n     * If x or x2 is not specified or 'center' 'left' 'right',\n     * the width would be as long as possible.\n     * If y or y2 is not specified or 'middle' 'top' 'bottom',\n     * the height would be as long as possible.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.x]\n     * @param {number|string} [positionInfo.y]\n     * @param {number|string} [positionInfo.x2]\n     * @param {number|string} [positionInfo.y2]\n     * @param {Object} containerRect {width, height}\n     * @param {string|number} margin\n     * @return {Object} {width, height}\n     */\n    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var x = parsePercent(positionInfo.x, containerWidth);\n        var y = parsePercent(positionInfo.y, containerHeight);\n        var x2 = parsePercent(positionInfo.x2, containerWidth);\n        var y2 = parsePercent(positionInfo.y2, containerHeight);\n\n        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        return {\n            width: Math.max(x2 - x - margin[1] - margin[3], 0),\n            height: Math.max(y2 - y - margin[0] - margin[2], 0)\n        };\n    };\n\n    /**\n     * Parse position info.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width]\n     * @param {number|string} [positionInfo.height]\n     * @param {number|string} [positionInfo.aspect] Aspect is width / height\n     * @param {Object} containerRect\n     * @param {string|number} [margin]\n     *\n     * @return {module:zrender/core/BoundingRect}\n     */\n    layout.getLayoutRect = function (\n        positionInfo, containerRect, margin\n    ) {\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var left = parsePercent(positionInfo.left, containerWidth);\n        var top = parsePercent(positionInfo.top, containerHeight);\n        var right = parsePercent(positionInfo.right, containerWidth);\n        var bottom = parsePercent(positionInfo.bottom, containerHeight);\n        var width = parsePercent(positionInfo.width, containerWidth);\n        var height = parsePercent(positionInfo.height, containerHeight);\n\n        var verticalMargin = margin[2] + margin[0];\n        var horizontalMargin = margin[1] + margin[3];\n        var aspect = positionInfo.aspect;\n\n        // If width is not specified, calculate width from left and right\n        if (isNaN(width)) {\n            width = containerWidth - right - horizontalMargin - left;\n        }\n        if (isNaN(height)) {\n            height = containerHeight - bottom - verticalMargin - top;\n        }\n\n        if (aspect != null) {\n            // If width and height are not given\n            // 1. Graph should not exceeds the container\n            // 2. Aspect must be keeped\n            // 3. Graph should take the space as more as possible\n            // FIXME\n            // Margin is not considered, because there is no case that both\n            // using margin and aspect so far.\n            if (isNaN(width) && isNaN(height)) {\n                if (aspect > containerWidth / containerHeight) {\n                    width = containerWidth * 0.8;\n                }\n                else {\n                    height = containerHeight * 0.8;\n                }\n            }\n\n            // Calculate width or height with given aspect\n            if (isNaN(width)) {\n                width = aspect * height;\n            }\n            if (isNaN(height)) {\n                height = width / aspect;\n            }\n        }\n\n        // If left is not specified, calculate left from right and width\n        if (isNaN(left)) {\n            left = containerWidth - right - width - horizontalMargin;\n        }\n        if (isNaN(top)) {\n            top = containerHeight - bottom - height - verticalMargin;\n        }\n\n        // Align left and top\n        switch (positionInfo.left || positionInfo.right) {\n            case 'center':\n                left = containerWidth / 2 - width / 2 - margin[3];\n                break;\n            case 'right':\n                left = containerWidth - width - horizontalMargin;\n                break;\n        }\n        switch (positionInfo.top || positionInfo.bottom) {\n            case 'middle':\n            case 'center':\n                top = containerHeight / 2 - height / 2 - margin[0];\n                break;\n            case 'bottom':\n                top = containerHeight - height - verticalMargin;\n                break;\n        }\n        // If something is wrong and left, top, width, height are calculated as NaN\n        left = left || 0;\n        top = top || 0;\n        if (isNaN(width)) {\n            // Width may be NaN if only one value is given except width\n            width = containerWidth - horizontalMargin - left - (right || 0);\n        }\n        if (isNaN(height)) {\n            // Height may be NaN if only one value is given except height\n            height = containerHeight - verticalMargin - top - (bottom || 0);\n        }\n\n        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n        rect.margin = margin;\n        return rect;\n    };\n\n\n    /**\n     * Position a zr element in viewport\n     *  Group position is specified by either\n     *  {left, top}, {right, bottom}\n     *  If all properties exists, right and bottom will be igonred.\n     *\n     * Logic:\n     *     1. Scale (against origin point in parent coord)\n     *     2. Rotate (against origin point in parent coord)\n     *     3. Traslate (with el.position by this method)\n     * So this method only fixes the last step 'Traslate', which does not affect\n     * scaling and rotating.\n     *\n     * If be called repeatly with the same input el, the same result will be gotten.\n     *\n     * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n     * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @param {Object} [opt]\n     * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n     * @param {Array.<number>} [opt.boundingMode='all']\n     *        Specify how to calculate boundingRect when locating.\n     *        'all': Position the boundingRect that is transformed and uioned\n     *               both itself and its descendants.\n     *               This mode simplies confine the elements in the bounding\n     *               of their container (e.g., using 'right: 0').\n     *        'raw': Position the boundingRect that is not transformed and only itself.\n     *               This mode is useful when you want a element can overflow its\n     *               container. (Consider a rotated circle needs to be located in a corner.)\n     *               In this mode positionInfo.width/height can only be number.\n     */\n    layout.positionElement = function (el, positionInfo, containerRect, margin, opt) {\n        var h = !opt || !opt.hv || opt.hv[0];\n        var v = !opt || !opt.hv || opt.hv[1];\n        var boundingMode = opt && opt.boundingMode || 'all';\n\n        if (!h && !v) {\n            return;\n        }\n\n        var rect;\n        if (boundingMode === 'raw') {\n            rect = el.type === 'group'\n                ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0)\n                : el.getBoundingRect();\n        }\n        else {\n            rect = el.getBoundingRect();\n            if (el.needLocalTransform()) {\n                var transform = el.getLocalTransform();\n                // Notice: raw rect may be inner object of el,\n                // which should not be modified.\n                rect = rect.clone();\n                rect.applyTransform(transform);\n            }\n        }\n\n        // The real width and height can not be specified but calculated by the given el.\n        positionInfo = layout.getLayoutRect(\n            zrUtil.defaults(\n                {width: rect.width, height: rect.height},\n                positionInfo\n            ),\n            containerRect,\n            margin\n        );\n\n        // Because 'tranlate' is the last step in transform\n        // (see zrender/core/Transformable#getLocalTransfrom),\n        // we can just only modify el.position to get final result.\n        var elPos = el.position;\n        var dx = h ? positionInfo.x - rect.x : 0;\n        var dy = v ? positionInfo.y - rect.y : 0;\n\n        el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n    };\n\n    /**\n     * @param {Object} option Contains some of the properties in HV_NAMES.\n     * @param {number} hvIdx 0: horizontal; 1: vertical.\n     */\n    layout.sizeCalculable = function (option, hvIdx) {\n        return option[HV_NAMES[hvIdx][0]] != null\n            || (option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null);\n    };\n\n    /**\n     * Consider Case:\n     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n     * through setOption or media query, using normal zrUtil.merge will cause\n     * {right: 0} does not take effect.\n     *\n     * @example\n     * ComponentModel.extend({\n     *     init: function () {\n     *         ...\n     *         var inputPositionParams = layout.getLayoutParams(option);\n     *         this.mergeOption(inputPositionParams);\n     *     },\n     *     mergeOption: function (newOption) {\n     *         newOption && zrUtil.merge(thisOption, newOption, true);\n     *         layout.mergeLayoutParam(thisOption, newOption);\n     *     }\n     * });\n     *\n     * @param {Object} targetOption\n     * @param {Object} newOption\n     * @param {Object|string} [opt]\n     * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n     *  that width (or height) should not be calculated by left and right (or top and bottom).\n     */\n    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\n        !zrUtil.isObject(opt) && (opt = {});\n\n        var ignoreSize = opt.ignoreSize;\n        !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n\n        var hResult = merge(HV_NAMES[0], 0);\n        var vResult = merge(HV_NAMES[1], 1);\n\n        copy(HV_NAMES[0], targetOption, hResult);\n        copy(HV_NAMES[1], targetOption, vResult);\n\n        function merge(names, hvIdx) {\n            var newParams = {};\n            var newValueCount = 0;\n            var merged = {};\n            var mergedValueCount = 0;\n            var enoughParamNumber = 2;\n\n            each(names, function (name) {\n                merged[name] = targetOption[name];\n            });\n            each(names, function (name) {\n                // Consider case: newOption.width is null, which is\n                // set by user for removing width setting.\n                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n                hasValue(newParams, name) && newValueCount++;\n                hasValue(merged, name) && mergedValueCount++;\n            });\n\n            if (ignoreSize[hvIdx]) {\n                // Only one of left/right is premitted to exist.\n                if (hasValue(newOption, names[1])) {\n                    merged[names[2]] = null;\n                }\n                else if (hasValue(newOption, names[2])) {\n                    merged[names[1]] = null;\n                }\n                return merged;\n            }\n\n            // Case: newOption: {width: ..., right: ...},\n            // or targetOption: {right: ...} and newOption: {width: ...},\n            // There is no conflict when merged only has params count\n            // little than enoughParamNumber.\n            if (mergedValueCount === enoughParamNumber || !newValueCount) {\n                return merged;\n            }\n            // Case: newOption: {width: ..., right: ...},\n            // Than we can make sure user only want those two, and ignore\n            // all origin params in targetOption.\n            else if (newValueCount >= enoughParamNumber) {\n                return newParams;\n            }\n            else {\n                // Chose another param from targetOption by priority.\n                for (var i = 0; i < names.length; i++) {\n                    var name = names[i];\n                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n                        newParams[name] = targetOption[name];\n                        break;\n                    }\n                }\n                return newParams;\n            }\n        }\n\n        function hasProp(obj, name) {\n            return obj.hasOwnProperty(name);\n        }\n\n        function hasValue(obj, name) {\n            return obj[name] != null && obj[name] !== 'auto';\n        }\n\n        function copy(names, target, source) {\n            each(names, function (name) {\n                target[name] = source[name];\n            });\n        }\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.getLayoutParams = function (source) {\n        return layout.copyLayoutParams({}, source);\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.copyLayoutParams = function (target, source) {\n        source && target && each(LOCATION_PARAMS, function (name) {\n            source.hasOwnProperty(name) && (target[name] = source[name]);\n        });\n        return target;\n    };\n\n    module.exports = layout;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/layout.js\n// module id = 619\n// module chunks = 0 1 2","\n\n    var OrdinalScale = require('../scale/Ordinal');\n    var IntervalScale = require('../scale/Interval');\n    require('../scale/Time');\n    require('../scale/Log');\n    var Scale = require('../scale/Scale');\n\n    var numberUtil = require('../util/number');\n    var zrUtil = require('zrender/lib/core/util');\n    var textContain = require('zrender/lib/contain/text');\n    var axisHelper = {};\n\n    /**\n     * Get axis scale extent before niced.\n     * Item of returned array can only be number (including Infinity and NaN).\n     */\n    axisHelper.getScaleExtent = function (scale, model) {\n        var scaleType = scale.type;\n\n        var min = model.getMin();\n        var max = model.getMax();\n        var fixMin = min != null;\n        var fixMax = max != null;\n        var originalExtent = scale.getExtent();\n\n        var axisDataLen;\n        var boundaryGap;\n        var span;\n        if (scaleType === 'ordinal') {\n            axisDataLen = (model.get('data') || []).length;\n        }\n        else {\n            boundaryGap = model.get('boundaryGap');\n            if (!zrUtil.isArray(boundaryGap)) {\n                boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n            }\n            if (typeof boundaryGap[0] === 'boolean') {\n                if (__DEV__) {\n                    console.warn('Boolean type for boundaryGap is only '\n                        + 'allowed for ordinal axis. Please use string in '\n                        + 'percentage instead, e.g., \"20%\". Currently, '\n                        + 'boundaryGap is set to be 0.');\n                }\n                boundaryGap = [0, 0];\n            }\n            boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n            boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n            span = (originalExtent[1] - originalExtent[0])\n                || Math.abs(originalExtent[0]);\n        }\n\n        // Notice: When min/max is not set (that is, when there are null/undefined,\n        // which is the most common case), these cases should be ensured:\n        // (1) For 'ordinal', show all axis.data.\n        // (2) For others:\n        //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n        //      disabled).\n        //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n        //      be the result that originalExtent enlarged by boundaryGap.\n        // (3) If no data, it should be ensured that `scale.setBlank` is set.\n\n        // FIXME\n        // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n        // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n        // that the results processed by boundaryGap are positive/negative?\n\n        if (min == null) {\n            min = scaleType === 'ordinal'\n                ? (axisDataLen ? 0 : NaN)\n                : originalExtent[0] - boundaryGap[0] * span;\n        }\n        if (max == null) {\n            max = scaleType === 'ordinal'\n                ? (axisDataLen ? axisDataLen - 1 : NaN)\n                : originalExtent[1] + boundaryGap[1] * span;\n        }\n\n        if (min === 'dataMin') {\n            min = originalExtent[0];\n        }\n        if (max === 'dataMax') {\n            max = originalExtent[1];\n        }\n\n        (min == null || !isFinite(min)) && (min = NaN);\n        (max == null || !isFinite(max)) && (max = NaN);\n\n        scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max));\n\n        // Evaluate if axis needs cross zero\n        if (model.getNeedCrossZero()) {\n            // Axis is over zero and min is not set\n            if (min > 0 && max > 0 && !fixMin) {\n                min = 0;\n            }\n            // Axis is under zero and max is not set\n            if (min < 0 && max < 0 && !fixMax) {\n                max = 0;\n            }\n        }\n\n        return [min, max];\n    };\n\n    axisHelper.niceScaleExtent = function (scale, model) {\n        var extent = axisHelper.getScaleExtent(scale, model);\n        var fixMin = model.getMin() != null;\n        var fixMax = model.getMax() != null;\n        var splitNumber = model.get('splitNumber');\n\n        if (scale.type === 'log') {\n            scale.base = model.get('logBase');\n        }\n\n        var scaleType = scale.type;\n        scale.setExtent(extent[0], extent[1]);\n        scale.niceExtent({\n            splitNumber: splitNumber,\n            fixMin: fixMin,\n            fixMax: fixMax,\n            minInterval: (scaleType === 'interval' || scaleType === 'time')\n                ? model.get('minInterval') : null,\n            maxInterval: (scaleType === 'interval' || scaleType === 'time')\n                ? model.get('maxInterval') : null\n        });\n\n        // If some one specified the min, max. And the default calculated interval\n        // is not good enough. He can specify the interval. It is often appeared\n        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n        // to be 60.\n        // FIXME\n        var interval = model.get('interval');\n        if (interval != null) {\n            scale.setInterval && scale.setInterval(interval);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @param {string} [axisType] Default retrieve from model.type\n     * @return {module:echarts/scale/*}\n     */\n    axisHelper.createScaleByModel = function(model, axisType) {\n        axisType = axisType || model.get('type');\n        if (axisType) {\n            switch (axisType) {\n                // Buildin scale\n                case 'category':\n                    return new OrdinalScale(\n                        model.getCategories(), [Infinity, -Infinity]\n                    );\n                case 'value':\n                    return new IntervalScale();\n                // Extended scale, like time and log\n                default:\n                    return (Scale.getClass(axisType) || IntervalScale).create(model);\n            }\n        }\n    };\n\n    /**\n     * Check if the axis corss 0\n     */\n    axisHelper.ifAxisCrossZero = function (axis) {\n        var dataExtent = axis.scale.getExtent();\n        var min = dataExtent[0];\n        var max = dataExtent[1];\n        return !((min > 0 && max > 0) || (min < 0 && max < 0));\n    };\n\n    /**\n     * @param {Array.<number>} tickCoords In axis self coordinate.\n     * @param {Array.<string>} labels\n     * @param {string} font\n     * @param {boolean} isAxisHorizontal\n     * @return {number}\n     */\n    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\n        // FIXME\n        // 不同角的axis和label，不只是horizontal和vertical.\n\n        var textSpaceTakenRect;\n        var autoLabelInterval = 0;\n        var accumulatedLabelInterval = 0;\n\n        var step = 1;\n        if (labels.length > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.floor(labels.length / 40);\n        }\n\n        for (var i = 0; i < tickCoords.length; i += step) {\n            var tickCoord = tickCoords[i];\n            var rect = textContain.getBoundingRect(\n                labels[i], font, 'center', 'top'\n            );\n            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\n            // FIXME Magic number 1.5\n            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\n            if (!textSpaceTakenRect) {\n                textSpaceTakenRect = rect.clone();\n            }\n            // There is no space for current label;\n            else if (textSpaceTakenRect.intersect(rect)) {\n                accumulatedLabelInterval++;\n                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n            }\n            else {\n                textSpaceTakenRect.union(rect);\n                // Reset\n                accumulatedLabelInterval = 0;\n            }\n        }\n        if (autoLabelInterval === 0 && step > 1) {\n            return step;\n        }\n        return (autoLabelInterval + 1) * step - 1;\n    };\n\n    /**\n     * @param {Object} axis\n     * @param {Function} labelFormatter\n     * @return {Array.<string>}\n     */\n    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\n        var scale = axis.scale;\n        var labels = scale.getTicksLabels();\n        var ticks = scale.getTicks();\n        if (typeof labelFormatter === 'string') {\n            labelFormatter = (function (tpl) {\n                return function (val) {\n                    return tpl.replace('{value}', val != null ? val : '');\n                };\n            })(labelFormatter);\n            // Consider empty array\n            return zrUtil.map(labels, labelFormatter);\n        }\n        else if (typeof labelFormatter === 'function') {\n            return zrUtil.map(ticks, function (tick, idx) {\n                return labelFormatter(\n                    axisHelper.getAxisRawValue(axis, tick),\n                    idx\n                );\n            }, this);\n        }\n        else {\n            return labels;\n        }\n    };\n\n    axisHelper.getAxisRawValue = function (axis, value) {\n        // In category axis with data zoom, tick is not the original\n        // index of axis.data. So tick should not be exposed to user\n        // in category axis.\n        return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n    };\n\n    module.exports = axisHelper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisHelper.js\n// module id = 620\n// module chunks = 0 1 2","\n\n    var util = require('../core/util');\n    var BoundingRect = require('../core/BoundingRect');\n    var imageHelper = require('../graphic/helper/image');\n\n    var textWidthCache = {};\n    var textWidthCacheCounter = 0;\n\n    var TEXT_CACHE_MAX = 5000;\n    var STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\n    var DEFAULT_FONT = '12px sans-serif';\n\n    var retrieve2 = util.retrieve2;\n    var retrieve3 = util.retrieve3;\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @return {number} width\n     */\n    function getTextWidth(text, font) {\n        font = font || DEFAULT_FONT;\n        var key = text + ':' + font;\n        if (textWidthCache[key]) {\n            return textWidthCache[key];\n        }\n\n        var textLines = (text + '').split('\\n');\n        var width = 0;\n\n        for (var i = 0, l = textLines.length; i < l; i++) {\n            // textContain.measureText may be overrided in SVG or VML\n            width = Math.max(textContain.measureText(textLines[i], font).width, width);\n        }\n\n        if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n            textWidthCacheCounter = 0;\n            textWidthCache = {};\n        }\n        textWidthCacheCounter++;\n        textWidthCache[key] = width;\n\n        return width;\n    }\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @param {string} [textAlign='left']\n     * @param {string} [textVerticalAlign='top']\n     * @param {Array.<number>} [textPadding]\n     * @param {Object} [rich]\n     * @param {Object} [truncate]\n     * @return {Object} {x, y, width, height, lineHeight}\n     */\n    function getTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n        return rich\n            ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate)\n            : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n    }\n\n    function getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n        var contentBlock = parsePlainText(text, font, textPadding, truncate);\n        var outerWidth = getTextWidth(text, font);\n        if (textPadding) {\n            outerWidth += textPadding[1] + textPadding[3];\n        }\n        var outerHeight = contentBlock.outerHeight;\n\n        var x = adjustTextX(0, outerWidth, textAlign);\n        var y = adjustTextY(0, outerHeight, textVerticalAlign);\n\n        var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n        rect.lineHeight = contentBlock.lineHeight;\n\n        return rect;\n    }\n\n    function getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n        var contentBlock = parseRichText(text, {\n            rich: rich,\n            truncate: truncate,\n            font: font,\n            textAlign: textAlign,\n            textPadding: textPadding\n        });\n        var outerWidth = contentBlock.outerWidth;\n        var outerHeight = contentBlock.outerHeight;\n\n        var x = adjustTextX(0, outerWidth, textAlign);\n        var y = adjustTextY(0, outerHeight, textVerticalAlign);\n\n        return new BoundingRect(x, y, outerWidth, outerHeight);\n    }\n\n    /**\n     * @public\n     * @param {number} x\n     * @param {number} width\n     * @param {string} [textAlign='left']\n     * @return {number} Adjusted x.\n     */\n    function adjustTextX(x, width, textAlign) {\n        // FIXME Right to left language\n        if (textAlign === 'right') {\n            x -= width;\n        }\n        else if (textAlign === 'center') {\n            x -= width / 2;\n        }\n        return x;\n    }\n\n    /**\n     * @public\n     * @param {number} y\n     * @param {number} height\n     * @param {string} [textVerticalAlign='top']\n     * @return {number} Adjusted y.\n     */\n    function adjustTextY(y, height, textVerticalAlign) {\n        if (textVerticalAlign === 'middle') {\n            y -= height / 2;\n        }\n        else if (textVerticalAlign === 'bottom') {\n            y -= height;\n        }\n        return y;\n    }\n\n    /**\n     * @public\n     * @param {stirng} textPosition\n     * @param {Object} rect {x, y, width, height}\n     * @param {number} distance\n     * @return {Object} {x, y, textAlign, textVerticalAlign}\n     */\n    function adjustTextPositionOnRect(textPosition, rect, distance) {\n\n        var x = rect.x;\n        var y = rect.y;\n\n        var height = rect.height;\n        var width = rect.width;\n        var halfHeight = height / 2;\n\n        var textAlign = 'left';\n        var textVerticalAlign = 'top';\n\n        switch (textPosition) {\n            case 'left':\n                x -= distance;\n                y += halfHeight;\n                textAlign = 'right';\n                textVerticalAlign = 'middle';\n                break;\n            case 'right':\n                x += distance + width;\n                y += halfHeight;\n                textVerticalAlign = 'middle';\n                break;\n            case 'top':\n                x += width / 2;\n                y -= distance;\n                textAlign = 'center';\n                textVerticalAlign = 'bottom';\n                break;\n            case 'bottom':\n                x += width / 2;\n                y += height + distance;\n                textAlign = 'center';\n                break;\n            case 'inside':\n                x += width / 2;\n                y += halfHeight;\n                textAlign = 'center';\n                textVerticalAlign = 'middle';\n                break;\n            case 'insideLeft':\n                x += distance;\n                y += halfHeight;\n                textVerticalAlign = 'middle';\n                break;\n            case 'insideRight':\n                x += width - distance;\n                y += halfHeight;\n                textAlign = 'right';\n                textVerticalAlign = 'middle';\n                break;\n            case 'insideTop':\n                x += width / 2;\n                y += distance;\n                textAlign = 'center';\n                break;\n            case 'insideBottom':\n                x += width / 2;\n                y += height - distance;\n                textAlign = 'center';\n                textVerticalAlign = 'bottom';\n                break;\n            case 'insideTopLeft':\n                x += distance;\n                y += distance;\n                break;\n            case 'insideTopRight':\n                x += width - distance;\n                y += distance;\n                textAlign = 'right';\n                break;\n            case 'insideBottomLeft':\n                x += distance;\n                y += height - distance;\n                textVerticalAlign = 'bottom';\n                break;\n            case 'insideBottomRight':\n                x += width - distance;\n                y += height - distance;\n                textAlign = 'right';\n                textVerticalAlign = 'bottom';\n                break;\n        }\n\n        return {\n            x: x,\n            y: y,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    /**\n     * Show ellipsis if overflow.\n     *\n     * @public\n     * @param  {string} text\n     * @param  {string} containerWidth\n     * @param  {string} font\n     * @param  {number} [ellipsis='...']\n     * @param  {Object} [options]\n     * @param  {number} [options.maxIterations=3]\n     * @param  {number} [options.minChar=0] If truncate result are less\n     *                  then minChar, ellipsis will not show, which is\n     *                  better for user hint in some cases.\n     * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n     * @return {string}\n     */\n    function truncateText(text, containerWidth, font, ellipsis, options) {\n        if (!containerWidth) {\n            return '';\n        }\n\n        var textLines = (text + '').split('\\n');\n        options = prepareTruncateOptions(containerWidth, font, ellipsis, options);\n\n        // FIXME\n        // It is not appropriate that every line has '...' when truncate multiple lines.\n        for (var i = 0, len = textLines.length; i < len; i++) {\n            textLines[i] = truncateSingleLine(textLines[i], options);\n        }\n\n        return textLines.join('\\n');\n    }\n\n    function prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n        options = util.extend({}, options);\n\n        options.font = font;\n        var ellipsis = retrieve2(ellipsis, '...');\n        options.maxIterations = retrieve2(options.maxIterations, 2);\n        var minChar = options.minChar = retrieve2(options.minChar, 0);\n        // FIXME\n        // Other languages?\n        options.cnCharWidth = getTextWidth('国', font);\n        // FIXME\n        // Consider proportional font?\n        var ascCharWidth = options.ascCharWidth = getTextWidth('a', font);\n        options.placeholder = retrieve2(options.placeholder, '');\n\n        // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n        // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n        var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n        for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n            contentWidth -= ascCharWidth;\n        }\n\n        var ellipsisWidth = getTextWidth(ellipsis);\n        if (ellipsisWidth > contentWidth) {\n            ellipsis = '';\n            ellipsisWidth = 0;\n        }\n\n        contentWidth = containerWidth - ellipsisWidth;\n\n        options.ellipsis = ellipsis;\n        options.ellipsisWidth = ellipsisWidth;\n        options.contentWidth = contentWidth;\n        options.containerWidth = containerWidth;\n\n        return options;\n    }\n\n    function truncateSingleLine(textLine, options) {\n        var containerWidth = options.containerWidth;\n        var font = options.font;\n        var contentWidth = options.contentWidth;\n\n        if (!containerWidth) {\n            return '';\n        }\n\n        var lineWidth = getTextWidth(textLine, font);\n\n        if (lineWidth <= containerWidth) {\n            return textLine;\n        }\n\n        for (var j = 0;; j++) {\n            if (lineWidth <= contentWidth || j >= options.maxIterations) {\n                textLine += options.ellipsis;\n                break;\n            }\n\n            var subLength = j === 0\n                ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth)\n                : lineWidth > 0\n                ? Math.floor(textLine.length * contentWidth / lineWidth)\n                : 0;\n\n            textLine = textLine.substr(0, subLength);\n            lineWidth = getTextWidth(textLine, font);\n        }\n\n        if (textLine === '') {\n            textLine = options.placeholder;\n        }\n\n        return textLine;\n    }\n\n    function estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n        var width = 0;\n        var i = 0;\n        for (var len = text.length; i < len && width < contentWidth; i++) {\n            var charCode = text.charCodeAt(i);\n            width += (0 <= charCode && charCode <= 127) ? ascCharWidth : cnCharWidth;\n        }\n        return i;\n    }\n\n    /**\n     * @public\n     * @param {string} font\n     * @return {number} line height\n     */\n    function getLineHeight(font) {\n        // FIXME A rough approach.\n        return getTextWidth('国', font);\n    }\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @return {Object} width\n     */\n    function measureText(text, font) {\n        var ctx = util.getContext();\n        ctx.font = font || DEFAULT_FONT;\n        return ctx.measureText(text);\n    }\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @param {Object} [truncate]\n     * @return {Object} block: {lineHeight, lines, height, outerHeight}\n     *  Notice: for performance, do not calculate outerWidth util needed.\n     */\n    function parsePlainText(text, font, padding, truncate) {\n        text != null && (text += '');\n\n        var lineHeight = getLineHeight(font);\n        var lines = text ? text.split('\\n') : [];\n        var height = lines.length * lineHeight;\n        var outerHeight = height;\n\n        if (padding) {\n            outerHeight += padding[0] + padding[2];\n        }\n\n        if (text && truncate) {\n            var truncOuterHeight = truncate.outerHeight;\n            var truncOuterWidth = truncate.outerWidth;\n            if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n                text = '';\n                lines = [];\n            }\n            else if (truncOuterWidth != null) {\n                var options = prepareTruncateOptions(\n                    truncOuterWidth - (padding ? padding[1] + padding[3] : 0),\n                    font,\n                    truncate.ellipsis,\n                    {minChar: truncate.minChar, placeholder: truncate.placeholder}\n                );\n\n                // FIXME\n                // It is not appropriate that every line has '...' when truncate multiple lines.\n                for (var i = 0, len = lines.length; i < len; i++) {\n                    lines[i] = truncateSingleLine(lines[i], options);\n                }\n            }\n        }\n\n        return {\n            lines: lines,\n            height: height,\n            outerHeight: outerHeight,\n            lineHeight: lineHeight\n        };\n    }\n\n    /**\n     * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n     * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n     *\n     * @public\n     * @param {string} text\n     * @param {Object} style\n     * @return {Object} block\n     * {\n     *      width,\n     *      height,\n     *      lines: [{\n     *          lineHeight,\n     *          width,\n     *          tokens: [[{\n     *              styleName,\n     *              text,\n     *              width,      // include textPadding\n     *              height,     // include textPadding\n     *              textWidth, // pure text width\n     *              textHeight, // pure text height\n     *              lineHeihgt,\n     *              font,\n     *              textAlign,\n     *              textVerticalAlign\n     *          }], [...], ...]\n     *      }, ...]\n     * }\n     * If styleName is undefined, it is plain text.\n     */\n    function parseRichText(text, style) {\n        var contentBlock = {lines: [], width: 0, height: 0};\n\n        text != null && (text += '');\n        if (!text) {\n            return contentBlock;\n        }\n\n        var lastIndex = STYLE_REG.lastIndex = 0;\n        var result;\n        while ((result = STYLE_REG.exec(text)) != null)  {\n            var matchedIndex = result.index;\n            if (matchedIndex > lastIndex) {\n                pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n            }\n            pushTokens(contentBlock, result[2], result[1]);\n            lastIndex = STYLE_REG.lastIndex;\n        }\n\n        if (lastIndex < text.length) {\n            pushTokens(contentBlock, text.substring(lastIndex, text.length));\n        }\n\n        var lines = contentBlock.lines;\n        var contentHeight = 0;\n        var contentWidth = 0;\n        // For `textWidth: 100%`\n        var pendingList = [];\n\n        var stlPadding = style.textPadding;\n\n        var truncate = style.truncate;\n        var truncateWidth = truncate && truncate.outerWidth;\n        var truncateHeight = truncate && truncate.outerHeight;\n        if (stlPadding) {\n            truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n            truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n        }\n\n        // Calculate layout info of tokens.\n        for (var i = 0; i < lines.length; i++) {\n            var line = lines[i];\n            var lineHeight = 0;\n            var lineWidth = 0;\n\n            for (var j = 0; j < line.tokens.length; j++) {\n                var token = line.tokens[j];\n                var tokenStyle = token.styleName && style.rich[token.styleName] || {};\n                // textPadding should not inherit from style.\n                var textPadding = token.textPadding = tokenStyle.textPadding;\n\n                // textFont has been asigned to font by `normalizeStyle`.\n                var font = token.font = tokenStyle.font || style.font;\n\n                // textHeight can be used when textVerticalAlign is specified in token.\n                var tokenHeight = token.textHeight = retrieve2(\n                    // textHeight should not be inherited, consider it can be specified\n                    // as box height of the block.\n                    tokenStyle.textHeight, textContain.getLineHeight(font)\n                );\n                textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n                token.height = tokenHeight;\n                token.lineHeight = retrieve3(\n                    tokenStyle.textLineHeight, style.textLineHeight, tokenHeight\n                );\n\n                token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n                token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n                if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n                    return {lines: [], width: 0, height: 0};\n                }\n\n                token.textWidth = textContain.getWidth(token.text, font);\n                var tokenWidth = tokenStyle.textWidth;\n                var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto';\n\n                // Percent width, can be `100%`, can be used in drawing separate\n                // line when box width is needed to be auto.\n                if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n                    token.percentWidth = tokenWidth;\n                    pendingList.push(token);\n                    tokenWidth = 0;\n                    // Do not truncate in this case, because there is no user case\n                    // and it is too complicated.\n                }\n                else {\n                    if (tokenWidthNotSpecified) {\n                        tokenWidth = token.textWidth;\n\n                        // FIXME: If image is not loaded and textWidth is not specified, calling\n                        // `getBoundingRect()` will not get correct result.\n                        var textBackgroundColor = tokenStyle.textBackgroundColor;\n                        var bgImg = textBackgroundColor && textBackgroundColor.image;\n\n                        // Use cases:\n                        // (1) If image is not loaded, it will be loaded at render phase and call\n                        // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n                        // image, and then the right size will be calculated here at the next tick.\n                        // See `graphic/helper/text.js`.\n                        // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n                        // use `imageHelper.findExistImage` to find cached image.\n                        // `imageHelper.findExistImage` will always be called here before\n                        // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n                        // which ensures that image will not be rendered before correct size calcualted.\n                        if (bgImg) {\n                            bgImg = imageHelper.findExistImage(bgImg);\n                            if (imageHelper.isImageReady(bgImg)) {\n                                tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n                            }\n                        }\n                    }\n\n                    var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n                    tokenWidth += paddingW;\n\n                    var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n                    if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n                        if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n                            token.text = '';\n                            token.textWidth = tokenWidth = 0;\n                        }\n                        else {\n                            token.text = truncateText(\n                                token.text, remianTruncWidth - paddingW, font, truncate.ellipsis,\n                                {minChar: truncate.minChar}\n                            );\n                            token.textWidth = textContain.getWidth(token.text, font);\n                            tokenWidth = token.textWidth + paddingW;\n                        }\n                    }\n                }\n\n                lineWidth += (token.width = tokenWidth);\n                tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n            }\n\n            line.width = lineWidth;\n            line.lineHeight = lineHeight;\n            contentHeight += lineHeight;\n            contentWidth = Math.max(contentWidth, lineWidth);\n        }\n\n        contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n        contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n        if (stlPadding) {\n            contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n            contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n        }\n\n        for (var i = 0; i < pendingList.length; i++) {\n            var token = pendingList[i];\n            var percentWidth = token.percentWidth;\n            // Should not base on outerWidth, because token can not be placed out of padding.\n            token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n        }\n\n        return contentBlock;\n    }\n\n    function pushTokens(block, str, styleName) {\n        var isEmptyStr = str === '';\n        var strs = str.split('\\n');\n        var lines = block.lines;\n\n        for (var i = 0; i < strs.length; i++) {\n            var text = strs[i];\n            var token = {\n                styleName: styleName,\n                text: text,\n                isLineHolder: !text && !isEmptyStr\n            };\n\n            // The first token should be appended to the last line.\n            if (!i) {\n                var tokens = (lines[lines.length - 1] || (lines[0] = {tokens: []})).tokens;\n\n                // Consider cases:\n                // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n                // (which is a placeholder) should be replaced by new token.\n                // (2) A image backage, where token likes {a|}.\n                // (3) A redundant '' will affect textAlign in line.\n                // (4) tokens with the same tplName should not be merged, because\n                // they should be displayed in different box (with border and padding).\n                var tokensLen = tokens.length;\n                (tokensLen === 1 && tokens[0].isLineHolder)\n                    ? (tokens[0] = token)\n                    // Consider text is '', only insert when it is the \"lineHolder\" or\n                    // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n                    : ((text || !tokensLen || isEmptyStr) && tokens.push(token));\n            }\n            // Other tokens always start a new line.\n            else {\n                // If there is '', insert it as a placeholder.\n                lines.push({tokens: [token]});\n            }\n        }\n    }\n\n    function makeFont(style) {\n        // FIXME in node-canvas fontWeight is before fontStyle\n        // Use `fontSize` `fontFamily` to check whether font properties are defined.\n        return (style.fontSize || style.fontFamily) && [\n            style.fontStyle,\n            style.fontWeight,\n            (style.fontSize || 12) + 'px',\n            // If font properties are defined, `fontFamily` should not be ignored.\n            style.fontFamily || 'sans-serif'\n        ].join(' ') || style.textFont || style.font;\n    }\n\n    var textContain = {\n\n        getWidth: getTextWidth,\n\n        getBoundingRect: getTextRect,\n\n        adjustTextPositionOnRect: adjustTextPositionOnRect,\n\n        truncateText: truncateText,\n\n        measureText: measureText,\n\n        getLineHeight: getLineHeight,\n\n        parsePlainText: parsePlainText,\n\n        parseRichText: parseRichText,\n\n        adjustTextX: adjustTextX,\n\n        adjustTextY: adjustTextY,\n\n        makeFont: makeFont,\n\n        DEFAULT_FONT: DEFAULT_FONT\n    };\n\n    module.exports = textContain;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/text.js\n// module id = 621\n// module chunks = 0 1 2","'use strict';\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var vec2 = require('./vector');\n    var v2Create = vec2.create;\n    var v2DistSquare = vec2.distSquare;\n    var mathPow = Math.pow;\n    var mathSqrt = Math.sqrt;\n\n    var EPSILON = 1e-8;\n    var EPSILON_NUMERIC = 1e-4;\n\n    var THREE_SQRT = mathSqrt(3);\n    var ONE_THIRD = 1 / 3;\n\n    // 临时变量\n    var _v0 = v2Create();\n    var _v1 = v2Create();\n    var _v2 = v2Create();\n    // var _v3 = vec2.create();\n\n    function isAroundZero(val) {\n        return val > -EPSILON && val < EPSILON;\n    }\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n    /**\n     * 计算三次贝塞尔值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return onet * onet * (onet * p0 + 3 * t * p1)\n             + t * t * (t * p3 + 3 * onet * p2);\n    }\n\n    /**\n     * 计算三次贝塞尔导数值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicDerivativeAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return 3 * (\n            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\n            + (p3 - p2) * t * t\n        );\n    }\n\n    /**\n     * 计算三次贝塞尔方程根，使用盛金公式\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} val\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function cubicRootAt(p0, p1, p2, p3, val, roots) {\n        // Evaluate roots of cubic functions\n        var a = p3 + 3 * (p1 - p2) - p0;\n        var b = 3 * (p2 - p1 * 2 + p0);\n        var c = 3 * (p1  - p0);\n        var d = p0 - val;\n\n        var A = b * b - 3 * a * c;\n        var B = b * c - 9 * a * d;\n        var C = c * c - 3 * b * d;\n\n        var n = 0;\n\n        if (isAroundZero(A) && isAroundZero(B)) {\n            if (isAroundZero(b)) {\n                roots[0] = 0;\n            }\n            else {\n                var t1 = -c / b;  //t1, t2, t3, b is not zero\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = B * B - 4 * A * C;\n\n            if (isAroundZero(disc)) {\n                var K = B / A;\n                var t1 = -b / a + K;  // t1, a is not zero\n                var t2 = -K / 2;  // t2, t3\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n                if (Y1 < 0) {\n                    Y1 = -mathPow(-Y1, ONE_THIRD);\n                }\n                else {\n                    Y1 = mathPow(Y1, ONE_THIRD);\n                }\n                if (Y2 < 0) {\n                    Y2 = -mathPow(-Y2, ONE_THIRD);\n                }\n                else {\n                    Y2 = mathPow(Y2, ONE_THIRD);\n                }\n                var t1 = (-b - (Y1 + Y2)) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else {\n                var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n                var theta = Math.acos(T) / 3;\n                var ASqrt = mathSqrt(A);\n                var tmp = Math.cos(theta);\n\n                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n                if (t3 >= 0 && t3 <= 1) {\n                    roots[n++] = t3;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算三次贝塞尔方程极限值的位置\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {Array.<number>} extrema\n     * @return {number} 有效数目\n     */\n    function cubicExtrema(p0, p1, p2, p3, extrema) {\n        var b = 6 * p2 - 12 * p1 + 6 * p0;\n        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n        var c = 3 * p1 - 3 * p0;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <=1) {\n                    extrema[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                extrema[0] = -b / (2 * a);\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    extrema[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    extrema[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 细分三次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function cubicSubdivide(p0, p1, p2, p3, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p23 = (p3 - p2) * t + p2;\n\n        var p012 = (p12 - p01) * t + p01;\n        var p123 = (p23 - p12) * t + p12;\n\n        var p0123 = (p123 - p012) * t + p012;\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n        out[3] = p0123;\n        // Seg1\n        out[4] = p0123;\n        out[5] = p123;\n        out[6] = p23;\n        out[7] = p3;\n    }\n\n    /**\n     * 投射点到三次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} [out] 投射点\n     * @return {number}\n     */\n    function cubicProjectPoint(\n        x0, y0, x1, y1, x2, y2, x3, y3,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n        var prev;\n        var next;\n        var d1;\n        var d2;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n            d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            prev = t - interval;\n            next = t + interval;\n            // t - interval\n            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n\n            d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = cubicAt(x0, x1, x2, x3, next);\n                _v2[1] = cubicAt(y0, y1, y2, y3, next);\n                d2 = v2DistSquare(_v2, _v0);\n\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = cubicAt(x0, x1, x2, x3, t);\n            out[1] = cubicAt(y0, y1, y2, y3, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    /**\n     * 计算二次方贝塞尔值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticAt(p0, p1, p2, t) {\n        var onet = 1 - t;\n        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n    }\n\n    /**\n     * 计算二次方贝塞尔导数值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticDerivativeAt(p0, p1, p2, t) {\n        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n    }\n\n    /**\n     * 计算二次方贝塞尔方程根\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function quadraticRootAt(p0, p1, p2, val, roots) {\n        var a = p0 - 2 * p1 + p2;\n        var b = 2 * (p1 - p0);\n        var c = p0 - val;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                var t1 = -b / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算二次贝塞尔方程极限值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @return {number}\n     */\n    function quadraticExtremum(p0, p1, p2) {\n        var divider = p0 + p2 - 2 * p1;\n        if (divider === 0) {\n            // p1 is center of p0 and p2\n            return 0.5;\n        }\n        else {\n            return (p0 - p1) / divider;\n        }\n    }\n\n    /**\n     * 细分二次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function quadraticSubdivide(p0, p1, p2, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p012 = (p12 - p01) * t + p01;\n\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n\n        // Seg1\n        out[3] = p012;\n        out[4] = p12;\n        out[5] = p2;\n    }\n\n    /**\n     * 投射点到二次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} out 投射点\n     * @return {number}\n     */\n    function quadraticProjectPoint(\n        x0, y0, x1, y1, x2, y2,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = quadraticAt(x0, x1, x2, _t);\n            _v1[1] = quadraticAt(y0, y1, y2, _t);\n            var d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            var prev = t - interval;\n            var next = t + interval;\n            // t - interval\n            _v1[0] = quadraticAt(x0, x1, x2, prev);\n            _v1[1] = quadraticAt(y0, y1, y2, prev);\n\n            var d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = quadraticAt(x0, x1, x2, next);\n                _v2[1] = quadraticAt(y0, y1, y2, next);\n                var d2 = v2DistSquare(_v2, _v0);\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = quadraticAt(x0, x1, x2, t);\n            out[1] = quadraticAt(y0, y1, y2, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    module.exports = {\n\n        cubicAt: cubicAt,\n\n        cubicDerivativeAt: cubicDerivativeAt,\n\n        cubicRootAt: cubicRootAt,\n\n        cubicExtrema: cubicExtrema,\n\n        cubicSubdivide: cubicSubdivide,\n\n        cubicProjectPoint: cubicProjectPoint,\n\n        quadraticAt: quadraticAt,\n\n        quadraticDerivativeAt: quadraticDerivativeAt,\n\n        quadraticRootAt: quadraticRootAt,\n\n        quadraticExtremum: quadraticExtremum,\n\n        quadraticSubdivide: quadraticSubdivide,\n\n        quadraticProjectPoint: quadraticProjectPoint\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/curve.js\n// module id = 622\n// module chunks = 0 1 2","\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n    /**\n     * 3x2矩阵操作类\n     * @exports zrender/tool/matrix\n     */\n    var matrix = {\n        /**\n         * 创建一个单位矩阵\n         * @return {Float32Array|Array.<number>}\n         */\n        create : function() {\n            var out = new ArrayCtor(6);\n            matrix.identity(out);\n\n            return out;\n        },\n        /**\n         * 设置矩阵为单位矩阵\n         * @param {Float32Array|Array.<number>} out\n         */\n        identity : function(out) {\n            out[0] = 1;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            out[4] = 0;\n            out[5] = 0;\n            return out;\n        },\n        /**\n         * 复制矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m\n         */\n        copy: function(out, m) {\n            out[0] = m[0];\n            out[1] = m[1];\n            out[2] = m[2];\n            out[3] = m[3];\n            out[4] = m[4];\n            out[5] = m[5];\n            return out;\n        },\n        /**\n         * 矩阵相乘\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m1\n         * @param {Float32Array|Array.<number>} m2\n         */\n        mul : function (out, m1, m2) {\n            // Consider matrix.mul(m, m2, m);\n            // where out is the same as m2.\n            // So use temp variable to escape error.\n            var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n            var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n            var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n            var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n            var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n            var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n            out[0] = out0;\n            out[1] = out1;\n            out[2] = out2;\n            out[3] = out3;\n            out[4] = out4;\n            out[5] = out5;\n            return out;\n        },\n        /**\n         * 平移变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        translate : function(out, a, v) {\n            out[0] = a[0];\n            out[1] = a[1];\n            out[2] = a[2];\n            out[3] = a[3];\n            out[4] = a[4] + v[0];\n            out[5] = a[5] + v[1];\n            return out;\n        },\n        /**\n         * 旋转变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {number} rad\n         */\n        rotate : function(out, a, rad) {\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n            var st = Math.sin(rad);\n            var ct = Math.cos(rad);\n\n            out[0] = aa * ct + ab * st;\n            out[1] = -aa * st + ab * ct;\n            out[2] = ac * ct + ad * st;\n            out[3] = -ac * st + ct * ad;\n            out[4] = ct * atx + st * aty;\n            out[5] = ct * aty - st * atx;\n            return out;\n        },\n        /**\n         * 缩放变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        scale : function(out, a, v) {\n            var vx = v[0];\n            var vy = v[1];\n            out[0] = a[0] * vx;\n            out[1] = a[1] * vy;\n            out[2] = a[2] * vx;\n            out[3] = a[3] * vy;\n            out[4] = a[4] * vx;\n            out[5] = a[5] * vy;\n            return out;\n        },\n        /**\n         * 求逆矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         */\n        invert : function(out, a) {\n\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n\n            var det = aa * ad - ab * ac;\n            if (!det) {\n                return null;\n            }\n            det = 1.0 / det;\n\n            out[0] = ad * det;\n            out[1] = -ab * det;\n            out[2] = -ac * det;\n            out[3] = aa * det;\n            out[4] = (ac * aty - ad * atx) * det;\n            out[5] = (ab * atx - aa * aty) * det;\n            return out;\n        }\n    };\n\n    module.exports = matrix;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/matrix.js\n// module id = 623\n// module chunks = 0 1 2","module.exports = function (date, fmt = 'YYYY-MM-DD HH:mm:ss') {\r\n  if (!date) {\r\n    return ''\r\n  }\r\n  if (typeof date === 'string') {\r\n    date = new Date(date.replace(/-/g, '/'))\r\n  }\r\n  if (typeof date === 'number') {\r\n    date = new Date(date)\r\n  }\r\n  var o = {\r\n    'M+': date.getMonth() + 1,\r\n    'D+': date.getDate(),\r\n    'h+': date.getHours() % 12 === 0 ? 12 : date.getHours() % 12,\r\n    'H+': date.getHours(),\r\n    'm+': date.getMinutes(),\r\n    's+': date.getSeconds(),\r\n    'q+': Math.floor((date.getMonth() + 3) / 3),\r\n    'S': date.getMilliseconds()\r\n  }\r\n  var week = {\r\n    '0': '\\u65e5',\r\n    '1': '\\u4e00',\r\n    '2': '\\u4e8c',\r\n    '3': '\\u4e09',\r\n    '4': '\\u56db',\r\n    '5': '\\u4e94',\r\n    '6': '\\u516d'\r\n  }\r\n  if (/(Y+)/.test(fmt)) {\r\n    fmt = fmt.replace(RegExp.$1, (date.getFullYear() + '').substr(4 - RegExp.$1.length))\r\n  }\r\n  if (/(E+)/.test(fmt)) {\r\n    fmt = fmt.replace(RegExp.$1, ((RegExp.$1.length > 1) ? (RegExp.$1.length > 2 ? '\\u661f\\u671f' : '\\u5468') : '') + week[date.getDay() + ''])\r\n  }\r\n  for (var k in o) {\r\n    if (new RegExp('(' + k + ')').test(fmt)) {\r\n      fmt = fmt.replace(RegExp.$1, (RegExp.$1.length === 1) ? (o[k]) : (('00' + o[k]).substr(('' + o[k]).length)))\r\n    }\r\n  }\r\n  return fmt\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/vux/src/tools/date/format.js","'use strict';\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n\n    var Eventful = require('../mixin/Eventful');\n    var env = require('./env');\n\n    var isDomLevel2 = (typeof window !== 'undefined') && !!window.addEventListener;\n\n    function getBoundingClientRect(el) {\n        // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n        return el.getBoundingClientRect ? el.getBoundingClientRect() : {left: 0, top: 0};\n    }\n\n    // `calculate` is optional, default false\n    function clientToLocal(el, e, out, calculate) {\n        out = out || {};\n\n        // According to the W3C Working Draft, offsetX and offsetY should be relative\n        // to the padding edge of the target element. The only browser using this convention\n        // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n        // not support the properties.\n        // (see http://www.jacklmoore.com/notes/mouse-position/)\n        // In zr painter.dom, padding edge equals to border edge.\n\n        // FIXME\n        // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n        // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n        // is too complex. So css-transfrom dont support in this case temporarily.\n        if (calculate || !env.canvasSupported) {\n            defaultGetZrXY(el, e, out);\n        }\n        // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n        // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n        // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n        // zoom-factor, overflow / opacity layers, transforms ...)\n        // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n        // <https://bugs.jquery.com/ticket/8523#comment:14>\n        // BTW3, In ff, offsetX/offsetY is always 0.\n        else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n            out.zrX = e.layerX;\n            out.zrY = e.layerY;\n        }\n        // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n        else if (e.offsetX != null) {\n            out.zrX = e.offsetX;\n            out.zrY = e.offsetY;\n        }\n        // For some other device, e.g., IOS safari.\n        else {\n            defaultGetZrXY(el, e, out);\n        }\n\n        return out;\n    }\n\n    function defaultGetZrXY(el, e, out) {\n        // This well-known method below does not support css transform.\n        var box = getBoundingClientRect(el);\n        out.zrX = e.clientX - box.left;\n        out.zrY = e.clientY - box.top;\n    }\n\n    /**\n     * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n     * `calculate` is optional, default false.\n     */\n    function normalizeEvent(el, e, calculate) {\n\n        e = e || window.event;\n\n        if (e.zrX != null) {\n            return e;\n        }\n\n        var eventType = e.type;\n        var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n        if (!isTouch) {\n            clientToLocal(el, e, e, calculate);\n            e.zrDelta = (e.wheelDelta) ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n        }\n        else {\n            var touch = eventType != 'touchend'\n                ? e.targetTouches[0]\n                : e.changedTouches[0];\n            touch && clientToLocal(el, touch, e, calculate);\n        }\n\n        return e;\n    }\n\n    function addEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.addEventListener(name, handler);\n        }\n        else {\n            el.attachEvent('on' + name, handler);\n        }\n    }\n\n    function removeEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.removeEventListener(name, handler);\n        }\n        else {\n            el.detachEvent('on' + name, handler);\n        }\n    }\n\n    /**\n     * preventDefault and stopPropagation.\n     * Notice: do not do that in zrender. Upper application\n     * do that if necessary.\n     *\n     * @memberOf module:zrender/core/event\n     * @method\n     * @param {Event} e : event对象\n     */\n    var stop = isDomLevel2\n        ? function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.cancelBubble = true;\n        }\n        : function (e) {\n            e.returnValue = false;\n            e.cancelBubble = true;\n        };\n\n    module.exports = {\n        clientToLocal: clientToLocal,\n        normalizeEvent: normalizeEvent,\n        addEventListener: addEventListener,\n        removeEventListener: removeEventListener,\n\n        stop: stop,\n        // 做向上兼容\n        Dispatcher: Eventful\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/event.js\n// module id = 625\n// module chunks = 0 1 2","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n\n\n    var arrySlice = Array.prototype.slice;\n\n    /**\n     * 事件分发器\n     * @alias module:zrender/mixin/Eventful\n     * @constructor\n     */\n    var Eventful = function () {\n        this._$handlers = {};\n    };\n\n    Eventful.prototype = {\n\n        constructor: Eventful,\n\n        /**\n         * 单次触发绑定，trigger后销毁\n         *\n         * @param {string} event 事件名\n         * @param {Function} handler 响应函数\n         * @param {Object} context\n         */\n        one: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: true,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 绑定事件\n         * @param {string} event 事件名\n         * @param {Function} handler 事件处理函数\n         * @param {Object} [context]\n         */\n        on: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: false,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 是否绑定了事件\n         * @param  {string}  event\n         * @return {boolean}\n         */\n        isSilent: function (event) {\n            var _h = this._$handlers;\n            return _h[event] && _h[event].length;\n        },\n\n        /**\n         * 解绑事件\n         * @param {string} event 事件名\n         * @param {Function} [handler] 事件处理函数\n         */\n        off: function (event, handler) {\n            var _h = this._$handlers;\n\n            if (!event) {\n                this._$handlers = {};\n                return this;\n            }\n\n            if (handler) {\n                if (_h[event]) {\n                    var newList = [];\n                    for (var i = 0, l = _h[event].length; i < l; i++) {\n                        if (_h[event][i]['h'] != handler) {\n                            newList.push(_h[event][i]);\n                        }\n                    }\n                    _h[event] = newList;\n                }\n\n                if (_h[event] && _h[event].length === 0) {\n                    delete _h[event];\n                }\n            }\n            else {\n                delete _h[event];\n            }\n\n            return this;\n        },\n\n        /**\n         * 事件分发\n         *\n         * @param {string} type 事件类型\n         */\n        trigger: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 3) {\n                    args = arrySlice.call(args, 1);\n                }\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(_h[i]['ctx']);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(_h[i]['ctx'], args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 带有context的事件分发, 最后一个参数是事件回调的context\n         * @param {string} type 事件类型\n         */\n        triggerWithContext: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 4) {\n                    args = arrySlice.call(args, 1, args.length - 1);\n                }\n                var ctx = args[args.length - 1];\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(ctx);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(ctx, args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(ctx, args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(ctx, args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        }\n    };\n\n    // 对象可以通过 onxxxx 绑定事件\n    /**\n     * @event module:zrender/mixin/Eventful#onclick\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseout\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousemove\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousewheel\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousedown\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseup\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrag\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragstart\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragend\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragenter\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragleave\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrop\n     * @type {Function}\n     * @default null\n     */\n\n    module.exports = Eventful;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Eventful.js\n// module id = 626\n// module chunks = 0 1 2","/**\n * @module zrender/tool/color\n */\n\n\n    var LRU = require('../core/LRU');\n\n    var kCSSColorTable = {\n        'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\n        'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\n        'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\n        'beige': [245,245,220,1], 'bisque': [255,228,196,1],\n        'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\n        'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\n        'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\n        'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\n        'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\n        'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\n        'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\n        'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\n        'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\n        'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\n        'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\n        'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\n        'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\n        'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\n        'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\n        'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\n        'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\n        'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\n        'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\n        'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\n        'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\n        'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\n        'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\n        'gray': [128,128,128,1], 'green': [0,128,0,1],\n        'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\n        'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\n        'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\n        'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\n        'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\n        'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\n        'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\n        'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\n        'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\n        'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\n        'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\n        'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\n        'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\n        'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\n        'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\n        'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\n        'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\n        'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\n        'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\n        'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\n        'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\n        'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\n        'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\n        'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\n        'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\n        'orange': [255,165,0,1], 'orangered': [255,69,0,1],\n        'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\n        'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\n        'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\n        'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\n        'pink': [255,192,203,1], 'plum': [221,160,221,1],\n        'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\n        'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\n        'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\n        'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\n        'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\n        'sienna': [160,82,45,1], 'silver': [192,192,192,1],\n        'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\n        'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\n        'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\n        'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\n        'teal': [0,128,128,1], 'thistle': [216,191,216,1],\n        'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\n        'violet': [238,130,238,1], 'wheat': [245,222,179,1],\n        'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\n        'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\n    };\n\n    function clampCssByte(i) {  // Clamp to integer 0 .. 255.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 255 ? 255 : i;\n    }\n\n    function clampCssAngle(i) {  // Clamp to integer 0 .. 360.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 360 ? 360 : i;\n    }\n\n    function clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\n        return f < 0 ? 0 : f > 1 ? 1 : f;\n    }\n\n    function parseCssInt(str) {  // int or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssByte(parseFloat(str) / 100 * 255);\n        }\n        return clampCssByte(parseInt(str, 10));\n    }\n\n    function parseCssFloat(str) {  // float or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssFloat(parseFloat(str) / 100);\n        }\n        return clampCssFloat(parseFloat(str));\n    }\n\n    function cssHueToRgb(m1, m2, h) {\n        if (h < 0) {\n            h += 1;\n        }\n        else if (h > 1) {\n            h -= 1;\n        }\n\n        if (h * 6 < 1) {\n            return m1 + (m2 - m1) * h * 6;\n        }\n        if (h * 2 < 1) {\n            return m2;\n        }\n        if (h * 3 < 2) {\n            return m1 + (m2 - m1) * (2/3 - h) * 6;\n        }\n        return m1;\n    }\n\n    function lerp(a, b, p) {\n        return a + (b - a) * p;\n    }\n\n    function setRgba(out, r, g, b, a) {\n        out[0] = r; out[1] = g; out[2] = b; out[3] = a;\n        return out;\n    }\n    function copyRgba(out, a) {\n        out[0] = a[0]; out[1] = a[1]; out[2] = a[2]; out[3] = a[3];\n        return out;\n    }\n    var colorCache = new LRU(20);\n    var lastRemovedArr = null;\n    function putToCache(colorStr, rgbaArr) {\n        // Reuse removed array\n        if (lastRemovedArr) {\n            copyRgba(lastRemovedArr, rgbaArr);\n        }\n        lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || (rgbaArr.slice()));\n    }\n    /**\n     * @param {string} colorStr\n     * @param {Array.<number>} out\n     * @return {Array.<number>}\n     * @memberOf module:zrender/util/color\n     */\n    function parse(colorStr, rgbaArr) {\n        if (!colorStr) {\n            return;\n        }\n        rgbaArr = rgbaArr || [];\n\n        var cached = colorCache.get(colorStr);\n        if (cached) {\n            return copyRgba(rgbaArr, cached);\n        }\n\n        // colorStr may be not string\n        colorStr = colorStr + '';\n        // Remove all whitespace, not compliant, but should just be more accepting.\n        var str = colorStr.replace(/ /g, '').toLowerCase();\n\n        // Color keywords (and transparent) lookup.\n        if (str in kCSSColorTable) {\n            copyRgba(rgbaArr, kCSSColorTable[str]);\n            putToCache(colorStr, rgbaArr);\n            return rgbaArr;\n        }\n\n        // #abc and #abc123 syntax.\n        if (str.charAt(0) === '#') {\n            if (str.length === 4) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xfff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n                    (iv & 0xf0) | ((iv & 0xf0) >> 4),\n                    (iv & 0xf) | ((iv & 0xf) << 4),\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n            else if (str.length === 7) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xffffff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    (iv & 0xff0000) >> 16,\n                    (iv & 0xff00) >> 8,\n                    iv & 0xff,\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n\n            return;\n        }\n        var op = str.indexOf('('), ep = str.indexOf(')');\n        if (op !== -1 && ep + 1 === str.length) {\n            var fname = str.substr(0, op);\n            var params = str.substr(op + 1, ep - (op + 1)).split(',');\n            var alpha = 1;  // To allow case fallthrough.\n            switch (fname) {\n                case 'rgba':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    alpha = parseCssFloat(params.pop()); // jshint ignore:line\n                // Fall through.\n                case 'rgb':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    setRgba(rgbaArr,\n                        parseCssInt(params[0]),\n                        parseCssInt(params[1]),\n                        parseCssInt(params[2]),\n                        alpha\n                    );\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsla':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    params[3] = parseCssFloat(params[3]);\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsl':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                default:\n                    return;\n            }\n        }\n\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return;\n    }\n\n    /**\n     * @param {Array.<number>} hsla\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} rgba\n     */\n    function hsla2rgba(hsla, rgba) {\n        var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parseCssFloat(hsla[1]);\n        var l = parseCssFloat(hsla[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n\n        rgba = rgba || [];\n        setRgba(rgba,\n            clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255),\n            1\n        );\n\n        if (hsla.length === 4) {\n            rgba[3] = hsla[3];\n        }\n\n        return rgba;\n    }\n\n    /**\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} hsla\n     */\n    function rgba2hsla(rgba) {\n        if (!rgba) {\n            return;\n        }\n\n        // RGB from 0 to 255\n        var R = rgba[0] / 255;\n        var G = rgba[1] / 255;\n        var B = rgba[2] / 255;\n\n        var vMin = Math.min(R, G, B); // Min. value of RGB\n        var vMax = Math.max(R, G, B); // Max. value of RGB\n        var delta = vMax - vMin; // Delta RGB value\n\n        var L = (vMax + vMin) / 2;\n        var H;\n        var S;\n        // HSL results from 0 to 1\n        if (delta === 0) {\n            H = 0;\n            S = 0;\n        }\n        else {\n            if (L < 0.5) {\n                S = delta / (vMax + vMin);\n            }\n            else {\n                S = delta / (2 - vMax - vMin);\n            }\n\n            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\n            if (R === vMax) {\n                H = deltaB - deltaG;\n            }\n            else if (G === vMax) {\n                H = (1 / 3) + deltaR - deltaB;\n            }\n            else if (B === vMax) {\n                H = (2 / 3) + deltaG - deltaR;\n            }\n\n            if (H < 0) {\n                H += 1;\n            }\n\n            if (H > 1) {\n                H -= 1;\n            }\n        }\n\n        var hsla = [H * 360, S, L];\n\n        if (rgba[3] != null) {\n            hsla.push(rgba[3]);\n        }\n\n        return hsla;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number} level\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function lift(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            for (var i = 0; i < 3; i++) {\n                if (level < 0) {\n                    colorArr[i] = colorArr[i] * (1 - level) | 0;\n                }\n                else {\n                    colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\n                }\n            }\n            return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function toHex(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\n        }\n    }\n\n    /**\n     * Map value to color. Faster than mapToColor methods because color is represented by rgba array.\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<Array.<number>>} colors List of rgba color array\n     * @param {Array.<number>} [out] Mapped gba color array\n     * @return {Array.<number>} will be null/undefined if input illegal.\n     */\n    function fastMapToColor(normalizedValue, colors, out) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        out = out || [];\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = colors[leftIndex];\n        var rightColor = colors[rightIndex];\n        var dv = value - leftIndex;\n        out[0] = clampCssByte(lerp(leftColor[0], rightColor[0], dv));\n        out[1] = clampCssByte(lerp(leftColor[1], rightColor[1], dv));\n        out[2] = clampCssByte(lerp(leftColor[2], rightColor[2], dv));\n        out[3] = clampCssFloat(lerp(leftColor[3], rightColor[3], dv));\n\n        return out;\n    }\n    /**\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<string>} colors Color list.\n     * @param {boolean=} fullOutput Default false.\n     * @return {(string|Object)} Result color. If fullOutput,\n     *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n     * @memberOf module:zrender/util/color\n     */\n    function mapToColor(normalizedValue, colors, fullOutput) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = parse(colors[leftIndex]);\n        var rightColor = parse(colors[rightIndex]);\n        var dv = value - leftIndex;\n\n        var color = stringify(\n            [\n                clampCssByte(lerp(leftColor[0], rightColor[0], dv)),\n                clampCssByte(lerp(leftColor[1], rightColor[1], dv)),\n                clampCssByte(lerp(leftColor[2], rightColor[2], dv)),\n                clampCssFloat(lerp(leftColor[3], rightColor[3], dv))\n            ],\n            'rgba'\n        );\n\n        return fullOutput\n            ? {\n                color: color,\n                leftIndex: leftIndex,\n                rightIndex: rightIndex,\n                value: value\n            }\n            : color;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} h 0 ~ 360, ignore when null.\n     * @param {number=} s 0 ~ 1, ignore when null.\n     * @param {number=} l 0 ~ 1, ignore when null.\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyHSL(color, h, s, l) {\n        color = parse(color);\n\n        if (color) {\n            color = rgba2hsla(color);\n            h != null && (color[0] = clampCssAngle(h));\n            s != null && (color[1] = parseCssFloat(s));\n            l != null && (color[2] = parseCssFloat(l));\n\n            return stringify(hsla2rgba(color), 'rgba');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} alpha 0 ~ 1\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyAlpha(color, alpha) {\n        color = parse(color);\n\n        if (color && alpha != null) {\n            color[3] = clampCssFloat(alpha);\n            return stringify(color, 'rgba');\n        }\n    }\n\n    /**\n     * @param {Array.<number>} arrColor like [12,33,44,0.4]\n     * @param {string} type 'rgba', 'hsva', ...\n     * @return {string} Result color. (If input illegal, return undefined).\n     */\n    function stringify(arrColor, type) {\n        if (!arrColor || !arrColor.length) {\n            return;\n        }\n        var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n        if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n            colorStr += ',' + arrColor[3];\n        }\n        return type + '(' + colorStr + ')';\n    }\n\n    module.exports = {\n        parse: parse,\n        lift: lift,\n        toHex: toHex,\n        fastMapToColor: fastMapToColor,\n        mapToColor: mapToColor,\n        modifyHSL: modifyHSL,\n        modifyAlpha: modifyAlpha,\n        stringify: stringify\n    };\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/color.js\n// module id = 627\n// module chunks = 0 1 2","import { throttle } from 'common/js/util'\nimport dateFormat from 'vux/src/tools/date/format.js'\n\n\nconst hold = 4000\n\nexport const listLoadMixin = {\nmethods: {\n_refresh: throttle(function () {\nthis.refresh()\n}, hold),\n_loadMore: throttle(function () {\nthis.loadMore()\n}, hold)\n}\n}\n\nexport const chartDataMixin = {\nmethods: {\nnormalizLineData (dataObj) {\nlet obj = {\ncolumns: ['日期'],\nrows: []\n}\ndataObj.bars.forEach(item => {\nobj.columns.push(item.name)\n})\nfor (let i = 0; i < dataObj.times.length; i++) {\nlet o = {}\no['日期'] = dataObj.times[i]\nfor (let j = 0; j < dataObj.bars.length; j++) {\no[dataObj.bars[j].name] = dataObj.bars[j].data[i]\n}\nobj.rows.push(o)\n}\nreturn obj\n}\n}\n}\n\nexport const dateMixin = {\nfilters: {\nformatDate: function (date) {\nreturn dateFormat(date, 'YYYY-MM-DD')\n}\n}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/common/js/mixin.js","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Model = require('../../model/Model');\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n\n    var helper = {};\n\n    // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n    // allAxesInfo should be updated when setOption performed.\n    helper.collect = function (ecModel, api) {\n        var result = {\n            /**\n             * key: makeKey(axis.model)\n             * value: {\n             *      axis,\n             *      coordSys,\n             *      axisPointerModel,\n             *      triggerTooltip,\n             *      involveSeries,\n             *      snap,\n             *      seriesModels,\n             *      seriesDataCount\n             * }\n             */\n            axesInfo: {},\n            seriesInvolved: false,\n            /**\n             * key: makeKey(coordSys.model)\n             * value: Object: key makeKey(axis.model), value: axisInfo\n             */\n            coordSysAxesInfo: {},\n            coordSysMap: {}\n        };\n\n        collectAxesInfo(result, ecModel, api);\n\n        // Check seriesInvolved for performance, in case too many series in some chart.\n        result.seriesInvolved && collectSeriesInfo(result, ecModel);\n\n        return result;\n    };\n\n    function collectAxesInfo(result, ecModel, api) {\n        var globalTooltipModel = ecModel.getComponent('tooltip');\n        var globalAxisPointerModel = ecModel.getComponent('axisPointer');\n        // links can only be set on global.\n        var linksOption = globalAxisPointerModel.get('link', true) || [];\n        var linkGroups = [];\n\n        // Collect axes info.\n        each(api.getCoordinateSystems(), function (coordSys) {\n            // Some coordinate system do not support axes, like geo.\n            if (!coordSys.axisPointerEnabled) {\n                return;\n            }\n\n            var coordSysKey = makeKey(coordSys.model);\n            var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n            result.coordSysMap[coordSysKey] = coordSys;\n\n            // Set tooltip (like 'cross') is a convienent way to show axisPointer\n            // for user. So we enable seting tooltip on coordSys model.\n            var coordSysModel = coordSys.model;\n            var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n\n            each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null));\n\n            // If axis tooltip used, choose tooltip axis for each coordSys.\n            // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n            if (coordSys.getTooltipAxes\n                && globalTooltipModel\n                // If tooltip.showContent is set as false, tooltip will not\n                // show but axisPointer will show as normal.\n                && baseTooltipModel.get('show')\n            ) {\n                // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n                // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n                var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n                var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n                var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n                if (triggerAxis || cross) {\n                    each(tooltipAxes.baseAxes, curry(\n                        saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis\n                    ));\n                }\n                if (cross) {\n                    each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n                }\n            }\n\n            // fromTooltip: true | false | 'cross'\n            // triggerTooltip: true | false | null\n            function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n                var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n\n                var axisPointerShow = axisPointerModel.get('show');\n                if (!axisPointerShow || (\n                    axisPointerShow === 'auto'\n                    && !fromTooltip\n                    && !isHandleTrigger(axisPointerModel)\n                )) {\n                    return;\n                }\n\n                if (triggerTooltip == null) {\n                    triggerTooltip = axisPointerModel.get('triggerTooltip');\n                }\n\n                axisPointerModel = fromTooltip\n                    ? makeAxisPointerModel(\n                        axis, baseTooltipModel, globalAxisPointerModel, ecModel,\n                        fromTooltip, triggerTooltip\n                    )\n                    : axisPointerModel;\n\n                var snap = axisPointerModel.get('snap');\n                var key = makeKey(axis.model);\n                var involveSeries = triggerTooltip || snap || axis.type === 'category';\n\n                // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n                var axisInfo = result.axesInfo[key] = {\n                    key: key,\n                    axis: axis,\n                    coordSys: coordSys,\n                    axisPointerModel: axisPointerModel,\n                    triggerTooltip: triggerTooltip,\n                    involveSeries: involveSeries,\n                    snap: snap,\n                    useHandle: isHandleTrigger(axisPointerModel),\n                    seriesModels: []\n                };\n                axesInfoInCoordSys[key] = axisInfo;\n                result.seriesInvolved |= involveSeries;\n\n                var groupIndex = getLinkGroupIndex(linksOption, axis);\n                if (groupIndex != null) {\n                    var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {axesInfo: {}});\n                    linkGroup.axesInfo[key] = axisInfo;\n                    linkGroup.mapper = linksOption[groupIndex].mapper;\n                    axisInfo.linkGroup = linkGroup;\n                }\n            }\n        });\n    }\n\n    function makeAxisPointerModel(\n        axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip\n    ) {\n        var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n        var volatileOption = {};\n\n        each(\n            [\n                'type', 'snap', 'lineStyle', 'shadowStyle', 'label',\n                'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'\n            ],\n            function (field) {\n                volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n            }\n        );\n\n        // category axis do not auto snap, otherwise some tick that do not\n        // has value can not be hovered. value/time/log axis default snap if\n        // triggered from tooltip and trigger tooltip.\n        volatileOption.snap = axis.type !== 'category' && !!triggerTooltip;\n\n        // Compatibel with previous behavior, tooltip axis do not show label by default.\n        // Only these properties can be overrided from tooltip to axisPointer.\n        if (tooltipAxisPointerModel.get('type') === 'cross') {\n            volatileOption.type = 'line';\n        }\n        var labelOption = volatileOption.label || (volatileOption.label = {});\n        // Follow the convention, do not show label when triggered by tooltip by default.\n        labelOption.show == null && (labelOption.show = false);\n\n        if (fromTooltip === 'cross') {\n            // When 'cross', both axes show labels.\n            labelOption.show = true;\n            // If triggerTooltip, this is a base axis, which should better not use cross style\n            // (cross style is dashed by default)\n            if (!triggerTooltip) {\n                var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n                crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n            }\n        }\n\n        return axis.model.getModel(\n            'axisPointer',\n            new Model(volatileOption, globalAxisPointerModel, ecModel)\n        );\n    }\n\n    function collectSeriesInfo(result, ecModel) {\n        // Prepare data for axis trigger\n        ecModel.eachSeries(function (seriesModel) {\n\n            // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n            var coordSys = seriesModel.coordinateSystem;\n            var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n            var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n            if (!coordSys\n                || seriesTooltipTrigger === 'none'\n                || seriesTooltipTrigger === false\n                || seriesTooltipTrigger === 'item'\n                || seriesTooltipShow === false\n                || seriesModel.get('axisPointer.show', true) === false\n            ) {\n                return;\n            }\n\n            each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n                var axis = axisInfo.axis;\n                if (coordSys.getAxis(axis.dim) === axis) {\n                    axisInfo.seriesModels.push(seriesModel);\n                    axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n                    axisInfo.seriesDataCount += seriesModel.getData().count();\n                }\n            });\n\n        }, this);\n    }\n\n    /**\n     * For example:\n     * {\n     *     axisPointer: {\n     *         links: [{\n     *             xAxisIndex: [2, 4],\n     *             yAxisIndex: 'all'\n     *         }, {\n     *             xAxisId: ['a5', 'a7'],\n     *             xAxisName: 'xxx'\n     *         }]\n     *     }\n     * }\n     */\n    function getLinkGroupIndex(linksOption, axis) {\n        var axisModel = axis.model;\n        var dim = axis.dim;\n        for (var i = 0; i < linksOption.length; i++) {\n            var linkOption = linksOption[i] || {};\n            if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id)\n                || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex)\n                || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)\n            ) {\n                return i;\n            }\n        }\n    }\n\n    function checkPropInLink(linkPropValue, axisPropValue) {\n        return linkPropValue === 'all'\n            || (zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0)\n            || linkPropValue === axisPropValue;\n    }\n\n    helper.fixValue = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        if (!axisInfo) {\n            return;\n        }\n\n        var axisPointerModel = axisInfo.axisPointerModel;\n        var scale = axisInfo.axis.scale;\n        var option = axisPointerModel.option;\n        var status = axisPointerModel.get('status');\n        var value = axisPointerModel.get('value');\n\n        // Parse init value for category and time axis.\n        if (value != null) {\n            value = scale.parse(value);\n        }\n\n        var useHandle = isHandleTrigger(axisPointerModel);\n        // If `handle` used, `axisPointer` will always be displayed, so value\n        // and status should be initialized.\n        if (status == null) {\n            option.status = useHandle ? 'show' : 'hide';\n        }\n\n        var extent = scale.getExtent().slice();\n        extent[0] > extent[1] && extent.reverse();\n\n        if (// Pick a value on axis when initializing.\n            value == null\n            // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n            // where we should re-pick a value to keep `handle` displaying normally.\n            || value > extent[1]\n        ) {\n            // Make handle displayed on the end of the axis when init, which looks better.\n            value = extent[1];\n        }\n        if (value < extent[0]) {\n            value = extent[0];\n        }\n\n        option.value = value;\n\n        if (useHandle) {\n            option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n        }\n    };\n\n    helper.getAxisInfo = function (axisModel) {\n        var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n        return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n    };\n\n    helper.getAxisPointerModel = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        return axisInfo && axisInfo.axisPointerModel;\n    };\n\n    function isHandleTrigger(axisPointerModel) {\n        return !!axisPointerModel.get('handle.show');\n    }\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @return {string} unique key\n     */\n    var makeKey = helper.makeKey = function (model) {\n        return model.type + '||' + model.id;\n    };\n\n    module.exports = helper;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/modelHelper.js\n// module id = 629\n// module chunks = 0 1 2","/**\n * List for data storage\n * @module echarts/data/List\n */\n\n\n    var UNDEFINED = 'undefined';\n    var globalObj = typeof window === 'undefined' ? global : window;\n    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\n        ? Array : globalObj.Float64Array;\n    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\n        ? Array : globalObj.Int32Array;\n\n    var dataCtors = {\n        'float': Float64Array,\n        'int': Int32Array,\n        // Ordinal data type can be string or int\n        'ordinal': Array,\n        'number': Array,\n        'time': Array\n    };\n\n    var Model = require('../model/Model');\n    var DataDiffer = require('./DataDiffer');\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var isObject = zrUtil.isObject;\n\n    var TRANSFERABLE_PROPERTIES = [\n        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\n    ];\n\n    function transferProperties(a, b) {\n        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n            if (b.hasOwnProperty(propName)) {\n                a[propName] = b[propName];\n            }\n        });\n\n        a.__wrappedMethods = b.__wrappedMethods;\n    }\n\n    function DefaultDataProvider(dataArray) {\n        this._array = dataArray || [];\n    }\n\n    DefaultDataProvider.prototype.pure = false;\n\n    DefaultDataProvider.prototype.count = function () {\n        return this._array.length;\n    };\n    DefaultDataProvider.prototype.getItem = function (idx) {\n        return this._array[idx];\n    };\n\n    /**\n     * @constructor\n     * @alias module:echarts/data/List\n     *\n     * @param {Array.<string|Object>} dimensions\n     *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n     *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n     * @param {module:echarts/model/Model} hostModel\n     */\n    var List = function (dimensions, hostModel) {\n\n        dimensions = dimensions || ['x', 'y'];\n\n        var dimensionInfos = {};\n        var dimensionNames = [];\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimensionName;\n            var dimensionInfo = {};\n            if (typeof dimensions[i] === 'string') {\n                dimensionName = dimensions[i];\n                dimensionInfo = {\n                    name: dimensionName,\n                    coordDim: dimensionName,\n                    coordDimIndex: 0,\n                    stackable: false,\n                    // Type can be 'float', 'int', 'number'\n                    // Default is number, Precision of float may not enough\n                    type: 'number'\n                };\n            }\n            else {\n                dimensionInfo = dimensions[i];\n                dimensionName = dimensionInfo.name;\n                dimensionInfo.type = dimensionInfo.type || 'number';\n                if (!dimensionInfo.coordDim) {\n                    dimensionInfo.coordDim = dimensionName;\n                    dimensionInfo.coordDimIndex = 0;\n                }\n            }\n            dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n            dimensionNames.push(dimensionName);\n            dimensionInfos[dimensionName] = dimensionInfo;\n        }\n\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        this.dimensions = dimensionNames;\n\n        /**\n         * Infomation of each data dimension, like data type.\n         * @type {Object}\n         */\n        this._dimensionInfos = dimensionInfos;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.hostModel = hostModel;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.dataType;\n\n        /**\n         * Indices stores the indices of data subset after filtered.\n         * This data subset will be used in chart.\n         * @type {Array.<number>}\n         * @readOnly\n         */\n        this.indices = [];\n\n        /**\n         * Data storage\n         * @type {Object.<key, TypedArray|Array>}\n         * @private\n         */\n        this._storage = {};\n\n        /**\n         * @type {Array.<string>}\n         */\n        this._nameList = [];\n        /**\n         * @type {Array.<string>}\n         */\n        this._idList = [];\n\n        /**\n         * Models of data option is stored sparse for optimizing memory cost\n         * @type {Array.<module:echarts/model/Model>}\n         * @private\n         */\n        this._optionModels = [];\n\n        /**\n         * @param {module:echarts/data/List}\n         */\n        this.stackedOn = null;\n\n        /**\n         * Global visual properties after visual coding\n         * @type {Object}\n         * @private\n         */\n        this._visual = {};\n\n        /**\n         * Globel layout properties.\n         * @type {Object}\n         * @private\n         */\n        this._layout = {};\n\n        /**\n         * Item visual properties after visual coding\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemVisuals = [];\n\n        /**\n         * Item layout properties after layout\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemLayouts = [];\n\n        /**\n         * Graphic elemnents\n         * @type {Array.<module:zrender/Element>}\n         * @private\n         */\n        this._graphicEls = [];\n\n        /**\n         * @type {Array.<Array|Object>}\n         * @private\n         */\n        this._rawData;\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._extent;\n    };\n\n    var listProto = List.prototype;\n\n    listProto.type = 'list';\n\n    /**\n     * If each data item has it's own option\n     * @type {boolean}\n     */\n    listProto.hasItemOption = true;\n\n    /**\n     * Get dimension name\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     * @return {string} Concrete dim name.\n     */\n    listProto.getDimension = function (dim) {\n        if (!isNaN(dim)) {\n            dim = this.dimensions[dim] || dim;\n        }\n        return dim;\n    };\n\n    /**\n     * Get type and stackable info of particular dimension\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     */\n    listProto.getDimensionInfo = function (dim) {\n        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n    };\n\n    /**\n     * Initialize from data\n     * @param {Array.<Object|number|Array>} data\n     * @param {Array.<string>} [nameList]\n     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n     */\n    listProto.initData = function (data, nameList, dimValueGetter) {\n        data = data || [];\n\n        var isDataArray = zrUtil.isArray(data);\n        if (isDataArray) {\n            data = new DefaultDataProvider(data);\n        }\n        if (__DEV__) {\n            if (!isDataArray && (typeof data.getItem != 'function' || typeof data.count != 'function')) {\n                throw new Error('Inavlid data provider.');\n            }\n        }\n\n        this._rawData = data;\n\n        // Clear\n        var storage = this._storage = {};\n        var indices = this.indices = [];\n\n        var dimensions = this.dimensions;\n        var dimensionInfoMap = this._dimensionInfos;\n\n        var size = data.count();\n\n        var idList = [];\n        var nameRepeatCount = {};\n        var nameDimIdx;\n\n        nameList = nameList || [];\n\n        // Init storage\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimInfo = dimensionInfoMap[dimensions[i]];\n            dimInfo.otherDims.itemName === 0 && (nameDimIdx = i);\n            var DataCtor = dataCtors[dimInfo.type];\n            storage[dimensions[i]] = new DataCtor(size);\n        }\n\n        var self = this;\n        if (!dimValueGetter) {\n            self.hasItemOption = false;\n        }\n        // Default dim value getter\n        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n            var value = modelUtil.getDataItemValue(dataItem);\n            // If any dataItem is like { value: 10 }\n            if (modelUtil.isDataItemOption(dataItem)) {\n                self.hasItemOption = true;\n            }\n            return modelUtil.converDataValue(\n                (value instanceof Array)\n                    ? value[dimIndex]\n                    // If value is a single number or something else not array.\n                    : value,\n                dimensionInfoMap[dimName]\n            );\n        };\n\n        for (var i = 0; i < size; i++) {\n            // NOTICE: Try not to write things into dataItem\n            var dataItem = data.getItem(i);\n            // Each data item is value\n            // [1, 2]\n            // 2\n            // Bar chart, line chart which uses category axis\n            // only gives the 'y' value. 'x' value is the indices of cateogry\n            // Use a tempValue to normalize the value to be a (x, y) value\n\n            // Store the data by dimensions\n            for (var k = 0; k < dimensions.length; k++) {\n                var dim = dimensions[k];\n                var dimStorage = storage[dim];\n                // PENDING NULL is empty or zero\n                dimStorage[i] = dimValueGetter(dataItem, dim, i, k);\n            }\n\n            indices.push(i);\n        }\n\n        // Use the name in option and create id\n        for (var i = 0; i < size; i++) {\n            var dataItem = data.getItem(i);\n            if (!nameList[i] && dataItem) {\n                if (dataItem.name != null) {\n                    nameList[i] = dataItem.name;\n                }\n                else if (nameDimIdx != null) {\n                    nameList[i] = storage[dimensions[nameDimIdx]][i];\n                }\n            }\n            var name = nameList[i] || '';\n            // Try using the id in option\n            var id = dataItem && dataItem.id;\n\n            if (!id && name) {\n                // Use name as id and add counter to avoid same name\n                nameRepeatCount[name] = nameRepeatCount[name] || 0;\n                id = name;\n                if (nameRepeatCount[name] > 0) {\n                    id += '__ec__' + nameRepeatCount[name];\n                }\n                nameRepeatCount[name]++;\n            }\n            id && (idList[i] = id);\n        }\n\n        this._nameList = nameList;\n        this._idList = idList;\n    };\n\n    /**\n     * @return {number}\n     */\n    listProto.count = function () {\n        return this.indices.length;\n    };\n\n    /**\n     * Get value. Return NaN if idx is out of range.\n     * @param {string} dim Dim must be concrete name.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.get = function (dim, idx, stack) {\n        var storage = this._storage;\n        var dataIndex = this.indices[idx];\n\n        // If value not exists\n        if (dataIndex == null || !storage[dim]) {\n            return NaN;\n        }\n\n        var value = storage[dim][dataIndex];\n        // FIXME ordinal data type is not stackable\n        if (stack) {\n            var dimensionInfo = this._dimensionInfos[dim];\n            if (dimensionInfo && dimensionInfo.stackable) {\n                var stackedOn = this.stackedOn;\n                while (stackedOn) {\n                    // Get no stacked data of stacked on\n                    var stackedValue = stackedOn.get(dim, idx);\n                    // Considering positive stack, negative stack and empty data\n                    if ((value >= 0 && stackedValue > 0)  // Positive stack\n                        || (value <= 0 && stackedValue < 0) // Negative stack\n                    ) {\n                        value += stackedValue;\n                    }\n                    stackedOn = stackedOn.stackedOn;\n                }\n            }\n        }\n        return value;\n    };\n\n    /**\n     * Get value for multi dimensions.\n     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.getValues = function (dimensions, idx, stack) {\n        var values = [];\n\n        if (!zrUtil.isArray(dimensions)) {\n            stack = idx;\n            idx = dimensions;\n            dimensions = this.dimensions;\n        }\n\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            values.push(this.get(dimensions[i], idx, stack));\n        }\n\n        return values;\n    };\n\n    /**\n     * If value is NaN. Inlcuding '-'\n     * @param {string} dim\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.hasValue = function (idx) {\n        var dimensions = this.dimensions;\n        var dimensionInfos = this._dimensionInfos;\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            if (\n                // Ordinal type can be string or number\n                dimensionInfos[dimensions[i]].type !== 'ordinal'\n                && isNaN(this.get(dimensions[i], idx))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * Get extent of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     * @param {Function} filter\n     */\n    listProto.getDataExtent = function (dim, stack, filter) {\n        dim = this.getDimension(dim);\n        var dimData = this._storage[dim];\n        var dimInfo = this.getDimensionInfo(dim);\n        stack = (dimInfo && dimInfo.stackable) && stack;\n        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\n        var value;\n        if (dimExtent) {\n            return dimExtent;\n        }\n        // var dimInfo = this._dimensionInfos[dim];\n        if (dimData) {\n            var min = Infinity;\n            var max = -Infinity;\n            // var isOrdinal = dimInfo.type === 'ordinal';\n            for (var i = 0, len = this.count(); i < len; i++) {\n                value = this.get(dim, i, stack);\n                // FIXME\n                // if (isOrdinal && typeof value === 'string') {\n                //     value = zrUtil.indexOf(dimData, value);\n                // }\n                if (!filter || filter(value, dim, i)) {\n                    value < min && (min = value);\n                    value > max && (max = value);\n                }\n            }\n            return (this._extent[dim + !!stack] = [min, max]);\n        }\n        else {\n            return [Infinity, -Infinity];\n        }\n    };\n\n    /**\n     * Get sum of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getSum = function (dim, stack) {\n        var dimData = this._storage[dim];\n        var sum = 0;\n        if (dimData) {\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var value = this.get(dim, i, stack);\n                if (!isNaN(value)) {\n                    sum += value;\n                }\n            }\n        }\n        return sum;\n    };\n\n    /**\n     * Retreive the index with given value\n     * @param {number} idx\n     * @param {number} value\n     * @return {number}\n     */\n    // FIXME Precision of float value\n    listProto.indexOf = function (dim, value) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var indices = this.indices;\n\n        if (dimData) {\n            for (var i = 0, len = indices.length; i < len; i++) {\n                var rawIndex = indices[i];\n                if (dimData[rawIndex] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given name\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfName = function (name) {\n        var indices = this.indices;\n        var nameList = this._nameList;\n\n        for (var i = 0, len = indices.length; i < len; i++) {\n            var rawIndex = indices[i];\n            if (nameList[rawIndex] === name) {\n                return i;\n            }\n        }\n\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given raw data index\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfRawIndex = function (rawIndex) {\n        // Indices are ascending\n        var indices = this.indices;\n\n        // If rawIndex === dataIndex\n        var rawDataIndex = indices[rawIndex];\n        if (rawDataIndex != null && rawDataIndex === rawIndex) {\n            return rawIndex;\n        }\n\n        var left = 0;\n        var right = indices.length - 1;\n        while (left <= right) {\n            var mid = (left + right) / 2 | 0;\n            if (indices[mid] < rawIndex) {\n                left = mid + 1;\n            }\n            else if (indices[mid] > rawIndex) {\n                right = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index of nearest value\n     * @param {string} dim\n     * @param {number} value\n     * @param {boolean} stack If given value is after stacked\n     * @param {number} [maxDistance=Infinity]\n     * @return {Array.<number>} Considere multiple points has the same value.\n     */\n    listProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var nearestIndices = [];\n\n        if (!dimData) {\n            return nearestIndices;\n        }\n\n        if (maxDistance == null) {\n            maxDistance = Infinity;\n        }\n\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n        for (var i = 0, len = this.count(); i < len; i++) {\n            var diff = value - this.get(dim, i, stack);\n            var dist = Math.abs(diff);\n            if (diff <= maxDistance && dist <= minDist) {\n                // For the case of two data are same on xAxis, which has sequence data.\n                // Show the nearest index\n                // https://github.com/ecomfe/echarts/issues/2869\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    nearestIndices.length = 0;\n                }\n                nearestIndices.push(i);\n            }\n        }\n        return nearestIndices;\n    };\n\n    /**\n     * Get raw data index\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawIndex = function (idx) {\n        var rawIdx = this.indices[idx];\n        return rawIdx == null ? -1 : rawIdx;\n    };\n\n    /**\n     * Get raw data item\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawDataItem = function (idx) {\n        return this._rawData.getItem(this.getRawIndex(idx));\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getName = function (idx) {\n        return this._nameList[this.indices[idx]] || '';\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getId = function (idx) {\n        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\n    };\n\n\n    function normalizeDimensions(dimensions) {\n        if (!zrUtil.isArray(dimensions)) {\n            dimensions = [dimensions];\n        }\n        return dimensions;\n    }\n\n    /**\n     * Data iteration\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     *\n     * @example\n     *  list.each('x', function (x, idx) {});\n     *  list.each(['x', 'y'], function (x, y, idx) {});\n     *  list.each(function (idx) {})\n     */\n    listProto.each = function (dims, cb, stack, context) {\n        if (typeof dims === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dims;\n            dims = [];\n        }\n\n        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n\n        var value = [];\n        var dimSize = dims.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            // Simple optimization\n            switch (dimSize) {\n                case 0:\n                    cb.call(context, i);\n                    break;\n                case 1:\n                    cb.call(context, this.get(dims[0], i, stack), i);\n                    break;\n                case 2:\n                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n                    break;\n                default:\n                    for (var k = 0; k < dimSize; k++) {\n                        value[k] = this.get(dims[k], i, stack);\n                    }\n                    // Index\n                    value[k] = i;\n                    cb.apply(context, value);\n            }\n        }\n    };\n\n    /**\n     * Data filter\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     */\n    listProto.filterSelf = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var newIndices = [];\n        var value = [];\n        var dimSize = dimensions.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            var keep;\n            // Simple optimization\n            if (!dimSize) {\n                keep = cb.call(context, i);\n            }\n            else if (dimSize === 1) {\n                keep = cb.call(\n                    context, this.get(dimensions[0], i, stack), i\n                );\n            }\n            else {\n                for (var k = 0; k < dimSize; k++) {\n                    value[k] = this.get(dimensions[k], i, stack);\n                }\n                value[k] = i;\n                keep = cb.apply(context, value);\n            }\n            if (keep) {\n                newIndices.push(indices[i]);\n            }\n        }\n\n        this.indices = newIndices;\n\n        // Reset data extent\n        this._extent = {};\n\n        return this;\n    };\n\n    /**\n     * Data mapping to a plain array\n     * @param {string|Array.<string>} [dimensions]\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.mapArray = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        var result = [];\n        this.each(dimensions, function () {\n            result.push(cb && cb.apply(this, arguments));\n        }, stack, context);\n        return result;\n    };\n\n    function cloneListForMapAndSample(original, excludeDimensions) {\n        var allDimensions = original.dimensions;\n        var list = new List(\n            zrUtil.map(allDimensions, original.getDimensionInfo, original),\n            original.hostModel\n        );\n        // FIXME If needs stackedOn, value may already been stacked\n        transferProperties(list, original);\n\n        var storage = list._storage = {};\n        var originalStorage = original._storage;\n        // Init storage\n        for (var i = 0; i < allDimensions.length; i++) {\n            var dim = allDimensions[i];\n            var dimStore = originalStorage[dim];\n            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n                storage[dim] = new dimStore.constructor(\n                    originalStorage[dim].length\n                );\n            }\n            else {\n                // Direct reference for other dimensions\n                storage[dim] = originalStorage[dim];\n            }\n        }\n        return list;\n    }\n\n    /**\n     * Data mapping to a new List with given dimensions\n     * @param {string|Array.<string>} dimensions\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.map = function (dimensions, cb, stack, context) {\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var list = cloneListForMapAndSample(this, dimensions);\n        // Following properties are all immutable.\n        // So we can reference to the same value\n        var indices = list.indices = this.indices;\n\n        var storage = list._storage;\n\n        var tmpRetValue = [];\n        this.each(dimensions, function () {\n            var idx = arguments[arguments.length - 1];\n            var retValue = cb && cb.apply(this, arguments);\n            if (retValue != null) {\n                // a number\n                if (typeof retValue === 'number') {\n                    tmpRetValue[0] = retValue;\n                    retValue = tmpRetValue;\n                }\n                for (var i = 0; i < retValue.length; i++) {\n                    var dim = dimensions[i];\n                    var dimStore = storage[dim];\n                    var rawIdx = indices[idx];\n                    if (dimStore) {\n                        dimStore[rawIdx] = retValue[i];\n                    }\n                }\n            }\n        }, stack, context);\n\n        return list;\n    };\n\n    /**\n     * Large data down sampling on given dimension\n     * @param {string} dimension\n     * @param {number} rate\n     * @param {Function} sampleValue\n     * @param {Function} sampleIndex Sample index for name and id\n     */\n    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n        var list = cloneListForMapAndSample(this, [dimension]);\n        var storage = this._storage;\n        var targetStorage = list._storage;\n\n        var originalIndices = this.indices;\n        var indices = list.indices = [];\n\n        var frameValues = [];\n        var frameIndices = [];\n        var frameSize = Math.floor(1 / rate);\n\n        var dimStore = targetStorage[dimension];\n        var len = this.count();\n        // Copy data from original data\n        for (var i = 0; i < storage[dimension].length; i++) {\n            targetStorage[dimension][i] = storage[dimension][i];\n        }\n        for (var i = 0; i < len; i += frameSize) {\n            // Last frame\n            if (frameSize > len - i) {\n                frameSize = len - i;\n                frameValues.length = frameSize;\n            }\n            for (var k = 0; k < frameSize; k++) {\n                var idx = originalIndices[i + k];\n                frameValues[k] = dimStore[idx];\n                frameIndices[k] = idx;\n            }\n            var value = sampleValue(frameValues);\n            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\n            // Only write value on the filtered data\n            dimStore[idx] = value;\n            indices.push(idx);\n        }\n\n        return list;\n    };\n\n    /**\n     * Get model of one data item.\n     *\n     * @param {number} idx\n     */\n    // FIXME Model proxy ?\n    listProto.getItemModel = function (idx) {\n        var hostModel = this.hostModel;\n        idx = this.indices[idx];\n        return new Model(this._rawData.getItem(idx), hostModel, hostModel && hostModel.ecModel);\n    };\n\n    /**\n     * Create a data differ\n     * @param {module:echarts/data/List} otherList\n     * @return {module:echarts/data/DataDiffer}\n     */\n    listProto.diff = function (otherList) {\n        var idList = this._idList;\n        var otherIdList = otherList && otherList._idList;\n        var val;\n        // Use prefix to avoid index to be the same as otherIdList[idx],\n        // which will cause weird udpate animation.\n        var prefix = 'e\\0\\0';\n\n        return new DataDiffer(\n            otherList ? otherList.indices : [],\n            this.indices,\n            function (idx) {\n                return (val = otherIdList[idx]) != null ? val : prefix + idx;\n            },\n            function (idx) {\n                return (val = idList[idx]) != null ? val : prefix + idx;\n            }\n        );\n    };\n    /**\n     * Get visual property.\n     * @param {string} key\n     */\n    listProto.getVisual = function (key) {\n        var visual = this._visual;\n        return visual && visual[key];\n    };\n\n    /**\n     * Set visual property\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setVisual('color', color);\n     *  setVisual({\n     *      'color': color\n     *  });\n     */\n    listProto.setVisual = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setVisual(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._visual = this._visual || {};\n        this._visual[key] = val;\n    };\n\n    /**\n     * Set layout property.\n     * @param {string|Object} key\n     * @param {*} [val]\n     */\n    listProto.setLayout = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setLayout(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._layout[key] = val;\n    };\n\n    /**\n     * Get layout property.\n     * @param  {string} key.\n     * @return {*}\n     */\n    listProto.getLayout = function (key) {\n        return this._layout[key];\n    };\n\n    /**\n     * Get layout of single data item\n     * @param {number} idx\n     */\n    listProto.getItemLayout = function (idx) {\n        return this._itemLayouts[idx];\n    };\n\n    /**\n     * Set layout of single data item\n     * @param {number} idx\n     * @param {Object} layout\n     * @param {boolean=} [merge=false]\n     */\n    listProto.setItemLayout = function (idx, layout, merge) {\n        this._itemLayouts[idx] = merge\n            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\n            : layout;\n    };\n\n    /**\n     * Clear all layout of single data item\n     */\n    listProto.clearItemLayouts = function () {\n        this._itemLayouts.length = 0;\n    };\n\n    /**\n     * Get visual property of single data item\n     * @param {number} idx\n     * @param {string} key\n     * @param {boolean} [ignoreParent=false]\n     */\n    listProto.getItemVisual = function (idx, key, ignoreParent) {\n        var itemVisual = this._itemVisuals[idx];\n        var val = itemVisual && itemVisual[key];\n        if (val == null && !ignoreParent) {\n            // Use global visual property\n            return this.getVisual(key);\n        }\n        return val;\n    };\n\n    /**\n     * Set visual property of single data item\n     *\n     * @param {number} idx\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setItemVisual(0, 'color', color);\n     *  setItemVisual(0, {\n     *      'color': color\n     *  });\n     */\n    listProto.setItemVisual = function (idx, key, value) {\n        var itemVisual = this._itemVisuals[idx] || {};\n        this._itemVisuals[idx] = itemVisual;\n\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    itemVisual[name] = key[name];\n                }\n            }\n            return;\n        }\n        itemVisual[key] = value;\n    };\n\n    /**\n     * Clear itemVisuals and list visual.\n     */\n    listProto.clearAllVisual = function () {\n        this._visual = {};\n        this._itemVisuals = [];\n    };\n\n    var setItemDataAndSeriesIndex = function (child) {\n        child.seriesIndex = this.seriesIndex;\n        child.dataIndex = this.dataIndex;\n        child.dataType = this.dataType;\n    };\n    /**\n     * Set graphic element relative to data. It can be set as null\n     * @param {number} idx\n     * @param {module:zrender/Element} [el]\n     */\n    listProto.setItemGraphicEl = function (idx, el) {\n        var hostModel = this.hostModel;\n\n        if (el) {\n            // Add data index and series index for indexing the data by element\n            // Useful in tooltip\n            el.dataIndex = idx;\n            el.dataType = this.dataType;\n            el.seriesIndex = hostModel && hostModel.seriesIndex;\n            if (el.type === 'group') {\n                el.traverse(setItemDataAndSeriesIndex, el);\n            }\n        }\n\n        this._graphicEls[idx] = el;\n    };\n\n    /**\n     * @param {number} idx\n     * @return {module:zrender/Element}\n     */\n    listProto.getItemGraphicEl = function (idx) {\n        return this._graphicEls[idx];\n    };\n\n    /**\n     * @param {Function} cb\n     * @param {*} context\n     */\n    listProto.eachItemGraphicEl = function (cb, context) {\n        zrUtil.each(this._graphicEls, function (el, idx) {\n            if (el) {\n                cb && cb.call(context, el, idx);\n            }\n        });\n    };\n\n    /**\n     * Shallow clone a new list except visual and layout properties, and graph elements.\n     * New list only change the indices.\n     */\n    listProto.cloneShallow = function () {\n        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n        var list = new List(dimensionInfoList, this.hostModel);\n\n        // FIXME\n        list._storage = this._storage;\n\n        transferProperties(list, this);\n\n\n        // Clone will not change the data extent and indices\n        list.indices = this.indices.slice();\n\n        if (this._extent) {\n            list._extent = zrUtil.extend({}, this._extent);\n        }\n\n        return list;\n    };\n\n    /**\n     * Wrap some method to add more feature\n     * @param {string} methodName\n     * @param {Function} injectFunction\n     */\n    listProto.wrapMethod = function (methodName, injectFunction) {\n        var originalMethod = this[methodName];\n        if (typeof originalMethod !== 'function') {\n            return;\n        }\n        this.__wrappedMethods = this.__wrappedMethods || [];\n        this.__wrappedMethods.push(methodName);\n        this[methodName] = function () {\n            var res = originalMethod.apply(this, arguments);\n            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n        };\n    };\n\n    // Methods that create a new list based on this list should be listed here.\n    // Notice that those method should `RETURN` the new list.\n    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\n    // Methods that change indices of this list should be listed here.\n    listProto.CHANGABLE_METHODS = ['filterSelf'];\n\n    module.exports = List;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/List.js\n// module id = 630\n// module chunks = 0 1 2","/**\n * Complete dimensions by data (guess dimension).\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var each = zrUtil.each;\n    var isString = zrUtil.isString;\n    var defaults = zrUtil.defaults;\n    var normalizeToArray = modelUtil.normalizeToArray;\n\n    var OTHER_DIMS = {tooltip: 1, label: 1, itemName: 1};\n\n    /**\n     * Complete the dimensions array, by user defined `dimension` and `encode`,\n     * and guessing from the data structure.\n     * If no 'value' dimension specified, the first no-named dimension will be\n     * named as 'value'.\n     *\n     * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n     *      provides not only dim template, but also default order.\n     *      `name` of each item provides default coord name.\n     *      [{dimsDef: []}, ...] can be specified to give names.\n     * @param {Array} data Data list. [[1, 2, 3], [2, 3, 4]].\n     * @param {Object} [opt]\n     * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n     *      For example: ['asdf', {name, type}, ...].\n     * @param {Object} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n     * @param {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n     * @param {string} [opt.extraFromZero] If specified, extra dim names will be:\n     *                      extraPrefix + 0, extraPrefix + extraBaseIndex + 1 ...\n     *                      If not specified, extra dim names will be:\n     *                      extraPrefix, extraPrefix + 0, extraPrefix + 1 ...\n     * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n     * @return {Array.<Object>} [{\n     *      name: string mandatory,\n     *      coordDim: string mandatory,\n     *      coordDimIndex: number mandatory,\n     *      type: string optional,\n     *      tooltipName: string optional,\n     *      otherDims: {\n     *          tooltip: number optional,\n     *          label: number optional\n     *      },\n     *      isExtraCoord: boolean true or undefined.\n     *      other props ...\n     * }]\n     */\n    function completeDimensions(sysDims, data, opt) {\n        data = data || [];\n        opt = opt || {};\n        sysDims = (sysDims || []).slice();\n        var dimsDef = (opt.dimsDef || []).slice();\n        var encodeDef = zrUtil.createHashMap(opt.encodeDef);\n        var dataDimNameMap = zrUtil.createHashMap();\n        var coordDimNameMap = zrUtil.createHashMap();\n        // var valueCandidate;\n        var result = [];\n\n        var dimCount = opt.dimCount;\n        if (dimCount == null) {\n            var value0 = retrieveValue(data[0]);\n            dimCount = Math.max(\n                zrUtil.isArray(value0) && value0.length || 1,\n                sysDims.length,\n                dimsDef.length\n            );\n            each(sysDims, function (sysDimItem) {\n                var sysDimItemDimsDef = sysDimItem.dimsDef;\n                sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n            });\n        }\n\n        // Apply user defined dims (`name` and `type`) and init result.\n        for (var i = 0; i < dimCount; i++) {\n            var dimDefItem = isString(dimsDef[i]) ? {name: dimsDef[i]} : (dimsDef[i] || {});\n            var userDimName = dimDefItem.name;\n            var resultItem = result[i] = {otherDims: {}};\n            // Name will be applied later for avoiding duplication.\n            if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n                // Only if `series.dimensions` is defined in option, tooltipName\n                // will be set, and dimension will be diplayed vertically in\n                // tooltip by default.\n                resultItem.name = resultItem.tooltipName = userDimName;\n                dataDimNameMap.set(userDimName, i);\n            }\n            dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n        }\n\n        // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n        encodeDef.each(function (dataDims, coordDim) {\n            dataDims = encodeDef.set(coordDim, normalizeToArray(dataDims).slice());\n            each(dataDims, function (resultDimIdx, coordDimIndex) {\n                // The input resultDimIdx can be dim name or index.\n                isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n                if (resultDimIdx != null && resultDimIdx < dimCount) {\n                    dataDims[coordDimIndex] = resultDimIdx;\n                    applyDim(result[resultDimIdx], coordDim, coordDimIndex);\n                }\n            });\n        });\n\n        // Apply templetes and default order from `sysDims`.\n        var availDimIdx = 0;\n        each(sysDims, function (sysDimItem, sysDimIndex) {\n            var coordDim;\n            var sysDimItem;\n            var sysDimItemDimsDef;\n            var sysDimItemOtherDims;\n            if (isString(sysDimItem)) {\n                coordDim = sysDimItem;\n                sysDimItem = {};\n            }\n            else {\n                coordDim = sysDimItem.name;\n                sysDimItem = zrUtil.clone(sysDimItem);\n                // `coordDimIndex` should not be set directly.\n                sysDimItemDimsDef = sysDimItem.dimsDef;\n                sysDimItemOtherDims = sysDimItem.otherDims;\n                sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex\n                    = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n            }\n\n            var dataDims = normalizeToArray(encodeDef.get(coordDim));\n            // dimensions provides default dim sequences.\n            if (!dataDims.length) {\n                for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n                    while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n                        availDimIdx++;\n                    }\n                    availDimIdx < result.length && dataDims.push(availDimIdx++);\n                }\n            }\n            // Apply templates.\n            each(dataDims, function (resultDimIdx, coordDimIndex) {\n                var resultItem = result[resultDimIdx];\n                applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n                if (resultItem.name == null && sysDimItemDimsDef) {\n                    resultItem.name = resultItem.tooltipName = sysDimItemDimsDef[coordDimIndex];\n                }\n                sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n            });\n        });\n\n        // Make sure the first extra dim is 'value'.\n        var extra = opt.extraPrefix || 'value';\n\n        // Set dim `name` and other `coordDim` and other props.\n        for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n            var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n            var coordDim = resultItem.coordDim;\n\n            coordDim == null && (\n                resultItem.coordDim = genName(extra, coordDimNameMap, opt.extraFromZero),\n                resultItem.coordDimIndex = 0,\n                resultItem.isExtraCoord = true\n            );\n\n            resultItem.name == null && (resultItem.name = genName(\n                resultItem.coordDim,\n                dataDimNameMap\n            ));\n\n            resultItem.type == null && guessOrdinal(data, resultDimIdx)\n                && (resultItem.type = 'ordinal');\n        }\n\n        return result;\n\n        function applyDim(resultItem, coordDim, coordDimIndex) {\n            if (OTHER_DIMS[coordDim]) {\n                resultItem.otherDims[coordDim] = coordDimIndex;\n            }\n            else {\n                resultItem.coordDim = coordDim;\n                resultItem.coordDimIndex = coordDimIndex;\n                coordDimNameMap.set(coordDim, true);\n            }\n        }\n\n        function genName(name, map, fromZero) {\n            if (fromZero || map.get(name) != null) {\n                var i = 0;\n                while (map.get(name + i) != null) {\n                    i++;\n                }\n                name += i;\n            }\n            map.set(name, true);\n            return name;\n        }\n    }\n\n    // The rule should not be complex, otherwise user might not\n    // be able to known where the data is wrong.\n    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n        for (var i = 0, len = data.length; i < len; i++) {\n            var value = retrieveValue(data[i]);\n\n            if (!zrUtil.isArray(value)) {\n                return false;\n            }\n\n            var value = value[dimIndex];\n            // Consider usage convenience, '1', '2' will be treated as \"number\".\n            // `isFinit('')` get `true`.\n            if (value != null && isFinite(value) && value !== '') {\n                return false;\n            }\n            else if (isString(value) && value !== '-') {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    function retrieveValue(o) {\n        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\n    }\n\n    module.exports = completeDimensions;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/helper/completeDimensions.js\n// module id = 631\n// module chunks = 0 1 2","/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n\n    var clazzUtil = require('../util/clazz');\n\n    /**\n     * @param {Object} [setting]\n     */\n    function Scale(setting) {\n        this._setting = setting || {};\n\n        /**\n         * Extent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._extent = [Infinity, -Infinity];\n\n        /**\n         * Step is calculated in adjustExtent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._interval = 0;\n\n        this.init && this.init.apply(this, arguments);\n    }\n\n    var scaleProto = Scale.prototype;\n\n    /**\n     * Parse input val to valid inner number.\n     * @param {*} val\n     * @return {number}\n     */\n    scaleProto.parse = function (val) {\n        // Notice: This would be a trap here, If the implementation\n        // of this method depends on extent, and this method is used\n        // before extent set (like in dataZoom), it would be wrong.\n        // Nevertheless, parse does not depend on extent generally.\n        return val;\n    };\n\n    scaleProto.getSetting = function (name) {\n        return this._setting[name];\n    };\n\n    scaleProto.contain = function (val) {\n        var extent = this._extent;\n        return val >= extent[0] && val <= extent[1];\n    };\n\n    /**\n     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.normalize = function (val) {\n        var extent = this._extent;\n        if (extent[1] === extent[0]) {\n            return 0.5;\n        }\n        return (val - extent[0]) / (extent[1] - extent[0]);\n    };\n\n    /**\n     * Scale normalized value\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.scale = function (val) {\n        var extent = this._extent;\n        return val * (extent[1] - extent[0]) + extent[0];\n    };\n\n    /**\n     * Set extent from data\n     * @param {Array.<number>} other\n     */\n    scaleProto.unionExtent = function (other) {\n        var extent = this._extent;\n        other[0] < extent[0] && (extent[0] = other[0]);\n        other[1] > extent[1] && (extent[1] = other[1]);\n        // not setExtent because in log axis it may transformed to power\n        // this.setExtent(extent[0], extent[1]);\n    };\n\n    /**\n     * Set extent from data\n     * @param {module:echarts/data/List} data\n     * @param {string} dim\n     */\n    scaleProto.unionExtentFromData = function (data, dim) {\n        this.unionExtent(data.getDataExtent(dim, true));\n    };\n\n    /**\n     * Get extent\n     * @return {Array.<number>}\n     */\n    scaleProto.getExtent = function () {\n        return this._extent.slice();\n    };\n\n    /**\n     * Set extent\n     * @param {number} start\n     * @param {number} end\n     */\n    scaleProto.setExtent = function (start, end) {\n        var thisExtent = this._extent;\n        if (!isNaN(start)) {\n            thisExtent[0] = start;\n        }\n        if (!isNaN(end)) {\n            thisExtent[1] = end;\n        }\n    };\n\n    /**\n     * @return {Array.<string>}\n     */\n    scaleProto.getTicksLabels = function () {\n        var labels = [];\n        var ticks = this.getTicks();\n        for (var i = 0; i < ticks.length; i++) {\n            labels.push(this.getLabel(ticks[i]));\n        }\n        return labels;\n    };\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.isBlank = function () {\n        return this._isBlank;\n    },\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.setBlank = function (isBlank) {\n        this._isBlank = isBlank;\n    };\n\n\n    clazzUtil.enableClassExtend(Scale);\n    clazzUtil.enableClassManagement(Scale, {\n        registerWhenExtend: true\n    });\n\n    module.exports = Scale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Scale.js\n// module id = 632\n// module chunks = 0 1 2","\n    var dpr = 1;\n    // If in browser environment\n    if (typeof window !== 'undefined') {\n        dpr = Math.max(window.devicePixelRatio || 1, 1);\n    }\n    /**\n     * config默认配置项\n     * @exports zrender/config\n     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n     */\n    var config = {\n        /**\n         * debug日志选项：catchBrushException为true下有效\n         * 0 : 不生成debug数据，发布用\n         * 1 : 异常抛出，调试用\n         * 2 : 控制台输出，调试用\n         */\n        debugMode: 0,\n\n        // retina 屏幕优化\n        devicePixelRatio: dpr\n    };\n    module.exports = config;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/config.js\n// module id = 633\n// module chunks = 0 1 2","/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/lib/container/Group');\n *     var Circle = require('zrender/lib/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n\n    var zrUtil = require('../core/util');\n    var Element = require('../Element');\n    var BoundingRect = require('../core/BoundingRect');\n\n    /**\n     * @alias module:zrender/graphic/Group\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @extends module:zrender/mixin/Eventful\n     */\n    var Group = function (opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        for (var key in opts) {\n            if (opts.hasOwnProperty(key)) {\n                this[key] = opts[key];\n            }\n        }\n\n        this._children = [];\n\n        this.__storage = null;\n\n        this.__dirty = true;\n    };\n\n    Group.prototype = {\n\n        constructor: Group,\n\n        isGroup: true,\n\n        /**\n         * @type {string}\n         */\n        type: 'group',\n\n        /**\n         * 所有子孙元素是否响应鼠标事件\n         * @name module:/zrender/container/Group#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * @return {Array.<module:zrender/Element>}\n         */\n        children: function () {\n            return this._children.slice();\n        },\n\n        /**\n         * 获取指定 index 的儿子节点\n         * @param  {number} idx\n         * @return {module:zrender/Element}\n         */\n        childAt: function (idx) {\n            return this._children[idx];\n        },\n\n        /**\n         * 获取指定名字的儿子节点\n         * @param  {string} name\n         * @return {module:zrender/Element}\n         */\n        childOfName: function (name) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i].name === name) {\n                    return children[i];\n                }\n             }\n        },\n\n        /**\n         * @return {number}\n         */\n        childCount: function () {\n            return this._children.length;\n        },\n\n        /**\n         * 添加子节点到最后\n         * @param {module:zrender/Element} child\n         */\n        add: function (child) {\n            if (child && child !== this && child.parent !== this) {\n\n                this._children.push(child);\n\n                this._doAdd(child);\n            }\n\n            return this;\n        },\n\n        /**\n         * 添加子节点在 nextSibling 之前\n         * @param {module:zrender/Element} child\n         * @param {module:zrender/Element} nextSibling\n         */\n        addBefore: function (child, nextSibling) {\n            if (child && child !== this && child.parent !== this\n                && nextSibling && nextSibling.parent === this) {\n\n                var children = this._children;\n                var idx = children.indexOf(nextSibling);\n\n                if (idx >= 0) {\n                    children.splice(idx, 0, child);\n                    this._doAdd(child);\n                }\n            }\n\n            return this;\n        },\n\n        _doAdd: function (child) {\n            if (child.parent) {\n                child.parent.remove(child);\n            }\n\n            child.parent = this;\n\n            var storage = this.__storage;\n            var zr = this.__zr;\n            if (storage && storage !== child.__storage) {\n\n                storage.addToStorage(child);\n\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n        },\n\n        /**\n         * 移除子节点\n         * @param {module:zrender/Element} child\n         */\n        remove: function (child) {\n            var zr = this.__zr;\n            var storage = this.__storage;\n            var children = this._children;\n\n            var idx = zrUtil.indexOf(children, child);\n            if (idx < 0) {\n                return this;\n            }\n            children.splice(idx, 1);\n\n            child.parent = null;\n\n            if (storage) {\n\n                storage.delFromStorage(child);\n\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n\n            return this;\n        },\n\n        /**\n         * 移除所有子节点\n         */\n        removeAll: function () {\n            var children = this._children;\n            var storage = this.__storage;\n            var child;\n            var i;\n            for (i = 0; i < children.length; i++) {\n                child = children[i];\n                if (storage) {\n                    storage.delFromStorage(child);\n                    if (child instanceof Group) {\n                        child.delChildrenFromStorage(storage);\n                    }\n                }\n                child.parent = null;\n            }\n            children.length = 0;\n\n            return this;\n        },\n\n        /**\n         * 遍历所有子节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        eachChild: function (cb, context) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                cb.call(context, child, i);\n            }\n            return this;\n        },\n\n        /**\n         * 深度优先遍历所有子孙节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                cb.call(context, child);\n\n                if (child.type === 'group') {\n                    child.traverse(cb, context);\n                }\n            }\n            return this;\n        },\n\n        addChildrenToStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.addToStorage(child);\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n        },\n\n        delChildrenFromStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.delFromStorage(child);\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n        },\n\n        dirty: function () {\n            this.__dirty = true;\n            this.__zr && this.__zr.refresh();\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function (includeChildren) {\n            // TODO Caching\n            var rect = null;\n            var tmpRect = new BoundingRect(0, 0, 0, 0);\n            var children = includeChildren || this._children;\n            var tmpMat = [];\n\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                if (child.ignore || child.invisible) {\n                    continue;\n                }\n\n                var childRect = child.getBoundingRect();\n                var transform = child.getLocalTransform(tmpMat);\n                // TODO\n                // The boundingRect cacluated by transforming original\n                // rect may be bigger than the actual bundingRect when rotation\n                // is used. (Consider a circle rotated aginst its center, where\n                // the actual boundingRect should be the same as that not be\n                // rotated.) But we can not find better approach to calculate\n                // actual boundingRect yet, considering performance.\n                if (transform) {\n                    tmpRect.copy(childRect);\n                    tmpRect.applyTransform(transform);\n                    rect = rect || tmpRect.clone();\n                    rect.union(tmpRect);\n                }\n                else {\n                    rect = rect || childRect.clone();\n                    rect.union(childRect);\n                }\n            }\n            return rect || tmpRect;\n        }\n    };\n\n    zrUtil.inherits(Group, Element);\n\n    module.exports = Group;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/container/Group.js\n// module id = 634\n// module chunks = 0 1 2","'use strict';\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n\n // TODO getTotalLength, getPointAtLength\n\n\n    var curve = require('./curve');\n    var vec2 = require('./vector');\n    var bbox = require('./bbox');\n    var BoundingRect = require('./BoundingRect');\n    var dpr = require('../config').devicePixelRatio;\n\n    var CMD = {\n        M: 1,\n        L: 2,\n        C: 3,\n        Q: 4,\n        A: 5,\n        Z: 6,\n        // Rect\n        R: 7\n    };\n\n    // var CMD_MEM_SIZE = {\n    //     M: 3,\n    //     L: 3,\n    //     C: 7,\n    //     Q: 5,\n    //     A: 9,\n    //     R: 5,\n    //     Z: 1\n    // };\n\n    var min = [];\n    var max = [];\n    var min2 = [];\n    var max2 = [];\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var mathSqrt = Math.sqrt;\n    var mathAbs = Math.abs;\n\n    var hasTypedArray = typeof Float32Array != 'undefined';\n\n    /**\n     * @alias module:zrender/core/PathProxy\n     * @constructor\n     */\n    var PathProxy = function (notSaveData) {\n\n        this._saveData = !(notSaveData || false);\n\n        if (this._saveData) {\n            /**\n             * Path data. Stored as flat array\n             * @type {Array.<Object>}\n             */\n            this.data = [];\n        }\n\n        this._ctx = null;\n    };\n\n    /**\n     * 快速计算Path包围盒（并不是最小包围盒）\n     * @return {Object}\n     */\n    PathProxy.prototype = {\n\n        constructor: PathProxy,\n\n        _xi: 0,\n        _yi: 0,\n\n        _x0: 0,\n        _y0: 0,\n        // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n        _ux: 0,\n        _uy: 0,\n\n        _len: 0,\n\n        _lineDash: null,\n\n        _dashOffset: 0,\n\n        _dashIdx: 0,\n\n        _dashSum: 0,\n\n        /**\n         * @readOnly\n         */\n        setScale: function (sx, sy) {\n            this._ux = mathAbs(1 / dpr / sx) || 0;\n            this._uy = mathAbs(1 / dpr / sy) || 0;\n        },\n\n        getContext: function () {\n            return this._ctx;\n        },\n\n        /**\n         * @param  {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        beginPath: function (ctx) {\n\n            this._ctx = ctx;\n\n            ctx && ctx.beginPath();\n\n            ctx && (this.dpr = ctx.dpr);\n\n            // Reset\n            if (this._saveData) {\n                this._len = 0;\n            }\n\n            if (this._lineDash) {\n                this._lineDash = null;\n\n                this._dashOffset = 0;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        moveTo: function (x, y) {\n            this.addData(CMD.M, x, y);\n            this._ctx && this._ctx.moveTo(x, y);\n\n            // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n            // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n            // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n            // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n            this._x0 = x;\n            this._y0 = y;\n\n            this._xi = x;\n            this._yi = y;\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        lineTo: function (x, y) {\n            var exceedUnit = mathAbs(x - this._xi) > this._ux\n                || mathAbs(y - this._yi) > this._uy\n                // Force draw the first segment\n                || this._len < 5;\n\n            this.addData(CMD.L, x, y);\n\n            if (this._ctx && exceedUnit) {\n                this._needsDash() ? this._dashedLineTo(x, y)\n                    : this._ctx.lineTo(x, y);\n            }\n            if (exceedUnit) {\n                this._xi = x;\n                this._yi = y;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @param  {number} x3\n         * @param  {number} y3\n         * @return {module:zrender/core/PathProxy}\n         */\n        bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n            this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)\n                    : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n            }\n            this._xi = x3;\n            this._yi = y3;\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @return {module:zrender/core/PathProxy}\n         */\n        quadraticCurveTo: function (x1, y1, x2, y2) {\n            this.addData(CMD.Q, x1, y1, x2, y2);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2)\n                    : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n            }\n            this._xi = x2;\n            this._yi = y2;\n            return this;\n        },\n\n        /**\n         * @param  {number} cx\n         * @param  {number} cy\n         * @param  {number} r\n         * @param  {number} startAngle\n         * @param  {number} endAngle\n         * @param  {boolean} anticlockwise\n         * @return {module:zrender/core/PathProxy}\n         */\n        arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n            this.addData(\n                CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1\n            );\n            this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n\n            this._xi = mathCos(endAngle) * r + cx;\n            this._yi = mathSin(endAngle) * r + cx;\n            return this;\n        },\n\n        // TODO\n        arcTo: function (x1, y1, x2, y2, radius) {\n            if (this._ctx) {\n                this._ctx.arcTo(x1, y1, x2, y2, radius);\n            }\n            return this;\n        },\n\n        // TODO\n        rect: function (x, y, w, h) {\n            this._ctx && this._ctx.rect(x, y, w, h);\n            this.addData(CMD.R, x, y, w, h);\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/PathProxy}\n         */\n        closePath: function () {\n            this.addData(CMD.Z);\n\n            var ctx = this._ctx;\n            var x0 = this._x0;\n            var y0 = this._y0;\n            if (ctx) {\n                this._needsDash() && this._dashedLineTo(x0, y0);\n                ctx.closePath();\n            }\n\n            this._xi = x0;\n            this._yi = y0;\n            return this;\n        },\n\n        /**\n         * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n         * stroke 同样\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        fill: function (ctx) {\n            ctx && ctx.fill();\n            this.toStatic();\n        },\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        stroke: function (ctx) {\n            ctx && ctx.stroke();\n            this.toStatic();\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDash: function (lineDash) {\n            if (lineDash instanceof Array) {\n                this._lineDash = lineDash;\n\n                this._dashIdx = 0;\n\n                var lineDashSum = 0;\n                for (var i = 0; i < lineDash.length; i++) {\n                    lineDashSum += lineDash[i];\n                }\n                this._dashSum = lineDashSum;\n            }\n            return this;\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDashOffset: function (offset) {\n            this._dashOffset = offset;\n            return this;\n        },\n\n        /**\n         *\n         * @return {boolean}\n         */\n        len: function () {\n            return this._len;\n        },\n\n        /**\n         * 直接设置 Path 数据\n         */\n        setData: function (data) {\n\n            var len = data.length;\n\n            if (! (this.data && this.data.length == len) && hasTypedArray) {\n                this.data = new Float32Array(len);\n            }\n\n            for (var i = 0; i < len; i++) {\n                this.data[i] = data[i];\n            }\n\n            this._len = len;\n        },\n\n        /**\n         * 添加子路径\n         * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n         */\n        appendPath: function (path) {\n            if (!(path instanceof Array)) {\n                path = [path];\n            }\n            var len = path.length;\n            var appendSize = 0;\n            var offset = this._len;\n            for (var i = 0; i < len; i++) {\n                appendSize += path[i].len();\n            }\n            if (hasTypedArray && (this.data instanceof Float32Array)) {\n                this.data = new Float32Array(offset + appendSize);\n            }\n            for (var i = 0; i < len; i++) {\n                var appendPathData = path[i].data;\n                for (var k = 0; k < appendPathData.length; k++) {\n                    this.data[offset++] = appendPathData[k];\n                }\n            }\n            this._len = offset;\n        },\n\n        /**\n         * 填充 Path 数据。\n         * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n         */\n        addData: function (cmd) {\n            if (!this._saveData) {\n                return;\n            }\n\n            var data = this.data;\n            if (this._len + arguments.length > data.length) {\n                // 因为之前的数组已经转换成静态的 Float32Array\n                // 所以不够用时需要扩展一个新的动态数组\n                this._expandData();\n                data = this.data;\n            }\n            for (var i = 0; i < arguments.length; i++) {\n                data[this._len++] = arguments[i];\n            }\n\n            this._prevCmd = cmd;\n        },\n\n        _expandData: function () {\n            // Only if data is Float32Array\n            if (!(this.data instanceof Array)) {\n                var newData = [];\n                for (var i = 0; i < this._len; i++) {\n                    newData[i] = this.data[i];\n                }\n                this.data = newData;\n            }\n        },\n\n        /**\n         * If needs js implemented dashed line\n         * @return {boolean}\n         * @private\n         */\n        _needsDash: function () {\n            return this._lineDash;\n        },\n\n        _dashedLineTo: function (x1, y1) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var dx = x1 - x0;\n            var dy = y1 - y0;\n            var dist = mathSqrt(dx * dx + dy * dy);\n            var x = x0;\n            var y = y0;\n            var dash;\n            var nDash = lineDash.length;\n            var idx;\n            dx /= dist;\n            dy /= dist;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            x -= offset * dx;\n            y -= offset * dy;\n\n            while ((dx > 0 && x <= x1) || (dx < 0 && x >= x1)\n            || (dx == 0 && ((dy > 0 && y <= y1) || (dy < 0 && y >= y1)))) {\n                idx = this._dashIdx;\n                dash = lineDash[idx];\n                x += dx * dash;\n                y += dy * dash;\n                this._dashIdx = (idx + 1) % nDash;\n                // Skip positive offset\n                if ((dx > 0 && x < x0) || (dx < 0 && x > x0) || (dy > 0 && y < y0) || (dy < 0 && y > y0)) {\n                    continue;\n                }\n                ctx[idx % 2 ? 'moveTo' : 'lineTo'](\n                    dx >= 0 ? mathMin(x, x1) : mathMax(x, x1),\n                    dy >= 0 ? mathMin(y, y1) : mathMax(y, y1)\n                );\n            }\n            // Offset for next lineTo\n            dx = x - x1;\n            dy = y - y1;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        // Not accurate dashed line to\n        _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var t;\n            var dx;\n            var dy;\n            var cubicAt = curve.cubicAt;\n            var bezierLen = 0;\n            var idx = this._dashIdx;\n            var nDash = lineDash.length;\n\n            var x;\n            var y;\n\n            var tmpLen = 0;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            // Bezier approx length\n            for (t = 0; t < 1; t += 0.1) {\n                dx = cubicAt(x0, x1, x2, x3, t + 0.1)\n                    - cubicAt(x0, x1, x2, x3, t);\n                dy = cubicAt(y0, y1, y2, y3, t + 0.1)\n                    - cubicAt(y0, y1, y2, y3, t);\n                bezierLen += mathSqrt(dx * dx + dy * dy);\n            }\n\n            // Find idx after add offset\n            for (; idx < nDash; idx++) {\n                tmpLen += lineDash[idx];\n                if (tmpLen > offset) {\n                    break;\n                }\n            }\n            t = (tmpLen - offset) / bezierLen;\n\n            while (t <= 1) {\n\n                x = cubicAt(x0, x1, x2, x3, t);\n                y = cubicAt(y0, y1, y2, y3, t);\n\n                // Use line to approximate dashed bezier\n                // Bad result if dash is long\n                idx % 2 ? ctx.moveTo(x, y)\n                    : ctx.lineTo(x, y);\n\n                t += lineDash[idx] / bezierLen;\n\n                idx = (idx + 1) % nDash;\n            }\n\n            // Finish the last segment and calculate the new offset\n            (idx % 2 !== 0) && ctx.lineTo(x3, y3);\n            dx = x3 - x;\n            dy = y3 - y;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        _dashedQuadraticTo: function (x1, y1, x2, y2) {\n            // Convert quadratic to cubic using degree elevation\n            var x3 = x2;\n            var y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (this._xi + 2 * x1) / 3;\n            y1 = (this._yi + 2 * y1) / 3;\n\n            this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n        },\n\n        /**\n         * 转成静态的 Float32Array 减少堆内存占用\n         * Convert dynamic array to static Float32Array\n         */\n        toStatic: function () {\n            var data = this.data;\n            if (data instanceof Array) {\n                data.length = this._len;\n                if (hasTypedArray) {\n                    this.data = new Float32Array(data);\n                }\n            }\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function () {\n            min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n            max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n\n            var data = this.data;\n            var xi = 0;\n            var yi = 0;\n            var x0 = 0;\n            var y0 = 0;\n\n            for (var i = 0; i < data.length;) {\n                var cmd = data[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = data[i];\n                    yi = data[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n\n                switch (cmd) {\n                    case CMD.M:\n                        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                        // 在 closePath 的时候使用\n                        x0 = data[i++];\n                        y0 = data[i++];\n                        xi = x0;\n                        yi = y0;\n                        min2[0] = x0;\n                        min2[1] = y0;\n                        max2[0] = x0;\n                        max2[1] = y0;\n                        break;\n                    case CMD.L:\n                        bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.C:\n                        bbox.fromCubic(\n                            xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.Q:\n                        bbox.fromQuadratic(\n                            xi, yi, data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.A:\n                        // TODO Arc 判断的开销比较大\n                        var cx = data[i++];\n                        var cy = data[i++];\n                        var rx = data[i++];\n                        var ry = data[i++];\n                        var startAngle = data[i++];\n                        var endAngle = data[i++] + startAngle;\n                        // TODO Arc 旋转\n                        var psi = data[i++];\n                        var anticlockwise = 1 - data[i++];\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(startAngle) * rx + cx;\n                            y0 = mathSin(startAngle) * ry + cy;\n                        }\n\n                        bbox.fromArc(\n                            cx, cy, rx, ry, startAngle, endAngle,\n                            anticlockwise, min2, max2\n                        );\n\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = data[i++];\n                        y0 = yi = data[i++];\n                        var width = data[i++];\n                        var height = data[i++];\n                        // Use fromLine\n                        bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n                        break;\n                    case CMD.Z:\n                        xi = x0;\n                        yi = y0;\n                        break;\n                }\n\n                // Union\n                vec2.min(min, min, min2);\n                vec2.max(max, max, max2);\n            }\n\n            // No data\n            if (i === 0) {\n                min[0] = min[1] = max[0] = max[1] = 0;\n            }\n\n            return new BoundingRect(\n                min[0], min[1], max[0] - min[0], max[1] - min[1]\n            );\n        },\n\n        /**\n         * Rebuild path from current data\n         * Rebuild path will not consider javascript implemented line dash.\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        rebuildPath: function (ctx) {\n            var d = this.data;\n            var x0, y0;\n            var xi, yi;\n            var x, y;\n            var ux = this._ux;\n            var uy = this._uy;\n            var len = this._len;\n            for (var i = 0; i < len;) {\n                var cmd = d[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = d[i];\n                    yi = d[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n                switch (cmd) {\n                    case CMD.M:\n                        x0 = xi = d[i++];\n                        y0 = yi = d[i++];\n                        ctx.moveTo(xi, yi);\n                        break;\n                    case CMD.L:\n                        x = d[i++];\n                        y = d[i++];\n                        // Not draw too small seg between\n                        if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n                            ctx.lineTo(x, y);\n                            xi = x;\n                            yi = y;\n                        }\n                        break;\n                    case CMD.C:\n                        ctx.bezierCurveTo(\n                            d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]\n                        );\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.Q:\n                        ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.A:\n                        var cx = d[i++];\n                        var cy = d[i++];\n                        var rx = d[i++];\n                        var ry = d[i++];\n                        var theta = d[i++];\n                        var dTheta = d[i++];\n                        var psi = d[i++];\n                        var fs = d[i++];\n                        var r = (rx > ry) ? rx : ry;\n                        var scaleX = (rx > ry) ? 1 : rx / ry;\n                        var scaleY = (rx > ry) ? ry / rx : 1;\n                        var isEllipse = Math.abs(rx - ry) > 1e-3;\n                        var endAngle = theta + dTheta;\n                        if (isEllipse) {\n                            ctx.translate(cx, cy);\n                            ctx.rotate(psi);\n                            ctx.scale(scaleX, scaleY);\n                            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n                            ctx.scale(1 / scaleX, 1 / scaleY);\n                            ctx.rotate(-psi);\n                            ctx.translate(-cx, -cy);\n                        }\n                        else {\n                            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n                        }\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(theta) * rx + cx;\n                            y0 = mathSin(theta) * ry + cy;\n                        }\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = d[i];\n                        y0 = yi = d[i + 1];\n                        ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n                        break;\n                    case CMD.Z:\n                        ctx.closePath();\n                        xi = x0;\n                        yi = y0;\n                }\n            }\n        }\n    };\n\n    PathProxy.CMD = CMD;\n\n    module.exports = PathProxy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/PathProxy.js\n// module id = 635\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var coordinateSystemCreators = {};\n\n    function CoordinateSystemManager() {\n\n        this._coordinateSystems = [];\n    }\n\n    CoordinateSystemManager.prototype = {\n\n        constructor: CoordinateSystemManager,\n\n        create: function (ecModel, api) {\n            var coordinateSystems = [];\n            zrUtil.each(coordinateSystemCreators, function (creater, type) {\n                var list = creater.create(ecModel, api);\n                coordinateSystems = coordinateSystems.concat(list || []);\n            });\n\n            this._coordinateSystems = coordinateSystems;\n        },\n\n        update: function (ecModel, api) {\n            zrUtil.each(this._coordinateSystems, function (coordSys) {\n                // FIXME MUST have\n                coordSys.update && coordSys.update(ecModel, api);\n            });\n        },\n\n        getCoordinateSystems: function () {\n            return this._coordinateSystems.slice();\n        }\n    };\n\n    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n        coordinateSystemCreators[type] = coordinateSystemCreator;\n    };\n\n    CoordinateSystemManager.get = function (type) {\n        return coordinateSystemCreators[type];\n    };\n\n    module.exports = CoordinateSystemManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/CoordinateSystem.js\n// module id = 636\n// module chunks = 0 1 2","// TODO Parse shadow style\n// TODO Only shallow path support\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    module.exports = function (properties) {\n        // Normalize\n        for (var i = 0; i < properties.length; i++) {\n            if (!properties[i][1]) {\n               properties[i][1] = properties[i][0];\n            }\n        }\n        return function (excludes, includes) {\n            var style = {};\n            for (var i = 0; i < properties.length; i++) {\n                var propName = properties[i][1];\n                if ((excludes && zrUtil.indexOf(excludes, propName) >= 0)\n                    || (includes && zrUtil.indexOf(includes, propName) < 0)\n                ) {\n                    continue;\n                }\n                var val = this.getShallow(propName);\n                if (val != null) {\n                    style[properties[i][0]] = val;\n                }\n            }\n            return style;\n        };\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/makeStyleMapper.js\n// module id = 637\n// module chunks = 0 1 2","/**\n * Interval scale\n * @module echarts/scale/Interval\n */\n\n\n\n    var numberUtil = require('../util/number');\n    var formatUtil = require('../util/format');\n    var Scale = require('./Scale');\n    var helper = require('./helper');\n\n    var roundNumber = numberUtil.round;\n\n    /**\n     * @alias module:echarts/coord/scale/Interval\n     * @constructor\n     */\n    var IntervalScale = Scale.extend({\n\n        type: 'interval',\n\n        _interval: 0,\n\n        _intervalPrecision: 2,\n\n        setExtent: function (start, end) {\n            var thisExtent = this._extent;\n            //start,end may be a Number like '25',so...\n            if (!isNaN(start)) {\n                thisExtent[0] = parseFloat(start);\n            }\n            if (!isNaN(end)) {\n                thisExtent[1] = parseFloat(end);\n            }\n        },\n\n        unionExtent: function (other) {\n            var extent = this._extent;\n            other[0] < extent[0] && (extent[0] = other[0]);\n            other[1] > extent[1] && (extent[1] = other[1]);\n\n            // unionExtent may called by it's sub classes\n            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n        },\n        /**\n         * Get interval\n         */\n        getInterval: function () {\n            return this._interval;\n        },\n\n        /**\n         * Set interval\n         */\n        setInterval: function (interval) {\n            this._interval = interval;\n            // Dropped auto calculated niceExtent and use user setted extent\n            // We assume user wan't to set both interval, min, max to get a better result\n            this._niceExtent = this._extent.slice();\n\n            this._intervalPrecision = helper.getIntervalPrecision(interval);\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            return helper.intervalScaleGetTicks(\n                this._interval, this._extent, this._niceExtent, this._intervalPrecision\n            );\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getTicksLabels: function () {\n            var labels = [];\n            var ticks = this.getTicks();\n            for (var i = 0; i < ticks.length; i++) {\n                labels.push(this.getLabel(ticks[i]));\n            }\n            return labels;\n        },\n\n        /**\n         * @param {number} data\n         * @param {Object} [opt]\n         * @param {number|string} [opt.precision] If 'auto', use nice presision.\n         * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n         * @return {string}\n         */\n        getLabel: function (data, opt) {\n            if (data == null) {\n                return '';\n            }\n\n            var precision = opt && opt.precision;\n\n            if (precision == null) {\n                precision = numberUtil.getPrecisionSafe(data) || 0;\n            }\n            else if (precision === 'auto') {\n                // Should be more precise then tick.\n                precision = this._intervalPrecision;\n            }\n\n            // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n            // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n            data = roundNumber(data, precision, true);\n\n            return formatUtil.addCommas(data);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         *\n         * @param {number} [splitNumber = 5] Desired number of ticks\n         * @param {number} [minInterval]\n         * @param {number} [maxInterval]\n         */\n        niceTicks: function (splitNumber, minInterval, maxInterval) {\n            splitNumber = splitNumber || 5;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (!isFinite(span)) {\n                return;\n            }\n            // User may set axis min 0 and data are all negative\n            // FIXME If it needs to reverse ?\n            if (span < 0) {\n                span = -span;\n                extent.reverse();\n            }\n\n            var result = helper.intervalScaleNiceTicks(\n                extent, splitNumber, minInterval, maxInterval\n            );\n\n            this._intervalPrecision = result.intervalPrecision;\n            this._interval = result.interval;\n            this._niceExtent = result.niceTickExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {Object} opt\n         * @param {number} [opt.splitNumber = 5] Given approx tick number\n         * @param {boolean} [opt.fixMin=false]\n         * @param {boolean} [opt.fixMax=false]\n         * @param {boolean} [opt.minInterval]\n         * @param {boolean} [opt.maxInterval]\n         */\n        niceExtent: function (opt) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                if (extent[0] !== 0) {\n                    // Expand extent\n                    var expandSize = extent[0];\n                    // In the fowllowing case\n                    //      Axis has been fixed max 100\n                    //      Plus data are all 100 and axis extent are [100, 100].\n                    // Extend to the both side will cause expanded max is larger than fixed max.\n                    // So only expand to the smaller side.\n                    if (!opt.fixMax) {\n                        extent[1] += expandSize / 2;\n                        extent[0] -= expandSize / 2;\n                    }\n                    else {\n                        extent[0] -= expandSize / 2;\n                    }\n                }\n                else {\n                    extent[1] = 1;\n                }\n            }\n            var span = extent[1] - extent[0];\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (!isFinite(span)) {\n                extent[0] = 0;\n                extent[1] = 1;\n            }\n\n            this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!opt.fixMin) {\n                extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n            }\n            if (!opt.fixMax) {\n                extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n            }\n        }\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    IntervalScale.create = function () {\n        return new IntervalScale();\n    };\n\n    module.exports = IntervalScale;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Interval.js\n// module id = 638\n// module chunks = 0 1 2","'use strict';\n// Symbol factory\n\n\n    var graphic = require('./graphic');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n\n    /**\n     * Triangle shape\n     * @inner\n     */\n    var Triangle = graphic.extendShape({\n        type: 'triangle',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy + height);\n            path.lineTo(cx - width, cy + height);\n            path.closePath();\n        }\n    });\n    /**\n     * Diamond shape\n     * @inner\n     */\n    var Diamond = graphic.extendShape({\n        type: 'diamond',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy);\n            path.lineTo(cx, cy + height);\n            path.lineTo(cx - width, cy);\n            path.closePath();\n        }\n    });\n\n    /**\n     * Pin shape\n     * @inner\n     */\n    var Pin = graphic.extendShape({\n        type: 'pin',\n        shape: {\n            // x, y on the cusp\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (path, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var w = shape.width / 5 * 3;\n            // Height must be larger than width\n            var h = Math.max(w, shape.height);\n            var r = w / 2;\n\n            // Dist on y with tangent point and circle center\n            var dy = r * r / (h - r);\n            var cy = y - h + r + dy;\n            var angle = Math.asin(dy / r);\n            // Dist on x with tangent point and circle center\n            var dx = Math.cos(angle) * r;\n\n            var tanX = Math.sin(angle);\n            var tanY = Math.cos(angle);\n\n            path.arc(\n                x, cy, r,\n                Math.PI - angle,\n                Math.PI * 2 + angle\n            );\n\n            var cpLen = r * 0.6;\n            var cpLen2 = r * 0.7;\n            path.bezierCurveTo(\n                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\n                x, y - cpLen2,\n                x, y\n            );\n            path.bezierCurveTo(\n                x, y - cpLen2,\n                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\n                x - dx, cy + dy\n            );\n            path.closePath();\n        }\n    });\n\n    /**\n     * Arrow shape\n     * @inner\n     */\n    var Arrow = graphic.extendShape({\n\n        type: 'arrow',\n\n        shape: {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var height = shape.height;\n            var width = shape.width;\n            var x = shape.x;\n            var y = shape.y;\n            var dx = width / 3 * 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + dx, y + height);\n            ctx.lineTo(x, y + height / 4 * 3);\n            ctx.lineTo(x - dx, y + height);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n        }\n    });\n\n    /**\n     * Map of path contructors\n     * @type {Object.<string, module:zrender/graphic/Path>}\n     */\n    var symbolCtors = {\n        line: graphic.Line,\n\n        rect: graphic.Rect,\n\n        roundRect: graphic.Rect,\n\n        square: graphic.Rect,\n\n        circle: graphic.Circle,\n\n        diamond: Diamond,\n\n        pin: Pin,\n\n        arrow: Arrow,\n\n        triangle: Triangle\n    };\n\n    var symbolShapeMakers = {\n\n        line: function (x, y, w, h, shape) {\n            // FIXME\n            shape.x1 = x;\n            shape.y1 = y + h / 2;\n            shape.x2 = x + w;\n            shape.y2 = y + h / 2;\n        },\n\n        rect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        roundRect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n            shape.r = Math.min(w, h) / 4;\n        },\n\n        square: function (x, y, w, h, shape) {\n            var size = Math.min(w, h);\n            shape.x = x;\n            shape.y = y;\n            shape.width = size;\n            shape.height = size;\n        },\n\n        circle: function (x, y, w, h, shape) {\n            // Put circle in the center of square\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.r = Math.min(w, h) / 2;\n        },\n\n        diamond: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        pin: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        arrow: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        triangle: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        }\n    };\n\n    var symbolBuildProxies = {};\n    for (var name in symbolCtors) {\n        if (symbolCtors.hasOwnProperty(name)) {\n            symbolBuildProxies[name] = new symbolCtors[name]();\n        }\n    }\n\n    var Symbol = graphic.extendShape({\n\n        type: 'symbol',\n\n        shape: {\n            symbolType: '',\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        beforeBrush: function () {\n            var style = this.style;\n            var shape = this.shape;\n            // FIXME\n            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n                style.textPosition = ['50%', '40%'];\n                style.textAlign = 'center';\n                style.textVerticalAlign = 'middle';\n            }\n        },\n\n        buildPath: function (ctx, shape, inBundle) {\n            var symbolType = shape.symbolType;\n            var proxySymbol = symbolBuildProxies[symbolType];\n            if (shape.symbolType !== 'none') {\n                if (!proxySymbol) {\n                    // Default rect\n                    symbolType = 'rect';\n                    proxySymbol = symbolBuildProxies[symbolType];\n                }\n                symbolShapeMakers[symbolType](\n                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\n                );\n                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n            }\n        }\n    });\n\n    // Provide setColor helper method to avoid determine if set the fill or stroke outside\n    var symbolPathSetColor = function (color) {\n        if (this.type !== 'image') {\n            var symbolStyle = this.style;\n            var symbolShape = this.shape;\n            if (symbolShape && symbolShape.symbolType === 'line') {\n                symbolStyle.stroke = color;\n            }\n            else if (this.__isEmptyBrush) {\n                symbolStyle.stroke = color;\n                symbolStyle.fill = '#fff';\n            }\n            else {\n                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n                symbolStyle.fill && (symbolStyle.fill = color);\n                symbolStyle.stroke && (symbolStyle.stroke = color);\n            }\n            this.dirty(false);\n        }\n    };\n\n    var symbolUtil = {\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @param {string} symbolType\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: function (symbolType, x, y, w, h, color) {\n            // TODO Support image object, DynamicImage.\n\n            var isEmpty = symbolType.indexOf('empty') === 0;\n            if (isEmpty) {\n                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n            }\n            var symbolPath;\n\n            if (symbolType.indexOf('image://') === 0) {\n                symbolPath = new graphic.Image({\n                    style: {\n                        image: symbolType.slice(8),\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n            else if (symbolType.indexOf('path://') === 0) {\n                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\n            }\n            else {\n                symbolPath = new Symbol({\n                    shape: {\n                        symbolType: symbolType,\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n\n            symbolPath.__isEmptyBrush = isEmpty;\n\n            symbolPath.setColor = symbolPathSetColor;\n\n            symbolPath.setColor(color);\n\n            return symbolPath;\n        }\n    };\n\n    module.exports = symbolUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/symbol.js\n// module id = 639\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../util/format');\n    var classUtil = require('../util/clazz');\n    var modelUtil = require('../util/model');\n    var ComponentModel = require('./Component');\n    var colorPaletteMixin = require('./mixin/colorPalette');\n    var env = require('zrender/lib/core/env');\n    var layout = require('../util/layout');\n\n    var set = classUtil.set;\n    var get = classUtil.get;\n    var encodeHTML = formatUtil.encodeHTML;\n    var addCommas = formatUtil.addCommas;\n\n    var SeriesModel = ComponentModel.extend({\n\n        type: 'series.__base__',\n\n        /**\n         * @readOnly\n         */\n        seriesIndex: 0,\n\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\n        coordinateSystem: null,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * Data provided for legend\n         * @type {Function}\n         */\n        // PENDING\n        legendDataProvider: null,\n\n        /**\n         * Access path of color for visual\n         */\n        visualColorAccessPath: 'itemStyle.normal.color',\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            /**\n             * @type {number}\n             * @readOnly\n             */\n            this.seriesIndex = this.componentIndex;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            var data = this.getInitialData(option, ecModel);\n            if (__DEV__) {\n                zrUtil.assert(data, 'getInitialData returned invalid data.');\n            }\n            /**\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n             * @private\n             */\n            set(this, 'dataBeforeProcessed', data);\n\n            // If we reverse the order (make data firstly, and then make\n            // dataBeforeProcessed by cloneShallow), cloneShallow will\n            // cause data.graph.data !== data when using\n            // module:echarts/data/Graph or module:echarts/data/Tree.\n            // See module:echarts/data/helper/linkList\n            this.restoreData();\n        },\n\n        /**\n         * Util for merge default and theme to option\n         * @param  {Object} option\n         * @param  {module:echarts/model/Global} ecModel\n         */\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            zrUtil.merge(\n                option,\n                ecModel.getTheme().get(this.subType)\n            );\n            zrUtil.merge(option, this.getDefaultOption());\n\n            // Default label emphasis `show`\n            modelUtil.defaultEmphasis(option.label, ['show']);\n\n            this.fillDataTextStyle(option.data);\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (newSeriesOption, ecModel) {\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n            this.fillDataTextStyle(newSeriesOption.data);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n            }\n\n            var data = this.getInitialData(newSeriesOption, ecModel);\n            // TODO Merge data?\n            if (data) {\n                set(this, 'data', data);\n                set(this, 'dataBeforeProcessed', data.cloneShallow());\n            }\n        },\n\n        fillDataTextStyle: function (data) {\n            // Default data label emphasis `show`\n            // FIXME Tree structure data ?\n            // FIXME Performance ?\n            if (data) {\n                var props = ['show'];\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] && data[i].label) {\n                        modelUtil.defaultEmphasis(data[i].label, props);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Init a data structure from data related option in series\n         * Must be overwritten\n         */\n        getInitialData: function () {},\n\n        /**\n         * @param {string} [dataType]\n         * @return {module:echarts/data/List}\n         */\n        getData: function (dataType) {\n            var data = get(this, 'data');\n            return dataType == null ? data : data.getLinkedData(dataType);\n        },\n\n        /**\n         * @param {module:echarts/data/List} data\n         */\n        setData: function (data) {\n            set(this, 'data', data);\n        },\n\n        /**\n         * Get data before processed\n         * @return {module:echarts/data/List}\n         */\n        getRawData: function () {\n            return get(this, 'dataBeforeProcessed');\n        },\n\n        /**\n         * Coord dimension to data dimension.\n         *\n         * By default the result is the same as dimensions of series data.\n         * But in some series data dimensions are different from coord dimensions (i.e.\n         * candlestick and boxplot). Override this method to handle those cases.\n         *\n         * Coord dimension to data dimension can be one-to-many\n         *\n         * @param {string} coordDim\n         * @return {Array.<string>} dimensions on the axis.\n         */\n        coordDimToDataDim: function (coordDim) {\n            return modelUtil.coordDimToDataDim(this.getData(), coordDim);\n        },\n\n        /**\n         * Convert data dimension to coord dimension.\n         *\n         * @param {string|number} dataDim\n         * @return {string}\n         */\n        dataDimToCoordDim: function (dataDim) {\n            return modelUtil.dataDimToCoordDim(this.getData(), dataDim);\n        },\n\n        /**\n         * Get base axis if has coordinate system and has axis.\n         * By default use coordSys.getBaseAxis();\n         * Can be overrided for some chart.\n         * @return {type} description\n         */\n        getBaseAxis: function () {\n            var coordSys = this.coordinateSystem;\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n        },\n\n        // FIXME\n        /**\n         * Default tooltip formatter\n         *\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         */\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n            function formatArrayValue(value) {\n                var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n                    var dimItem = data.getDimensionInfo(idx);\n                    return vertially |= dimItem && dimItem.tooltip !== false && dimItem.tooltipName != null;\n                }, 0);\n\n                var result = [];\n                var tooltipDims = modelUtil.otherDimToDataDim(data, 'tooltip');\n\n                tooltipDims.length\n                    ? zrUtil.each(tooltipDims, function (dimIdx) {\n                        setEachItem(data.get(dimIdx, dataIndex), dimIdx);\n                    })\n                    // By default, all dims is used on tooltip.\n                    : zrUtil.each(value, setEachItem);\n\n                function setEachItem(val, dimIdx) {\n                    var dimInfo = data.getDimensionInfo(dimIdx);\n                    // If `dimInfo.tooltip` is not set, show tooltip.\n                    if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n                        return;\n                    }\n                    var dimType = dimInfo.type;\n                    var valStr = (vertially ? '- ' + (dimInfo.tooltipName || dimInfo.name) + ': ' : '')\n                        + (dimType === 'ordinal'\n                            ? val + ''\n                            : dimType === 'time'\n                            ? (multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val))\n                            : addCommas(val)\n                        );\n                    valStr && result.push(encodeHTML(valStr));\n                }\n\n                return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n            }\n\n            var data = get(this, 'data');\n\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = zrUtil.isArray(value)\n                ? formatArrayValue(value) : encodeHTML(addCommas(value));\n            var name = data.getName(dataIndex);\n\n            var color = data.getItemVisual(dataIndex, 'color');\n            if (zrUtil.isObject(color) && color.colorStops) {\n                color = (color.colorStops[0] || {}).color;\n            }\n            color = color || 'transparent';\n\n            var colorEl = formatUtil.getTooltipMarker(color);\n\n            var seriesName = this.name;\n            // FIXME\n            if (seriesName === '\\0-') {\n                // Not show '-'\n                seriesName = '';\n            }\n            seriesName = seriesName\n                ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ')\n                : '';\n            return !multipleSeries\n                ? seriesName + colorEl\n                    + (name\n                        ? encodeHTML(name) + ': ' + formattedValue\n                        : formattedValue\n                    )\n                : colorEl + seriesName + formattedValue;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var animationEnabled = this.getShallow('animation');\n            if (animationEnabled) {\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\n                    animationEnabled = false;\n                }\n            }\n            return animationEnabled;\n        },\n\n        restoreData: function () {\n            set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n        },\n\n        getColorFromPalette: function (name, scope) {\n            var ecModel = this.ecModel;\n            // PENDING\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n            if (!color) {\n                color = ecModel.getColorFromPalette(name, scope);\n            }\n            return color;\n        },\n\n        /**\n         * Get data indices for show tooltip content. See tooltip.\n         * @abstract\n         * @param {Array.<string>|string} dim\n         * @param {Array.<number>} value\n         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n         * @return {Object} {dataIndices, nestestValue}.\n         */\n        getAxisTooltipData: null,\n\n        /**\n         * See tooltip.\n         * @abstract\n         * @param {number} dataIndex\n         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n         */\n        getTooltipPosition: null\n    });\n\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\n    module.exports = SeriesModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Series.js\n// module id = 640\n// module chunks = 0 1 2","\n\n    var Group = require('zrender/lib/container/Group');\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n    var modelUtil = require('../util/model');\n    var zrUtil = require('zrender/lib/core/util');\n\n    function Chart() {\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewChart');\n    }\n\n    Chart.prototype = {\n\n        type: 'chart',\n\n        /**\n         * Init the chart\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        init: function (ecModel, api) {},\n\n        /**\n         * Render the chart\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        render: function (seriesModel, ecModel, api, payload) {},\n\n        /**\n         * Highlight series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        highlight: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n        },\n\n        /**\n         * Downplay series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        downplay: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'normal');\n        },\n\n        /**\n         * Remove self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        remove: function (ecModel, api) {\n            this.group.removeAll();\n        },\n\n        /**\n         * Dispose self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        dispose: function () {}\n\n        /**\n         * The view contains the given point.\n         * @interface\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        // containPoint: function () {}\n\n    };\n\n    var chartProto = Chart.prototype;\n    chartProto.updateView\n        = chartProto.updateLayout\n        = chartProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            this.render(seriesModel, ecModel, api, payload);\n        };\n\n    /**\n     * Set state of single element\n     * @param  {module:zrender/Element} el\n     * @param  {string} state\n     */\n    function elSetState(el, state) {\n        if (el) {\n            el.trigger(state);\n            if (el.type === 'group') {\n                for (var i = 0; i < el.childCount(); i++) {\n                    elSetState(el.childAt(i), state);\n                }\n            }\n        }\n    }\n    /**\n     * @param  {module:echarts/data/List} data\n     * @param  {Object} payload\n     * @param  {string} state 'normal'|'emphasis'\n     * @inner\n     */\n    function toggleHighlight(data, payload, state) {\n        var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n        if (dataIndex != null) {\n            zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n                elSetState(data.getItemGraphicEl(dataIdx), state);\n            });\n        }\n        else {\n            data.eachItemGraphicEl(function (el) {\n                elSetState(el, state);\n            });\n        }\n    }\n\n    // Enable Chart.extend.\n    clazzUtil.enableClassExtend(Chart, ['dispose']);\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\n\n    module.exports = Chart;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/view/Chart.js\n// module id = 641\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazz = require('./clazz');\n\n    var parseClassType = clazz.parseClassType;\n\n    var base = 0;\n\n    var componentUtil = {};\n\n    var DELIMITER = '_';\n\n    /**\n     * @public\n     * @param {string} type\n     * @return {string}\n     */\n    componentUtil.getUID = function (type) {\n        // Considering the case of crossing js context,\n        // use Math.random to make id as unique as possible.\n        return [(type || ''), base++, Math.random()].join(DELIMITER);\n    };\n\n    /**\n     * @inner\n     */\n    componentUtil.enableSubTypeDefaulter = function (entity) {\n\n        var subTypeDefaulters = {};\n\n        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n            componentType = parseClassType(componentType);\n            subTypeDefaulters[componentType.main] = defaulter;\n        };\n\n        entity.determineSubType = function (componentType, option) {\n            var type = option.type;\n            if (!type) {\n                var componentTypeMain = parseClassType(componentType).main;\n                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n                    type = subTypeDefaulters[componentTypeMain](option);\n                }\n            }\n            return type;\n        };\n\n        return entity;\n    };\n\n    /**\n     * Topological travel on Activity Network (Activity On Vertices).\n     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n     *\n     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n     *\n     * If there is circle dependencey, Error will be thrown.\n     *\n     */\n    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\n\n        /**\n         * @public\n         * @param {Array.<string>} targetNameList Target Component type list.\n         *                                           Can be ['aa', 'bb', 'aa.xx']\n         * @param {Array.<string>} fullNameList By which we can build dependency graph.\n         * @param {Function} callback Params: componentType, dependencies.\n         * @param {Object} context Scope of callback.\n         */\n        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n            if (!targetNameList.length) {\n                return;\n            }\n\n            var result = makeDepndencyGraph(fullNameList);\n            var graph = result.graph;\n            var stack = result.noEntryList;\n\n            var targetNameSet = {};\n            zrUtil.each(targetNameList, function (name) {\n                targetNameSet[name] = true;\n            });\n\n            while (stack.length) {\n                var currComponentType = stack.pop();\n                var currVertex = graph[currComponentType];\n                var isInTargetNameSet = !!targetNameSet[currComponentType];\n                if (isInTargetNameSet) {\n                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\n                    delete targetNameSet[currComponentType];\n                }\n                zrUtil.each(\n                    currVertex.successor,\n                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\n                );\n            }\n\n            zrUtil.each(targetNameSet, function () {\n                throw new Error('Circle dependency may exists');\n            });\n\n            function removeEdge(succComponentType) {\n                graph[succComponentType].entryCount--;\n                if (graph[succComponentType].entryCount === 0) {\n                    stack.push(succComponentType);\n                }\n            }\n\n            // Consider this case: legend depends on series, and we call\n            // chart.setOption({series: [...]}), where only series is in option.\n            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n            // not be called, but only sereis.mergeOption is called. Thus legend\n            // have no chance to update its local record about series (like which\n            // name of series is available in legend).\n            function removeEdgeAndAdd(succComponentType) {\n                targetNameSet[succComponentType] = true;\n                removeEdge(succComponentType);\n            }\n        };\n\n        /**\n         * DepndencyGraph: {Object}\n         * key: conponentType,\n         * value: {\n         *     successor: [conponentTypes...],\n         *     originalDeps: [conponentTypes...],\n         *     entryCount: {number}\n         * }\n         */\n        function makeDepndencyGraph(fullNameList) {\n            var graph = {};\n            var noEntryList = [];\n\n            zrUtil.each(fullNameList, function (name) {\n\n                var thisItem = createDependencyGraphItem(graph, name);\n                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n\n                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n                thisItem.entryCount = availableDeps.length;\n                if (thisItem.entryCount === 0) {\n                    noEntryList.push(name);\n                }\n\n                zrUtil.each(availableDeps, function (dependentName) {\n                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n                        thisItem.predecessor.push(dependentName);\n                    }\n                    var thatItem = createDependencyGraphItem(graph, dependentName);\n                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n                        thatItem.successor.push(name);\n                    }\n                });\n            });\n\n            return {graph: graph, noEntryList: noEntryList};\n        }\n\n        function createDependencyGraphItem(graph, name) {\n            if (!graph[name]) {\n                graph[name] = {predecessor: [], successor: []};\n            }\n            return graph[name];\n        }\n\n        function getAvailableDependencies(originalDeps, fullNameList) {\n            var availableDeps = [];\n            zrUtil.each(originalDeps, function (dep) {\n                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n            });\n            return availableDeps;\n        }\n    };\n\n    module.exports = componentUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/component.js\n// module id = 642\n// module chunks = 0 1 2","// https://github.com/mziccard/node-timsort\n\n    var DEFAULT_MIN_MERGE = 32;\n\n    var DEFAULT_MIN_GALLOPING = 7;\n\n    var DEFAULT_TMP_STORAGE_LENGTH = 256;\n\n    function minRunLength(n) {\n        var r = 0;\n\n        while (n >= DEFAULT_MIN_MERGE) {\n            r |= n & 1;\n            n >>= 1;\n        }\n\n        return n + r;\n    }\n\n    function makeAscendingRun(array, lo, hi, compare) {\n        var runHi = lo + 1;\n\n        if (runHi === hi) {\n            return 1;\n        }\n\n        if (compare(array[runHi++], array[lo]) < 0) {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n                runHi++;\n            }\n\n            reverseRun(array, lo, runHi);\n        }\n        else {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n                runHi++;\n            }\n        }\n\n        return runHi - lo;\n    }\n\n    function reverseRun(array, lo, hi) {\n        hi--;\n\n        while (lo < hi) {\n            var t = array[lo];\n            array[lo++] = array[hi];\n            array[hi--] = t;\n        }\n    }\n\n    function binaryInsertionSort(array, lo, hi, start, compare) {\n        if (start === lo) {\n            start++;\n        }\n\n        for (; start < hi; start++) {\n            var pivot = array[start];\n\n            var left = lo;\n            var right = start;\n            var mid;\n\n            while (left < right) {\n                mid = left + right >>> 1;\n\n                if (compare(pivot, array[mid]) < 0) {\n                    right = mid;\n                }\n                else {\n                    left = mid + 1;\n                }\n            }\n\n            var n = start - left;\n\n            switch (n) {\n                case 3:\n                    array[left + 3] = array[left + 2];\n\n                case 2:\n                    array[left + 2] = array[left + 1];\n\n                case 1:\n                    array[left + 1] = array[left];\n                    break;\n                default:\n                    while (n > 0) {\n                        array[left + n] = array[left + n - 1];\n                        n--;\n                    }\n            }\n\n            array[left] = pivot;\n        }\n    }\n\n    function gallopLeft(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) > 0) {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n        else {\n            maxOffset = hint + 1;\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n\n        lastOffset++;\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) > 0) {\n                lastOffset = m + 1;\n            }\n            else {\n                offset = m;\n            }\n        }\n        return offset;\n    }\n\n    function gallopRight(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) < 0) {\n            maxOffset = hint + 1;\n\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n        else {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n\n        lastOffset++;\n\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) < 0) {\n                offset = m;\n            }\n            else {\n                lastOffset = m + 1;\n            }\n        }\n\n        return offset;\n    }\n\n    function TimSort(array, compare) {\n        var minGallop = DEFAULT_MIN_GALLOPING;\n        var length = 0;\n        var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n        var stackLength = 0;\n        var runStart;\n        var runLength;\n        var stackSize = 0;\n\n        length = array.length;\n\n        if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n            tmpStorageLength = length >>> 1;\n        }\n\n        var tmp = [];\n\n        stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n\n        runStart = [];\n        runLength = [];\n\n        function pushRun(_runStart, _runLength) {\n            runStart[stackSize] = _runStart;\n            runLength[stackSize] = _runLength;\n            stackSize += 1;\n        }\n\n        function mergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n                    if (runLength[n - 1] < runLength[n + 1]) {\n                        n--;\n                    }\n                }\n                else if (runLength[n] > runLength[n + 1]) {\n                    break;\n                }\n                mergeAt(n);\n            }\n        }\n\n        function forceMergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n                    n--;\n                }\n\n                mergeAt(n);\n            }\n        }\n\n        function mergeAt(i) {\n            var start1 = runStart[i];\n            var length1 = runLength[i];\n            var start2 = runStart[i + 1];\n            var length2 = runLength[i + 1];\n\n            runLength[i] = length1 + length2;\n\n            if (i === stackSize - 3) {\n                runStart[i + 1] = runStart[i + 2];\n                runLength[i + 1] = runLength[i + 2];\n            }\n\n            stackSize--;\n\n            var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n            start1 += k;\n            length1 -= k;\n\n            if (length1 === 0) {\n                return;\n            }\n\n            length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n            if (length2 === 0) {\n                return;\n            }\n\n            if (length1 <= length2) {\n                mergeLow(start1, length1, start2, length2);\n            }\n            else {\n                mergeHigh(start1, length1, start2, length2);\n            }\n        }\n\n        function mergeLow(start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length1; i++) {\n                tmp[i] = array[start1 + i];\n            }\n\n            var cursor1 = 0;\n            var cursor2 = start2;\n            var dest = start1;\n\n            array[dest++] = array[cursor2++];\n\n            if (--length2 === 0) {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n                return;\n            }\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n                return;\n            }\n\n            var _minGallop = minGallop;\n            var count1, count2, exit;\n\n            while (1) {\n                count1 = 0;\n                count2 = 0;\n                exit = false;\n\n                do {\n                    if (compare(array[cursor2], tmp[cursor1]) < 0) {\n                        array[dest++] = array[cursor2++];\n                        count2++;\n                        count1 = 0;\n\n                        if (--length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest++] = tmp[cursor1++];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n                    if (count1 !== 0) {\n                        for (i = 0; i < count1; i++) {\n                            array[dest + i] = tmp[cursor1 + i];\n                        }\n\n                        dest += count1;\n                        cursor1 += count1;\n                        length1 -= count1;\n                        if (length1 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest++] = array[cursor2++];\n\n                    if (--length2 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n                    if (count2 !== 0) {\n                        for (i = 0; i < count2; i++) {\n                            array[dest + i] = array[cursor2 + i];\n                        }\n\n                        dest += count2;\n                        cursor2 += count2;\n                        length2 -= count2;\n\n                        if (length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    array[dest++] = tmp[cursor1++];\n\n                    if (--length1 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            minGallop < 1 && (minGallop = 1);\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n            }\n            else if (length1 === 0) {\n                throw new Error();\n                // throw new Error('mergeLow preconditions were not respected');\n            }\n            else {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n            }\n        }\n\n        function mergeHigh (start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length2; i++) {\n                tmp[i] = array[start2 + i];\n            }\n\n            var cursor1 = start1 + length1 - 1;\n            var cursor2 = length2 - 1;\n            var dest = start2 + length2 - 1;\n            var customCursor = 0;\n            var customDest = 0;\n\n            array[dest--] = array[cursor1--];\n\n            if (--length1 === 0) {\n                customCursor = dest - (length2 - 1);\n\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n\n                return;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n                return;\n            }\n\n            var _minGallop = minGallop;\n\n            while (true) {\n                var count1 = 0;\n                var count2 = 0;\n                var exit = false;\n\n                do {\n                    if (compare(tmp[cursor2], array[cursor1]) < 0) {\n                        array[dest--] = array[cursor1--];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest--] = tmp[cursor2--];\n                        count2++;\n                        count1 = 0;\n                        if (--length2 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n                    if (count1 !== 0) {\n                        dest -= count1;\n                        cursor1 -= count1;\n                        length1 -= count1;\n                        customDest = dest + 1;\n                        customCursor = cursor1 + 1;\n\n                        for (i = count1 - 1; i >= 0; i--) {\n                            array[customDest + i] = array[customCursor + i];\n                        }\n\n                        if (length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = tmp[cursor2--];\n\n                    if (--length2 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n                    if (count2 !== 0) {\n                        dest -= count2;\n                        cursor2 -= count2;\n                        length2 -= count2;\n                        customDest = dest + 1;\n                        customCursor = cursor2 + 1;\n\n                        for (i = 0; i < count2; i++) {\n                            array[customDest + i] = tmp[customCursor + i];\n                        }\n\n                        if (length2 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = array[cursor1--];\n\n                    if (--length1 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            if (minGallop < 1) {\n                minGallop = 1;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n            }\n            else if (length2 === 0) {\n                throw new Error();\n                // throw new Error('mergeHigh preconditions were not respected');\n            }\n            else {\n                customCursor = dest - (length2 - 1);\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n            }\n        }\n\n        this.mergeRuns = mergeRuns;\n        this.forceMergeRuns = forceMergeRuns;\n        this.pushRun = pushRun;\n    }\n\n    function sort(array, compare, lo, hi) {\n        if (!lo) {\n            lo = 0;\n        }\n        if (!hi) {\n            hi = array.length;\n        }\n\n        var remaining = hi - lo;\n\n        if (remaining < 2) {\n            return;\n        }\n\n        var runLength = 0;\n\n        if (remaining < DEFAULT_MIN_MERGE) {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n            return;\n        }\n\n        var ts = new TimSort(array, compare);\n\n        var minRun = minRunLength(remaining);\n\n        do {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            if (runLength < minRun) {\n                var force = remaining;\n                if (force > minRun) {\n                    force = minRun;\n                }\n\n                binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n                runLength = force;\n            }\n\n            ts.pushRun(lo, runLength);\n            ts.mergeRuns();\n\n            remaining -= runLength;\n            lo += runLength;\n        } while (remaining !== 0);\n\n        ts.forceMergeRuns();\n    }\n\n    module.exports = sort;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/timsort.js\n// module id = 643\n// module chunks = 0 1 2","/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n\n\n    var zrUtil = require('../core/util');\n\n    var Style = require('./Style');\n\n    var Element = require('../Element');\n    var RectText = require('./mixin/RectText');\n    // var Stateful = require('./mixin/Stateful');\n\n    /**\n     * @alias module:zrender/graphic/Displayable\n     * @extends module:zrender/Element\n     * @extends module:zrender/graphic/mixin/RectText\n     */\n    function Displayable(opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        // Extend properties\n        for (var name in opts) {\n            if (\n                opts.hasOwnProperty(name) &&\n                name !== 'style'\n            ) {\n                this[name] = opts[name];\n            }\n        }\n\n        /**\n         * @type {module:zrender/graphic/Style}\n         */\n        this.style = new Style(opts.style, this);\n\n        this._rect = null;\n        // Shapes for cascade clipping.\n        this.__clipPaths = [];\n\n        // FIXME Stateful must be mixined after style is setted\n        // Stateful.call(this, opts);\n    }\n\n    Displayable.prototype = {\n\n        constructor: Displayable,\n\n        type: 'displayable',\n\n        /**\n         * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n         * Dirty flag. From which painter will determine if this displayable object needs brush\n         * @name module:zrender/graphic/Displayable#__dirty\n         * @type {boolean}\n         */\n        __dirty: true,\n\n        /**\n         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n         * If ignore drawing of the displayable object. Mouse event will still be triggered\n         * @name module:/zrender/graphic/Displayable#invisible\n         * @type {boolean}\n         * @default false\n         */\n        invisible: false,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z: 0,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z2: 0,\n\n        /**\n         * z层level，决定绘画在哪层canvas中\n         * @name module:/zrender/graphic/Displayable#zlevel\n         * @type {number}\n         * @default 0\n         */\n        zlevel: 0,\n\n        /**\n         * 是否可拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        draggable: false,\n\n        /**\n         * 是否正在拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        dragging: false,\n\n        /**\n         * 是否相应鼠标事件\n         * @name module:/zrender/graphic/Displayable#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * If enable culling\n         * @type {boolean}\n         * @default false\n         */\n        culling: false,\n\n        /**\n         * Mouse cursor when hovered\n         * @name module:/zrender/graphic/Displayable#cursor\n         * @type {string}\n         */\n        cursor: 'pointer',\n\n        /**\n         * If hover area is bounding rect\n         * @name module:/zrender/graphic/Displayable#rectHover\n         * @type {string}\n         */\n        rectHover: false,\n\n        /**\n         * Render the element progressively when the value >= 0,\n         * usefull for large data.\n         * @type {number}\n         */\n        progressive: -1,\n\n        beforeBrush: function (ctx) {},\n\n        afterBrush: function (ctx) {},\n\n        /**\n         * 图形绘制方法\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        // Interface\n        brush: function (ctx, prevEl) {},\n\n        /**\n         * 获取最小包围盒\n         * @return {module:zrender/core/BoundingRect}\n         */\n        // Interface\n        getBoundingRect: function () {},\n\n        /**\n         * 判断坐标 x, y 是否在图形上\n         * If displayable element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        contain: function (x, y) {\n            return this.rectContain(x, y);\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            cb.call(context, this);\n        },\n\n        /**\n         * 判断坐标 x, y 是否在图形的包围盒上\n         * If bounding rect of element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        rectContain: function (x, y) {\n            var coord = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            return rect.contain(coord[0], coord[1]);\n        },\n\n        /**\n         * 标记图形元素为脏，并且在下一帧重绘\n         * Mark displayable element dirty and refresh next frame\n         */\n        dirty: function () {\n            this.__dirty = true;\n\n            this._rect = null;\n\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * 图形是否会触发事件\n         * If displayable object binded any event\n         * @return {boolean}\n         */\n        // TODO, 通过 bind 绑定的事件\n        // isSilent: function () {\n        //     return !(\n        //         this.hoverable || this.draggable\n        //         || this.onmousemove || this.onmouseover || this.onmouseout\n        //         || this.onmousedown || this.onmouseup || this.onclick\n        //         || this.ondragenter || this.ondragover || this.ondragleave\n        //         || this.ondrop\n        //     );\n        // },\n        /**\n         * Alias for animate('style')\n         * @param {boolean} loop\n         */\n        animateStyle: function (loop) {\n            return this.animate('style', loop);\n        },\n\n        attrKV: function (key, value) {\n            if (key !== 'style') {\n                Element.prototype.attrKV.call(this, key, value);\n            }\n            else {\n                this.style.set(value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setStyle: function (key, value) {\n            this.style.set(key, value);\n            this.dirty(false);\n            return this;\n        },\n\n        /**\n         * Use given style object\n         * @param  {Object} obj\n         */\n        useStyle: function (obj) {\n            this.style = new Style(obj, this);\n            this.dirty(false);\n            return this;\n        }\n    };\n\n    zrUtil.inherits(Displayable, Element);\n\n    zrUtil.mixin(Displayable, RectText);\n    // zrUtil.mixin(Displayable, Stateful);\n\n    module.exports = Displayable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Displayable.js\n// module id = 644\n// module chunks = 0 1 2","\n\n    /**\n     * @param {Array.<Object>} colorStops\n     */\n    var Gradient = function (colorStops) {\n\n        this.colorStops = colorStops || [];\n\n    };\n\n    Gradient.prototype = {\n\n        constructor: Gradient,\n\n        addColorStop: function (offset, color) {\n            this.colorStops.push({\n\n                offset: offset,\n\n                color: color\n            });\n        }\n\n    };\n\n    module.exports = Gradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Gradient.js\n// module id = 645\n// module chunks = 0 1 2","\n\n    var LRU = require('../../core/LRU');\n    var globalImageCache = new LRU(50);\n\n    var helper = {};\n\n    /**\n     * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n     * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n     */\n    helper.findExistImage = function (newImageOrSrc) {\n        if (typeof newImageOrSrc === 'string') {\n            var cachedImgObj = globalImageCache.get(newImageOrSrc);\n            return cachedImgObj && cachedImgObj.image;\n        }\n        else {\n            return newImageOrSrc;\n        }\n    };\n\n    /**\n     * Caution: User should cache loaded images, but not just count on LRU.\n     * Consider if required images more than LRU size, will dead loop occur?\n     *\n     * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n     * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n     * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n     * @param {Function} [cb] params: (image, cbPayload)\n     * @param {Object} [cbPayload] Payload on cb calling.\n     * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n     */\n    helper.createOrUpdateImage = function (newImageOrSrc, image, hostEl, cb, cbPayload) {\n        if (!newImageOrSrc) {\n            return image;\n        }\n        else if (typeof newImageOrSrc === 'string') {\n\n            // Image should not be loaded repeatly.\n            if ((image && image.__zrImageSrc === newImageOrSrc) || !hostEl) {\n                return image;\n            }\n\n            // Only when there is no existent image or existent image src\n            // is different, this method is responsible for load.\n            var cachedImgObj = globalImageCache.get(newImageOrSrc);\n\n            var pendingWrap = {hostEl: hostEl, cb: cb, cbPayload: cbPayload};\n\n            if (cachedImgObj) {\n                image = cachedImgObj.image;\n                !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n            }\n            else {\n                !image && (image = new Image());\n                image.onload = imageOnLoad;\n\n                globalImageCache.put(\n                    newImageOrSrc,\n                    image.__cachedImgObj = {\n                        image: image,\n                        pending: [pendingWrap]\n                    }\n                );\n\n                image.src = image.__zrImageSrc = newImageOrSrc;\n            }\n\n            return image;\n        }\n        // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n        else {\n            return newImageOrSrc;\n        }\n    };\n\n    function imageOnLoad() {\n        var cachedImgObj = this.__cachedImgObj;\n        this.onload = this.__cachedImgObj = null;\n\n        for (var i = 0; i < cachedImgObj.pending.length; i++) {\n            var pendingWrap = cachedImgObj.pending[i];\n            var cb = pendingWrap.cb;\n            cb && cb(this, pendingWrap.cbPayload);\n            pendingWrap.hostEl.dirty();\n        }\n        cachedImgObj.pending.length = 0;\n    }\n\n    var isImageReady = helper.isImageReady = function (image) {\n        return image && image.width && image.height;\n    };\n\n    module.exports = helper;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/image.js\n// module id = 646\n// module chunks = 0 1 2","\n\n    var textContain = require('../../contain/text');\n    var util = require('../../core/util');\n    var roundRectHelper = require('./roundRect');\n    var imageHelper = require('./image');\n\n    var retrieve3 = util.retrieve3;\n    var retrieve2 = util.retrieve2;\n\n    // TODO: Have not support 'start', 'end' yet.\n    var VALID_TEXT_ALIGN = {left: 1, right: 1, center: 1};\n    var VALID_TEXT_VERTICAL_ALIGN = {top: 1, bottom: 1, middle: 1};\n\n    var helper = {};\n\n    /**\n     * @param {module:zrender/graphic/Style} style\n     * @return {module:zrender/graphic/Style} The input style.\n     */\n    helper.normalizeTextStyle = function (style) {\n        normalizeStyle(style);\n        util.each(style.rich, normalizeStyle);\n        return style;\n    };\n\n    function normalizeStyle(style) {\n        if (style) {\n\n            style.font = textContain.makeFont(style);\n\n            var textAlign = style.textAlign;\n            textAlign === 'middle' && (textAlign = 'center');\n            style.textAlign = (\n                textAlign == null || VALID_TEXT_ALIGN[textAlign]\n            ) ? textAlign : 'left';\n\n            // Compatible with textBaseline.\n            var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n            textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n            style.textVerticalAlign = (\n                textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign]\n            ) ? textVerticalAlign : 'top';\n\n            var textPadding = style.textPadding;\n            if (textPadding) {\n                style.textPadding = util.normalizeCssArray(style.textPadding);\n            }\n        }\n    }\n\n    /**\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {string} text\n     * @param {module:zrender/graphic/Style} style\n     * @param {Object|boolean} [rect] {x, y, width, height}\n     *                  If set false, rect text is not used.\n     */\n    helper.renderText = function (hostEl, ctx, text, style, rect) {\n        style.rich\n            ? renderRichText(hostEl, ctx, text, style, rect)\n            : renderPlainText(hostEl, ctx, text, style, rect);\n    };\n\n    function renderPlainText(hostEl, ctx, text, style, rect) {\n        var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n\n        var textPadding = style.textPadding;\n\n        var contentBlock = hostEl.__textCotentBlock;\n        if (!contentBlock || hostEl.__dirty) {\n            contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(\n                text, font, textPadding, style.truncate\n            );\n        }\n\n        var outerHeight = contentBlock.outerHeight;\n\n        var textLines = contentBlock.lines;\n        var lineHeight = contentBlock.lineHeight;\n\n        var boxPos = getBoxPosition(outerHeight, style, rect);\n        var baseX = boxPos.baseX;\n        var baseY = boxPos.baseY;\n        var textAlign = boxPos.textAlign;\n        var textVerticalAlign = boxPos.textVerticalAlign;\n\n        // Origin of textRotation should be the base point of text drawing.\n        applyTextRotation(ctx, style, rect, baseX, baseY);\n\n        var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n        var textX = baseX;\n        var textY = boxY;\n\n        var needDrawBg = needDrawBackground(style);\n        if (needDrawBg || textPadding) {\n            // Consider performance, do not call getTextWidth util necessary.\n            var textWidth = textContain.getWidth(text, font);\n            var outerWidth = textWidth;\n            textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n            var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n\n            needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n            if (textPadding) {\n                textX = getTextXForPadding(baseX, textAlign, textPadding);\n                textY += textPadding[0];\n            }\n        }\n\n        setCtx(ctx, 'textAlign', textAlign || 'left');\n        // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n        // text will offset downward a little bit in font \"Microsoft YaHei\".\n        setCtx(ctx, 'textBaseline', 'middle');\n\n        // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n        setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n        setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n        setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n        setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0);\n\n        // `textBaseline` is set as 'middle'.\n        textY += lineHeight / 2;\n\n        var textLineWidth = style.textLineWidth;\n        var textStroke = getStroke(style.textStroke, textLineWidth);\n        var textFill = getFill(style.textFill);\n\n        if (textStroke) {\n            setCtx(ctx, 'lineWidth', textLineWidth);\n            setCtx(ctx, 'strokeStyle', textStroke);\n        }\n        if (textFill) {\n            setCtx(ctx, 'fillStyle', textFill);\n        }\n\n        for (var i = 0; i < textLines.length; i++) {\n            // Fill after stroke so the outline will not cover the main part.\n            textStroke && ctx.strokeText(textLines[i], textX, textY);\n            textFill && ctx.fillText(textLines[i], textX, textY);\n            textY += lineHeight;\n        }\n    }\n\n    function renderRichText(hostEl, ctx, text, style, rect) {\n        var contentBlock = hostEl.__textCotentBlock;\n\n        if (!contentBlock || hostEl.__dirty) {\n            contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n        }\n\n        drawRichText(hostEl, ctx, contentBlock, style, rect);\n    }\n\n    function drawRichText(hostEl, ctx, contentBlock, style, rect) {\n        var contentWidth = contentBlock.width;\n        var outerWidth = contentBlock.outerWidth;\n        var outerHeight = contentBlock.outerHeight;\n        var textPadding = style.textPadding;\n\n        var boxPos = getBoxPosition(outerHeight, style, rect);\n        var baseX = boxPos.baseX;\n        var baseY = boxPos.baseY;\n        var textAlign = boxPos.textAlign;\n        var textVerticalAlign = boxPos.textVerticalAlign;\n\n        // Origin of textRotation should be the base point of text drawing.\n        applyTextRotation(ctx, style, rect, baseX, baseY);\n\n        var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n        var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n        var xLeft = boxX;\n        var lineTop = boxY;\n        if (textPadding) {\n            xLeft += textPadding[3];\n            lineTop += textPadding[0];\n        }\n        var xRight = xLeft + contentWidth;\n\n        needDrawBackground(style) && drawBackground(\n            hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight\n        );\n\n        for (var i = 0; i < contentBlock.lines.length; i++) {\n            var line = contentBlock.lines[i];\n            var tokens = line.tokens;\n            var tokenCount = tokens.length;\n            var lineHeight = line.lineHeight;\n            var usedWidth = line.width;\n\n            var leftIndex = 0;\n            var lineXLeft = xLeft;\n            var lineXRight = xRight;\n            var rightIndex = tokenCount - 1;\n            var token;\n\n            while (\n                leftIndex < tokenCount\n                && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')\n            ) {\n                placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n                usedWidth -= token.width;\n                lineXLeft += token.width;\n                leftIndex++;\n            }\n\n            while (\n                rightIndex >= 0\n                && (token = tokens[rightIndex], token.textAlign === 'right')\n            ) {\n                placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n                usedWidth -= token.width;\n                lineXRight -= token.width;\n                rightIndex--;\n            }\n\n            // The other tokens are placed as textAlign 'center' if there is enough space.\n            lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n            while (leftIndex <= rightIndex) {\n                token = tokens[leftIndex];\n                // Consider width specified by user, use 'center' rather than 'left'.\n                placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n                lineXLeft += token.width;\n                leftIndex++;\n            }\n\n            lineTop += lineHeight;\n        }\n    }\n\n    function applyTextRotation(ctx, style, rect, x, y) {\n        // textRotation only apply in RectText.\n        if (rect && style.textRotation) {\n            var origin = style.textOrigin;\n            if (origin === 'center') {\n                x = rect.width / 2 + rect.x;\n                y = rect.height / 2 + rect.y;\n            }\n            else if (origin) {\n                x = origin[0] + rect.x;\n                y = origin[1] + rect.y;\n            }\n\n            ctx.translate(x, y);\n            // Positive: anticlockwise\n            ctx.rotate(-style.textRotation);\n            ctx.translate(-x, -y);\n        }\n    }\n\n    function placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n        var tokenStyle = style.rich[token.styleName] || {};\n\n        // 'ctx.textBaseline' is always set as 'middle', for sake of\n        // the bias of \"Microsoft YaHei\".\n        var textVerticalAlign = token.textVerticalAlign;\n        var y = lineTop + lineHeight / 2;\n        if (textVerticalAlign === 'top') {\n            y = lineTop + token.height / 2;\n        }\n        else if (textVerticalAlign === 'bottom') {\n            y = lineTop + lineHeight - token.height / 2;\n        }\n\n        !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(\n            hostEl,\n            ctx,\n            tokenStyle,\n            textAlign === 'right'\n                ? x - token.width\n                : textAlign === 'center'\n                ? x - token.width / 2\n                : x,\n            y - token.height / 2,\n            token.width,\n            token.height\n        );\n\n        var textPadding = token.textPadding;\n        if (textPadding) {\n            x = getTextXForPadding(x, textAlign, textPadding);\n            y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n        }\n\n        setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n        setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n        setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n        setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n\n        setCtx(ctx, 'textAlign', textAlign);\n        // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n        // text will offset downward a little bit in font \"Microsoft YaHei\".\n        setCtx(ctx, 'textBaseline', 'middle');\n\n        setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n\n        var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textLineWidth);\n        var textFill = getFill(tokenStyle.textFill || style.textFill);\n        var textLineWidth = retrieve2(tokenStyle.textLineWidth, style.textLineWidth);\n\n        // Fill after stroke so the outline will not cover the main part.\n        if (textStroke) {\n            setCtx(ctx, 'lineWidth', textLineWidth);\n            setCtx(ctx, 'strokeStyle', textStroke);\n            ctx.strokeText(token.text, x, y);\n        }\n        if (textFill) {\n            setCtx(ctx, 'fillStyle', textFill);\n            ctx.fillText(token.text, x, y);\n        }\n    }\n\n    function needDrawBackground(style) {\n        return style.textBackgroundColor\n            || (style.textBorderWidth && style.textBorderColor);\n    }\n\n    // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n    // shape: {x, y, width, height}\n    function drawBackground(hostEl, ctx, style, x, y, width, height) {\n        var textBackgroundColor = style.textBackgroundColor;\n        var textBorderWidth = style.textBorderWidth;\n        var textBorderColor = style.textBorderColor;\n        var isPlainBg = util.isString(textBackgroundColor);\n\n        setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n        setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n        setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n        setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n        if (isPlainBg || (textBorderWidth && textBorderColor)) {\n            ctx.beginPath();\n            var textBorderRadius = style.textBorderRadius;\n            if (!textBorderRadius) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, {\n                    x: x, y: y, width: width, height: height, r: textBorderRadius\n                });\n            }\n            ctx.closePath();\n        }\n\n        if (isPlainBg) {\n            setCtx(ctx, 'fillStyle', textBackgroundColor);\n            ctx.fill();\n        }\n        else if (util.isObject(textBackgroundColor)) {\n            var image = textBackgroundColor.image;\n\n            image = imageHelper.createOrUpdateImage(\n                image, null, hostEl, onBgImageLoaded, textBackgroundColor\n            );\n            if (image && imageHelper.isImageReady(image)) {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n\n        if (textBorderWidth && textBorderColor) {\n            setCtx(ctx, 'lineWidth', textBorderWidth);\n            setCtx(ctx, 'strokeStyle', textBorderColor);\n            ctx.stroke();\n        }\n    }\n\n    function onBgImageLoaded(image, textBackgroundColor) {\n        // Replace image, so that `contain/text.js#parseRichText`\n        // will get correct result in next tick.\n        textBackgroundColor.image = image;\n    }\n\n    function getBoxPosition(blockHeiht, style, rect) {\n        var baseX = style.x || 0;\n        var baseY = style.y || 0;\n        var textAlign = style.textAlign;\n        var textVerticalAlign = style.textVerticalAlign;\n\n        // Text position represented by coord\n        if (rect) {\n            var textPosition = style.textPosition;\n            if (textPosition instanceof Array) {\n                // Percent\n                baseX = rect.x + parsePercent(textPosition[0], rect.width);\n                baseY = rect.y + parsePercent(textPosition[1], rect.height);\n            }\n            else {\n                var res = textContain.adjustTextPositionOnRect(\n                    textPosition, rect, style.textDistance\n                );\n                baseX = res.x;\n                baseY = res.y;\n                // Default align and baseline when has textPosition\n                textAlign = textAlign || res.textAlign;\n                textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n            }\n\n            // textOffset is only support in RectText, otherwise\n            // we have to adjust boundingRect for textOffset.\n            var textOffset = style.textOffset;\n            if (textOffset) {\n                baseX += textOffset[0];\n                baseY += textOffset[1];\n            }\n        }\n\n        return {\n            baseX: baseX,\n            baseY: baseY,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    function setCtx(ctx, prop, value) {\n        // FIXME ??? performance try\n        // if (ctx.__currentValues[prop] !== value) {\n            ctx[prop] = ctx.__currentValues[prop] = value;\n        // }\n        return ctx[prop];\n    }\n\n    /**\n     * @param {string} [stroke] If specified, do not check style.textStroke.\n     * @param {string} [lineWidth] If specified, do not check style.textStroke.\n     * @param {number} style\n     */\n    var getStroke = helper.getStroke = function (stroke, lineWidth) {\n        return (stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none')\n            ? null\n            // TODO pattern and gradient?\n            : (stroke.image || stroke.colorStops)\n            ? '#000'\n            : stroke;\n    };\n\n    var getFill = helper.getFill = function (fill) {\n        return (fill == null || fill === 'none')\n            ? null\n            // TODO pattern and gradient?\n            : (fill.image || fill.colorStops)\n            ? '#000'\n            : fill;\n    };\n\n    function parsePercent(value, maxValue) {\n        if (typeof value === 'string') {\n            if (value.lastIndexOf('%') >= 0) {\n                return parseFloat(value) / 100 * maxValue;\n            }\n            return parseFloat(value);\n        }\n        return value;\n    }\n\n    function getTextXForPadding(x, textAlign, textPadding) {\n        return textAlign === 'right'\n            ? (x - textPadding[1])\n            : textAlign === 'center'\n            ? (x + textPadding[3] / 2 - textPadding[1] / 2)\n            : (x + textPadding[3]);\n    }\n\n    /**\n     * @param {string} text\n     * @param {module:zrender/Style} style\n     * @return {boolean}\n     */\n    helper.needDrawText = function (text, style) {\n        return text != null\n            && (text\n                || style.textBackgroundColor\n                || (style.textBorderWidth && style.textBorderColor)\n                || style.textPadding\n            );\n    };\n\n    module.exports = helper;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/text.js\n// module id = 647\n// module chunks = 0 1 2","'use strict';\n\n\n    var List = require('../../data/List');\n    var completeDimensions = require('../../data/helper/completeDimensions');\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var CoordinateSystem = require('../../CoordinateSystem');\n    var getDataItemValue = modelUtil.getDataItemValue;\n    var converDataValue = modelUtil.converDataValue;\n\n    function firstDataNotNull(data) {\n        var i = 0;\n        while (i < data.length && data[i] == null) {\n            i++;\n        }\n        return data[i];\n    }\n    function ifNeedCompleteOrdinalData(data) {\n        var sampleItem = firstDataNotNull(data);\n        return sampleItem != null\n            && !zrUtil.isArray(getDataItemValue(sampleItem));\n    }\n\n    /**\n     * Helper function to create a list from option data\n     */\n    function createListFromArray(data, seriesModel, ecModel) {\n        // If data is undefined\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        var coordSysName = seriesModel.get('coordinateSystem');\n        var creator = creators[coordSysName];\n        var registeredCoordSys = CoordinateSystem.get(coordSysName);\n        var completeDimOpt = {\n            encodeDef: seriesModel.get('encode'),\n            dimsDef: seriesModel.get('dimensions')\n        };\n\n        // FIXME\n        var axesInfo = creator && creator(data, seriesModel, ecModel, completeDimOpt);\n        var dimensions = axesInfo && axesInfo.dimensions;\n        if (!dimensions) {\n            // Get dimensions from registered coordinate system\n            dimensions = (registeredCoordSys && (\n                registeredCoordSys.getDimensionsInfo\n                    ? registeredCoordSys.getDimensionsInfo()\n                    : registeredCoordSys.dimensions.slice()\n            )) || ['x', 'y'];\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n        }\n\n        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n\n        var list = new List(dimensions, seriesModel);\n\n        var nameList = createNameList(axesInfo, data);\n\n        var categories = {};\n        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\n            ? function (itemOpt, dimName, dataIndex, dimIndex) {\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                // Use dataIndex as ordinal value in categoryAxis\n                return dimIndex === categoryIndex\n                    ? dataIndex\n                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n            }\n            : function (itemOpt, dimName, dataIndex, dimIndex) {\n                var value = getDataItemValue(itemOpt);\n                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n                if (categoryAxesModels && categoryAxesModels[dimName]) {\n                    // If given value is a category string\n                    if (typeof val === 'string') {\n                        // Lazy get categories\n                        categories[dimName] = categories[dimName]\n                            || categoryAxesModels[dimName].getCategories();\n                        val = zrUtil.indexOf(categories[dimName], val);\n                        if (val < 0 && !isNaN(val)) {\n                            // In case some one write '1', '2' istead of 1, 2\n                            val = +val;\n                        }\n                    }\n                }\n                return val;\n            };\n\n        list.hasItemOption = false;\n        list.initData(data, nameList, dimValueGetter);\n\n        return list;\n    }\n\n    function isStackable(axisType) {\n        return axisType !== 'category' && axisType !== 'time';\n    }\n\n    function getDimTypeByAxis(axisType) {\n        return axisType === 'category'\n            ? 'ordinal'\n            : axisType === 'time'\n            ? 'time'\n            : 'float';\n    }\n\n    /**\n     * Creaters for each coord system.\n     */\n    var creators = {\n\n        cartesian2d: function (data, seriesModel, ecModel, completeDimOpt) {\n\n            var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n                return ecModel.queryComponents({\n                    mainType: name,\n                    index: seriesModel.get(name + 'Index'),\n                    id: seriesModel.get(name + 'Id')\n                })[0];\n            });\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            if (__DEV__) {\n                if (!xAxisModel) {\n                    throw new Error('xAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('xAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n                if (!yAxisModel) {\n                    throw new Error('yAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('yAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'x',\n                    type: getDimTypeByAxis(xAxisType),\n                    stackable: isStackable(xAxisType)\n                },\n                {\n                    name: 'y',\n                    // If two category axes\n                    type: getDimTypeByAxis(yAxisType),\n                    stackable: isStackable(yAxisType)\n                }\n            ];\n\n            var isXAxisCateogry = xAxisType === 'category';\n            var isYAxisCategory = yAxisType === 'category';\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isXAxisCateogry) {\n                categoryAxesModels.x = xAxisModel;\n            }\n            if (isYAxisCategory) {\n                categoryAxesModels.y = yAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        singleAxis: function (data, seriesModel, ecModel, completeDimOpt) {\n\n            var singleAxisModel = ecModel.queryComponents({\n                mainType: 'singleAxis',\n                index: seriesModel.get('singleAxisIndex'),\n                id: seriesModel.get('singleAxisId')\n            })[0];\n\n            if (__DEV__) {\n                if (!singleAxisModel) {\n                    throw new Error('singleAxis should be specified.');\n                }\n            }\n\n            var singleAxisType = singleAxisModel.get('type');\n            var isCategory = singleAxisType === 'category';\n\n            var dimensions = [{\n                name: 'single',\n                type: getDimTypeByAxis(singleAxisType),\n                stackable: isStackable(singleAxisType)\n            }];\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isCategory) {\n                categoryAxesModels.single = singleAxisModel;\n            }\n\n            return {\n                dimensions: dimensions,\n                categoryIndex: isCategory ? 0 : -1,\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        polar: function (data, seriesModel, ecModel, completeDimOpt) {\n            var polarModel = ecModel.queryComponents({\n                mainType: 'polar',\n                index: seriesModel.get('polarIndex'),\n                id: seriesModel.get('polarId')\n            })[0];\n\n            var angleAxisModel = polarModel.findAxisModel('angleAxis');\n            var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n\n            if (__DEV__) {\n                if (!angleAxisModel) {\n                    throw new Error('angleAxis option not found');\n                }\n                if (!radiusAxisModel) {\n                    throw new Error('radiusAxis option not found');\n                }\n            }\n\n            var radiusAxisType = radiusAxisModel.get('type');\n            var angleAxisType = angleAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'radius',\n                    type: getDimTypeByAxis(radiusAxisType),\n                    stackable: isStackable(radiusAxisType)\n                },\n                {\n                    name: 'angle',\n                    type: getDimTypeByAxis(angleAxisType),\n                    stackable: isStackable(angleAxisType)\n                }\n            ];\n            var isAngleAxisCateogry = angleAxisType === 'category';\n            var isRadiusAxisCateogry = radiusAxisType === 'category';\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isRadiusAxisCateogry) {\n                categoryAxesModels.radius = radiusAxisModel;\n            }\n            if (isAngleAxisCateogry) {\n                categoryAxesModels.angle = angleAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        geo: function (data, seriesModel, ecModel, completeDimOpt) {\n            // TODO Region\n            // 多个散点图系列在同一个地区的时候\n            return {\n                dimensions: completeDimensions([\n                    {name: 'lng'},\n                    {name: 'lat'}\n                ], data, completeDimOpt)\n            };\n        }\n    };\n\n    function createNameList(result, data) {\n        var nameList = [];\n\n        var categoryDim = result && result.dimensions[result.categoryIndex];\n        var categoryAxisModel;\n        if (categoryDim) {\n            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n        }\n\n        if (categoryAxisModel) {\n            // FIXME Two category axis\n            var categories = categoryAxisModel.getCategories();\n            if (categories) {\n                var dataLen = data.length;\n                // Ordered data is given explicitly like\n                // [[3, 0.2], [1, 0.3], [2, 0.15]]\n                // or given scatter data,\n                // pick the category\n                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n                    nameList = [];\n                    for (var i = 0; i < dataLen; i++) {\n                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\n                    }\n                }\n                else {\n                    nameList = categories.slice(0);\n                }\n            }\n        }\n\n        return nameList;\n    }\n\n    module.exports = createListFromArray;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/createListFromArray.js\n// module id = 648\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../../util/format');\n    var graphic = require('../../util/graphic');\n    var Model = require('../../model/Model');\n    var numberUtil = require('../../util/number');\n    var remRadian = numberUtil.remRadian;\n    var isRadianAroundZero = numberUtil.isRadianAroundZero;\n    var vec2 = require('zrender/lib/core/vector');\n    var matrix = require('zrender/lib/core/matrix');\n    var v2ApplyTransform = vec2.applyTransform;\n    var retrieve = zrUtil.retrieve;\n\n    var PI = Math.PI;\n\n    function makeAxisEventDataBase(axisModel) {\n        var eventData = {\n            componentType: axisModel.mainType\n        };\n        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n        return eventData;\n    }\n\n    /**\n     * A final axis is translated and rotated from a \"standard axis\".\n     * So opt.position and opt.rotation is required.\n     *\n     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n     * for example: (0, 0) ------------> (0, 50)\n     *\n     * nameDirection or tickDirection or labelDirection is 1 means tick\n     * or label is below the standard axis, whereas is -1 means above\n     * the standard axis. labelOffset means offset between label and axis,\n     * which is useful when 'onZero', where axisLabel is in the grid and\n     * label in outside grid.\n     *\n     * Tips: like always,\n     * positive rotation represents anticlockwise, and negative rotation\n     * represents clockwise.\n     * The direction of position coordinate is the same as the direction\n     * of screen coordinate.\n     *\n     * Do not need to consider axis 'inverse', which is auto processed by\n     * axis extent.\n     *\n     * @param {module:zrender/container/Group} group\n     * @param {Object} axisModel\n     * @param {Object} opt Standard axis parameters.\n     * @param {Array.<number>} opt.position [x, y]\n     * @param {number} opt.rotation by radian\n     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle'.\n     * @param {number} [opt.tickDirection=1] 1 or -1\n     * @param {number} [opt.labelDirection=1] 1 or -1\n     * @param {number} [opt.labelOffset=0] Usefull when onZero.\n     * @param {string} [opt.axisLabelShow] default get from axisModel.\n     * @param {string} [opt.axisName] default get from axisModel.\n     * @param {number} [opt.axisNameAvailableWidth]\n     * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n     * @param {number} [opt.labelInterval] Default label interval when label\n     *                                     interval from model is null or 'auto'.\n     * @param {number} [opt.strokeContainThreshold] Default label interval when label\n     * @param {number} [opt.nameTruncateMaxWidth]\n     */\n    var AxisBuilder = function (axisModel, opt) {\n\n        /**\n         * @readOnly\n         */\n        this.opt = opt;\n\n        /**\n         * @readOnly\n         */\n        this.axisModel = axisModel;\n\n        // Default value\n        zrUtil.defaults(\n            opt,\n            {\n                labelOffset: 0,\n                nameDirection: 1,\n                tickDirection: 1,\n                labelDirection: 1,\n                silent: true\n            }\n        );\n\n        /**\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        // FIXME Not use a seperate text group?\n        var dumbGroup = new graphic.Group({\n            position: opt.position.slice(),\n            rotation: opt.rotation\n        });\n\n        // this.group.add(dumbGroup);\n        // this._dumbGroup = dumbGroup;\n\n        dumbGroup.updateTransform();\n        this._transform = dumbGroup.transform;\n\n        this._dumbGroup = dumbGroup;\n    };\n\n    AxisBuilder.prototype = {\n\n        constructor: AxisBuilder,\n\n        hasBuilder: function (name) {\n            return !!builders[name];\n        },\n\n        add: function (name) {\n            builders[name].call(this);\n        },\n\n        getGroup: function () {\n            return this.group;\n        }\n\n    };\n\n    var builders = {\n\n        /**\n         * @private\n         */\n        axisLine: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisLine.show')) {\n                return;\n            }\n\n            var extent = this.axisModel.axis.getExtent();\n\n            var matrix = this._transform;\n            var pt1 = [extent[0], 0];\n            var pt2 = [extent[1], 0];\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n\n            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                // Id for animation\n                anid: 'line',\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.extend(\n                    {lineCap: 'round'},\n                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\n                ),\n                strokeContainThreshold: opt.strokeContainThreshold || 5,\n                silent: true,\n                z2: 1\n            })));\n        },\n\n        /**\n         * @private\n         */\n        axisTick: function () {\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n\n            if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n                return;\n            }\n\n            var tickModel = axisModel.getModel('axisTick');\n            var opt = this.opt;\n\n            var lineStyleModel = tickModel.getModel('lineStyle');\n            var tickLen = tickModel.get('length');\n\n            var tickInterval = getInterval(tickModel, opt.labelInterval);\n            var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\n            var ticks = axis.scale.getTicks();\n\n            var pt1 = [];\n            var pt2 = [];\n            var matrix = this._transform;\n\n            for (var i = 0; i < ticksCoords.length; i++) {\n                // Only ordinal scale support tick interval\n                if (ifIgnoreOnTick(axis, i, tickInterval)) {\n                     continue;\n                }\n\n                var tickCoord = ticksCoords[i];\n\n                pt1[0] = tickCoord;\n                pt1[1] = 0;\n                pt2[0] = tickCoord;\n                pt2[1] = opt.tickDirection * tickLen;\n\n                if (matrix) {\n                    v2ApplyTransform(pt1, pt1, matrix);\n                    v2ApplyTransform(pt2, pt2, matrix);\n                }\n                // Tick line, Not use group transform to have better line draw\n                this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                    // Id for animation\n                    anid: 'tick_' + ticks[i],\n\n                    shape: {\n                        x1: pt1[0],\n                        y1: pt1[1],\n                        x2: pt2[0],\n                        y2: pt2[1]\n                    },\n                    style: zrUtil.defaults(\n                        lineStyleModel.getLineStyle(),\n                        {\n                            stroke: axisModel.get('axisLine.lineStyle.color')\n                        }\n                    ),\n                    z2: 2,\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @private\n         */\n        axisLabel: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n            var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n            if (!show || axis.scale.isBlank()) {\n                return;\n            }\n\n            var labelModel = axisModel.getModel('axisLabel');\n            var labelMargin = labelModel.get('margin');\n            var ticks = axis.scale.getTicks();\n            var labels = axisModel.getFormattedLabels();\n\n            // Special label rotate.\n            var labelRotation = (\n                retrieve(opt.labelRotate, labelModel.get('rotate')) || 0\n            ) * PI / 180;\n\n            var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n            var categoryData = axisModel.get('data');\n\n            var textEls = [];\n            var silent = isSilent(axisModel);\n            var triggerEvent = axisModel.get('triggerEvent');\n\n            zrUtil.each(ticks, function (tickVal, index) {\n                if (ifIgnoreOnTick(axis, index, opt.labelInterval)) {\n                     return;\n                }\n\n                var itemLabelModel = labelModel;\n                if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n                    itemLabelModel = new Model(\n                        categoryData[tickVal].textStyle, labelModel, axisModel.ecModel\n                    );\n                }\n\n                var textColor = itemLabelModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color');\n\n                var tickCoord = axis.dataToCoord(tickVal);\n                var pos = [\n                    tickCoord,\n                    opt.labelOffset + opt.labelDirection * labelMargin\n                ];\n                var labelStr = axis.scale.getLabel(tickVal);\n\n                var textEl = new graphic.Text({\n                    // Id for animation\n                    anid: 'label_' + tickVal,\n                    position: pos,\n                    rotation: labelLayout.rotation,\n                    silent: silent,\n                    z2: 10\n                });\n\n                graphic.setTextStyle(textEl.style, itemLabelModel, {\n                    text: labels[index],\n                    textAlign: itemLabelModel.getShallow('align', true)\n                        || labelLayout.textAlign,\n                    textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true)\n                        || itemLabelModel.getShallow('baseline', true)\n                        || labelLayout.textVerticalAlign,\n                    textFill: typeof textColor === 'function'\n                        ? textColor(\n                            // (1) In category axis with data zoom, tick is not the original\n                            // index of axis.data. So tick should not be exposed to user\n                            // in category axis.\n                            // (2) Compatible with previous version, which always returns labelStr.\n                            // But in interval scale labelStr is like '223,445', which maked\n                            // user repalce ','. So we modify it to return original val but remain\n                            // it as 'string' to avoid error in replacing.\n                            axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal,\n                            index\n                        )\n                        : textColor\n                });\n\n                // Pack data for mouse event\n                if (triggerEvent) {\n                    textEl.eventData = makeAxisEventDataBase(axisModel);\n                    textEl.eventData.targetType = 'axisLabel';\n                    textEl.eventData.value = labelStr;\n                }\n\n                // FIXME\n                this._dumbGroup.add(textEl);\n                textEl.updateTransform();\n\n                textEls.push(textEl);\n                this.group.add(textEl);\n\n                textEl.decomposeTransform();\n\n            }, this);\n\n            fixMinMaxLabelShow(axisModel, textEls);\n        },\n\n        /**\n         * @private\n         */\n        axisName: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var name = retrieve(opt.axisName, axisModel.get('name'));\n\n            if (!name) {\n                return;\n            }\n\n            var nameLocation = axisModel.get('nameLocation');\n            var nameDirection = opt.nameDirection;\n            var textStyleModel = axisModel.getModel('nameTextStyle');\n            var gap = axisModel.get('nameGap') || 0;\n\n            var extent = this.axisModel.axis.getExtent();\n            var gapSignal = extent[0] > extent[1] ? -1 : 1;\n            var pos = [\n                nameLocation === 'start'\n                    ? extent[0] - gapSignal * gap\n                    : nameLocation === 'end'\n                    ? extent[1] + gapSignal * gap\n                    : (extent[0] + extent[1]) / 2, // 'middle'\n                // Reuse labelOffset.\n                nameLocation === 'middle' ? opt.labelOffset + nameDirection * gap : 0\n            ];\n\n            var labelLayout;\n\n            var nameRotation = axisModel.get('nameRotate');\n            if (nameRotation != null) {\n                nameRotation = nameRotation * PI / 180; // To radian.\n            }\n\n            var axisNameAvailableWidth;\n\n            if (nameLocation === 'middle') {\n                labelLayout = innerTextLayout(\n                    opt.rotation,\n                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n                    nameDirection\n                );\n            }\n            else {\n                labelLayout = endTextLayout(\n                    opt, nameLocation, nameRotation || 0, extent\n                );\n\n                axisNameAvailableWidth = opt.axisNameAvailableWidth;\n                if (axisNameAvailableWidth != null) {\n                    axisNameAvailableWidth = Math.abs(\n                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\n                    );\n                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n                }\n            }\n\n            var textFont = textStyleModel.getFont();\n\n            var truncateOpt = axisModel.get('nameTruncate', true) || {};\n            var ellipsis = truncateOpt.ellipsis;\n            var maxWidth = retrieve(\n                opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth\n            );\n            // FIXME\n            // truncate rich text? (consider performance)\n            var truncatedText = (ellipsis != null && maxWidth != null)\n                ? formatUtil.truncateText(\n                    name, maxWidth, textFont, ellipsis,\n                    {minChar: 2, placeholder: truncateOpt.placeholder}\n                )\n                : name;\n\n            var tooltipOpt = axisModel.get('tooltip', true);\n\n            var mainType = axisModel.mainType;\n            var formatterParams = {\n                componentType: mainType,\n                name: name,\n                $vars: ['name']\n            };\n            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n\n            var textEl = new graphic.Text({\n                // Id for animation\n                anid: 'name',\n\n                __fullText: name,\n                __truncatedText: truncatedText,\n\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: isSilent(axisModel),\n                z2: 1,\n                tooltip: (tooltipOpt && tooltipOpt.show)\n                    ? zrUtil.extend({\n                        content: name,\n                        formatter: function () {\n                            return name;\n                        },\n                        formatterParams: formatterParams\n                    }, tooltipOpt)\n                    : null\n            });\n\n            graphic.setTextStyle(textEl.style, textStyleModel, {\n                text: truncatedText,\n                textFont: textFont,\n                textFill: textStyleModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color'),\n                textAlign: labelLayout.textAlign,\n                textVerticalAlign: labelLayout.textVerticalAlign\n            });\n\n            if (axisModel.get('triggerEvent')) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisName';\n                textEl.eventData.name = name;\n            }\n\n            // FIXME\n            this._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            this.group.add(textEl);\n\n            textEl.decomposeTransform();\n        }\n\n    };\n\n    /**\n     * @public\n     * @static\n     * @param {Object} opt\n     * @param {number} axisRotation in radian\n     * @param {number} textRotation in radian\n     * @param {number} direction\n     * @return {Object} {\n     *  rotation, // according to axis\n     *  textAlign,\n     *  textVerticalAlign\n     * }\n     */\n    var innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n        var rotationDiff = remRadian(textRotation - axisRotation);\n        var textAlign;\n        var textVerticalAlign;\n\n        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n\n            if (rotationDiff > 0 && rotationDiff < PI) {\n                textAlign = direction > 0 ? 'right' : 'left';\n            }\n            else {\n                textAlign = direction > 0 ? 'left' : 'right';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    };\n\n    function endTextLayout(opt, textPosition, textRotate, extent) {\n        var rotationDiff = remRadian(textRotate - opt.rotation);\n        var textAlign;\n        var textVerticalAlign;\n        var inverse = extent[0] > extent[1];\n        var onLeft = (textPosition === 'start' && !inverse)\n            || (textPosition !== 'start' && inverse);\n\n        if (isRadianAroundZero(rotationDiff - PI / 2)) {\n            textVerticalAlign = onLeft ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n            textVerticalAlign = onLeft ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n                textAlign = onLeft ? 'left' : 'right';\n            }\n            else {\n                textAlign = onLeft ? 'right' : 'left';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    function isSilent(axisModel) {\n        var tooltipOpt = axisModel.get('tooltip');\n        return axisModel.get('silent')\n            // Consider mouse cursor, add these restrictions.\n            || !(\n                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\n            );\n    }\n\n    function fixMinMaxLabelShow(axisModel, textEls) {\n        // If min or max are user set, we need to check\n        // If the tick on min(max) are overlap on their neighbour tick\n        // If they are overlapped, we need to hide the min(max) tick label\n        var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n        var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n        var firstLabel = textEls[0];\n        var nextLabel = textEls[1];\n        var lastLabel = textEls[textEls.length - 1];\n        var prevLabel = textEls[textEls.length - 2];\n\n        if (showMinLabel === false) {\n            firstLabel.ignore = true;\n        }\n        else if (axisModel.getMin() != null && isTwoLabelOverlapped(firstLabel, nextLabel)) {\n            showMinLabel ? (nextLabel.ignore = true) : (firstLabel.ignore = true);\n        }\n\n        if (showMaxLabel === false) {\n            lastLabel.ignore = true;\n        }\n        else if (axisModel.getMax() != null && isTwoLabelOverlapped(prevLabel, lastLabel)) {\n            showMaxLabel ? (prevLabel.ignore = true) : (lastLabel.ignore = true);\n        }\n    }\n\n    function isTwoLabelOverlapped(current, next, labelLayout) {\n        // current and next has the same rotation.\n        var firstRect = current && current.getBoundingRect().clone();\n        var nextRect = next && next.getBoundingRect().clone();\n\n        if (!firstRect || !nextRect) {\n            return;\n        }\n\n        // When checking intersect of two rotated labels, we use mRotationBack\n        // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n        var mRotationBack = matrix.identity([]);\n        matrix.rotate(mRotationBack, mRotationBack, -current.rotation);\n\n        firstRect.applyTransform(matrix.mul([], mRotationBack, current.getLocalTransform()));\n        nextRect.applyTransform(matrix.mul([], mRotationBack, next.getLocalTransform()));\n\n        return firstRect.intersect(nextRect);\n    }\n\n\n    /**\n     * @static\n     */\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval) {\n        var rawTick;\n        var scale = axis.scale;\n        return scale.type === 'ordinal'\n            && (\n                typeof interval === 'function'\n                    ? (\n                        rawTick = scale.getTicks()[i],\n                        !interval(rawTick, scale.getLabel(rawTick))\n                    )\n                    : i % (interval + 1)\n            );\n    };\n\n    /**\n     * @static\n     */\n    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n        var interval = model.get('interval');\n        if (interval == null || interval == 'auto') {\n            interval = labelInterval;\n        }\n        return interval;\n    };\n\n    module.exports = AxisBuilder;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/AxisBuilder.js\n// module id = 649\n// module chunks = 0 1 2","\n\n    var numberUtil = require('../util/number');\n    var linearMap = numberUtil.linearMap;\n    var zrUtil = require('zrender/lib/core/util');\n    var axisHelper = require('./axisHelper');\n\n    function fixExtentWithBands(extent, nTick) {\n        var size = extent[1] - extent[0];\n        var len = nTick;\n        var margin = size / len / 2;\n        extent[0] += margin;\n        extent[1] -= margin;\n    }\n\n    var normalizedExtent = [0, 1];\n    /**\n     * @name module:echarts/coord/CartesianAxis\n     * @constructor\n     */\n    var Axis = function (dim, scale, extent) {\n\n        /**\n         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n         * @type {string}\n         */\n        this.dim = dim;\n\n        /**\n         * Axis scale\n         * @type {module:echarts/coord/scale/*}\n         */\n        this.scale = scale;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        this._extent = extent || [0, 0];\n\n        /**\n         * @type {boolean}\n         */\n        this.inverse = false;\n\n        /**\n         * Usually true when axis has a ordinal scale\n         * @type {boolean}\n         */\n        this.onBand = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._labelInterval;\n    };\n\n    Axis.prototype = {\n\n        constructor: Axis,\n\n        /**\n         * If axis extent contain given coord\n         * @param {number} coord\n         * @return {boolean}\n         */\n        contain: function (coord) {\n            var extent = this._extent;\n            var min = Math.min(extent[0], extent[1]);\n            var max = Math.max(extent[0], extent[1]);\n            return coord >= min && coord <= max;\n        },\n\n        /**\n         * If axis extent contain given data\n         * @param {number} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.contain(this.dataToCoord(data));\n        },\n\n        /**\n         * Get coord extent.\n         * @return {Array.<number>}\n         */\n        getExtent: function () {\n            return this._extent.slice();\n        },\n\n        /**\n         * Get precision used for formatting\n         * @param {Array.<number>} [dataExtent]\n         * @return {number}\n         */\n        getPixelPrecision: function (dataExtent) {\n            return numberUtil.getPixelPrecision(\n                dataExtent || this.scale.getExtent(),\n                this._extent\n            );\n        },\n\n        /**\n         * Set coord extent\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var extent = this._extent;\n            extent[0] = start;\n            extent[1] = end;\n        },\n\n        /**\n         * Convert data to coord. Data is the rank if it has a ordinal scale\n         * @param {number} data\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        dataToCoord: function (data, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n            data = scale.normalize(data);\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            return linearMap(data, normalizedExtent, extent, clamp);\n        },\n\n        /**\n         * Convert coord to data. Data is the rank if it has a ordinal scale\n         * @param {number} coord\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        coordToData: function (coord, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            var t = linearMap(coord, extent, normalizedExtent, clamp);\n\n            return this.scale.scale(t);\n        },\n\n        /**\n         * Convert pixel point to data in axis\n         * @param {Array.<number>} point\n         * @param  {boolean} clamp\n         * @return {number} data\n         */\n        pointToData: function (point, clamp) {\n            // Should be implemented in derived class if necessary.\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicksCoords: function (alignWithLabel) {\n            if (this.onBand && !alignWithLabel) {\n                var bands = this.getBands();\n                var coords = [];\n                for (var i = 0; i < bands.length; i++) {\n                    coords.push(bands[i][0]);\n                }\n                if (bands[i - 1]) {\n                    coords.push(bands[i - 1][1]);\n                }\n                return coords;\n            }\n            else {\n                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n            }\n        },\n\n        /**\n         * Coords of labels are on the ticks or on the middle of bands\n         * @return {Array.<number>}\n         */\n        getLabelsCoords: function () {\n            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n        },\n\n        /**\n         * Get bands.\n         *\n         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n         * |---1---|---2---|---3---|---4---|.\n         *\n         * @return {Array}\n         */\n         // FIXME Situation when labels is on ticks\n        getBands: function () {\n            var extent = this.getExtent();\n            var bands = [];\n            var len = this.scale.count();\n            var start = extent[0];\n            var end = extent[1];\n            var span = end - start;\n\n            for (var i = 0; i < len; i++) {\n                bands.push([\n                    span * i / len + start,\n                    span * (i + 1) / len + start\n                ]);\n            }\n            return bands;\n        },\n\n        /**\n         * Get width of band\n         * @return {number}\n         */\n        getBandWidth: function () {\n            var axisExtent = this._extent;\n            var dataExtent = this.scale.getExtent();\n\n            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\n            // Fix #2728, avoid NaN when only one data.\n            len === 0 && (len = 1);\n\n            var size = Math.abs(axisExtent[1] - axisExtent[0]);\n\n            return Math.abs(size) / len;\n        },\n\n        /**\n         * Get interval of the axis label.\n         * @return {number}\n         */\n        getLabelInterval: function () {\n            var labelInterval = this._labelInterval;\n            if (!labelInterval) {\n                var axisModel = this.model;\n                var labelModel = axisModel.getModel('axisLabel');\n                var interval = labelModel.get('interval');\n                if (!(this.type === 'category' && interval === 'auto')) {\n                    labelInterval = interval === 'auto' ? 0 : interval;\n                }\n                else if (this.isHorizontal){\n                    labelInterval = axisHelper.getAxisLabelInterval(\n                        zrUtil.map(this.scale.getTicks(), this.dataToCoord, this),\n                        axisModel.getFormattedLabels(),\n                        labelModel.getFont(),\n                        this.isHorizontal()\n                    );\n                }\n                this._labelInterval = labelInterval;\n            }\n            return labelInterval;\n        }\n\n    };\n\n    module.exports = Axis;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/Axis.js\n// module id = 650\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var axisHelper = require('./axisHelper');\n\n    function getName(obj) {\n        if (zrUtil.isObject(obj) && obj.value != null) {\n            return obj.value;\n        }\n        else {\n            return obj + '';\n        }\n    }\n\n    module.exports = {\n\n        /**\n         * Format labels\n         * @return {Array.<string>}\n         */\n        getFormattedLabels: function () {\n            return axisHelper.getFormattedLabels(\n                this.axis,\n                this.get('axisLabel.formatter')\n            );\n        },\n\n        /**\n         * Get categories\n         */\n        getCategories: function () {\n            return this.get('type') === 'category'\n                && zrUtil.map(this.get('data'), getName);\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n         */\n        getMin: function (origin) {\n            var option = this.option;\n            var min = (!origin && option.rangeStart != null)\n                ? option.rangeStart : option.min;\n\n            if (this.axis && min != null && min !== 'dataMin' && !zrUtil.eqNaN(min)) {\n                min = this.axis.scale.parse(min);\n            }\n            return min;\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n         */\n        getMax: function (origin) {\n            var option = this.option;\n            var max = (!origin && option.rangeEnd != null)\n                ? option.rangeEnd : option.max;\n\n            if (this.axis && max != null && max !== 'dataMax' && !zrUtil.eqNaN(max)) {\n                max = this.axis.scale.parse(max);\n            }\n            return max;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        getNeedCrossZero: function () {\n            var option = this.option;\n            return (option.rangeStart != null || option.rangeEnd != null)\n                ? false : !option.scale;\n        },\n\n        /**\n         * Should be implemented by each axis model if necessary.\n         * @return {module:echarts/model/Component} coordinate system model\n         */\n        getCoordSysModel: zrUtil.noop,\n\n        /**\n         * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n         * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n         */\n        setRange: function (rangeStart, rangeEnd) {\n            this.option.rangeStart = rangeStart;\n            this.option.rangeEnd = rangeEnd;\n        },\n\n        /**\n         * Reset range\n         */\n        resetRange: function () {\n            // rangeStart and rangeEnd is readonly.\n            this.option.rangeStart = this.option.rangeEnd = null;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisModelCommonMixin.js\n// module id = 651\n// module chunks = 0 1 2","/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var symbolUtil = require('../../util/symbol');\n    var graphic = require('../../util/graphic');\n    var numberUtil = require('../../util/number');\n    var labelHelper = require('./labelHelper');\n\n    function getSymbolSize(data, idx) {\n        var symbolSize = data.getItemVisual(idx, 'symbolSize');\n        return symbolSize instanceof Array\n            ? symbolSize.slice()\n            : [+symbolSize, +symbolSize];\n    }\n\n    function getScale(symbolSize) {\n        return [symbolSize[0] / 2, symbolSize[1] / 2];\n    }\n\n    /**\n     * @constructor\n     * @alias {module:echarts/chart/helper/Symbol}\n     * @param {module:echarts/data/List} data\n     * @param {number} idx\n     * @extends {module:zrender/graphic/Group}\n     */\n    function Symbol(data, idx, seriesScope) {\n        graphic.Group.call(this);\n\n        this.updateData(data, idx, seriesScope);\n    }\n\n    var symbolProto = Symbol.prototype;\n\n    function driftSymbol(dx, dy) {\n        this.parent.drift(dx, dy);\n    }\n\n    symbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n        // Remove paths created before\n        this.removeAll();\n\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // var symbolPath = symbolUtil.createSymbol(\n        //     symbolType, -0.5, -0.5, 1, 1, color\n        // );\n        // If width/height are set too small (e.g., set to 1) on ios10\n        // and macOS Sierra, a circle stroke become a rect, no matter what\n        // the scale is set. So we set width/height as 2. See #4150.\n        var symbolPath = symbolUtil.createSymbol(\n            symbolType, -1, -1, 2, 2, color\n        );\n\n        symbolPath.attr({\n            z2: 100,\n            culling: true,\n            scale: [0, 0]\n        });\n        // Rewrite drift method\n        symbolPath.drift = driftSymbol;\n\n        graphic.initProps(symbolPath, {\n            scale: getScale(symbolSize)\n        }, seriesModel, idx);\n        this._symbolType = symbolType;\n\n        this.add(symbolPath);\n    };\n\n    /**\n     * Stop animation\n     * @param {boolean} toLastFrame\n     */\n    symbolProto.stopSymbolAnimation = function (toLastFrame) {\n        this.childAt(0).stopAnimation(toLastFrame);\n    };\n\n    /**\n     * Get symbol path element\n     */\n    symbolProto.getSymbolPath = function () {\n        return this.childAt(0);\n    };\n\n    /**\n     * Get scale(aka, current symbol size).\n     * Including the change caused by animation\n     */\n    symbolProto.getScale = function () {\n        return this.childAt(0).scale;\n    };\n\n    /**\n     * Highlight symbol\n     */\n    symbolProto.highlight = function () {\n        this.childAt(0).trigger('emphasis');\n    };\n\n    /**\n     * Downplay symbol\n     */\n    symbolProto.downplay = function () {\n        this.childAt(0).trigger('normal');\n    };\n\n    /**\n     * @param {number} zlevel\n     * @param {number} z\n     */\n    symbolProto.setZ = function (zlevel, z) {\n        var symbolPath = this.childAt(0);\n        symbolPath.zlevel = zlevel;\n        symbolPath.z = z;\n    };\n\n    symbolProto.setDraggable = function (draggable) {\n        var symbolPath = this.childAt(0);\n        symbolPath.draggable = draggable;\n        symbolPath.cursor = draggable ? 'move' : 'pointer';\n    };\n\n    /**\n     * Update symbol properties\n     * @param  {module:echarts/data/List} data\n     * @param  {number} idx\n     */\n    symbolProto.updateData = function (data, idx, seriesScope) {\n        this.silent = false;\n\n        var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n        var seriesModel = data.hostModel;\n        var symbolSize = getSymbolSize(data, idx);\n\n        if (symbolType !== this._symbolType) {\n            this._createSymbol(symbolType, data, idx, symbolSize);\n        }\n        else {\n            var symbolPath = this.childAt(0);\n            symbolPath.silent = false;\n            graphic.updateProps(symbolPath, {\n                scale: getScale(symbolSize)\n            }, seriesModel, idx);\n        }\n        this._updateCommon(data, idx, symbolSize, seriesScope);\n        this._seriesModel = seriesModel;\n    };\n\n    // Update common properties\n    var normalStyleAccessPath = ['itemStyle', 'normal'];\n    var emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n    var normalLabelAccessPath = ['label', 'normal'];\n    var emphasisLabelAccessPath = ['label', 'emphasis'];\n\n    symbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n        var symbolPath = this.childAt(0);\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // Reset style\n        if (symbolPath.type !== 'image') {\n            symbolPath.useStyle({\n                strokeNoScale: true\n            });\n        }\n\n        seriesScope = seriesScope || null;\n\n        var itemStyle = seriesScope && seriesScope.itemStyle;\n        var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n        var symbolRotate = seriesScope && seriesScope.symbolRotate;\n        var symbolOffset = seriesScope && seriesScope.symbolOffset;\n        var labelModel = seriesScope && seriesScope.labelModel;\n        var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n        var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n        var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n        if (!seriesScope || data.hasItemOption) {\n            var itemModel = data.getItemModel(idx);\n\n            // Color must be excluded.\n            // Because symbol provide setColor individually to set fill and stroke\n            itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n            hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n\n            symbolRotate = itemModel.getShallow('symbolRotate');\n            symbolOffset = itemModel.getShallow('symbolOffset');\n\n            labelModel = itemModel.getModel(normalLabelAccessPath);\n            hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n            hoverAnimation = itemModel.getShallow('hoverAnimation');\n            cursorStyle = itemModel.getShallow('cursor');\n        }\n        else {\n            hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n        }\n\n        var elStyle = symbolPath.style;\n\n        symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n        if (symbolOffset) {\n            symbolPath.attr('position', [\n                numberUtil.parsePercent(symbolOffset[0], symbolSize[0]),\n                numberUtil.parsePercent(symbolOffset[1], symbolSize[1])\n            ]);\n        }\n\n        cursorStyle && symbolPath.attr('cursor', cursorStyle);\n\n        // PENDING setColor before setStyle!!!\n        symbolPath.setColor(color);\n\n        symbolPath.setStyle(itemStyle);\n\n        var opacity = data.getItemVisual(idx, 'opacity');\n        if (opacity != null) {\n            elStyle.opacity = opacity;\n        }\n\n        var valueDim = labelHelper.findLabelValueDim(data);\n\n        if (valueDim != null) {\n            graphic.setText(elStyle, labelModel, color);\n            var normalText = seriesModel.getFormattedLabel(idx, 'normal');\n            var value = data.get(valueDim, idx);\n            elStyle.text = labelModel.getShallow('show')\n                ? zrUtil.retrieve2(\n                    normalText,\n                    value\n                )\n                : null;\n\n            graphic.setText(hoverItemStyle, hoverLabelModel, false);\n            hoverItemStyle.text = hoverLabelModel.getShallow('show')\n                ? zrUtil.retrieve3(\n                    seriesModel.getFormattedLabel(idx, 'emphasis'),\n                    normalText,\n                    value\n                )\n                : null;\n        }\n\n        symbolPath.off('mouseover')\n            .off('mouseout')\n            .off('emphasis')\n            .off('normal');\n\n        symbolPath.hoverStyle = hoverItemStyle;\n\n        graphic.setHoverStyle(symbolPath);\n\n        var scale = getScale(symbolSize);\n\n        if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n            var onEmphasis = function() {\n                var ratio = scale[1] / scale[0];\n                this.animateTo({\n                    scale: [\n                        Math.max(scale[0] * 1.1, scale[0] + 3),\n                        Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)\n                    ]\n                }, 400, 'elasticOut');\n            };\n            var onNormal = function() {\n                this.animateTo({\n                    scale: scale\n                }, 400, 'elasticOut');\n            };\n            symbolPath.on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n    };\n\n    symbolProto.fadeOut = function (cb) {\n        var symbolPath = this.childAt(0);\n        // Avoid mistaken hover when fading out\n        this.silent = symbolPath.silent = true;\n        // Not show text when animating\n        symbolPath.style.text = null;\n        graphic.updateProps(symbolPath, {\n            scale: [0, 0]\n        }, this._seriesModel, this.dataIndex, cb);\n    };\n\n    zrUtil.inherits(Symbol, graphic.Group);\n\n    module.exports = Symbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/Symbol.js\n// module id = 657\n// module chunks = 0 1 2","\n\n    var axisPointerModelHelper = require('../axisPointer/modelHelper');\n\n    /**\n     * Base class of AxisView.\n     */\n    var AxisView = require('../../echarts').extendComponentView({\n\n        type: 'axis',\n\n        /**\n         * @private\n         */\n        _axisPointer: null,\n\n        /**\n         * @protected\n         * @type {string}\n         */\n        axisPointerClass: null,\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n            // FIXME\n            // This process should proformed after coordinate systems updated\n            // (axis scale updated), and should be performed each time update.\n            // So put it here temporarily, although it is not appropriate to\n            // put a model-writing procedure in `view`.\n            this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n\n            AxisView.superApply(this, 'render', arguments);\n\n            updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n        },\n\n        /**\n         * Action handler.\n         * @public\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/model/Global} ecModel\n         * @param {module:echarts/ExtensionAPI} api\n         * @param {Object} payload\n         */\n        updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n            updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            var axisPointer = this._axisPointer;\n            axisPointer && axisPointer.remove(api);\n            AxisView.superApply(this, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            disposeAxisPointer(this, api);\n            AxisView.superApply(this, 'dispose', arguments);\n        }\n\n    });\n\n    function updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n        var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n        if (!Clazz) {\n            return;\n        }\n        var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n        axisPointerModel\n            ? (axisView._axisPointer || (axisView._axisPointer = new Clazz()))\n                .render(axisModel, axisPointerModel, api, forceRender)\n            : disposeAxisPointer(axisView, api);\n    }\n\n    function disposeAxisPointer(axisView, ecModel, api) {\n        var axisPointer = axisView._axisPointer;\n        axisPointer && axisPointer.dispose(ecModel, api);\n        axisView._axisPointer = null;\n    }\n\n    var axisPointerClazz = [];\n\n    AxisView.registerAxisPointerClass = function (type, clazz) {\n        if (__DEV__) {\n            if (axisPointerClazz[type]) {\n                throw new Error('axisPointer ' + type + ' exists');\n            }\n        }\n        axisPointerClazz[type] = clazz;\n    };\n\n    AxisView.getAxisPointerClass = function (type) {\n        return type && axisPointerClazz[type];\n    };\n\n    module.exports = AxisView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/AxisView.js\n// module id = 658\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var helper = {};\n\n    /**\n     * @param {Object} opt {labelInside}\n     * @return {Object} {\n     *  position, rotation, labelDirection, labelOffset,\n     *  tickDirection, labelRotate, labelInterval, z2\n     * }\n     */\n    helper.layout = function (gridModel, axisModel, opt) {\n        opt = opt || {};\n        var grid = gridModel.coordinateSystem;\n        var axis = axisModel.axis;\n        var layout = {};\n\n        var rawAxisPosition = axis.position;\n        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n        var axisDim = axis.dim;\n\n        var rect = grid.getRect();\n        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n        var idx = {left: 0, right: 1, top: 0, bottom: 1, onZero: 2};\n        var axisOffset = axisModel.get('offset') || 0;\n\n        var posBound = axisDim === 'x'\n            ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset]\n            : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n        if (axis.onZero) {\n            var otherAxis = grid.getAxis(axisDim === 'x' ? 'y' : 'x', axis.onZeroAxisIndex);\n            var onZeroCoord = otherAxis.toGlobalCoord(otherAxis.dataToCoord(0));\n            posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n        }\n\n        // Axis position\n        layout.position = [\n            axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0],\n            axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]\n        ];\n\n        // Axis rotation\n        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\n\n        // Tick and label direction, x y is axisDim\n        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\n\n        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n        layout.labelOffset = axis.onZero ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n        if (axisModel.get('axisTick.inside')) {\n            layout.tickDirection = -layout.tickDirection;\n        }\n        if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n            layout.labelDirection = -layout.labelDirection;\n        }\n\n        // Special label rotation\n        var labelRotate = axisModel.get('axisLabel.rotate');\n        layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate;\n\n        // label interval when auto mode.\n        layout.labelInterval = axis.getLabelInterval();\n\n        // Over splitLine and splitArea\n        layout.z2 = 1;\n\n        return layout;\n    };\n\n    module.exports = helper;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/cartesianAxisHelper.js\n// module id = 659\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n\n    /**\n     * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n     * @param {module:echarts/model/Global} ecModel\n     * @return {Object} {point: [x, y], el: ...} point Will not be null.\n     */\n    module.exports = function (finder, ecModel) {\n        var point = [];\n        var seriesIndex = finder.seriesIndex;\n        var seriesModel;\n        if (seriesIndex == null || !(\n            seriesModel = ecModel.getSeriesByIndex(seriesIndex)\n        )) {\n            return {point: []};\n        }\n\n        var data = seriesModel.getData();\n        var dataIndex = modelUtil.queryDataIndex(data, finder);\n        if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n            return {point: []};\n        }\n\n        var el = data.getItemGraphicEl(dataIndex);\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (seriesModel.getTooltipPosition) {\n            point = seriesModel.getTooltipPosition(dataIndex) || [];\n        }\n        else if (coordSys && coordSys.dataToPoint) {\n            point = coordSys.dataToPoint(\n                data.getValues(\n                    zrUtil.map(coordSys.dimensions, function (dim) {\n                        return seriesModel.coordDimToDataDim(dim)[0];\n                    }), dataIndex, true\n                )\n            ) || [];\n        }\n        else if (el) {\n            // Use graphic bounding rect\n            var rect = el.getBoundingRect().clone();\n            rect.applyTransform(el.transform);\n            point = [\n                rect.x + rect.width / 2,\n                rect.y + rect.height / 2\n            ];\n        }\n\n        return {point: point, el: el};\n    };\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/findPointFromSeries.js\n// module id = 660\n// module chunks = 0 1 2","\n\n    var env = require('zrender/lib/core/env');\n    var zrUtil = require('zrender/lib/core/util');\n    var get = require('../../util/model').makeGetter();\n\n    var each = zrUtil.each;\n\n    var globalListener = {};\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Function} handler\n     *      param: {string} currTrigger\n     *      param: {Array.<number>} point\n     */\n    globalListener.register = function (key, api, handler) {\n        if (env.node) {\n            return;\n        }\n\n        var zr = api.getZr();\n        get(zr).records || (get(zr).records = {});\n\n        initGlobalListeners(zr, api);\n\n        var record = get(zr).records[key] || (get(zr).records[key] = {});\n        record.handler = handler;\n    };\n\n    function initGlobalListeners(zr, api) {\n        if (get(zr).initialized) {\n            return;\n        }\n\n        get(zr).initialized = true;\n\n        useHandler('click', zrUtil.curry(doEnter, 'click'));\n        useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove'));\n        // useHandler('mouseout', onLeave);\n        useHandler('globalout', onLeave);\n\n        function useHandler(eventType, cb) {\n            zr.on(eventType, function (e) {\n                var dis = makeDispatchAction(api);\n\n                each(get(zr).records, function (record) {\n                    record && cb(record, e, dis.dispatchAction);\n                });\n\n                dispatchTooltipFinally(dis.pendings, api);\n            });\n        }\n    }\n\n    function dispatchTooltipFinally(pendings, api) {\n        var showLen = pendings.showTip.length;\n        var hideLen = pendings.hideTip.length;\n\n        var actuallyPayload;\n        if (showLen) {\n            actuallyPayload = pendings.showTip[showLen - 1];\n        }\n        else if (hideLen) {\n            actuallyPayload = pendings.hideTip[hideLen - 1];\n        }\n        if (actuallyPayload) {\n            actuallyPayload.dispatchAction = null;\n            api.dispatchAction(actuallyPayload);\n        }\n    }\n\n    function onLeave(record, e, dispatchAction) {\n        record.handler('leave', null, dispatchAction);\n    }\n\n    function doEnter(currTrigger, record, e, dispatchAction) {\n        record.handler(currTrigger, e, dispatchAction);\n    }\n\n    function makeDispatchAction(api) {\n        var pendings = {\n            showTip: [],\n            hideTip: []\n        };\n        // FIXME\n        // better approach?\n        // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n        // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n        // So we have to add \"final stage\" to merge those dispatched actions.\n        var dispatchAction = function (payload) {\n            var pendingList = pendings[payload.type];\n            if (pendingList) {\n                pendingList.push(payload);\n            }\n            else {\n                payload.dispatchAction = dispatchAction;\n                api.dispatchAction(payload);\n            }\n        };\n\n        return {\n            dispatchAction: dispatchAction,\n            pendings: pendings\n        };\n    }\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    globalListener.unregister = function (key, api) {\n        if (env.node) {\n            return;\n        }\n        var zr = api.getZr();\n        var record = (get(zr).records || {})[key];\n        if (record) {\n            get(zr).records[key] = null;\n        }\n    };\n\n    module.exports = globalListener;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/globalListener.js\n// module id = 661\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var textContain = require('zrender/lib/contain/text');\n    var formatUtil = require('../../util/format');\n    var matrix = require('zrender/lib/core/matrix');\n    var axisHelper = require('../../coord/axisHelper');\n    var AxisBuilder = require('../axis/AxisBuilder');\n\n    var helper = {};\n\n    /**\n     * @param {module:echarts/model/Model} axisPointerModel\n     */\n    helper.buildElStyle = function (axisPointerModel) {\n        var axisPointerType = axisPointerModel.get('type');\n        var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n        var style;\n        if (axisPointerType === 'line') {\n            style = styleModel.getLineStyle();\n            style.fill = null;\n        }\n        else if (axisPointerType === 'shadow') {\n            style = styleModel.getAreaStyle();\n            style.stroke = null;\n        }\n        return style;\n    };\n\n    /**\n     * @param {Function} labelPos {align, verticalAlign, position}\n     */\n    helper.buildLabelElOption = function (\n        elOption, axisModel, axisPointerModel, api, labelPos\n    ) {\n        var value = axisPointerModel.get('value');\n        var text = helper.getValueLabel(\n            value, axisModel.axis, axisModel.ecModel,\n            axisPointerModel.get('seriesDataIndices'),\n            {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            }\n        );\n        var labelModel = axisPointerModel.getModel('label');\n        var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n\n        var font = labelModel.getFont();\n        var textRect = textContain.getBoundingRect(text, font);\n\n        var position = labelPos.position;\n        var width = textRect.width + paddings[1] + paddings[3];\n        var height = textRect.height + paddings[0] + paddings[2];\n\n        // Adjust by align.\n        var align = labelPos.align;\n        align === 'right' && (position[0] -= width);\n        align === 'center' && (position[0] -= width / 2);\n        var verticalAlign = labelPos.verticalAlign;\n        verticalAlign === 'bottom' && (position[1] -= height);\n        verticalAlign === 'middle' && (position[1] -= height / 2);\n\n        // Not overflow ec container\n        confineInContainer(position, width, height, api);\n\n        var bgColor = labelModel.get('backgroundColor');\n        if (!bgColor || bgColor === 'auto') {\n            bgColor = axisModel.get('axisLine.lineStyle.color');\n        }\n\n        elOption.label = {\n            shape: {x: 0, y: 0, width: width, height: height, r: labelModel.get('borderRadius')},\n            position: position.slice(),\n            // TODO: rich\n            style: {\n                text: text,\n                textFont: font,\n                textFill: labelModel.getTextColor(),\n                textPosition: 'inside',\n                fill: bgColor,\n                stroke: labelModel.get('borderColor') || 'transparent',\n                lineWidth: labelModel.get('borderWidth') || 0,\n                shadowBlur: labelModel.get('shadowBlur'),\n                shadowColor: labelModel.get('shadowColor'),\n                shadowOffsetX: labelModel.get('shadowOffsetX'),\n                shadowOffsetY: labelModel.get('shadowOffsetY')\n            },\n            // Lable should be over axisPointer.\n            z2: 10\n        };\n    };\n\n    // Do not overflow ec container\n    function confineInContainer(position, width, height, api) {\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n        position[0] = Math.min(position[0] + width, viewWidth) - width;\n        position[1] = Math.min(position[1] + height, viewHeight) - height;\n        position[0] = Math.max(position[0], 0);\n        position[1] = Math.max(position[1], 0);\n    }\n\n    /**\n     * @param {number} value\n     * @param {module:echarts/coord/Axis} axis\n     * @param {module:echarts/model/Global} ecModel\n     * @param {Object} opt\n     * @param {Array.<Object>} seriesDataIndices\n     * @param {number|string} opt.precision 'auto' or a number\n     * @param {string|Function} opt.formatter label formatter\n     */\n    helper.getValueLabel = function (value, axis, ecModel, seriesDataIndices, opt) {\n        var text = axis.scale.getLabel(\n            // If `precision` is set, width can be fixed (like '12.00500'), which\n            // helps to debounce when when moving label.\n            value, {precision: opt.precision}\n        );\n        var formatter = opt.formatter;\n\n        if (formatter) {\n            var params = {\n                value: axisHelper.getAxisRawValue(axis, value),\n                seriesData: []\n            };\n            zrUtil.each(seriesDataIndices, function (idxItem) {\n                var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                var dataIndex = idxItem.dataIndexInside;\n                var dataParams = series && series.getDataParams(dataIndex);\n                dataParams && params.seriesData.push(dataParams);\n            });\n\n            if (zrUtil.isString(formatter)) {\n                text = formatter.replace('{value}', text);\n            }\n            else if (zrUtil.isFunction(formatter)) {\n                text = formatter(params);\n            }\n        }\n\n        return text;\n    };\n\n    /**\n     * @param {module:echarts/coord/Axis} axis\n     * @param {number} value\n     * @param {Object} layoutInfo {\n     *  rotation, position, labelOffset, labelDirection, labelMargin\n     * }\n     */\n    helper.getTransformedPosition = function (axis, value, layoutInfo) {\n        var transform = matrix.create();\n        matrix.rotate(transform, transform, layoutInfo.rotation);\n        matrix.translate(transform, transform, layoutInfo.position);\n\n        return graphic.applyTransform([\n            axis.dataToCoord(value),\n            (layoutInfo.labelOffset || 0)\n                + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)\n        ], transform);\n    };\n\n    helper.buildCartesianSingleLabelElOption = function (\n        value, elOption, layoutInfo, axisModel, axisPointerModel, api\n    ) {\n        var textLayout = AxisBuilder.innerTextLayout(\n            layoutInfo.rotation, 0, layoutInfo.labelDirection\n        );\n        layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n        helper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n            position: helper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n            align: textLayout.textAlign,\n            verticalAlign: textLayout.textVerticalAlign\n        });\n    };\n\n    /**\n     * @param {Array.<number>} p1\n     * @param {Array.<number>} p2\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeLineShape = function (p1, p2, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x1: p1[xDimIndex],\n            y1: p1[1 - xDimIndex],\n            x2: p2[xDimIndex],\n            y2: p2[1 - xDimIndex]\n        };\n    };\n\n    /**\n     * @param {Array.<number>} xy\n     * @param {Array.<number>} wh\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeRectShape = function (xy, wh, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x: xy[xDimIndex],\n            y: xy[1 - xDimIndex],\n            width: wh[xDimIndex],\n            height: wh[1 - xDimIndex]\n        };\n    };\n\n    helper.makeSectorShape = function (cx, cy, r0, r, startAngle, endAngle) {\n        return {\n            cx: cx,\n            cy: cy,\n            r0: r0,\n            r: r,\n            startAngle: startAngle,\n            endAngle: endAngle,\n            clockwise: true\n        };\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/viewHelper.js\n// module id = 662\n// module chunks = 0 1 2","'use strict';\n\n\n    var ComponentModel = require('../../model/Component');\n    var zrUtil = require('zrender/lib/core/util');\n    var axisModelCreator = require('../axisModelCreator');\n\n    var AxisModel = ComponentModel.extend({\n\n        type: 'cartesian2dAxis',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Axis2D}\n         */\n        axis: null,\n\n        /**\n         * @override\n         */\n        init: function () {\n            AxisModel.superApply(this, 'init', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function () {\n            AxisModel.superApply(this, 'mergeOption', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        restoreData: function () {\n            AxisModel.superApply(this, 'restoreData', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         * @return {module:echarts/model/Component}\n         */\n        getCoordSysModel: function () {\n            return this.ecModel.queryComponents({\n                mainType: 'grid',\n                index: this.option.gridIndex,\n                id: this.option.gridId\n            })[0];\n        }\n\n    });\n\n    function getAxisType(axisDim, option) {\n        // Default axis with data is category axis\n        return option.type || (option.data ? 'category' : 'value');\n    }\n\n    zrUtil.merge(AxisModel.prototype, require('../axisModelCommonMixin'));\n\n    var extraOption = {\n        // gridIndex: 0,\n        // gridId: '',\n\n        // Offset is for multiple axis on the same position\n        offset: 0\n    };\n\n    axisModelCreator('x', AxisModel, getAxisType, extraOption);\n    axisModelCreator('y', AxisModel, getAxisType, extraOption);\n\n    module.exports = AxisModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/AxisModel.js\n// module id = 663\n// module chunks = 0 1 2","\n\n    var classUtil = require('../../util/clazz');\n    var set = classUtil.set;\n    var get = classUtil.get;\n\n    module.exports = {\n        clearColorPalette: function () {\n            set(this, 'colorIdx', 0);\n            set(this, 'colorNameMap', {});\n        },\n\n        getColorFromPalette: function (name, scope) {\n            scope = scope || this;\n            var colorIdx = get(scope, 'colorIdx') || 0;\n            var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {});\n            // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n            if (colorNameMap.hasOwnProperty(name)) {\n                return colorNameMap[name];\n            }\n            var colorPalette = this.get('color', true) || [];\n            if (!colorPalette.length) {\n                return;\n            }\n\n            var color = colorPalette[colorIdx];\n            if (name) {\n                colorNameMap[name] = color;\n            }\n            set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n\n            return color;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/colorPalette.js\n// module id = 664\n// module chunks = 0 1 2","/**\n * For testable.\n */\n\n\n    var numberUtil = require('../util/number');\n\n    var roundNumber = numberUtil.round;\n\n    var helper = {};\n\n    /**\n     * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n     *                                Should be extent[0] < extent[1].\n     * @param {number} splitNumber splitNumber should be >= 1.\n     * @param {number} [minInterval]\n     * @param {number} [maxInterval]\n     * @return {Object} {interval, intervalPrecision, niceTickExtent}\n     */\n    helper.intervalScaleNiceTicks = function (extent, splitNumber, minInterval, maxInterval) {\n        var result = {};\n        var span = extent[1] - extent[0];\n\n        var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n        if (minInterval != null && interval < minInterval) {\n            interval = result.interval = minInterval;\n        }\n        if (maxInterval != null && interval > maxInterval) {\n            interval = result.interval = maxInterval;\n        }\n        // Tow more digital for tick.\n        var precision = result.intervalPrecision = helper.getIntervalPrecision(interval);\n        // Niced extent inside original extent\n        var niceTickExtent = result.niceTickExtent = [\n            roundNumber(Math.ceil(extent[0] / interval) * interval, precision),\n            roundNumber(Math.floor(extent[1] / interval) * interval, precision)\n        ];\n\n        helper.fixExtent(niceTickExtent, extent);\n\n        return result;\n    };\n\n    /**\n     * @param {number} interval\n     * @return {number} interval precision\n     */\n    helper.getIntervalPrecision = function (interval) {\n        // Tow more digital for tick.\n        return numberUtil.getPrecisionSafe(interval) + 2;\n    };\n\n    function clamp(niceTickExtent, idx, extent) {\n        niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n    }\n\n    // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n    helper.fixExtent = function (niceTickExtent, extent) {\n        !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n        !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n        clamp(niceTickExtent, 0, extent);\n        clamp(niceTickExtent, 1, extent);\n        if (niceTickExtent[0] > niceTickExtent[1]) {\n            niceTickExtent[0] = niceTickExtent[1];\n        }\n    };\n\n    helper.intervalScaleGetTicks = function (interval, extent, niceTickExtent, intervalPrecision) {\n        var ticks = [];\n\n        // If interval is 0, return [];\n        if (!interval) {\n            return ticks;\n        }\n\n        // Consider this case: using dataZoom toolbox, zoom and zoom.\n        var safeLimit = 10000;\n\n        if (extent[0] < niceTickExtent[0]) {\n            ticks.push(extent[0]);\n        }\n        var tick = niceTickExtent[0];\n\n        while (tick <= niceTickExtent[1]) {\n            ticks.push(tick);\n            // Avoid rounding error\n            tick = roundNumber(tick + interval, intervalPrecision);\n            if (tick === ticks[ticks.length - 1]) {\n                // Consider out of safe float point, e.g.,\n                // -3711126.9907707 + 2e-10 === -3711126.9907707\n                break;\n            }\n            if (ticks.length > safeLimit) {\n                return [];\n            }\n        }\n        // Consider this case: the last item of ticks is smaller\n        // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n        if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n            ticks.push(extent[1]);\n        }\n\n        return ticks;\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/helper.js\n// module id = 665\n// module chunks = 0 1 2","\n\n    var lib = {};\n\n    var ORIGIN_METHOD = '\\0__throttleOriginMethod';\n    var RATE = '\\0__throttleRate';\n    var THROTTLE_TYPE = '\\0__throttleType';\n\n    /**\n     * @public\n     * @param {(Function)} fn\n     * @param {number} [delay=0] Unit: ms.\n     * @param {boolean} [debounce=false]\n     *        true: If call interval less than `delay`, only the last call works.\n     *        false: If call interval less than `delay, call works on fixed rate.\n     * @return {(Function)} throttled fn.\n     */\n    lib.throttle = function (fn, delay, debounce) {\n\n        var currCall;\n        var lastCall = 0;\n        var lastExec = 0;\n        var timer = null;\n        var diff;\n        var scope;\n        var args;\n        var debounceNextCall;\n\n        delay = delay || 0;\n\n        function exec() {\n            lastExec = (new Date()).getTime();\n            timer = null;\n            fn.apply(scope, args || []);\n        }\n\n        var cb = function () {\n            currCall = (new Date()).getTime();\n            scope = this;\n            args = arguments;\n            var thisDelay = debounceNextCall || delay;\n            var thisDebounce = debounceNextCall || debounce;\n            debounceNextCall = null;\n            diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n\n            clearTimeout(timer);\n\n            if (thisDebounce) {\n                timer = setTimeout(exec, thisDelay);\n            }\n            else {\n                if (diff >= 0) {\n                    exec();\n                }\n                else {\n                    timer = setTimeout(exec, -diff);\n                }\n            }\n\n            lastCall = currCall;\n        };\n\n        /**\n         * Clear throttle.\n         * @public\n         */\n        cb.clear = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n\n        /**\n         * Enable debounce once.\n         */\n        cb.debounceNextCall = function (debounceDelay) {\n            debounceNextCall = debounceDelay;\n        };\n\n        return cb;\n    };\n\n    /**\n     * Create throttle method or update throttle rate.\n     *\n     * @example\n     * ComponentView.prototype.render = function () {\n     *     ...\n     *     throttle.createOrUpdate(\n     *         this,\n     *         '_dispatchAction',\n     *         this.model.get('throttle'),\n     *         'fixRate'\n     *     );\n     * };\n     * ComponentView.prototype.remove = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     * ComponentView.prototype.dispose = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     * @param {number} [rate]\n     * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n     * @return {Function} throttled function.\n     */\n    lib.createOrUpdate = function (obj, fnAttr, rate, throttleType) {\n        var fn = obj[fnAttr];\n\n        if (!fn) {\n            return;\n        }\n\n        var originFn = fn[ORIGIN_METHOD] || fn;\n        var lastThrottleType = fn[THROTTLE_TYPE];\n        var lastRate = fn[RATE];\n\n        if (lastRate !== rate || lastThrottleType !== throttleType) {\n            if (rate == null || !throttleType) {\n                return (obj[fnAttr] = originFn);\n            }\n\n            fn = obj[fnAttr] = lib.throttle(\n                originFn, rate, throttleType === 'debounce'\n            );\n            fn[ORIGIN_METHOD] = originFn;\n            fn[THROTTLE_TYPE] = throttleType;\n            fn[RATE] = rate;\n        }\n\n        return fn;\n    };\n\n    /**\n     * Clear throttle. Example see throttle.createOrUpdate.\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     */\n    lib.clear = function (obj, fnAttr) {\n        var fn = obj[fnAttr];\n        if (fn && fn[ORIGIN_METHOD]) {\n            obj[fnAttr] = fn[ORIGIN_METHOD];\n        }\n    };\n\n    module.exports = lib;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/throttle.js\n// module id = 666\n// module chunks = 0 1 2","'use strict';\n/**\n * @module zrender/Element\n */\n\n\n    var guid = require('./core/guid');\n    var Eventful = require('./mixin/Eventful');\n    var Transformable = require('./mixin/Transformable');\n    var Animatable = require('./mixin/Animatable');\n    var zrUtil = require('./core/util');\n\n    /**\n     * @alias module:zrender/Element\n     * @constructor\n     * @extends {module:zrender/mixin/Animatable}\n     * @extends {module:zrender/mixin/Transformable}\n     * @extends {module:zrender/mixin/Eventful}\n     */\n    var Element = function (opts) {\n\n        Transformable.call(this, opts);\n        Eventful.call(this, opts);\n        Animatable.call(this, opts);\n\n        /**\n         * 画布元素ID\n         * @type {string}\n         */\n        this.id = opts.id || guid();\n    };\n\n    Element.prototype = {\n\n        /**\n         * 元素类型\n         * Element type\n         * @type {string}\n         */\n        type: 'element',\n\n        /**\n         * 元素名字\n         * Element name\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n         * ZRender instance will be assigned when element is associated with zrender\n         * @name module:/zrender/Element#__zr\n         * @type {module:zrender/ZRender}\n         */\n        __zr: null,\n\n        /**\n         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n         * If ignore drawing and events of the element object\n         * @name module:/zrender/Element#ignore\n         * @type {boolean}\n         * @default false\n         */\n        ignore: false,\n\n        /**\n         * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n         * 该路径会继承被裁减对象的变换\n         * @type {module:zrender/graphic/Path}\n         * @see http://www.w3.org/TR/2dcontext/#clipping-region\n         * @readOnly\n         */\n        clipPath: null,\n\n        /**\n         * Drift element\n         * @param  {number} dx dx on the global space\n         * @param  {number} dy dy on the global space\n         */\n        drift: function (dx, dy) {\n            switch (this.draggable) {\n                case 'horizontal':\n                    dy = 0;\n                    break;\n                case 'vertical':\n                    dx = 0;\n                    break;\n            }\n\n            var m = this.transform;\n            if (!m) {\n                m = this.transform = [1, 0, 0, 1, 0, 0];\n            }\n            m[4] += dx;\n            m[5] += dy;\n\n            this.decomposeTransform();\n            this.dirty(false);\n        },\n\n        /**\n         * Hook before update\n         */\n        beforeUpdate: function () {},\n        /**\n         * Hook after update\n         */\n        afterUpdate: function () {},\n        /**\n         * Update each frame\n         */\n        update: function () {\n            this.updateTransform();\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {},\n\n        /**\n         * @protected\n         */\n        attrKV: function (key, value) {\n            if (key === 'position' || key === 'scale' || key === 'origin') {\n                // Copy the array\n                if (value) {\n                    var target = this[key];\n                    if (!target) {\n                        target = this[key] = [];\n                    }\n                    target[0] = value[0];\n                    target[1] = value[1];\n                }\n            }\n            else {\n                this[key] = value;\n            }\n        },\n\n        /**\n         * Hide the element\n         */\n        hide: function () {\n            this.ignore = true;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * Show the element\n         */\n        show: function () {\n            this.ignore = false;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * @param {string|Object} key\n         * @param {*} value\n         */\n        attr: function (key, value) {\n            if (typeof key === 'string') {\n                this.attrKV(key, value);\n            }\n            else if (zrUtil.isObject(key)) {\n                for (var name in key) {\n                    if (key.hasOwnProperty(name)) {\n                        this.attrKV(name, key[name]);\n                    }\n                }\n            }\n\n            this.dirty(false);\n\n            return this;\n        },\n\n        /**\n         * @param {module:zrender/graphic/Path} clipPath\n         */\n        setClipPath: function (clipPath) {\n            var zr = this.__zr;\n            if (zr) {\n                clipPath.addSelfToZr(zr);\n            }\n\n            // Remove previous clip path\n            if (this.clipPath && this.clipPath !== clipPath) {\n                this.removeClipPath();\n            }\n\n            this.clipPath = clipPath;\n            clipPath.__zr = zr;\n            clipPath.__clipTarget = this;\n\n            this.dirty(false);\n        },\n\n        /**\n         */\n        removeClipPath: function () {\n            var clipPath = this.clipPath;\n            if (clipPath) {\n                if (clipPath.__zr) {\n                    clipPath.removeSelfFromZr(clipPath.__zr);\n                }\n\n                clipPath.__zr = null;\n                clipPath.__clipTarget = null;\n                this.clipPath = null;\n\n                this.dirty(false);\n            }\n        },\n\n        /**\n         * Add self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        addSelfToZr: function (zr) {\n            this.__zr = zr;\n            // 添加动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.addAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.addSelfToZr(zr);\n            }\n        },\n\n        /**\n         * Remove self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        removeSelfFromZr: function (zr) {\n            this.__zr = null;\n            // 移除动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.removeAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.removeSelfFromZr(zr);\n            }\n        }\n    };\n\n    zrUtil.mixin(Element, Animatable);\n    zrUtil.mixin(Element, Transformable);\n    zrUtil.mixin(Element, Eventful);\n\n    module.exports = Element;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Element.js\n// module id = 667\n// module chunks = 0 1 2","/**\n * @module echarts/animation/Animator\n */\n\n\n    var Clip = require('./Clip');\n    var color = require('../tool/color');\n    var util = require('../core/util');\n    var isArrayLike = util.isArrayLike;\n\n    var arraySlice = Array.prototype.slice;\n\n    function defaultGetter(target, key) {\n        return target[key];\n    }\n\n    function defaultSetter(target, key, value) {\n        target[key] = value;\n    }\n\n    /**\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} percent\n     * @return {number}\n     */\n    function interpolateNumber(p0, p1, percent) {\n        return (p1 - p0) * percent + p0;\n    }\n\n    /**\n     * @param  {string} p0\n     * @param  {string} p1\n     * @param  {number} percent\n     * @return {string}\n     */\n    function interpolateString(p0, p1, percent) {\n        return percent > 0.5 ? p1 : p0;\n    }\n\n    /**\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {number} percent\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function interpolateArray(p0, p1, percent, out, arrDim) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = interpolateNumber(p0[i], p1[i], percent);\n            }\n        }\n        else {\n            var len2 = len && p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = interpolateNumber(\n                        p0[i][j], p1[i][j], percent\n                    );\n                }\n            }\n        }\n    }\n\n    // arr0 is source array, arr1 is target array.\n    // Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n    function fillArr(arr0, arr1, arrDim) {\n        var arr0Len = arr0.length;\n        var arr1Len = arr1.length;\n        if (arr0Len !== arr1Len) {\n            // FIXME Not work for TypedArray\n            var isPreviousLarger = arr0Len > arr1Len;\n            if (isPreviousLarger) {\n                // Cut the previous\n                arr0.length = arr1Len;\n            }\n            else {\n                // Fill the previous\n                for (var i = arr0Len; i < arr1Len; i++) {\n                    arr0.push(\n                        arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i])\n                    );\n                }\n            }\n        }\n        // Handling NaN value\n        var len2 = arr0[0] && arr0[0].length;\n        for (var i = 0; i < arr0.length; i++) {\n            if (arrDim === 1) {\n                if (isNaN(arr0[i])) {\n                    arr0[i] = arr1[i];\n                }\n            }\n            else {\n                for (var j = 0; j < len2; j++) {\n                    if (isNaN(arr0[i][j])) {\n                        arr0[i][j] = arr1[i][j];\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @param  {Array} arr0\n     * @param  {Array} arr1\n     * @param  {number} arrDim\n     * @return {boolean}\n     */\n    function isArraySame(arr0, arr1, arrDim) {\n        if (arr0 === arr1) {\n            return true;\n        }\n        var len = arr0.length;\n        if (len !== arr1.length) {\n            return false;\n        }\n        if (arrDim === 1) {\n            for (var i = 0; i < len; i++) {\n                if (arr0[i] !== arr1[i]) {\n                    return false;\n                }\n            }\n        }\n        else {\n            var len2 = arr0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    if (arr0[i][j] !== arr1[i][j]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Catmull Rom interpolate array\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {Array} p2\n     * @param  {Array} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function catmullRomInterpolateArray(\n        p0, p1, p2, p3, t, t2, t3, out, arrDim\n    ) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = catmullRomInterpolate(\n                    p0[i], p1[i], p2[i], p3[i], t, t2, t3\n                );\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = catmullRomInterpolate(\n                        p0[i][j], p1[i][j], p2[i][j], p3[i][j],\n                        t, t2, t3\n                    );\n                }\n            }\n        }\n    }\n\n    /**\n     * Catmull Rom interpolate number\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @return {number}\n     */\n    function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    function cloneValue(value) {\n        if (isArrayLike(value)) {\n            var len = value.length;\n            if (isArrayLike(value[0])) {\n                var ret = [];\n                for (var i = 0; i < len; i++) {\n                    ret.push(arraySlice.call(value[i]));\n                }\n                return ret;\n            }\n\n            return arraySlice.call(value);\n        }\n\n        return value;\n    }\n\n    function rgba2String(rgba) {\n        rgba[0] = Math.floor(rgba[0]);\n        rgba[1] = Math.floor(rgba[1]);\n        rgba[2] = Math.floor(rgba[2]);\n\n        return 'rgba(' + rgba.join(',') + ')';\n    }\n\n    function getArrayDim(keyframes) {\n        var lastValue = keyframes[keyframes.length - 1].value;\n        return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n    }\n\n    function createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n        var getter = animator._getter;\n        var setter = animator._setter;\n        var useSpline = easing === 'spline';\n\n        var trackLen = keyframes.length;\n        if (!trackLen) {\n            return;\n        }\n        // Guess data type\n        var firstVal = keyframes[0].value;\n        var isValueArray = isArrayLike(firstVal);\n        var isValueColor = false;\n        var isValueString = false;\n\n        // For vertices morphing\n        var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n\n        var trackMaxTime;\n        // Sort keyframe as ascending\n        keyframes.sort(function(a, b) {\n            return a.time - b.time;\n        });\n\n        trackMaxTime = keyframes[trackLen - 1].time;\n        // Percents of each keyframe\n        var kfPercents = [];\n        // Value of each keyframe\n        var kfValues = [];\n        var prevValue = keyframes[0].value;\n        var isAllValueEqual = true;\n        for (var i = 0; i < trackLen; i++) {\n            kfPercents.push(keyframes[i].time / trackMaxTime);\n            // Assume value is a color when it is a string\n            var value = keyframes[i].value;\n\n            // Check if value is equal, deep check if value is array\n            if (!((isValueArray && isArraySame(value, prevValue, arrDim))\n                || (!isValueArray && value === prevValue))) {\n                isAllValueEqual = false;\n            }\n            prevValue = value;\n\n            // Try converting a string to a color array\n            if (typeof value == 'string') {\n                var colorArray = color.parse(value);\n                if (colorArray) {\n                    value = colorArray;\n                    isValueColor = true;\n                }\n                else {\n                    isValueString = true;\n                }\n            }\n            kfValues.push(value);\n        }\n        if (!forceAnimate && isAllValueEqual) {\n            return;\n        }\n\n        var lastValue = kfValues[trackLen - 1];\n        // Polyfill array and NaN value\n        for (var i = 0; i < trackLen - 1; i++) {\n            if (isValueArray) {\n                fillArr(kfValues[i], lastValue, arrDim);\n            }\n            else {\n                if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n                    kfValues[i] = lastValue;\n                }\n            }\n        }\n        isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim);\n\n        // Cache the key of last frame to speed up when\n        // animation playback is sequency\n        var lastFrame = 0;\n        var lastFramePercent = 0;\n        var start;\n        var w;\n        var p0;\n        var p1;\n        var p2;\n        var p3;\n\n        if (isValueColor) {\n            var rgba = [0, 0, 0, 0];\n        }\n\n        var onframe = function (target, percent) {\n            // Find the range keyframes\n            // kf1-----kf2---------current--------kf3\n            // find kf2 and kf3 and do interpolation\n            var frame;\n            // In the easing function like elasticOut, percent may less than 0\n            if (percent < 0) {\n                frame = 0;\n            }\n            else if (percent < lastFramePercent) {\n                // Start from next key\n                // PENDING start from lastFrame ?\n                start = Math.min(lastFrame + 1, trackLen - 1);\n                for (frame = start; frame >= 0; frame--) {\n                    if (kfPercents[frame] <= percent) {\n                        break;\n                    }\n                }\n                // PENDING really need to do this ?\n                frame = Math.min(frame, trackLen - 2);\n            }\n            else {\n                for (frame = lastFrame; frame < trackLen; frame++) {\n                    if (kfPercents[frame] > percent) {\n                        break;\n                    }\n                }\n                frame = Math.min(frame - 1, trackLen - 2);\n            }\n            lastFrame = frame;\n            lastFramePercent = percent;\n\n            var range = (kfPercents[frame + 1] - kfPercents[frame]);\n            if (range === 0) {\n                return;\n            }\n            else {\n                w = (percent - kfPercents[frame]) / range;\n            }\n            if (useSpline) {\n                p1 = kfValues[frame];\n                p0 = kfValues[frame === 0 ? frame : frame - 1];\n                p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n                p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n                if (isValueArray) {\n                    catmullRomInterpolateArray(\n                        p0, p1, p2, p3, w, w * w, w * w * w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        value = catmullRomInterpolateArray(\n                            p0, p1, p2, p3, w, w * w, w * w * w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(p1, p2, w);\n                    }\n                    else {\n                        value = catmullRomInterpolate(\n                            p0, p1, p2, p3, w, w * w, w * w * w\n                        );\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n            else {\n                if (isValueArray) {\n                    interpolateArray(\n                        kfValues[frame], kfValues[frame + 1], w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        interpolateArray(\n                            kfValues[frame], kfValues[frame + 1], w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    else {\n                        value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n        };\n\n        var clip = new Clip({\n            target: animator._target,\n            life: trackMaxTime,\n            loop: animator._loop,\n            delay: animator._delay,\n            onframe: onframe,\n            ondestroy: oneTrackDone\n        });\n\n        if (easing && easing !== 'spline') {\n            clip.easing = easing;\n        }\n\n        return clip;\n    }\n\n    /**\n     * @alias module:zrender/animation/Animator\n     * @constructor\n     * @param {Object} target\n     * @param {boolean} loop\n     * @param {Function} getter\n     * @param {Function} setter\n     */\n    var Animator = function(target, loop, getter, setter) {\n        this._tracks = {};\n        this._target = target;\n\n        this._loop = loop || false;\n\n        this._getter = getter || defaultGetter;\n        this._setter = setter || defaultSetter;\n\n        this._clipCount = 0;\n\n        this._delay = 0;\n\n        this._doneList = [];\n\n        this._onframeList = [];\n\n        this._clipList = [];\n    };\n\n    Animator.prototype = {\n        /**\n         * 设置动画关键帧\n         * @param  {number} time 关键帧时间，单位是ms\n         * @param  {Object} props 关键帧的属性值，key-value表示\n         * @return {module:zrender/animation/Animator}\n         */\n        when: function(time /* ms */, props) {\n            var tracks = this._tracks;\n            for (var propName in props) {\n                if (!props.hasOwnProperty(propName)) {\n                    continue;\n                }\n\n                if (!tracks[propName]) {\n                    tracks[propName] = [];\n                    // Invalid value\n                    var value = this._getter(this._target, propName);\n                    if (value == null) {\n                        // zrLog('Invalid property ' + propName);\n                        continue;\n                    }\n                    // If time is 0\n                    //  Then props is given initialize value\n                    // Else\n                    //  Initialize value from current prop value\n                    if (time !== 0) {\n                        tracks[propName].push({\n                            time: 0,\n                            value: cloneValue(value)\n                        });\n                    }\n                }\n                tracks[propName].push({\n                    time: time,\n                    value: props[propName]\n                });\n            }\n            return this;\n        },\n        /**\n         * 添加动画每一帧的回调函数\n         * @param  {Function} callback\n         * @return {module:zrender/animation/Animator}\n         */\n        during: function (callback) {\n            this._onframeList.push(callback);\n            return this;\n        },\n\n        pause: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].pause();\n            }\n            this._paused = true;\n        },\n\n        resume: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].resume();\n            }\n            this._paused = false;\n        },\n\n        isPaused: function () {\n            return !!this._paused;\n        },\n\n        _doneCallback: function () {\n            // Clear all tracks\n            this._tracks = {};\n            // Clear all clips\n            this._clipList.length = 0;\n\n            var doneList = this._doneList;\n            var len = doneList.length;\n            for (var i = 0; i < len; i++) {\n                doneList[i].call(this);\n            }\n        },\n        /**\n         * 开始执行动画\n         * @param  {string|Function} [easing]\n         *         动画缓动函数，详见{@link module:zrender/animation/easing}\n         * @param  {boolean} forceAnimate\n         * @return {module:zrender/animation/Animator}\n         */\n        start: function (easing, forceAnimate) {\n\n            var self = this;\n            var clipCount = 0;\n\n            var oneTrackDone = function() {\n                clipCount--;\n                if (!clipCount) {\n                    self._doneCallback();\n                }\n            };\n\n            var lastClip;\n            for (var propName in this._tracks) {\n                if (!this._tracks.hasOwnProperty(propName)) {\n                    continue;\n                }\n                var clip = createTrackClip(\n                    this, easing, oneTrackDone,\n                    this._tracks[propName], propName, forceAnimate\n                );\n                if (clip) {\n                    this._clipList.push(clip);\n                    clipCount++;\n\n                    // If start after added to animation\n                    if (this.animation) {\n                        this.animation.addClip(clip);\n                    }\n\n                    lastClip = clip;\n                }\n            }\n\n            // Add during callback on the last clip\n            if (lastClip) {\n                var oldOnFrame = lastClip.onframe;\n                lastClip.onframe = function (target, percent) {\n                    oldOnFrame(target, percent);\n\n                    for (var i = 0; i < self._onframeList.length; i++) {\n                        self._onframeList[i](target, percent);\n                    }\n                };\n            }\n\n            // This optimization will help the case that in the upper application\n            // the view may be refreshed frequently, where animation will be\n            // called repeatly but nothing changed.\n            if (!clipCount) {\n                this._doneCallback();\n            }\n            return this;\n        },\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stop: function (forwardToLast) {\n            var clipList = this._clipList;\n            var animation = this.animation;\n            for (var i = 0; i < clipList.length; i++) {\n                var clip = clipList[i];\n                if (forwardToLast) {\n                    // Move to last frame before stop\n                    clip.onframe(this._target, 1);\n                }\n                animation && animation.removeClip(clip);\n            }\n            clipList.length = 0;\n        },\n        /**\n         * 设置动画延迟开始的时间\n         * @param  {number} time 单位ms\n         * @return {module:zrender/animation/Animator}\n         */\n        delay: function (time) {\n            this._delay = time;\n            return this;\n        },\n        /**\n         * 添加动画结束的回调\n         * @param  {Function} cb\n         * @return {module:zrender/animation/Animator}\n         */\n        done: function(cb) {\n            if (cb) {\n                this._doneList.push(cb);\n            }\n            return this;\n        },\n\n        /**\n         * @return {Array.<module:zrender/animation/Clip>}\n         */\n        getClips: function () {\n            return this._clipList;\n        }\n    };\n\n    module.exports = Animator;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Animator.js\n// module id = 668\n// module chunks = 0 1 2","\n\n    module.exports = (typeof window !== 'undefined' &&\n                ((window.requestAnimationFrame && window.requestAnimationFrame.bind(window))\n                // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\n                || (window.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window))\n                || window.mozRequestAnimationFrame\n                || window.webkitRequestAnimationFrame)\n            )\n            || function (func) {\n                setTimeout(func, 16);\n            };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/requestAnimationFrame.js\n// module id = 669\n// module chunks = 0 1 2","\n\n    var PI2 = Math.PI * 2;\n    module.exports = {\n        normalizeRadian: function(angle) {\n            angle %= PI2;\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return angle;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/util.js\n// module id = 670\n// module chunks = 0 1 2","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n\n    /**\n     * Simple double linked list. Compared with array, it has O(1) remove operation.\n     * @constructor\n     */\n    var LinkedList = function () {\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.head = null;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.tail = null;\n\n        this._len = 0;\n    };\n\n    var linkedListProto = LinkedList.prototype;\n    /**\n     * Insert a new value at the tail\n     * @param  {} val\n     * @return {module:zrender/core/LRU~Entry}\n     */\n    linkedListProto.insert = function (val) {\n        var entry = new Entry(val);\n        this.insertEntry(entry);\n        return entry;\n    };\n\n    /**\n     * Insert an entry at the tail\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.insertEntry = function (entry) {\n        if (!this.head) {\n            this.head = this.tail = entry;\n        }\n        else {\n            this.tail.next = entry;\n            entry.prev = this.tail;\n            entry.next = null;\n            this.tail = entry;\n        }\n        this._len++;\n    };\n\n    /**\n     * Remove entry.\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.remove = function (entry) {\n        var prev = entry.prev;\n        var next = entry.next;\n        if (prev) {\n            prev.next = next;\n        }\n        else {\n            // Is head\n            this.head = next;\n        }\n        if (next) {\n            next.prev = prev;\n        }\n        else {\n            // Is tail\n            this.tail = prev;\n        }\n        entry.next = entry.prev = null;\n        this._len--;\n    };\n\n    /**\n     * @return {number}\n     */\n    linkedListProto.len = function () {\n        return this._len;\n    };\n\n    /**\n     * Clear list\n     */\n    linkedListProto.clear = function () {\n        this.head = this.tail = null;\n        this._len = 0;\n    };\n\n    /**\n     * @constructor\n     * @param {} val\n     */\n    var Entry = function (val) {\n        /**\n         * @type {}\n         */\n        this.value = val;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.next;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.prev;\n    };\n\n    /**\n     * LRU Cache\n     * @constructor\n     * @alias module:zrender/core/LRU\n     */\n    var LRU = function (maxSize) {\n\n        this._list = new LinkedList();\n\n        this._map = {};\n\n        this._maxSize = maxSize || 10;\n\n        this._lastRemovedEntry = null;\n    };\n\n    var LRUProto = LRU.prototype;\n\n    /**\n     * @param  {string} key\n     * @param  {} value\n     * @return {} Removed value\n     */\n    LRUProto.put = function (key, value) {\n        var list = this._list;\n        var map = this._map;\n        var removed = null;\n        if (map[key] == null) {\n            var len = list.len();\n            // Reuse last removed entry\n            var entry = this._lastRemovedEntry;\n\n            if (len >= this._maxSize && len > 0) {\n                // Remove the least recently used\n                var leastUsedEntry = list.head;\n                list.remove(leastUsedEntry);\n                delete map[leastUsedEntry.key];\n\n                removed = leastUsedEntry.value;\n                this._lastRemovedEntry = leastUsedEntry;\n            }\n\n            if (entry) {\n                entry.value = value;\n            }\n            else {\n                entry = new Entry(value);\n            }\n            entry.key = key;\n            list.insertEntry(entry);\n            map[key] = entry;\n        }\n\n        return removed;\n    };\n\n    /**\n     * @param  {string} key\n     * @return {}\n     */\n    LRUProto.get = function (key) {\n        var entry = this._map[key];\n        var list = this._list;\n        if (entry != null) {\n            // Put the latest used entry in the tail\n            if (entry !== list.tail) {\n                list.remove(entry);\n                list.insertEntry(entry);\n            }\n\n            return entry.value;\n        }\n    };\n\n    /**\n     * Clear the cache\n     */\n    LRUProto.clear = function () {\n        this._list.clear();\n        this._map = {};\n    };\n\n    module.exports = LRU;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/LRU.js\n// module id = 671\n// module chunks = 0 1 2","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\n\n\n    var idStart = 0x0907;\n\n    module.exports = function () {\n        return idStart++;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/guid.js\n// module id = 672\n// module chunks = 0 1 2","\n        var config = require('../config');\n\n        /**\n         * @exports zrender/tool/log\n         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n         */\n        module.exports = function() {\n            if (config.debugMode === 0) {\n                return;\n            }\n            else if (config.debugMode == 1) {\n                for (var k in arguments) {\n                    throw new Error(arguments[k]);\n                }\n            }\n            else if (config.debugMode > 1) {\n                for (var k in arguments) {\n                    console.log(arguments[k]);\n                }\n            }\n        };\n\n        /* for debug\n        return function(mes) {\n            document.getElementById('wrong-message').innerHTML =\n                mes + ' ' + (new Date() - 0)\n                + '<br/>'\n                + document.getElementById('wrong-message').innerHTML;\n        };\n        */\n    \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/log.js\n// module id = 673\n// module chunks = 0 1 2","/**\n * Image element\n * @module zrender/graphic/Image\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var BoundingRect = require('../core/BoundingRect');\n    var zrUtil = require('../core/util');\n    var imageHelper = require('./helper/image');\n\n    /**\n     * @alias zrender/graphic/Image\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function ZImage(opts) {\n        Displayable.call(this, opts);\n    }\n\n    ZImage.prototype = {\n\n        constructor: ZImage,\n\n        type: 'image',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var src = style.image;\n\n            // Must bind each time\n            style.bind(ctx, this, prevEl);\n\n            var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this);\n\n            if (!image || !imageHelper.isImageReady(image)) {\n                return;\n            }\n\n            // 图片已经加载完成\n            // if (image.nodeName.toUpperCase() == 'IMG') {\n            //     if (!image.complete) {\n            //         return;\n            //     }\n            // }\n            // Else is canvas\n\n            var x = style.x || 0;\n            var y = style.y || 0;\n            var width = style.width;\n            var height = style.height;\n            var aspect = image.width / image.height;\n            if (width == null && height != null) {\n                // Keep image/height ratio\n                width = height * aspect;\n            }\n            else if (height == null && width != null) {\n                height = width / aspect;\n            }\n            else if (width == null && height == null) {\n                width = image.width;\n                height = image.height;\n            }\n\n            // 设置transform\n            this.setTransform(ctx);\n\n            if (style.sWidth && style.sHeight) {\n                var sx = style.sx || 0;\n                var sy = style.sy || 0;\n                ctx.drawImage(\n                    image,\n                    sx, sy, style.sWidth, style.sHeight,\n                    x, y, width, height\n                );\n            }\n            else if (style.sx && style.sy) {\n                var sx = style.sx;\n                var sy = style.sy;\n                var sWidth = width - sx;\n                var sHeight = height - sy;\n                ctx.drawImage(\n                    image,\n                    sx, sy, sWidth, sHeight,\n                    x, y, width, height\n                );\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (! this._rect) {\n                this._rect = new BoundingRect(\n                    style.x || 0, style.y || 0, style.width || 0, style.height || 0\n                );\n            }\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(ZImage, Displayable);\n\n    module.exports = ZImage;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Image.js\n// module id = 674\n// module chunks = 0 1 2","\n\n    var Pattern = function (image, repeat) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {image: ...}`, where this constructor will not be called.\n\n        this.image = image;\n        this.repeat = repeat;\n\n        // Can be cloned\n        this.type = 'pattern';\n    };\n\n    Pattern.prototype.getCanvasPattern = function (ctx) {\n        return ctx.createPattern(this.image, this.repeat || 'repeat');\n    };\n\n    module.exports = Pattern;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Pattern.js\n// module id = 675\n// module chunks = 0 1 2","/**\n * @module zrender/graphic/Style\n */\n\n\n    var textHelper = require('./helper/text');\n\n    var STYLE_COMMON_PROPS = [\n        ['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'],\n        ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]\n    ];\n\n    // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n    // var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\n    var Style = function (opts, host) {\n        this.extendFrom(opts, false);\n        this.host = host;\n    };\n\n    function createLinearGradient(ctx, obj, rect) {\n        var x = obj.x == null ? 0 : obj.x;\n        var x2 = obj.x2 == null ? 1 : obj.x2;\n        var y = obj.y == null ? 0 : obj.y;\n        var y2 = obj.y2 == null ? 0 : obj.y2;\n\n        if (!obj.global) {\n            x = x * rect.width + rect.x;\n            x2 = x2 * rect.width + rect.x;\n            y = y * rect.height + rect.y;\n            y2 = y2 * rect.height + rect.y;\n        }\n\n        var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n\n        return canvasGradient;\n    }\n\n    function createRadialGradient(ctx, obj, rect) {\n        var width = rect.width;\n        var height = rect.height;\n        var min = Math.min(width, height);\n\n        var x = obj.x == null ? 0.5 : obj.x;\n        var y = obj.y == null ? 0.5 : obj.y;\n        var r = obj.r == null ? 0.5 : obj.r;\n        if (!obj.global) {\n            x = x * width + rect.x;\n            y = y * height + rect.y;\n            r = r * min;\n        }\n\n        var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n\n        return canvasGradient;\n    }\n\n\n    Style.prototype = {\n\n        constructor: Style,\n\n        /**\n         * @type {module:zrender/graphic/Displayable}\n         */\n        host: null,\n\n        /**\n         * @type {string}\n         */\n        fill: '#000000',\n\n        /**\n         * @type {string}\n         */\n        stroke: null,\n\n        /**\n         * @type {number}\n         */\n        opacity: 1,\n\n        /**\n         * @type {Array.<number>}\n         */\n        lineDash: null,\n\n        /**\n         * @type {number}\n         */\n        lineDashOffset: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetY: 0,\n\n        /**\n         * @type {number}\n         */\n        lineWidth: 1,\n\n        /**\n         * If stroke ignore scale\n         * @type {Boolean}\n         */\n        strokeNoScale: false,\n\n        // Bounding rect text configuration\n        // Not affected by element transform\n        /**\n         * @type {string}\n         */\n        text: null,\n\n        /**\n         * If `fontSize` or `fontFamily` exists, `font` will be reset by\n         * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n         * So do not visit it directly in upper application (like echarts),\n         * but use `contain/text#makeFont` instead.\n         * @type {string}\n         */\n        font: null,\n\n        /**\n         * The same as font. Use font please.\n         * @deprecated\n         * @type {string}\n         */\n        textFont: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * @type {string}\n         */\n        fontStyle: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * @type {string}\n         */\n        fontWeight: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * Should be 12 but not '12px'.\n         * @type {number}\n         */\n        fontSize: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * @type {string}\n         */\n        fontFamily: null,\n\n        /**\n         * Reserved for special functinality, like 'hr'.\n         * @type {string}\n         */\n        textTag: null,\n\n        /**\n         * @type {string}\n         */\n        textFill: '#000',\n\n        /**\n         * @type {string}\n         */\n        textStroke: null,\n\n        /**\n         * @type {number}\n         */\n        textWidth: null,\n\n        /**\n         * Only for textBackground.\n         * @type {number}\n         */\n        textHeight: null,\n\n        /**\n         * textStroke may be set as some color as a default\n         * value in upper applicaion, where the default value\n         * of textLineWidth should be 0 to make sure that\n         * user can choose to do not use text stroke.\n         * @type {number}\n         */\n        textLineWidth: 0,\n\n        /**\n         * @type {number}\n         */\n        textLineHeight: null,\n\n        /**\n         * 'inside', 'left', 'right', 'top', 'bottom'\n         * [x, y]\n         * Based on x, y of rect.\n         * @type {string|Array.<number>}\n         * @default 'inside'\n         */\n        textPosition: 'inside',\n\n        /**\n         * If not specified, use the boundingRect of a `displayable`.\n         * @type {Object}\n         */\n        textRect: null,\n\n        /**\n         * [x, y]\n         * @type {Array.<number>}\n         */\n        textOffset: null,\n\n        /**\n         * @type {string}\n         */\n        textAlign: null,\n\n        /**\n         * @type {string}\n         */\n        textVerticalAlign: null,\n\n        /**\n         * @type {number}\n         */\n        textDistance: 5,\n\n        /**\n         * @type {string}\n         */\n        textShadowColor: 'transparent',\n\n        /**\n         * @type {number}\n         */\n        textShadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        textShadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        textShadowOffsetY: 0,\n\n        /**\n         * @type {string}\n         */\n        textBoxShadowColor: 'transparent',\n\n        /**\n         * @type {number}\n         */\n        textBoxShadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        textBoxShadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        textBoxShadowOffsetY: 0,\n\n        /**\n         * Whether transform text.\n         * Only useful in Path and Image element\n         * @type {boolean}\n         */\n        transformText: false,\n\n        /**\n         * Text rotate around position of Path or Image\n         * Only useful in Path and Image element and transformText is false.\n         */\n        textRotation: 0,\n\n        /**\n         * Text origin of text rotation, like [10, 40].\n         * Based on x, y of rect.\n         * Useful in label rotation of circular symbol.\n         * By default, this origin is textPosition.\n         * Can be 'center'.\n         * @type {string|Array.<number>}\n         */\n        textOrigin: null,\n\n        /**\n         * @type {string}\n         */\n        textBackgroundColor: null,\n\n        /**\n         * @type {string}\n         */\n        textBorderColor: null,\n\n        /**\n         * @type {number}\n         */\n        textBorderWidth: 0,\n\n        /**\n         * @type {number}\n         */\n        textBorderRadius: 0,\n\n        /**\n         * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n         * @type {number|Array.<number>}\n         */\n        textPadding: null,\n\n        /**\n         * Text styles for rich text.\n         * @type {Object}\n         */\n        rich: null,\n\n        /**\n         * {outerWidth, outerHeight, ellipsis, placeholder}\n         * @type {Object}\n         */\n        truncate: null,\n\n        /**\n         * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n         * @type {string}\n         */\n        blend: null,\n\n        normalize: function () {\n            textHelper.normalizeTextStyle(this);\n        },\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        bind: function (ctx, el, prevEl) {\n            var style = this;\n            var prevStyle = prevEl && prevEl.style;\n            var firstDraw = !prevStyle;\n\n            for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n                var prop = STYLE_COMMON_PROPS[i];\n                var styleName = prop[0];\n\n                if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n                    // FIXME Invalid property value will cause style leak from previous element.\n                    ctx[styleName] = style[styleName] || prop[1];\n                }\n            }\n\n            if ((firstDraw || style.fill !== prevStyle.fill)) {\n                ctx.fillStyle = style.fill;\n            }\n            if ((firstDraw || style.stroke !== prevStyle.stroke)) {\n                ctx.strokeStyle = style.stroke;\n            }\n            if ((firstDraw || style.opacity !== prevStyle.opacity)) {\n                ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n            }\n\n            if ((firstDraw || style.blend !== prevStyle.blend)) {\n                ctx.globalCompositeOperation = style.blend || 'source-over';\n            }\n            if (this.hasStroke()) {\n                var lineWidth = style.lineWidth;\n                ctx.lineWidth = lineWidth / (\n                    (this.strokeNoScale && el && el.getLineScale) ? el.getLineScale() : 1\n                );\n            }\n        },\n\n        hasFill: function () {\n            var fill = this.fill;\n            return fill != null && fill !== 'none';\n        },\n\n        hasStroke: function () {\n            var stroke = this.stroke;\n            return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n        },\n\n        /**\n         * Extend from other style\n         * @param {zrender/graphic/Style} otherStyle\n         * @param {boolean} overwrite true: overwrirte any way.\n         *                            false: overwrite only when !target.hasOwnProperty\n         *                            others: overwrite when property is not null/undefined.\n         */\n        extendFrom: function (otherStyle, overwrite) {\n            if (otherStyle) {\n                for (var name in otherStyle) {\n                    if (otherStyle.hasOwnProperty(name)\n                        && (overwrite === true\n                            || (\n                                overwrite === false\n                                    ? !this.hasOwnProperty(name)\n                                    : otherStyle[name] != null\n                            )\n                        )\n                    ) {\n                        this[name] = otherStyle[name];\n                    }\n                }\n            }\n        },\n\n        /**\n         * Batch setting style with a given object\n         * @param {Object|string} obj\n         * @param {*} [obj]\n         */\n        set: function (obj, value) {\n            if (typeof obj === 'string') {\n                this[obj] = value;\n            }\n            else {\n                this.extendFrom(obj, true);\n            }\n        },\n\n        /**\n         * Clone\n         * @return {zrender/graphic/Style} [description]\n         */\n        clone: function () {\n            var newStyle = new this.constructor();\n            newStyle.extendFrom(this, true);\n            return newStyle;\n        },\n\n        getGradient: function (ctx, obj, rect) {\n            var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n            var canvasGradient = method(ctx, obj, rect);\n            var colorStops = obj.colorStops;\n            for (var i = 0; i < colorStops.length; i++) {\n                canvasGradient.addColorStop(\n                    colorStops[i].offset, colorStops[i].color\n                );\n            }\n            return canvasGradient;\n        }\n\n    };\n\n    var styleProto = Style.prototype;\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n        var prop = STYLE_COMMON_PROPS[i];\n        if (!(prop[0] in styleProto)) {\n            styleProto[prop[0]] = prop[1];\n        }\n    }\n\n    // Provide for others\n    Style.getGradient = styleProto.getGradient;\n\n    module.exports = Style;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Style.js\n// module id = 676\n// module chunks = 0 1 2","\n\n    var env = require('../../core/env');\n\n    // Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n    // where exception \"unexpected call to method or property access\"\n    // might be thrown when calling ctx.fill or ctx.stroke after a path\n    // whose area size is zero is drawn and ctx.clip() is called and\n    // shadowBlur is set. See #4572, #3112, #5777.\n    // (e.g.,\n    //  ctx.moveTo(10, 10);\n    //  ctx.lineTo(20, 10);\n    //  ctx.closePath();\n    //  ctx.clip();\n    //  ctx.shadowBlur = 10;\n    //  ...\n    //  ctx.fill();\n    // )\n\n    var shadowTemp = [\n        ['shadowBlur', 0],\n        ['shadowColor', '#000'],\n        ['shadowOffsetX', 0],\n        ['shadowOffsetY', 0]\n    ];\n\n    module.exports = function (orignalBrush) {\n\n        // version string can be: '11.0'\n        return (env.browser.ie && env.browser.version >= 11)\n\n            ? function () {\n                var clipPaths = this.__clipPaths;\n                var style = this.style;\n                var modified;\n\n                if (clipPaths) {\n                    for (var i = 0; i < clipPaths.length; i++) {\n                        var clipPath = clipPaths[i];\n                        var shape = clipPath && clipPath.shape;\n                        var type = clipPath && clipPath.type;\n\n                        if (shape && (\n                            (type === 'sector' && shape.startAngle === shape.endAngle)\n                            || (type === 'rect' && (!shape.width || !shape.height))\n                        )) {\n                            for (var j = 0; j < shadowTemp.length; j++) {\n                                // It is save to put shadowTemp static, because shadowTemp\n                                // will be all modified each item brush called.\n                                shadowTemp[j][2] = style[shadowTemp[j][0]];\n                                style[shadowTemp[j][0]] = shadowTemp[j][1];\n                            }\n                            modified = true;\n                            break;\n                        }\n                    }\n                }\n\n                orignalBrush.apply(this, arguments);\n\n                if (modified) {\n                    for (var j = 0; j < shadowTemp.length; j++) {\n                        style[shadowTemp[j][0]] = shadowTemp[j][2];\n                    }\n                }\n            }\n\n            : orignalBrush;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/fixClipWithShadow.js\n// module id = 677\n// module chunks = 0 1 2","\n\n    var smoothSpline = require('./smoothSpline');\n    var smoothBezier = require('./smoothBezier');\n\n    module.exports = {\n        buildPath: function (ctx, shape, closePath) {\n            var points = shape.points;\n            var smooth = shape.smooth;\n            if (points && points.length >= 2) {\n                if (smooth && smooth !== 'spline') {\n                    var controlPoints = smoothBezier(\n                        points, smooth, closePath, shape.smoothConstraint\n                    );\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    var len = points.length;\n                    for (var i = 0; i < (closePath ? len : len - 1); i++) {\n                        var cp1 = controlPoints[i * 2];\n                        var cp2 = controlPoints[i * 2 + 1];\n                        var p = points[(i + 1) % len];\n                        ctx.bezierCurveTo(\n                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\n                        );\n                    }\n                }\n                else {\n                    if (smooth === 'spline') {\n                        points = smoothSpline(points, closePath);\n                    }\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    for (var i = 1, l = points.length; i < l; i++) {\n                        ctx.lineTo(points[i][0], points[i][1]);\n                    }\n                }\n\n                closePath && ctx.closePath();\n            }\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/poly.js\n// module id = 678\n// module chunks = 0 1 2","\n\n    module.exports = {\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            var r = shape.r;\n            var r1;\n            var r2;\n            var r3;\n            var r4;\n\n            // Convert width and height to positive for better borderRadius\n            if (width < 0) {\n                x = x + width;\n                width = -width;\n            }\n            if (height < 0) {\n                y = y + height;\n                height = -height;\n            }\n\n            if (typeof r === 'number') {\n                r1 = r2 = r3 = r4 = r;\n            }\n            else if (r instanceof Array) {\n                if (r.length === 1) {\n                    r1 = r2 = r3 = r4 = r[0];\n                }\n                else if (r.length === 2) {\n                    r1 = r3 = r[0];\n                    r2 = r4 = r[1];\n                }\n                else if (r.length === 3) {\n                    r1 = r[0];\n                    r2 = r4 = r[1];\n                    r3 = r[2];\n                }\n                else {\n                    r1 = r[0];\n                    r2 = r[1];\n                    r3 = r[2];\n                    r4 = r[3];\n                }\n            }\n            else {\n                r1 = r2 = r3 = r4 = 0;\n            }\n\n            var total;\n            if (r1 + r2 > width) {\n                total = r1 + r2;\n                r1 *= width / total;\n                r2 *= width / total;\n            }\n            if (r3 + r4 > width) {\n                total = r3 + r4;\n                r3 *= width / total;\n                r4 *= width / total;\n            }\n            if (r2 + r3 > height) {\n                total = r2 + r3;\n                r2 *= height / total;\n                r3 *= height / total;\n            }\n            if (r1 + r4 > height) {\n                total = r1 + r4;\n                r1 *= height / total;\n                r4 *= height / total;\n            }\n            ctx.moveTo(x + r1, y);\n            ctx.lineTo(x + width - r2, y);\n            r2 !== 0 && ctx.quadraticCurveTo(\n                x + width, y, x + width, y + r2\n            );\n            ctx.lineTo(x + width, y + height - r3);\n            r3 !== 0 && ctx.quadraticCurveTo(\n                x + width, y + height, x + width - r3, y + height\n            );\n            ctx.lineTo(x + r4, y + height);\n            r4 !== 0 && ctx.quadraticCurveTo(\n                x, y + height, x, y + height - r4\n            );\n            ctx.lineTo(x, y + r1);\n            r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/roundRect.js\n// module id = 679\n// module chunks = 0 1 2","'use strict';\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\n\n\n    var matrix = require('../core/matrix');\n    var vector = require('../core/vector');\n    var mIdentity = matrix.identity;\n\n    var EPSILON = 5e-5;\n\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n\n    /**\n     * @alias module:zrender/mixin/Transformable\n     * @constructor\n     */\n    var Transformable = function (opts) {\n        opts = opts || {};\n        // If there are no given position, rotation, scale\n        if (!opts.position) {\n            /**\n             * 平移\n             * @type {Array.<number>}\n             * @default [0, 0]\n             */\n            this.position = [0, 0];\n        }\n        if (opts.rotation == null) {\n            /**\n             * 旋转\n             * @type {Array.<number>}\n             * @default 0\n             */\n            this.rotation = 0;\n        }\n        if (!opts.scale) {\n            /**\n             * 缩放\n             * @type {Array.<number>}\n             * @default [1, 1]\n             */\n            this.scale = [1, 1];\n        }\n        /**\n         * 旋转和缩放的原点\n         * @type {Array.<number>}\n         * @default null\n         */\n        this.origin = this.origin || null;\n    };\n\n    var transformableProto = Transformable.prototype;\n    transformableProto.transform = null;\n\n    /**\n     * 判断是否需要有坐标变换\n     * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n     */\n    transformableProto.needLocalTransform = function () {\n        return isNotAroundZero(this.rotation)\n            || isNotAroundZero(this.position[0])\n            || isNotAroundZero(this.position[1])\n            || isNotAroundZero(this.scale[0] - 1)\n            || isNotAroundZero(this.scale[1] - 1);\n    };\n\n    transformableProto.updateTransform = function () {\n        var parent = this.parent;\n        var parentHasTransform = parent && parent.transform;\n        var needLocalTransform = this.needLocalTransform();\n\n        var m = this.transform;\n        if (!(needLocalTransform || parentHasTransform)) {\n            m && mIdentity(m);\n            return;\n        }\n\n        m = m || matrix.create();\n\n        if (needLocalTransform) {\n            this.getLocalTransform(m);\n        }\n        else {\n            mIdentity(m);\n        }\n\n        // 应用父节点变换\n        if (parentHasTransform) {\n            if (needLocalTransform) {\n                matrix.mul(m, parent.transform, m);\n            }\n            else {\n                matrix.copy(m, parent.transform);\n            }\n        }\n        // 保存这个变换矩阵\n        this.transform = m;\n\n        this.invTransform = this.invTransform || matrix.create();\n        matrix.invert(this.invTransform, m);\n    };\n\n    transformableProto.getLocalTransform = function (m) {\n        return Transformable.getLocalTransform(this, m);\n    };\n\n    /**\n     * 将自己的transform应用到context上\n     * @param {CanvasRenderingContext2D} ctx\n     */\n    transformableProto.setTransform = function (ctx) {        \n        var m = this.transform;\n        var dpr = ctx.dpr || 1;\n        if (m) {\n            ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n        }\n        else {\n            ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n        }\n    };\n\n    transformableProto.restoreTransform = function (ctx) {\n        var dpr = ctx.dpr || 1;\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n    };\n\n    var tmpTransform = [];\n\n    /**\n     * 分解`transform`矩阵到`position`, `rotation`, `scale`\n     */\n    transformableProto.decomposeTransform = function () {\n        if (!this.transform) {\n            return;\n        }\n        var parent = this.parent;\n        var m = this.transform;\n        if (parent && parent.transform) {\n            // Get local transform and decompose them to position, scale, rotation\n            matrix.mul(tmpTransform, parent.invTransform, m);\n            m = tmpTransform;\n        }\n        var sx = m[0] * m[0] + m[1] * m[1];\n        var sy = m[2] * m[2] + m[3] * m[3];\n        var position = this.position;\n        var scale = this.scale;\n        if (isNotAroundZero(sx - 1)) {\n            sx = Math.sqrt(sx);\n        }\n        if (isNotAroundZero(sy - 1)) {\n            sy = Math.sqrt(sy);\n        }\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        position[0] = m[4];\n        position[1] = m[5];\n        scale[0] = sx;\n        scale[1] = sy;\n        this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n    };\n\n    /**\n     * Get global scale\n     * @return {Array.<number>}\n     */\n    transformableProto.getGlobalScale = function () {\n        var m = this.transform;\n        if (!m) {\n            return [1, 1];\n        }\n        var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        return [sx, sy];\n    };\n    /**\n     * 变换坐标位置到 shape 的局部坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToLocal = function (x, y) {\n        var v2 = [x, y];\n        var invTransform = this.invTransform;\n        if (invTransform) {\n            vector.applyTransform(v2, v2, invTransform);\n        }\n        return v2;\n    };\n\n    /**\n     * 变换局部坐标位置到全局坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToGlobal = function (x, y) {\n        var v2 = [x, y];\n        var transform = this.transform;\n        if (transform) {\n            vector.applyTransform(v2, v2, transform);\n        }\n        return v2;\n    };\n\n    /**\n     * @static\n     * @param {Object} target\n     * @param {Array.<number>} target.origin\n     * @param {number} target.rotation\n     * @param {Array.<number>} target.position\n     * @param {Array.<number>} [m]\n     */\n    Transformable.getLocalTransform = function (target, m) {\n        m = m || [];\n        mIdentity(m);\n\n        var origin = target.origin;\n        var scale = target.scale || [1, 1];\n        var rotation = target.rotation || 0;\n        var position = target.position || [0, 0];\n\n        if (origin) {\n            // Translate to origin\n            m[4] -= origin[0];\n            m[5] -= origin[1];\n        }\n        matrix.scale(m, m, scale);\n        if (rotation) {\n            matrix.rotate(m, m, rotation);\n        }\n        if (origin) {\n            // Translate back from origin\n            m[4] += origin[0];\n            m[5] += origin[1];\n        }\n\n        m[4] += position[0];\n        m[5] += position[1];\n\n        return m;\n    };\n\n    module.exports = Transformable;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Transformable.js\n// module id = 680\n// module chunks = 0 1 2","'use strict';\n\n\n    var graphic = require('../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n\n    require('../coord/cartesian/Grid');\n\n    require('./axis');\n\n    // Grid view\n    echarts.extendComponentView({\n\n        type: 'grid',\n\n        render: function (gridModel, ecModel) {\n            this.group.removeAll();\n            if (gridModel.get('show')) {\n                this.group.add(new graphic.Rect({\n                    shape: gridModel.coordinateSystem.getRect(),\n                    style: zrUtil.defaults({\n                        fill: gridModel.get('backgroundColor')\n                    }, gridModel.getItemStyle()),\n                    silent: true,\n                    z2: -1\n                }));\n            }\n        }\n\n    });\n\n    echarts.registerPreprocessor(function (option) {\n        // Only create grid when need\n        if (option.xAxis && option.yAxis && !option.grid) {\n            option.grid = {};\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/gridSimple.js\n// module id = 683\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var defaultOption = {\n        show: true,\n        zlevel: 0,                  // 一级层叠\n        z: 0,                       // 二级层叠\n        // 反向坐标轴\n        inverse: false,\n\n        // 坐标轴名字，默认为空\n        name: '',\n        // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n        nameLocation: 'end',\n        // 坐标轴名字旋转，degree。\n        nameRotate: null, // Adapt to axis rotate, when nameLocation is 'middle'.\n        nameTruncate: {\n            maxWidth: null,\n            ellipsis: '...',\n            placeholder: '.'\n        },\n        // 坐标轴文字样式，默认取全局样式\n        nameTextStyle: {},\n        // 文字与轴线距离\n        nameGap: 15,\n\n        silent: false, // Default false to support tooltip.\n        triggerEvent: false, // Default false to avoid legacy user event listener fail.\n\n        tooltip: {\n            show: false\n        },\n\n        axisPointer: {},\n\n        // 坐标轴线\n        axisLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            onZero: true,\n            onZeroAxisIndex: null,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                color: '#333',\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // 属性show控制显示与否，默认显示\n            show: true,\n            // 控制小标记是否在grid里\n            inside: false,\n            // 属性length控制线长\n            length: 5,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                width: 1\n            }\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            show: true,\n            // 控制文本标签是否在grid里\n            inside: false,\n            rotate: 0,\n            showMinLabel: null, // true | false | null (auto)\n            showMaxLabel: null, // true | false | null (auto)\n            margin: 8,\n            // formatter: null,\n            // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n            fontSize: 12\n        },\n        // 分隔线\n        splitLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            // 属性lineStyle（详见lineStyle）控制线条样式\n            lineStyle: {\n                color: ['#ccc'],\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 分隔区域\n        splitArea: {\n            // 默认不显示，属性show控制显示与否\n            show: false,\n            // 属性areaStyle（详见areaStyle）控制区域样式\n            areaStyle: {\n                color: ['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']\n            }\n        }\n    };\n\n    var categoryAxis = zrUtil.merge({\n        // 类目起始和结束两端空白策略\n        boundaryGap: true,\n        // splitArea: {\n            // show: false\n        // },\n        splitLine: {\n            show: false\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // If tick is align with label when boundaryGap is true\n            alignWithLabel: false,\n            interval: 'auto'\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            interval: 'auto'\n        }\n    }, defaultOption);\n\n    var valueAxis = zrUtil.merge({\n        // 数值起始和结束两端空白策略\n        boundaryGap: [0, 0],\n        // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n        // min: null,\n        // 最大值，设置成 'dataMax' 则从数据中计算最大值\n        // max: null,\n        // Readonly prop, specifies start value of the range when using data zoom.\n        // rangeStart: null\n        // Readonly prop, specifies end value of the range when using data zoom.\n        // rangeEnd: null\n        // 脱离0值比例，放大聚焦到最终_min，_max区间\n        // scale: false,\n        // 分割段数，默认为5\n        splitNumber: 5\n        // Minimum interval\n        // minInterval: null\n        // maxInterval: null\n    }, defaultOption);\n\n    // FIXME\n    var timeAxis = zrUtil.defaults({\n        scale: true,\n        min: 'dataMin',\n        max: 'dataMax'\n    }, valueAxis);\n\n    var logAxis = zrUtil.defaults({\n        scale: true,\n        logBase: 10\n    }, valueAxis);\n\n    module.exports = {\n        categoryAxis: categoryAxis,\n        valueAxis: valueAxis,\n        timeAxis: timeAxis,\n        logAxis: logAxis\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisDefault.js\n// module id = 684\n// module chunks = 0 1 2","/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\nvar factory = exports;\n\n    var layout = require('../../util/layout');\n    var axisHelper = require('../../coord/axisHelper');\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Cartesian2D = require('./Cartesian2D');\n    var Axis2D = require('./Axis2D');\n\n    var each = zrUtil.each;\n\n    var ifAxisCrossZero = axisHelper.ifAxisCrossZero;\n    var niceScaleExtent = axisHelper.niceScaleExtent;\n\n    // 依赖 GridModel, AxisModel 做预处理\n    require('./GridModel');\n\n    /**\n     * Check if the axis is used in the specified grid\n     * @inner\n     */\n    function isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n        return axisModel.getCoordSysModel() === gridModel;\n    }\n\n    function getLabelUnionRect(axis) {\n        var axisModel = axis.model;\n        var labels = axisModel.getFormattedLabels();\n        var axisLabelModel = axisModel.getModel('axisLabel');\n        var rect;\n        var step = 1;\n        var labelCount = labels.length;\n        if (labelCount > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.ceil(labelCount / 40);\n        }\n        for (var i = 0; i < labelCount; i += step) {\n            if (!axis.isLabelIgnored(i)) {\n                var singleRect = axisLabelModel.getTextRect(labels[i]);\n                // FIXME consider label rotate\n                rect ? rect.union(singleRect) : (rect = singleRect);\n            }\n        }\n        return rect;\n    }\n\n    function Grid(gridModel, ecModel, api) {\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n         * @private\n         */\n        this._coordsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n         * @private\n         */\n        this._coordsList = [];\n\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesList = [];\n\n        this._initCartesian(gridModel, ecModel, api);\n\n        this.model = gridModel;\n    }\n\n    var gridProto = Grid.prototype;\n\n    gridProto.type = 'grid';\n\n    gridProto.axisPointerEnabled = true;\n\n    gridProto.getRect = function () {\n        return this._rect;\n    };\n\n    gridProto.update = function (ecModel, api) {\n\n        var axesMap = this._axesMap;\n\n        this._updateScale(ecModel, this.model);\n\n        each(axesMap.x, function (xAxis) {\n            niceScaleExtent(xAxis.scale, xAxis.model);\n        });\n        each(axesMap.y, function (yAxis) {\n            niceScaleExtent(yAxis.scale, yAxis.model);\n        });\n        each(axesMap.x, function (xAxis) {\n            fixAxisOnZero(axesMap, 'y', xAxis);\n        });\n        each(axesMap.y, function (yAxis) {\n            fixAxisOnZero(axesMap, 'x', yAxis);\n        });\n\n        // Resize again if containLabel is enabled\n        // FIXME It may cause getting wrong grid size in data processing stage\n        this.resize(this.model, api);\n    };\n\n    function fixAxisOnZero(axesMap, otherAxisDim, axis) {\n        // onZero can not be enabled in these two situations:\n        // 1. When any other axis is a category axis.\n        // 2. When no axis is cross 0 point.\n        var axes = axesMap[otherAxisDim];\n\n        if (!axis.onZero) {\n            return;\n        }\n\n        var onZeroAxisIndex = axis.onZeroAxisIndex;\n\n        // If target axis is specified.\n        if (onZeroAxisIndex != null) {\n            var otherAxis = axes[onZeroAxisIndex];\n            if (otherAxis && canNotOnZeroToAxis(otherAxis)) {\n                axis.onZero = false;\n            }\n            return;\n        }\n\n        for (var idx in axes) {\n            if (axes.hasOwnProperty(idx)) {\n                var otherAxis = axes[idx];\n                if (otherAxis && !canNotOnZeroToAxis(otherAxis)) {\n                    onZeroAxisIndex = +idx;\n                    break;\n                }\n            }\n        }\n\n        if (onZeroAxisIndex == null) {\n            axis.onZero = false;\n        }\n        axis.onZeroAxisIndex = onZeroAxisIndex;\n    }\n\n    function canNotOnZeroToAxis(axis) {\n        return axis.type === 'category' || axis.type === 'time' || !ifAxisCrossZero(axis);\n    }\n\n    /**\n     * Resize the grid\n     * @param {module:echarts/coord/cartesian/GridModel} gridModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    gridProto.resize = function (gridModel, api, ignoreContainLabel) {\n\n        var gridRect = layout.getLayoutRect(\n            gridModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n\n        this._rect = gridRect;\n\n        var axesList = this._axesList;\n\n        adjustAxes();\n\n        // Minus label size\n        if (!ignoreContainLabel && gridModel.get('containLabel')) {\n            each(axesList, function (axis) {\n                if (!axis.model.get('axisLabel.inside')) {\n                    var labelUnionRect = getLabelUnionRect(axis);\n                    if (labelUnionRect) {\n                        var dim = axis.isHorizontal() ? 'height' : 'width';\n                        var margin = axis.model.get('axisLabel.margin');\n                        gridRect[dim] -= labelUnionRect[dim] + margin;\n                        if (axis.position === 'top') {\n                            gridRect.y += labelUnionRect.height + margin;\n                        }\n                        else if (axis.position === 'left')  {\n                            gridRect.x += labelUnionRect.width + margin;\n                        }\n                    }\n                }\n            });\n\n            adjustAxes();\n        }\n\n        function adjustAxes() {\n            each(axesList, function (axis) {\n                var isHorizontal = axis.isHorizontal();\n                var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n                var idx = axis.inverse ? 1 : 0;\n                axis.setExtent(extent[idx], extent[1 - idx]);\n                updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n            });\n        }\n    };\n\n    /**\n     * @param {string} axisType\n     * @param {number} [axisIndex]\n     */\n    gridProto.getAxis = function (axisType, axisIndex) {\n        var axesMapOnDim = this._axesMap[axisType];\n        if (axesMapOnDim != null) {\n            if (axisIndex == null) {\n                // Find first axis\n                for (var name in axesMapOnDim) {\n                    if (axesMapOnDim.hasOwnProperty(name)) {\n                        return axesMapOnDim[name];\n                    }\n                }\n            }\n            return axesMapOnDim[axisIndex];\n        }\n    };\n\n    /**\n     * @return {Array.<module:echarts/coord/Axis>}\n     */\n    gridProto.getAxes = function () {\n        return this._axesList.slice();\n    };\n\n    /**\n     * Usage:\n     *      grid.getCartesian(xAxisIndex, yAxisIndex);\n     *      grid.getCartesian(xAxisIndex);\n     *      grid.getCartesian(null, yAxisIndex);\n     *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n     *\n     * @param {number|Object} [xAxisIndex]\n     * @param {number} [yAxisIndex]\n     */\n    gridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n        if (xAxisIndex != null && yAxisIndex != null) {\n            var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n            return this._coordsMap[key];\n        }\n\n        if (zrUtil.isObject(xAxisIndex)) {\n            yAxisIndex = xAxisIndex.yAxisIndex;\n            xAxisIndex = xAxisIndex.xAxisIndex;\n        }\n        // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n        for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n            if (coordList[i].getAxis('x').index === xAxisIndex\n                || coordList[i].getAxis('y').index === yAxisIndex\n            ) {\n                return coordList[i];\n            }\n        }\n    };\n\n    gridProto.getCartesians = function () {\n        return this._coordsList.slice();\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertToPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.dataToPoint(value)\n            : target.axis\n            ? target.axis.toGlobalCoord(target.axis.dataToCoord(value))\n            : null;\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertFromPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.pointToData(value)\n            : target.axis\n            ? target.axis.coordToData(target.axis.toLocalCoord(value))\n            : null;\n    };\n\n    /**\n     * @inner\n     */\n    gridProto._findConvertTarget = function (ecModel, finder) {\n        var seriesModel = finder.seriesModel;\n        var xAxisModel = finder.xAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('xAxis')[0]);\n        var yAxisModel = finder.yAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('yAxis')[0]);\n        var gridModel = finder.gridModel;\n        var coordsList = this._coordsList;\n        var cartesian;\n        var axis;\n\n        if (seriesModel) {\n            cartesian = seriesModel.coordinateSystem;\n            zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n        }\n        else if (xAxisModel && yAxisModel) {\n            cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n        }\n        else if (xAxisModel) {\n            axis = this.getAxis('x', xAxisModel.componentIndex);\n        }\n        else if (yAxisModel) {\n            axis = this.getAxis('y', yAxisModel.componentIndex);\n        }\n        // Lowest priority.\n        else if (gridModel) {\n            var grid = gridModel.coordinateSystem;\n            if (grid === this) {\n                cartesian = this._coordsList[0];\n            }\n        }\n\n        return {cartesian: cartesian, axis: axis};\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.containPoint = function (point) {\n        var coord = this._coordsList[0];\n        if (coord) {\n            return coord.containPoint(point);\n        }\n    };\n\n    /**\n     * Initialize cartesian coordinate systems\n     * @private\n     */\n    gridProto._initCartesian = function (gridModel, ecModel, api) {\n        var axisPositionUsed = {\n            left: false,\n            right: false,\n            top: false,\n            bottom: false\n        };\n\n        var axesMap = {\n            x: {},\n            y: {}\n        };\n        var axesCount = {\n            x: 0,\n            y: 0\n        };\n\n        /// Create axis\n        ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n        ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n        if (!axesCount.x || !axesCount.y) {\n            // Roll back when there no either x or y axis\n            this._axesMap = {};\n            this._axesList = [];\n            return;\n        }\n\n        this._axesMap = axesMap;\n\n        /// Create cartesian2d\n        each(axesMap.x, function (xAxis, xAxisIndex) {\n            each(axesMap.y, function (yAxis, yAxisIndex) {\n                var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n                var cartesian = new Cartesian2D(key);\n\n                cartesian.grid = this;\n                cartesian.model = gridModel;\n\n                this._coordsMap[key] = cartesian;\n                this._coordsList.push(cartesian);\n\n                cartesian.addAxis(xAxis);\n                cartesian.addAxis(yAxis);\n            }, this);\n        }, this);\n\n        function createAxisCreator(axisType) {\n            return function (axisModel, idx) {\n                if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n                    return;\n                }\n\n                var axisPosition = axisModel.get('position');\n                if (axisType === 'x') {\n                    // Fix position\n                    if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n                        // Default bottom of X\n                        axisPosition = 'bottom';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n                        }\n                    }\n                }\n                else {\n                    // Fix position\n                    if (axisPosition !== 'left' && axisPosition !== 'right') {\n                        // Default left of Y\n                        axisPosition = 'left';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n                        }\n                    }\n                }\n                axisPositionUsed[axisPosition] = true;\n\n                var axis = new Axis2D(\n                    axisType, axisHelper.createScaleByModel(axisModel),\n                    [0, 0],\n                    axisModel.get('type'),\n                    axisPosition\n                );\n\n                var isCategory = axis.type === 'category';\n                axis.onBand = isCategory && axisModel.get('boundaryGap');\n                axis.inverse = axisModel.get('inverse');\n\n                axis.onZero = axisModel.get('axisLine.onZero');\n                axis.onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex');\n\n                // Inject axis into axisModel\n                axisModel.axis = axis;\n\n                // Inject axisModel into axis\n                axis.model = axisModel;\n\n                // Inject grid info axis\n                axis.grid = this;\n\n                // Index of axis, can be used as key\n                axis.index = idx;\n\n                this._axesList.push(axis);\n\n                axesMap[axisType][idx] = axis;\n                axesCount[axisType]++;\n            };\n        }\n    };\n\n    /**\n     * Update cartesian properties from series\n     * @param  {module:echarts/model/Option} option\n     * @private\n     */\n    gridProto._updateScale = function (ecModel, gridModel) {\n        // Reset scale\n        zrUtil.each(this._axesList, function (axis) {\n            axis.scale.setExtent(Infinity, -Infinity);\n        });\n        ecModel.eachSeries(function (seriesModel) {\n            if (isCartesian2D(seriesModel)) {\n                var axesModels = findAxesModels(seriesModel, ecModel);\n                var xAxisModel = axesModels[0];\n                var yAxisModel = axesModels[1];\n\n                if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel)\n                    || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)\n                 ) {\n                    return;\n                }\n\n                var cartesian = this.getCartesian(\n                    xAxisModel.componentIndex, yAxisModel.componentIndex\n                );\n                var data = seriesModel.getData();\n                var xAxis = cartesian.getAxis('x');\n                var yAxis = cartesian.getAxis('y');\n\n                if (data.type === 'list') {\n                    unionExtent(data, xAxis, seriesModel);\n                    unionExtent(data, yAxis, seriesModel);\n                }\n            }\n        }, this);\n\n        function unionExtent(data, axis, seriesModel) {\n            each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n                axis.scale.unionExtentFromData(data, dim);\n            });\n        }\n    };\n\n    /**\n     * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n     * @return {Object} {baseAxes: [], otherAxes: []}\n     */\n    gridProto.getTooltipAxes = function (dim) {\n        var baseAxes = [];\n        var otherAxes = [];\n\n        each(this.getCartesians(), function (cartesian) {\n            var baseAxis = (dim != null && dim !== 'auto')\n                ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n            var otherAxis = cartesian.getOtherAxis(baseAxis);\n            zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n            zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n        });\n\n        return {baseAxes: baseAxes, otherAxes: otherAxes};\n    };\n\n    /**\n     * @inner\n     */\n    function updateAxisTransfrom(axis, coordBase) {\n        var axisExtent = axis.getExtent();\n        var axisExtentSum = axisExtent[0] + axisExtent[1];\n\n        // Fast transform\n        axis.toGlobalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord + coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n        axis.toLocalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord - coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n    }\n\n    var axesTypes = ['xAxis', 'yAxis'];\n    /**\n     * @inner\n     */\n    function findAxesModels(seriesModel, ecModel) {\n        return zrUtil.map(axesTypes, function (axisType) {\n            var axisModel = seriesModel.getReferringComponents(axisType)[0];\n\n            if (__DEV__) {\n                if (!axisModel) {\n                    throw new Error(axisType + ' \"' + zrUtil.retrieve(\n                        seriesModel.get(axisType + 'Index'),\n                        seriesModel.get(axisType + 'Id'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n            return axisModel;\n        });\n    }\n\n    /**\n     * @inner\n     */\n    function isCartesian2D(seriesModel) {\n        return seriesModel.get('coordinateSystem') === 'cartesian2d';\n    }\n\n    Grid.create = function (ecModel, api) {\n        var grids = [];\n        ecModel.eachComponent('grid', function (gridModel, idx) {\n            var grid = new Grid(gridModel, ecModel, api);\n            grid.name = 'grid_' + idx;\n            // dataSampling requires axis extent, so resize\n            // should be performed in create stage.\n            grid.resize(gridModel, api, true);\n\n            gridModel.coordinateSystem = grid;\n\n            grids.push(grid);\n        });\n\n        // Inject the coordinateSystems into seriesModel\n        ecModel.eachSeries(function (seriesModel) {\n            if (!isCartesian2D(seriesModel)) {\n                return;\n            }\n\n            var axesModels = findAxesModels(seriesModel, ecModel);\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            var gridModel = xAxisModel.getCoordSysModel();\n\n            if (__DEV__) {\n                if (!gridModel) {\n                    throw new Error(\n                        'Grid \"' + zrUtil.retrieve(\n                            xAxisModel.get('gridIndex'),\n                            xAxisModel.get('gridId'),\n                            0\n                        ) + '\" not found'\n                    );\n                }\n                if (xAxisModel.getCoordSysModel() !== yAxisModel.getCoordSysModel()) {\n                    throw new Error('xAxis and yAxis must use the same grid');\n                }\n            }\n\n            var grid = gridModel.coordinateSystem;\n\n            seriesModel.coordinateSystem = grid.getCartesian(\n                xAxisModel.componentIndex, yAxisModel.componentIndex\n            );\n        });\n\n        return grids;\n    };\n\n    // For deciding which dimensions to use when creating list data\n    Grid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\n\n    require('../../CoordinateSystem').register('cartesian2d', Grid);\n\n    module.exports = Grid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Grid.js\n// module id = 685\n// module chunks = 0 1 2","\n    module.exports = function (seriesType, ecModel) {\n        var legendModels = ecModel.findComponents({\n            mainType: 'legend'\n        });\n        if (!legendModels || !legendModels.length) {\n            return;\n        }\n        ecModel.eachSeriesByType(seriesType, function (series) {\n            var data = series.getData();\n            data.filterSelf(function (idx) {\n                var name = data.getName(idx);\n                // If in any legend component the status is not selected.\n                for (var i = 0; i < legendModels.length; i++) {\n                    if (!legendModels[i].isSelected(name)) {\n                        return false;\n                    }\n                }\n                return true;\n            }, this);\n        }, this);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/processor/dataFilter.js\n// module id = 686\n// module chunks = 0 1","// Pick color from palette for each data item.\n// Applicable for charts that require applying color palette\n// in data level (like pie, funnel, chord).\n\n\n    module.exports = function (seriesType, ecModel) {\n        // Pie and funnel may use diferrent scope\n        var paletteScope = {};\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var dataAll = seriesModel.getRawData();\n            var idxMap = {};\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                var data = seriesModel.getData();\n                data.each(function (idx) {\n                    var rawIdx = data.getRawIndex(idx);\n                    idxMap[rawIdx] = idx;\n                });\n                dataAll.each(function (rawIdx) {\n                    var filteredIdx = idxMap[rawIdx];\n\n                    // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n                    var singleDataColor = filteredIdx != null\n                        && data.getItemVisual(filteredIdx, 'color', true);\n\n                    if (!singleDataColor) {\n                        // FIXME Performance\n                        var itemModel = dataAll.getItemModel(rawIdx);\n                        var color = itemModel.get('itemStyle.normal.color')\n                            || seriesModel.getColorFromPalette(dataAll.getName(rawIdx), paletteScope);\n                        // Legend may use the visual info in data before processed\n                        dataAll.setItemVisual(rawIdx, 'color', color);\n\n                        // Data is not filtered\n                        if (filteredIdx != null) {\n                            data.setItemVisual(filteredIdx, 'color', color);\n                        }\n                    }\n                    else {\n                        // Set data all color for legend\n                        dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n                    }\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/visual/dataColor.js\n// module id = 687\n// module chunks = 0 1","\n\n    module.exports = function (seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n\n        // Encoding visual for all series include which is filtered for legend drawing\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n\n            var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n            var symbolSize = seriesModel.get('symbolSize');\n\n            data.setVisual({\n                legendSymbol: legendSymbol || symbolType,\n                symbol: symbolType,\n                symbolSize: symbolSize\n            });\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof symbolSize === 'function') {\n                    data.each(function (idx) {\n                        var rawValue = seriesModel.getRawValue(idx);\n                        // FIXME\n                        var params = seriesModel.getDataParams(idx);\n                        data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n                    });\n                }\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var itemSymbolType = itemModel.getShallow('symbol', true);\n                    var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n                    // If has item symbol\n                    if (itemSymbolType != null) {\n                        data.setItemVisual(idx, 'symbol', itemSymbolType);\n                    }\n                    if (itemSymbolSize != null) {\n                        // PENDING Transform symbolSize ?\n                        data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n                    }\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/visual/symbol.js\n// module id = 688\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var echartsAPIList = [\n        'getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed',\n        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption',\n        'getViewOfComponentModel', 'getViewOfSeriesModel'\n    ];\n    // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\n    function ExtensionAPI(chartInstance) {\n        zrUtil.each(echartsAPIList, function (name) {\n            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n        }, this);\n    }\n\n    module.exports = ExtensionAPI;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/ExtensionAPI.js\n// module id = 699\n// module chunks = 0 1 2","/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n\n    var graphic = require('../../util/graphic');\n    var Symbol = require('./Symbol');\n\n    /**\n     * @constructor\n     * @alias module:echarts/chart/helper/SymbolDraw\n     * @param {module:zrender/graphic/Group} [symbolCtor]\n     */\n    function SymbolDraw(symbolCtor) {\n        this.group = new graphic.Group();\n\n        this._symbolCtor = symbolCtor || Symbol;\n    }\n\n    var symbolDrawProto = SymbolDraw.prototype;\n\n    function symbolNeedsDraw(data, idx, isIgnore) {\n        var point = data.getItemLayout(idx);\n        // Is an object\n        // if (point && point.hasOwnProperty('point')) {\n        //     point = point.point;\n        // }\n        return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx))\n                    && data.getItemVisual(idx, 'symbol') !== 'none';\n    }\n    /**\n     * Update symbols draw by new data\n     * @param {module:echarts/data/List} data\n     * @param {Array.<boolean>} [isIgnore]\n     */\n    symbolDrawProto.updateData = function (data, isIgnore) {\n        var group = this.group;\n        var seriesModel = data.hostModel;\n        var oldData = this._data;\n\n        var SymbolCtor = this._symbolCtor;\n\n        var seriesScope = {\n            itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n            hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n            symbolRotate: seriesModel.get('symbolRotate'),\n            symbolOffset: seriesModel.get('symbolOffset'),\n            hoverAnimation: seriesModel.get('hoverAnimation'),\n\n            labelModel: seriesModel.getModel('label.normal'),\n            hoverLabelModel: seriesModel.getModel('label.emphasis'),\n            cursorStyle: seriesModel.get('cursor')\n        };\n\n        data.diff(oldData)\n            .add(function (newIdx) {\n                var point = data.getItemLayout(newIdx);\n                if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n                    symbolEl.attr('position', point);\n                    data.setItemGraphicEl(newIdx, symbolEl);\n                    group.add(symbolEl);\n                }\n            })\n            .update(function (newIdx, oldIdx) {\n                var symbolEl = oldData.getItemGraphicEl(oldIdx);\n                var point = data.getItemLayout(newIdx);\n                if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    group.remove(symbolEl);\n                    return;\n                }\n                if (!symbolEl) {\n                    symbolEl = new SymbolCtor(data, newIdx);\n                    symbolEl.attr('position', point);\n                }\n                else {\n                    symbolEl.updateData(data, newIdx, seriesScope);\n                    graphic.updateProps(symbolEl, {\n                        position: point\n                    }, seriesModel);\n                }\n\n                // Add back\n                group.add(symbolEl);\n\n                data.setItemGraphicEl(newIdx, symbolEl);\n            })\n            .remove(function (oldIdx) {\n                var el = oldData.getItemGraphicEl(oldIdx);\n                el && el.fadeOut(function () {\n                    group.remove(el);\n                });\n            })\n            .execute();\n\n        this._data = data;\n    };\n\n    symbolDrawProto.updateLayout = function () {\n        var data = this._data;\n        if (data) {\n            // Not use animation\n            data.eachItemGraphicEl(function (el, idx) {\n                var point = data.getItemLayout(idx);\n                el.attr('position', point);\n            });\n        }\n    };\n\n    symbolDrawProto.remove = function (enableAnimation) {\n        var group = this.group;\n        var data = this._data;\n        if (data) {\n            if (enableAnimation) {\n                data.eachItemGraphicEl(function (el) {\n                    el.fadeOut(function () {\n                        group.remove(el);\n                    });\n                });\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    };\n\n    module.exports = SymbolDraw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/SymbolDraw.js\n// module id = 700\n// module chunks = 0 1 2","/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var graphic = require('../../util/graphic');\n    var modelUtil = require('../../util/model');\n\n    var helper = {};\n\n    helper.findLabelValueDim = function (data) {\n        var valueDim;\n        var labelDims = modelUtil.otherDimToDataDim(data, 'label');\n\n        if (labelDims.length) {\n            valueDim = labelDims[0];\n        }\n        else {\n            // Get last value dim\n            var dimensions = data.dimensions.slice();\n            var dataType;\n            while (dimensions.length && (\n                valueDim = dimensions.pop(),\n                dataType = data.getDimensionInfo(valueDim).type,\n                dataType === 'ordinal' || dataType === 'time'\n            )) {} // jshint ignore:line\n        }\n\n        return valueDim;\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/labelHelper.js\n// module id = 701\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n    var PRIORITY = echarts.PRIORITY;\n\n    require('./line/LineSeries');\n    require('./line/LineView');\n\n    echarts.registerVisual(zrUtil.curry(\n        require('../visual/symbol'), 'line', 'circle', 'line'\n    ));\n    echarts.registerLayout(zrUtil.curry(\n        require('../layout/points'), 'line'\n    ));\n\n    // Down sample after filter\n    echarts.registerProcessor(PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(\n        require('../processor/dataSample'), 'line'\n    ));\n\n    // In case developer forget to include grid component\n    require('../component/gridSimple');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line.js\n// module id = 702\n// module chunks = 0 1 2","'use strict';\n\n\n    var createListFromArray = require('../helper/createListFromArray');\n    var SeriesModel = require('../../model/Series');\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.line',\n\n        dependencies: ['grid', 'polar'],\n\n        getInitialData: function (option, ecModel) {\n            if (__DEV__) {\n                var coordSys = option.coordinateSystem;\n                if (coordSys !== 'polar' && coordSys !== 'cartesian2d') {\n                    throw new Error('Line not support coordinateSystem besides cartesian and polar');\n                }\n            }\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // stack: null\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // polarIndex: 0,\n\n            // If clip the overflow value\n            clipOverflow: true,\n            // cursor: null,\n\n            label: {\n                normal: {\n                    position: 'top'\n                }\n            },\n            // itemStyle: {\n            //     normal: {},\n            //     emphasis: {}\n            // },\n            lineStyle: {\n                normal: {\n                    width: 2,\n                    type: 'solid'\n                }\n            },\n            // areaStyle: {},\n            // false, 'start', 'end', 'middle'\n            step: false,\n\n            // Disabled if step is true\n            smooth: false,\n            smoothMonotone: null,\n            // 拐点图形类型\n            symbol: 'emptyCircle',\n            // 拐点图形大小\n            symbolSize: 4,\n            // 拐点图形旋转控制\n            symbolRotate: null,\n\n            // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n            showSymbol: true,\n            // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n            showAllSymbol: false,\n\n            // 是否连接断点\n            connectNulls: false,\n\n            // 数据过滤，'average', 'max', 'min', 'sum'\n            sampling: 'none',\n\n            animationEasing: 'linear',\n\n            // Disable progressive\n            progressive: 0,\n            hoverLayerThreshold: Infinity\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/LineSeries.js\n// module id = 703\n// module chunks = 0 1 2","'use strict';\n// FIXME step not support polar\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var SymbolDraw = require('../helper/SymbolDraw');\n    var Symbol = require('../helper/Symbol');\n    var lineAnimationDiff = require('./lineAnimationDiff');\n    var graphic = require('../../util/graphic');\n    var modelUtil = require('../../util/model');\n    var polyHelper = require('./poly');\n    var ChartView = require('../../view/Chart');\n\n    function isPointsSame(points1, points2) {\n        if (points1.length !== points2.length) {\n            return;\n        }\n        for (var i = 0; i < points1.length; i++) {\n            var p1 = points1[i];\n            var p2 = points2[i];\n            if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n                return;\n            }\n        }\n        return true;\n    }\n\n    function getSmooth(smooth) {\n        return typeof (smooth) === 'number' ? smooth : (smooth ? 0.3 : 0);\n    }\n\n    function getAxisExtentWithGap(axis) {\n        var extent = axis.getGlobalExtent();\n        if (axis.onBand) {\n            // Remove extra 1px to avoid line miter in clipped edge\n            var halfBandWidth = axis.getBandWidth() / 2 - 1;\n            var dir = extent[1] > extent[0] ? 1 : -1;\n            extent[0] += dir * halfBandWidth;\n            extent[1] -= dir * halfBandWidth;\n        }\n        return extent;\n    }\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n    /**\n     * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n     * @param {module:echarts/data/List} data\n     * @param {Array.<Array.<number>>} points\n     * @private\n     */\n    function getStackedOnPoints(coordSys, data) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        return data.mapArray([valueDim], function (val, idx) {\n            var stackedOnSameSign;\n            var stackedOn = data.stackedOn;\n            // Find first stacked value with same sign\n            while (stackedOn &&\n                sign(stackedOn.get(valueDim, idx)) === sign(val)\n            ) {\n                stackedOnSameSign = stackedOn;\n                break;\n            }\n            var stackedData = [];\n            stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n            stackedData[1 - baseDataOffset] = stackedOnSameSign\n                ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n            return coordSys.dataToPoint(stackedData);\n        }, true);\n    }\n\n    function createGridClipShape(cartesian, hasAnimation, seriesModel) {\n        var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n        var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n        var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n\n        var x = Math.min(xExtent[0], xExtent[1]);\n        var y = Math.min(yExtent[0], yExtent[1]);\n        var width = Math.max(xExtent[0], xExtent[1]) - x;\n        var height = Math.max(yExtent[0], yExtent[1]) - y;\n        var lineWidth = seriesModel.get('lineStyle.normal.width') || 2;\n        // Expand clip shape to avoid clipping when line value exceeds axis\n        var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n        if (isHorizontal) {\n            y -= expandSize;\n            height += expandSize * 2;\n        }\n        else {\n            x -= expandSize;\n            width += expandSize * 2;\n        }\n\n        var clipPath = new graphic.Rect({\n            shape: {\n                x: x,\n                y: y,\n                width: width,\n                height: height\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n            graphic.initProps(clipPath, {\n                shape: {\n                    width: width,\n                    height: height\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createPolarClipShape(polar, hasAnimation, seriesModel) {\n        var angleAxis = polar.getAngleAxis();\n        var radiusAxis = polar.getRadiusAxis();\n\n        var radiusExtent = radiusAxis.getExtent();\n        var angleExtent = angleAxis.getExtent();\n\n        var RADIAN = Math.PI / 180;\n\n        var clipPath = new graphic.Sector({\n            shape: {\n                cx: polar.cx,\n                cy: polar.cy,\n                r0: radiusExtent[0],\n                r: radiusExtent[1],\n                startAngle: -angleExtent[0] * RADIAN,\n                endAngle: -angleExtent[1] * RADIAN,\n                clockwise: angleAxis.inverse\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: -angleExtent[1] * RADIAN\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createClipShape(coordSys, hasAnimation, seriesModel) {\n        return coordSys.type === 'polar'\n            ? createPolarClipShape(coordSys, hasAnimation, seriesModel)\n            : createGridClipShape(coordSys, hasAnimation, seriesModel);\n    }\n\n    function turnPointsIntoStep(points, coordSys, stepTurnAt) {\n        var baseAxis = coordSys.getBaseAxis();\n        var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n\n        var stepPoints = [];\n        for (var i = 0; i < points.length - 1; i++) {\n            var nextPt = points[i + 1];\n            var pt = points[i];\n            stepPoints.push(pt);\n\n            var stepPt = [];\n            switch (stepTurnAt) {\n                case 'end':\n                    stepPt[baseIndex] = nextPt[baseIndex];\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n                    break;\n                case 'middle':\n                    // default is start\n                    var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n                    var stepPt2 = [];\n                    stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n                    stepPoints.push(stepPt);\n                    stepPoints.push(stepPt2);\n                    break;\n                default:\n                    stepPt[baseIndex] = pt[baseIndex];\n                    stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n            }\n        }\n        // Last points\n        points[i] && stepPoints.push(points[i]);\n        return stepPoints;\n    }\n\n    function getVisualGradient(data, coordSys) {\n        var visualMetaList = data.getVisual('visualMeta');\n        if (!visualMetaList || !visualMetaList.length || !data.count()) {\n            // When data.count() is 0, gradient range can not be calculated.\n            return;\n        }\n\n        var visualMeta;\n        for (var i = visualMetaList.length - 1; i >= 0; i--) {\n            // Can only be x or y\n            if (visualMetaList[i].dimension < 2) {\n                visualMeta = visualMetaList[i];\n                break;\n            }\n        }\n        if (!visualMeta || coordSys.type !== 'cartesian2d') {\n            if (__DEV__) {\n                console.warn('Visual map on line style only support x or y dimension.');\n            }\n            return;\n        }\n\n        // If the area to be rendered is bigger than area defined by LinearGradient,\n        // the canvas spec prescribes that the color of the first stop and the last\n        // stop should be used. But if two stops are added at offset 0, in effect\n        // browsers use the color of the second stop to render area outside\n        // LinearGradient. So we can only infinitesimally extend area defined in\n        // LinearGradient to render `outerColors`.\n\n        var dimension = visualMeta.dimension;\n        var dimName = data.dimensions[dimension];\n        var axis = coordSys.getAxis(dimName);\n\n        // dataToCoor mapping may not be linear, but must be monotonic.\n        var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n            return {\n                coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n                color: stop.color\n            };\n        });\n        var stopLen = colorStops.length;\n        var outerColors = visualMeta.outerColors.slice();\n\n        if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n            colorStops.reverse();\n            outerColors.reverse();\n        }\n\n        var tinyExtent = 10; // Arbitrary value: 10px\n        var minCoord = colorStops[0].coord - tinyExtent;\n        var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n        var coordSpan = maxCoord - minCoord;\n\n        if (coordSpan < 1e-3) {\n            return 'transparent';\n        }\n\n        zrUtil.each(colorStops, function (stop) {\n            stop.offset = (stop.coord - minCoord) / coordSpan;\n        });\n        colorStops.push({\n            offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n            color: outerColors[1] || 'transparent'\n        });\n        colorStops.unshift({ // notice colorStops.length have been changed.\n            offset: stopLen ? colorStops[0].offset : 0.5,\n            color: outerColors[0] || 'transparent'\n        });\n\n        // zrUtil.each(colorStops, function (colorStop) {\n        //     // Make sure each offset has rounded px to avoid not sharp edge\n        //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n        // });\n\n        var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n        gradient[dimName] = minCoord;\n        gradient[dimName + '2'] = maxCoord;\n\n        return gradient;\n    }\n\n    module.exports = ChartView.extend({\n\n        type: 'line',\n\n        init: function () {\n            var lineGroup = new graphic.Group();\n\n            var symbolDraw = new SymbolDraw();\n            this.group.add(symbolDraw.group);\n\n            this._symbolDraw = symbolDraw;\n            this._lineGroup = lineGroup;\n        },\n\n        render: function (seriesModel, ecModel, api) {\n            var coordSys = seriesModel.coordinateSystem;\n            var group = this.group;\n            var data = seriesModel.getData();\n            var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n            var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n\n            var points = data.mapArray(data.getItemLayout, true);\n\n            var isCoordSysPolar = coordSys.type === 'polar';\n            var prevCoordSys = this._coordSys;\n\n            var symbolDraw = this._symbolDraw;\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n\n            var lineGroup = this._lineGroup;\n\n            var hasAnimation = seriesModel.get('animation');\n\n            var isAreaChart = !areaStyleModel.isEmpty();\n            var stackedOnPoints = getStackedOnPoints(coordSys, data);\n\n            var showSymbol = seriesModel.get('showSymbol');\n\n            var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol')\n                && this._getSymbolIgnoreFunc(data, coordSys);\n\n            // Remove temporary symbols\n            var oldData = this._data;\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            // Remove previous created symbols if showSymbol changed to false\n            if (!showSymbol) {\n                symbolDraw.remove();\n            }\n\n            group.add(lineGroup);\n\n            // FIXME step not support polar\n            var step = !isCoordSysPolar && seriesModel.get('step');\n            // Initialization animation or coordinate system changed\n            if (\n                !(polyline && prevCoordSys.type === coordSys.type && step === this._step)\n            ) {\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                if (step) {\n                    // TODO If stacked series is not step\n                    points = turnPointsIntoStep(points, coordSys, step);\n                    stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                }\n\n                polyline = this._newPolyline(points, coordSys, hasAnimation);\n                if (isAreaChart) {\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n            }\n            else {\n                if (isAreaChart && !polygon) {\n                    // If areaStyle is added\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                else if (polygon && !isAreaChart) {\n                    // If areaStyle is removed\n                    lineGroup.remove(polygon);\n                    polygon = this._polygon = null;\n                }\n\n                // Update clipPath\n                lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel));\n\n                // Always update, or it is wrong in the case turning on legend\n                // because points are not changed\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                // Stop symbol animation and sync with line points\n                // FIXME performance?\n                data.eachItemGraphicEl(function (el) {\n                    el.stopAnimation(true);\n                });\n\n                // In the case data zoom triggerred refreshing frequently\n                // Data may not change if line has a category axis. So it should animate nothing\n                if (!isPointsSame(this._stackedOnPoints, stackedOnPoints)\n                    || !isPointsSame(this._points, points)\n                ) {\n                    if (hasAnimation) {\n                        this._updateAnimation(\n                            data, stackedOnPoints, coordSys, api, step\n                        );\n                    }\n                    else {\n                        // Not do it in update with animation\n                        if (step) {\n                            // TODO If stacked series is not step\n                            points = turnPointsIntoStep(points, coordSys, step);\n                            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                        }\n\n                        polyline.setShape({\n                            points: points\n                        });\n                        polygon && polygon.setShape({\n                            points: points,\n                            stackedOnPoints: stackedOnPoints\n                        });\n                    }\n                }\n            }\n\n            var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n\n            polyline.useStyle(zrUtil.defaults(\n                // Use color in lineStyle first\n                lineStyleModel.getLineStyle(),\n                {\n                    fill: 'none',\n                    stroke: visualColor,\n                    lineJoin: 'bevel'\n                }\n            ));\n\n            var smooth = seriesModel.get('smooth');\n            smooth = getSmooth(seriesModel.get('smooth'));\n            polyline.setShape({\n                smooth: smooth,\n                smoothMonotone: seriesModel.get('smoothMonotone'),\n                connectNulls: seriesModel.get('connectNulls')\n            });\n\n            if (polygon) {\n                var stackedOn = data.stackedOn;\n                var stackedOnSmooth = 0;\n\n                polygon.useStyle(zrUtil.defaults(\n                    areaStyleModel.getAreaStyle(),\n                    {\n                        fill: visualColor,\n                        opacity: 0.7,\n                        lineJoin: 'bevel'\n                    }\n                ));\n\n                if (stackedOn) {\n                    var stackedOnSeries = stackedOn.hostModel;\n                    stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n                }\n\n                polygon.setShape({\n                    smooth: smooth,\n                    stackedOnSmooth: stackedOnSmooth,\n                    smoothMonotone: seriesModel.get('smoothMonotone'),\n                    connectNulls: seriesModel.get('connectNulls')\n                });\n            }\n\n            this._data = data;\n            // Save the coordinate system for transition animation when data changed\n            this._coordSys = coordSys;\n            this._stackedOnPoints = stackedOnPoints;\n            this._points = points;\n            this._step = step;\n        },\n\n        dispose: function () {},\n\n        highlight: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n            if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (!symbol) {\n                    // Create a temporary symbol if it is not exists\n                    var pt = data.getItemLayout(dataIndex);\n                    if (!pt) {\n                        // Null data\n                        return;\n                    }\n                    symbol = new Symbol(data, dataIndex);\n                    symbol.position = pt;\n                    symbol.setZ(\n                        seriesModel.get('zlevel'),\n                        seriesModel.get('z')\n                    );\n                    symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n                    symbol.__temp = true;\n                    data.setItemGraphicEl(dataIndex, symbol);\n\n                    // Stop scale animation\n                    symbol.stopSymbolAnimation(true);\n\n                    this.group.add(symbol);\n                }\n                symbol.highlight();\n            }\n            else {\n                // Highlight whole series\n                ChartView.prototype.highlight.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        downplay: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n            if (dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (symbol) {\n                    if (symbol.__temp) {\n                        data.setItemGraphicEl(dataIndex, null);\n                        this.group.remove(symbol);\n                    }\n                    else {\n                        symbol.downplay();\n                    }\n                }\n            }\n            else {\n                // FIXME\n                // can not downplay completely.\n                // Downplay whole series\n                ChartView.prototype.downplay.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolyline: function (points) {\n            var polyline = this._polyline;\n            // Remove previous created polyline\n            if (polyline) {\n                this._lineGroup.remove(polyline);\n            }\n\n            polyline = new polyHelper.Polyline({\n                shape: {\n                    points: points\n                },\n                silent: true,\n                z2: 10\n            });\n\n            this._lineGroup.add(polyline);\n\n            this._polyline = polyline;\n\n            return polyline;\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} stackedOnPoints\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolygon: function (points, stackedOnPoints) {\n            var polygon = this._polygon;\n            // Remove previous created polygon\n            if (polygon) {\n                this._lineGroup.remove(polygon);\n            }\n\n            polygon = new polyHelper.Polygon({\n                shape: {\n                    points: points,\n                    stackedOnPoints: stackedOnPoints\n                },\n                silent: true\n            });\n\n            this._lineGroup.add(polygon);\n\n            this._polygon = polygon;\n            return polygon;\n        },\n        /**\n         * @private\n         */\n        _getSymbolIgnoreFunc: function (data, coordSys) {\n            var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n            // `getLabelInterval` is provided by echarts/component/axis\n            if (categoryAxis && categoryAxis.isLabelIgnored) {\n                return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n            }\n        },\n\n        /**\n         * @private\n         */\n        // FIXME Two value axis\n        _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n            var seriesModel = data.hostModel;\n\n            var diff = lineAnimationDiff(\n                this._data, data,\n                this._stackedOnPoints, stackedOnPoints,\n                this._coordSys, coordSys\n            );\n\n            var current = diff.current;\n            var stackedOnCurrent = diff.stackedOnCurrent;\n            var next = diff.next;\n            var stackedOnNext = diff.stackedOnNext;\n            if (step) {\n                // TODO If stacked series is not step\n                current = turnPointsIntoStep(diff.current, coordSys, step);\n                stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n                next = turnPointsIntoStep(diff.next, coordSys, step);\n                stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n            }\n            // `diff.current` is subset of `current` (which should be ensured by\n            // turnPointsIntoStep), so points in `__points` can be updated when\n            // points in `current` are update during animation.\n            polyline.shape.__points = diff.current;\n            polyline.shape.points = current;\n\n            graphic.updateProps(polyline, {\n                shape: {\n                    points: next\n                }\n            }, seriesModel);\n\n            if (polygon) {\n                polygon.setShape({\n                    points: current,\n                    stackedOnPoints: stackedOnCurrent\n                });\n                graphic.updateProps(polygon, {\n                    shape: {\n                        points: next,\n                        stackedOnPoints: stackedOnNext\n                    }\n                }, seriesModel);\n            }\n\n            var updatedDataInfo = [];\n            var diffStatus = diff.status;\n\n            for (var i = 0; i < diffStatus.length; i++) {\n                var cmd = diffStatus[i].cmd;\n                if (cmd === '=') {\n                    var el = data.getItemGraphicEl(diffStatus[i].idx1);\n                    if (el) {\n                        updatedDataInfo.push({\n                            el: el,\n                            ptIdx: i    // Index of points\n                        });\n                    }\n                }\n            }\n\n            if (polyline.animators && polyline.animators.length) {\n                polyline.animators[0].during(function () {\n                    for (var i = 0; i < updatedDataInfo.length; i++) {\n                        var el = updatedDataInfo[i].el;\n                        el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n                    }\n                });\n            }\n        },\n\n        remove: function (ecModel) {\n            var group = this.group;\n            var oldData = this._data;\n            this._lineGroup.removeAll();\n            this._symbolDraw.remove(true);\n            // Remove temporary created elements when highlighting\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            this._polyline =\n            this._polygon =\n            this._coordSys =\n            this._points =\n            this._stackedOnPoints =\n            this._data = null;\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/LineView.js\n// module id = 704\n// module chunks = 0 1 2","\n\n    // var arrayDiff = require('zrender/lib/core/arrayDiff');\n    // 'zrender/core/arrayDiff' has been used before, but it did\n    // not do well in performance when roam with fixed dataZoom window.\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n\n    function getStackedOnPoint(coordSys, data, idx) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        var stackedOnSameSign;\n        var stackedOn = data.stackedOn;\n        var val = data.get(valueDim, idx);\n        // Find first stacked value with same sign\n        while (stackedOn &&\n            sign(stackedOn.get(valueDim, idx)) === sign(val)\n        ) {\n            stackedOnSameSign = stackedOn;\n            break;\n        }\n        var stackedData = [];\n        stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n        stackedData[1 - baseDataOffset] = stackedOnSameSign\n            ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n        return coordSys.dataToPoint(stackedData);\n    }\n\n    // function convertToIntId(newIdList, oldIdList) {\n    //     // Generate int id instead of string id.\n    //     // Compare string maybe slow in score function of arrDiff\n\n    //     // Assume id in idList are all unique\n    //     var idIndicesMap = {};\n    //     var idx = 0;\n    //     for (var i = 0; i < newIdList.length; i++) {\n    //         idIndicesMap[newIdList[i]] = idx;\n    //         newIdList[i] = idx++;\n    //     }\n    //     for (var i = 0; i < oldIdList.length; i++) {\n    //         var oldId = oldIdList[i];\n    //         // Same with newIdList\n    //         if (idIndicesMap[oldId]) {\n    //             oldIdList[i] = idIndicesMap[oldId];\n    //         }\n    //         else {\n    //             oldIdList[i] = idx++;\n    //         }\n    //     }\n    // }\n\n    function diffData(oldData, newData) {\n        var diffResult = [];\n\n        newData.diff(oldData)\n            .add(function (idx) {\n                diffResult.push({cmd: '+', idx: idx});\n            })\n            .update(function (newIdx, oldIdx) {\n                diffResult.push({cmd: '=', idx: oldIdx, idx1: newIdx});\n            })\n            .remove(function (idx) {\n                diffResult.push({cmd: '-', idx: idx});\n            })\n            .execute();\n\n        return diffResult;\n    }\n\n    module.exports = function (\n        oldData, newData,\n        oldStackedOnPoints, newStackedOnPoints,\n        oldCoordSys, newCoordSys\n    ) {\n        var diff = diffData(oldData, newData);\n\n        // var newIdList = newData.mapArray(newData.getId);\n        // var oldIdList = oldData.mapArray(oldData.getId);\n\n        // convertToIntId(newIdList, oldIdList);\n\n        // // FIXME One data ?\n        // diff = arrayDiff(oldIdList, newIdList);\n\n        var currPoints = [];\n        var nextPoints = [];\n        // Points for stacking base line\n        var currStackedPoints = [];\n        var nextStackedPoints = [];\n\n        var status = [];\n        var sortedIndices = [];\n        var rawIndices = [];\n        var dims = newCoordSys.dimensions;\n        for (var i = 0; i < diff.length; i++) {\n            var diffItem = diff[i];\n            var pointAdded = true;\n\n            // FIXME, animation is not so perfect when dataZoom window moves fast\n            // Which is in case remvoing or add more than one data in the tail or head\n            switch (diffItem.cmd) {\n                case '=':\n                    var currentPt = oldData.getItemLayout(diffItem.idx);\n                    var nextPt = newData.getItemLayout(diffItem.idx1);\n                    // If previous data is NaN, use next point directly\n                    if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n                        currentPt = nextPt.slice();\n                    }\n                    currPoints.push(currentPt);\n                    nextPoints.push(nextPt);\n\n                    currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n                    nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n\n                    rawIndices.push(newData.getRawIndex(diffItem.idx1));\n                    break;\n                case '+':\n                    var idx = diffItem.idx;\n                    currPoints.push(\n                        oldCoordSys.dataToPoint([\n                            newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)\n                        ])\n                    );\n\n                    nextPoints.push(newData.getItemLayout(idx).slice());\n\n                    currStackedPoints.push(\n                        getStackedOnPoint(oldCoordSys, newData, idx)\n                    );\n                    nextStackedPoints.push(newStackedOnPoints[idx]);\n\n                    rawIndices.push(newData.getRawIndex(idx));\n                    break;\n                case '-':\n                    var idx = diffItem.idx;\n                    var rawIndex = oldData.getRawIndex(idx);\n                    // Data is replaced. In the case of dynamic data queue\n                    // FIXME FIXME FIXME\n                    if (rawIndex !== idx) {\n                        currPoints.push(oldData.getItemLayout(idx));\n                        nextPoints.push(newCoordSys.dataToPoint([\n                            oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)\n                        ]));\n\n                        currStackedPoints.push(oldStackedOnPoints[idx]);\n                        nextStackedPoints.push(\n                            getStackedOnPoint(\n                                newCoordSys, oldData, idx\n                            )\n                        );\n\n                        rawIndices.push(rawIndex);\n                    }\n                    else {\n                        pointAdded = false;\n                    }\n            }\n\n            // Original indices\n            if (pointAdded) {\n                status.push(diffItem);\n                sortedIndices.push(sortedIndices.length);\n            }\n        }\n\n        // Diff result may be crossed if all items are changed\n        // Sort by data index\n        sortedIndices.sort(function (a, b) {\n            return rawIndices[a] - rawIndices[b];\n        });\n\n        var sortedCurrPoints = [];\n        var sortedNextPoints = [];\n\n        var sortedCurrStackedPoints = [];\n        var sortedNextStackedPoints = [];\n\n        var sortedStatus = [];\n        for (var i = 0; i < sortedIndices.length; i++) {\n            var idx = sortedIndices[i];\n            sortedCurrPoints[i] = currPoints[idx];\n            sortedNextPoints[i] = nextPoints[idx];\n\n            sortedCurrStackedPoints[i] = currStackedPoints[idx];\n            sortedNextStackedPoints[i] = nextStackedPoints[idx];\n\n            sortedStatus[i] = status[idx];\n        }\n\n        return {\n            current: sortedCurrPoints,\n            next: sortedNextPoints,\n\n            stackedOnCurrent: sortedCurrStackedPoints,\n            stackedOnNext: sortedNextStackedPoints,\n\n            status: sortedStatus\n        };\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/lineAnimationDiff.js\n// module id = 705\n// module chunks = 0 1 2","// Poly path support NaN point\n\n\n    var Path = require('zrender/lib/graphic/Path');\n    var vec2 = require('zrender/lib/core/vector');\n    var fixClipWithShadow = require('zrender/lib/graphic/helper/fixClipWithShadow');\n\n    var vec2Min = vec2.min;\n    var vec2Max = vec2.max;\n\n    var scaleAndAdd = vec2.scaleAndAdd;\n    var v2Copy = vec2.copy;\n\n    // Temporary variable\n    var v = [];\n    var cp0 = [];\n    var cp1 = [];\n\n    function isPointNull(p) {\n        return isNaN(p[0]) || isNaN(p[1]);\n    }\n\n    function drawSegment(\n        ctx, points, start, segLen, allLen,\n        dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls\n    ) {\n        var prevIdx = 0;\n        var idx = start;\n        for (var k = 0; k < segLen; k++) {\n            var p = points[idx];\n            if (idx >= allLen || idx < 0) {\n                break;\n            }\n            if (isPointNull(p)) {\n                if (connectNulls) {\n                    idx += dir;\n                    continue;\n                }\n                break;\n            }\n\n            if (idx === start) {\n                ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n                v2Copy(cp0, p);\n            }\n            else {\n                if (smooth > 0) {\n                    var nextIdx = idx + dir;\n                    var nextP = points[nextIdx];\n                    if (connectNulls) {\n                        // Find next point not null\n                        while (nextP && isPointNull(points[nextIdx])) {\n                            nextIdx += dir;\n                            nextP = points[nextIdx];\n                        }\n                    }\n\n                    var ratioNextSeg = 0.5;\n                    var prevP = points[prevIdx];\n                    var nextP = points[nextIdx];\n                    // Last point\n                    if (!nextP || isPointNull(nextP)) {\n                        v2Copy(cp1, p);\n                    }\n                    else {\n                        // If next data is null in not connect case\n                        if (isPointNull(nextP) && !connectNulls) {\n                            nextP = p;\n                        }\n\n                        vec2.sub(v, nextP, prevP);\n\n                        var lenPrevSeg;\n                        var lenNextSeg;\n                        if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n                            var dim = smoothMonotone === 'x' ? 0 : 1;\n                            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n                            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n                        }\n                        else {\n                            lenPrevSeg = vec2.dist(p, prevP);\n                            lenNextSeg = vec2.dist(p, nextP);\n                        }\n\n                        // Use ratio of seg length\n                        ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n\n                        scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n                    }\n                    // Smooth constraint\n                    vec2Min(cp0, cp0, smoothMax);\n                    vec2Max(cp0, cp0, smoothMin);\n                    vec2Min(cp1, cp1, smoothMax);\n                    vec2Max(cp1, cp1, smoothMin);\n\n                    ctx.bezierCurveTo(\n                        cp0[0], cp0[1],\n                        cp1[0], cp1[1],\n                        p[0], p[1]\n                    );\n                    // cp0 of next segment\n                    scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n                }\n                else {\n                    ctx.lineTo(p[0], p[1]);\n                }\n            }\n\n            prevIdx = idx;\n            idx += dir;\n        }\n\n        return k;\n    }\n\n    function getBoundingBox(points, smoothConstraint) {\n        var ptMin = [Infinity, Infinity];\n        var ptMax = [-Infinity, -Infinity];\n        if (smoothConstraint) {\n            for (var i = 0; i < points.length; i++) {\n                var pt = points[i];\n                if (pt[0] < ptMin[0]) { ptMin[0] = pt[0]; }\n                if (pt[1] < ptMin[1]) { ptMin[1] = pt[1]; }\n                if (pt[0] > ptMax[0]) { ptMax[0] = pt[0]; }\n                if (pt[1] > ptMax[1]) { ptMax[1] = pt[1]; }\n            }\n        }\n        return {\n            min: smoothConstraint ? ptMin : ptMax,\n            max: smoothConstraint ? ptMax : ptMin\n        };\n    }\n\n    module.exports = {\n\n        Polyline: Path.extend({\n\n            type: 'ec-polyline',\n\n            shape: {\n                points: [],\n\n                smooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            style: {\n                fill: null,\n\n                stroke: '#000'\n            },\n\n            brush: fixClipWithShadow(Path.prototype.brush),\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n\n                var i = 0;\n                var len = points.length;\n\n                var result = getBoundingBox(points, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    i += drawSegment(\n                        ctx, points, i, len, len,\n                        1, result.min, result.max, shape.smooth,\n                        shape.smoothMonotone, shape.connectNulls\n                    ) + 1;\n                }\n            }\n        }),\n\n        Polygon: Path.extend({\n\n            type: 'ec-polygon',\n\n            shape: {\n                points: [],\n\n                // Offset between stacked base points and points\n                stackedOnPoints: [],\n\n                smooth: 0,\n\n                stackedOnSmooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            brush: fixClipWithShadow(Path.prototype.brush),\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n                var stackedOnPoints = shape.stackedOnPoints;\n\n                var i = 0;\n                var len = points.length;\n                var smoothMonotone = shape.smoothMonotone;\n                var bbox = getBoundingBox(points, shape.smoothConstraint);\n                var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    var k = drawSegment(\n                        ctx, points, i, len, len,\n                        1, bbox.min, bbox.max, shape.smooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    drawSegment(\n                        ctx, stackedOnPoints, i + k - 1, k, len,\n                        -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    i += k + 1;\n\n                    ctx.closePath();\n                }\n            }\n        })\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/poly.js\n// module id = 706\n// module chunks = 0 1 2","'use strict';\n// TODO boundaryGap\n\n\n    require('../coord/cartesian/AxisModel');\n\n    require('./axis/CartesianAxisView');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis.js\n// module id = 707\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var AxisBuilder = require('./AxisBuilder');\n    var AxisView = require('./AxisView');\n    var cartesianAxisHelper = require('./cartesianAxisHelper');\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\n    var getInterval = AxisBuilder.getInterval;\n\n    var axisBuilderAttrs = [\n        'axisLine', 'axisLabel', 'axisTick', 'axisName'\n    ];\n    var selfBuilderAttrs = [\n        'splitArea', 'splitLine'\n    ];\n\n    // function getAlignWithLabel(model, axisModel) {\n    //     var alignWithLabel = model.get('alignWithLabel');\n    //     if (alignWithLabel === 'auto') {\n    //         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n    //     }\n    //     return alignWithLabel;\n    // }\n\n    var CartesianAxisView = AxisView.extend({\n\n        type: 'cartesianAxis',\n\n        axisPointerClass: 'CartesianAxisPointer',\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n\n            this.group.removeAll();\n\n            var oldAxisGroup = this._axisGroup;\n            this._axisGroup = new graphic.Group();\n\n            this.group.add(this._axisGroup);\n\n            if (!axisModel.get('show')) {\n                return;\n            }\n\n            var gridModel = axisModel.getCoordSysModel();\n\n            var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n\n            var axisBuilder = new AxisBuilder(axisModel, layout);\n\n            zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n            this._axisGroup.add(axisBuilder.getGroup());\n\n            zrUtil.each(selfBuilderAttrs, function (name) {\n                if (axisModel.get(name + '.show')) {\n                    this['_' + name](axisModel, gridModel, layout.labelInterval);\n                }\n            }, this);\n\n            graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n\n            CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitLine: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.scale.isBlank()) {\n                return;\n            }\n\n            var splitLineModel = axisModel.getModel('splitLine');\n            var lineStyleModel = splitLineModel.getModel('lineStyle');\n            var lineColors = lineStyleModel.get('color');\n\n            var lineInterval = getInterval(splitLineModel, labelInterval);\n\n            lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n            var isHorizontal = axis.isHorizontal();\n\n            var lineCount = 0;\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitLineModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var p1 = [];\n            var p2 = [];\n            // Simple optimization\n            // Batching the lines if color are the same\n            var lineStyle = lineStyleModel.getLineStyle();\n            for (var i = 0; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, lineInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                if (isHorizontal) {\n                    p1[0] = tickCoord;\n                    p1[1] = gridRect.y;\n                    p2[0] = tickCoord;\n                    p2[1] = gridRect.y + gridRect.height;\n                }\n                else {\n                    p1[0] = gridRect.x;\n                    p1[1] = tickCoord;\n                    p2[0] = gridRect.x + gridRect.width;\n                    p2[1] = tickCoord;\n                }\n\n                var colorIndex = (lineCount++) % lineColors.length;\n                this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n                    anid: 'line_' + ticks[i],\n\n                    shape: {\n                        x1: p1[0],\n                        y1: p1[1],\n                        x2: p2[0],\n                        y2: p2[1]\n                    },\n                    style: zrUtil.defaults({\n                        stroke: lineColors[colorIndex]\n                    }, lineStyle),\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitArea: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.scale.isBlank()) {\n                return;\n            }\n\n            var splitAreaModel = axisModel.getModel('splitArea');\n            var areaStyleModel = splitAreaModel.getModel('areaStyle');\n            var areaColors = areaStyleModel.get('color');\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitAreaModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var prevX = axis.toGlobalCoord(ticksCoords[0]);\n            var prevY = axis.toGlobalCoord(ticksCoords[0]);\n\n            var count = 0;\n\n            var areaInterval = getInterval(splitAreaModel, labelInterval);\n\n            var areaStyle = areaStyleModel.getAreaStyle();\n            areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n            for (var i = 1; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, areaInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                var x;\n                var y;\n                var width;\n                var height;\n                if (axis.isHorizontal()) {\n                    x = prevX;\n                    y = gridRect.y;\n                    width = tickCoord - x;\n                    height = gridRect.height;\n                }\n                else {\n                    x = gridRect.x;\n                    y = prevY;\n                    width = gridRect.width;\n                    height = tickCoord - y;\n                }\n\n                var colorIndex = (count++) % areaColors.length;\n                this._axisGroup.add(new graphic.Rect({\n                    anid: 'area_' + ticks[i],\n\n                    shape: {\n                        x: x,\n                        y: y,\n                        width: width,\n                        height: height\n                    },\n                    style: zrUtil.defaults({\n                        fill: areaColors[colorIndex]\n                    }, areaStyle),\n                    silent: true\n                }));\n\n                prevX = x + width;\n                prevY = y + height;\n            }\n        }\n    });\n\n    CartesianAxisView.extend({\n        type: 'xAxis'\n    });\n    CartesianAxisView.extend({\n        type: 'yAxis'\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/CartesianAxisView.js\n// module id = 708\n// module chunks = 0 1 2","\n\n    var echarts = require('../echarts');\n    var axisPointerModelHelper = require('./axisPointer/modelHelper');\n    var axisTrigger = require('./axisPointer/axisTrigger');\n    var zrUtil = require('zrender/lib/core/util');\n\n    require('./axisPointer/AxisPointerModel');\n    require('./axisPointer/AxisPointerView');\n\n    // CartesianAxisPointer is not supposed to be required here. But consider\n    // echarts.simple.js and online build tooltip, which only require gridSimple,\n    // CartesianAxisPointer should be able to required somewhere.\n    require('./axisPointer/CartesianAxisPointer');\n\n    echarts.registerPreprocessor(function (option) {\n        // Always has a global axisPointerModel for default setting.\n        if (option) {\n            (!option.axisPointer || option.axisPointer.length === 0)\n                && (option.axisPointer = {});\n\n            var link = option.axisPointer.link;\n            // Normalize to array to avoid object mergin. But if link\n            // is not set, remain null/undefined, otherwise it will\n            // override existent link setting.\n            if (link && !zrUtil.isArray(link)) {\n                option.axisPointer.link = [link];\n            }\n        }\n    });\n\n    // This process should proformed after coordinate systems created\n    // and series data processed. So put it on statistic processing stage.\n    echarts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n        // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n        // allAxesInfo should be updated when setOption performed.\n        ecModel.getComponent('axisPointer').coordSysAxesInfo\n            = axisPointerModelHelper.collect(ecModel, api);\n    });\n\n    // Broadcast to all views.\n    echarts.registerAction({\n        type: 'updateAxisPointer',\n        event: 'updateAxisPointer',\n        update: ':updateAxisPointer'\n    }, axisTrigger);\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer.js\n// module id = 709\n// module chunks = 0 1 2","\n\n    var echarts = require('../../echarts');\n\n    var AxisPointerModel = echarts.extendComponentModel({\n\n        type: 'axisPointer',\n\n        coordSysAxesInfo: null,\n\n        defaultOption: {\n            // 'auto' means that show when triggered by tooltip or handle.\n            show: 'auto',\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: null, // set default in AxisPonterView.js\n\n            zlevel: 0,\n            z: 50,\n\n            type: 'line',\n            // axispointer triggered by tootip determine snap automatically,\n            // see `modelHelper`.\n            snap: false,\n            triggerTooltip: true,\n\n            value: null,\n            status: null, // Init value depends on whether handle is used.\n\n            // [group0, group1, ...]\n            // Each group can be: {\n            //      mapper: function () {},\n            //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n            //      xAxisId: ...,\n            //      yAxisName: ...,\n            //      angleAxisIndex: ...\n            // }\n            // mapper: can be ignored.\n            //      input: {axisInfo, value}\n            //      output: {axisInfo, value}\n            link: [],\n\n            // Do not set 'auto' here, otherwise global animation: false\n            // will not effect at this axispointer.\n            animation: null,\n            animationDurationUpdate: 200,\n\n            lineStyle: {\n                color: '#aaa',\n                width: 1,\n                type: 'solid'\n            },\n\n            shadowStyle: {\n                color: 'rgba(150,150,150,0.3)'\n            },\n\n            label: {\n                show: true,\n                formatter: null, // string | Function\n                precision: 'auto', // Or a number like 0, 1, 2 ...\n                margin: 3,\n                color: '#fff',\n                padding: [5, 7, 5, 7],\n                backgroundColor: 'auto', // default: axis line color\n                borderColor: null,\n                borderWidth: 0,\n                shadowBlur: 3,\n                shadowColor: '#aaa'\n                // Considering applicability, common style should\n                // better not have shadowOffset.\n                // shadowOffsetX: 0,\n                // shadowOffsetY: 2\n            },\n\n            handle: {\n                show: false,\n                icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z', // jshint ignore:line\n                size: 45,\n                // handle margin is from symbol center to axis, which is stable when circular move.\n                margin: 50,\n                // color: '#1b8bbd'\n                // color: '#2f4554'\n                color: '#333',\n                shadowBlur: 3,\n                shadowColor: '#aaa',\n                shadowOffsetX: 0,\n                shadowOffsetY: 2,\n\n                // For mobile performance\n                throttle: 40\n            }\n        }\n\n    });\n\n    module.exports = AxisPointerModel;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/AxisPointerModel.js\n// module id = 710\n// module chunks = 0 1 2","\n\n    var globalListener = require('./globalListener');\n\n    var AxisPonterView = require('../../echarts').extendComponentView({\n\n        type: 'axisPointer',\n\n        render: function (globalAxisPointerModel, ecModel, api) {\n            var globalTooltipModel = ecModel.getComponent('tooltip');\n            var triggerOn = globalAxisPointerModel.get('triggerOn')\n                || (globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click');\n\n            // Register global listener in AxisPointerView to enable\n            // AxisPointerView to be independent to Tooltip.\n            globalListener.register(\n                'axisPointer',\n                api,\n                function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none'\n                        && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)\n                    ) {\n                        dispatchAction({\n                            type: 'updateAxisPointer',\n                            currTrigger: currTrigger,\n                            x: e && e.offsetX,\n                            y: e && e.offsetY\n                        });\n                    }\n                }\n            );\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            globalListener.disopse(api.getZr(), 'axisPointer');\n            AxisPonterView.superApply(this._model, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            globalListener.unregister('axisPointer', api);\n            AxisPonterView.superApply(this._model, 'dispose', arguments);\n        }\n\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/AxisPointerView.js\n// module id = 711\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazzUtil = require('../../util/clazz');\n    var graphic = require('../../util/graphic');\n    var get = require('../../util/model').makeGetter();\n    var axisPointerModelHelper = require('./modelHelper');\n    var eventTool = require('zrender/lib/core/event');\n    var throttle = require('../../util/throttle');\n\n    var clone = zrUtil.clone;\n    var bind = zrUtil.bind;\n\n    /**\n     * Base axis pointer class in 2D.\n     * Implemenents {module:echarts/component/axis/IAxisPointer}.\n     */\n    function BaseAxisPointer () {\n    }\n\n    BaseAxisPointer.prototype = {\n\n        /**\n         * @private\n         */\n        _group: null,\n\n        /**\n         * @private\n         */\n        _lastGraphicKey: null,\n\n        /**\n         * @private\n         */\n        _handle: null,\n\n        /**\n         * @private\n         */\n        _dragging: false,\n\n        /**\n         * @private\n         */\n        _lastValue: null,\n\n        /**\n         * @private\n         */\n        _lastStatus: null,\n\n        /**\n         * @private\n         */\n        _payloadInfo: null,\n\n        /**\n         * In px, arbitrary value. Do not set too small,\n         * no animation is ok for most cases.\n         * @protected\n         */\n        animationThreshold: 15,\n\n        /**\n         * @implement\n         */\n        render: function (axisModel, axisPointerModel, api, forceRender) {\n            var value = axisPointerModel.get('value');\n            var status = axisPointerModel.get('status');\n\n            // Bind them to `this`, not in closure, otherwise they will not\n            // be replaced when user calling setOption in not merge mode.\n            this._axisModel = axisModel;\n            this._axisPointerModel = axisPointerModel;\n            this._api = api;\n\n            // Optimize: `render` will be called repeatly during mouse move.\n            // So it is power consuming if performing `render` each time,\n            // especially on mobile device.\n            if (!forceRender\n                && this._lastValue === value\n                && this._lastStatus === status\n            ) {\n                return;\n            }\n            this._lastValue = value;\n            this._lastStatus = status;\n\n            var group = this._group;\n            var handle = this._handle;\n\n            if (!status || status === 'hide') {\n                // Do not clear here, for animation better.\n                group && group.hide();\n                handle && handle.hide();\n                return;\n            }\n            group && group.show();\n            handle && handle.show();\n\n            // Otherwise status is 'show'\n            var elOption = {};\n            this.makeElOption(elOption, value, axisModel, axisPointerModel, api);\n\n            // Enable change axis pointer type.\n            var graphicKey = elOption.graphicKey;\n            if (graphicKey !== this._lastGraphicKey) {\n                this.clear(api);\n            }\n            this._lastGraphicKey = graphicKey;\n\n            var moveAnimation = this._moveAnimation =\n                this.determineAnimation(axisModel, axisPointerModel);\n\n            if (!group) {\n                group = this._group = new graphic.Group();\n                this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n                this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n                api.getZr().add(group);\n            }\n            else {\n                var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n                this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n                this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n            }\n\n            updateMandatoryProps(group, axisPointerModel, true);\n\n            this._renderHandle(value);\n        },\n\n        /**\n         * @implement\n         */\n        remove: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @implement\n         */\n        dispose: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @protected\n         */\n        determineAnimation: function (axisModel, axisPointerModel) {\n            var animation = axisPointerModel.get('animation');\n            var axis = axisModel.axis;\n            var isCategoryAxis = axis.type === 'category';\n            var useSnap = axisPointerModel.get('snap');\n\n            // Value axis without snap always do not snap.\n            if (!useSnap && !isCategoryAxis) {\n                return false;\n            }\n\n            if (animation === 'auto' || animation == null) {\n                var animationThreshold = this.animationThreshold;\n                if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n                    return true;\n                }\n\n                // It is important to auto animation when snap used. Consider if there is\n                // a dataZoom, animation will be disabled when too many points exist, while\n                // it will be enabled for better visual effect when little points exist.\n                if (useSnap) {\n                    var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n                    var axisExtent = axis.getExtent();\n                    // Approximate band width\n                    return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n                }\n\n                return false;\n            }\n\n            return animation === true;\n        },\n\n        /**\n         * add {pointer, label, graphicKey} to elOption\n         * @protected\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            // Shoule be implemenented by sub-class.\n        },\n\n        /**\n         * @protected\n         */\n        createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n            var pointerOption = elOption.pointer;\n            if (pointerOption) {\n                var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](\n                    clone(elOption.pointer)\n                );\n                group.add(pointerEl);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n            if (elOption.label) {\n                var labelEl = get(group).labelEl = new graphic.Rect(\n                    clone(elOption.label)\n                );\n\n                group.add(labelEl);\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updatePointerEl: function (group, elOption, updateProps) {\n            var pointerEl = get(group).pointerEl;\n            if (pointerEl) {\n                pointerEl.setStyle(elOption.pointer.style);\n                updateProps(pointerEl, {shape: elOption.pointer.shape});\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n            var labelEl = get(group).labelEl;\n            if (labelEl) {\n                labelEl.setStyle(elOption.label.style);\n                updateProps(labelEl, {\n                    // Consider text length change in vertical axis, animation should\n                    // be used on shape, otherwise the effect will be weird.\n                    shape: elOption.label.shape,\n                    position: elOption.label.position\n                });\n\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _renderHandle: function (value) {\n            if (this._dragging || !this.updateHandleTransform) {\n                return;\n            }\n\n            var axisPointerModel = this._axisPointerModel;\n            var zr = this._api.getZr();\n            var handle = this._handle;\n            var handleModel = axisPointerModel.getModel('handle');\n\n            var status = axisPointerModel.get('status');\n            if (!handleModel.get('show') || !status || status === 'hide') {\n                handle && zr.remove(handle);\n                this._handle = null;\n                return;\n            }\n\n            var isInit;\n            if (!this._handle) {\n                isInit = true;\n                handle = this._handle = graphic.createIcon(\n                    handleModel.get('icon'), \n                    {\n                        cursor: 'move',\n                        draggable: true,\n                        onmousemove: function (e) {\n                            // Fot mobile devicem, prevent screen slider on the button.\n                            eventTool.stop(e.event);\n                        },\n                        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n                        drift: bind(this._onHandleDragMove, this),\n                        ondragend: bind(this._onHandleDragEnd, this)\n                    }\n                );\n                zr.add(handle);\n            }\n\n            updateMandatoryProps(handle, axisPointerModel, false);\n\n            // update style\n            var includeStyles = [\n                'color', 'borderColor', 'borderWidth', 'opacity',\n                'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'\n            ];\n            handle.setStyle(handleModel.getItemStyle(null, includeStyles));\n\n            // update position\n            var handleSize = handleModel.get('size');\n            if (!zrUtil.isArray(handleSize)) {\n                handleSize = [handleSize, handleSize];\n            }\n            handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n\n            throttle.createOrUpdate(\n                this,\n                '_doDispatchAxisPointer',\n                handleModel.get('throttle') || 0,\n                'fixRate'\n            );\n\n            this._moveHandleToValue(value, isInit);\n        },\n\n        /**\n         * @private\n         */\n        _moveHandleToValue: function (value, isInit) {\n            updateProps(\n                this._axisPointerModel,\n                !isInit && this._moveAnimation,\n                this._handle,\n                getHandleTransProps(this.getHandleTransform(\n                    value, this._axisModel, this._axisPointerModel\n                ))\n            );\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragMove: function (dx, dy) {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            this._dragging = true;\n\n            // Persistent for throttle.\n            var trans = this.updateHandleTransform(\n                getHandleTransProps(handle),\n                [dx, dy],\n                this._axisModel,\n                this._axisPointerModel\n            );\n            this._payloadInfo = trans;\n\n            handle.stopAnimation();\n            handle.attr(getHandleTransProps(trans));\n            get(handle).lastProp = null;\n\n            this._doDispatchAxisPointer();\n        },\n\n        /**\n         * Throttled method.\n         * @private\n         */\n        _doDispatchAxisPointer: function () {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var payloadInfo = this._payloadInfo;\n            var axisModel = this._axisModel;\n            this._api.dispatchAction({\n                type: 'updateAxisPointer',\n                x: payloadInfo.cursorPoint[0],\n                y: payloadInfo.cursorPoint[1],\n                tooltipOption: payloadInfo.tooltipOption,\n                axesInfo: [{\n                    axisDim: axisModel.axis.dim,\n                    axisIndex: axisModel.componentIndex\n                }]\n            });\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragEnd: function (moveAnimation) {\n            this._dragging = false;\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var value = this._axisPointerModel.get('value');\n            // Consider snap or categroy axis, handle may be not consistent with\n            // axisPointer. So move handle to align the exact value position when\n            // drag ended.\n            this._moveHandleToValue(value);\n\n            // For the effect: tooltip will be shown when finger holding on handle\n            // button, and will be hidden after finger left handle button.\n            this._api.dispatchAction({\n                type: 'hideTip'\n            });\n        },\n\n        /**\n         * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {number} value\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0}\n         */\n        getHandleTransform: null,\n\n        /**\n         * * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {Object} transform {position, rotation}\n         * @param {Array.<number>} delta [dx, dy]\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n         */\n        updateHandleTransform: null,\n\n        /**\n         * @private\n         */\n        clear: function (api) {\n            this._lastValue = null;\n            this._lastStatus = null;\n\n            var zr = api.getZr();\n            var group = this._group;\n            var handle = this._handle;\n            if (zr && group) {\n                this._lastGraphicKey = null;\n                group && zr.remove(group);\n                handle && zr.remove(handle);\n                this._group = null;\n                this._handle = null;\n                this._payloadInfo = null;\n            }\n        },\n\n        /**\n         * @protected\n         */\n        doClear: function () {\n            // Implemented by sub-class if necessary.\n        },\n\n        /**\n         * @protected\n         * @param {Array.<number>} xy\n         * @param {Array.<number>} wh\n         * @param {number} [xDimIndex=0] or 1\n         */\n        buildLabel: function (xy, wh, xDimIndex) {\n            xDimIndex = xDimIndex || 0;\n            return {\n                x: xy[xDimIndex],\n                y: xy[1 - xDimIndex],\n                width: wh[xDimIndex],\n                height: wh[1 - xDimIndex]\n            };\n        }\n    };\n\n    BaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\n\n    function updateProps(animationModel, moveAnimation, el, props) {\n        // Animation optimize.\n        if (!propsEqual(get(el).lastProp, props)) {\n            get(el).lastProp = props;\n            moveAnimation\n                ? graphic.updateProps(el, props, animationModel)\n                : (el.stopAnimation(), el.attr(props));\n        }\n    }\n\n    function propsEqual(lastProps, newProps) {\n        if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n            var equals = true;\n            zrUtil.each(newProps, function (item, key) {\n                equals = equals && propsEqual(lastProps[key], item);\n            });\n            return !!equals;\n        }\n        else {\n            return lastProps === newProps;\n        }\n    }\n\n    function updateLabelShowHide(labelEl, axisPointerModel) {\n        labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n    }\n\n    function getHandleTransProps(trans) {\n        return {\n            position: trans.position.slice(),\n            rotation: trans.rotation || 0\n        };\n    }\n\n    function updateMandatoryProps(group, axisPointerModel, silent) {\n        var z = axisPointerModel.get('z');\n        var zlevel = axisPointerModel.get('zlevel');\n\n        group && group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n                el.silent = silent;\n            }\n        });\n    }\n\n    clazzUtil.enableClassExtend(BaseAxisPointer);\n\n    module.exports = BaseAxisPointer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/BaseAxisPointer.js\n// module id = 712\n// module chunks = 0 1 2","'use strict';\n\n\n    var graphic = require('../../util/graphic');\n    var BaseAxisPointer = require('./BaseAxisPointer');\n    var viewHelper = require('./viewHelper');\n    var cartesianAxisHelper = require('../axis/cartesianAxisHelper');\n    var AxisView = require('../axis/AxisView');\n\n    var CartesianAxisPointer = BaseAxisPointer.extend({\n\n        /**\n         * @override\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisPointerType = axisPointerModel.get('type');\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n            if (axisPointerType && axisPointerType !== 'none') {\n                var elStyle = viewHelper.buildElStyle(axisPointerModel);\n                var pointerOption = pointerShapeBuilder[axisPointerType](\n                    axis, pixelValue, otherExtent, elStyle\n                );\n                pointerOption.style = elStyle;\n                elOption.graphicKey = pointerOption.type;\n                elOption.pointer = pointerOption;\n            }\n\n            var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n            viewHelper.buildCartesianSingleLabelElOption(\n                value, elOption, layoutInfo, axisModel, axisPointerModel, api\n            );\n        },\n\n        /**\n         * @override\n         */\n        getHandleTransform: function (value, axisModel, axisPointerModel) {\n            var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n                labelInside: false\n            });\n            layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n            return {\n                position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n                rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n            };\n        },\n\n        /**\n         * @override\n         */\n        updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisExtent = axis.getGlobalExtent(true);\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var dimIndex = axis.dim === 'x' ? 0 : 1;\n\n            var currPosition = transform.position;\n            currPosition[dimIndex] += delta[dimIndex];\n            currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n            currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n\n            var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n            var cursorPoint = [cursorOtherValue, cursorOtherValue];\n            cursorPoint[dimIndex] = currPosition[dimIndex];\n\n            // Make tooltip do not overlap axisPointer and in the middle of the grid.\n            var tooltipOptions = [{verticalAlign: 'middle'}, {align: 'center'}];\n\n            return {\n                position: currPosition,\n                rotation: transform.rotation,\n                cursorPoint: cursorPoint,\n                tooltipOption: tooltipOptions[dimIndex]\n            };\n        }\n\n    });\n\n    function getCartesian(grid, axis) {\n        var opt = {};\n        opt[axis.dim + 'AxisIndex'] = axis.index;\n        return grid.getCartesian(opt);\n    }\n\n    var pointerShapeBuilder = {\n\n        line: function (axis, pixelValue, otherExtent, elStyle) {\n            var targetShape = viewHelper.makeLineShape(\n                [pixelValue, otherExtent[0]],\n                [pixelValue, otherExtent[1]],\n                getAxisDimIndex(axis)\n            );\n            graphic.subPixelOptimizeLine({\n                shape: targetShape,\n                style: elStyle\n            });\n            return {\n                type: 'Line',\n                shape: targetShape\n            };\n        },\n\n        shadow: function (axis, pixelValue, otherExtent, elStyle) {\n            var bandWidth = axis.getBandWidth();\n            var span = otherExtent[1] - otherExtent[0];\n            return {\n                type: 'Rect',\n                shape: viewHelper.makeRectShape(\n                    [pixelValue - bandWidth / 2, otherExtent[0]],\n                    [bandWidth, span],\n                    getAxisDimIndex(axis)\n                )\n            };\n        }\n    };\n\n    function getAxisDimIndex(axis) {\n        return axis.dim === 'x' ? 0 : 1;\n    }\n\n    AxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\n\n    module.exports = CartesianAxisPointer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/CartesianAxisPointer.js\n// module id = 713\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var modelHelper = require('./modelHelper');\n    var findPointFromSeries = require('./findPointFromSeries');\n\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n    var get = modelUtil.makeGetter();\n\n    /**\n     * Basic logic: check all axis, if they do not demand show/highlight,\n     * then hide/downplay them.\n     *\n     * @param {Object} coordSysAxesInfo\n     * @param {Object} payload\n     * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n     * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n     *              trigger axisPointer and tooltip.\n     * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n     *              trigger axisPointer and tooltip.\n     * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n     * @param {Object} [payload.dataIndex] finder, restrict target axes.\n     * @param {Object} [payload.axesInfo] finder, restrict target axes.\n     *        [{\n     *          axisDim: 'x'|'y'|'angle'|...,\n     *          axisIndex: ...,\n     *          value: ...\n     *        }, ...]\n     * @param {Function} [payload.dispatchAction]\n     * @param {Object} [payload.tooltipOption]\n     * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n     *        which can be specified in dispatchAction\n     * @param {module:echarts/model/Global} ecModel\n     * @param {module:echarts/ExtensionAPI} api\n     * @return {Object} content of event obj for echarts.connect.\n     */\n    function axisTrigger(payload, ecModel, api) {\n        var currTrigger = payload.currTrigger;\n        var point = [payload.x, payload.y];\n        var finder = payload;\n        var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n        var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n        // Pending\n        // See #6121. But we are not able to reproduce it yet.\n        if (!coordSysAxesInfo) {\n            return;\n        }\n\n        if (illegalPoint(point)) {\n            // Used in the default behavior of `connection`: use the sample seriesIndex\n            // and dataIndex. And also used in the tooltipView trigger.\n            point = findPointFromSeries({\n                seriesIndex: finder.seriesIndex,\n                // Do not use dataIndexInside from other ec instance.\n                // FIXME: auto detect it?\n                dataIndex: finder.dataIndex\n            }, ecModel).point;\n        }\n        var isIllegalPoint = illegalPoint(point);\n\n        // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n        // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n        // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n        // and dataIndex.\n        var inputAxesInfo = finder.axesInfo;\n\n        var axesInfo = coordSysAxesInfo.axesInfo;\n        var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n        var outputFinder = {};\n\n        var showValueMap = {};\n        var dataByCoordSys = {list: [], map: {}};\n        var updaters = {\n            showPointer: curry(showPointer, showValueMap),\n            showTooltip: curry(showTooltip, dataByCoordSys)\n        };\n\n        // Process for triggered axes.\n        each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n            // If a point given, it must be contained by the coordinate system.\n            var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n\n            each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n                var axis = axisInfo.axis;\n                var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo);\n                // If no inputAxesInfo, no axis is restricted.\n                if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n                    var val = inputAxisInfo && inputAxisInfo.value;\n                    if (val == null && !isIllegalPoint) {\n                        val = axis.pointToData(point);\n                    }\n                    val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n                }\n            });\n        });\n\n        // Process for linked axes.\n        var linkTriggers = {};\n        each(axesInfo, function (tarAxisInfo, tarKey) {\n            var linkGroup = tarAxisInfo.linkGroup;\n\n            // If axis has been triggered in the previous stage, it should not be triggered by link.\n            if (linkGroup && !showValueMap[tarKey]) {\n                each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n                    var srcValItem = showValueMap[srcKey];\n                    // If srcValItem exist, source axis is triggered, so link to target axis.\n                    if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n                        var val = srcValItem.value;\n                        linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(\n                            val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo)\n                        )));\n                        linkTriggers[tarAxisInfo.key] = val;\n                    }\n                });\n            }\n        });\n        each(linkTriggers, function (val, tarKey) {\n            processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n        });\n\n        updateModelActually(showValueMap, axesInfo, outputFinder);\n        dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n        dispatchHighDownActually(axesInfo, dispatchAction, api);\n\n        return outputFinder;\n    }\n\n    function processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n        var axis = axisInfo.axis;\n\n        if (axis.scale.isBlank() || !axis.containData(newValue)) {\n            return;\n        }\n\n        if (!axisInfo.involveSeries) {\n            updaters.showPointer(axisInfo, newValue);\n            return;\n        }\n\n        // Heavy calculation. So put it after axis.containData checking.\n        var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n        var payloadBatch = payloadInfo.payloadBatch;\n        var snapToValue = payloadInfo.snapToValue;\n\n        // Fill content of event obj for echarts.connect.\n        // By defualt use the first involved series data as a sample to connect.\n        if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n            zrUtil.extend(outputFinder, payloadBatch[0]);\n        }\n\n        // If no linkSource input, this process is for collecting link\n        // target, where snap should not be accepted.\n        if (!dontSnap && axisInfo.snap) {\n            if (axis.containData(snapToValue) && snapToValue != null) {\n                newValue = snapToValue;\n            }\n        }\n\n        updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder);\n        // Tooltip should always be snapToValue, otherwise there will be\n        // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n        updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n    }\n\n    function buildPayloadsBySeries(value, axisInfo) {\n        var axis = axisInfo.axis;\n        var dim = axis.dim;\n        var snapToValue = value;\n        var payloadBatch = [];\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n\n        each(axisInfo.seriesModels, function (series, idx) {\n            var dataDim = series.coordDimToDataDim(dim);\n            var seriesNestestValue;\n            var dataIndices;\n\n            if (series.getAxisTooltipData) {\n                var result = series.getAxisTooltipData(dataDim, value, axis);\n                dataIndices = result.dataIndices;\n                seriesNestestValue = result.nestestValue;\n            }\n            else {\n                dataIndices = series.getData().indicesOfNearest(\n                    dataDim[0],\n                    value,\n                    // Add a threshold to avoid find the wrong dataIndex\n                    // when data length is not same.\n                    false, axis.type === 'category' ? 0.5 : null\n                );\n                if (!dataIndices.length) {\n                    return;\n                }\n                seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n            }\n\n            if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n                return;\n            }\n\n            var diff = value - seriesNestestValue;\n            var dist = Math.abs(diff);\n            // Consider category case\n            if (dist <= minDist) {\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    snapToValue = seriesNestestValue;\n                    payloadBatch.length = 0;\n                }\n                each(dataIndices, function (dataIndex) {\n                    payloadBatch.push({\n                        seriesIndex: series.seriesIndex,\n                        dataIndexInside: dataIndex,\n                        dataIndex: series.getData().getRawIndex(dataIndex)\n                    });\n                });\n            }\n        });\n\n        return {\n            payloadBatch: payloadBatch,\n            snapToValue: snapToValue\n        };\n    }\n\n    function showPointer(showValueMap, axisInfo, value, payloadBatch) {\n        showValueMap[axisInfo.key] = {value: value, payloadBatch: payloadBatch};\n    }\n\n    function showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n        var payloadBatch = payloadInfo.payloadBatch;\n        var axis = axisInfo.axis;\n        var axisModel = axis.model;\n        var axisPointerModel = axisInfo.axisPointerModel;\n\n        // If no data, do not create anything in dataByCoordSys,\n        // whose length will be used to judge whether dispatch action.\n        if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n            return;\n        }\n\n        var coordSysModel = axisInfo.coordSys.model;\n        var coordSysKey = modelHelper.makeKey(coordSysModel);\n        var coordSysItem = dataByCoordSys.map[coordSysKey];\n        if (!coordSysItem) {\n            coordSysItem = dataByCoordSys.map[coordSysKey] = {\n                coordSysId: coordSysModel.id,\n                coordSysIndex: coordSysModel.componentIndex,\n                coordSysType: coordSysModel.type,\n                coordSysMainType: coordSysModel.mainType,\n                dataByAxis: []\n            };\n            dataByCoordSys.list.push(coordSysItem);\n        }\n\n        coordSysItem.dataByAxis.push({\n            axisDim: axis.dim,\n            axisIndex: axisModel.componentIndex,\n            axisType: axisModel.type,\n            axisId: axisModel.id,\n            value: value,\n            // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n            // depends that all models have been updated. So it should not be performed\n            // here. Considering axisPointerModel used here is volatile, which is hard\n            // to be retrieve in TooltipView, we prepare parameters here.\n            valueLabelOpt: {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            },\n            seriesDataIndices: payloadBatch.slice()\n        });\n    }\n\n    function updateModelActually(showValueMap, axesInfo, outputFinder) {\n        var outputAxesInfo = outputFinder.axesInfo = [];\n        // Basic logic: If no 'show' required, 'hide' this axisPointer.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            var valItem = showValueMap[key];\n\n            if (valItem) {\n                !axisInfo.useHandle && (option.status = 'show');\n                option.value = valItem.value;\n                // For label formatter param and highlight.\n                option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n            }\n            // When always show (e.g., handle used), remain\n            // original value and status.\n            else {\n                // If hide, value still need to be set, consider\n                // click legend to toggle axis blank.\n                !axisInfo.useHandle && (option.status = 'hide');\n            }\n\n            // If status is 'hide', should be no info in payload.\n            option.status === 'show' && outputAxesInfo.push({\n                axisDim: axisInfo.axis.dim,\n                axisIndex: axisInfo.axis.model.componentIndex,\n                value: option.value\n            });\n        });\n    }\n\n    function dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n        // Basic logic: If no showTip required, hideTip will be dispatched.\n        if (illegalPoint(point) || !dataByCoordSys.list.length) {\n            dispatchAction({type: 'hideTip'});\n            return;\n        }\n\n        // In most case only one axis (or event one series is used). It is\n        // convinient to fetch payload.seriesIndex and payload.dataIndex\n        // dirtectly. So put the first seriesIndex and dataIndex of the first\n        // axis on the payload.\n        var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n\n        dispatchAction({\n            type: 'showTip',\n            escapeConnect: true,\n            x: point[0],\n            y: point[1],\n            tooltipOption: payload.tooltipOption,\n            position: payload.position,\n            dataIndexInside: sampleItem.dataIndexInside,\n            dataIndex: sampleItem.dataIndex,\n            seriesIndex: sampleItem.seriesIndex,\n            dataByCoordSys: dataByCoordSys.list\n        });\n    }\n\n    function dispatchHighDownActually(axesInfo, dispatchAction, api) {\n        // FIXME\n        // highlight status modification shoule be a stage of main process?\n        // (Consider confilct (e.g., legend and axisPointer) and setOption)\n\n        var zr = api.getZr();\n        var highDownKey = 'axisPointerLastHighlights';\n        var lastHighlights = get(zr)[highDownKey] || {};\n        var newHighlights = get(zr)[highDownKey] = {};\n\n        // Update highlight/downplay status according to axisPointer model.\n        // Build hash map and remove duplicate incidentally.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n                var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n                newHighlights[key] = batchItem;\n            });\n        });\n\n        // Diff.\n        var toHighlight = [];\n        var toDownplay = [];\n        zrUtil.each(lastHighlights, function (batchItem, key) {\n            !newHighlights[key] && toDownplay.push(batchItem);\n        });\n        zrUtil.each(newHighlights, function (batchItem, key) {\n            !lastHighlights[key] && toHighlight.push(batchItem);\n        });\n\n        toDownplay.length && api.dispatchAction({\n            type: 'downplay', escapeConnect: true, batch: toDownplay\n        });\n        toHighlight.length && api.dispatchAction({\n            type: 'highlight', escapeConnect: true, batch: toHighlight\n        });\n    }\n\n    function findInputAxisInfo(inputAxesInfo, axisInfo) {\n        for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n            var inputAxisInfo = inputAxesInfo[i];\n            if (axisInfo.axis.dim === inputAxisInfo.axisDim\n                && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex\n            ) {\n                return inputAxisInfo;\n            }\n        }\n    }\n\n    function makeMapperParam(axisInfo) {\n        var axisModel = axisInfo.axis.model;\n        var item = {};\n        var dim = item.axisDim = axisInfo.axis.dim;\n        item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n        item.axisName = item[dim + 'AxisName'] = axisModel.name;\n        item.axisId = item[dim + 'AxisId'] = axisModel.id;\n        return item;\n    }\n\n    function illegalPoint(point) {\n        return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n    }\n\n    module.exports = axisTrigger;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/axisTrigger.js\n// module id = 714\n// module chunks = 0 1 2","\n    // List layout\n    var layout = require('../../util/layout');\n    var formatUtil = require('../../util/format');\n    var graphic = require('../../util/graphic');\n\n    module.exports = {\n        /**\n         * Layout list like component.\n         * It will box layout each items in group of component and then position the whole group in the viewport\n         * @param {module:zrender/group/Group} group\n         * @param {module:echarts/model/Component} componentModel\n         * @param {module:echarts/ExtensionAPI}\n         */\n        layout: function (group, componentModel, api) {\n            var boxLayoutParams = componentModel.getBoxLayoutParams();\n            var padding = componentModel.get('padding');\n            var viewportSize = {width: api.getWidth(), height: api.getHeight()};\n\n            var rect = layout.getLayoutRect(\n                boxLayoutParams,\n                viewportSize,\n                padding\n            );\n\n            layout.box(\n                componentModel.get('orient'),\n                group,\n                componentModel.get('itemGap'),\n                rect.width,\n                rect.height\n            );\n\n            layout.positionElement(\n                group,\n                boxLayoutParams,\n                viewportSize,\n                padding\n            );\n        },\n\n        makeBackground: function (rect, componentModel) {\n            var padding = formatUtil.normalizeCssArray(\n                componentModel.get('padding')\n            );\n            var style = componentModel.getItemStyle(['color', 'opacity']);\n            style.fill = componentModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: rect.x - padding[3],\n                    y: rect.y - padding[0],\n                    width: rect.width + padding[1] + padding[3],\n                    height: rect.height + padding[0] + padding[2],\n                    r: componentModel.get('borderRadius')\n                },\n                style: style,\n                silent: true,\n                z2: -1\n            });\n            // FIXME\n            // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n            // and background rect when setting like `left: 0`, `top: 0`.\n            // graphic.subPixelOptimizeRect(rect);\n\n            return rect;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/helper/listComponent.js\n// module id = 715\n// module chunks = 0 1 2","\n\n    // Do not contain scrollable legend, for sake of file size.\n\n    require('./legend/LegendModel');\n    require('./legend/legendAction');\n    require('./legend/LegendView');\n\n    var echarts = require('../echarts');\n    // Series Filter\n    echarts.registerProcessor(require('./legend/legendFilter'));\n\n    require('../model/Component').registerSubTypeDefaulter('legend', function () {\n        // Default 'plain' when no type specified.\n        return 'plain';\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend.js\n// module id = 716\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Model = require('../../model/Model');\n\n    var LegendModel = require('../../echarts').extendComponentModel({\n\n        type: 'legend.plain',\n\n        dependencies: ['series'],\n\n        layoutMode: {\n            type: 'box',\n            // legend.width/height are maxWidth/maxHeight actually,\n            // whereas realy width/height is calculated by its content.\n            // (Setting {left: 10, right: 10} does not make sense).\n            // So consider the case:\n            // `setOption({legend: {left: 10});`\n            // then `setOption({legend: {right: 10});`\n            // The previous `left` should be cleared by setting `ignoreSize`.\n            ignoreSize: true\n        },\n\n        init: function (option, parentModel, ecModel) {\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            option.selected = option.selected || {};\n        },\n\n        mergeOption: function (option) {\n            LegendModel.superCall(this, 'mergeOption', option);\n        },\n\n        optionUpdated: function () {\n            this._updateData(this.ecModel);\n\n            var legendData = this._data;\n\n            // If selectedMode is single, try to select one\n            if (legendData[0] && this.get('selectedMode') === 'single') {\n                var hasSelected = false;\n                // If has any selected in option.selected\n                for (var i = 0; i < legendData.length; i++) {\n                    var name = legendData[i].get('name');\n                    if (this.isSelected(name)) {\n                        // Force to unselect others\n                        this.select(name);\n                        hasSelected = true;\n                        break;\n                    }\n                }\n                // Try select the first if selectedMode is single\n                !hasSelected && this.select(legendData[0].get('name'));\n            }\n        },\n\n        _updateData: function (ecModel) {\n            var legendData = zrUtil.map(this.get('data') || [], function (dataItem) {\n                // Can be string or number\n                if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n                    dataItem = {\n                        name: dataItem\n                    };\n                }\n                return new Model(dataItem, this, this.ecModel);\n            }, this);\n            this._data = legendData;\n\n            var availableNames = zrUtil.map(ecModel.getSeries(), function (series) {\n                return series.name;\n            });\n            ecModel.eachSeries(function (seriesModel) {\n                if (seriesModel.legendDataProvider) {\n                    var data = seriesModel.legendDataProvider();\n                    availableNames = availableNames.concat(data.mapArray(data.getName));\n                }\n            });\n            /**\n             * @type {Array.<string>}\n             * @private\n             */\n            this._availableNames = availableNames;\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Model>}\n         */\n        getData: function () {\n            return this._data;\n        },\n\n        /**\n         * @param {string} name\n         */\n        select: function (name) {\n            var selected = this.option.selected;\n            var selectedMode = this.get('selectedMode');\n            if (selectedMode === 'single') {\n                var data = this._data;\n                zrUtil.each(data, function (dataItem) {\n                    selected[dataItem.get('name')] = false;\n                });\n            }\n            selected[name] = true;\n        },\n\n        /**\n         * @param {string} name\n         */\n        unSelect: function (name) {\n            if (this.get('selectedMode') !== 'single') {\n                this.option.selected[name] = false;\n            }\n        },\n\n        /**\n         * @param {string} name\n         */\n        toggleSelected: function (name) {\n            var selected = this.option.selected;\n            // Default is true\n            if (!selected.hasOwnProperty(name)) {\n                selected[name] = true;\n            }\n            this[selected[name] ? 'unSelect' : 'select'](name);\n        },\n\n        /**\n         * @param {string} name\n         */\n        isSelected: function (name) {\n            var selected = this.option.selected;\n            return !(selected.hasOwnProperty(name) && !selected[name])\n                && zrUtil.indexOf(this._availableNames, name) >= 0;\n        },\n\n        defaultOption: {\n            // 一级层叠\n            zlevel: 0,\n            // 二级层叠\n            z: 4,\n            show: true,\n\n            // 布局方式，默认为水平布局，可选为：\n            // 'horizontal' | 'vertical'\n            orient: 'horizontal',\n\n            left: 'center',\n            // right: 'center',\n\n            top: 0,\n            // bottom: null,\n\n            // 水平对齐\n            // 'auto' | 'left' | 'right'\n            // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n            align: 'auto',\n\n            backgroundColor: 'rgba(0,0,0,0)',\n            // 图例边框颜色\n            borderColor: '#ccc',\n            borderRadius: 0,\n            // 图例边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n            // 图例内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n            // 各个item之间的间隔，单位px，默认为10，\n            // 横向布局时为水平间隔，纵向布局时为纵向间隔\n            itemGap: 10,\n            // 图例图形宽度\n            itemWidth: 25,\n            // 图例图形高度\n            itemHeight: 14,\n\n            // 图例关闭时候的颜色\n            inactiveColor: '#ccc',\n\n            textStyle: {\n                // 图例文字颜色\n                color: '#333'\n            },\n            // formatter: '',\n            // 选择模式，默认开启图例开关\n            selectedMode: true,\n            // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n            // selected: null,\n            // 图例内容（详见legend.data，数组中每一项代表一个item\n            // data: [],\n\n            // Tooltip 相关配置\n            tooltip: {\n                show: false\n            }\n        }\n    });\n\n    module.exports = LegendModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend/LegendModel.js\n// module id = 717\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var symbolCreator = require('../../util/symbol');\n    var graphic = require('../../util/graphic');\n    var listComponentHelper = require('../helper/listComponent');\n    var layoutUtil = require('../../util/layout');\n\n    var curry = zrUtil.curry;\n    var each = zrUtil.each;\n    var Group = graphic.Group;\n\n    module.exports = require('../../echarts').extendComponentView({\n\n        type: 'legend.plain',\n\n        newlineDisabled: false,\n\n        /**\n         * @override\n         */\n        init: function () {\n\n            /**\n             * @private\n             * @type {module:zrender/container/Group}\n             */\n            this.group.add(this._contentGroup = new Group());\n\n            /**\n             * @private\n             * @type {module:zrender/Element}\n             */\n            this._backgroundEl;\n        },\n\n        /**\n         * @protected\n         */\n        getContentGroup: function () {\n            return this._contentGroup;\n        },\n\n        /**\n         * @override\n         */\n        render: function (legendModel, ecModel, api) {\n\n            this.resetInner();\n\n            if (!legendModel.get('show', true)) {\n                return;\n            }\n\n            var itemAlign = legendModel.get('align');\n            if (!itemAlign || itemAlign === 'auto') {\n                itemAlign = (\n                    legendModel.get('left') === 'right'\n                    && legendModel.get('orient') === 'vertical'\n                ) ? 'right' : 'left';\n            }\n\n            this.renderInner(itemAlign, legendModel, ecModel, api);\n\n            // Perform layout.\n            var positionInfo = legendModel.getBoxLayoutParams();\n            var viewportSize = {width: api.getWidth(), height: api.getHeight()};\n            var padding = legendModel.get('padding');\n\n            var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n            var mainRect = this.layoutInner(legendModel, itemAlign, maxSize);\n\n            // Place mainGroup, based on the calculated `mainRect`.\n            var layoutRect = layoutUtil.getLayoutRect(\n                zrUtil.defaults({width: mainRect.width, height: mainRect.height}, positionInfo),\n                viewportSize,\n                padding\n            );\n            this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]);\n\n            // Render background after group is layout.\n            this.group.add(\n                this._backgroundEl = listComponentHelper.makeBackground(mainRect, legendModel)\n            );\n        },\n\n        /**\n         * @protected\n         */\n        resetInner: function () {\n            this.getContentGroup().removeAll();\n            this._backgroundEl && this.group.remove(this._backgroundEl);\n        },\n\n        /**\n         * @protected\n         */\n        renderInner: function (itemAlign, legendModel, ecModel, api) {\n            var contentGroup = this.getContentGroup();\n            var legendDrawnMap = zrUtil.createHashMap();\n            var selectMode = legendModel.get('selectedMode');\n\n            each(legendModel.getData(), function (itemModel, dataIndex) {\n                var name = itemModel.get('name');\n\n                // Use empty string or \\n as a newline string\n                if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n                    contentGroup.add(new Group({\n                        newline: true\n                    }));\n                    return;\n                }\n\n                var seriesModel = ecModel.getSeriesByName(name)[0];\n\n                if (legendDrawnMap.get(name)) {\n                    // Have been drawed\n                    return;\n                }\n\n                // Series legend\n                if (seriesModel) {\n                    var data = seriesModel.getData();\n                    var color = data.getVisual('color');\n\n                    // If color is a callback function\n                    if (typeof color === 'function') {\n                        // Use the first data\n                        color = color(seriesModel.getDataParams(0));\n                    }\n\n                    // Using rect symbol defaultly\n                    var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n                    var symbolType = data.getVisual('symbol');\n\n                    var itemGroup = this._createItem(\n                        name, dataIndex, itemModel, legendModel,\n                        legendSymbolType, symbolType,\n                        itemAlign, color,\n                        selectMode\n                    );\n\n                    itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                        .on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api))\n                        .on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n\n                    legendDrawnMap.set(name, true);\n                }\n                else {\n                    // Data legend of pie, funnel\n                    ecModel.eachRawSeries(function (seriesModel) {\n                        // In case multiple series has same data name\n                        if (legendDrawnMap.get(name)) {\n                            return;\n                        }\n                        if (seriesModel.legendDataProvider) {\n                            var data = seriesModel.legendDataProvider();\n                            var idx = data.indexOfName(name);\n                            if (idx < 0) {\n                                return;\n                            }\n\n                            var color = data.getItemVisual(idx, 'color');\n\n                            var legendSymbolType = 'roundRect';\n\n                            var itemGroup = this._createItem(\n                                name, dataIndex, itemModel, legendModel,\n                                legendSymbolType, null,\n                                itemAlign, color,\n                                selectMode\n                            );\n\n                            itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                                // FIXME Should not specify the series name\n                                .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api))\n                                .on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n\n                            legendDrawnMap.set(name, true);\n                        }\n                    }, this);\n                }\n\n                if (__DEV__) {\n                    if (!legendDrawnMap.get(name)) {\n                        console.warn(name + ' series not exists. Legend data should be same with series name or data name.');\n                    }\n                }\n            }, this);\n        },\n\n        _createItem: function (\n            name, dataIndex, itemModel, legendModel,\n            legendSymbolType, symbolType,\n            itemAlign, color, selectMode\n        ) {\n            var itemWidth = legendModel.get('itemWidth');\n            var itemHeight = legendModel.get('itemHeight');\n            var inactiveColor = legendModel.get('inactiveColor');\n\n            var isSelected = legendModel.isSelected(name);\n            var itemGroup = new Group();\n\n            var textStyleModel = itemModel.getModel('textStyle');\n\n            var itemIcon = itemModel.get('icon');\n\n            var tooltipModel = itemModel.getModel('tooltip');\n            var legendGlobalTooltipModel = tooltipModel.parentModel;\n\n            // Use user given icon first\n            legendSymbolType = itemIcon || legendSymbolType;\n            itemGroup.add(symbolCreator.createSymbol(\n                legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor\n            ));\n\n            // Compose symbols\n            // PENDING\n            if (!itemIcon && symbolType\n                // At least show one symbol, can't be all none\n                && ((symbolType !== legendSymbolType) || symbolType == 'none')\n            ) {\n                var size = itemHeight * 0.8;\n                if (symbolType === 'none') {\n                    symbolType = 'circle';\n                }\n                // Put symbol in the center\n                itemGroup.add(symbolCreator.createSymbol(\n                    symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size,\n                    isSelected ? color : inactiveColor\n                ));\n            }\n\n            var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n            var textAlign = itemAlign;\n\n            var formatter = legendModel.get('formatter');\n            var content = name;\n            if (typeof formatter === 'string' && formatter) {\n                content = formatter.replace('{name}', name != null ? name : '');\n            }\n            else if (typeof formatter === 'function') {\n                content = formatter(name);\n            }\n\n            itemGroup.add(new graphic.Text({\n                style: graphic.setTextStyle({}, textStyleModel, {\n                    text: content,\n                    x: textX,\n                    y: itemHeight / 2,\n                    textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n                    textAlign: textAlign,\n                    textVerticalAlign: 'middle'\n                })\n            }));\n\n            // Add a invisible rect to increase the area of mouse hover\n            var hitRect = new graphic.Rect({\n                shape: itemGroup.getBoundingRect(),\n                invisible: true,\n                tooltip: tooltipModel.get('show') ? zrUtil.extend({\n                    content: name,\n                    // Defaul formatter\n                    formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n                        return name;\n                    },\n                    formatterParams: {\n                        componentType: 'legend',\n                        legendIndex: legendModel.componentIndex,\n                        name: name,\n                        $vars: ['name']\n                    }\n                }, tooltipModel.option) : null\n            });\n            itemGroup.add(hitRect);\n\n            itemGroup.eachChild(function (child) {\n                child.silent = true;\n            });\n\n            hitRect.silent = !selectMode;\n\n            this.getContentGroup().add(itemGroup);\n\n            graphic.setHoverStyle(itemGroup);\n\n            itemGroup.__legendDataIndex = dataIndex;\n\n            return itemGroup;\n        },\n\n        /**\n         * @protected\n         */\n        layoutInner: function (legendModel, itemAlign, maxSize) {\n            var contentGroup = this.getContentGroup();\n\n            // Place items in contentGroup.\n            layoutUtil.box(\n                legendModel.get('orient'),\n                contentGroup,\n                legendModel.get('itemGap'),\n                maxSize.width,\n                maxSize.height\n            );\n\n            var contentRect = contentGroup.getBoundingRect();\n            contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n\n            return this.group.getBoundingRect();\n        }\n\n    });\n\n    function dispatchSelectAction(name, api) {\n        api.dispatchAction({\n            type: 'legendToggleSelect',\n            name: name\n        });\n    }\n\n    function dispatchHighlightAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'highlight',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n    function dispatchDownplayAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'downplay',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend/LegendView.js\n// module id = 718\n// module chunks = 0 1 2","/**\n * @file Legend action\n */\n\n\n    var echarts = require('../../echarts');\n    var zrUtil = require('zrender/lib/core/util');\n\n    function legendSelectActionHandler(methodName, payload, ecModel) {\n        var selectedMap = {};\n        var isToggleSelect = methodName === 'toggleSelected';\n        var isSelected;\n        // Update all legend components\n        ecModel.eachComponent('legend', function (legendModel) {\n            if (isToggleSelect && isSelected != null) {\n                // Force other legend has same selected status\n                // Or the first is toggled to true and other are toggled to false\n                // In the case one legend has some item unSelected in option. And if other legend\n                // doesn't has the item, they will assume it is selected.\n                legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n            }\n            else {\n                legendModel[methodName](payload.name);\n                isSelected = legendModel.isSelected(payload.name);\n            }\n            var legendData = legendModel.getData();\n            zrUtil.each(legendData, function (model) {\n                var name = model.get('name');\n                // Wrap element\n                if (name === '\\n' || name === '') {\n                    return;\n                }\n                var isItemSelected = legendModel.isSelected(name);\n                if (selectedMap.hasOwnProperty(name)) {\n                    // Unselected if any legend is unselected\n                    selectedMap[name] = selectedMap[name] && isItemSelected;\n                }\n                else {\n                    selectedMap[name] = isItemSelected;\n                }\n            });\n        });\n        // Return the event explicitly\n        return {\n            name: payload.name,\n            selected: selectedMap\n        };\n    }\n    /**\n     * @event legendToggleSelect\n     * @type {Object}\n     * @property {string} type 'legendToggleSelect'\n     * @property {string} [from]\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendToggleSelect', 'legendselectchanged',\n        zrUtil.curry(legendSelectActionHandler, 'toggleSelected')\n    );\n\n    /**\n     * @event legendSelect\n     * @type {Object}\n     * @property {string} type 'legendSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendSelect', 'legendselected',\n        zrUtil.curry(legendSelectActionHandler, 'select')\n    );\n\n    /**\n     * @event legendUnSelect\n     * @type {Object}\n     * @property {string} type 'legendUnSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendUnSelect', 'legendunselected',\n        zrUtil.curry(legendSelectActionHandler, 'unSelect')\n    );\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend/legendAction.js\n// module id = 719\n// module chunks = 0 1 2","\n   module.exports = function (ecModel) {\n        var legendModels = ecModel.findComponents({\n            mainType: 'legend'\n        });\n        if (legendModels && legendModels.length) {\n            ecModel.filterSeries(function (series) {\n                // If in any legend component the status is not selected.\n                // Because in legend series is assumed selected when it is not in the legend data.\n                for (var i = 0; i < legendModels.length; i++) {\n                    if (!legendModels[i].isSelected(series.name)) {\n                        return false;\n                    }\n                }\n                return true;\n            });\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend/legendFilter.js\n// module id = 720\n// module chunks = 0 1 2","// FIXME Better way to pack data in graphic element\n\n\n    require('./axisPointer');\n\n    require('./tooltip/TooltipModel');\n\n    require('./tooltip/TooltipView');\n\n\n    // Show tip action\n    /**\n     * @action\n     * @property {string} type\n     * @property {number} seriesIndex\n     * @property {number} dataIndex\n     * @property {number} [x]\n     * @property {number} [y]\n     */\n    require('../echarts').registerAction(\n        {\n            type: 'showTip',\n            event: 'showTip',\n            update: 'tooltip:manuallyShowTip'\n        },\n        // noop\n        function () {}\n    );\n    // Hide tip action\n    require('../echarts').registerAction(\n        {\n            type: 'hideTip',\n            event: 'hideTip',\n            update: 'tooltip:manuallyHideTip'\n        },\n        // noop\n        function () {}\n    );\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip.js\n// module id = 721\n// module chunks = 0 1 2","/**\n * @module echarts/component/tooltip/TooltipContent\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var zrColor = require('zrender/lib/tool/color');\n    var eventUtil = require('zrender/lib/core/event');\n    var formatUtil = require('../../util/format');\n    var each = zrUtil.each;\n    var toCamelCase = formatUtil.toCamelCase;\n    var env = require('zrender/lib/core/env');\n\n    var vendors = ['', '-webkit-', '-moz-', '-o-'];\n\n    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n\n    /**\n     * @param {number} duration\n     * @return {string}\n     * @inner\n     */\n    function assembleTransition(duration) {\n        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\n                            + 'top ' + duration + 's ' + transitionCurve;\n        return zrUtil.map(vendors, function (vendorPrefix) {\n            return vendorPrefix + 'transition:' + transitionText;\n        }).join(';');\n    }\n\n    /**\n     * @param {Object} textStyle\n     * @return {string}\n     * @inner\n     */\n    function assembleFont(textStyleModel) {\n        var cssText = [];\n\n        var fontSize = textStyleModel.get('fontSize');\n        var color = textStyleModel.getTextColor();\n\n        color && cssText.push('color:' + color);\n\n        cssText.push('font:' + textStyleModel.getFont());\n\n        fontSize &&\n            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n\n        each(['decoration', 'align'], function (name) {\n            var val = textStyleModel.get(name);\n            val && cssText.push('text-' + name + ':' + val);\n        });\n\n        return cssText.join(';');\n    }\n\n    /**\n     * @param {Object} tooltipModel\n     * @return {string}\n     * @inner\n     */\n    function assembleCssText(tooltipModel) {\n\n        var cssText = [];\n\n        var transitionDuration = tooltipModel.get('transitionDuration');\n        var backgroundColor = tooltipModel.get('backgroundColor');\n        var textStyleModel = tooltipModel.getModel('textStyle');\n        var padding = tooltipModel.get('padding');\n\n        // Animation transition. Do not animate when transitionDuration is 0.\n        transitionDuration &&\n            cssText.push(assembleTransition(transitionDuration));\n\n        if (backgroundColor) {\n            if (env.canvasSupported) {\n                cssText.push('background-Color:' + backgroundColor);\n            }\n            else {\n                // for ie\n                cssText.push(\n                    'background-Color:#' + zrColor.toHex(backgroundColor)\n                );\n                cssText.push('filter:alpha(opacity=70)');\n            }\n        }\n\n        // Border style\n        each(['width', 'color', 'radius'], function (name) {\n            var borderName = 'border-' + name;\n            var camelCase = toCamelCase(borderName);\n            var val = tooltipModel.get(camelCase);\n            val != null &&\n                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n        });\n\n        // Text style\n        cssText.push(assembleFont(textStyleModel));\n\n        // Padding\n        if (padding != null) {\n            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n        }\n\n        return cssText.join(';') + ';';\n    }\n\n    /**\n     * @alias module:echarts/component/tooltip/TooltipContent\n     * @constructor\n     */\n    function TooltipContent(container, api) {\n        var el = document.createElement('div');\n        var zr = this._zr = api.getZr();\n\n        this.el = el;\n\n        this._x = api.getWidth() / 2;\n        this._y = api.getHeight() / 2;\n\n        container.appendChild(el);\n\n        this._container = container;\n\n        this._show = false;\n\n        /**\n         * @private\n         */\n        this._hideTimeout;\n\n        var self = this;\n        el.onmouseenter = function () {\n            // clear the timeout in hideLater and keep showing tooltip\n            if (self._enterable) {\n                clearTimeout(self._hideTimeout);\n                self._show = true;\n            }\n            self._inContent = true;\n        };\n        el.onmousemove = function (e) {\n            e = e || window.event;\n            if (!self._enterable) {\n                // Try trigger zrender event to avoid mouse\n                // in and out shape too frequently\n                var handler = zr.handler;\n                eventUtil.normalizeEvent(container, e, true);\n                handler.dispatch('mousemove', e);\n            }\n        };\n        el.onmouseleave = function () {\n            if (self._enterable) {\n                if (self._show) {\n                    self.hideLater(self._hideDelay);\n                }\n            }\n            self._inContent = false;\n        };\n    }\n\n    TooltipContent.prototype = {\n\n        constructor: TooltipContent,\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _enterable: true,\n\n        /**\n         * Update when tooltip is rendered\n         */\n        update: function () {\n            // FIXME\n            // Move this logic to ec main?\n            var container = this._container;\n            var stl = container.currentStyle\n                || document.defaultView.getComputedStyle(container);\n            var domStyle = container.style;\n            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n                domStyle.position = 'relative';\n            }\n            // Hide the tooltip\n            // PENDING\n            // this.hide();\n        },\n\n        show: function (tooltipModel) {\n            clearTimeout(this._hideTimeout);\n            var el = this.el;\n\n            el.style.cssText = gCssText + assembleCssText(tooltipModel)\n                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\n                + (tooltipModel.get('extraCssText') || '');\n\n            el.style.display = el.innerHTML ?  'block' : 'none';\n\n            this._show = true;\n        },\n\n        setContent: function (content) {\n            this.el.innerHTML = content == null ? '' : content;\n        },\n\n        setEnterable: function (enterable) {\n            this._enterable = enterable;\n        },\n\n        getSize: function () {\n            var el = this.el;\n            return [el.clientWidth, el.clientHeight];\n        },\n\n        moveTo: function (x, y) {\n            // xy should be based on canvas root. But tooltipContent is\n            // the sibling of canvas root. So padding of ec container\n            // should be considered here.\n            var zr = this._zr;\n            var viewportRootOffset;\n            if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n                x += viewportRootOffset.offsetLeft;\n                y += viewportRootOffset.offsetTop;\n            }\n\n            var style = this.el.style;\n            style.left = x + 'px';\n            style.top = y + 'px';\n\n            this._x = x;\n            this._y = y;\n        },\n\n        hide: function () {\n            this.el.style.display = 'none';\n            this._show = false;\n        },\n\n        hideLater: function (time) {\n            if (this._show && !(this._inContent && this._enterable)) {\n                if (time) {\n                    this._hideDelay = time;\n                    // Set show false to avoid invoke hideLater mutiple times\n                    this._show = false;\n                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n                }\n                else {\n                    this.hide();\n                }\n            }\n        },\n\n        isShow: function () {\n            return this._show;\n        }\n    };\n\n    module.exports = TooltipContent;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipContent.js\n// module id = 722\n// module chunks = 0 1 2","\n\n    require('../../echarts').extendComponentModel({\n\n        type: 'tooltip',\n\n        dependencies: ['axisPointer'],\n\n        defaultOption: {\n            zlevel: 0,\n\n            z: 8,\n\n            show: true,\n\n            // tooltip主体内容\n            showContent: true,\n\n            // 'trigger' only works on coordinate system.\n            // 'item' | 'axis' | 'none'\n            trigger: 'item',\n\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: 'mousemove|click',\n\n            alwaysShowContent: false,\n\n            displayMode: 'single', // 'single' | 'multipleByCoordSys'\n\n            // 位置 {Array} | {Function}\n            // position: null\n            // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n            // align: null,\n            // verticalAlign: null,\n\n            // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n            confine: false,\n\n            // 内容格式器：{string}（Template） ¦ {Function}\n            // formatter: null\n\n            showDelay: 0,\n\n            // 隐藏延迟，单位ms\n            hideDelay: 100,\n\n            // 动画变换时间，单位s\n            transitionDuration: 0.4,\n\n            enterable: false,\n\n            // 提示背景颜色，默认为透明度为0.7的黑色\n            backgroundColor: 'rgba(50,50,50,0.7)',\n\n            // 提示边框颜色\n            borderColor: '#333',\n\n            // 提示边框圆角，单位px，默认为4\n            borderRadius: 4,\n\n            // 提示边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 提示内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // Extra css text\n            extraCssText: '',\n\n            // 坐标轴指示器，坐标轴触发有效\n            axisPointer: {\n                // 默认为直线\n                // 可选为：'line' | 'shadow' | 'cross'\n                type: 'line',\n\n                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n                // 极坐标系会默认选择 angle 轴\n                axis: 'auto',\n\n                animation: 'auto',\n                animationDurationUpdate: 200,\n                animationEasingUpdate: 'exponentialOut',\n\n                crossStyle: {\n                    color: '#999',\n                    width: 1,\n                    type: 'dashed',\n\n                    // TODO formatter\n                    textStyle: {}\n                }\n\n                // lineStyle and shadowStyle should not be specified here,\n                // otherwise it will always override those styles on option.axisPointer.\n            },\n            textStyle: {\n                color: '#fff',\n                fontSize: 14\n            }\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipModel.js\n// module id = 723\n// module chunks = 0 1 2","\n\n    var TooltipContent = require('./TooltipContent');\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../../util/format');\n    var numberUtil = require('../../util/number');\n    var graphic = require('../../util/graphic');\n    var findPointFromSeries = require('../axisPointer/findPointFromSeries');\n    var layoutUtil = require('../../util/layout');\n    var env = require('zrender/lib/core/env');\n    var Model = require('../../model/Model');\n    var globalListener = require('../axisPointer/globalListener');\n    var axisHelper = require('../../coord/axisHelper');\n    var axisPointerViewHelper = require('../axisPointer/viewHelper');\n\n    var bind = zrUtil.bind;\n    var each = zrUtil.each;\n    var parsePercent = numberUtil.parsePercent;\n\n\n    var proxyRect = new graphic.Rect({\n        shape: {x: -1, y: -1, width: 2, height: 2}\n    });\n\n    require('../../echarts').extendComponentView({\n\n        type: 'tooltip',\n\n        init: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var tooltipContent = new TooltipContent(api.getDom(), api);\n            this._tooltipContent = tooltipContent;\n        },\n\n        render: function (tooltipModel, ecModel, api) {\n            if (env.node) {\n                return;\n            }\n\n            // Reset\n            this.group.removeAll();\n\n            /**\n             * @private\n             * @type {module:echarts/component/tooltip/TooltipModel}\n             */\n            this._tooltipModel = tooltipModel;\n\n            /**\n             * @private\n             * @type {module:echarts/model/Global}\n             */\n            this._ecModel = ecModel;\n\n            /**\n             * @private\n             * @type {module:echarts/ExtensionAPI}\n             */\n            this._api = api;\n\n            /**\n             * Should be cleaned when render.\n             * @private\n             * @type {Array.<Array.<Object>>}\n             */\n            this._lastDataByCoordSys = null;\n\n            /**\n             * @private\n             * @type {boolean}\n             */\n            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n\n            var tooltipContent = this._tooltipContent;\n            tooltipContent.update();\n            tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n            this._initGlobalListener();\n\n            this._keepShow();\n        },\n\n        _initGlobalListener: function () {\n            var tooltipModel = this._tooltipModel;\n            var triggerOn = tooltipModel.get('triggerOn');\n\n            globalListener.register(\n                'itemTooltip',\n                this._api,\n                bind(function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none') {\n                        if (triggerOn.indexOf(currTrigger) >= 0) {\n                            this._tryShow(e, dispatchAction);\n                        }\n                        else if (currTrigger === 'leave') {\n                            this._hide(dispatchAction);\n                        }\n                    }\n                }, this)\n            );\n        },\n\n        _keepShow: function () {\n            var tooltipModel = this._tooltipModel;\n            var ecModel = this._ecModel;\n            var api = this._api;\n\n            // Try to keep the tooltip show when refreshing\n            if (this._lastX != null\n                && this._lastY != null\n                // When user is willing to control tooltip totally using API,\n                // self.manuallyShowTip({x, y}) might cause tooltip hide,\n                // which is not expected.\n                && tooltipModel.get('triggerOn') !== 'none'\n            ) {\n                var self = this;\n                clearTimeout(this._refreshUpdateTimeout);\n                this._refreshUpdateTimeout = setTimeout(function () {\n                    // Show tip next tick after other charts are rendered\n                    // In case highlight action has wrong result\n                    // FIXME\n                    self.manuallyShowTip(tooltipModel, ecModel, api, {\n                        x: self._lastX,\n                        y: self._lastY\n                    });\n                });\n            }\n        },\n\n        /**\n         * Show tip manually by\n         * dispatchAction({\n         *     type: 'showTip',\n         *     x: 10,\n         *     y: 10\n         * });\n         * Or\n         * dispatchAction({\n         *      type: 'showTip',\n         *      seriesIndex: 0,\n         *      dataIndex or dataIndexInside or name\n         * });\n         *\n         *  TODO Batch\n         */\n        manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n            if (payload.from === this.uid || env.node) {\n                return;\n            }\n\n            var dispatchAction = makeDispatchAction(payload, api);\n\n            // Reset ticket\n            this._ticket = '';\n\n            // When triggered from axisPointer.\n            var dataByCoordSys = payload.dataByCoordSys;\n\n            if (payload.tooltip && payload.x != null && payload.y != null) {\n                var el = proxyRect;\n                el.position = [payload.x, payload.y];\n                el.update();\n                el.tooltip = payload.tooltip;\n                // Manually show tooltip while view is not using zrender elements.\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    target: el\n                }, dispatchAction);\n            }\n            else if (dataByCoordSys) {\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    event: {},\n                    dataByCoordSys: payload.dataByCoordSys,\n                    tooltipOption: payload.tooltipOption\n                }, dispatchAction);\n            }\n            else if (payload.seriesIndex != null) {\n\n                if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n                    return;\n                }\n\n                var pointInfo = findPointFromSeries(payload, ecModel);\n                var cx = pointInfo.point[0];\n                var cy = pointInfo.point[1];\n                if (cx != null && cy != null) {\n                    this._tryShow({\n                        offsetX: cx,\n                        offsetY: cy,\n                        position: payload.position,\n                        target: pointInfo.el,\n                        event: {}\n                    }, dispatchAction);\n                }\n            }\n            else if (payload.x != null && payload.y != null) {\n                // FIXME\n                // should wrap dispatchAction like `axisPointer/globalListener` ?\n                api.dispatchAction({\n                    type: 'updateAxisPointer',\n                    x: payload.x,\n                    y: payload.y\n                });\n\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    target: api.getZr().findHover(payload.x, payload.y).target,\n                    event: {}\n                }, dispatchAction);\n            }\n        },\n\n        manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n            var tooltipContent = this._tooltipContent;\n\n            if (!this._alwaysShowContent) {\n                tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n            }\n\n            this._lastX = this._lastY = null;\n\n            if (payload.from !== this.uid) {\n                this._hide(makeDispatchAction(payload, api));\n            }\n        },\n\n        // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n        // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n        // and tooltip.\n        _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n            var seriesIndex = payload.seriesIndex;\n            var dataIndex = payload.dataIndex;\n            var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n            if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n                return;\n            }\n\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n            if (!seriesModel) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                seriesModel,\n                (seriesModel.coordinateSystem || {}).model,\n                tooltipModel\n            ]);\n\n            if (tooltipModel.get('trigger') !== 'axis') {\n                return;\n            }\n\n            api.dispatchAction({\n                type: 'updateAxisPointer',\n                seriesIndex: seriesIndex,\n                dataIndex: dataIndex,\n                position: payload.position\n            });\n\n            return true;\n        },\n\n        _tryShow: function (e, dispatchAction) {\n            var el = e.target;\n            var tooltipModel = this._tooltipModel;\n\n            if (!tooltipModel) {\n                return;\n            }\n\n            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n            this._lastX = e.offsetX;\n            this._lastY = e.offsetY;\n\n            var dataByCoordSys = e.dataByCoordSys;\n            if (dataByCoordSys && dataByCoordSys.length) {\n                this._showAxisTooltip(dataByCoordSys, e);\n            }\n            // Always show item tooltip if mouse is on the element with dataIndex\n            else if (el && el.dataIndex != null) {\n                this._lastDataByCoordSys = null;\n                this._showSeriesItemTooltip(e, el, dispatchAction);\n            }\n            // Tooltip provided directly. Like legend.\n            else if (el && el.tooltip) {\n                this._lastDataByCoordSys = null;\n                this._showComponentItemTooltip(e, el, dispatchAction);\n            }\n            else {\n                this._lastDataByCoordSys = null;\n                this._hide(dispatchAction);\n            }\n        },\n\n        _showOrMove: function (tooltipModel, cb) {\n            // showDelay is used in this case: tooltip.enterable is set\n            // as true. User intent to move mouse into tooltip and click\n            // something. `showDelay` makes it easyer to enter the content\n            // but tooltip do not move immediately.\n            var delay = tooltipModel.get('showDelay');\n            cb = zrUtil.bind(cb, this);\n            clearTimeout(this._showTimout);\n            delay > 0\n                ? (this._showTimout = setTimeout(cb, delay))\n                : cb();\n        },\n\n        _showAxisTooltip: function (dataByCoordSys, e) {\n            var ecModel = this._ecModel;\n            var globalTooltipModel = this._tooltipModel;\n            var point = [e.offsetX, e.offsetY];\n            var singleDefaultHTML = [];\n            var singleParamsList = [];\n            var singleTooltipModel = buildTooltipModel([\n                e.tooltipOption,\n                globalTooltipModel\n            ]);\n\n            each(dataByCoordSys, function (itemCoordSys) {\n                // var coordParamList = [];\n                // var coordDefaultHTML = [];\n                // var coordTooltipModel = buildTooltipModel([\n                //     e.tooltipOption,\n                //     itemCoordSys.tooltipOption,\n                //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n                //     globalTooltipModel\n                // ]);\n                // var displayMode = coordTooltipModel.get('displayMode');\n                // var paramsList = displayMode === 'single' ? singleParamsList : [];\n\n                each(itemCoordSys.dataByAxis, function (item) {\n                    var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n                    var axisValue = item.value;\n                    var seriesDefaultHTML = [];\n\n                    if (!axisModel || axisValue == null) {\n                        return;\n                    }\n\n                    var valueLabel = axisPointerViewHelper.getValueLabel(\n                        axisValue, axisModel.axis, ecModel,\n                        item.seriesDataIndices,\n                        item.valueLabelOpt\n                    );\n\n                    zrUtil.each(item.seriesDataIndices, function (idxItem) {\n                        var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                        var dataIndex = idxItem.dataIndexInside;\n                        var dataParams = series && series.getDataParams(dataIndex);\n                        dataParams.axisDim = item.axisDim;\n                        dataParams.axisIndex = item.axisIndex;\n                        dataParams.axisType = item.axisType;\n                        dataParams.axisId = item.axisId;\n                        dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n                        dataParams.axisValueLabel = valueLabel;\n\n                        if (dataParams) {\n                            singleParamsList.push(dataParams);\n                            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n                        }\n                    });\n\n                    // Default tooltip content\n                    // FIXME\n                    // (1) shold be the first data which has name?\n                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n                    var firstLine = valueLabel;\n                    singleDefaultHTML.push(\n                        (firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '')\n                        + seriesDefaultHTML.join('<br />')\n                    );\n                });\n            }, this);\n\n            // In most case, the second axis is shown upper than the first one.\n            singleDefaultHTML.reverse();\n            singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n\n            var positionExpr = e.position;\n            this._showOrMove(singleTooltipModel, function () {\n                if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n                    this._updatePosition(\n                        singleTooltipModel,\n                        positionExpr,\n                        point[0], point[1],\n                        this._tooltipContent,\n                        singleParamsList\n                    );\n                }\n                else {\n                    this._showTooltipContent(\n                        singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(),\n                        point[0], point[1], positionExpr\n                    );\n                }\n            });\n\n            // Do not trigger events here, because this branch only be entered\n            // from dispatchAction.\n        },\n\n        _showSeriesItemTooltip: function (e, el, dispatchAction) {\n            var ecModel = this._ecModel;\n            // Use dataModel in element if possible\n            // Used when mouseover on a element like markPoint or edge\n            // In which case, the data is not main data in series.\n            var seriesIndex = el.seriesIndex;\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n            // For example, graph link.\n            var dataModel = el.dataModel || seriesModel;\n            var dataIndex = el.dataIndex;\n            var dataType = el.dataType;\n            var data = dataModel.getData();\n\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                dataModel,\n                seriesModel && (seriesModel.coordinateSystem || {}).model,\n                this._tooltipModel\n            ]);\n\n            var tooltipTrigger = tooltipModel.get('trigger');\n            if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n                return;\n            }\n\n            var params = dataModel.getDataParams(dataIndex, dataType);\n            var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n            var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n            this._showOrMove(tooltipModel, function () {\n                this._showTooltipContent(\n                    tooltipModel, defaultHtml, params, asyncTicket,\n                    e.offsetX, e.offsetY, e.position, e.target\n                );\n            });\n\n            // FIXME\n            // duplicated showtip if manuallyShowTip is called from dispatchAction.\n            dispatchAction({\n                type: 'showTip',\n                dataIndexInside: dataIndex,\n                dataIndex: data.getRawIndex(dataIndex),\n                seriesIndex: seriesIndex,\n                from: this.uid\n            });\n        },\n\n        _showComponentItemTooltip: function (e, el, dispatchAction) {\n            var tooltipOpt = el.tooltip;\n            if (typeof tooltipOpt === 'string') {\n                var content = tooltipOpt;\n                tooltipOpt = {\n                    content: content,\n                    // Fixed formatter\n                    formatter: content\n                };\n            }\n            var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n            var defaultHtml = subTooltipModel.get('content');\n            var asyncTicket = Math.random();\n\n            // Do not check whether `trigger` is 'none' here, because `trigger`\n            // only works on cooridinate system. In fact, we have not found case\n            // that requires setting `trigger` nothing on component yet.\n\n            this._showOrMove(subTooltipModel, function () {\n                this._showTooltipContent(\n                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\n                    asyncTicket, e.offsetX, e.offsetY, e.position, el\n                );\n            });\n\n            // If not dispatch showTip, tip may be hide triggered by axis.\n            dispatchAction({\n                type: 'showTip',\n                from: this.uid\n            });\n        },\n\n        _showTooltipContent: function (\n            tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el\n        ) {\n            // Reset ticket\n            this._ticket = '';\n\n            if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n                return;\n            }\n\n            var tooltipContent = this._tooltipContent;\n\n            var formatter = tooltipModel.get('formatter');\n            positionExpr = positionExpr || tooltipModel.get('position');\n            var html = defaultHtml;\n\n            if (formatter && typeof formatter === 'string') {\n                html = formatUtil.formatTpl(formatter, params, true);\n            }\n            else if (typeof formatter === 'function') {\n                var callback = bind(function (cbTicket, html) {\n                    if (cbTicket === this._ticket) {\n                        tooltipContent.setContent(html);\n                        this._updatePosition(\n                            tooltipModel, positionExpr, x, y, tooltipContent, params, el\n                        );\n                    }\n                }, this);\n                this._ticket = asyncTicket;\n                html = formatter(params, asyncTicket, callback);\n            }\n\n            tooltipContent.setContent(html);\n            tooltipContent.show(tooltipModel);\n\n            this._updatePosition(\n                tooltipModel, positionExpr, x, y, tooltipContent, params, el\n            );\n        },\n\n        /**\n         * @param  {string|Function|Array.<number>|Object} positionExpr\n         * @param  {number} x Mouse x\n         * @param  {number} y Mouse y\n         * @param  {boolean} confine Whether confine tooltip content in view rect.\n         * @param  {Object|<Array.<Object>} params\n         * @param  {module:zrender/Element} el target element\n         * @param  {module:echarts/ExtensionAPI} api\n         * @return {Array.<number>}\n         */\n        _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n            var viewWidth = this._api.getWidth();\n            var viewHeight = this._api.getHeight();\n            positionExpr = positionExpr || tooltipModel.get('position');\n\n            var contentSize = content.getSize();\n            var align = tooltipModel.get('align');\n            var vAlign = tooltipModel.get('verticalAlign');\n            var rect = el && el.getBoundingRect().clone();\n            el && rect.applyTransform(el.transform);\n\n            if (typeof positionExpr === 'function') {\n                // Callback of position can be an array or a string specify the position\n                positionExpr = positionExpr([x, y], params, content.el, rect, {\n                    viewSize: [viewWidth, viewHeight],\n                    contentSize: contentSize.slice()\n                });\n            }\n\n            if (zrUtil.isArray(positionExpr)) {\n                x = parsePercent(positionExpr[0], viewWidth);\n                y = parsePercent(positionExpr[1], viewHeight);\n            }\n            else if (zrUtil.isObject(positionExpr)) {\n                positionExpr.width = contentSize[0];\n                positionExpr.height = contentSize[1];\n                var layoutRect = layoutUtil.getLayoutRect(\n                    positionExpr, {width: viewWidth, height: viewHeight}\n                );\n                x = layoutRect.x;\n                y = layoutRect.y;\n                align = null;\n                // When positionExpr is left/top/right/bottom,\n                // align and verticalAlign will not work.\n                vAlign = null;\n            }\n            // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n            else if (typeof positionExpr === 'string' && el) {\n                var pos = calcTooltipPosition(\n                    positionExpr, rect, contentSize\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n            else {\n                var pos = refixTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n            vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n            if (tooltipModel.get('confine')) {\n                var pos = confineTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            content.moveTo(x, y);\n        },\n\n        // FIXME\n        // Should we remove this but leave this to user?\n        _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n            var lastCoordSys = this._lastDataByCoordSys;\n            var contentNotChanged = !!lastCoordSys\n                && lastCoordSys.length === dataByCoordSys.length;\n\n            contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n                var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n                var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n                var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n                contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n\n                contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n                    var thisItem = thisDataByAxis[indexAxis] || {};\n                    var lastIndices = lastItem.seriesDataIndices || [];\n                    var newIndices = thisItem.seriesDataIndices || [];\n\n                    contentNotChanged &=\n                        lastItem.value === thisItem.value\n                        && lastItem.axisType === thisItem.axisType\n                        && lastItem.axisId === thisItem.axisId\n                        && lastIndices.length === newIndices.length;\n\n                    contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n                        var newIdxItem = newIndices[j];\n                        contentNotChanged &=\n                            lastIdxItem.seriesIndex === newIdxItem.seriesIndex\n                            && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n                    });\n                });\n            });\n\n            this._lastDataByCoordSys = dataByCoordSys;\n\n            return !!contentNotChanged;\n        },\n\n        _hide: function (dispatchAction) {\n            // Do not directly hideLater here, because this behavior may be prevented\n            // in dispatchAction when showTip is dispatched.\n\n            // FIXME\n            // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n            this._lastDataByCoordSys = null;\n            dispatchAction({\n                type: 'hideTip',\n                from: this.uid\n            });\n        },\n\n        dispose: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            this._tooltipContent.hide();\n            globalListener.unregister('itemTooltip', api);\n        }\n    });\n\n\n    /**\n     * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n     * From top to bottom. (the last one should be globalTooltipModel);\n     */\n    function buildTooltipModel(modelCascade) {\n        var resultModel = modelCascade.pop();\n        while (modelCascade.length) {\n            var tooltipOpt = modelCascade.pop();\n            if (tooltipOpt) {\n                if (tooltipOpt instanceof Model) {\n                    tooltipOpt = tooltipOpt.get('tooltip', true);\n                }\n                // In each data item tooltip can be simply write:\n                // {\n                //  value: 10,\n                //  tooltip: 'Something you need to know'\n                // }\n                if (typeof tooltipOpt === 'string') {\n                    tooltipOpt = {formatter: tooltipOpt};\n                }\n                resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n            }\n        }\n        return resultModel;\n    }\n\n    function makeDispatchAction(payload, api) {\n        return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n    }\n\n    function refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n        var size = getOuterSize(el);\n        var width = size.width;\n        var height = size.height;\n\n        if (gapH != null) {\n            if (x + width + gapH > viewWidth) {\n                x -= width + gapH;\n            }\n            else {\n                x += gapH;\n            }\n        }\n        if (gapV != null) {\n            if (y + height + gapV > viewHeight) {\n                y -= height + gapV;\n            }\n            else {\n                y += gapV;\n            }\n        }\n        return [x, y];\n    }\n\n    function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var size = getOuterSize(el);\n        var width = size.width;\n        var height = size.height;\n\n        x = Math.min(x + width, viewWidth) - width;\n        y = Math.min(y + height, viewHeight) - height;\n        x = Math.max(x, 0);\n        y = Math.max(y, 0);\n\n        return [x, y];\n    }\n\n    function getOuterSize(el) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        // Consider browser compatibility.\n        // IE8 does not support getComputedStyle.\n        if (document.defaultView && document.defaultView.getComputedStyle) {\n            var stl = document.defaultView.getComputedStyle(el);\n            if (stl) {\n                width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10)\n                    + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n                height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10)\n                    + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n            }\n        }\n\n        return {width: width, height: height};\n    }\n\n    function calcTooltipPosition(position, rect, contentSize) {\n        var domWidth = contentSize[0];\n        var domHeight = contentSize[1];\n        var gap = 5;\n        var x = 0;\n        var y = 0;\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n        switch (position) {\n            case 'inside':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'top':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y - domHeight - gap;\n                break;\n            case 'bottom':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight + gap;\n                break;\n            case 'left':\n                x = rect.x - domWidth - gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'right':\n                x = rect.x + rectWidth + gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n        }\n        return [x, y];\n    }\n\n    function isCenterAlign(align) {\n        return align === 'center' || align === 'middle';\n    }\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipView.js\n// module id = 724\n// module chunks = 0 1 2","\n\n    var axisDefault = require('./axisDefault');\n    var zrUtil = require('zrender/lib/core/util');\n    var ComponentModel = require('../model/Component');\n    var layout = require('../util/layout');\n\n    // FIXME axisType is fixed ?\n    var AXIS_TYPES = ['value', 'category', 'time', 'log'];\n\n    /**\n     * Generate sub axis model class\n     * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n     * @param {module:echarts/model/Component} BaseAxisModelClass\n     * @param {Function} axisTypeDefaulter\n     * @param {Object} [extraDefaultOption]\n     */\n    module.exports = function (axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n\n        zrUtil.each(AXIS_TYPES, function (axisType) {\n\n            BaseAxisModelClass.extend({\n\n                type: axisName + 'Axis.' + axisType,\n\n                mergeDefaultAndTheme: function (option, ecModel) {\n                    var layoutMode = this.layoutMode;\n                    var inputPositionParams = layoutMode\n                        ? layout.getLayoutParams(option) : {};\n\n                    var themeModel = ecModel.getTheme();\n                    zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n                    zrUtil.merge(option, this.getDefaultOption());\n\n                    option.type = axisTypeDefaulter(axisName, option);\n\n                    if (layoutMode) {\n                        layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n                    }\n                },\n\n                defaultOption: zrUtil.mergeAll(\n                    [\n                        {},\n                        axisDefault[axisType + 'Axis'],\n                        extraDefaultOption\n                    ],\n                    true\n                )\n            });\n        });\n\n        ComponentModel.registerSubTypeDefaulter(\n            axisName + 'Axis',\n            zrUtil.curry(axisTypeDefaulter, axisName)\n        );\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisModelCreator.js\n// module id = 725\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Axis = require('../Axis');\n\n    /**\n     * Extend axis 2d\n     * @constructor module:echarts/coord/cartesian/Axis2D\n     * @extends {module:echarts/coord/cartesian/Axis}\n     * @param {string} dim\n     * @param {*} scale\n     * @param {Array.<number>} coordExtent\n     * @param {string} axisType\n     * @param {string} position\n     */\n    var Axis2D = function (dim, scale, coordExtent, axisType, position) {\n        Axis.call(this, dim, scale, coordExtent);\n        /**\n         * Axis type\n         *  - 'category'\n         *  - 'value'\n         *  - 'time'\n         *  - 'log'\n         * @type {string}\n         */\n        this.type = axisType || 'value';\n\n        /**\n         * Axis position\n         *  - 'top'\n         *  - 'bottom'\n         *  - 'left'\n         *  - 'right'\n         */\n        this.position = position || 'bottom';\n    };\n\n    Axis2D.prototype = {\n\n        constructor: Axis2D,\n\n        /**\n         * Index of axis, can be used as key\n         */\n        index: 0,\n        /**\n         * If axis is on the zero position of the other axis\n         * @type {boolean}\n         */\n        onZero: false,\n\n        /**\n         * Axis model\n         * @param {module:echarts/coord/cartesian/AxisModel}\n         */\n        model: null,\n\n        isHorizontal: function () {\n            var position = this.position;\n            return position === 'top' || position === 'bottom';\n        },\n\n        /**\n         * Each item cooresponds to this.getExtent(), which\n         * means globalExtent[0] may greater than globalExtent[1],\n         * unless `asc` is input.\n         *\n         * @param {boolean} [asc]\n         * @return {Array.<number>}\n         */\n        getGlobalExtent: function (asc) {\n            var ret = this.getExtent();\n            ret[0] = this.toGlobalCoord(ret[0]);\n            ret[1] = this.toGlobalCoord(ret[1]);\n            asc && ret[0] > ret[1] && ret.reverse();\n            return ret;\n        },\n\n        getOtherAxis: function () {\n            this.grid.getOtherAxis();\n        },\n\n        /**\n         * If label is ignored.\n         * Automatically used when axis is category and label can not be all shown\n         * @param  {number}  idx\n         * @return {boolean}\n         */\n        isLabelIgnored: function (idx) {\n            if (this.type === 'category') {\n                var labelInterval = this.getLabelInterval();\n                return ((typeof labelInterval === 'function')\n                    && !labelInterval(idx, this.scale.getLabel(idx)))\n                    || idx % (labelInterval + 1);\n            }\n        },\n\n        /**\n         * @override\n         */\n        pointToData: function (point, clamp) {\n            return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n        },\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var localCoord = axis.toLocalCoord(80);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toLocalCoord: null,\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var globalCoord = axis.toLocalCoord(40);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toGlobalCoord: null\n\n    };\n    zrUtil.inherits(Axis2D, Axis);\n\n    module.exports = Axis2D;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Axis2D.js\n// module id = 726\n// module chunks = 0 1 2","'use strict';\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    function dimAxisMapper(dim) {\n        return this._axes[dim];\n    }\n\n    /**\n     * @alias module:echarts/coord/Cartesian\n     * @constructor\n     */\n    var Cartesian = function (name) {\n        this._axes = {};\n\n        this._dimList = [];\n\n        /**\n         * @type {string}\n         */\n        this.name = name || '';\n    };\n\n    Cartesian.prototype = {\n\n        constructor: Cartesian,\n\n        type: 'cartesian',\n\n        /**\n         * Get axis\n         * @param  {number|string} dim\n         * @return {module:echarts/coord/Cartesian~Axis}\n         */\n        getAxis: function (dim) {\n            return this._axes[dim];\n        },\n\n        /**\n         * Get axes list\n         * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n         */\n        getAxes: function () {\n            return zrUtil.map(this._dimList, dimAxisMapper, this);\n        },\n\n        /**\n         * Get axes list by given scale type\n         */\n        getAxesByScale: function (scaleType) {\n            scaleType = scaleType.toLowerCase();\n            return zrUtil.filter(\n                this.getAxes(),\n                function (axis) {\n                    return axis.scale.type === scaleType;\n                }\n            );\n        },\n\n        /**\n         * Add axis\n         * @param {module:echarts/coord/Cartesian.Axis}\n         */\n        addAxis: function (axis) {\n            var dim = axis.dim;\n\n            this._axes[dim] = axis;\n\n            this._dimList.push(dim);\n        },\n\n        /**\n         * Convert data to coord in nd space\n         * @param {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        dataToCoord: function (val) {\n            return this._dataCoordConvert(val, 'dataToCoord');\n        },\n\n        /**\n         * Convert coord in nd space to data\n         * @param  {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        coordToData: function (val) {\n            return this._dataCoordConvert(val, 'coordToData');\n        },\n\n        _dataCoordConvert: function (input, method) {\n            var dimList = this._dimList;\n\n            var output = input instanceof Array ? [] : {};\n\n            for (var i = 0; i < dimList.length; i++) {\n                var dim = dimList[i];\n                var axis = this._axes[dim];\n\n                output[dim] = axis[method](input[dim]);\n            }\n\n            return output;\n        }\n    };\n\n    module.exports = Cartesian;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Cartesian.js\n// module id = 727\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Cartesian = require('./Cartesian');\n\n    function Cartesian2D(name) {\n\n        Cartesian.call(this, name);\n    }\n\n    Cartesian2D.prototype = {\n\n        constructor: Cartesian2D,\n\n        type: 'cartesian2d',\n\n        /**\n         * @type {Array.<string>}\n         * @readOnly\n         */\n        dimensions: ['x', 'y'],\n\n        /**\n         * Base axis will be used on stacking.\n         *\n         * @return {module:echarts/coord/cartesian/Axis2D}\n         */\n        getBaseAxis: function () {\n            return this.getAxesByScale('ordinal')[0]\n                || this.getAxesByScale('time')[0]\n                || this.getAxis('x');\n        },\n\n        /**\n         * If contain point\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        containPoint: function (point) {\n            var axisX = this.getAxis('x');\n            var axisY = this.getAxis('y');\n            return axisX.contain(axisX.toLocalCoord(point[0]))\n                && axisY.contain(axisY.toLocalCoord(point[1]));\n        },\n\n        /**\n         * If contain data\n         * @param {Array.<number>} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.getAxis('x').containData(data[0])\n                && this.getAxis('y').containData(data[1]);\n        },\n\n        /**\n         * @param {Array.<number>} data\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        dataToPoint: function (data, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)),\n                yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))\n            ];\n        },\n\n        /**\n         * @param {Array.<number>} point\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        pointToData: function (point, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp),\n                yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)\n            ];\n        },\n\n        /**\n         * Get other axis\n         * @param {module:echarts/coord/cartesian/Axis2D} axis\n         */\n        getOtherAxis: function (axis) {\n            return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n        }\n\n    };\n\n    zrUtil.inherits(Cartesian2D, Cartesian);\n\n    module.exports = Cartesian2D;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Cartesian2D.js\n// module id = 728\n// module chunks = 0 1 2","'use strict';\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\n\n\n    require('./AxisModel');\n\n    var ComponentModel = require('../../model/Component');\n\n    module.exports = ComponentModel.extend({\n\n        type: 'grid',\n\n        dependencies: ['xAxis', 'yAxis'],\n\n        layoutMode: 'box',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Grid}\n         */\n        coordinateSystem: null,\n\n        defaultOption: {\n            show: false,\n            zlevel: 0,\n            z: 0,\n            left: '10%',\n            top: 60,\n            right: '10%',\n            bottom: 60,\n            // If grid size contain label\n            containLabel: false,\n            // width: {totalWidth} - left - right,\n            // height: {totalHeight} - top - bottom,\n            backgroundColor: 'rgba(0,0,0,0)',\n            borderWidth: 1,\n            borderColor: '#ccc'\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/GridModel.js\n// module id = 729\n// module chunks = 0 1 2","'use strict';\n\n\n    function defaultKeyGetter(item) {\n        return item;\n    }\n\n    /**\n     * @param {Array} oldArr\n     * @param {Array} newArr\n     * @param {Function} oldKeyGetter\n     * @param {Function} newKeyGetter\n     * @param {Object} [context] Can be visited by this.context in callback.\n     */\n    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n        this._old = oldArr;\n        this._new = newArr;\n\n        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n\n        this.context = context;\n    }\n\n    DataDiffer.prototype = {\n\n        constructor: DataDiffer,\n\n        /**\n         * Callback function when add a data\n         */\n        add: function (func) {\n            this._add = func;\n            return this;\n        },\n\n        /**\n         * Callback function when update a data\n         */\n        update: function (func) {\n            this._update = func;\n            return this;\n        },\n\n        /**\n         * Callback function when remove a data\n         */\n        remove: function (func) {\n            this._remove = func;\n            return this;\n        },\n\n        execute: function () {\n            var oldArr = this._old;\n            var newArr = this._new;\n\n            var oldDataIndexMap = {};\n            var newDataIndexMap = {};\n            var oldDataKeyArr = [];\n            var newDataKeyArr = [];\n            var i;\n\n            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this);\n\n            // Travel by inverted order to make sure order consistency\n            // when duplicate keys exists (consider newDataIndex.pop() below).\n            // For performance consideration, these code below do not look neat.\n            for (i = 0; i < oldArr.length; i++) {\n                var key = oldDataKeyArr[i];\n                var idx = newDataIndexMap[key];\n\n                // idx can never be empty array here. see 'set null' logic below.\n                if (idx != null) {\n                    // Consider there is duplicate key (for example, use dataItem.name as key).\n                    // We should make sure every item in newArr and oldArr can be visited.\n                    var len = idx.length;\n                    if (len) {\n                        len === 1 && (newDataIndexMap[key] = null);\n                        idx = idx.unshift();\n                    }\n                    else {\n                        newDataIndexMap[key] = null;\n                    }\n                    this._update && this._update(idx, i);\n                }\n                else {\n                    this._remove && this._remove(i);\n                }\n            }\n\n            for (var i = 0; i < newDataKeyArr.length; i++) {\n                var key = newDataKeyArr[i];\n                if (newDataIndexMap.hasOwnProperty(key)) {\n                    var idx = newDataIndexMap[key];\n                    if (idx == null) {\n                        continue;\n                    }\n                    // idx can never be empty array here. see 'set null' logic above.\n                    if (!idx.length) {\n                        this._add && this._add(idx);\n                    }\n                    else {\n                        for (var j = 0, len = idx.length; j < len; j++) {\n                            this._add && this._add(idx[j]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    function initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n        for (var i = 0; i < arr.length; i++) {\n            // Add prefix to avoid conflict with Object.prototype.\n            var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n            var existence = map[key];\n            if (existence == null) {\n                keyArr.push(key);\n                map[key] = i;\n            }\n            else {\n                if (!existence.length) {\n                    map[key] = existence = [existence];\n                }\n                existence.push(i);\n            }\n        }\n    }\n\n    module.exports = DataDiffer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/DataDiffer.js\n// module id = 730\n// module chunks = 0 1 2","\n\n    var createListFromArray = require('./chart/helper/createListFromArray');\n    var symbolUtil = require('./util/symbol');\n    var axisHelper = require('./coord/axisHelper');\n    var axisModelCommonMixin = require('./coord/axisModelCommonMixin');\n    var Model = require('./model/Model');\n    var util = require('zrender/lib/core/util');\n\n    module.exports = {\n        /**\n         * Create a muti dimension List structure from seriesModel.\n         * @param  {module:echarts/model/Model} seriesModel\n         * @return {module:echarts/data/List} list\n         */\n        createList: function (seriesModel) {\n            var data = seriesModel.get('data');\n            return createListFromArray(data, seriesModel, seriesModel.ecModel);\n        },\n\n        /**\n         * @see {module:echarts/data/helper/completeDimensions}\n         */\n        completeDimensions: require('./data/helper/completeDimensions'),\n\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @see http://echarts.baidu.com/option.html#series-scatter.symbol\n         * @param {string} symbolDesc\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: symbolUtil.createSymbol,\n\n        /**\n         * Create scale\n         * @param {Array.<number>} dataExtent\n         * @param {Object|module:echarts/Model} option\n         */\n        createScale: function (dataExtent, option) {\n            var axisModel = option;\n            if (!(option instanceof Model)) {\n                axisModel = new Model(option);\n                util.mixin(axisModel, axisModelCommonMixin);\n            }\n\n            var scale = axisHelper.createScaleByModel(axisModel);\n            scale.setExtent(dataExtent[0], dataExtent[1]);\n\n            axisHelper.niceScaleExtent(scale, axisModel);\n            return scale;\n        },\n\n        /**\n         * Mixin common methods to axis model,\n         *\n         * Inlcude methods\n         * `getFormattedLabels() => Array.<string>`\n         * `getCategories() => Array.<string>`\n         * `getMin(origin: boolean) => number`\n         * `getMax(origin: boolean) => number`\n         * `getNeedCrossZero() => boolean`\n         * `setRange(start: number, end: number)`\n         * `resetRange()`\n         */\n        mixinAxisModelCommonMethods: function (Model) {\n            util.mixin(Model, axisModelCommonMixin);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/helper.js\n// module id = 731\n// module chunks = 0 1 2","\n\n    module.exports = function (seriesType, ecModel) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var coordSys = seriesModel.coordinateSystem;\n\n            if (!coordSys) {\n                return;\n            }\n\n            var dims = [];\n            var coordDims = coordSys.dimensions;\n            for (var i = 0; i < coordDims.length; i++) {\n                dims.push(seriesModel.coordDimToDataDim(coordSys.dimensions[i])[0]);\n            }\n\n            if (dims.length === 1) {\n                data.each(dims[0], function (x, idx) {\n                    // Also {Array.<number>}, not undefined to avoid if...else... statement\n                    data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n                });\n            }\n            else if (dims.length === 2) {\n                data.each(dims, function (x, y, idx) {\n                    // Also {Array.<number>}, not undefined to avoid if...else... statement\n                    data.setItemLayout(\n                        idx, (isNaN(x) || isNaN(y)) ? [NaN, NaN] : coordSys.dataToPoint([x, y])\n                    );\n                }, true);\n            }\n        });\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/layout/points.js\n// module id = 732\n// module chunks = 0 1 2","\n\n    var graphic = require('../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var PI = Math.PI;\n    /**\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [opts]\n     * @param {string} [opts.text]\n     * @param {string} [opts.color]\n     * @param {string} [opts.textColor]\n     * @return {module:zrender/Element}\n     */\n    module.exports = function (api, opts) {\n        opts = opts || {};\n        zrUtil.defaults(opts, {\n            text: 'loading',\n            color: '#c23531',\n            textColor: '#000',\n            maskColor: 'rgba(255, 255, 255, 0.8)',\n            zlevel: 0\n        });\n        var mask = new graphic.Rect({\n            style: {\n                fill: opts.maskColor\n            },\n            zlevel: opts.zlevel,\n            z: 10000\n        });\n        var arc = new graphic.Arc({\n            shape: {\n                startAngle: -PI / 2,\n                endAngle: -PI / 2 + 0.1,\n                r: 10\n            },\n            style: {\n                stroke: opts.color,\n                lineCap: 'round',\n                lineWidth: 5\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n        var labelRect = new graphic.Rect({\n            style: {\n                fill: 'none',\n                text: opts.text,\n                textPosition: 'right',\n                textDistance: 10,\n                textFill: opts.textColor\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n\n        arc.animateShape(true)\n            .when(1000, {\n                endAngle: PI * 3 / 2\n            })\n            .start('circularInOut');\n        arc.animateShape(true)\n            .when(1000, {\n                startAngle: PI * 3 / 2\n            })\n            .delay(300)\n            .start('circularInOut');\n\n        var group = new graphic.Group();\n        group.add(arc);\n        group.add(labelRect);\n        group.add(mask);\n        // Inject resize\n        group.resize = function () {\n            var cx = api.getWidth() / 2;\n            var cy = api.getHeight() / 2;\n            arc.setShape({\n                cx: cx,\n                cy: cy\n            });\n            var r = arc.shape.r;\n            labelRect.setShape({\n                x: cx - r,\n                y: cy - r,\n                width: r * 2,\n                height: r * 2\n            });\n\n            mask.setShape({\n                x: 0,\n                y: 0,\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n        };\n        group.resize();\n        return group;\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/loading/default.js\n// module id = 733\n// module chunks = 0 1 2","/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n\n\n    /**\n     * Caution: If the mechanism should be changed some day, these cases\n     * should be considered:\n     *\n     * (1) In `merge option` mode, if using the same option to call `setOption`\n     * many times, the result should be the same (try our best to ensure that).\n     * (2) In `merge option` mode, if a component has no id/name specified, it\n     * will be merged by index, and the result sequence of the components is\n     * consistent to the original sequence.\n     * (3) `reset` feature (in toolbox). Find detailed info in comments about\n     * `mergeOption` in module:echarts/model/OptionManager.\n     */\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var Model = require('./Model');\n    var each = zrUtil.each;\n    var filter = zrUtil.filter;\n    var map = zrUtil.map;\n    var isArray = zrUtil.isArray;\n    var indexOf = zrUtil.indexOf;\n    var isObject = zrUtil.isObject;\n\n    var ComponentModel = require('./Component');\n\n    var globalDefault = require('./globalDefault');\n\n    var OPTION_INNER_KEY = '\\0_ec_inner';\n\n    /**\n     * @alias module:echarts/model/Global\n     *\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {Object} theme\n     */\n    var GlobalModel = Model.extend({\n\n        constructor: GlobalModel,\n\n        init: function (option, parentModel, theme, optionManager) {\n            theme = theme || {};\n\n            this.option = null; // Mark as not initialized.\n\n            /**\n             * @type {module:echarts/model/Model}\n             * @private\n             */\n            this._theme = new Model(theme);\n\n            /**\n             * @type {module:echarts/model/OptionManager}\n             */\n            this._optionManager = optionManager;\n        },\n\n        setOption: function (option, optionPreprocessorFuncs) {\n            zrUtil.assert(\n                !(OPTION_INNER_KEY in option),\n                'please use chart.getOption()'\n            );\n\n            this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n            this.resetOption(null);\n        },\n\n        /**\n         * @param {string} type null/undefined: reset all.\n         *                      'recreate': force recreate all.\n         *                      'timeline': only reset timeline option\n         *                      'media': only reset media query option\n         * @return {boolean} Whether option changed.\n         */\n        resetOption: function (type) {\n            var optionChanged = false;\n            var optionManager = this._optionManager;\n\n            if (!type || type === 'recreate') {\n                var baseOption = optionManager.mountOption(type === 'recreate');\n\n                if (!this.option || type === 'recreate') {\n                    initBase.call(this, baseOption);\n                }\n                else {\n                    this.restoreData();\n                    this.mergeOption(baseOption);\n                }\n                optionChanged = true;\n            }\n\n            if (type === 'timeline' || type === 'media') {\n                this.restoreData();\n            }\n\n            if (!type || type === 'recreate' || type === 'timeline') {\n                var timelineOption = optionManager.getTimelineOption(this);\n                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n            }\n\n            if (!type || type === 'recreate' || type === 'media') {\n                var mediaOptions = optionManager.getMediaOption(this, this._api);\n                if (mediaOptions.length) {\n                    each(mediaOptions, function (mediaOption) {\n                        this.mergeOption(mediaOption, optionChanged = true);\n                    }, this);\n                }\n            }\n\n            return optionChanged;\n        },\n\n        /**\n         * @protected\n         */\n        mergeOption: function (newOption) {\n            var option = this.option;\n            var componentsMap = this._componentsMap;\n            var newCptTypes = [];\n\n            // 如果不存在对应的 component model 则直接 merge\n            each(newOption, function (componentOption, mainType) {\n                if (componentOption == null) {\n                    return;\n                }\n\n                if (!ComponentModel.hasClass(mainType)) {\n                    option[mainType] = option[mainType] == null\n                        ? zrUtil.clone(componentOption)\n                        : zrUtil.merge(option[mainType], componentOption, true);\n                }\n                else {\n                    newCptTypes.push(mainType);\n                }\n            });\n\n            // FIXME OPTION 同步是否要改回原来的\n            ComponentModel.topologicalTravel(\n                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\n            );\n\n            this._seriesIndices = this._seriesIndices || [];\n\n            function visitComponent(mainType, dependencies) {\n                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n\n                var mapResult = modelUtil.mappingToExists(\n                    componentsMap.get(mainType), newCptOptionList\n                );\n\n                modelUtil.makeIdAndName(mapResult);\n\n                // Set mainType and complete subType.\n                each(mapResult, function (item, index) {\n                    var opt = item.option;\n                    if (isObject(opt)) {\n                        item.keyInfo.mainType = mainType;\n                        item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n                    }\n                });\n\n                var dependentModels = getComponentsByTypes(\n                    componentsMap, dependencies\n                );\n\n                option[mainType] = [];\n                componentsMap.set(mainType, []);\n\n                each(mapResult, function (resultItem, index) {\n                    var componentModel = resultItem.exist;\n                    var newCptOption = resultItem.option;\n\n                    zrUtil.assert(\n                        isObject(newCptOption) || componentModel,\n                        'Empty component definition'\n                    );\n\n                    // Consider where is no new option and should be merged using {},\n                    // see removeEdgeAndAdd in topologicalTravel and\n                    // ComponentModel.getAllClassMainTypes.\n                    if (!newCptOption) {\n                        componentModel.mergeOption({}, this);\n                        componentModel.optionUpdated({}, false);\n                    }\n                    else {\n                        var ComponentModelClass = ComponentModel.getClass(\n                            mainType, resultItem.keyInfo.subType, true\n                        );\n\n                        if (componentModel && componentModel instanceof ComponentModelClass) {\n                            componentModel.name = resultItem.keyInfo.name;\n                            componentModel.mergeOption(newCptOption, this);\n                            componentModel.optionUpdated(newCptOption, false);\n                        }\n                        else {\n                            // PENDING Global as parent ?\n                            var extraOpt = zrUtil.extend(\n                                {\n                                    dependentModels: dependentModels,\n                                    componentIndex: index\n                                },\n                                resultItem.keyInfo\n                            );\n                            componentModel = new ComponentModelClass(\n                                newCptOption, this, this, extraOpt\n                            );\n                            zrUtil.extend(componentModel, extraOpt);\n                            componentModel.init(newCptOption, this, this, extraOpt);\n                            // Call optionUpdated after init.\n                            // newCptOption has been used as componentModel.option\n                            // and may be merged with theme and default, so pass null\n                            // to avoid confusion.\n                            componentModel.optionUpdated(null, true);\n                        }\n                    }\n\n                    componentsMap.get(mainType)[index] = componentModel;\n                    option[mainType][index] = componentModel.option;\n                }, this);\n\n                // Backup series for filtering.\n                if (mainType === 'series') {\n                    this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n                }\n            }\n        },\n\n        /**\n         * Get option for output (cloned option and inner info removed)\n         * @public\n         * @return {Object}\n         */\n        getOption: function () {\n            var option = zrUtil.clone(this.option);\n\n            each(option, function (opts, mainType) {\n                if (ComponentModel.hasClass(mainType)) {\n                    var opts = modelUtil.normalizeToArray(opts);\n                    for (var i = opts.length - 1; i >= 0; i--) {\n                        // Remove options with inner id.\n                        if (modelUtil.isIdInner(opts[i])) {\n                            opts.splice(i, 1);\n                        }\n                    }\n                    option[mainType] = opts;\n                }\n            });\n\n            delete option[OPTION_INNER_KEY];\n\n            return option;\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        getTheme: function () {\n            return this._theme;\n        },\n\n        /**\n         * @param {string} mainType\n         * @param {number} [idx=0]\n         * @return {module:echarts/model/Component}\n         */\n        getComponent: function (mainType, idx) {\n            var list = this._componentsMap.get(mainType);\n            if (list) {\n                return list[idx || 0];\n            }\n        },\n\n        /**\n         * If none of index and id and name used, return all components with mainType.\n         * @param {Object} condition\n         * @param {string} condition.mainType\n         * @param {string} [condition.subType] If ignore, only query by mainType\n         * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        queryComponents: function (condition) {\n            var mainType = condition.mainType;\n            if (!mainType) {\n                return [];\n            }\n\n            var index = condition.index;\n            var id = condition.id;\n            var name = condition.name;\n\n            var cpts = this._componentsMap.get(mainType);\n\n            if (!cpts || !cpts.length) {\n                return [];\n            }\n\n            var result;\n\n            if (index != null) {\n                if (!isArray(index)) {\n                    index = [index];\n                }\n                result = filter(map(index, function (idx) {\n                    return cpts[idx];\n                }), function (val) {\n                    return !!val;\n                });\n            }\n            else if (id != null) {\n                var isIdArray = isArray(id);\n                result = filter(cpts, function (cpt) {\n                    return (isIdArray && indexOf(id, cpt.id) >= 0)\n                        || (!isIdArray && cpt.id === id);\n                });\n            }\n            else if (name != null) {\n                var isNameArray = isArray(name);\n                result = filter(cpts, function (cpt) {\n                    return (isNameArray && indexOf(name, cpt.name) >= 0)\n                        || (!isNameArray && cpt.name === name);\n                });\n            }\n            else {\n                // Return all components with mainType\n                result = cpts.slice();\n            }\n\n            return filterBySubType(result, condition);\n        },\n\n        /**\n         * The interface is different from queryComponents,\n         * which is convenient for inner usage.\n         *\n         * @usage\n         * var result = findComponents(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series'},\n         *     function (model, index) {...}\n         * );\n         * // result like [component0, componnet1, ...]\n         *\n         * @param {Object} condition\n         * @param {string} condition.mainType Mandatory.\n         * @param {string} [condition.subType] Optional.\n         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n         *        where xxx is mainType.\n         *        If query attribute is null/undefined or has no index/id/name,\n         *        do not filtering by query conditions, which is convenient for\n         *        no-payload situations or when target of action is global.\n         * @param {Function} [condition.filter] parameter: component, return boolean.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        findComponents: function (condition) {\n            var query = condition.query;\n            var mainType = condition.mainType;\n\n            var queryCond = getQueryCond(query);\n            var result = queryCond\n                ? this.queryComponents(queryCond)\n                : this._componentsMap.get(mainType);\n\n            return doFilter(filterBySubType(result, condition));\n\n            function getQueryCond(q) {\n                var indexAttr = mainType + 'Index';\n                var idAttr = mainType + 'Id';\n                var nameAttr = mainType + 'Name';\n                return q && (\n                        q[indexAttr] != null\n                        || q[idAttr] != null\n                        || q[nameAttr] != null\n                    )\n                    ? {\n                        mainType: mainType,\n                        // subType will be filtered finally.\n                        index: q[indexAttr],\n                        id: q[idAttr],\n                        name: q[nameAttr]\n                    }\n                    : null;\n            }\n\n            function doFilter(res) {\n                return condition.filter\n                     ? filter(res, condition.filter)\n                     : res;\n            }\n        },\n\n        /**\n         * @usage\n         * eachComponent('legend', function (legendModel, index) {\n         *     ...\n         * });\n         * eachComponent(function (componentType, model, index) {\n         *     // componentType does not include subType\n         *     // (componentType is 'xxx' but not 'xxx.aa')\n         * });\n         * eachComponent(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n         *     function (model, index) {...}\n         * );\n         * eachComponent(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n         *     function (model, index) {...}\n         * );\n         *\n         * @param {string|Object=} mainType When mainType is object, the definition\n         *                                  is the same as the method 'findComponents'.\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachComponent: function (mainType, cb, context) {\n            var componentsMap = this._componentsMap;\n\n            if (typeof mainType === 'function') {\n                context = cb;\n                cb = mainType;\n                componentsMap.each(function (components, componentType) {\n                    each(components, function (component, index) {\n                        cb.call(context, componentType, component, index);\n                    });\n                });\n            }\n            else if (zrUtil.isString(mainType)) {\n                each(componentsMap.get(mainType), cb, context);\n            }\n            else if (isObject(mainType)) {\n                var queryResult = this.findComponents(mainType);\n                each(queryResult, cb, context);\n            }\n        },\n\n        /**\n         * @param {string} name\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByName: function (name) {\n            var series = this._componentsMap.get('series');\n            return filter(series, function (oneSeries) {\n                return oneSeries.name === name;\n            });\n        },\n\n        /**\n         * @param {number} seriesIndex\n         * @return {module:echarts/model/Series}\n         */\n        getSeriesByIndex: function (seriesIndex) {\n            return this._componentsMap.get('series')[seriesIndex];\n        },\n\n        /**\n         * @param {string} subType\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByType: function (subType) {\n            var series = this._componentsMap.get('series');\n            return filter(series, function (oneSeries) {\n                return oneSeries.subType === subType;\n            });\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeries: function () {\n            return this._componentsMap.get('series').slice();\n        },\n\n        /**\n         * After filtering, series may be different\n         * frome raw series.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.get('series')[rawSeriesIndex];\n                cb.call(context, series, rawSeriesIndex);\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeries: function (cb, context) {\n            each(this._componentsMap.get('series'), cb, context);\n        },\n\n        /**\n         * After filtering, series may be different.\n         * frome raw series.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeriesByType: function (subType, cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.get('series')[rawSeriesIndex];\n                if (series.subType === subType) {\n                    cb.call(context, series, rawSeriesIndex);\n                }\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered of given type.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeriesByType: function (subType, cb, context) {\n            return each(this.getSeriesByType(subType), cb, context);\n        },\n\n        /**\n         * @param {module:echarts/model/Series} seriesModel\n         */\n        isSeriesFiltered: function (seriesModel) {\n            assertSeriesInitialized(this);\n            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getCurrentSeriesIndices: function () {\n            return (this._seriesIndices || []).slice();\n        },\n\n        /**\n         * @param {Function} cb\n         * @param {*} context\n         */\n        filterSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            var filteredSeries = filter(\n                this._componentsMap.get('series'), cb, context\n            );\n            this._seriesIndices = createSeriesIndices(filteredSeries);\n        },\n\n        restoreData: function () {\n            var componentsMap = this._componentsMap;\n\n            this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n\n            var componentTypes = [];\n            componentsMap.each(function (components, componentType) {\n                componentTypes.push(componentType);\n            });\n\n            ComponentModel.topologicalTravel(\n                componentTypes,\n                ComponentModel.getAllClassMainTypes(),\n                function (componentType, dependencies) {\n                    each(componentsMap.get(componentType), function (component) {\n                        component.restoreData();\n                    });\n                }\n            );\n        }\n\n    });\n\n    /**\n     * @inner\n     */\n    function mergeTheme(option, theme) {\n        zrUtil.each(theme, function (themeItem, name) {\n            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n            if (!ComponentModel.hasClass(name)) {\n                if (typeof themeItem === 'object') {\n                    option[name] = !option[name]\n                        ? zrUtil.clone(themeItem)\n                        : zrUtil.merge(option[name], themeItem, false);\n                }\n                else {\n                    if (option[name] == null) {\n                        option[name] = themeItem;\n                    }\n                }\n            }\n        });\n    }\n\n    function initBase(baseOption) {\n        baseOption = baseOption;\n\n        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n        this.option = {};\n        this.option[OPTION_INNER_KEY] = 1;\n\n        /**\n         * Init with series: [], in case of calling findSeries method\n         * before series initialized.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @private\n         */\n        this._componentsMap = zrUtil.createHashMap({series: []});\n\n        /**\n         * Mapping between filtered series list and raw series list.\n         * key: filtered series indices, value: raw series indices.\n         * @type {Array.<nubmer>}\n         * @private\n         */\n        this._seriesIndices = null;\n\n        mergeTheme(baseOption, this._theme.option);\n\n        // TODO Needs clone when merging to the unexisted property\n        zrUtil.merge(baseOption, globalDefault, false);\n\n        this.mergeOption(baseOption);\n    }\n\n    /**\n     * @inner\n     * @param {Array.<string>|string} types model types\n     * @return {Object} key: {string} type, value: {Array.<Object>} models\n     */\n    function getComponentsByTypes(componentsMap, types) {\n        if (!zrUtil.isArray(types)) {\n            types = types ? [types] : [];\n        }\n\n        var ret = {};\n        each(types, function (type) {\n            ret[type] = (componentsMap.get(type) || []).slice();\n        });\n\n        return ret;\n    }\n\n    /**\n     * @inner\n     */\n    function determineSubType(mainType, newCptOption, existComponent) {\n        var subType = newCptOption.type\n            ? newCptOption.type\n            : existComponent\n            ? existComponent.subType\n            // Use determineSubType only when there is no existComponent.\n            : ComponentModel.determineSubType(mainType, newCptOption);\n\n        // tooltip, markline, markpoint may always has no subType\n        return subType;\n    }\n\n    /**\n     * @inner\n     */\n    function createSeriesIndices(seriesModels) {\n        return map(seriesModels, function (series) {\n            return series.componentIndex;\n        }) || [];\n    }\n\n    /**\n     * @inner\n     */\n    function filterBySubType(components, condition) {\n        // Using hasOwnProperty for restrict. Consider\n        // subType is undefined in user payload.\n        return condition.hasOwnProperty('subType')\n            ? filter(components, function (cpt) {\n                return cpt.subType === condition.subType;\n            })\n            : components;\n    }\n\n    /**\n     * @inner\n     */\n    function assertSeriesInitialized(ecModel) {\n        // Components that use _seriesIndices should depends on series component,\n        // which make sure that their initialization is after series.\n        if (__DEV__) {\n            if (!ecModel._seriesIndices) {\n                throw new Error('Option should contains series.');\n            }\n        }\n    }\n\n    zrUtil.mixin(GlobalModel, require('./mixin/colorPalette'));\n\n    module.exports = GlobalModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Global.js\n// module id = 734\n// module chunks = 0 1 2","/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var ComponentModel = require('./Component');\n    var each = zrUtil.each;\n    var clone = zrUtil.clone;\n    var map = zrUtil.map;\n    var merge = zrUtil.merge;\n\n    var QUERY_REG = /^(min|max)?(.+)$/;\n\n    /**\n     * TERM EXPLANATIONS:\n     *\n     * [option]:\n     *\n     *     An object that contains definitions of components. For example:\n     *     var option = {\n     *         title: {...},\n     *         legend: {...},\n     *         visualMap: {...},\n     *         series: [\n     *             {data: [...]},\n     *             {data: [...]},\n     *             ...\n     *         ]\n     *     };\n     *\n     * [rawOption]:\n     *\n     *     An object input to echarts.setOption. 'rawOption' may be an\n     *     'option', or may be an object contains multi-options. For example:\n     *     var option = {\n     *         baseOption: {\n     *             title: {...},\n     *             legend: {...},\n     *             series: [\n     *                 {data: [...]},\n     *                 {data: [...]},\n     *                 ...\n     *             ]\n     *         },\n     *         timeline: {...},\n     *         options: [\n     *             {title: {...}, series: {data: [...]}},\n     *             {title: {...}, series: {data: [...]}},\n     *             ...\n     *         ],\n     *         media: [\n     *             {\n     *                 query: {maxWidth: 320},\n     *                 option: {series: {x: 20}, visualMap: {show: false}}\n     *             },\n     *             {\n     *                 query: {minWidth: 320, maxWidth: 720},\n     *                 option: {series: {x: 500}, visualMap: {show: true}}\n     *             },\n     *             {\n     *                 option: {series: {x: 1200}, visualMap: {show: true}}\n     *             }\n     *         ]\n     *     };\n     *\n     * @alias module:echarts/model/OptionManager\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function OptionManager(api) {\n\n        /**\n         * @private\n         * @type {module:echarts/ExtensionAPI}\n         */\n        this._api = api;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._timelineOptions = [];\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._mediaList = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._mediaDefault;\n\n        /**\n         * -1, means default.\n         * empty means no media.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._currentMediaIndices = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._optionBackup;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._newBaseOption;\n    }\n\n    // timeline.notMerge is not supported in ec3. Firstly there is rearly\n    // case that notMerge is needed. Secondly supporting 'notMerge' requires\n    // rawOption cloned and backuped when timeline changed, which does no\n    // good to performance. What's more, that both timeline and setOption\n    // method supply 'notMerge' brings complex and some problems.\n    // Consider this case:\n    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n    OptionManager.prototype = {\n\n        constructor: OptionManager,\n\n        /**\n         * @public\n         * @param {Object} rawOption Raw option.\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Array.<Function>} optionPreprocessorFuncs\n         * @return {Object} Init option\n         */\n        setOption: function (rawOption, optionPreprocessorFuncs) {\n            rawOption = clone(rawOption, true);\n\n            // FIXME\n            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n            var oldOptionBackup = this._optionBackup;\n            var newParsedOption = parseRawOption.call(\n                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\n            );\n            this._newBaseOption = newParsedOption.baseOption;\n\n            // For setOption at second time (using merge mode);\n            if (oldOptionBackup) {\n                // Only baseOption can be merged.\n                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\n\n                // For simplicity, timeline options and media options do not support merge,\n                // that is, if you `setOption` twice and both has timeline options, the latter\n                // timeline opitons will not be merged to the formers, but just substitude them.\n                if (newParsedOption.timelineOptions.length) {\n                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n                }\n                if (newParsedOption.mediaList.length) {\n                    oldOptionBackup.mediaList = newParsedOption.mediaList;\n                }\n                if (newParsedOption.mediaDefault) {\n                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n                }\n            }\n            else {\n                this._optionBackup = newParsedOption;\n            }\n        },\n\n        /**\n         * @param {boolean} isRecreate\n         * @return {Object}\n         */\n        mountOption: function (isRecreate) {\n            var optionBackup = this._optionBackup;\n\n            // TODO\n            // 如果没有reset功能则不clone。\n\n            this._timelineOptions = map(optionBackup.timelineOptions, clone);\n            this._mediaList = map(optionBackup.mediaList, clone);\n            this._mediaDefault = clone(optionBackup.mediaDefault);\n            this._currentMediaIndices = [];\n\n            return clone(isRecreate\n                // this._optionBackup.baseOption, which is created at the first `setOption`\n                // called, and is merged into every new option by inner method `mergeOption`\n                // each time `setOption` called, can be only used in `isRecreate`, because\n                // its reliability is under suspicion. In other cases option merge is\n                // performed by `model.mergeOption`.\n                ? optionBackup.baseOption : this._newBaseOption\n            );\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object}\n         */\n        getTimelineOption: function (ecModel) {\n            var option;\n            var timelineOptions = this._timelineOptions;\n\n            if (timelineOptions.length) {\n                // getTimelineOption can only be called after ecModel inited,\n                // so we can get currentIndex from timelineModel.\n                var timelineModel = ecModel.getComponent('timeline');\n                if (timelineModel) {\n                    option = clone(\n                        timelineOptions[timelineModel.getCurrentIndex()],\n                        true\n                    );\n                }\n            }\n\n            return option;\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Array.<Object>}\n         */\n        getMediaOption: function (ecModel) {\n            var ecWidth = this._api.getWidth();\n            var ecHeight = this._api.getHeight();\n            var mediaList = this._mediaList;\n            var mediaDefault = this._mediaDefault;\n            var indices = [];\n            var result = [];\n\n            // No media defined.\n            if (!mediaList.length && !mediaDefault) {\n                return result;\n            }\n\n            // Multi media may be applied, the latter defined media has higher priority.\n            for (var i = 0, len = mediaList.length; i < len; i++) {\n                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n                    indices.push(i);\n                }\n            }\n\n            // FIXME\n            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n            if (!indices.length && mediaDefault) {\n                indices = [-1];\n            }\n\n            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n                result = map(indices, function (index) {\n                    return clone(\n                        index === -1 ? mediaDefault.option : mediaList[index].option\n                    );\n                });\n            }\n            // Otherwise return nothing.\n\n            this._currentMediaIndices = indices;\n\n            return result;\n        }\n    };\n\n    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n        var timelineOptions = [];\n        var mediaList = [];\n        var mediaDefault;\n        var baseOption;\n\n        // Compatible with ec2.\n        var timelineOpt = rawOption.timeline;\n\n        if (rawOption.baseOption) {\n            baseOption = rawOption.baseOption;\n        }\n\n        // For timeline\n        if (timelineOpt || rawOption.options) {\n            baseOption = baseOption || {};\n            timelineOptions = (rawOption.options || []).slice();\n        }\n\n        // For media query\n        if (rawOption.media) {\n            baseOption = baseOption || {};\n            var media = rawOption.media;\n            each(media, function (singleMedia) {\n                if (singleMedia && singleMedia.option) {\n                    if (singleMedia.query) {\n                        mediaList.push(singleMedia);\n                    }\n                    else if (!mediaDefault) {\n                        // Use the first media default.\n                        mediaDefault = singleMedia;\n                    }\n                }\n            });\n        }\n\n        // For normal option\n        if (!baseOption) {\n            baseOption = rawOption;\n        }\n\n        // Set timelineOpt to baseOption in ec3,\n        // which is convenient for merge option.\n        if (!baseOption.timeline) {\n            baseOption.timeline = timelineOpt;\n        }\n\n        // Preprocess.\n        each([baseOption].concat(timelineOptions)\n            .concat(zrUtil.map(mediaList, function (media) {\n                return media.option;\n            })),\n            function (option) {\n                each(optionPreprocessorFuncs, function (preProcess) {\n                    preProcess(option, isNew);\n                });\n            }\n        );\n\n        return {\n            baseOption: baseOption,\n            timelineOptions: timelineOptions,\n            mediaDefault: mediaDefault,\n            mediaList: mediaList\n        };\n    }\n\n    /**\n     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n     * Support: width, height, aspectRatio\n     * Can use max or min as prefix.\n     */\n    function applyMediaQuery(query, ecWidth, ecHeight) {\n        var realMap = {\n            width: ecWidth,\n            height: ecHeight,\n            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n        };\n\n        var applicatable = true;\n\n        zrUtil.each(query, function (value, attr) {\n            var matched = attr.match(QUERY_REG);\n\n            if (!matched || !matched[1] || !matched[2]) {\n                return;\n            }\n\n            var operator = matched[1];\n            var realAttr = matched[2].toLowerCase();\n\n            if (!compare(realMap[realAttr], value, operator)) {\n                applicatable = false;\n            }\n        });\n\n        return applicatable;\n    }\n\n    function compare(real, expect, operator) {\n        if (operator === 'min') {\n            return real >= expect;\n        }\n        else if (operator === 'max') {\n            return real <= expect;\n        }\n        else { // Equals\n            return real === expect;\n        }\n    }\n\n    function indicesEquals(indices1, indices2) {\n        // indices is always order by asc and has only finite number.\n        return indices1.join(',') === indices2.join(',');\n    }\n\n    /**\n     * Consider case:\n     * `chart.setOption(opt1);`\n     * Then user do some interaction like dataZoom, dataView changing.\n     * `chart.setOption(opt2);`\n     * Then user press 'reset button' in toolbox.\n     *\n     * After doing that all of the interaction effects should be reset, the\n     * chart should be the same as the result of invoke\n     * `chart.setOption(opt1); chart.setOption(opt2);`.\n     *\n     * Although it is not able ensure that\n     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n     * `chart.setOption(merge(opt1, opt2));` exactly,\n     * this might be the only simple way to implement that feature.\n     *\n     * MEMO: We've considered some other approaches:\n     * 1. Each model handle its self restoration but not uniform treatment.\n     *     (Too complex in logic and error-prone)\n     * 2. Use a shadow ecModel. (Performace expensive)\n     */\n    function mergeOption(oldOption, newOption) {\n        newOption = newOption || {};\n\n        each(newOption, function (newCptOpt, mainType) {\n            if (newCptOpt == null) {\n                return;\n            }\n\n            var oldCptOpt = oldOption[mainType];\n\n            if (!ComponentModel.hasClass(mainType)) {\n                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n            }\n            else {\n                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n\n                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n\n                oldOption[mainType] = map(mapResult, function (item) {\n                    return (item.option && item.exist)\n                        ? merge(item.exist, item.option, true)\n                        : (item.exist || item.option);\n                });\n            }\n        });\n    }\n\n    module.exports = OptionManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/OptionManager.js\n// module id = 735\n// module chunks = 0 1 2","\n    var platform = '';\n    // Navigator not exists in node\n    if (typeof navigator !== 'undefined') {\n        platform = navigator.platform || '';\n    }\n    module.exports = {\n        // 全图默认背景\n        // backgroundColor: 'rgba(0,0,0,0)',\n\n        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n        // 浅色\n        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n        // 深色\n        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\n\n        // 默认需要 Grid 配置项\n        // grid: {},\n        // 主题，主题\n        textStyle: {\n            // color: '#000',\n            // decoration: 'none',\n            // PENDING\n            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n            // fontFamily: 'Arial, Verdana, sans-serif',\n            fontSize: 12,\n            fontStyle: 'normal',\n            fontWeight: 'normal'\n        },\n\n        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n        // Default is source-over\n        blendMode: null,\n\n        animation: 'auto',\n        animationDuration: 1000,\n        animationDurationUpdate: 300,\n        animationEasing: 'exponentialOut',\n        animationEasingUpdate: 'cubicOut',\n\n        animationThreshold: 2000,\n        // Configuration for progressive/incremental rendering\n        progressiveThreshold: 3000,\n        progressive: 400,\n\n        // Threshold of if use single hover layer to optimize.\n        // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n        // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n        // which is unexpected.\n        // see example <echarts/test/heatmap-large.html>.\n        hoverLayerThreshold: 3000,\n\n        // See: module:echarts/scale/Time\n        useUTC: false\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/globalDefault.js\n// module id = 736\n// module chunks = 0 1 2","\n    module.exports = {\n        getAreaStyle: require('./makeStyleMapper')(\n            [\n                ['fill', 'color'],\n                ['shadowBlur'],\n                ['shadowOffsetX'],\n                ['shadowOffsetY'],\n                ['opacity'],\n                ['shadowColor']\n            ]\n        )\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/areaStyle.js\n// module id = 737\n// module chunks = 0 1 2","\n\n    module.exports = {\n        getBoxLayoutParams: function () {\n            return {\n                left: this.get('left'),\n                top: this.get('top'),\n                right: this.get('right'),\n                bottom: this.get('bottom'),\n                width: this.get('width'),\n                height: this.get('height')\n            };\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/boxLayout.js\n// module id = 738\n// module chunks = 0 1 2","\n    var getItemStyle = require('./makeStyleMapper')(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor'],\n            ['textPosition'],\n            ['textAlign']\n        ]\n    );\n    module.exports = {\n        getItemStyle: function (excludes, includes) {\n            var style = getItemStyle.call(this, excludes, includes);\n            var lineDash = this.getBorderLineDash();\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getBorderLineDash: function () {\n            var lineType = this.get('borderType');\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/itemStyle.js\n// module id = 739\n// module chunks = 0 1 2","\n    var getLineStyle = require('./makeStyleMapper')(\n        [\n            ['lineWidth', 'width'],\n            ['stroke', 'color'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getLineStyle: function (excludes) {\n            var style = getLineStyle.call(this, excludes);\n            var lineDash = this.getLineDash(style.lineWidth);\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getLineDash: function (lineWidth) {\n            if (lineWidth == null) {\n                lineWidth = 1;\n            }\n            var lineType = this.get('type');\n            var dotSize = Math.max(lineWidth, 2);\n            var dashSize = lineWidth * 4;\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize]);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/lineStyle.js\n// module id = 740\n// module chunks = 0 1 2","\n\n    var textContain = require('zrender/lib/contain/text');\n    var graphicUtil = require('../../util/graphic');\n\n    var PATH_COLOR = ['textStyle', 'color'];\n\n    module.exports = {\n        /**\n         * Get color property or get color from option.textStyle.color\n         * @param {boolean} [noDefault]\n         * @return {string}\n         */\n        getTextColor: function (noDefault) {\n            var ecModel = this.ecModel;\n            return this.getShallow('color')\n                || (\n                    (!noDefault && ecModel) ? ecModel.get(PATH_COLOR) : null\n                );\n        },\n\n        /**\n         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n         * @return {string}\n         */\n        getFont: function () {\n            return graphicUtil.getFont({\n                fontStyle: this.getShallow('fontStyle'),\n                fontWeight: this.getShallow('fontWeight'),\n                fontSize: this.getShallow('fontSize'),\n                fontFamily: this.getShallow('fontFamily')\n            }, this.ecModel);\n        },\n\n        getTextRect: function (text) {\n            return textContain.getBoundingRect(\n                text,\n                this.getFont(),\n                this.getShallow('align'),\n                this.getShallow('verticalAlign') || this.getShallow('baseline'),\n                this.getShallow('padding'),\n                this.getShallow('rich'),\n                this.getShallow('truncateText')\n            );\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/textStyle.js\n// module id = 741\n// module chunks = 0 1 2","// Compatitable with 2.0\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var compatStyle = require('./helper/compatStyle');\n\n    function get(opt, path) {\n        path = path.split(',');\n        var obj = opt;\n        for (var i = 0; i < path.length; i++) {\n            obj = obj && obj[path[i]];\n            if (obj == null) {\n                break;\n            }\n        }\n        return obj;\n    }\n\n    function set(opt, path, val, overwrite) {\n        path = path.split(',');\n        var obj = opt;\n        var key;\n        for (var i = 0; i < path.length - 1; i++) {\n            key = path[i];\n            if (obj[key] == null) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        }\n        if (overwrite || obj[path[i]] == null) {\n            obj[path[i]] = val;\n        }\n    }\n\n    function compatLayoutProperties(option) {\n        each(LAYOUT_PROPERTIES, function (prop) {\n            if (prop[0] in option && !(prop[1] in option)) {\n                option[prop[1]] = option[prop[0]];\n            }\n        });\n    }\n\n    var LAYOUT_PROPERTIES = [\n        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\n    ];\n\n    var COMPATITABLE_COMPONENTS = [\n        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\n    ];\n\n    var COMPATITABLE_SERIES = [\n        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\n        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\n        'pie', 'radar', 'sankey', 'scatter', 'treemap'\n    ];\n\n    var each = zrUtil.each;\n\n    module.exports = function (option) {\n        compatStyle(option);\n\n        var series = option.series;\n        each(zrUtil.isArray(series) ? series : [series], function (seriesOpt) {\n            if (!zrUtil.isObject(seriesOpt)) {\n                return;\n            }\n\n            var seriesType = seriesOpt.type;\n\n            if (seriesType === 'pie' || seriesType === 'gauge') {\n                if (seriesOpt.clockWise != null) {\n                    seriesOpt.clockwise = seriesOpt.clockWise;\n                }\n            }\n            if (seriesType === 'gauge') {\n                var pointerColor = get(seriesOpt, 'pointer.color');\n                pointerColor != null\n                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n            }\n\n            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n                    compatLayoutProperties(seriesOpt);\n                    break;\n                }\n            }\n        });\n\n        // dataRange has changed to visualMap\n        if (option.dataRange) {\n            option.visualMap = option.dataRange;\n        }\n\n        each(COMPATITABLE_COMPONENTS, function (componentName) {\n            var options = option[componentName];\n            if (options) {\n                if (!zrUtil.isArray(options)) {\n                    options = [options];\n                }\n                each(options, function (option) {\n                    compatLayoutProperties(option);\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/preprocessor/backwardCompat.js\n// module id = 742\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var POSSIBLE_STYLES = [\n        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\n        'chordStyle', 'label', 'labelLine'\n    ];\n\n    function compatItemStyle(opt) {\n        var itemStyleOpt = opt && opt.itemStyle;\n        if (!itemStyleOpt) {\n            return;\n        }\n        for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n            var styleName = POSSIBLE_STYLES[i];\n            var normalItemStyleOpt = itemStyleOpt.normal;\n            var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n            if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n                opt[styleName] = opt[styleName] || {};\n                if (!opt[styleName].normal) {\n                    opt[styleName].normal = normalItemStyleOpt[styleName];\n                }\n                else {\n                    zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n                }\n                normalItemStyleOpt[styleName] = null;\n            }\n            if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n                opt[styleName] = opt[styleName] || {};\n                if (!opt[styleName].emphasis) {\n                    opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n                }\n                else {\n                    zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n                }\n                emphasisItemStyleOpt[styleName] = null;\n            }\n        }\n    }\n\n    function compatTextStyle(opt, propName) {\n        var labelOptSingle = isObject(opt) && opt[propName];\n        var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n        if (textStyle) {\n            for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n                var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n                if (textStyle.hasOwnProperty(propName)) {\n                    labelOptSingle[propName] = textStyle[propName];\n                }\n            }\n        }\n    }\n\n    function compatLabelTextStyle(labelOpt) {\n        if (isObject(labelOpt)) {\n            compatTextStyle(labelOpt, 'normal');\n            compatTextStyle(labelOpt, 'emphasis');\n        }\n    }\n\n    function processSeries(seriesOpt) {\n        if (!isObject(seriesOpt)) {\n            return;\n        }\n\n        compatItemStyle(seriesOpt);\n        compatLabelTextStyle(seriesOpt.label);\n        // treemap\n        compatLabelTextStyle(seriesOpt.upperLabel);\n        // graph\n        compatLabelTextStyle(seriesOpt.edgeLabel);\n\n        var markPoint = seriesOpt.markPoint;\n        compatItemStyle(markPoint);\n        compatLabelTextStyle(markPoint && markPoint.label);\n\n        var markLine = seriesOpt.markLine;\n        compatItemStyle(seriesOpt.markLine);\n        compatLabelTextStyle(markLine && markLine.label);\n\n        var markArea = seriesOpt.markArea;\n        compatLabelTextStyle(markArea && markArea.label);\n\n        // For gauge\n        compatTextStyle(seriesOpt, 'axisLabel');\n        compatTextStyle(seriesOpt, 'title');\n        compatTextStyle(seriesOpt, 'detail');\n\n        var data = seriesOpt.data;\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                compatItemStyle(data[i]);\n                compatLabelTextStyle(data[i] && data[i].label);\n            }\n            // mark point data\n            var markPoint = seriesOpt.markPoint;\n            if (markPoint && markPoint.data) {\n                var mpData = markPoint.data;\n                for (var i = 0; i < mpData.length; i++) {\n                    compatItemStyle(mpData[i]);\n                    compatLabelTextStyle(mpData[i] && mpData[i].label);\n                }\n            }\n            // mark line data\n            var markLine = seriesOpt.markLine;\n            if (markLine && markLine.data) {\n                var mlData = markLine.data;\n                for (var i = 0; i < mlData.length; i++) {\n                    if (zrUtil.isArray(mlData[i])) {\n                        compatItemStyle(mlData[i][0]);\n                        compatLabelTextStyle(mlData[i][0] && mlData[i][0].label);\n                        compatItemStyle(mlData[i][1]);\n                        compatLabelTextStyle(mlData[i][1] && mlData[i][1].label);\n                    }\n                    else {\n                        compatItemStyle(mlData[i]);\n                        compatLabelTextStyle(mlData[i] && mlData[i].label);\n                    }\n                }\n            }\n        }\n    }\n\n    function toArr(o) {\n        return zrUtil.isArray(o) ? o : o ? [o] : [];\n    }\n\n    function toObj(o) {\n        return (zrUtil.isArray(o) ? o[0] : o) || {};\n    }\n\n    module.exports = function (option) {\n        each(toArr(option.series), function (seriesOpt) {\n            isObject(seriesOpt) && processSeries(seriesOpt);\n        });\n\n        each(\n            ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'],\n            function (axisName) {\n                each(toArr(option[axisName]), function (axisOpt) {\n                    if (axisOpt) {\n                        compatTextStyle(axisOpt, 'axisLabel');\n                        compatTextStyle(axisOpt.axisPointer, 'label');\n                    }\n                });\n            }\n        );\n\n        each(toArr(option.parallel), function (parallelOpt) {\n            var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n            compatTextStyle(parallelAxisDefault, 'axisLabel');\n            compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n        });\n\n        each(toArr(option.calendar), function (calendarOpt) {\n            compatTextStyle(calendarOpt, 'dayLabel');\n            compatTextStyle(calendarOpt, 'monthLabel');\n            compatTextStyle(calendarOpt, 'yearLabel');\n        });\n\n        // radar.name.textStyle\n        each(toArr(option.radar), function (radarOpt) {\n            compatTextStyle(radarOpt, 'name');\n        });\n\n        each(toArr(option.geo), function (geoOpt) {\n            isObject(geoOpt) && compatLabelTextStyle(geoOpt.label);\n        });\n\n        compatLabelTextStyle(toObj(option.timeline).label);\n        compatTextStyle(toObj(option.axisPointer), 'label');\n        compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/preprocessor/helper/compatStyle.js\n// module id = 743\n// module chunks = 0 1 2","\n    var samplers = {\n        average: function (frame) {\n            var sum = 0;\n            var count = 0;\n            for (var i = 0; i < frame.length; i++) {\n                if (!isNaN(frame[i])) {\n                    sum += frame[i];\n                    count++;\n                }\n            }\n            // Return NaN if count is 0\n            return count === 0 ? NaN : sum / count;\n        },\n        sum: function (frame) {\n            var sum = 0;\n            for (var i = 0; i < frame.length; i++) {\n                // Ignore NaN\n                sum += frame[i] || 0;\n            }\n            return sum;\n        },\n        max: function (frame) {\n            var max = -Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] > max && (max = frame[i]);\n            }\n            return max;\n        },\n        min: function (frame) {\n            var min = Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] < min && (min = frame[i]);\n            }\n            return min;\n        },\n        // TODO\n        // Median\n        nearest: function (frame) {\n            return frame[0];\n        }\n    };\n\n    var indexSampler = function (frame, value) {\n        return Math.round(frame.length / 2);\n    };\n    module.exports = function (seriesType, ecModel, api) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var sampling = seriesModel.get('sampling');\n            var coordSys = seriesModel.coordinateSystem;\n            // Only cartesian2d support down sampling\n            if (coordSys.type === 'cartesian2d' && sampling) {\n                var baseAxis = coordSys.getBaseAxis();\n                var valueAxis = coordSys.getOtherAxis(baseAxis);\n                var extent = baseAxis.getExtent();\n                // Coordinste system has been resized\n                var size = extent[1] - extent[0];\n                var rate = Math.round(data.count() / size);\n                if (rate > 1) {\n                    var sampler;\n                    if (typeof sampling === 'string') {\n                        sampler = samplers[sampling];\n                    }\n                    else if (typeof sampling === 'function') {\n                        sampler = sampling;\n                    }\n                    if (sampler) {\n                        data = data.downSample(\n                            valueAxis.dim, 1 / rate, sampler, indexSampler\n                        );\n                        seriesModel.setData(data);\n                    }\n                }\n            }\n        }, this);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/processor/dataSample.js\n// module id = 744\n// module chunks = 0 1 2","/**\n * Log scale\n * @module echarts/scale/Log\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Scale = require('./Scale');\n    var numberUtil = require('../util/number');\n\n    // Use some method of IntervalScale\n    var IntervalScale = require('./Interval');\n\n    var scaleProto = Scale.prototype;\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n    var mathPow = Math.pow;\n\n    var mathLog = Math.log;\n\n    var LogScale = Scale.extend({\n\n        type: 'log',\n\n        base: 10,\n\n        $constructor: function () {\n            Scale.apply(this, arguments);\n            this._originalScale = new IntervalScale();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            var originalScale = this._originalScale;\n            var extent = this._extent;\n            var originalExtent = originalScale.getExtent();\n\n            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n                var powVal = numberUtil.round(mathPow(this.base, val));\n\n                // Fix #4158\n                powVal = (val === extent[0] && originalScale.__fixMin)\n                    ? fixRoundingError(powVal, originalExtent[0])\n                    : powVal;\n                powVal = (val === extent[1] && originalScale.__fixMax)\n                    ? fixRoundingError(powVal, originalExtent[1])\n                    : powVal;\n\n                return powVal;\n            }, this);\n        },\n\n        /**\n         * @param {number} val\n         * @return {string}\n         */\n        getLabel: intervalScaleProto.getLabel,\n\n        /**\n         * @param  {number} val\n         * @return {number}\n         */\n        scale: function (val) {\n            val = scaleProto.scale.call(this, val);\n            return mathPow(this.base, val);\n        },\n\n        /**\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var base = this.base;\n            start = mathLog(start) / mathLog(base);\n            end = mathLog(end) / mathLog(base);\n            intervalScaleProto.setExtent.call(this, start, end);\n        },\n\n        /**\n         * @return {number} end\n         */\n        getExtent: function () {\n            var base = this.base;\n            var extent = scaleProto.getExtent.call(this);\n            extent[0] = mathPow(base, extent[0]);\n            extent[1] = mathPow(base, extent[1]);\n\n            // Fix #4158\n            var originalScale = this._originalScale;\n            var originalExtent = originalScale.getExtent();\n            originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n            originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n\n            return extent;\n        },\n\n        /**\n         * @param  {Array.<number>} extent\n         */\n        unionExtent: function (extent) {\n            this._originalScale.unionExtent(extent);\n\n            var base = this.base;\n            extent[0] = mathLog(extent[0]) / mathLog(base);\n            extent[1] = mathLog(extent[1]) / mathLog(base);\n            scaleProto.unionExtent.call(this, extent);\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, true, function (val) {\n                return val > 0;\n            }));\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         * @param  {number} [approxTickNum = 10] Given approx tick number\n         */\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (span === Infinity || span <= 0) {\n                return;\n            }\n\n            var interval = numberUtil.quantity(span);\n            var err = approxTickNum / span * interval;\n\n            // Filter ticks to get closer to the desired count.\n            if (err <= 0.5) {\n                interval *= 10;\n            }\n\n            // Interval should be integer\n            while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n                interval *= 10;\n            }\n\n            var niceExtent = [\n                numberUtil.round(mathCeil(extent[0] / interval) * interval),\n                numberUtil.round(mathFloor(extent[1] / interval) * interval)\n            ];\n\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @override\n         */\n        niceExtent: function (opt) {\n            intervalScaleProto.niceExtent.call(this, opt);\n\n            var originalScale = this._originalScale;\n            originalScale.__fixMin = opt.fixMin;\n            originalScale.__fixMax = opt.fixMax;\n        }\n\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        LogScale.prototype[methodName] = function (val) {\n            val = mathLog(val) / mathLog(this.base);\n            return scaleProto[methodName].call(this, val);\n        };\n    });\n\n    LogScale.create = function () {\n        return new LogScale();\n    };\n\n    function fixRoundingError(val, originalVal) {\n        return roundingErrorFix(val, getPrecisionSafe(originalVal));\n    }\n\n    module.exports = LogScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Log.js\n// module id = 745\n// module chunks = 0 1 2","/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n\n// FIXME only one data\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Scale = require('./Scale');\n\n    var scaleProto = Scale.prototype;\n\n    var OrdinalScale = Scale.extend({\n\n        type: 'ordinal',\n\n        init: function (data, extent) {\n            this._data = data;\n            this._extent = extent || [0, data.length - 1];\n        },\n\n        parse: function (val) {\n            return typeof val === 'string'\n                ? zrUtil.indexOf(this._data, val)\n                // val might be float.\n                : Math.round(val);\n        },\n\n        contain: function (rank) {\n            rank = this.parse(rank);\n            return scaleProto.contain.call(this, rank)\n                && this._data[rank] != null;\n        },\n\n        /**\n         * Normalize given rank or name to linear [0, 1]\n         * @param {number|string} [val]\n         * @return {number}\n         */\n        normalize: function (val) {\n            return scaleProto.normalize.call(this, this.parse(val));\n        },\n\n        scale: function (val) {\n            return Math.round(scaleProto.scale.call(this, val));\n        },\n\n        /**\n         * @return {Array}\n         */\n        getTicks: function () {\n            var ticks = [];\n            var extent = this._extent;\n            var rank = extent[0];\n\n            while (rank <= extent[1]) {\n                ticks.push(rank);\n                rank++;\n            }\n\n            return ticks;\n        },\n\n        /**\n         * Get item on rank n\n         * @param {number} n\n         * @return {string}\n         */\n        getLabel: function (n) {\n            return this._data[n];\n        },\n\n        /**\n         * @return {number}\n         */\n        count: function () {\n            return this._extent[1] - this._extent[0] + 1;\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, false));\n        },\n\n        niceTicks: zrUtil.noop,\n        niceExtent: zrUtil.noop\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    OrdinalScale.create = function () {\n        return new OrdinalScale();\n    };\n\n    module.exports = OrdinalScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Ordinal.js\n// module id = 746\n// module chunks = 0 1 2","/**\n * Interval scale\n * @module echarts/coord/scale/Time\n */\n\n\n\n    // [About UTC and local time zone]:\n    // In most cases, `number.parseDate` will treat input data string as local time\n    // (except time zone is specified in time string). And `format.formateTime` returns\n    // local time by default. option.useUTC is false by default. This design have\n    // concidered these common case:\n    // (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n    // in local time by default.\n    // (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n    // as its original time, without any time difference.\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('../util/number');\n    var formatUtil = require('../util/format');\n    var scaleHelper = require('./helper');\n\n    var IntervalScale = require('./Interval');\n\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var mathCeil = Math.ceil;\n    var mathFloor = Math.floor;\n    var ONE_SECOND = 1000;\n    var ONE_MINUTE = ONE_SECOND * 60;\n    var ONE_HOUR = ONE_MINUTE * 60;\n    var ONE_DAY = ONE_HOUR * 24;\n\n    // FIXME 公用？\n    var bisect = function (a, x, lo, hi) {\n        while (lo < hi) {\n            var mid = lo + hi >>> 1;\n            if (a[mid][2] < x) {\n                lo = mid + 1;\n            }\n            else {\n                hi  = mid;\n            }\n        }\n        return lo;\n    };\n\n    /**\n     * @alias module:echarts/coord/scale/Time\n     * @constructor\n     */\n    var TimeScale = IntervalScale.extend({\n        type: 'time',\n\n        /**\n         * @override\n         */\n        getLabel: function (val) {\n            var stepLvl = this._stepLvl;\n\n            var date = new Date(val);\n\n            return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n        },\n\n        /**\n         * @override\n         */\n        niceExtent: function (opt) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                // Expand extent\n                extent[0] -= ONE_DAY;\n                extent[1] += ONE_DAY;\n            }\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (extent[1] === -Infinity && extent[0] === Infinity) {\n                var d = new Date();\n                extent[1] = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                extent[0] = extent[1] - ONE_DAY;\n            }\n\n            this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!opt.fixMin) {\n                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!opt.fixMax) {\n                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n            }\n        },\n\n        /**\n         * @override\n         */\n        niceTicks: function (approxTickNum, minInterval, maxInterval) {\n            var timezoneOffset = this.getSetting('useUTC')\n                ? 0 : numberUtil.getTimezoneOffset() * 60 * 1000;\n            approxTickNum = approxTickNum || 10;\n\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            var approxInterval = span / approxTickNum;\n\n            if (minInterval != null && approxInterval < minInterval) {\n                approxInterval = minInterval;\n            }\n            if (maxInterval != null && approxInterval > maxInterval) {\n                approxInterval = maxInterval;\n            }\n\n            var scaleLevelsLen = scaleLevels.length;\n            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n\n            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n            var interval = level[2];\n            // Same with interval scale if span is much larger than 1 year\n            if (level[0] === 'year') {\n                var yearSpan = span / interval;\n\n                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n                // var niceYearSpan = numberUtil.nice(yearSpan, false);\n                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n\n                interval *= yearStep;\n            }\n\n            var niceExtent = [\n                Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset),\n                Math.round(mathFloor((extent[1] - timezoneOffset)/ interval) * interval + timezoneOffset)\n            ];\n\n            scaleHelper.fixExtent(niceExtent, extent);\n\n            this._stepLvl = level;\n            // Interval will be used in getTicks\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        parse: function (val) {\n            // val might be float.\n            return +numberUtil.parseDate(val);\n        }\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        TimeScale.prototype[methodName] = function (val) {\n            return intervalScaleProto[methodName].call(this, this.parse(val));\n        };\n    });\n\n    // Steps from d3\n    var scaleLevels = [\n        // Format       step    interval\n        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\n        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\n        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\n        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\n        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\n        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\n        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\n        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\n        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\n        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\n        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\n        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\n        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\n        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\n        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\n        ['week',        7,      ONE_DAY * 7],        // 7d\n        ['month',       1,      ONE_DAY * 31],       // 1M\n        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\n        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\n        ['year',        1,      ONE_DAY * 380]       // 1Y\n    ];\n\n    /**\n     * @param {module:echarts/model/Model}\n     * @return {module:echarts/scale/Time}\n     */\n    TimeScale.create = function (model) {\n        return new TimeScale({useUTC: model.ecModel.get('useUTC')});\n    };\n\n    module.exports = TimeScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Time.js\n// module id = 747\n// module chunks = 0 1 2","\n\n    var Group = require('zrender/lib/container/Group');\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n\n    var Component = function () {\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewComponent');\n    };\n\n    Component.prototype = {\n\n        constructor: Component,\n\n        init: function (ecModel, api) {},\n\n        render: function (componentModel, ecModel, api, payload) {},\n\n        dispose: function () {}\n\n    };\n\n    var componentProto = Component.prototype;\n    componentProto.updateView\n        = componentProto.updateLayout\n        = componentProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            // Do nothing;\n        };\n    // Enable Component.extend.\n    clazzUtil.enableClassExtend(Component);\n\n    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\n\n    module.exports = Component;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/view/Component.js\n// module id = 748\n// module chunks = 0 1 2","\n    var Gradient = require('zrender/lib/graphic/Gradient');\n    module.exports = function (ecModel) {\n        function encodeColor(seriesModel) {\n            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n            var data = seriesModel.getData();\n            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\n\n            // FIXME Set color function or use the platte color\n            data.setVisual('color', color);\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof color === 'function' && !(color instanceof Gradient)) {\n                    data.each(function (idx) {\n                        data.setItemVisual(\n                            idx, 'color', color(seriesModel.getDataParams(idx))\n                        );\n                    });\n                }\n\n                // itemStyle in each data item\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var color = itemModel.get(colorAccessPath, true);\n                    if (color != null) {\n                        data.setItemVisual(idx, 'color', color);\n                    }\n                });\n            }\n        }\n        ecModel.eachRawSeries(encodeColor);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/visual/seriesColor.js\n// module id = 749\n// module chunks = 0 1 2","'use strict';\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\n\n\n    var util = require('./core/util');\n    var Draggable = require('./mixin/Draggable');\n\n    var Eventful = require('./mixin/Eventful');\n\n    var SILENT = 'silent';\n\n    function makeEventPacket(eveType, targetInfo, event) {\n        return {\n            type: eveType,\n            event: event,\n            // target can only be an element that is not silent.\n            target: targetInfo.target,\n            // topTarget can be a silent element.\n            topTarget: targetInfo.topTarget,\n            cancelBubble: false,\n            offsetX: event.zrX,\n            offsetY: event.zrY,\n            gestureEvent: event.gestureEvent,\n            pinchX: event.pinchX,\n            pinchY: event.pinchY,\n            pinchScale: event.pinchScale,\n            wheelDelta: event.zrDelta,\n            zrByTouch: event.zrByTouch\n        };\n    }\n\n    function EmptyProxy () {}\n    EmptyProxy.prototype.dispose = function () {};\n\n    var handlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n    /**\n     * @alias module:zrender/Handler\n     * @constructor\n     * @extends module:zrender/mixin/Eventful\n     * @param {module:zrender/Storage} storage Storage instance.\n     * @param {module:zrender/Painter} painter Painter instance.\n     * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n     * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n     */\n    var Handler = function(storage, painter, proxy, painterRoot) {\n        Eventful.call(this);\n\n        this.storage = storage;\n\n        this.painter = painter;\n\n        this.painterRoot = painterRoot;\n\n        proxy = proxy || new EmptyProxy();\n\n        /**\n         * Proxy of event. can be Dom, WebGLSurface, etc.\n         */\n        this.proxy = proxy;\n\n        // Attach handler\n        proxy.handler = this;\n\n        /**\n         * {target, topTarget, x, y}\n         * @private\n         * @type {Object}\n         */\n        this._hovered = {};\n\n        /**\n         * @private\n         * @type {Date}\n         */\n        this._lastTouchMoment;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastX;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastY;\n\n\n        Draggable.call(this);\n\n        util.each(handlerNames, function (name) {\n            proxy.on && proxy.on(name, this[name], this);\n        }, this);\n    };\n\n    Handler.prototype = {\n\n        constructor: Handler,\n\n        mousemove: function (event) {\n            var x = event.zrX;\n            var y = event.zrY;\n\n            var lastHovered = this._hovered;\n            var lastHoveredTarget = lastHovered.target;\n\n            // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n            // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n            // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n            // See #6198.\n            if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n                lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n                lastHoveredTarget = lastHovered.target;\n            }\n\n            var hovered = this._hovered = this.findHover(x, y);\n            var hoveredTarget = hovered.target;\n\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default');\n\n            // Mouse out on previous hovered element\n            if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(lastHovered, 'mouseout', event);\n            }\n\n            // Mouse moving on one element\n            this.dispatchToElement(hovered, 'mousemove', event);\n\n            // Mouse over on a new element\n            if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(hovered, 'mouseover', event);\n            }\n        },\n\n        mouseout: function (event) {\n            this.dispatchToElement(this._hovered, 'mouseout', event);\n\n            // There might be some doms created by upper layer application\n            // at the same level of painter.getViewportRoot() (e.g., tooltip\n            // dom created by echarts), where 'globalout' event should not\n            // be triggered when mouse enters these doms. (But 'mouseout'\n            // should be triggered at the original hovered element as usual).\n            var element = event.toElement || event.relatedTarget;\n            var innerDom;\n            do {\n                element = element && element.parentNode;\n            }\n            while (element && element.nodeType != 9 && !(\n                innerDom = element === this.painterRoot\n            ));\n\n            !innerDom && this.trigger('globalout', {event: event});\n        },\n\n        /**\n         * Resize\n         */\n        resize: function (event) {\n            this._hovered = {};\n        },\n\n        /**\n         * Dispatch event\n         * @param {string} eventName\n         * @param {event=} eventArgs\n         */\n        dispatch: function (eventName, eventArgs) {\n            var handler = this[eventName];\n            handler && handler.call(this, eventArgs);\n        },\n\n        /**\n         * Dispose\n         */\n        dispose: function () {\n\n            this.proxy.dispose();\n\n            this.storage =\n            this.proxy =\n            this.painter = null;\n        },\n\n        /**\n         * 设置默认的cursor style\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(cursorStyle);\n        },\n\n        /**\n         * 事件分发代理\n         *\n         * @private\n         * @param {Object} targetInfo {target, topTarget} 目标图形元素\n         * @param {string} eventName 事件名称\n         * @param {Object} event 事件对象\n         */\n        dispatchToElement: function (targetInfo, eventName, event) {\n            targetInfo = targetInfo || {};\n            var el = targetInfo.target;\n            if (el && el.silent) {\n                return;\n            }\n            var eventHandler = 'on' + eventName;\n            var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n            while (el) {\n                el[eventHandler]\n                    && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n\n                el.trigger(eventName, eventPacket);\n\n                el = el.parent;\n\n                if (eventPacket.cancelBubble) {\n                    break;\n                }\n            }\n\n            if (!eventPacket.cancelBubble) {\n                // 冒泡到顶级 zrender 对象\n                this.trigger(eventName, eventPacket);\n                // 分发事件到用户自定义层\n                // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n                this.painter && this.painter.eachOtherLayer(function (layer) {\n                    if (typeof(layer[eventHandler]) == 'function') {\n                        layer[eventHandler].call(layer, eventPacket);\n                    }\n                    if (layer.trigger) {\n                        layer.trigger(eventName, eventPacket);\n                    }\n                });\n            }\n        },\n\n        /**\n         * @private\n         * @param {number} x\n         * @param {number} y\n         * @param {module:zrender/graphic/Displayable} exclude\n         * @return {model:zrender/Element}\n         * @method\n         */\n        findHover: function(x, y, exclude) {\n            var list = this.storage.getDisplayList();\n            var out = {x: x, y: y};\n\n            for (var i = list.length - 1; i >= 0 ; i--) {\n                var hoverCheckResult;\n                if (list[i] !== exclude\n                    // getDisplayList may include ignored item in VML mode\n                    && !list[i].ignore\n                    && (hoverCheckResult = isHover(list[i], x, y))\n                ) {\n                    !out.topTarget && (out.topTarget = list[i]);\n                    if (hoverCheckResult !== SILENT) {\n                        out.target = list[i];\n                        break;\n                    }\n                }\n            }\n\n            return out;\n        }\n    };\n\n    // Common handlers\n    util.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        Handler.prototype[name] = function (event) {\n            // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n            var hovered = this.findHover(event.zrX, event.zrY);\n            var hoveredTarget = hovered.target;\n\n            if (name === 'mousedown') {\n                this._downel = hoveredTarget;\n                // In case click triggered before mouseup\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'mosueup') {\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'click') {\n                if (this._downel !== this._upel) {\n                    return;\n                }\n            }\n\n            this.dispatchToElement(hovered, name, event);\n        };\n    });\n\n    function isHover(displayable, x, y) {\n        if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n            var el = displayable;\n            var isSilent;\n            while (el) {\n                // If clipped by ancestor.\n                // FIXME: If clipPath has neither stroke nor fill,\n                // el.clipPath.contain(x, y) will always return false.\n                if (el.clipPath && !el.clipPath.contain(x, y))  {\n                    return false;\n                }\n                if (el.silent) {\n                    isSilent = true;\n                }\n                el = el.parent;\n            }\n            return isSilent ? SILENT : true;\n        }\n\n        return false;\n    }\n\n    util.mixin(Handler, Eventful);\n    util.mixin(Handler, Draggable);\n\n    module.exports = Handler;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Handler.js\n// module id = 751\n// module chunks = 0 1 2","/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var util = require('./core/util');\n    var config = require('./config');\n    var Style = require('./graphic/Style');\n    var Pattern = require('./graphic/Pattern');\n\n    function returnFalse() {\n        return false;\n    }\n\n    /**\n     * 创建dom\n     *\n     * @inner\n     * @param {string} id dom id 待用\n     * @param {string} type dom type，such as canvas, div etc.\n     * @param {Painter} painter painter instance\n     * @param {number} number\n     */\n    function createDom(id, type, painter, dpr) {\n        var newDom = document.createElement(type);\n        var width = painter.getWidth();\n        var height = painter.getHeight();\n\n        var newDomStyle = newDom.style;\n        // 没append呢，请原谅我这样写，清晰~\n        newDomStyle.position = 'absolute';\n        newDomStyle.left = 0;\n        newDomStyle.top = 0;\n        newDomStyle.width = width + 'px';\n        newDomStyle.height = height + 'px';\n        newDom.width = width * dpr;\n        newDom.height = height * dpr;\n\n        // id不作为索引用，避免可能造成的重名，定义为私有属性\n        newDom.setAttribute('data-zr-dom-id', id);\n        return newDom;\n    }\n\n    /**\n     * @alias module:zrender/Layer\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @param {string} id\n     * @param {module:zrender/Painter} painter\n     * @param {number} [dpr]\n     */\n    var Layer = function(id, painter, dpr) {\n        var dom;\n        dpr = dpr || config.devicePixelRatio;\n        if (typeof id === 'string') {\n            dom = createDom(id, 'canvas', painter, dpr);\n        }\n        // Not using isDom because in node it will return false\n        else if (util.isObject(id)) {\n            dom = id;\n            id = dom.id;\n        }\n        this.id = id;\n        this.dom = dom;\n\n        var domStyle = dom.style;\n        if (domStyle) { // Not in node\n            dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n            domStyle['-webkit-user-select'] = 'none';\n            domStyle['user-select'] = 'none';\n            domStyle['-webkit-touch-callout'] = 'none';\n            domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n            domStyle['padding'] = 0;\n            domStyle['margin'] = 0;\n            domStyle['border-width'] = 0;\n        }\n\n        this.domBack = null;\n        this.ctxBack = null;\n\n        this.painter = painter;\n\n        this.config = null;\n\n        // Configs\n        /**\n         * 每次清空画布的颜色\n         * @type {string}\n         * @default 0\n         */\n        this.clearColor = 0;\n        /**\n         * 是否开启动态模糊\n         * @type {boolean}\n         * @default false\n         */\n        this.motionBlur = false;\n        /**\n         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         * @type {number}\n         * @default 0.7\n         */\n        this.lastFrameAlpha = 0.7;\n\n        /**\n         * Layer dpr\n         * @type {number}\n         */\n        this.dpr = dpr;\n    };\n\n    Layer.prototype = {\n\n        constructor: Layer,\n\n        elCount: 0,\n\n        __dirty: true,\n\n        initContext: function () {\n            this.ctx = this.dom.getContext('2d');\n            this.ctx.__currentValues = {};\n            this.ctx.dpr = this.dpr;\n        },\n\n        createBackBuffer: function () {\n            var dpr = this.dpr;\n\n            this.domBack = createDom('back-' + this.id, 'canvas', this.painter, dpr);\n            this.ctxBack = this.domBack.getContext('2d');\n            this.ctxBack.__currentValues = {};\n\n            if (dpr != 1) {\n                this.ctxBack.scale(dpr, dpr);\n            }\n        },\n\n        /**\n         * @param  {number} width\n         * @param  {number} height\n         */\n        resize: function (width, height) {\n            var dpr = this.dpr;\n\n            var dom = this.dom;\n            var domStyle = dom.style;\n            var domBack = this.domBack;\n\n            domStyle.width = width + 'px';\n            domStyle.height = height + 'px';\n\n            dom.width = width * dpr;\n            dom.height = height * dpr;\n\n            if (domBack) {\n                domBack.width = width * dpr;\n                domBack.height = height * dpr;\n\n                if (dpr != 1) {\n                    this.ctxBack.scale(dpr, dpr);\n                }\n            }\n        },\n\n        /**\n         * 清空该层画布\n         * @param {boolean} clearAll Clear all with out motion blur\n         */\n        clear: function (clearAll) {\n            var dom = this.dom;\n            var ctx = this.ctx;\n            var width = dom.width;\n            var height = dom.height;\n\n            var clearColor = this.clearColor;\n            var haveMotionBLur = this.motionBlur && !clearAll;\n            var lastFrameAlpha = this.lastFrameAlpha;\n\n            var dpr = this.dpr;\n\n            if (haveMotionBLur) {\n                if (!this.domBack) {\n                    this.createBackBuffer();\n                }\n\n                this.ctxBack.globalCompositeOperation = 'copy';\n                this.ctxBack.drawImage(\n                    dom, 0, 0,\n                    width / dpr,\n                    height / dpr\n                );\n            }\n\n            ctx.clearRect(0, 0, width, height);\n            if (clearColor) {\n                var clearColorGradientOrPattern;\n                // Gradient\n                if (clearColor.colorStops) {\n                    // Cache canvas gradient\n                    clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n                        x: 0,\n                        y: 0,\n                        width: width,\n                        height: height\n                    });\n\n                    clearColor.__canvasGradient = clearColorGradientOrPattern;\n                }\n                // Pattern\n                else if (clearColor.image) {\n                    clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n                }\n                ctx.save();\n                ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n                ctx.fillRect(0, 0, width, height);\n                ctx.restore();\n            }\n\n            if (haveMotionBLur) {\n                var domBack = this.domBack;\n                ctx.save();\n                ctx.globalAlpha = lastFrameAlpha;\n                ctx.drawImage(domBack, 0, 0, width, height);\n                ctx.restore();\n            }\n        }\n    };\n\n    module.exports = Layer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Layer.js\n// module id = 752\n// module chunks = 0 1 2","'use strict';\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n \n\n    var config = require('./config');\n    var util = require('./core/util');\n    var log = require('./core/log');\n    var BoundingRect = require('./core/BoundingRect');\n    var timsort = require('./core/timsort');\n\n    var Layer = require('./Layer');\n\n    var requestAnimationFrame = require('./animation/requestAnimationFrame');\n\n    // PENDIGN\n    // Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n    //\n    // Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\n    var MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\n    function parseInt10(val) {\n        return parseInt(val, 10);\n    }\n\n    function isLayerValid(layer) {\n        if (!layer) {\n            return false;\n        }\n\n        if (layer.__builtin__) {\n            return true;\n        }\n\n        if (typeof(layer.resize) !== 'function'\n            || typeof(layer.refresh) !== 'function'\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function preProcessLayer(layer) {\n        layer.__unusedCount++;\n    }\n\n    function postProcessLayer(layer) {\n        if (layer.__unusedCount == 1) {\n            layer.clear();\n        }\n    }\n\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var viewRect = new BoundingRect(0, 0, 0, 0);\n    function isDisplayableCulled(el, width, height) {\n        tmpRect.copy(el.getBoundingRect());\n        if (el.transform) {\n            tmpRect.applyTransform(el.transform);\n        }\n        viewRect.width = width;\n        viewRect.height = height;\n        return !tmpRect.intersect(viewRect);\n    }\n\n    function isClipPathChanged(clipPaths, prevClipPaths) {\n        if (clipPaths == prevClipPaths) { // Can both be null or undefined\n            return false;\n        }\n\n        if (!clipPaths || !prevClipPaths || (clipPaths.length !== prevClipPaths.length)) {\n            return true;\n        }\n        for (var i = 0; i < clipPaths.length; i++) {\n            if (clipPaths[i] !== prevClipPaths[i]) {\n                return true;\n            }\n        }\n    }\n\n    function doClip(clipPaths, ctx) {\n        for (var i = 0; i < clipPaths.length; i++) {\n            var clipPath = clipPaths[i];\n\n            clipPath.setTransform(ctx);\n            ctx.beginPath();\n            clipPath.buildPath(ctx, clipPath.shape);\n            ctx.clip();\n            // Transform back\n            clipPath.restoreTransform(ctx);\n        }\n    }\n\n    function createRoot(width, height) {\n        var domRoot = document.createElement('div');\n\n        // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n        domRoot.style.cssText = [\n            'position:relative',\n            'overflow:hidden',\n            'width:' + width + 'px',\n            'height:' + height + 'px',\n            'padding:0',\n            'margin:0',\n            'border-width:0'\n        ].join(';') + ';';\n\n        return domRoot;\n    }\n\n    /**\n     * @alias module:zrender/Painter\n     * @constructor\n     * @param {HTMLElement} root 绘图容器\n     * @param {module:zrender/Storage} storage\n     * @param {Object} opts\n     */\n    var Painter = function (root, storage, opts) {\n        // In node environment using node-canvas\n        var singleCanvas = !root.nodeName // In node ?\n            || root.nodeName.toUpperCase() === 'CANVAS';\n\n        this._opts = opts = util.extend({}, opts || {});\n\n        /**\n         * @type {number}\n         */\n        this.dpr = opts.devicePixelRatio || config.devicePixelRatio;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._singleCanvas = singleCanvas;\n        /**\n         * 绘图容器\n         * @type {HTMLElement}\n         */\n        this.root = root;\n\n        var rootStyle = root.style;\n\n        if (rootStyle) {\n            rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n            rootStyle['-webkit-user-select'] =\n            rootStyle['user-select'] =\n            rootStyle['-webkit-touch-callout'] = 'none';\n\n            root.innerHTML = '';\n        }\n\n        /**\n         * @type {module:zrender/Storage}\n         */\n        this.storage = storage;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        var zlevelList = this._zlevelList = [];\n\n        /**\n         * @type {Object.<string, module:zrender/Layer>}\n         * @private\n         */\n        var layers = this._layers = {};\n\n        /**\n         * @type {Object.<string, Object>}\n         * @type {private}\n         */\n        this._layerConfig = {};\n\n        if (!singleCanvas) {\n            this._width = this._getSize(0);\n            this._height = this._getSize(1);\n\n            var domRoot = this._domRoot = createRoot(\n                this._width, this._height\n            );\n            root.appendChild(domRoot);\n        }\n        else {\n            if (opts.width != null) {\n                root.width = opts.width;\n            }\n            if (opts.height != null) {\n                root.height = opts.height;\n            }\n            // Use canvas width and height directly\n            var width = root.width;\n            var height = root.height;\n            this._width = width;\n            this._height = height;\n\n            // Create layer if only one given canvas\n            // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n            var mainLayer = new Layer(root, this, 1);\n            mainLayer.initContext();\n            // FIXME Use canvas width and height\n            // mainLayer.resize(width, height);\n            layers[0] = mainLayer;\n            zlevelList.push(0);\n\n            this._domRoot = root;\n        }\n\n        // Layers for progressive rendering\n        this._progressiveLayers = [];\n\n        /**\n         * @type {module:zrender/Layer}\n         * @private\n         */\n        this._hoverlayer;\n\n        this._hoverElements = [];\n    };\n\n    Painter.prototype = {\n\n        constructor: Painter,\n\n        /**\n         * If painter use a single canvas\n         * @return {boolean}\n         */\n        isSingleCanvas: function () {\n            return this._singleCanvas;\n        },\n        /**\n         * @return {HTMLDivElement}\n         */\n        getViewportRoot: function () {\n            return this._domRoot;\n        },\n\n        getViewportRootOffset: function () {\n            var viewportRoot = this.getViewportRoot();\n            if (viewportRoot) {\n                return {\n                    offsetLeft: viewportRoot.offsetLeft || 0,\n                    offsetTop: viewportRoot.offsetTop || 0\n                };\n            }\n        },\n\n        /**\n         * 刷新\n         * @param {boolean} [paintAll=false] 强制绘制所有displayable\n         */\n        refresh: function (paintAll) {\n\n            var list = this.storage.getDisplayList(true);\n\n            var zlevelList = this._zlevelList;\n\n            this._paintList(list, paintAll);\n\n            // Paint custum layers\n            for (var i = 0; i < zlevelList.length; i++) {\n                var z = zlevelList[i];\n                var layer = this._layers[z];\n                if (!layer.__builtin__ && layer.refresh) {\n                    layer.refresh();\n                }\n            }\n\n            this.refreshHover();\n\n            if (this._progressiveLayers.length) {\n                this._startProgessive();\n            }\n\n            return this;\n        },\n\n        addHover: function (el, hoverStyle) {\n            if (el.__hoverMir) {\n                return;\n            }\n            var elMirror = new el.constructor({\n                style: el.style,\n                shape: el.shape\n            });\n            elMirror.__from = el;\n            el.__hoverMir = elMirror;\n            elMirror.setStyle(hoverStyle);\n            this._hoverElements.push(elMirror);\n        },\n\n        removeHover: function (el) {\n            var elMirror = el.__hoverMir;\n            var hoverElements = this._hoverElements;\n            var idx = util.indexOf(hoverElements, elMirror);\n            if (idx >= 0) {\n                hoverElements.splice(idx, 1);\n            }\n            el.__hoverMir = null;\n        },\n\n        clearHover: function (el) {\n            var hoverElements = this._hoverElements;\n            for (var i = 0; i < hoverElements.length; i++) {\n                var from = hoverElements[i].__from;\n                if (from) {\n                    from.__hoverMir = null;\n                }\n            }\n            hoverElements.length = 0;\n        },\n\n        refreshHover: function () {\n            var hoverElements = this._hoverElements;\n            var len = hoverElements.length;\n            var hoverLayer = this._hoverlayer;\n            hoverLayer && hoverLayer.clear();\n\n            if (!len) {\n                return;\n            }\n            timsort(hoverElements, this.storage.displayableSortFunc);\n\n            // Use a extream large zlevel\n            // FIXME?\n            if (!hoverLayer) {\n                hoverLayer = this._hoverlayer = this.getLayer(1e5);\n            }\n\n            var scope = {};\n            hoverLayer.ctx.save();\n            for (var i = 0; i < len;) {\n                var el = hoverElements[i];\n                var originalEl = el.__from;\n                // Original el is removed\n                // PENDING\n                if (!(originalEl && originalEl.__zr)) {\n                    hoverElements.splice(i, 1);\n                    originalEl.__hoverMir = null;\n                    len--;\n                    continue;\n                }\n                i++;\n\n                // Use transform\n                // FIXME style and shape ?\n                if (!originalEl.invisible) {\n                    el.transform = originalEl.transform;\n                    el.invTransform = originalEl.invTransform;\n                    el.__clipPaths = originalEl.__clipPaths;\n                    // el.\n                    this._doPaintEl(el, hoverLayer, true, scope);\n                }\n            }\n            hoverLayer.ctx.restore();\n        },\n\n        _startProgessive: function () {\n            var self = this;\n\n            if (!self._furtherProgressive) {\n                return;\n            }\n\n            // Use a token to stop progress steps triggered by\n            // previous zr.refresh calling.\n            var token = self._progressiveToken = +new Date();\n\n            self._progress++;\n            requestAnimationFrame(step);\n\n            function step() {\n                // In case refreshed or disposed\n                if (token === self._progressiveToken && self.storage) {\n\n                    self._doPaintList(self.storage.getDisplayList());\n\n                    if (self._furtherProgressive) {\n                        self._progress++;\n                        requestAnimationFrame(step);\n                    }\n                    else {\n                        self._progressiveToken = -1;\n                    }\n                }\n            }\n        },\n\n        _clearProgressive: function () {\n            this._progressiveToken = -1;\n            this._progress = 0;\n            util.each(this._progressiveLayers, function (layer) {\n                layer.__dirty && layer.clear();\n            });\n        },\n\n        _paintList: function (list, paintAll) {\n\n            if (paintAll == null) {\n                paintAll = false;\n            }\n\n            this._updateLayerStatus(list);\n\n            this._clearProgressive();\n\n            this.eachBuiltinLayer(preProcessLayer);\n\n            this._doPaintList(list, paintAll);\n\n            this.eachBuiltinLayer(postProcessLayer);\n        },\n\n        _doPaintList: function (list, paintAll) {\n            var currentLayer;\n            var currentZLevel;\n            var ctx;\n\n            // var invTransform = [];\n            var scope;\n\n            var progressiveLayerIdx = 0;\n            var currentProgressiveLayer;\n\n            var width = this._width;\n            var height = this._height;\n            var layerProgress;\n            var frame = this._progress;\n            function flushProgressiveLayer(layer) {\n                var dpr = ctx.dpr || 1;\n                ctx.save();\n                ctx.globalAlpha = 1;\n                ctx.shadowBlur = 0;\n                // Avoid layer don't clear in next progressive frame\n                currentLayer.__dirty = true;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n                ctx.restore();\n            }\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n\n                var elFrame = el.__frame;\n\n                // Flush at current context\n                // PENDING\n                if (elFrame < 0 && currentProgressiveLayer) {\n                    flushProgressiveLayer(currentProgressiveLayer);\n                    currentProgressiveLayer = null;\n                }\n\n                // Change draw layer\n                if (currentZLevel !== elZLevel) {\n                    if (ctx) {\n                        ctx.restore();\n                    }\n\n                    // Reset scope\n                    scope = {};\n\n                    // Only 0 zlevel if only has one canvas\n                    currentZLevel = elZLevel;\n                    currentLayer = this.getLayer(currentZLevel);\n\n                    if (!currentLayer.__builtin__) {\n                        log(\n                            'ZLevel ' + currentZLevel\n                            + ' has been used by unkown layer ' + currentLayer.id\n                        );\n                    }\n\n                    ctx = currentLayer.ctx;\n                    ctx.save();\n\n                    // Reset the count\n                    currentLayer.__unusedCount = 0;\n\n                    if (currentLayer.__dirty || paintAll) {\n                        currentLayer.clear();\n                    }\n                }\n\n                if (!(currentLayer.__dirty || paintAll)) {\n                    continue;\n                }\n\n                if (elFrame >= 0) {\n                    // Progressive layer changed\n                    if (!currentProgressiveLayer) {\n                        currentProgressiveLayer = this._progressiveLayers[\n                            Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)\n                        ];\n\n                        currentProgressiveLayer.ctx.save();\n                        currentProgressiveLayer.renderScope = {};\n\n                        if (currentProgressiveLayer\n                            && (currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress)\n                        ) {\n                            // flushProgressiveLayer(currentProgressiveLayer);\n                            // Quick jump all progressive elements\n                            // All progressive element are not dirty, jump over and flush directly\n                            i = currentProgressiveLayer.__nextIdxNotProg - 1;\n                            // currentProgressiveLayer = null;\n                            continue;\n                        }\n\n                        layerProgress = currentProgressiveLayer.__progress;\n\n                        if (!currentProgressiveLayer.__dirty) {\n                            // Keep rendering\n                            frame = layerProgress;\n                        }\n\n                        currentProgressiveLayer.__progress = frame + 1;\n                    }\n\n                    if (elFrame === frame) {\n                        this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n                    }\n                }\n                else {\n                    this._doPaintEl(el, currentLayer, paintAll, scope);\n                }\n\n                el.__dirty = false;\n            }\n\n            if (currentProgressiveLayer) {\n                flushProgressiveLayer(currentProgressiveLayer);\n            }\n\n            // Restore the lastLayer ctx\n            ctx && ctx.restore();\n            // If still has clipping state\n            // if (scope.prevElClipPaths) {\n            //     ctx.restore();\n            // }\n\n            this._furtherProgressive = false;\n            util.each(this._progressiveLayers, function (layer) {\n                if (layer.__maxProgress >= layer.__progress) {\n                    this._furtherProgressive = true;\n                }\n            }, this);\n        },\n\n        _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n            var ctx = currentLayer.ctx;\n            var m = el.transform;\n            if (\n                (currentLayer.__dirty || forcePaint)\n                // Ignore invisible element\n                && !el.invisible\n                // Ignore transparent element\n                && el.style.opacity !== 0\n                // Ignore scale 0 element, in some environment like node-canvas\n                // Draw a scale 0 element can cause all following draw wrong\n                // And setTransform with scale 0 will cause set back transform failed.\n                && !(m && !m[0] && !m[3])\n                // Ignore culled element\n                && !(el.culling && isDisplayableCulled(el, this._width, this._height))\n            ) {\n\n                var clipPaths = el.__clipPaths;\n\n                // Optimize when clipping on group with several elements\n                if (scope.prevClipLayer !== currentLayer\n                    || isClipPathChanged(clipPaths, scope.prevElClipPaths)\n                ) {\n                    // If has previous clipping state, restore from it\n                    if (scope.prevElClipPaths) {\n                        scope.prevClipLayer.ctx.restore();\n                        scope.prevClipLayer = scope.prevElClipPaths = null;\n\n                        // Reset prevEl since context has been restored\n                        scope.prevEl = null;\n                    }\n                    // New clipping state\n                    if (clipPaths) {\n                        ctx.save();\n                        doClip(clipPaths, ctx);\n                        scope.prevClipLayer = currentLayer;\n                        scope.prevElClipPaths = clipPaths;\n                    }\n                }\n                el.beforeBrush && el.beforeBrush(ctx);\n\n                el.brush(ctx, scope.prevEl || null);\n                scope.prevEl = el;\n\n                el.afterBrush && el.afterBrush(ctx);\n            }\n        },\n\n        /**\n         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n         * @param {number} zlevel\n         * @return {module:zrender/Layer}\n         */\n        getLayer: function (zlevel) {\n            if (this._singleCanvas) {\n                return this._layers[0];\n            }\n\n            var layer = this._layers[zlevel];\n            if (!layer) {\n                // Create a new layer\n                layer = new Layer('zr_' + zlevel, this, this.dpr);\n                layer.__builtin__ = true;\n\n                if (this._layerConfig[zlevel]) {\n                    util.merge(layer, this._layerConfig[zlevel], true);\n                }\n\n                this.insertLayer(zlevel, layer);\n\n                // Context is created after dom inserted to document\n                // Or excanvas will get 0px clientWidth and clientHeight\n                layer.initContext();\n            }\n\n            return layer;\n        },\n\n        insertLayer: function (zlevel, layer) {\n\n            var layersMap = this._layers;\n            var zlevelList = this._zlevelList;\n            var len = zlevelList.length;\n            var prevLayer = null;\n            var i = -1;\n            var domRoot = this._domRoot;\n\n            if (layersMap[zlevel]) {\n                log('ZLevel ' + zlevel + ' has been used already');\n                return;\n            }\n            // Check if is a valid layer\n            if (!isLayerValid(layer)) {\n                log('Layer of zlevel ' + zlevel + ' is not valid');\n                return;\n            }\n\n            if (len > 0 && zlevel > zlevelList[0]) {\n                for (i = 0; i < len - 1; i++) {\n                    if (\n                        zlevelList[i] < zlevel\n                        && zlevelList[i + 1] > zlevel\n                    ) {\n                        break;\n                    }\n                }\n                prevLayer = layersMap[zlevelList[i]];\n            }\n            zlevelList.splice(i + 1, 0, zlevel);\n\n            layersMap[zlevel] = layer;\n\n            // Vitual layer will not directly show on the screen.\n            // (It can be a WebGL layer and assigned to a ZImage element)\n            // But it still under management of zrender.\n            if (!layer.virtual) {\n                if (prevLayer) {\n                    var prevDom = prevLayer.dom;\n                    if (prevDom.nextSibling) {\n                        domRoot.insertBefore(\n                            layer.dom,\n                            prevDom.nextSibling\n                        );\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n                else {\n                    if (domRoot.firstChild) {\n                        domRoot.insertBefore(layer.dom, domRoot.firstChild);\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n            }\n        },\n\n        // Iterate each layer\n        eachLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                cb.call(context, this._layers[z], z);\n            }\n        },\n\n        // Iterate each buildin layer\n        eachBuiltinLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        // Iterate each other layer except buildin layer\n        eachOtherLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (!layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        /**\n         * 获取所有已创建的层\n         * @param {Array.<module:zrender/Layer>} [prevLayer]\n         */\n        getLayers: function () {\n            return this._layers;\n        },\n\n        _updateLayerStatus: function (list) {\n\n            var layers = this._layers;\n            var progressiveLayers = this._progressiveLayers;\n\n            var elCountsLastFrame = {};\n            var progressiveElCountsLastFrame = {};\n\n            this.eachBuiltinLayer(function (layer, z) {\n                elCountsLastFrame[z] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            util.each(progressiveLayers, function (layer, idx) {\n                progressiveElCountsLastFrame[idx] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            var progressiveLayerCount = 0;\n            var currentProgressiveLayer;\n            var lastProgressiveKey;\n            var frameCount = 0;\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var zlevel = this._singleCanvas ? 0 : el.zlevel;\n                var layer = layers[zlevel];\n                var elProgress = el.progressive;\n                if (layer) {\n                    layer.elCount++;\n                    layer.__dirty = layer.__dirty || el.__dirty;\n                }\n\n                /////// Update progressive\n                if (elProgress >= 0) {\n                    // Fix wrong progressive sequence problem.\n                    if (lastProgressiveKey !== elProgress) {\n                        lastProgressiveKey = elProgress;\n                        frameCount++;\n                    }\n                    var elFrame = el.__frame = frameCount - 1;\n                    if (!currentProgressiveLayer) {\n                        var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n                        currentProgressiveLayer = progressiveLayers[idx];\n                        if (!currentProgressiveLayer) {\n                            currentProgressiveLayer = progressiveLayers[idx] = new Layer(\n                                'progressive', this, this.dpr\n                            );\n                            currentProgressiveLayer.initContext();\n                        }\n                        currentProgressiveLayer.__maxProgress = 0;\n                    }\n                    currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n                    currentProgressiveLayer.elCount++;\n\n                    currentProgressiveLayer.__maxProgress = Math.max(\n                        currentProgressiveLayer.__maxProgress, elFrame\n                    );\n\n                    if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n                        // Should keep rendering this  layer because progressive rendering is not finished yet\n                        layer.__dirty = true;\n                    }\n                }\n                else {\n                    el.__frame = -1;\n\n                    if (currentProgressiveLayer) {\n                        currentProgressiveLayer.__nextIdxNotProg = i;\n                        progressiveLayerCount++;\n                        currentProgressiveLayer = null;\n                    }\n                }\n            }\n\n            if (currentProgressiveLayer) {\n                progressiveLayerCount++;\n                currentProgressiveLayer.__nextIdxNotProg = i;\n            }\n\n            // 层中的元素数量有发生变化\n            this.eachBuiltinLayer(function (layer, z) {\n                if (elCountsLastFrame[z] !== layer.elCount) {\n                    layer.__dirty = true;\n                }\n            });\n\n            progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n            util.each(progressiveLayers, function (layer, idx) {\n                if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n                    el.__dirty = true;\n                }\n                if (layer.__dirty) {\n                    layer.__progress = 0;\n                }\n            });\n        },\n\n        /**\n         * 清除hover层外所有内容\n         */\n        clear: function () {\n            this.eachBuiltinLayer(this._clearLayer);\n            return this;\n        },\n\n        _clearLayer: function (layer) {\n            layer.clear();\n        },\n\n        /**\n         * 修改指定zlevel的绘制参数\n         *\n         * @param {string} zlevel\n         * @param {Object} config 配置对象\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\n         * @param {number} [config.lastFrameAlpha=0.7]\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         */\n        configLayer: function (zlevel, config) {\n            if (config) {\n                var layerConfig = this._layerConfig;\n                if (!layerConfig[zlevel]) {\n                    layerConfig[zlevel] = config;\n                }\n                else {\n                    util.merge(layerConfig[zlevel], config, true);\n                }\n\n                var layer = this._layers[zlevel];\n\n                if (layer) {\n                    util.merge(layer, layerConfig[zlevel], true);\n                }\n            }\n        },\n\n        /**\n         * 删除指定层\n         * @param {number} zlevel 层所在的zlevel\n         */\n        delLayer: function (zlevel) {\n            var layers = this._layers;\n            var zlevelList = this._zlevelList;\n            var layer = layers[zlevel];\n            if (!layer) {\n                return;\n            }\n            layer.dom.parentNode.removeChild(layer.dom);\n            delete layers[zlevel];\n\n            zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n        },\n\n        /**\n         * 区域大小变化后重绘\n         */\n        resize: function (width, height) {\n            var domRoot = this._domRoot;\n            // FIXME Why ?\n            domRoot.style.display = 'none';\n\n            // Save input w/h\n            var opts = this._opts;\n            width != null && (opts.width = width);\n            height != null && (opts.height = height);\n\n            width = this._getSize(0);\n            height = this._getSize(1);\n\n            domRoot.style.display = '';\n\n            // 优化没有实际改变的resize\n            if (this._width != width || height != this._height) {\n                domRoot.style.width = width + 'px';\n                domRoot.style.height = height + 'px';\n\n                for (var id in this._layers) {\n                    if (this._layers.hasOwnProperty(id)) {\n                        this._layers[id].resize(width, height);\n                    }\n                }\n                util.each(this._progressiveLayers, function (layer) {\n                    layer.resize(width, height);\n                });\n\n                this.refresh(true);\n            }\n\n            this._width = width;\n            this._height = height;\n\n            return this;\n        },\n\n        /**\n         * 清除单独的一个层\n         * @param {number} zlevel\n         */\n        clearLayer: function (zlevel) {\n            var layer = this._layers[zlevel];\n            if (layer) {\n                layer.clear();\n            }\n        },\n\n        /**\n         * 释放\n         */\n        dispose: function () {\n            this.root.innerHTML = '';\n\n            this.root =\n            this.storage =\n\n            this._domRoot =\n            this._layers = null;\n        },\n\n        /**\n         * Get canvas which has all thing rendered\n         * @param {Object} opts\n         * @param {string} [opts.backgroundColor]\n         */\n        getRenderedCanvas: function (opts) {\n            opts = opts || {};\n            if (this._singleCanvas) {\n                return this._layers[0].dom;\n            }\n\n            var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n            imageLayer.initContext();\n\n            imageLayer.clearColor = opts.backgroundColor;\n            imageLayer.clear();\n\n            var displayList = this.storage.getDisplayList(true);\n\n            var scope = {};\n            var zlevel;\n\n            var self = this;\n            function findAndDrawOtherLayer(smaller, larger) {\n                var zlevelList = self._zlevelList;\n                if (smaller == null) {\n                    smaller = -Infinity;\n                }\n                var intermediateLayer;\n                for (var i = 0; i < zlevelList.length; i++) {\n                    var z = zlevelList[i];\n                    var layer = self._layers[z];\n                    if (!layer.__builtin__ && z > smaller && z < larger) {\n                        intermediateLayer = layer;\n                        break;\n                    }\n                }\n                if (intermediateLayer && intermediateLayer.renderToCanvas) {\n                    imageLayer.ctx.save();\n                    intermediateLayer.renderToCanvas(imageLayer.ctx);\n                    imageLayer.ctx.restore();\n                }\n            }\n            for (var i = 0; i < displayList.length; i++) {\n                var el = displayList[i];\n\n                if (el.zlevel !== zlevel) {\n                    findAndDrawOtherLayer(zlevel, el.zlevel);\n                    zlevel = el.zlevel;\n                }\n                this._doPaintEl(el, imageLayer, true, scope);\n            }\n\n            findAndDrawOtherLayer(zlevel, Infinity);\n\n            return imageLayer.dom;\n        },\n        /**\n         * 获取绘图区域宽度\n         */\n        getWidth: function () {\n            return this._width;\n        },\n\n        /**\n         * 获取绘图区域高度\n         */\n        getHeight: function () {\n            return this._height;\n        },\n\n        _getSize: function (whIdx) {\n            var opts = this._opts;\n            var wh = ['width', 'height'][whIdx];\n            var cwh = ['clientWidth', 'clientHeight'][whIdx];\n            var plt = ['paddingLeft', 'paddingTop'][whIdx];\n            var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n            if (opts[wh] != null && opts[wh] !== 'auto') {\n                return parseFloat(opts[wh]);\n            }\n\n            var root = this.root;\n            // IE8 does not support getComputedStyle, but it use VML.\n            var stl = document.defaultView.getComputedStyle(root);\n\n            return (\n                (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n                - (parseInt10(stl[plt]) || 0)\n                - (parseInt10(stl[prb]) || 0)\n            ) | 0;\n        },\n\n        pathToImage: function (path, dpr) {\n            dpr = dpr || this.dpr;\n\n            var canvas = document.createElement('canvas');\n            var ctx = canvas.getContext('2d');\n            var rect = path.getBoundingRect();\n            var style = path.style;\n            var shadowBlurSize = style.shadowBlur;\n            var shadowOffsetX = style.shadowOffsetX;\n            var shadowOffsetY = style.shadowOffsetY;\n            var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n\n            var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n            var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n            var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n            var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n            var width = rect.width + leftMargin + rightMargin;\n            var height = rect.height + topMargin + bottomMargin;\n\n            canvas.width = width * dpr;\n            canvas.height = height * dpr;\n\n            ctx.scale(dpr, dpr);\n            ctx.clearRect(0, 0, width, height);\n            ctx.dpr = dpr;\n\n            var pathTransform = {\n                position: path.position,\n                rotation: path.rotation,\n                scale: path.scale\n            };\n            path.position = [leftMargin - rect.x, topMargin - rect.y];\n            path.rotation = 0;\n            path.scale = [1, 1];\n            path.updateTransform();\n            if (path) {\n                path.brush(ctx);\n            }\n\n            var ImageShape = require('./graphic/Image');\n            var imgShape = new ImageShape({\n                style: {\n                    x: 0,\n                    y: 0,\n                    image: canvas\n                }\n            });\n\n            if (pathTransform.position != null) {\n                imgShape.position = path.position = pathTransform.position;\n            }\n\n            if (pathTransform.rotation != null) {\n                imgShape.rotation = path.rotation = pathTransform.rotation;\n            }\n\n            if (pathTransform.scale != null) {\n                imgShape.scale = path.scale = pathTransform.scale;\n            }\n\n            return imgShape;\n        }\n    };\n\n    module.exports = Painter;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Painter.js\n// module id = 753\n// module chunks = 0 1 2","'use strict';\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n\n\n    var util = require('./core/util');\n    var env = require('./core/env');\n\n    var Group = require('./container/Group');\n\n    // Use timsort because in most case elements are partially sorted\n    // https://jsfiddle.net/pissang/jr4x7mdm/8/\n    var timsort = require('./core/timsort');\n\n    function shapeCompareFunc(a, b) {\n        if (a.zlevel === b.zlevel) {\n            if (a.z === b.z) {\n                // if (a.z2 === b.z2) {\n                //     // FIXME Slow has renderidx compare\n                //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n                //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n                //     return a.__renderidx - b.__renderidx;\n                // }\n                return a.z2 - b.z2;\n            }\n            return a.z - b.z;\n        }\n        return a.zlevel - b.zlevel;\n    }\n    /**\n     * 内容仓库 (M)\n     * @alias module:zrender/Storage\n     * @constructor\n     */\n    var Storage = function () {\n        this._roots = [];\n\n        this._displayList = [];\n\n        this._displayListLen = 0;\n    };\n\n    Storage.prototype = {\n\n        constructor: Storage,\n\n        /**\n         * @param  {Function} cb\n         *\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._roots.length; i++) {\n                this._roots[i].traverse(cb, context);\n            }\n        },\n\n        /**\n         * 返回所有图形的绘制队列\n         * @param {boolean} [update=false] 是否在返回前更新该数组\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n         *\n         * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n         * @return {Array.<module:zrender/graphic/Displayable>}\n         */\n        getDisplayList: function (update, includeIgnore) {\n            includeIgnore = includeIgnore || false;\n            if (update) {\n                this.updateDisplayList(includeIgnore);\n            }\n            return this._displayList;\n        },\n\n        /**\n         * 更新图形的绘制队列。\n         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n         */\n        updateDisplayList: function (includeIgnore) {\n            this._displayListLen = 0;\n            var roots = this._roots;\n            var displayList = this._displayList;\n            for (var i = 0, len = roots.length; i < len; i++) {\n                this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n            }\n            displayList.length = this._displayListLen;\n\n            // for (var i = 0, len = displayList.length; i < len; i++) {\n            //     displayList[i].__renderidx = i;\n            // }\n\n            // displayList.sort(shapeCompareFunc);\n            env.canvasSupported && timsort(displayList, shapeCompareFunc);\n        },\n\n        _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n\n            if (el.ignore && !includeIgnore) {\n                return;\n            }\n\n            el.beforeUpdate();\n\n            if (el.__dirty) {\n\n                el.update();\n\n            }\n\n            el.afterUpdate();\n\n            var userSetClipPath = el.clipPath;\n            if (userSetClipPath) {\n\n                // FIXME 效率影响\n                if (clipPaths) {\n                    clipPaths = clipPaths.slice();\n                }\n                else {\n                    clipPaths = [];\n                }\n\n                var currentClipPath = userSetClipPath;\n                var parentClipPath = el;\n                // Recursively add clip path\n                while (currentClipPath) {\n                    // clipPath 的变换是基于使用这个 clipPath 的元素\n                    currentClipPath.parent = parentClipPath;\n                    currentClipPath.updateTransform();\n\n                    clipPaths.push(currentClipPath);\n\n                    parentClipPath = currentClipPath;\n                    currentClipPath = currentClipPath.clipPath;\n                }\n            }\n\n            if (el.isGroup) {\n                var children = el._children;\n\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n\n                    // Force to mark as dirty if group is dirty\n                    // FIXME __dirtyPath ?\n                    if (el.__dirty) {\n                        child.__dirty = true;\n                    }\n\n                    this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n                }\n\n                // Mark group clean here\n                el.__dirty = false;\n\n            }\n            else {\n                el.__clipPaths = clipPaths;\n\n                this._displayList[this._displayListLen++] = el;\n            }\n        },\n\n        /**\n         * 添加图形(Shape)或者组(Group)到根节点\n         * @param {module:zrender/Element} el\n         */\n        addRoot: function (el) {\n            if (el.__storage === this) {\n                return;\n            }\n\n            if (el instanceof Group) {\n                el.addChildrenToStorage(this);\n            }\n\n            this.addToStorage(el);\n            this._roots.push(el);\n        },\n\n        /**\n         * 删除指定的图形(Shape)或者组(Group)\n         * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n         */\n        delRoot: function (el) {\n            if (el == null) {\n                // 不指定el清空\n                for (var i = 0; i < this._roots.length; i++) {\n                    var root = this._roots[i];\n                    if (root instanceof Group) {\n                        root.delChildrenFromStorage(this);\n                    }\n                }\n\n                this._roots = [];\n                this._displayList = [];\n                this._displayListLen = 0;\n\n                return;\n            }\n\n            if (el instanceof Array) {\n                for (var i = 0, l = el.length; i < l; i++) {\n                    this.delRoot(el[i]);\n                }\n                return;\n            }\n\n\n            var idx = util.indexOf(this._roots, el);\n            if (idx >= 0) {\n                this.delFromStorage(el);\n                this._roots.splice(idx, 1);\n                if (el instanceof Group) {\n                    el.delChildrenFromStorage(this);\n                }\n            }\n        },\n\n        addToStorage: function (el) {\n            el.__storage = this;\n            el.dirty(false);\n\n            return this;\n        },\n\n        delFromStorage: function (el) {\n            if (el) {\n                el.__storage = null;\n            }\n\n            return this;\n        },\n\n        /**\n         * 清空并且释放Storage\n         */\n        dispose: function () {\n            this._renderList =\n            this._roots = null;\n        },\n\n        displayableSortFunc: shapeCompareFunc\n    };\n\n    module.exports = Storage;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Storage.js\n// module id = 754\n// module chunks = 0 1 2","'use strict';\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n\n    var util = require('../core/util');\n    var Dispatcher = require('../core/event').Dispatcher;\n\n    var requestAnimationFrame = require('./requestAnimationFrame');\n\n    var Animator = require('./Animator');\n    /**\n     * @typedef {Object} IZRenderStage\n     * @property {Function} update\n     */\n\n    /**\n     * @alias module:zrender/animation/Animation\n     * @constructor\n     * @param {Object} [options]\n     * @param {Function} [options.onframe]\n     * @param {IZRenderStage} [options.stage]\n     * @example\n     *     var animation = new Animation();\n     *     var obj = {\n     *         x: 100,\n     *         y: 100\n     *     };\n     *     animation.animate(node.position)\n     *         .when(1000, {\n     *             x: 500,\n     *             y: 500\n     *         })\n     *         .when(2000, {\n     *             x: 100,\n     *             y: 100\n     *         })\n     *         .start('spline');\n     */\n    var Animation = function (options) {\n\n        options = options || {};\n\n        this.stage = options.stage || {};\n\n        this.onframe = options.onframe || function() {};\n\n        // private properties\n        this._clips = [];\n\n        this._running = false;\n\n        this._time;\n\n        this._pausedTime;\n\n        this._pauseStart;\n\n        this._paused = false;\n\n        Dispatcher.call(this);\n    };\n\n    Animation.prototype = {\n\n        constructor: Animation,\n        /**\n         * 添加 clip\n         * @param {module:zrender/animation/Clip} clip\n         */\n        addClip: function (clip) {\n            this._clips.push(clip);\n        },\n        /**\n         * 添加 animator\n         * @param {module:zrender/animation/Animator} animator\n         */\n        addAnimator: function (animator) {\n            animator.animation = this;\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.addClip(clips[i]);\n            }\n        },\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Clip} clip\n         */\n        removeClip: function(clip) {\n            var idx = util.indexOf(this._clips, clip);\n            if (idx >= 0) {\n                this._clips.splice(idx, 1);\n            }\n        },\n\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Animator} animator\n         */\n        removeAnimator: function (animator) {\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.removeClip(clips[i]);\n            }\n            animator.animation = null;\n        },\n\n        _update: function() {\n\n            var time = new Date().getTime() - this._pausedTime;\n            var delta = time - this._time;\n            var clips = this._clips;\n            var len = clips.length;\n\n            var deferredEvents = [];\n            var deferredClips = [];\n            for (var i = 0; i < len; i++) {\n                var clip = clips[i];\n                var e = clip.step(time, delta);\n                // Throw out the events need to be called after\n                // stage.update, like destroy\n                if (e) {\n                    deferredEvents.push(e);\n                    deferredClips.push(clip);\n                }\n            }\n\n            // Remove the finished clip\n            for (var i = 0; i < len;) {\n                if (clips[i]._needsRemove) {\n                    clips[i] = clips[len - 1];\n                    clips.pop();\n                    len--;\n                }\n                else {\n                    i++;\n                }\n            }\n\n            len = deferredEvents.length;\n            for (var i = 0; i < len; i++) {\n                deferredClips[i].fire(deferredEvents[i]);\n            }\n\n            this._time = time;\n\n            this.onframe(delta);\n\n            this.trigger('frame', delta);\n\n            if (this.stage.update) {\n                this.stage.update();\n            }\n        },\n\n        _startLoop: function () {\n            var self = this;\n\n            this._running = true;\n\n            function step() {\n                if (self._running) {\n\n                    requestAnimationFrame(step);\n\n                    !self._paused && self._update();\n                }\n            }\n\n            requestAnimationFrame(step);\n        },\n\n        /**\n         * 开始运行动画\n         */\n        start: function () {\n\n            this._time = new Date().getTime();\n            this._pausedTime = 0;\n\n            this._startLoop();\n        },\n        /**\n         * 停止运行动画\n         */\n        stop: function () {\n            this._running = false;\n        },\n\n        /**\n         * Pause\n         */\n        pause: function () {\n            if (!this._paused) {\n                this._pauseStart = new Date().getTime();\n                this._paused = true;\n            }\n        },\n\n        /**\n         * Resume\n         */\n        resume: function () {\n            if (this._paused) {\n                this._pausedTime += (new Date().getTime()) - this._pauseStart;\n                this._paused = false;\n            }\n        },\n\n        /**\n         * 清除所有动画片段\n         */\n        clear: function () {\n            this._clips = [];\n        },\n        /**\n         * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n         * @param  {Object} target\n         * @param  {Object} options\n         * @param  {boolean} [options.loop=false] 是否循环播放动画\n         * @param  {Function} [options.getter=null]\n         *         如果指定getter函数，会通过getter函数取属性值\n         * @param  {Function} [options.setter=null]\n         *         如果指定setter函数，会通过setter函数设置属性值\n         * @return {module:zrender/animation/Animation~Animator}\n         */\n        // TODO Gap\n        animate: function (target, options) {\n            options = options || {};\n\n            var animator = new Animator(\n                target,\n                options.loop,\n                options.getter,\n                options.setter\n            );\n\n            this.addAnimator(animator);\n\n            return animator;\n        }\n    };\n\n    util.mixin(Animation, Dispatcher);\n\n    module.exports = Animation;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Animation.js\n// module id = 755\n// module chunks = 0 1 2","/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\n\n\n    var easingFuncs = require('./easing');\n\n    function Clip(options) {\n\n        this._target = options.target;\n\n        // 生命周期\n        this._life = options.life || 1000;\n        // 延时\n        this._delay = options.delay || 0;\n        // 开始时间\n        // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n        this._initialized = false;\n\n        // 是否循环\n        this.loop = options.loop == null ? false : options.loop;\n\n        this.gap = options.gap || 0;\n\n        this.easing = options.easing || 'Linear';\n\n        this.onframe = options.onframe;\n        this.ondestroy = options.ondestroy;\n        this.onrestart = options.onrestart;\n\n        this._pausedTime = 0;\n        this._paused = false;\n    }\n\n    Clip.prototype = {\n\n        constructor: Clip,\n\n        step: function (globalTime, deltaTime) {\n            // Set startTime on first step, or _startTime may has milleseconds different between clips\n            // PENDING\n            if (!this._initialized) {\n                this._startTime = globalTime + this._delay;\n                this._initialized = true;\n            }\n\n            if (this._paused) {\n                this._pausedTime += deltaTime;\n                return;\n            }\n\n            var percent = (globalTime - this._startTime - this._pausedTime) / this._life;\n\n            // 还没开始\n            if (percent < 0) {\n                return;\n            }\n\n            percent = Math.min(percent, 1);\n\n            var easing = this.easing;\n            var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n            var schedule = typeof easingFunc === 'function'\n                ? easingFunc(percent)\n                : percent;\n\n            this.fire('frame', schedule);\n\n            // 结束\n            if (percent == 1) {\n                if (this.loop) {\n                    this.restart (globalTime);\n                    // 重新开始周期\n                    // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n                    return 'restart';\n                }\n\n                // 动画完成将这个控制器标识为待删除\n                // 在Animation.update中进行批量删除\n                this._needsRemove = true;\n                return 'destroy';\n            }\n\n            return null;\n        },\n\n        restart: function (globalTime) {\n            var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n            this._startTime = globalTime - remainder + this.gap;\n            this._pausedTime = 0;\n\n            this._needsRemove = false;\n        },\n\n        fire: function (eventType, arg) {\n            eventType = 'on' + eventType;\n            if (this[eventType]) {\n                this[eventType](this._target, arg);\n            }\n        },\n\n        pause: function () {\n            this._paused = true;\n        },\n\n        resume: function () {\n            this._paused = false;\n        }\n    };\n\n    module.exports = Clip;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Clip.js\n// module id = 756\n// module chunks = 0 1 2","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\n\n    var easing = {\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        linear: function (k) {\n            return k;\n        },\n\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticIn: function (k) {\n            return k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticOut: function (k) {\n            return k * (2 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k;\n            }\n            return -0.5 * (--k * (k - 2) - 1);\n        },\n\n        // 三次方的缓动（t^3）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicIn: function (k) {\n            return k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicOut: function (k) {\n            return --k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k + 2);\n        },\n\n        // 四次方的缓动（t^4）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticIn: function (k) {\n            return k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticOut: function (k) {\n            return 1 - (--k * k * k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k;\n            }\n            return -0.5 * ((k -= 2) * k * k * k - 2);\n        },\n\n        // 五次方的缓动（t^5）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticIn: function (k) {\n            return k * k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticOut: function (k) {\n            return --k * k * k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k * k * k + 2);\n        },\n\n        // 正弦曲线的缓动（sin(t)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalIn: function (k) {\n            return 1 - Math.cos(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalOut: function (k) {\n            return Math.sin(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalInOut: function (k) {\n            return 0.5 * (1 - Math.cos(Math.PI * k));\n        },\n\n        // 指数曲线的缓动（2^t）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialIn: function (k) {\n            return k === 0 ? 0 : Math.pow(1024, k - 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialOut: function (k) {\n            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialInOut: function (k) {\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if ((k *= 2) < 1) {\n                return 0.5 * Math.pow(1024, k - 1);\n            }\n            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n        },\n\n        // 圆形曲线的缓动（sqrt(1-t^2)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularIn: function (k) {\n            return 1 - Math.sqrt(1 - k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularOut: function (k) {\n            return Math.sqrt(1 - (--k * k));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - k * k) - 1);\n            }\n            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n        },\n\n        // 创建类似于弹簧在停止前来回振荡的动画\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticIn: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return -(a * Math.pow(2, 10 * (k -= 1)) *\n                        Math.sin((k - s) * (2 * Math.PI) / p));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return (a * Math.pow(2, -10 * k) *\n                    Math.sin((k - s) * (2 * Math.PI) / p) + 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticInOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            if ((k *= 2) < 1) {\n                return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p));\n            }\n            return a * Math.pow(2, -10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\n        },\n\n        // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backIn: function (k) {\n            var s = 1.70158;\n            return k * k * ((s + 1) * k - s);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backOut: function (k) {\n            var s = 1.70158;\n            return --k * k * ((s + 1) * k + s) + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backInOut: function (k) {\n            var s = 1.70158 * 1.525;\n            if ((k *= 2) < 1) {\n                return 0.5 * (k * k * ((s + 1) * k - s));\n            }\n            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n        },\n\n        // 创建弹跳效果\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceIn: function (k) {\n            return 1 - easing.bounceOut(1 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceOut: function (k) {\n            if (k < (1 / 2.75)) {\n                return 7.5625 * k * k;\n            }\n            else if (k < (2 / 2.75)) {\n                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n            }\n            else if (k < (2.5 / 2.75)) {\n                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n            }\n            else {\n                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n            }\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceInOut: function (k) {\n            if (k < 0.5) {\n                return easing.bounceIn(k * 2) * 0.5;\n            }\n            return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n        }\n    };\n\n    module.exports = easing;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/easing.js\n// module id = 757\n// module chunks = 0 1 2","\n\n    var normalizeRadian = require('./util').normalizeRadian;\n    var PI2 = Math.PI * 2;\n\n    module.exports = {\n        /**\n         * 圆弧描边包含判断\n         * @param  {number}  cx\n         * @param  {number}  cy\n         * @param  {number}  r\n         * @param  {number}  startAngle\n         * @param  {number}  endAngle\n         * @param  {boolean}  anticlockwise\n         * @param  {number} lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {Boolean}\n         */\n        containStroke: function (\n            cx, cy, r, startAngle, endAngle, anticlockwise,\n            lineWidth, x, y\n        ) {\n\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n\n            x -= cx;\n            y -= cy;\n            var d = Math.sqrt(x * x + y * y);\n\n            if ((d - _l > r) || (d + _l < r)) {\n                return false;\n            }\n            if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n                // Is a circle\n                return true;\n            }\n            if (anticlockwise) {\n                var tmp = startAngle;\n                startAngle = normalizeRadian(endAngle);\n                endAngle = normalizeRadian(tmp);\n            } else {\n                startAngle = normalizeRadian(startAngle);\n                endAngle = normalizeRadian(endAngle);\n            }\n            if (startAngle > endAngle) {\n                endAngle += PI2;\n            }\n\n            var angle = Math.atan2(y, x);\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return (angle >= startAngle && angle <= endAngle)\n                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/arc.js\n// module id = 758\n// module chunks = 0 1 2","\n\n    var curve = require('../core/curve');\n\n    module.exports = {\n        /**\n         * 三次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  x3\n         * @param  {number}  y3\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.cubicProjectPoint(\n                x0, y0, x1, y1, x2, y2, x3, y3,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/cubic.js\n// module id = 759\n// module chunks = 0 1 2","\n    module.exports = {\n        /**\n         * 线段包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            var _a = 0;\n            var _b = x0;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l)\n                || (y < y0 - _l && y < y1 - _l)\n                || (x > x0 + _l && x > x1 + _l)\n                || (x < x0 - _l && x < x1 - _l)\n            ) {\n                return false;\n            }\n\n            if (x0 !== x1) {\n                _a = (y0 - y1) / (x0 - x1);\n                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\n            }\n            else {\n                return Math.abs(x - x0) <= _l / 2;\n            }\n            var tmp = _a * x - y + _b;\n            var _s = tmp * tmp / (_a * _a + 1);\n            return _s <= _l / 2 * _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/line.js\n// module id = 760\n// module chunks = 0 1 2","'use strict';\n\n\n    var CMD = require('../core/PathProxy').CMD;\n    var line = require('./line');\n    var cubic = require('./cubic');\n    var quadratic = require('./quadratic');\n    var arc = require('./arc');\n    var normalizeRadian = require('./util').normalizeRadian;\n    var curve = require('../core/curve');\n\n    var windingLine = require('./windingLine');\n\n    var containStroke = line.containStroke;\n\n    var PI2 = Math.PI * 2;\n\n    var EPSILON = 1e-4;\n\n    function isAroundEqual(a, b) {\n        return Math.abs(a - b) < EPSILON;\n    }\n\n    // 临时数组\n    var roots = [-1, -1, -1];\n    var extrema = [-1, -1];\n\n    function swapExtrema() {\n        var tmp = extrema[0];\n        extrema[0] = extrema[1];\n        extrema[1] = tmp;\n    }\n\n    function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2 && y > y3)\n            || (y < y0 && y < y1 && y < y2 && y < y3)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var w = 0;\n            var nExtrema = -1;\n            var y0_, y1_;\n            for (var i = 0; i < nRoots; i++) {\n                var t = roots[i];\n\n                // Avoid winding error when intersection point is the connect point of two line of polygon\n                var unit = (t === 0 || t === 1) ? 0.5 : 1;\n\n                var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n                if (x_ < x) { // Quick reject\n                    continue;\n                }\n                if (nExtrema < 0) {\n                    nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n                    if (extrema[1] < extrema[0] && nExtrema > 1) {\n                        swapExtrema();\n                    }\n                    y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n                    if (nExtrema > 1) {\n                        y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n                    }\n                }\n                if (nExtrema == 2) {\n                    // 分成三段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else if (t < extrema[1]) {\n                        w += y1_ < y0_ ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y1_ ? unit : -unit;\n                    }\n                }\n                else {\n                    // 分成两段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y0_ ? unit : -unit;\n                    }\n                }\n            }\n            return w;\n        }\n    }\n\n    function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2)\n            || (y < y0 && y < y1 && y < y2)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var t = curve.quadraticExtremum(y0, y1, y2);\n            if (t >= 0 && t <= 1) {\n                var w = 0;\n                var y_ = curve.quadraticAt(y0, y1, y2, t);\n                for (var i = 0; i < nRoots; i++) {\n                    // Remove one endpoint.\n                    var unit = (roots[i] === 0 || roots[i] === 1) ? 0.5 : 1;\n\n                    var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n                    if (x_ < x) {   // Quick reject\n                        continue;\n                    }\n                    if (roots[i] < t) {\n                        w += y_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y2 < y_ ? unit : -unit;\n                    }\n                }\n                return w;\n            }\n            else {\n                // Remove one endpoint.\n                var unit = (roots[0] === 0 || roots[0] === 1) ? 0.5 : 1;\n\n                var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n                if (x_ < x) {   // Quick reject\n                    return 0;\n                }\n                return y2 < y0 ? unit : -unit;\n            }\n        }\n    }\n\n    // TODO\n    // Arc 旋转\n    function windingArc(\n        cx, cy, r, startAngle, endAngle, anticlockwise, x, y\n    ) {\n        y -= cy;\n        if (y > r || y < -r) {\n            return 0;\n        }\n        var tmp = Math.sqrt(r * r - y * y);\n        roots[0] = -tmp;\n        roots[1] = tmp;\n\n        var diff = Math.abs(startAngle - endAngle);\n        if (diff < 1e-4) {\n            return 0;\n        }\n        if (diff % PI2 < 1e-4) {\n            // Is a circle\n            startAngle = 0;\n            endAngle = PI2;\n            var dir = anticlockwise ? 1 : -1;\n            if (x >= roots[0] + cx && x <= roots[1] + cx) {\n                return dir;\n            } else {\n                return 0;\n            }\n        }\n\n        if (anticlockwise) {\n            var tmp = startAngle;\n            startAngle = normalizeRadian(endAngle);\n            endAngle = normalizeRadian(tmp);\n        }\n        else {\n            startAngle = normalizeRadian(startAngle);\n            endAngle = normalizeRadian(endAngle);\n        }\n        if (startAngle > endAngle) {\n            endAngle += PI2;\n        }\n\n        var w = 0;\n        for (var i = 0; i < 2; i++) {\n            var x_ = roots[i];\n            if (x_ + cx > x) {\n                var angle = Math.atan2(y, x_);\n                var dir = anticlockwise ? 1 : -1;\n                if (angle < 0) {\n                    angle = PI2 + angle;\n                }\n                if (\n                    (angle >= startAngle && angle <= endAngle)\n                    || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\n                ) {\n                    if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n                        dir = -dir;\n                    }\n                    w += dir;\n                }\n            }\n        }\n        return w;\n    }\n\n    function containPath(data, lineWidth, isStroke, x, y) {\n        var w = 0;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n\n        for (var i = 0; i < data.length;) {\n            var cmd = data[i++];\n            // Begin a new subpath\n            if (cmd === CMD.M && i > 1) {\n                // Close previous subpath\n                if (!isStroke) {\n                    w += windingLine(xi, yi, x0, y0, x, y);\n                }\n                // 如果被任何一个 subpath 包含\n                // if (w !== 0) {\n                //     return true;\n                // }\n            }\n\n            if (i == 1) {\n                // 如果第一个命令是 L, C, Q\n                // 则 previous point 同绘制命令的第一个 point\n                //\n                // 第一个命令为 Arc 的情况下会在后面特殊处理\n                xi = data[i];\n                yi = data[i + 1];\n\n                x0 = xi;\n                y0 = yi;\n            }\n\n            switch (cmd) {\n                case CMD.M:\n                    // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                    // 在 closePath 的时候使用\n                    x0 = data[i++];\n                    y0 = data[i++];\n                    xi = x0;\n                    yi = y0;\n                    break;\n                case CMD.L:\n                    if (isStroke) {\n                        if (containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n                        w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.C:\n                    if (isStroke) {\n                        if (cubic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingCubic(\n                            xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.Q:\n                    if (isStroke) {\n                        if (quadratic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingQuadratic(\n                            xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.A:\n                    // TODO Arc 判断的开销比较大\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var theta = data[i++];\n                    var dTheta = data[i++];\n                    // TODO Arc 旋转\n                    var psi = data[i++];\n                    var anticlockwise = 1 - data[i++];\n                    var x1 = Math.cos(theta) * rx + cx;\n                    var y1 = Math.sin(theta) * ry + cy;\n                    // 不是直接使用 arc 命令\n                    if (i > 1) {\n                        w += windingLine(xi, yi, x1, y1, x, y);\n                    }\n                    else {\n                        // 第一个命令起点还未定义\n                        x0 = x1;\n                        y0 = y1;\n                    }\n                    // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n                    var _x = (x - cx) * ry / rx + cx;\n                    if (isStroke) {\n                        if (arc.containStroke(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            lineWidth, _x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingArc(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            _x, y\n                        );\n                    }\n                    xi = Math.cos(theta + dTheta) * rx + cx;\n                    yi = Math.sin(theta + dTheta) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    var x1 = x0 + width;\n                    var y1 = y0 + height;\n                    if (isStroke) {\n                        if (containStroke(x0, y0, x1, y0, lineWidth, x, y)\n                          || containStroke(x1, y0, x1, y1, lineWidth, x, y)\n                          || containStroke(x1, y1, x0, y1, lineWidth, x, y)\n                          || containStroke(x0, y1, x0, y0, lineWidth, x, y)\n                        ) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // FIXME Clockwise ?\n                        w += windingLine(x1, y0, x1, y1, x, y);\n                        w += windingLine(x0, y1, x0, y0, x, y);\n                    }\n                    break;\n                case CMD.Z:\n                    if (isStroke) {\n                        if (containStroke(\n                            xi, yi, x0, y0, lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // Close a subpath\n                        w += windingLine(xi, yi, x0, y0, x, y);\n                        // 如果被任何一个 subpath 包含\n                        // FIXME subpaths may overlap\n                        // if (w !== 0) {\n                        //     return true;\n                        // }\n                    }\n                    xi = x0;\n                    yi = y0;\n                    break;\n            }\n        }\n        if (!isStroke && !isAroundEqual(yi, y0)) {\n            w += windingLine(xi, yi, x0, y0, x, y) || 0;\n        }\n        return w !== 0;\n    }\n\n    module.exports = {\n        contain: function (pathData, x, y) {\n            return containPath(pathData, 0, false, x, y);\n        },\n\n        containStroke: function (pathData, lineWidth, x, y) {\n            return containPath(pathData, lineWidth, true, x, y);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/path.js\n// module id = 761\n// module chunks = 0 1 2","\n\n    var curve = require('../core/curve');\n\n    module.exports = {\n        /**\n         * 二次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.quadraticProjectPoint(\n                x0, y0, x1, y1, x2, y2,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/quadratic.js\n// module id = 762\n// module chunks = 0 1 2","\n    module.exports = function windingLine(x0, y0, x1, y1, x, y) {\n        if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\n            return 0;\n        }\n        // Ignore horizontal line\n        if (y1 === y0) {\n            return 0;\n        }\n        var dir = y1 < y0 ? 1 : -1;\n        var t = (y - y0) / (y1 - y0);\n\n        // Avoid winding error when intersection point is the connect point of two line of polygon\n        if (t === 1 || t === 0) {\n            dir = y1 < y0 ? 0.5 : -0.5;\n        }\n\n        var x_ = t * (x1 - x0) + x0;\n\n        return x_ > x ? dir : 0;\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/windingLine.js\n// module id = 763\n// module chunks = 0 1 2","'use strict';\n/**\n * Only implements needed gestures for mobile.\n */\n\n\n    var eventUtil = require('./event');\n\n    var GestureMgr = function () {\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._track = [];\n    };\n\n    GestureMgr.prototype = {\n\n        constructor: GestureMgr,\n\n        recognize: function (event, target, root) {\n            this._doTrack(event, target, root);\n            return this._recognize(event);\n        },\n\n        clear: function () {\n            this._track.length = 0;\n            return this;\n        },\n\n        _doTrack: function (event, target, root) {\n            var touches = event.touches;\n\n            if (!touches) {\n                return;\n            }\n\n            var trackItem = {\n                points: [],\n                touches: [],\n                target: target,\n                event: event\n            };\n\n            for (var i = 0, len = touches.length; i < len; i++) {\n                var touch = touches[i];\n                var pos = eventUtil.clientToLocal(root, touch, {});\n                trackItem.points.push([pos.zrX, pos.zrY]);\n                trackItem.touches.push(touch);\n            }\n\n            this._track.push(trackItem);\n        },\n\n        _recognize: function (event) {\n            for (var eventName in recognizers) {\n                if (recognizers.hasOwnProperty(eventName)) {\n                    var gestureInfo = recognizers[eventName](this._track, event);\n                    if (gestureInfo) {\n                        return gestureInfo;\n                    }\n                }\n            }\n        }\n    };\n\n    function dist(pointPair) {\n        var dx = pointPair[1][0] - pointPair[0][0];\n        var dy = pointPair[1][1] - pointPair[0][1];\n\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    function center(pointPair) {\n        return [\n            (pointPair[0][0] + pointPair[1][0]) / 2,\n            (pointPair[0][1] + pointPair[1][1]) / 2\n        ];\n    }\n\n    var recognizers = {\n\n        pinch: function (track, event) {\n            var trackLen = track.length;\n\n            if (!trackLen) {\n                return;\n            }\n\n            var pinchEnd = (track[trackLen - 1] || {}).points;\n            var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n            if (pinchPre\n                && pinchPre.length > 1\n                && pinchEnd\n                && pinchEnd.length > 1\n            ) {\n                var pinchScale = dist(pinchEnd) / dist(pinchPre);\n                !isFinite(pinchScale) && (pinchScale = 1);\n\n                event.pinchScale = pinchScale;\n\n                var pinchCenter = center(pinchEnd);\n                event.pinchX = pinchCenter[0];\n                event.pinchY = pinchCenter[1];\n\n                return {\n                    type: 'pinch',\n                    target: track[0].target,\n                    event: event\n                };\n            }\n        }\n\n        // Only pinch currently.\n    };\n\n    module.exports = GestureMgr;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/GestureMgr.js\n// module id = 764\n// module chunks = 0 1 2","/**\n * @author Yi Shen(https://github.com/pissang)\n */\n\n\n    var vec2 = require('./vector');\n    var curve = require('./curve');\n\n    var bbox = {};\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n\n    var start = vec2.create();\n    var end = vec2.create();\n    var extremity = vec2.create();\n\n    var PI2 = Math.PI * 2;\n    /**\n     * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n     * @module zrender/core/bbox\n     * @param {Array<Object>} points 顶点数组\n     * @param {number} min\n     * @param {number} max\n     */\n    bbox.fromPoints = function(points, min, max) {\n        if (points.length === 0) {\n            return;\n        }\n        var p = points[0];\n        var left = p[0];\n        var right = p[0];\n        var top = p[1];\n        var bottom = p[1];\n        var i;\n\n        for (i = 1; i < points.length; i++) {\n            p = points[i];\n            left = mathMin(left, p[0]);\n            right = mathMax(right, p[0]);\n            top = mathMin(top, p[1]);\n            bottom = mathMax(bottom, p[1]);\n        }\n\n        min[0] = left;\n        min[1] = top;\n        max[0] = right;\n        max[1] = bottom;\n    };\n\n    /**\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromLine = function (x0, y0, x1, y1, min, max) {\n        min[0] = mathMin(x0, x1);\n        min[1] = mathMin(y0, y1);\n        max[0] = mathMax(x0, x1);\n        max[1] = mathMax(y0, y1);\n    };\n\n    var xDim = [];\n    var yDim = [];\n    /**\n     * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromCubic = function(\n        x0, y0, x1, y1, x2, y2, x3, y3, min, max\n    ) {\n        var cubicExtrema = curve.cubicExtrema;\n        var cubicAt = curve.cubicAt;\n        var i;\n        var n = cubicExtrema(x0, x1, x2, x3, xDim);\n        min[0] = Infinity;\n        min[1] = Infinity;\n        max[0] = -Infinity;\n        max[1] = -Infinity;\n\n        for (i = 0; i < n; i++) {\n            var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n            min[0] = mathMin(x, min[0]);\n            max[0] = mathMax(x, max[0]);\n        }\n        n = cubicExtrema(y0, y1, y2, y3, yDim);\n        for (i = 0; i < n; i++) {\n            var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n            min[1] = mathMin(y, min[1]);\n            max[1] = mathMax(y, max[1]);\n        }\n\n        min[0] = mathMin(x0, min[0]);\n        max[0] = mathMax(x0, max[0]);\n        min[0] = mathMin(x3, min[0]);\n        max[0] = mathMax(x3, max[0]);\n\n        min[1] = mathMin(y0, min[1]);\n        max[1] = mathMax(y0, max[1]);\n        min[1] = mathMin(y3, min[1]);\n        max[1] = mathMax(y3, max[1]);\n    };\n\n    /**\n     * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromQuadratic = function(x0, y0, x1, y1, x2, y2, min, max) {\n        var quadraticExtremum = curve.quadraticExtremum;\n        var quadraticAt = curve.quadraticAt;\n        // Find extremities, where derivative in x dim or y dim is zero\n        var tx =\n            mathMax(\n                mathMin(quadraticExtremum(x0, x1, x2), 1), 0\n            );\n        var ty =\n            mathMax(\n                mathMin(quadraticExtremum(y0, y1, y2), 1), 0\n            );\n\n        var x = quadraticAt(x0, x1, x2, tx);\n        var y = quadraticAt(y0, y1, y2, ty);\n\n        min[0] = mathMin(x0, x2, x);\n        min[1] = mathMin(y0, y2, y);\n        max[0] = mathMax(x0, x2, x);\n        max[1] = mathMax(y0, y2, y);\n    };\n\n    /**\n     * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n     * @method\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x\n     * @param {number} y\n     * @param {number} rx\n     * @param {number} ry\n     * @param {number} startAngle\n     * @param {number} endAngle\n     * @param {number} anticlockwise\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromArc = function (\n        x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max\n    ) {\n        var vec2Min = vec2.min;\n        var vec2Max = vec2.max;\n\n        var diff = Math.abs(startAngle - endAngle);\n\n\n        if (diff % PI2 < 1e-4 && diff > 1e-4) {\n            // Is a circle\n            min[0] = x - rx;\n            min[1] = y - ry;\n            max[0] = x + rx;\n            max[1] = y + ry;\n            return;\n        }\n\n        start[0] = mathCos(startAngle) * rx + x;\n        start[1] = mathSin(startAngle) * ry + y;\n\n        end[0] = mathCos(endAngle) * rx + x;\n        end[1] = mathSin(endAngle) * ry + y;\n\n        vec2Min(min, start, end);\n        vec2Max(max, start, end);\n\n        // Thresh to [0, Math.PI * 2]\n        startAngle = startAngle % (PI2);\n        if (startAngle < 0) {\n            startAngle = startAngle + PI2;\n        }\n        endAngle = endAngle % (PI2);\n        if (endAngle < 0) {\n            endAngle = endAngle + PI2;\n        }\n\n        if (startAngle > endAngle && !anticlockwise) {\n            endAngle += PI2;\n        }\n        else if (startAngle < endAngle && anticlockwise) {\n            startAngle += PI2;\n        }\n        if (anticlockwise) {\n            var tmp = endAngle;\n            endAngle = startAngle;\n            startAngle = tmp;\n        }\n\n        // var number = 0;\n        // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n        for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n            if (angle > startAngle) {\n                extremity[0] = mathCos(angle) * rx + x;\n                extremity[1] = mathSin(angle) * ry + y;\n\n                vec2Min(min, extremity, min);\n                vec2Max(max, extremity, max);\n            }\n        }\n    };\n\n    module.exports = bbox;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/bbox.js\n// module id = 765\n// module chunks = 0 1 2","\n\n    var eventTool = require('../core/event');\n    var zrUtil = require('../core/util');\n    var Eventful = require('../mixin/Eventful');\n    var env = require('../core/env');\n    var GestureMgr = require('../core/GestureMgr');\n\n    var addEventListener = eventTool.addEventListener;\n    var removeEventListener = eventTool.removeEventListener;\n    var normalizeEvent = eventTool.normalizeEvent;\n\n    var TOUCH_CLICK_DELAY = 300;\n\n    var mouseHandlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n\n    var touchHandlerNames = [\n        'touchstart', 'touchend', 'touchmove'\n    ];\n\n    var pointerEventNames = {\n        pointerdown: 1, pointerup: 1, pointermove: 1, pointerout: 1\n    };\n\n    var pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n        var nm = name.replace('mouse', 'pointer');\n        return pointerEventNames[nm] ? nm : name;\n    });\n\n    function eventNameFix(name) {\n        return (name === 'mousewheel' && env.browser.firefox) ? 'DOMMouseScroll' : name;\n    }\n\n    function processGesture(proxy, event, stage) {\n        var gestureMgr = proxy._gestureMgr;\n\n        stage === 'start' && gestureMgr.clear();\n\n        var gestureInfo = gestureMgr.recognize(\n            event,\n            proxy.handler.findHover(event.zrX, event.zrY, null).target,\n            proxy.dom\n        );\n\n        stage === 'end' && gestureMgr.clear();\n\n        // Do not do any preventDefault here. Upper application do that if necessary.\n        if (gestureInfo) {\n            var type = gestureInfo.type;\n            event.gestureEvent = type;\n\n            proxy.handler.dispatchToElement({target: gestureInfo.target}, type, gestureInfo.event);\n        }\n    }\n\n    // function onMSGestureChange(proxy, event) {\n    //     if (event.translationX || event.translationY) {\n    //         // mousemove is carried by MSGesture to reduce the sensitivity.\n    //         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n    //     }\n    //     if (event.scale !== 1) {\n    //         event.pinchX = event.offsetX;\n    //         event.pinchY = event.offsetY;\n    //         event.pinchScale = event.scale;\n    //         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n    //     }\n    // }\n\n    /**\n     * Prevent mouse event from being dispatched after Touch Events action\n     * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n     * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n     * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n     * Result: Blocking Mouse Events for 700ms.\n     */\n    function setTouchTimer(instance) {\n        instance._touching = true;\n        clearTimeout(instance._touchTimer);\n        instance._touchTimer = setTimeout(function () {\n            instance._touching = false;\n        }, 700);\n    }\n\n\n    var domHandlers = {\n        /**\n         * Mouse move handler\n         * @inner\n         * @param {Event} event\n         */\n        mousemove: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            this.trigger('mousemove', event);\n        },\n\n        /**\n         * Mouse out handler\n         * @inner\n         * @param {Event} event\n         */\n        mouseout: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            var element = event.toElement || event.relatedTarget;\n            if (element != this.dom) {\n                while (element && element.nodeType != 9) {\n                    // 忽略包含在root中的dom引起的mouseOut\n                    if (element === this.dom) {\n                        return;\n                    }\n\n                    element = element.parentNode;\n                }\n            }\n\n            this.trigger('mouseout', event);\n        },\n\n        /**\n         * Touch开始响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchstart: function (event) {\n            // Default mouse behaviour should not be disabled here.\n            // For example, page may needs to be slided.\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            this._lastTouchMoment = new Date();\n\n            processGesture(this, event, 'start');\n\n            // In touch device, trigger `mousemove`(`mouseover`) should\n            // be triggered, and must before `mousedown` triggered.\n            domHandlers.mousemove.call(this, event);\n\n            domHandlers.mousedown.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch移动响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchmove: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'change');\n\n            // Mouse move should always be triggered no matter whether\n            // there is gestrue event, because mouse move and pinch may\n            // be used at the same time.\n            domHandlers.mousemove.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch结束响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchend: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'end');\n\n            domHandlers.mouseup.call(this, event);\n\n            // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n            // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n            // we can conveniently implement \"hover style\" in both PC and touch device just\n            // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n            // to remove \"hover style\" on an element, without any additional code for\n            // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n            // style\" will remain for user view)\n\n            // click event should always be triggered no matter whether\n            // there is gestrue event. System click can not be prevented.\n            if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n                domHandlers.click.call(this, event);\n            }\n\n            setTouchTimer(this);\n        },\n\n        pointerdown: function (event) {\n            domHandlers.mousedown.call(this, event);\n\n            // if (useMSGuesture(this, event)) {\n            //     this._msGesture.addPointer(event.pointerId);\n            // }\n        },\n\n        pointermove: function (event) {\n            // FIXME\n            // pointermove is so sensitive that it always triggered when\n            // tap(click) on touch screen, which affect some judgement in\n            // upper application. So, we dont support mousemove on MS touch\n            // device yet.\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mousemove.call(this, event);\n            }\n        },\n\n        pointerup: function (event) {\n            domHandlers.mouseup.call(this, event);\n        },\n\n        pointerout: function (event) {\n            // pointerout will be triggered when tap on touch screen\n            // (IE11+/Edge on MS Surface) after click event triggered,\n            // which is inconsistent with the mousout behavior we defined\n            // in touchend. So we unify them.\n            // (check domHandlers.touchend for detailed explanation)\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mouseout.call(this, event);\n            }\n        }\n    };\n\n    function isPointerFromTouch(event) {\n        var pointerType = event.pointerType;\n        return pointerType === 'pen' || pointerType === 'touch';\n    }\n\n    // function useMSGuesture(handlerProxy, event) {\n    //     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n    // }\n\n    // Common handlers\n    zrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        domHandlers[name] = function (event) {\n            event = normalizeEvent(this.dom, event);\n            this.trigger(name, event);\n        };\n    });\n\n    /**\n     * 为控制类实例初始化dom 事件处理函数\n     *\n     * @inner\n     * @param {module:zrender/Handler} instance 控制类实例\n     */\n    function initDomHandler(instance) {\n        zrUtil.each(touchHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(pointerHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(mouseHandlerNames, function (name) {\n            instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n        });\n\n        function makeMouseHandler(fn, instance) {\n            return function () {\n                if (instance._touching) {\n                    return;\n                }\n                return fn.apply(instance, arguments);\n            };\n        }\n    }\n\n\n    function HandlerDomProxy(dom) {\n        Eventful.call(this);\n\n        this.dom = dom;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._touching = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._touchTimer;\n\n        /**\n         * @private\n         * @type {module:zrender/core/GestureMgr}\n         */\n        this._gestureMgr = new GestureMgr();\n\n        this._handlers = {};\n\n        initDomHandler(this);\n\n        if (env.pointerEventsSupported) { // Only IE11+/Edge\n            // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n            // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n            // at the same time.\n            // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n            // screen, which do not occurs in pointer event.\n            // So we use pointer event to both detect touch gesture and mouse behavior.\n            mountHandlers(pointerHandlerNames, this);\n\n            // FIXME\n            // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n            // which does not prevent defuault behavior occasionally (which may cause view port\n            // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n            // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n            // touch screen. And we only support click behavior on MS touch screen now.\n\n            // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n            // We dont support touch on IE on win7.\n            // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n            // if (typeof MSGesture === 'function') {\n            //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n            //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n            // }\n        }\n        else {\n            if (env.touchEventsSupported) {\n                mountHandlers(touchHandlerNames, this);\n                // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n                // addEventListener(root, 'mouseout', this._mouseoutHandler);\n            }\n\n            // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n            // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n            // mouse event can not be handle in those devices.\n            // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n            // mouseevent after touch event triggered, see `setTouchTimer`.\n            mountHandlers(mouseHandlerNames, this);\n        }\n\n        function mountHandlers(handlerNames, instance) {\n            zrUtil.each(handlerNames, function (name) {\n                addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n            }, instance);\n        }\n    }\n\n    var handlerDomProxyProto = HandlerDomProxy.prototype;\n    handlerDomProxyProto.dispose = function () {\n        var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n        for (var i = 0; i < handlerNames.length; i++) {\n            var name = handlerNames[i];\n            removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n        }\n    };\n\n    handlerDomProxyProto.setCursor = function (cursorStyle) {\n        this.dom.style.cursor = cursorStyle || 'default';\n    };\n\n    zrUtil.mixin(HandlerDomProxy, Eventful);\n\n    module.exports = HandlerDomProxy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/dom/HandlerProxy.js\n// module id = 766\n// module chunks = 0 1 2","// CompoundPath to improve performance\n\n\n    var Path = require('./Path');\n\n    module.exports = Path.extend({\n\n        type: 'compound',\n\n        shape: {\n\n            paths: null\n        },\n\n        _updatePathDirty: function () {\n            var dirtyPath = this.__dirtyPath;\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                // Mark as dirty if any subpath is dirty\n                dirtyPath = dirtyPath || paths[i].__dirtyPath;\n            }\n            this.__dirtyPath = dirtyPath;\n            this.__dirty = this.__dirty || dirtyPath;\n        },\n\n        beforeBrush: function () {\n            this._updatePathDirty();\n            var paths = this.shape.paths || [];\n            var scale = this.getGlobalScale();\n            // Update path scale\n            for (var i = 0; i < paths.length; i++) {\n                if (!paths[i].path) {\n                    paths[i].createPathProxy();\n                }\n                paths[i].path.setScale(scale[0], scale[1]);\n            }\n        },\n\n        buildPath: function (ctx, shape) {\n            var paths = shape.paths || [];\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].buildPath(ctx, paths[i].shape, true);\n            }\n        },\n\n        afterBrush: function () {\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].__dirtyPath = false;\n            }\n        },\n\n        getBoundingRect: function () {\n            this._updatePathDirty();\n            return Path.prototype.getBoundingRect.call(this);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/CompoundPath.js\n// module id = 767\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('../core/util');\n\n    var Gradient = require('./Gradient');\n\n    /**\n     * x, y, x2, y2 are all percent from 0 to 1\n     * @param {number} [x=0]\n     * @param {number} [y=0]\n     * @param {number} [x2=1]\n     * @param {number} [y2=0]\n     * @param {Array.<Object>} colorStops\n     * @param {boolean} [globalCoord=false]\n     */\n    var LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'linear', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0 : x;\n\n        this.y = y == null ? 0 : y;\n\n        this.x2 = x2 == null ? 1 : x2;\n\n        this.y2 = y2 == null ? 0 : y2;\n\n        // Can be cloned\n        this.type = 'linear';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    LinearGradient.prototype = {\n\n        constructor: LinearGradient\n    };\n\n    zrUtil.inherits(LinearGradient, Gradient);\n\n    module.exports = LinearGradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/LinearGradient.js\n// module id = 768\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('../core/util');\n\n    var Gradient = require('./Gradient');\n\n    /**\n     * x, y, r are all percent from 0 to 1\n     * @param {number} [x=0.5]\n     * @param {number} [y=0.5]\n     * @param {number} [r=0.5]\n     * @param {Array.<Object>} [colorStops]\n     * @param {boolean} [globalCoord=false]\n     */\n    var RadialGradient = function (x, y, r, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'radial', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0.5 : x;\n\n        this.y = y == null ? 0.5 : y;\n\n        this.r = r == null ? 0.5 : r;\n\n        // Can be cloned\n        this.type = 'radial';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    RadialGradient.prototype = {\n\n        constructor: RadialGradient\n    };\n\n    zrUtil.inherits(RadialGradient, Gradient);\n\n    module.exports = RadialGradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/RadialGradient.js\n// module id = 769\n// module chunks = 0 1 2","/**\n * Text element\n * @module zrender/graphic/Text\n *\n * TODO Wrapping\n *\n * Text not support gradient\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var zrUtil = require('../core/util');\n    var textContain = require('../contain/text');\n    var textHelper = require('./helper/text');\n\n    /**\n     * @alias zrender/graphic/Text\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    var Text = function (opts) {\n        Displayable.call(this, opts);\n    };\n\n    Text.prototype = {\n\n        constructor: Text,\n\n        type: 'text',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n\n            // Optimize, avoid normalize every time.\n            this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n            // Use props with prefix 'text'.\n            style.fill = style.stroke = style.shadowBlur = style.shadowColor =\n                style.shadowOffsetX = style.shadowOffsetY = null;\n\n            var text = style.text;\n            // Convert to string\n            text != null && (text += '');\n\n            // Always bind style\n            style.bind(ctx, this, prevEl);\n\n            if (!textHelper.needDrawText(text, style)) {\n                return;\n            }\n\n            this.setTransform(ctx);\n\n            textHelper.renderText(this, ctx, text, style);\n\n            this.restoreTransform(ctx);\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n\n            // Optimize, avoid normalize every time.\n            this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n            if (!this._rect) {\n                var text = style.text;\n                text != null ? (text += '') : (text = '');\n\n                var rect = textContain.getBoundingRect(\n                    style.text + '',\n                    style.font,\n                    style.textAlign,\n                    style.textVerticalAlign,\n                    style.textPadding,\n                    style.rich\n                );\n\n                rect.x += style.x || 0;\n                rect.y += style.y || 0;\n\n                if (textHelper.getStroke(style.textStroke, style.textLineWidth)) {\n                    var w = style.textLineWidth;\n                    rect.x -= w / 2;\n                    rect.y -= w / 2;\n                    rect.width += w;\n                    rect.height += w;\n                }\n\n                this._rect = rect;\n            }\n\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(Text, Displayable);\n\n    module.exports = Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Text.js\n// module id = 770\n// module chunks = 0 1 2","/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n\n    var vec2 = require('../../core/vector');\n    var v2Min = vec2.min;\n    var v2Max = vec2.max;\n    var v2Scale = vec2.scale;\n    var v2Distance = vec2.distance;\n    var v2Add = vec2.add;\n\n    /**\n     * 贝塞尔平滑曲线\n     * @alias module:zrender/shape/util/smoothBezier\n     * @param {Array} points 线段顶点数组\n     * @param {number} smooth 平滑等级, 0-1\n     * @param {boolean} isLoop\n     * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n     *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n     *                           整个折线的包围盒做一个并集用来约束控制点。\n     * @param {Array} 计算出来的控制点数组\n     */\n    module.exports = function (points, smooth, isLoop, constraint) {\n        var cps = [];\n\n        var v = [];\n        var v1 = [];\n        var v2 = [];\n        var prevPoint;\n        var nextPoint;\n\n        var min, max;\n        if (constraint) {\n            min = [Infinity, Infinity];\n            max = [-Infinity, -Infinity];\n            for (var i = 0, len = points.length; i < len; i++) {\n                v2Min(min, min, points[i]);\n                v2Max(max, max, points[i]);\n            }\n            // 与指定的包围盒做并集\n            v2Min(min, min, constraint[0]);\n            v2Max(max, max, constraint[1]);\n        }\n\n        for (var i = 0, len = points.length; i < len; i++) {\n            var point = points[i];\n\n            if (isLoop) {\n                prevPoint = points[i ? i - 1 : len - 1];\n                nextPoint = points[(i + 1) % len];\n            }\n            else {\n                if (i === 0 || i === len - 1) {\n                    cps.push(vec2.clone(points[i]));\n                    continue;\n                }\n                else {\n                    prevPoint = points[i - 1];\n                    nextPoint = points[i + 1];\n                }\n            }\n\n            vec2.sub(v, nextPoint, prevPoint);\n\n            // use degree to scale the handle length\n            v2Scale(v, v, smooth);\n\n            var d0 = v2Distance(point, prevPoint);\n            var d1 = v2Distance(point, nextPoint);\n            var sum = d0 + d1;\n            if (sum !== 0) {\n                d0 /= sum;\n                d1 /= sum;\n            }\n\n            v2Scale(v1, v, -d0);\n            v2Scale(v2, v, d1);\n            var cp0 = v2Add([], point, v1);\n            var cp1 = v2Add([], point, v2);\n            if (constraint) {\n                v2Max(cp0, cp0, min);\n                v2Min(cp0, cp0, max);\n                v2Max(cp1, cp1, min);\n                v2Min(cp1, cp1, max);\n            }\n            cps.push(cp0);\n            cps.push(cp1);\n        }\n\n        if (isLoop) {\n            cps.push(cps.shift());\n        }\n\n        return cps;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/smoothBezier.js\n// module id = 771\n// module chunks = 0 1 2","/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n    var vec2 = require('../../core/vector');\n\n    /**\n     * @inner\n     */\n    function interpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    /**\n     * @alias module:zrender/shape/util/smoothSpline\n     * @param {Array} points 线段顶点数组\n     * @param {boolean} isLoop\n     * @return {Array}\n     */\n    module.exports = function (points, isLoop) {\n        var len = points.length;\n        var ret = [];\n\n        var distance = 0;\n        for (var i = 1; i < len; i++) {\n            distance += vec2.distance(points[i - 1], points[i]);\n        }\n\n        var segs = distance / 2;\n        segs = segs < len ? len : segs;\n        for (var i = 0; i < segs; i++) {\n            var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n            var idx = Math.floor(pos);\n\n            var w = pos - idx;\n\n            var p0;\n            var p1 = points[idx % len];\n            var p2;\n            var p3;\n            if (!isLoop) {\n                p0 = points[idx === 0 ? idx : idx - 1];\n                p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n                p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n            }\n            else {\n                p0 = points[(idx - 1 + len) % len];\n                p2 = points[(idx + 1) % len];\n                p3 = points[(idx + 2) % len];\n            }\n\n            var w2 = w * w;\n            var w3 = w * w2;\n\n            ret.push([\n                interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\n                interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\n            ]);\n        }\n        return ret;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/smoothSpline.js\n// module id = 772\n// module chunks = 0 1 2","/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\n\n\n\n    var textHelper = require('../helper/text');\n    var BoundingRect = require('../../core/BoundingRect');\n\n    var tmpRect = new BoundingRect();\n\n    var RectText = function () {};\n\n    RectText.prototype = {\n\n        constructor: RectText,\n\n        /**\n         * Draw text in a rect with specified position.\n         * @param  {CanvasRenderingContext2D} ctx\n         * @param  {Object} rect Displayable rect\n         */\n        drawRectText: function (ctx, rect) {\n            var style = this.style;\n\n            rect = style.textRect || rect;\n\n            // Optimize, avoid normalize every time.\n            this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n            var text = style.text;\n\n            // Convert to string\n            text != null && (text += '');\n\n            if (!textHelper.needDrawText(text, style)) {\n                return;\n            }\n\n            // FIXME\n            ctx.save();\n\n            // Transform rect to view space\n            var transform = this.transform;\n            if (!style.transformText) {\n                if (transform) {\n                    tmpRect.copy(rect);\n                    tmpRect.applyTransform(transform);\n                    rect = tmpRect;\n                }\n            }\n            else {\n                this.setTransform(ctx);\n            }\n\n            // transformText and textRotation can not be used at the same time.\n            textHelper.renderText(this, ctx, text, style, rect);\n\n            ctx.restore();\n        }\n    };\n\n    module.exports = RectText;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/mixin/RectText.js\n// module id = 773\n// module chunks = 0 1 2","/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\n \n\n    module.exports = require('../Path').extend({\n\n        type: 'arc',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        style: {\n\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r + x, unitY * r + y);\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Arc.js\n// module id = 774\n// module chunks = 0 1 2","'use strict';\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\n\n\n    var curveTool = require('../../core/curve');\n    var vec2 = require('../../core/vector');\n    var quadraticSubdivide = curveTool.quadraticSubdivide;\n    var cubicSubdivide = curveTool.cubicSubdivide;\n    var quadraticAt = curveTool.quadraticAt;\n    var cubicAt = curveTool.cubicAt;\n    var quadraticDerivativeAt = curveTool.quadraticDerivativeAt;\n    var cubicDerivativeAt = curveTool.cubicDerivativeAt;\n\n    var out = [];\n\n    function someVectorAt(shape, t, isTangent) {\n        var cpx2 = shape.cpx2;\n        var cpy2 = shape.cpy2;\n        if (cpx2 === null || cpy2 === null) {\n            return [\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t),\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)\n            ];\n        }\n        else {\n            return [\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t),\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)\n            ];\n        }\n    }\n    module.exports = require('../Path').extend({\n\n        type: 'bezier-curve',\n\n        shape: {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n            cpx1: 0,\n            cpy1: 0,\n            // cpx2: 0,\n            // cpy2: 0\n\n            // Curve show percent, for animating\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var cpx1 = shape.cpx1;\n            var cpy1 = shape.cpy1;\n            var cpx2 = shape.cpx2;\n            var cpy2 = shape.cpy2;\n            var percent = shape.percent;\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (cpx2 == null || cpy2 == null) {\n                if (percent < 1) {\n                    quadraticSubdivide(\n                        x1, cpx1, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    x2 = out[2];\n                    quadraticSubdivide(\n                        y1, cpy1, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    y2 = out[2];\n                }\n\n                ctx.quadraticCurveTo(\n                    cpx1, cpy1,\n                    x2, y2\n                );\n            }\n            else {\n                if (percent < 1) {\n                    cubicSubdivide(\n                        x1, cpx1, cpx2, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    cpx2 = out[2];\n                    x2 = out[3];\n                    cubicSubdivide(\n                        y1, cpy1, cpy2, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    cpy2 = out[2];\n                    y2 = out[3];\n                }\n                ctx.bezierCurveTo(\n                    cpx1, cpy1,\n                    cpx2, cpy2,\n                    x2, y2\n                );\n            }\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        pointAt: function (t) {\n            return someVectorAt(this.shape, t, false);\n        },\n\n        /**\n         * Get tangent at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        tangentAt: function (t) {\n            var p = someVectorAt(this.shape, t, true);\n            return vec2.normalize(p, p);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/BezierCurve.js\n// module id = 775\n// module chunks = 0 1 2","'use strict';\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\n\n\n\n    module.exports = require('../Path').extend({\n\n        type: 'circle',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0\n        },\n\n\n        buildPath : function (ctx, shape, inBundle) {\n            // Better stroking in ShapeBundle\n            // Always do it may have performence issue ( fill may be 2x more cost)\n            if (inBundle) {\n                ctx.moveTo(shape.cx + shape.r, shape.cy);\n            }\n            // else {\n            //     if (ctx.allocate && !ctx.data.length) {\n            //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n            //     }\n            // }\n            // Better stroking in ShapeBundle\n            // ctx.moveTo(shape.cx + shape.r, shape.cy);\n            ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Circle.js\n// module id = 776\n// module chunks = 0 1 2","/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\n\n    module.exports = require('../Path').extend({\n\n        type: 'line',\n\n        shape: {\n            // Start point\n            x1: 0,\n            y1: 0,\n            // End point\n            x2: 0,\n            y2: 0,\n\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var percent = shape.percent;\n\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (percent < 1) {\n                x2 = x1 * (1 - percent) + x2 * percent;\n                y2 = y1 * (1 - percent) + y2 * percent;\n            }\n            ctx.lineTo(x2, y2);\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} percent\n         * @return {Array.<number>}\n         */\n        pointAt: function (p) {\n            var shape = this.shape;\n            return [\n                shape.x1 * (1 - p) + shape.x2 * p,\n                shape.y1 * (1 - p) + shape.y2 * p\n            ];\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Line.js\n// module id = 777\n// module chunks = 0 1 2","/**\n * 多边形\n * @module zrender/shape/Polygon\n */\n\n\n    var polyHelper = require('../helper/poly');\n\n    module.exports = require('../Path').extend({\n        \n        type: 'polygon',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, true);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Polygon.js\n// module id = 778\n// module chunks = 0 1 2","/**\n * @module zrender/graphic/shape/Polyline\n */\n\n\n    var polyHelper = require('../helper/poly');\n\n    module.exports = require('../Path').extend({\n        \n        type: 'polyline',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        style: {\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, false);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Polyline.js\n// module id = 779\n// module chunks = 0 1 2","/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\n\n\n    var roundRectHelper = require('../helper/roundRect');\n\n    module.exports = require('../Path').extend({\n\n        type: 'rect',\n\n        shape: {\n            // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n            // r缩写为1         相当于 [1, 1, 1, 1]\n            // r缩写为[1]       相当于 [1, 1, 1, 1]\n            // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n            // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n            r: 0,\n\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            if (!shape.r) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, shape);\n            }\n            ctx.closePath();\n            return;\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Rect.js\n// module id = 780\n// module chunks = 0 1 2","/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\n\n\n    module.exports = require('../Path').extend({\n\n        type: 'ring',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0,\n            r0: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.cx;\n            var y = shape.cy;\n            var PI2 = Math.PI * 2;\n            ctx.moveTo(x + shape.r, y);\n            ctx.arc(x, y, shape.r, 0, PI2, false);\n            ctx.moveTo(x + shape.r0, y);\n            ctx.arc(x, y, shape.r0, 0, PI2, true);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Ring.js\n// module id = 781\n// module chunks = 0 1 2","/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\n\n\n\n    var Path = require('../Path');\n    var fixClipWithShadow = require('../helper/fixClipWithShadow');\n\n    module.exports = Path.extend({\n\n        type: 'sector',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r0: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        brush: fixClipWithShadow(Path.prototype.brush),\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r0 = Math.max(shape.r0 || 0, 0);\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n\n            ctx.lineTo(unitX * r + x, unitY * r + y);\n\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n\n            ctx.lineTo(\n                Math.cos(endAngle) * r0 + x,\n                Math.sin(endAngle) * r0 + y\n            );\n\n            if (r0 !== 0) {\n                ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n            }\n\n            ctx.closePath();\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Sector.js\n// module id = 782\n// module chunks = 0 1 2","'use strict';\n/**\n * @module zrender/mixin/Animatable\n */\n\n\n    var Animator = require('../animation/Animator');\n    var util = require('../core/util');\n    var isString = util.isString;\n    var isFunction = util.isFunction;\n    var isObject = util.isObject;\n    var log = require('../core/log');\n\n    /**\n     * @alias modue:zrender/mixin/Animatable\n     * @constructor\n     */\n    var Animatable = function () {\n\n        /**\n         * @type {Array.<module:zrender/animation/Animator>}\n         * @readOnly\n         */\n        this.animators = [];\n    };\n\n    Animatable.prototype = {\n\n        constructor: Animatable,\n\n        /**\n         * 动画\n         *\n         * @param {string} path The path to fetch value from object, like 'a.b.c'.\n         * @param {boolean} [loop] Whether to loop animation.\n         * @return {module:zrender/animation/Animator}\n         * @example:\n         *     el.animate('style', false)\n         *         .when(1000, {x: 10} )\n         *         .done(function(){ // Animation done })\n         *         .start()\n         */\n        animate: function (path, loop) {\n            var target;\n            var animatingShape = false;\n            var el = this;\n            var zr = this.__zr;\n            if (path) {\n                var pathSplitted = path.split('.');\n                var prop = el;\n                // If animating shape\n                animatingShape = pathSplitted[0] === 'shape';\n                for (var i = 0, l = pathSplitted.length; i < l; i++) {\n                    if (!prop) {\n                        continue;\n                    }\n                    prop = prop[pathSplitted[i]];\n                }\n                if (prop) {\n                    target = prop;\n                }\n            }\n            else {\n                target = el;\n            }\n\n            if (!target) {\n                log(\n                    'Property \"'\n                    + path\n                    + '\" is not existed in element '\n                    + el.id\n                );\n                return;\n            }\n\n            var animators = el.animators;\n\n            var animator = new Animator(target, loop);\n\n            animator.during(function (target) {\n                el.dirty(animatingShape);\n            })\n            .done(function () {\n                // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n                animators.splice(util.indexOf(animators, animator), 1);\n            });\n\n            animators.push(animator);\n\n            // If animate after added to the zrender\n            if (zr) {\n                zr.animation.addAnimator(animator);\n            }\n\n            return animator;\n        },\n\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stopAnimation: function (forwardToLast) {\n            var animators = this.animators;\n            var len = animators.length;\n            for (var i = 0; i < len; i++) {\n                animators[i].stop(forwardToLast);\n            }\n            animators.length = 0;\n\n            return this;\n        },\n\n        /**\n         * @param {Object} target\n         * @param {number} [time=500] Time in ms\n         * @param {string} [easing='linear']\n         * @param {number} [delay=0]\n         * @param {Function} [callback]\n         * @param {Function} [forceAnimate] Prevent stop animation and callback\n         *        immediently when target values are the same as current values.\n         *\n         * @example\n         *  // Animate position\n         *  el.animateTo({\n         *      position: [10, 10]\n         *  }, function () { // done })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n         *  el.animateTo({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100, 'cubicOut', function () { // done })\n         */\n         // TODO Return animation key\n        animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n            // animateTo(target, time, easing, callback);\n            if (isString(delay)) {\n                callback = easing;\n                easing = delay;\n                delay = 0;\n            }\n            // animateTo(target, time, delay, callback);\n            else if (isFunction(easing)) {\n                callback = easing;\n                easing = 'linear';\n                delay = 0;\n            }\n            // animateTo(target, time, callback);\n            else if (isFunction(delay)) {\n                callback = delay;\n                delay = 0;\n            }\n            // animateTo(target, callback)\n            else if (isFunction(time)) {\n                callback = time;\n                time = 500;\n            }\n            // animateTo(target)\n            else if (!time) {\n                time = 500;\n            }\n            // Stop all previous animations\n            this.stopAnimation();\n            this._animateToShallow('', this, target, time, delay, easing, callback);\n\n            // Animators may be removed immediately after start\n            // if there is nothing to animate\n            var animators = this.animators.slice();\n            var count = animators.length;\n            function done() {\n                count--;\n                if (!count) {\n                    callback && callback();\n                }\n            }\n\n            // No animators. This should be checked before animators[i].start(),\n            // because 'done' may be executed immediately if no need to animate.\n            if (!count) {\n                callback && callback();\n            }\n            // Start after all animators created\n            // Incase any animator is done immediately when all animation properties are not changed\n            for (var i = 0; i < animators.length; i++) {\n                animators[i]\n                    .done(done)\n                    .start(easing, forceAnimate);\n            }\n        },\n\n        /**\n         * @private\n         * @param {string} path=''\n         * @param {Object} source=this\n         * @param {Object} target\n         * @param {number} [time=500]\n         * @param {number} [delay=0]\n         *\n         * @example\n         *  // Animate position\n         *  el._animateToShallow({\n         *      position: [10, 10]\n         *  })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms\n         *  el._animateToShallow({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100)\n         */\n        _animateToShallow: function (path, source, target, time, delay) {\n            var objShallow = {};\n            var propertyCount = 0;\n            for (var name in target) {\n                if (!target.hasOwnProperty(name)) {\n                    continue;\n                }\n\n                if (source[name] != null) {\n                    if (isObject(target[name]) && !util.isArrayLike(target[name])) {\n                        this._animateToShallow(\n                            path ? path + '.' + name : name,\n                            source[name],\n                            target[name],\n                            time,\n                            delay\n                        );\n                    }\n                    else {\n                        objShallow[name] = target[name];\n                        propertyCount++;\n                    }\n                }\n                else if (target[name] != null) {\n                    // Attr directly if not has property\n                    // FIXME, if some property not needed for element ?\n                    if (!path) {\n                        this.attr(name, target[name]);\n                    }\n                    else {  // Shape or style\n                        var props = {};\n                        props[path] = {};\n                        props[path][name] = target[name];\n                        this.attr(props);\n                    }\n                }\n            }\n\n            if (propertyCount > 0) {\n                this.animate(path, false)\n                    .when(time == null ? 500 : time, objShallow)\n                    .delay(delay || 0);\n            }\n\n            return this;\n        }\n    };\n\n    module.exports = Animatable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Animatable.js\n// module id = 783\n// module chunks = 0 1 2","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\n\n    function Draggable() {\n\n        this.on('mousedown', this._dragStart, this);\n        this.on('mousemove', this._drag, this);\n        this.on('mouseup', this._dragEnd, this);\n        this.on('globalout', this._dragEnd, this);\n        // this._dropTarget = null;\n        // this._draggingTarget = null;\n\n        // this._x = 0;\n        // this._y = 0;\n    }\n\n    Draggable.prototype = {\n\n        constructor: Draggable,\n\n        _dragStart: function (e) {\n            var draggingTarget = e.target;\n            if (draggingTarget && draggingTarget.draggable) {\n                this._draggingTarget = draggingTarget;\n                draggingTarget.dragging = true;\n                this._x = e.offsetX;\n                this._y = e.offsetY;\n\n                this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n            }\n        },\n\n        _drag: function (e) {\n            var draggingTarget = this._draggingTarget;\n            if (draggingTarget) {\n\n                var x = e.offsetX;\n                var y = e.offsetY;\n\n                var dx = x - this._x;\n                var dy = y - this._y;\n                this._x = x;\n                this._y = y;\n\n                draggingTarget.drift(dx, dy, e);\n                this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n\n                var dropTarget = this.findHover(x, y, draggingTarget).target;\n                var lastDropTarget = this._dropTarget;\n                this._dropTarget = dropTarget;\n\n                if (draggingTarget !== dropTarget) {\n                    if (lastDropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n                    }\n                    if (dropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n                    }\n                }\n            }\n        },\n\n        _dragEnd: function (e) {\n            var draggingTarget = this._draggingTarget;\n\n            if (draggingTarget) {\n                draggingTarget.dragging = false;\n            }\n\n            this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n            if (this._dropTarget) {\n                this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n            }\n\n            this._draggingTarget = null;\n            this._dropTarget = null;\n        }\n\n    };\n\n    function param(target, e) {\n        return {target: target, topTarget: e && e.topTarget};\n    }\n\n    module.exports = Draggable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Draggable.js\n// module id = 784\n// module chunks = 0 1 2","\n\n    var Path = require('../graphic/Path');\n    var PathProxy = require('../core/PathProxy');\n    var transformPath = require('./transformPath');\n\n    // command chars\n    var cc = [\n        'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\n        'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\n    ];\n\n    var mathSqrt = Math.sqrt;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n    var PI = Math.PI;\n\n    var vMag = function(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n    var vRatio = function(u, v) {\n        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n    var vAngle = function(u, v) {\n        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)\n                * Math.acos(vRatio(u, v));\n    };\n\n    function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n        var psi = psiDeg * (PI / 180.0);\n        var xp = mathCos(psi) * (x1 - x2) / 2.0\n                 + mathSin(psi) * (y1 - y2) / 2.0;\n        var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0\n                 + mathCos(psi) * (y1 - y2) / 2.0;\n\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n\n        if (lambda > 1) {\n            rx *= mathSqrt(lambda);\n            ry *= mathSqrt(lambda);\n        }\n\n        var f = (fa === fs ? -1 : 1)\n            * mathSqrt((((rx * rx) * (ry * ry))\n                    - ((rx * rx) * (yp * yp))\n                    - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)\n                    + (ry * ry) * (xp * xp))\n                ) || 0;\n\n        var cxp = f * rx * yp / ry;\n        var cyp = f * -ry * xp / rx;\n\n        var cx = (x1 + x2) / 2.0\n                 + mathCos(psi) * cxp\n                 - mathSin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0\n                + mathSin(psi) * cxp\n                + mathCos(psi) * cyp;\n\n        var theta = vAngle([ 1, 0 ], [ (xp - cxp) / rx, (yp - cyp) / ry ]);\n        var u = [ (xp - cxp) / rx, (yp - cyp) / ry ];\n        var v = [ (-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry ];\n        var dTheta = vAngle(u, v);\n\n        if (vRatio(u, v) <= -1) {\n            dTheta = PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * PI;\n        }\n\n        path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n    }\n\n    function createPathProxyFromString(data) {\n        if (!data) {\n            return [];\n        }\n\n        // command string\n        var cs = data.replace(/-/g, ' -')\n            .replace(/  /g, ' ')\n            .replace(/ /g, ',')\n            .replace(/,,/g, ',');\n\n        var n;\n        // create pipes so that we can split the data\n        for (n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n\n        // create array\n        var arr = cs.split('|');\n        // init context point\n        var cpx = 0;\n        var cpy = 0;\n\n        var path = new PathProxy();\n        var CMD = PathProxy.CMD;\n\n        var prevCmd;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            var off = 0;\n            var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n            var cmd;\n\n            if (p.length > 0 && p[0] === '') {\n                p.shift();\n            }\n\n            for (var i = 0; i < p.length; i++) {\n                p[i] = parseFloat(p[i]);\n            }\n            while (off < p.length && !isNaN(p[off])) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var ctlPtx;\n                var ctlPty;\n\n                var rx;\n                var ry;\n                var psi;\n                var fa;\n                var fs;\n\n                var x1 = cpx;\n                var y1 = cpy;\n\n                // convert l, H, h, V, and v to L\n                switch (c) {\n                    case 'l':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'm':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'C':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]\n                        );\n                        cpx = p[off - 2];\n                        cpy = p[off - 1];\n                        break;\n                    case 'c':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy\n                        );\n                        cpx += p[off - 2];\n                        cpy += p[off - 1];\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = cpx + p[off++];\n                        y1 = cpy + p[off++];\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 'Q':\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'q':\n                        x1 = p[off++] + cpx;\n                        y1 = p[off++] + cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                    case 'a':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                }\n            }\n\n            if (c === 'z' || c === 'Z') {\n                cmd = CMD.Z;\n                path.addData(cmd);\n            }\n\n            prevCmd = cmd;\n        }\n\n        path.toStatic();\n\n        return path;\n    }\n\n    // TODO Optimize double memory cost problem\n    function createPathOptions(str, opts) {\n        var pathProxy = createPathProxyFromString(str);\n        opts = opts || {};\n        opts.buildPath = function (path) {\n            if (path.setData) {\n                path.setData(pathProxy.data);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            }\n            else {\n                var ctx = path;\n                pathProxy.rebuildPath(ctx);\n            }\n        };\n\n        opts.applyTransform = function (m) {\n            transformPath(pathProxy, m);\n\n            this.dirty(true);\n        };\n\n        return opts;\n    }\n\n    module.exports = {\n        /**\n         * Create a Path object from path string data\n         * http://www.w3.org/TR/SVG/paths.html#PathData\n         * @param  {Object} opts Other options\n         */\n        createFromString: function (str, opts) {\n            return new Path(createPathOptions(str, opts));\n        },\n\n        /**\n         * Create a Path class from path string data\n         * @param  {string} str\n         * @param  {Object} opts Other options\n         */\n        extendFromString: function (str, opts) {\n            return Path.extend(createPathOptions(str, opts));\n        },\n\n        /**\n         * Merge multiple paths\n         */\n        // TODO Apply transform\n        // TODO stroke dash\n        // TODO Optimize double memory cost problem\n        mergePath: function (pathEls, opts) {\n            var pathList = [];\n            var len = pathEls.length;\n            for (var i = 0; i < len; i++) {\n                var pathEl = pathEls[i];\n                if (!pathEl.path) {\n                    pathEl.createPathProxy();\n                }\n                if (pathEl.__dirtyPath) {\n                    pathEl.buildPath(pathEl.path, pathEl.shape, true);\n                }\n                pathList.push(pathEl.path);\n            }\n\n            var pathBundle = new Path(opts);\n            // Need path proxy.\n            pathBundle.createPathProxy();\n            pathBundle.buildPath = function (path) {\n                path.appendPath(pathList);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            };\n\n            return pathBundle;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/path.js\n// module id = 785\n// module chunks = 0 1 2","\n\n    var CMD = require('../core/PathProxy').CMD;\n    var vec2 = require('../core/vector');\n    var v2ApplyTransform = vec2.applyTransform;\n\n    var points = [[], [], []];\n    var mathSqrt = Math.sqrt;\n    var mathAtan2 = Math.atan2;\n    function transformPath(path, m) {\n        var data = path.data;\n        var cmd;\n        var nPoint;\n        var i;\n        var j;\n        var k;\n        var p;\n\n        var M = CMD.M;\n        var C = CMD.C;\n        var L = CMD.L;\n        var R = CMD.R;\n        var A = CMD.A;\n        var Q = CMD.Q;\n\n        for (i = 0, j = 0; i < data.length;) {\n            cmd = data[i++];\n            j = i;\n            nPoint = 0;\n\n            switch (cmd) {\n                case M:\n                    nPoint = 1;\n                    break;\n                case L:\n                    nPoint = 1;\n                    break;\n                case C:\n                    nPoint = 3;\n                    break;\n                case Q:\n                    nPoint = 2;\n                    break;\n                case A:\n                    var x = m[4];\n                    var y = m[5];\n                    var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n                    var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n                    var angle = mathAtan2(-m[1] / sy, m[0] / sx);\n                    // cx\n                    data[i] *= sx;\n                    data[i++] += x;\n                    // cy\n                    data[i] *= sy;\n                    data[i++] += y;\n                    // Scale rx and ry\n                    // FIXME Assume psi is 0 here\n                    data[i++] *= sx;\n                    data[i++] *= sy;\n\n                    // Start angle\n                    data[i++] += angle;\n                    // end angle\n                    data[i++] += angle;\n                    // FIXME psi\n                    i += 2;\n                    j = i;\n                    break;\n                case R:\n                    // x0, y0\n                    p[0] = data[i++];\n                    p[1] = data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n                    // x1, y1\n                    p[0] += data[i++];\n                    p[1] += data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n            }\n\n            for (k = 0; k < nPoint; k++) {\n                var p = points[k];\n                p[0] = data[i++];\n                p[1] = data[i++];\n\n                v2ApplyTransform(p, p, m);\n                // Write back\n                data[j++] = p[0];\n                data[j++] = p[1];\n            }\n        }\n    }\n\n    module.exports = transformPath;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/transformPath.js\n// module id = 786\n// module chunks = 0 1 2","/*!\n * ZRender, a high performance 2d drawing library.\n *\n * Copyright (c) 2013, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n */\n// Global defines\n\n    var guid = require('./core/guid');\n    var env = require('./core/env');\n    var zrUtil = require('./core/util');\n\n    var Handler = require('./Handler');\n    var Storage = require('./Storage');\n    var Animation = require('./animation/Animation');\n    var HandlerProxy = require('./dom/HandlerProxy');\n\n    var useVML = !env.canvasSupported;\n\n    var painterCtors = {\n        canvas: require('./Painter')\n    };\n\n    var instances = {};    // ZRender实例map索引\n\n    var zrender = {};\n\n    /**\n     * @type {string}\n     */\n    zrender.version = '3.6.0';\n\n    /**\n     * Initializing a zrender instance\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @return {module:zrender/ZRender}\n     */\n    zrender.init = function (dom, opts) {\n        var zr = new ZRender(guid(), dom, opts);\n        instances[zr.id] = zr;\n        return zr;\n    };\n\n    /**\n     * Dispose zrender instance\n     * @param {module:zrender/ZRender} zr\n     */\n    zrender.dispose = function (zr) {\n        if (zr) {\n            zr.dispose();\n        }\n        else {\n            for (var key in instances) {\n                if (instances.hasOwnProperty(key)) {\n                    instances[key].dispose();\n                }\n            }\n            instances = {};\n        }\n\n        return zrender;\n    };\n\n    /**\n     * Get zrender instance by id\n     * @param {string} id zrender instance id\n     * @return {module:zrender/ZRender}\n     */\n    zrender.getInstance = function (id) {\n        return instances[id];\n    };\n\n    zrender.registerPainter = function (name, Ctor) {\n        painterCtors[name] = Ctor;\n    };\n\n    function delInstance(id) {\n        delete instances[id];\n    }\n\n    /**\n     * @module zrender/ZRender\n     */\n    /**\n     * @constructor\n     * @alias module:zrender/ZRender\n     * @param {string} id\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     */\n    var ZRender = function (id, dom, opts) {\n\n        opts = opts || {};\n\n        /**\n         * @type {HTMLDomElement}\n         */\n        this.dom = dom;\n\n        /**\n         * @type {string}\n         */\n        this.id = id;\n\n        var self = this;\n        var storage = new Storage();\n\n        var rendererType = opts.renderer;\n        // TODO WebGL\n        if (useVML) {\n            if (!painterCtors.vml) {\n                throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n            }\n            rendererType = 'vml';\n        }\n        else if (!rendererType || !painterCtors[rendererType]) {\n            rendererType = 'canvas';\n        }\n        var painter = new painterCtors[rendererType](dom, storage, opts);\n\n        this.storage = storage;\n        this.painter = painter;\n\n        var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n        this.handler = new Handler(storage, painter, handerProxy, painter.root);\n\n        /**\n         * @type {module:zrender/animation/Animation}\n         */\n        this.animation = new Animation({\n            stage: {\n                update: zrUtil.bind(this.flush, this)\n            }\n        });\n        this.animation.start();\n\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._needsRefresh;\n\n        // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n        // FIXME 有点ugly\n        var oldDelFromStorage = storage.delFromStorage;\n        var oldAddToStorage = storage.addToStorage;\n\n        storage.delFromStorage = function (el) {\n            oldDelFromStorage.call(storage, el);\n\n            el && el.removeSelfFromZr(self);\n        };\n\n        storage.addToStorage = function (el) {\n            oldAddToStorage.call(storage, el);\n\n            el.addSelfToZr(self);\n        };\n    };\n\n    ZRender.prototype = {\n\n        constructor: ZRender,\n        /**\n         * 获取实例唯一标识\n         * @return {string}\n         */\n        getId: function () {\n            return this.id;\n        },\n\n        /**\n         * 添加元素\n         * @param  {module:zrender/Element} el\n         */\n        add: function (el) {\n            this.storage.addRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * 删除元素\n         * @param  {module:zrender/Element} el\n         */\n        remove: function (el) {\n            this.storage.delRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Change configuration of layer\n         * @param {string} zLevel\n         * @param {Object} config\n         * @param {string} [config.clearColor=0] Clear color\n         * @param {string} [config.motionBlur=false] If enable motion blur\n         * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n        */\n        configLayer: function (zLevel, config) {\n            this.painter.configLayer(zLevel, config);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Repaint the canvas immediately\n         */\n        refreshImmediately: function () {\n            // var start = new Date();\n            // Clear needsRefresh ahead to avoid something wrong happens in refresh\n            // Or it will cause zrender refreshes again and again.\n            this._needsRefresh = false;\n            this.painter.refresh();\n            /**\n             * Avoid trigger zr.refresh in Element#beforeUpdate hook\n             */\n            this._needsRefresh = false;\n            // var end = new Date();\n\n            // var log = document.getElementById('log');\n            // if (log) {\n            //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n            // }\n        },\n\n        /**\n         * Mark and repaint the canvas in the next frame of browser\n         */\n        refresh: function() {\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Perform all refresh\n         */\n        flush: function () {\n            if (this._needsRefresh) {\n                this.refreshImmediately();\n            }\n            if (this._needsRefreshHover) {\n                this.refreshHoverImmediately();\n            }\n        },\n\n        /**\n         * Add element to hover layer\n         * @param  {module:zrender/Element} el\n         * @param {Object} style\n         */\n        addHover: function (el, style) {\n            if (this.painter.addHover) {\n                this.painter.addHover(el, style);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Add element from hover layer\n         * @param  {module:zrender/Element} el\n         */\n        removeHover: function (el) {\n            if (this.painter.removeHover) {\n                this.painter.removeHover(el);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Clear all hover elements in hover layer\n         * @param  {module:zrender/Element} el\n         */\n        clearHover: function () {\n            if (this.painter.clearHover) {\n                this.painter.clearHover();\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Refresh hover in next frame\n         */\n        refreshHover: function () {\n            this._needsRefreshHover = true;\n        },\n\n        /**\n         * Refresh hover immediately\n         */\n        refreshHoverImmediately: function () {\n            this._needsRefreshHover = false;\n            this.painter.refreshHover && this.painter.refreshHover();\n        },\n\n        /**\n         * Resize the canvas.\n         * Should be invoked when container size is changed\n         * @param {Object} [opts]\n         * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n         * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n         */\n        resize: function(opts) {\n            opts = opts || {};\n            this.painter.resize(opts.width, opts.height);\n            this.handler.resize();\n        },\n\n        /**\n         * Stop and clear all animation immediately\n         */\n        clearAnimation: function () {\n            this.animation.clear();\n        },\n\n        /**\n         * Get container width\n         */\n        getWidth: function() {\n            return this.painter.getWidth();\n        },\n\n        /**\n         * Get container height\n         */\n        getHeight: function() {\n            return this.painter.getHeight();\n        },\n\n        /**\n         * Export the canvas as Base64 URL\n         * @param {string} type\n         * @param {string} [backgroundColor='#fff']\n         * @return {string} Base64 URL\n         */\n        // toDataURL: function(type, backgroundColor) {\n        //     return this.painter.getRenderedCanvas({\n        //         backgroundColor: backgroundColor\n        //     }).toDataURL(type);\n        // },\n\n        /**\n         * Converting a path to image.\n         * It has much better performance of drawing image rather than drawing a vector path.\n         * @param {module:zrender/graphic/Path} e\n         * @param {number} width\n         * @param {number} height\n         */\n        pathToImage: function(e, dpr) {\n            return this.painter.pathToImage(e, dpr);\n        },\n\n        /**\n         * Set default cursor\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            this.handler.setCursorStyle(cursorStyle);\n        },\n\n        /**\n         * Find hovered element\n         * @param {number} x\n         * @param {number} y\n         * @return {Object} {target, topTarget}\n         */\n        findHover: function (x, y) {\n            return this.handler.findHover(x, y);\n        },\n\n        /**\n         * Bind event\n         *\n         * @param {string} eventName Event name\n         * @param {Function} eventHandler Handler function\n         * @param {Object} [context] Context object\n         */\n        on: function(eventName, eventHandler, context) {\n            this.handler.on(eventName, eventHandler, context);\n        },\n\n        /**\n         * Unbind event\n         * @param {string} eventName Event name\n         * @param {Function} [eventHandler] Handler function\n         */\n        off: function(eventName, eventHandler) {\n            this.handler.off(eventName, eventHandler);\n        },\n\n        /**\n         * Trigger event manually\n         *\n         * @param {string} eventName Event name\n         * @param {event=} event Event object\n         */\n        trigger: function (eventName, event) {\n            this.handler.trigger(eventName, event);\n        },\n\n\n        /**\n         * Clear all objects and the canvas.\n         */\n        clear: function () {\n            this.storage.delRoot();\n            this.painter.clear();\n        },\n\n        /**\n         * Dispose self.\n         */\n        dispose: function () {\n            this.animation.stop();\n\n            this.clear();\n            this.storage.dispose();\n            this.painter.dispose();\n            this.handler.dispose();\n\n            this.animation =\n            this.storage =\n            this.painter =\n            this.handler = null;\n\n            delInstance(this.id);\n        }\n    };\n\n    module.exports = zrender;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/zrender.js\n// module id = 787\n// module chunks = 0 1 2","\n    var echarts = require('../echarts');\n    var zrUtil = require('zrender/lib/core/util');\n    module.exports = function (seriesType, actionInfos) {\n        zrUtil.each(actionInfos, function (actionInfo) {\n            actionInfo.update = 'updateView';\n            /**\n             * @payload\n             * @property {string} seriesName\n             * @property {string} name\n             */\n            echarts.registerAction(actionInfo, function (payload, ecModel) {\n                var selected = {};\n                ecModel.eachComponent(\n                    {mainType: 'series', subType: seriesType, query: payload},\n                    function (seriesModel) {\n                        if (seriesModel[actionInfo.method]) {\n                            seriesModel[actionInfo.method](\n                                payload.name,\n                                payload.dataIndex\n                            );\n                        }\n                        var data = seriesModel.getData();\n                        // Create selected map\n                        data.each(function (idx) {\n                            var name = data.getName(idx);\n                            selected[name] = seriesModel.isSelected(name)\n                                || false;\n                        });\n                    }\n                );\n                return {\n                    name: payload.name,\n                    selected: selected\n                };\n            });\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/action/createDataSelectAction.js\n// module id = 801\n// module chunks = 0 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    require('../coord/cartesian/Grid');\n\n    require('./bar/BarSeries');\n    require('./bar/BarView');\n\n    var barLayoutGrid = require('../layout/barGrid');\n    var echarts = require('../echarts');\n\n    echarts.registerLayout(zrUtil.curry(barLayoutGrid, 'bar'));\n\n    // Visual coding for legend\n    echarts.registerVisual(function (ecModel) {\n        ecModel.eachSeriesByType('bar', function (seriesModel) {\n            var data = seriesModel.getData();\n            data.setVisual('legendSymbol', 'roundRect');\n        });\n    });\n\n    // In case developer forget to include grid component\n    require('../component/gridSimple');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar.js\n// module id = 802\n// module chunks = 0 1","\n\n    module.exports = require('./BaseBarSeries').extend({\n\n        type: 'series.bar',\n\n        dependencies: ['grid', 'polar'],\n\n        brushSelector: 'rect'\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar/BarSeries.js\n// module id = 803\n// module chunks = 0 1","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var helper = require('./helper');\n\n    var BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'normal', 'barBorderWidth'];\n\n    // FIXME\n    // Just for compatible with ec2.\n    zrUtil.extend(require('../../model/Model').prototype, require('./barItemStyle'));\n\n    var BarView = require('../../echarts').extendChartView({\n\n        type: 'bar',\n\n        render: function (seriesModel, ecModel, api) {\n            var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n            if (coordinateSystemType === 'cartesian2d'\n                || coordinateSystemType === 'polar'\n            ) {\n                this._render(seriesModel, ecModel, api);\n            }\n            else if (__DEV__) {\n                console.warn('Only cartesian2d and polar supported for bar.');\n            }\n\n            return this.group;\n        },\n\n        dispose: zrUtil.noop,\n\n        _render: function (seriesModel, ecModel, api) {\n            var group = this.group;\n            var data = seriesModel.getData();\n            var oldData = this._data;\n\n            var coord = seriesModel.coordinateSystem;\n            var baseAxis = coord.getBaseAxis();\n            var isHorizontalOrRadial;\n\n            if (coord.type === 'cartesian2d') {\n                isHorizontalOrRadial = baseAxis.isHorizontal();\n            }\n            else if (coord.type === 'polar') {\n                isHorizontalOrRadial = baseAxis.dim === 'angle';\n            }\n\n            var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n\n            data.diff(oldData)\n                .add(function (dataIndex) {\n                    if (!data.hasValue(dataIndex)) {\n                        return;\n                    }\n\n                    var itemModel = data.getItemModel(dataIndex);\n                    var layout = getLayout[coord.type](data, dataIndex, itemModel);\n                    var el = elementCreator[coord.type](\n                        data, dataIndex, itemModel, layout, isHorizontalOrRadial, animationModel\n                    );\n                    data.setItemGraphicEl(dataIndex, el);\n                    group.add(el);\n\n                    updateStyle(\n                        el, data, dataIndex, itemModel, layout,\n                        seriesModel, isHorizontalOrRadial, coord.type === 'polar'\n                    );\n                })\n                .update(function (newIndex, oldIndex) {\n                    var el = oldData.getItemGraphicEl(oldIndex);\n\n                    if (!data.hasValue(newIndex)) {\n                        group.remove(el);\n                        return;\n                    }\n\n                    var itemModel = data.getItemModel(newIndex);\n                    var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n                    if (el) {\n                        graphic.updateProps(el, {shape: layout}, animationModel, newIndex);\n                    }\n                    else {\n                        el = elementCreator[coord.type](\n                            data, newIndex, itemModel, layout, isHorizontalOrRadial, animationModel, true\n                        );\n                    }\n\n                    data.setItemGraphicEl(newIndex, el);\n                    // Add back\n                    group.add(el);\n\n                    updateStyle(\n                        el, data, newIndex, itemModel, layout,\n                        seriesModel, isHorizontalOrRadial, coord.type === 'polar'\n                    );\n                })\n                .remove(function (dataIndex) {\n                    var el = oldData.getItemGraphicEl(dataIndex);\n                    if (coord.type === 'cartesian2d') {\n                        el && removeRect(dataIndex, animationModel, el);\n                    }\n                    else {\n                        el && removeSector(dataIndex, animationModel, el);\n                    }\n                })\n                .execute();\n\n            this._data = data;\n        },\n\n        remove: function (ecModel, api) {\n            var group = this.group;\n            var data = this._data;\n            if (ecModel.get('animation')) {\n                if (data) {\n                    data.eachItemGraphicEl(function (el) {\n                        if (el.type === 'sector') {\n                            removeSector(el.dataIndex, ecModel, el);\n                        }\n                        else {\n                            removeRect(el.dataIndex, ecModel, el);\n                        }\n                    });\n                }\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    });\n\n    var elementCreator = {\n\n        cartesian2d: function (\n            data, dataIndex, itemModel, layout, isHorizontal,\n            animationModel, isUpdate\n        ) {\n            var rect = new graphic.Rect({shape: zrUtil.extend({}, layout)});\n\n            // Animation\n            if (animationModel) {\n                var rectShape = rect.shape;\n                var animateProperty = isHorizontal ? 'height' : 'width';\n                var animateTarget = {};\n                rectShape[animateProperty] = 0;\n                animateTarget[animateProperty] = layout[animateProperty];\n                graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n                    shape: animateTarget\n                }, animationModel, dataIndex);\n            }\n\n            return rect;\n        },\n\n        polar: function (\n            data, dataIndex, itemModel, layout, isRadial,\n            animationModel, isUpdate\n        ) {\n            var sector = new graphic.Sector({shape: zrUtil.extend({}, layout)});\n\n            // Animation\n            if (animationModel) {\n                var sectorShape = sector.shape;\n                var animateProperty = isRadial ? 'r' : 'endAngle';\n                var animateTarget = {};\n                sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n                animateTarget[animateProperty] = layout[animateProperty];\n                graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n                    shape: animateTarget\n                }, animationModel, dataIndex);\n            }\n\n            return sector;\n        }\n    };\n\n    function removeRect(dataIndex, animationModel, el) {\n        // Not show text when animating\n        el.style.text = null;\n        graphic.updateProps(el, {\n            shape: {\n                width: 0\n            }\n        }, animationModel, dataIndex, function () {\n            el.parent && el.parent.remove(el);\n        });\n    }\n\n    function removeSector(dataIndex, animationModel, el) {\n        // Not show text when animating\n        el.style.text = null;\n        graphic.updateProps(el, {\n            shape: {\n                r: el.shape.r0\n            }\n        }, animationModel, dataIndex, function () {\n            el.parent && el.parent.remove(el);\n        });\n    }\n\n    var getLayout = {\n        cartesian2d: function (data, dataIndex, itemModel) {\n            var layout = data.getItemLayout(dataIndex);\n            var fixedLineWidth = getLineWidth(itemModel, layout);\n\n            // fix layout with lineWidth\n            var signX = layout.width > 0 ? 1 : -1;\n            var signY = layout.height > 0 ? 1 : -1;\n            return {\n                x: layout.x + signX * fixedLineWidth / 2,\n                y: layout.y + signY * fixedLineWidth / 2,\n                width: layout.width - signX * fixedLineWidth,\n                height: layout.height - signY * fixedLineWidth\n            };\n        },\n\n        polar: function (data, dataIndex, itemModel) {\n            var layout = data.getItemLayout(dataIndex);\n            return {\n                cx: layout.cx,\n                cy: layout.cy,\n                r0: layout.r0,\n                r: layout.r,\n                startAngle: layout.startAngle,\n                endAngle: layout.endAngle\n            };\n        }\n    };\n\n    function updateStyle(\n        el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar\n    ) {\n        var color = data.getItemVisual(dataIndex, 'color');\n        var opacity = data.getItemVisual(dataIndex, 'opacity');\n        var itemStyleModel = itemModel.getModel('itemStyle.normal');\n        var hoverStyle = itemModel.getModel('itemStyle.emphasis').getBarItemStyle();\n\n        if (!isPolar) {\n            el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n        }\n\n        el.useStyle(zrUtil.defaults(\n            {\n                fill: color,\n                opacity: opacity\n            },\n            itemStyleModel.getBarItemStyle()\n        ));\n\n        var cursorStyle = itemModel.getShallow('cursor');\n        cursorStyle && el.attr('cursor', cursorStyle);\n\n        var labelPositionOutside = isHorizontal\n            ? (layout.height > 0 ? 'bottom' : 'top')\n            : (layout.width > 0 ? 'left' : 'right');\n\n        if (!isPolar) {\n            helper.setLabel(\n                el.style, hoverStyle, itemModel, color,\n                seriesModel, dataIndex, labelPositionOutside\n            );\n        }\n\n        graphic.setHoverStyle(el, hoverStyle);\n    }\n\n    // In case width or height are too small.\n    function getLineWidth(itemModel, rawLayout) {\n        var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n        return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n    }\n\n    module.exports = BarView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar/BarView.js\n// module id = 804\n// module chunks = 0 1","'use strict';\n\n\n    var SeriesModel = require('../../model/Series');\n    var createListFromArray = require('../helper/createListFromArray');\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.__base_bar__',\n\n        getInitialData: function (option, ecModel) {\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        getMarkerPosition: function (value) {\n            var coordSys = this.coordinateSystem;\n            if (coordSys) {\n                // PENDING if clamp ?\n                var pt = coordSys.dataToPoint(value, true);\n                var data = this.getData();\n                var offset = data.getLayout('offset');\n                var size = data.getLayout('size');\n                var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n                pt[offsetIndex] += offset + size / 2;\n                return pt;\n            }\n            return [NaN, NaN];\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n            // stack: null\n\n            // Cartesian coordinate system\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // 最小高度改为0\n            barMinHeight: 0,\n            // 最小角度为0，仅对极坐标系下的柱状图有效\n            barMinAngle: 0,\n            // cursor: null,\n\n            // barMaxWidth: null,\n            // 默认自适应\n            // barWidth: null,\n            // 柱间距离，默认为柱形宽度的30%，可设固定值\n            // barGap: '30%',\n            // 类目间柱形距离，默认为类目间距的20%，可设固定值\n            // barCategoryGap: '20%',\n            // label: {\n            //     normal: {\n            //         show: false\n            //     }\n            // },\n            itemStyle: {\n                normal: {\n                    // color: '各异'\n                },\n                emphasis: {}\n            }\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar/BaseBarSeries.js\n// module id = 805\n// module chunks = 0 1","\n\n\n    var getBarItemStyle = require('../../model/mixin/makeStyleMapper')(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            // Compatitable with 2\n            ['stroke', 'barBorderColor'],\n            ['lineWidth', 'barBorderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getBarItemStyle: function (excludes) {\n            var style = getBarItemStyle.call(this, excludes);\n            if (this.getBorderLineDash) {\n                var lineDash = this.getBorderLineDash();\n                lineDash && (style.lineDash = lineDash);\n            }\n            return style;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar/barItemStyle.js\n// module id = 806\n// module chunks = 0 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n\n    var helper = {};\n\n    helper.setLabel = function (\n        normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside\n    ) {\n        var labelModel = itemModel.getModel('label.normal');\n        var hoverLabelModel = itemModel.getModel('label.emphasis');\n\n        if (labelModel.get('show')) {\n            setLabel(\n                normalStyle, labelModel, color,\n                zrUtil.retrieve2(\n                    seriesModel.getFormattedLabel(dataIndex, 'normal'),\n                    seriesModel.getRawValue(dataIndex)\n                ),\n                labelPositionOutside\n            );\n        }\n        else {\n            normalStyle.text = null;\n        }\n\n        if (hoverLabelModel.get('show')) {\n            setLabel(\n                hoverStyle, hoverLabelModel, false,\n                seriesModel.getFormattedLabel(dataIndex, 'emphasis'),\n                labelPositionOutside\n            );\n        }\n        else {\n            hoverStyle.text = null;\n        }\n    };\n\n    function setLabel(style, model, defaultColor, labelText, labelPositionOutside) {\n        graphic.setText(style, model, defaultColor);\n        style.text = labelText;\n        if (style.textPosition === 'outside') {\n            style.textPosition = labelPositionOutside;\n        }\n    }\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/bar/helper.js\n// module id = 807\n// module chunks = 0 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n\n    require('./funnel/FunnelSeries');\n    require('./funnel/FunnelView');\n\n    echarts.registerVisual(zrUtil.curry(require('../visual/dataColor'), 'funnel'));\n    echarts.registerLayout(require('./funnel/funnelLayout'));\n\n    echarts.registerProcessor(zrUtil.curry(require('../processor/dataFilter'), 'funnel'));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/funnel.js\n// module id = 808\n// module chunks = 0 1","'use strict';\n\n\n    var List = require('../../data/List');\n    var modelUtil = require('../../util/model');\n    var completeDimensions = require('../../data/helper/completeDimensions');\n\n    var FunnelSeries = require('../../echarts').extendSeriesModel({\n\n        type: 'series.funnel',\n\n        init: function (option) {\n            FunnelSeries.superApply(this, 'init', arguments);\n\n            // Enable legend selection for each data item\n            // Use a function instead of direct access because data reference may changed\n            this.legendDataProvider = function () {\n                return this.getRawData();\n            };\n            // Extend labelLine emphasis\n            this._defaultLabelLine(option);\n        },\n\n        getInitialData: function (option, ecModel) {\n            var dimensions = completeDimensions(['value'], option.data);\n            var list = new List(dimensions, this);\n            list.initData(option.data);\n            return list;\n        },\n\n        _defaultLabelLine: function (option) {\n            // Extend labelLine emphasis\n            modelUtil.defaultEmphasis(option.labelLine, ['show']);\n\n            var labelLineNormalOpt = option.labelLine.normal;\n            var labelLineEmphasisOpt = option.labelLine.emphasis;\n            // Not show label line if `label.normal.show = false`\n            labelLineNormalOpt.show = labelLineNormalOpt.show\n                && option.label.normal.show;\n            labelLineEmphasisOpt.show = labelLineEmphasisOpt.show\n                && option.label.emphasis.show;\n        },\n\n        // Overwrite\n        getDataParams: function (dataIndex) {\n            var data = this.getData();\n            var params = FunnelSeries.superCall(this, 'getDataParams', dataIndex);\n            var sum = data.getSum('value');\n            // Percent is 0 if sum is 0\n            params.percent = !sum ? 0 : +(data.get('value', dataIndex) / sum * 100).toFixed(2);\n\n            params.$vars.push('percent');\n            return params;\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            legendHoverLink: true,\n            left: 80,\n            top: 60,\n            right: 80,\n            bottom: 60,\n            // width: {totalWidth} - left - right,\n            // height: {totalHeight} - top - bottom,\n\n            // 默认取数据最小最大值\n            // min: 0,\n            // max: 100,\n            minSize: '0%',\n            maxSize: '100%',\n            sort: 'descending', // 'ascending', 'descending'\n            gap: 0,\n            funnelAlign: 'center',\n            label: {\n                normal: {\n                    show: true,\n                    position: 'outer'\n                    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n                },\n                emphasis: {\n                    show: true\n                }\n            },\n            labelLine: {\n                normal: {\n                    show: true,\n                    length: 20,\n                    lineStyle: {\n                        // color: 各异,\n                        width: 1,\n                        type: 'solid'\n                    }\n                },\n                emphasis: {}\n            },\n            itemStyle: {\n                normal: {\n                    // color: 各异,\n                    borderColor: '#fff',\n                    borderWidth: 1\n                },\n                emphasis: {\n                    // color: 各异,\n                }\n            }\n        }\n    });\n\n    module.exports = FunnelSeries;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/funnel/FunnelSeries.js\n// module id = 809\n// module chunks = 0 1","\n\n    var graphic = require('../../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n\n    /**\n     * Piece of pie including Sector, Label, LabelLine\n     * @constructor\n     * @extends {module:zrender/graphic/Group}\n     */\n    function FunnelPiece(data, idx) {\n\n        graphic.Group.call(this);\n\n        var polygon = new graphic.Polygon();\n        var labelLine = new graphic.Polyline();\n        var text = new graphic.Text();\n        this.add(polygon);\n        this.add(labelLine);\n        this.add(text);\n\n        this.updateData(data, idx, true);\n\n        // Hover to change label and labelLine\n        function onEmphasis() {\n            labelLine.ignore = labelLine.hoverIgnore;\n            text.ignore = text.hoverIgnore;\n        }\n        function onNormal() {\n            labelLine.ignore = labelLine.normalIgnore;\n            text.ignore = text.normalIgnore;\n        }\n        this.on('emphasis', onEmphasis)\n            .on('normal', onNormal)\n            .on('mouseover', onEmphasis)\n            .on('mouseout', onNormal);\n    }\n\n    var funnelPieceProto = FunnelPiece.prototype;\n\n    var opacityAccessPath = ['itemStyle', 'normal', 'opacity'];\n    funnelPieceProto.updateData = function (data, idx, firstCreate) {\n\n        var polygon = this.childAt(0);\n\n        var seriesModel = data.hostModel;\n        var itemModel = data.getItemModel(idx);\n        var layout = data.getItemLayout(idx);\n        var opacity = data.getItemModel(idx).get(opacityAccessPath);\n        opacity = opacity == null ? 1 : opacity;\n\n        // Reset style\n        polygon.useStyle({});\n\n        if (firstCreate) {\n            polygon.setShape({\n                points: layout.points\n            });\n            polygon.setStyle({ opacity : 0 });\n            graphic.initProps(polygon, {\n                style: {\n                    opacity: opacity\n                }\n            }, seriesModel, idx);\n        }\n        else {\n            graphic.updateProps(polygon, {\n                style: {\n                    opacity: opacity\n                },\n                shape: {\n                    points: layout.points\n                }\n            }, seriesModel, idx);\n        }\n\n        // Update common style\n        var itemStyleModel = itemModel.getModel('itemStyle');\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        polygon.setStyle(\n            zrUtil.defaults(\n                {\n                    lineJoin: 'round',\n                    fill: visualColor\n                },\n                itemStyleModel.getModel('normal').getItemStyle(['opacity'])\n            )\n        );\n        polygon.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n\n        this._updateLabel(data, idx);\n\n        graphic.setHoverStyle(this);\n    };\n\n    funnelPieceProto._updateLabel = function (data, idx) {\n\n        var labelLine = this.childAt(1);\n        var labelText = this.childAt(2);\n\n        var seriesModel = data.hostModel;\n        var itemModel = data.getItemModel(idx);\n        var layout = data.getItemLayout(idx);\n        var labelLayout = layout.label;\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        graphic.updateProps(labelLine, {\n            shape: {\n                points: labelLayout.linePoints || labelLayout.linePoints\n            }\n        }, seriesModel, idx);\n\n        graphic.updateProps(labelText, {\n            style: {\n                x: labelLayout.x,\n                y: labelLayout.y\n            }\n        }, seriesModel, idx);\n        labelText.attr({\n            rotation: labelLayout.rotation,\n            origin: [labelLayout.x, labelLayout.y],\n            z2: 10\n        });\n\n        var labelModel = itemModel.getModel('label.normal');\n        var labelHoverModel = itemModel.getModel('label.emphasis');\n        var labelLineModel = itemModel.getModel('labelLine.normal');\n        var labelLineHoverModel = itemModel.getModel('labelLine.emphasis');\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        graphic.setTextStyle(labelText.style, labelModel, {\n            textAlign: labelLayout.textAlign,\n            textVerticalAlign: labelLayout.verticalAlign,\n            text: zrUtil.retrieve(data.hostModel.getFormattedLabel(idx, 'normal'), data.getName(idx))\n        }, {\n            defaultTextColor: visualColor,\n            autoColor: visualColor,\n            checkInside: function (model, opt) {\n                return labelLayout.inside;\n            }\n        });\n\n        labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n        labelText.hoverIgnore = !labelHoverModel.get('show');\n\n        labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n        labelLine.hoverIgnore = !labelLineHoverModel.get('show');\n\n        // Default use item visual color\n        labelLine.setStyle({\n            stroke: visualColor\n        });\n        labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n\n        labelText.hoverStyle = graphic.setTextStyle({}, labelHoverModel, {\n            text: data.hostModel.getFormattedLabel(idx, 'emphasis')\n        }, {forMerge: true});\n\n        labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n    };\n\n    zrUtil.inherits(FunnelPiece, graphic.Group);\n\n\n    var Funnel = require('../../view/Chart').extend({\n\n        type: 'funnel',\n\n        render: function (seriesModel, ecModel, api) {\n            var data = seriesModel.getData();\n            var oldData = this._data;\n\n            var group = this.group;\n\n            data.diff(oldData)\n                .add(function (idx) {\n                    var funnelPiece = new FunnelPiece(data, idx);\n\n                    data.setItemGraphicEl(idx, funnelPiece);\n\n                    group.add(funnelPiece);\n                })\n                .update(function (newIdx, oldIdx) {\n                    var piePiece = oldData.getItemGraphicEl(oldIdx);\n\n                    piePiece.updateData(data, newIdx);\n\n                    group.add(piePiece);\n                    data.setItemGraphicEl(newIdx, piePiece);\n                })\n                .remove(function (idx) {\n                    var piePiece = oldData.getItemGraphicEl(idx);\n                    group.remove(piePiece);\n                })\n                .execute();\n\n            this._data = data;\n        },\n\n        remove: function () {\n            this.group.removeAll();\n            this._data = null;\n        },\n\n        dispose: function () {}\n    });\n\n    module.exports = Funnel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/funnel/FunnelView.js\n// module id = 810\n// module chunks = 0 1","\n\n    var layout = require('../../util/layout');\n    var number = require('../../util/number');\n\n    var parsePercent = number.parsePercent;\n\n    function getViewRect(seriesModel, api) {\n        return layout.getLayoutRect(\n            seriesModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            }\n        );\n    }\n\n    function getSortedIndices(data, sort) {\n        var valueArr = data.mapArray('value', function (val) {\n            return val;\n        });\n        var indices = [];\n        var isAscending = sort === 'ascending';\n        for (var i = 0, len = data.count(); i < len; i++) {\n            indices[i] = i;\n        }\n\n        // Add custom sortable function & none sortable opetion by \"options.sort\"\n        if (typeof sort === 'function') {\n            indices.sort(sort);\n        } else if (sort !== 'none') {\n            indices.sort(function (a, b) {\n                return isAscending ? valueArr[a] - valueArr[b] : valueArr[b] - valueArr[a];\n            });\n        }\n        return indices;\n    }\n\n    function labelLayout(data) {\n        data.each(function (idx) {\n            var itemModel = data.getItemModel(idx);\n            var labelModel = itemModel.getModel('label.normal');\n            var labelPosition = labelModel.get('position');\n\n            var labelLineModel = itemModel.getModel('labelLine.normal');\n\n            var layout = data.getItemLayout(idx);\n            var points = layout.points;\n\n            var isLabelInside = labelPosition === 'inner'\n                || labelPosition === 'inside' || labelPosition === 'center';\n\n            var textAlign;\n            var textX;\n            var textY;\n            var linePoints;\n\n            if (isLabelInside) {\n                textX = (points[0][0] + points[1][0] + points[2][0] + points[3][0]) / 4;\n                textY = (points[0][1] + points[1][1] + points[2][1] + points[3][1]) / 4;\n                textAlign = 'center';\n                linePoints = [\n                    [textX, textY], [textX, textY]\n                ];\n            }\n            else {\n                var x1;\n                var y1;\n                var x2;\n                var labelLineLen = labelLineModel.get('length');\n                if (labelPosition === 'left') {\n                    // Left side\n                    x1 = (points[3][0] + points[0][0]) / 2;\n                    y1 = (points[3][1] + points[0][1]) / 2;\n                    x2 = x1 - labelLineLen;\n                    textX = x2 - 5;\n                    textAlign = 'right';\n                }\n                else {\n                    // Right side\n                    x1 = (points[1][0] + points[2][0]) / 2;\n                    y1 = (points[1][1] + points[2][1]) / 2;\n                    x2 = x1 + labelLineLen;\n                    textX = x2 + 5;\n                    textAlign = 'left';\n                }\n                var y2 = y1;\n\n                linePoints = [[x1, y1], [x2, y2]];\n                textY = y2;\n            }\n\n            layout.label = {\n                linePoints: linePoints,\n                x: textX,\n                y: textY,\n                verticalAlign: 'middle',\n                textAlign: textAlign,\n                inside: isLabelInside\n            };\n        });\n    }\n\n    module.exports = function (ecModel, api, payload) {\n        ecModel.eachSeriesByType('funnel', function (seriesModel) {\n            var data = seriesModel.getData();\n            var sort = seriesModel.get('sort');\n            var viewRect = getViewRect(seriesModel, api);\n            var indices = getSortedIndices(data, sort);\n\n            var sizeExtent = [\n                parsePercent(seriesModel.get('minSize'), viewRect.width),\n                parsePercent(seriesModel.get('maxSize'), viewRect.width)\n            ];\n            var dataExtent = data.getDataExtent('value');\n            var min = seriesModel.get('min');\n            var max = seriesModel.get('max');\n            if (min == null) {\n                min = Math.min(dataExtent[0], 0);\n            }\n            if (max == null) {\n                max = dataExtent[1];\n            }\n\n            var funnelAlign = seriesModel.get('funnelAlign');\n            var gap = seriesModel.get('gap');\n            var itemHeight = (viewRect.height - gap * (data.count() - 1)) / data.count();\n\n            var y = viewRect.y;\n\n            var getLinePoints = function (idx, offY) {\n                // End point index is data.count() and we assign it 0\n                var val = data.get('value', idx) || 0;\n                var itemWidth = number.linearMap(val, [min, max], sizeExtent, true);\n                var x0;\n                switch (funnelAlign) {\n                    case 'left':\n                        x0 = viewRect.x;\n                        break;\n                    case 'center':\n                        x0 = viewRect.x + (viewRect.width - itemWidth) / 2;\n                        break;\n                    case 'right':\n                        x0 = viewRect.x + viewRect.width - itemWidth;\n                        break;\n                }\n                return [\n                    [x0, offY],\n                    [x0 + itemWidth, offY]\n                ];\n            };\n\n            if (sort === 'ascending') {\n                // From bottom to top\n                itemHeight = -itemHeight;\n                gap = -gap;\n                y += viewRect.height;\n                indices = indices.reverse();\n            }\n\n            for (var i = 0; i < indices.length; i++) {\n                var idx = indices[i];\n                var nextIdx = indices[i + 1];\n                var start = getLinePoints(idx, y);\n                var end = getLinePoints(nextIdx, y + itemHeight);\n\n                y += itemHeight + gap;\n\n                data.setItemLayout(idx, {\n                    points: start.concat(end.slice().reverse())\n                });\n            }\n\n            labelLayout(data);\n        });\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/funnel/funnelLayout.js\n// module id = 811\n// module chunks = 0 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n\n    require('./pie/PieSeries');\n    require('./pie/PieView');\n\n    require('../action/createDataSelectAction')('pie', [{\n        type: 'pieToggleSelect',\n        event: 'pieselectchanged',\n        method: 'toggleSelected'\n    }, {\n        type: 'pieSelect',\n        event: 'pieselected',\n        method: 'select'\n    }, {\n        type: 'pieUnSelect',\n        event: 'pieunselected',\n        method: 'unSelect'\n    }]);\n\n    echarts.registerVisual(zrUtil.curry(require('../visual/dataColor'), 'pie'));\n\n    echarts.registerLayout(zrUtil.curry(\n        require('./pie/pieLayout'), 'pie'\n    ));\n\n    echarts.registerProcessor(zrUtil.curry(require('../processor/dataFilter'), 'pie'));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/pie.js\n// module id = 812\n// module chunks = 0 1","'use strict';\n\n\n    var List = require('../../data/List');\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var numberUtil = require('../../util/number');\n    var completeDimensions = require('../../data/helper/completeDimensions');\n\n    var dataSelectableMixin = require('../../component/helper/selectableMixin');\n\n    var PieSeries = require('../../echarts').extendSeriesModel({\n\n        type: 'series.pie',\n\n        // Overwrite\n        init: function (option) {\n            PieSeries.superApply(this, 'init', arguments);\n\n            // Enable legend selection for each data item\n            // Use a function instead of direct access because data reference may changed\n            this.legendDataProvider = function () {\n                return this.getRawData();\n            };\n\n            this.updateSelectedMap(option.data);\n\n            this._defaultLabelLine(option);\n        },\n\n        // Overwrite\n        mergeOption: function (newOption) {\n            PieSeries.superCall(this, 'mergeOption', newOption);\n            this.updateSelectedMap(this.option.data);\n        },\n\n        getInitialData: function (option, ecModel) {\n            var dimensions = completeDimensions(['value'], option.data);\n            var list = new List(dimensions, this);\n            list.initData(option.data);\n            return list;\n        },\n\n        // Overwrite\n        getDataParams: function (dataIndex) {\n            var data = this.getData();\n            var params = PieSeries.superCall(this, 'getDataParams', dataIndex);\n            // FIXME toFixed?\n\n            var valueList = [];\n            data.each('value', function (value) {\n                valueList.push(value);\n            });\n\n            params.percent = numberUtil.getPercentWithPrecision(\n                valueList,\n                dataIndex,\n                data.hostModel.get('percentPrecision')\n            );\n\n            params.$vars.push('percent');\n            return params;\n        },\n\n        _defaultLabelLine: function (option) {\n            // Extend labelLine emphasis\n            modelUtil.defaultEmphasis(option.labelLine, ['show']);\n\n            var labelLineNormalOpt = option.labelLine.normal;\n            var labelLineEmphasisOpt = option.labelLine.emphasis;\n            // Not show label line if `label.normal.show = false`\n            labelLineNormalOpt.show = labelLineNormalOpt.show\n                && option.label.normal.show;\n            labelLineEmphasisOpt.show = labelLineEmphasisOpt.show\n                && option.label.emphasis.show;\n        },\n\n        defaultOption: {\n            zlevel: 0,\n            z: 2,\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // 默认全局居中\n            center: ['50%', '50%'],\n            radius: [0, '75%'],\n            // 默认顺时针\n            clockwise: true,\n            startAngle: 90,\n            // 最小角度改为0\n            minAngle: 0,\n            // 选中是扇区偏移量\n            selectedOffset: 10,\n\n            // If use strategy to avoid label overlapping\n            avoidLabelOverlap: true,\n            // 选择模式，默认关闭，可选single，multiple\n            // selectedMode: false,\n            // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n            // roseType: null,\n\n            percentPrecision: 2,\n\n            // If still show when all data zero.\n            stillShowZeroSum: true,\n\n            // cursor: null,\n\n            label: {\n                normal: {\n                    // If rotate around circle\n                    rotate: false,\n                    show: true,\n                    // 'outer', 'inside', 'center'\n                    position: 'outer'\n                    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n                    // 默认使用全局文本样式，详见TEXTSTYLE\n                    // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n                },\n                emphasis: {}\n            },\n            // Enabled when label.normal.position is 'outer'\n            labelLine: {\n                normal: {\n                    show: true,\n                    // 引导线两段中的第一段长度\n                    length: 15,\n                    // 引导线两段中的第二段长度\n                    length2: 15,\n                    smooth: false,\n                    lineStyle: {\n                        // color: 各异,\n                        width: 1,\n                        type: 'solid'\n                    }\n                }\n            },\n            itemStyle: {\n                normal: {\n                    borderWidth: 1\n                },\n                emphasis: {}\n            },\n\n            // Animation type canbe expansion, scale\n            animationType: 'expansion',\n\n            animationEasing: 'cubicOut',\n\n            data: []\n        }\n    });\n\n    zrUtil.mixin(PieSeries, dataSelectableMixin);\n\n    module.exports = PieSeries;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/pie/PieSeries.js\n// module id = 813\n// module chunks = 0 1","\n\n    var graphic = require('../../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n\n    /**\n     * @param {module:echarts/model/Series} seriesModel\n     * @param {boolean} hasAnimation\n     * @inner\n     */\n    function updateDataSelected(uid, seriesModel, hasAnimation, api) {\n        var data = seriesModel.getData();\n        var dataIndex = this.dataIndex;\n        var name = data.getName(dataIndex);\n        var selectedOffset = seriesModel.get('selectedOffset');\n\n        api.dispatchAction({\n            type: 'pieToggleSelect',\n            from: uid,\n            name: name,\n            seriesId: seriesModel.id\n        });\n\n        data.each(function (idx) {\n            toggleItemSelected(\n                data.getItemGraphicEl(idx),\n                data.getItemLayout(idx),\n                seriesModel.isSelected(data.getName(idx)),\n                selectedOffset,\n                hasAnimation\n            );\n        });\n    }\n\n    /**\n     * @param {module:zrender/graphic/Sector} el\n     * @param {Object} layout\n     * @param {boolean} isSelected\n     * @param {number} selectedOffset\n     * @param {boolean} hasAnimation\n     * @inner\n     */\n    function toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n        var midAngle = (layout.startAngle + layout.endAngle) / 2;\n\n        var dx = Math.cos(midAngle);\n        var dy = Math.sin(midAngle);\n\n        var offset = isSelected ? selectedOffset : 0;\n        var position = [dx * offset, dy * offset];\n\n        hasAnimation\n            // animateTo will stop revious animation like update transition\n            ? el.animate()\n                .when(200, {\n                    position: position\n                })\n                .start('bounceOut')\n            : el.attr('position', position);\n    }\n\n    /**\n     * Piece of pie including Sector, Label, LabelLine\n     * @constructor\n     * @extends {module:zrender/graphic/Group}\n     */\n    function PiePiece(data, idx) {\n\n        graphic.Group.call(this);\n\n        var sector = new graphic.Sector({\n            z2: 2\n        });\n        var polyline = new graphic.Polyline();\n        var text = new graphic.Text();\n        this.add(sector);\n        this.add(polyline);\n        this.add(text);\n\n        this.updateData(data, idx, true);\n\n        // Hover to change label and labelLine\n        function onEmphasis() {\n            polyline.ignore = polyline.hoverIgnore;\n            text.ignore = text.hoverIgnore;\n        }\n        function onNormal() {\n            polyline.ignore = polyline.normalIgnore;\n            text.ignore = text.normalIgnore;\n        }\n        this.on('emphasis', onEmphasis)\n            .on('normal', onNormal)\n            .on('mouseover', onEmphasis)\n            .on('mouseout', onNormal);\n    }\n\n    var piePieceProto = PiePiece.prototype;\n\n    piePieceProto.updateData = function (data, idx, firstCreate) {\n\n        var sector = this.childAt(0);\n\n        var seriesModel = data.hostModel;\n        var itemModel = data.getItemModel(idx);\n        var layout = data.getItemLayout(idx);\n        var sectorShape = zrUtil.extend({}, layout);\n        sectorShape.label = null;\n\n        if (firstCreate) {\n            sector.setShape(sectorShape);\n\n            var animationType = seriesModel.getShallow('animationType');\n            if (animationType === 'scale') {\n                sector.shape.r = layout.r0;\n                graphic.initProps(sector, {\n                    shape: {\n                        r: layout.r\n                    }\n                }, seriesModel, idx);\n            }\n            // Expansion\n            else {\n                sector.shape.endAngle = layout.startAngle;\n                graphic.updateProps(sector, {\n                    shape: {\n                        endAngle: layout.endAngle\n                    }\n                }, seriesModel, idx);\n            }\n\n        }\n        else {\n            graphic.updateProps(sector, {\n                shape: sectorShape\n            }, seriesModel, idx);\n        }\n\n        // Update common style\n        var itemStyleModel = itemModel.getModel('itemStyle');\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        sector.useStyle(\n            zrUtil.defaults(\n                {\n                    lineJoin: 'bevel',\n                    fill: visualColor\n                },\n                itemStyleModel.getModel('normal').getItemStyle()\n            )\n        );\n        sector.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n\n        var cursorStyle = itemModel.getShallow('cursor');\n        cursorStyle && sector.attr('cursor', cursorStyle);\n\n        // Toggle selected\n        toggleItemSelected(\n            this,\n            data.getItemLayout(idx),\n            itemModel.get('selected'),\n            seriesModel.get('selectedOffset'),\n            seriesModel.get('animation')\n        );\n\n        function onEmphasis() {\n            // Sector may has animation of updating data. Force to move to the last frame\n            // Or it may stopped on the wrong shape\n            sector.stopAnimation(true);\n            sector.animateTo({\n                shape: {\n                    r: layout.r + 10\n                }\n            }, 300, 'elasticOut');\n        }\n        function onNormal() {\n            sector.stopAnimation(true);\n            sector.animateTo({\n                shape: {\n                    r: layout.r\n                }\n            }, 300, 'elasticOut');\n        }\n        sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n        if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {\n            sector\n                .on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n\n        this._updateLabel(data, idx);\n\n        graphic.setHoverStyle(this);\n    };\n\n    piePieceProto._updateLabel = function (data, idx) {\n\n        var labelLine = this.childAt(1);\n        var labelText = this.childAt(2);\n\n        var seriesModel = data.hostModel;\n        var itemModel = data.getItemModel(idx);\n        var layout = data.getItemLayout(idx);\n        var labelLayout = layout.label;\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        graphic.updateProps(labelLine, {\n            shape: {\n                points: labelLayout.linePoints || [\n                    [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]\n                ]\n            }\n        }, seriesModel, idx);\n\n        graphic.updateProps(labelText, {\n            style: {\n                x: labelLayout.x,\n                y: labelLayout.y\n            }\n        }, seriesModel, idx);\n        labelText.attr({\n            rotation: labelLayout.rotation,\n            origin: [labelLayout.x, labelLayout.y],\n            z2: 10\n        });\n\n        var labelModel = itemModel.getModel('label.normal');\n        var labelHoverModel = itemModel.getModel('label.emphasis');\n        var labelLineModel = itemModel.getModel('labelLine.normal');\n        var labelLineHoverModel = itemModel.getModel('labelLine.emphasis');\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        graphic.setTextStyle(labelText.style, labelModel, {\n            textVerticalAlign: labelLayout.verticalAlign,\n            textAlign: labelLayout.textAlign,\n            opacity: data.getItemVisual(idx, 'opacity'),\n            text: zrUtil.retrieve(data.hostModel.getFormattedLabel(idx, 'normal'), data.getName(idx))\n        }, {\n            defaultTextColor: visualColor,\n            autoColor: visualColor,\n            checkInside: function (model, opt) {\n                return labelLayout.inside;\n            }\n        });\n\n        labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n        labelText.hoverIgnore = !labelHoverModel.get('show');\n\n        labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n        labelLine.hoverIgnore = !labelLineHoverModel.get('show');\n\n        // Default use item visual color\n        labelLine.setStyle({\n            stroke: visualColor,\n            opacity: data.getItemVisual(idx, 'opacity')\n        });\n        labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n\n        labelText.hoverStyle = graphic.setTextStyle({}, labelHoverModel, {\n            text: data.hostModel.getFormattedLabel(idx, 'emphasis')\n        }, {forMerge: true});\n\n        labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n\n        var smooth = labelLineModel.get('smooth');\n        if (smooth && smooth === true) {\n            smooth = 0.4;\n        }\n        labelLine.setShape({\n            smooth: smooth\n        });\n    };\n\n    zrUtil.inherits(PiePiece, graphic.Group);\n\n\n    // Pie view\n    var Pie = require('../../view/Chart').extend({\n\n        type: 'pie',\n\n        init: function () {\n            var sectorGroup = new graphic.Group();\n            this._sectorGroup = sectorGroup;\n        },\n\n        render: function (seriesModel, ecModel, api, payload) {\n            if (payload && (payload.from === this.uid)) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var oldData = this._data;\n            var group = this.group;\n\n            var hasAnimation = ecModel.get('animation');\n            var isFirstRender = !oldData;\n            var animationType = seriesModel.get('animationType');\n\n            var onSectorClick = zrUtil.curry(\n                updateDataSelected, this.uid, seriesModel, hasAnimation, api\n            );\n\n            var selectedMode = seriesModel.get('selectedMode');\n\n            data.diff(oldData)\n                .add(function (idx) {\n                    var piePiece = new PiePiece(data, idx);\n                    // Default expansion animation\n                    if (isFirstRender && animationType !== 'scale') {\n                        piePiece.eachChild(function (child) {\n                            child.stopAnimation(true);\n                        });\n                    }\n\n                    selectedMode && piePiece.on('click', onSectorClick);\n\n                    data.setItemGraphicEl(idx, piePiece);\n\n                    group.add(piePiece);\n                })\n                .update(function (newIdx, oldIdx) {\n                    var piePiece = oldData.getItemGraphicEl(oldIdx);\n\n                    piePiece.updateData(data, newIdx);\n\n                    piePiece.off('click');\n                    selectedMode && piePiece.on('click', onSectorClick);\n                    group.add(piePiece);\n                    data.setItemGraphicEl(newIdx, piePiece);\n                })\n                .remove(function (idx) {\n                    var piePiece = oldData.getItemGraphicEl(idx);\n                    group.remove(piePiece);\n                })\n                .execute();\n\n            if (\n                hasAnimation && isFirstRender && data.count() > 0\n                // Default expansion animation\n                && animationType !== 'scale'\n            ) {\n                var shape = data.getItemLayout(0);\n                var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n\n                var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n                group.setClipPath(this._createClipPath(\n                    shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel\n                ));\n            }\n\n            this._data = data;\n        },\n\n        dispose: function () {},\n\n        _createClipPath: function (\n            cx, cy, r, startAngle, clockwise, cb, seriesModel\n        ) {\n            var clipPath = new graphic.Sector({\n                shape: {\n                    cx: cx,\n                    cy: cy,\n                    r0: 0,\n                    r: r,\n                    startAngle: startAngle,\n                    endAngle: startAngle,\n                    clockwise: clockwise\n                }\n            });\n\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n                }\n            }, seriesModel, cb);\n\n            return clipPath;\n        },\n\n        /**\n         * @implement\n         */\n        containPoint: function (point, seriesModel) {\n            var data = seriesModel.getData();\n            var itemLayout = data.getItemLayout(0);\n            if (itemLayout) {\n                var dx = point[0] - itemLayout.cx;\n                var dy = point[1] - itemLayout.cy;\n                var radius = Math.sqrt(dx * dx + dy * dy);\n                return radius <= itemLayout.r && radius >= itemLayout.r0;\n            }\n        }\n\n    });\n\n    module.exports = Pie;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/pie/PieView.js\n// module id = 814\n// module chunks = 0 1","'use strict';\n// FIXME emphasis label position is not same with normal label position\n\n\n    var textContain = require('zrender/lib/contain/text');\n\n    function adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n        list.sort(function (a, b) {\n            return a.y - b.y;\n        });\n\n        // 压\n        function shiftDown(start, end, delta, dir) {\n            for (var j = start; j < end; j++) {\n                list[j].y += delta;\n                if (j > start\n                    && j + 1 < end\n                    && list[j + 1].y > list[j].y + list[j].height\n                ) {\n                    shiftUp(j, delta / 2);\n                    return;\n                }\n            }\n\n            shiftUp(end - 1, delta / 2);\n        }\n\n        // 弹\n        function shiftUp(end, delta) {\n            for (var j = end; j >= 0; j--) {\n                list[j].y -= delta;\n                if (j > 0\n                    && list[j].y > list[j - 1].y + list[j - 1].height\n                ) {\n                    break;\n                }\n            }\n        }\n\n        function changeX(list, isDownList, cx, cy, r, dir) {\n            var lastDeltaX = dir > 0\n                ? isDownList                // 右侧\n                    ? Number.MAX_VALUE      // 下\n                    : 0                     // 上\n                : isDownList                // 左侧\n                    ? Number.MAX_VALUE      // 下\n                    : 0;                    // 上\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                // Not change x for center label\n                if (list[i].position === 'center') {\n                    continue;\n                }\n                var deltaY = Math.abs(list[i].y - cy);\n                var length = list[i].len;\n                var length2 = list[i].len2;\n                var deltaX = (deltaY < r + length)\n                    ? Math.sqrt(\n                          (r + length + length2) * (r + length + length2)\n                          - deltaY * deltaY\n                      )\n                    : Math.abs(list[i].x - cx);\n                if (isDownList && deltaX >= lastDeltaX) {\n                    // 右下，左下\n                    deltaX = lastDeltaX - 10;\n                }\n                if (!isDownList && deltaX <= lastDeltaX) {\n                    // 右上，左上\n                    deltaX = lastDeltaX + 10;\n                }\n\n                list[i].x = cx + deltaX * dir;\n                lastDeltaX = deltaX;\n            }\n        }\n\n        var lastY = 0;\n        var delta;\n        var len = list.length;\n        var upList = [];\n        var downList = [];\n        for (var i = 0; i < len; i++) {\n            delta = list[i].y - lastY;\n            if (delta < 0) {\n                shiftDown(i, len, -delta, dir);\n            }\n            lastY = list[i].y + list[i].height;\n        }\n        if (viewHeight - lastY < 0) {\n            shiftUp(len - 1, lastY - viewHeight);\n        }\n        for (var i = 0; i < len; i++) {\n            if (list[i].y >= cy) {\n                downList.push(list[i]);\n            }\n            else {\n                upList.push(list[i]);\n            }\n        }\n        changeX(upList, false, cx, cy, r, dir);\n        changeX(downList, true, cx, cy, r, dir);\n    }\n\n    function avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n        var leftList = [];\n        var rightList = [];\n        for (var i = 0; i < labelLayoutList.length; i++) {\n            if (labelLayoutList[i].x < cx) {\n                leftList.push(labelLayoutList[i]);\n            }\n            else {\n                rightList.push(labelLayoutList[i]);\n            }\n        }\n\n        adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n        adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n        for (var i = 0; i < labelLayoutList.length; i++) {\n            var linePoints = labelLayoutList[i].linePoints;\n            if (linePoints) {\n                var dist = linePoints[1][0] - linePoints[2][0];\n                if (labelLayoutList[i].x < cx) {\n                    linePoints[2][0] = labelLayoutList[i].x + 3;\n                }\n                else {\n                    linePoints[2][0] = labelLayoutList[i].x - 3;\n                }\n                linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n                linePoints[1][0] = linePoints[2][0] + dist;\n            }\n        }\n    }\n\n    module.exports = function (seriesModel, r, viewWidth, viewHeight) {\n        var data = seriesModel.getData();\n        var labelLayoutList = [];\n        var cx;\n        var cy;\n        var hasLabelRotate = false;\n\n        data.each(function (idx) {\n            var layout = data.getItemLayout(idx);\n\n            var itemModel = data.getItemModel(idx);\n            var labelModel = itemModel.getModel('label.normal');\n            // Use position in normal or emphasis\n            var labelPosition = labelModel.get('position') || itemModel.get('label.emphasis.position');\n\n            var labelLineModel = itemModel.getModel('labelLine.normal');\n            var labelLineLen = labelLineModel.get('length');\n            var labelLineLen2 = labelLineModel.get('length2');\n\n            var midAngle = (layout.startAngle + layout.endAngle) / 2;\n            var dx = Math.cos(midAngle);\n            var dy = Math.sin(midAngle);\n\n            var textX;\n            var textY;\n            var linePoints;\n            var textAlign;\n\n            cx = layout.cx;\n            cy = layout.cy;\n\n            var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n            if (labelPosition === 'center') {\n                textX = layout.cx;\n                textY = layout.cy;\n                textAlign = 'center';\n            }\n            else {\n                var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n                var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n\n                textX = x1 + dx * 3;\n                textY = y1 + dy * 3;\n\n                if (!isLabelInside) {\n                    // For roseType\n                    var x2 = x1 + dx * (labelLineLen + r - layout.r);\n                    var y2 = y1 + dy * (labelLineLen + r - layout.r);\n                    var x3 = x2 + ((dx < 0 ? -1 : 1) * labelLineLen2);\n                    var y3 = y2;\n\n                    textX = x3 + (dx < 0 ? -5 : 5);\n                    textY = y3;\n                    linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n                }\n\n                textAlign = isLabelInside ? 'center' : (dx > 0 ? 'left' : 'right');\n            }\n            var font = labelModel.getFont();\n\n            var labelRotate = labelModel.get('rotate')\n                ? (dx < 0 ? -midAngle + Math.PI : -midAngle) : 0;\n            var text = seriesModel.getFormattedLabel(idx, 'normal')\n                        || data.getName(idx);\n            var textRect = textContain.getBoundingRect(\n                text, font, textAlign, 'top'\n            );\n            hasLabelRotate = !!labelRotate;\n            layout.label = {\n                x: textX,\n                y: textY,\n                position: labelPosition,\n                height: textRect.height,\n                len: labelLineLen,\n                len2: labelLineLen2,\n                linePoints: linePoints,\n                textAlign: textAlign,\n                verticalAlign: 'middle',\n                rotation: labelRotate,\n                inside: isLabelInside\n            };\n\n            // Not layout the inside label\n            if (!isLabelInside) {\n                labelLayoutList.push(layout.label);\n            }\n        });\n        if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n            avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/pie/labelLayout.js\n// module id = 815\n// module chunks = 0 1","\n\n    var numberUtil = require('../../util/number');\n    var parsePercent = numberUtil.parsePercent;\n    var labelLayout = require('./labelLayout');\n    var zrUtil = require('zrender/lib/core/util');\n\n    var PI2 = Math.PI * 2;\n    var RADIAN = Math.PI / 180;\n\n    module.exports = function (seriesType, ecModel, api, payload) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var center = seriesModel.get('center');\n            var radius = seriesModel.get('radius');\n\n            if (!zrUtil.isArray(radius)) {\n                radius = [0, radius];\n            }\n            if (!zrUtil.isArray(center)) {\n                center = [center, center];\n            }\n\n            var width = api.getWidth();\n            var height = api.getHeight();\n            var size = Math.min(width, height);\n            var cx = parsePercent(center[0], width);\n            var cy = parsePercent(center[1], height);\n            var r0 = parsePercent(radius[0], size / 2);\n            var r = parsePercent(radius[1], size / 2);\n\n            var data = seriesModel.getData();\n\n            var startAngle = -seriesModel.get('startAngle') * RADIAN;\n\n            var minAngle = seriesModel.get('minAngle') * RADIAN;\n\n            var validDataCount = 0;\n            data.each('value', function (value) {\n                !isNaN(value) && validDataCount++;\n            });\n\n            var sum = data.getSum('value');\n            // Sum may be 0\n            var unitRadian = Math.PI / (sum || validDataCount) * 2;\n\n            var clockwise = seriesModel.get('clockwise');\n\n            var roseType = seriesModel.get('roseType');\n            var stillShowZeroSum = seriesModel.get('stillShowZeroSum');\n\n            // [0...max]\n            var extent = data.getDataExtent('value');\n            extent[0] = 0;\n\n            // In the case some sector angle is smaller than minAngle\n            var restAngle = PI2;\n            var valueSumLargerThanMinAngle = 0;\n\n            var currentAngle = startAngle;\n            var dir = clockwise ? 1 : -1;\n\n            data.each('value', function (value, idx) {\n                var angle;\n                if (isNaN(value)) {\n                    data.setItemLayout(idx, {\n                        angle: NaN,\n                        startAngle: NaN,\n                        endAngle: NaN,\n                        clockwise: clockwise,\n                        cx: cx,\n                        cy: cy,\n                        r0: r0,\n                        r: roseType\n                            ? NaN\n                            : r\n                    });\n                    return;\n                }\n\n                // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n                if (roseType !== 'area') {\n                    angle = (sum === 0 && stillShowZeroSum)\n                        ? unitRadian : (value * unitRadian);\n                }\n                else {\n                    angle = PI2 / validDataCount;\n                }\n\n                if (angle < minAngle) {\n                    angle = minAngle;\n                    restAngle -= minAngle;\n                }\n                else {\n                    valueSumLargerThanMinAngle += value;\n                }\n\n                var endAngle = currentAngle + dir * angle;\n                data.setItemLayout(idx, {\n                    angle: angle,\n                    startAngle: currentAngle,\n                    endAngle: endAngle,\n                    clockwise: clockwise,\n                    cx: cx,\n                    cy: cy,\n                    r0: r0,\n                    r: roseType\n                        ? numberUtil.linearMap(value, extent, [r0, r])\n                        : r\n                });\n\n                currentAngle = endAngle;\n            }, true);\n\n            // Some sector is constrained by minAngle\n            // Rest sectors needs recalculate angle\n            if (restAngle < PI2 && validDataCount) {\n                // Average the angle if rest angle is not enough after all angles is\n                // Constrained by minAngle\n                if (restAngle <= 1e-3) {\n                    var angle = PI2 / validDataCount;\n                    data.each('value', function (value, idx) {\n                        if (!isNaN(value)) {\n                            var layout = data.getItemLayout(idx);\n                            layout.angle = angle;\n                            layout.startAngle = startAngle + dir * idx * angle;\n                            layout.endAngle = startAngle + dir * (idx + 1) * angle;\n                        }\n                    });\n                }\n                else {\n                    unitRadian = restAngle / valueSumLargerThanMinAngle;\n                    currentAngle = startAngle;\n                    data.each('value', function (value, idx) {\n                        if (!isNaN(value)) {\n                            var layout = data.getItemLayout(idx);\n                            var angle = layout.angle === minAngle\n                                ? minAngle : value * unitRadian;\n                            layout.startAngle = currentAngle;\n                            layout.endAngle = currentAngle + dir * angle;\n                            currentAngle += dir * angle;\n                        }\n                    });\n                }\n            }\n\n            labelLayout(seriesModel, r, width, height);\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/pie/pieLayout.js\n// module id = 816\n// module chunks = 0 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n\n    // Must use radar component\n    require('../component/radar');\n\n    require('./radar/RadarSeries');\n    require('./radar/RadarView');\n\n    echarts.registerVisual(zrUtil.curry(require('../visual/dataColor'), 'radar'));\n    echarts.registerVisual(zrUtil.curry(\n        require('../visual/symbol'), 'radar', 'circle', null\n    ));\n    echarts.registerLayout(require('./radar/radarLayout'));\n\n    echarts.registerProcessor(\n        zrUtil.curry(require('../processor/dataFilter'), 'radar')\n    );\n\n    echarts.registerPreprocessor(require('./radar/backwardCompat'));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/radar.js\n// module id = 817\n// module chunks = 0 1","'use strict';\n\n\n    var SeriesModel = require('../../model/Series');\n    var List = require('../../data/List');\n    var completeDimensions = require('../../data/helper/completeDimensions');\n    var zrUtil = require('zrender/lib/core/util');\n    var encodeHTML = require('../../util/format').encodeHTML;\n\n    var RadarSeries = SeriesModel.extend({\n\n        type: 'series.radar',\n\n        dependencies: ['radar'],\n\n\n        // Overwrite\n        init: function (option) {\n            RadarSeries.superApply(this, 'init', arguments);\n\n            // Enable legend selection for each data item\n            // Use a function instead of direct access because data reference may changed\n            this.legendDataProvider = function () {\n                return this.getRawData();\n            };\n        },\n\n        getInitialData: function (option, ecModel) {\n            var data = option.data || [];\n            var dimensions = completeDimensions(\n                [], data, {extraPrefix: 'indicator_', extraFromZero: true}\n            );\n            var list = new List(dimensions, this);\n            list.initData(data);\n            return list;\n        },\n\n        formatTooltip: function (dataIndex) {\n            var value = this.getRawValue(dataIndex);\n            var coordSys = this.coordinateSystem;\n            var indicatorAxes = coordSys.getIndicatorAxes();\n            var name = this.getData().getName(dataIndex);\n            return encodeHTML(name === '' ? this.name : name) + '<br/>'\n                + zrUtil.map(indicatorAxes, function (axis, idx) {\n                    return encodeHTML(axis.name + ' : ' + value[idx]);\n                }).join('<br />');\n        },\n\n        defaultOption: {\n            zlevel: 0,\n            z: 2,\n            coordinateSystem: 'radar',\n            legendHoverLink: true,\n            radarIndex: 0,\n            lineStyle: {\n                normal: {\n                    width: 2,\n                    type: 'solid'\n                }\n            },\n            label: {\n                normal: {\n                    position: 'top'\n                }\n            },\n            // areaStyle: {\n            // },\n            // itemStyle: {}\n            symbol: 'emptyCircle',\n            symbolSize: 4\n            // symbolRotate: null\n        }\n    });\n\n    module.exports = RadarSeries;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/radar/RadarSeries.js\n// module id = 818\n// module chunks = 0 1","\n\n    var graphic = require('../../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var symbolUtil = require('../../util/symbol');\n\n    function normalizeSymbolSize(symbolSize) {\n        if (!zrUtil.isArray(symbolSize)) {\n            symbolSize = [+symbolSize, +symbolSize];\n        }\n        return symbolSize;\n    }\n    module.exports = require('../../echarts').extendChartView({\n        type: 'radar',\n\n        render: function (seriesModel, ecModel, api) {\n            var polar = seriesModel.coordinateSystem;\n            var group = this.group;\n\n            var data = seriesModel.getData();\n            var oldData = this._data;\n\n            function createSymbol(data, idx) {\n                var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n                var color = data.getItemVisual(idx, 'color');\n                if (symbolType === 'none') {\n                    return;\n                }\n                var symbolSize = normalizeSymbolSize(\n                    data.getItemVisual(idx, 'symbolSize')\n                );\n                var symbolPath = symbolUtil.createSymbol(\n                    symbolType, -1, -1, 2, 2, color\n                );\n                symbolPath.attr({\n                    style: {\n                        strokeNoScale: true\n                    },\n                    z2: 100,\n                    scale: [symbolSize[0] / 2, symbolSize[1] / 2]\n                });\n                return symbolPath;\n            }\n\n            function updateSymbols(oldPoints, newPoints, symbolGroup, data, idx, isInit) {\n                // Simply rerender all\n                symbolGroup.removeAll();\n                for (var i = 0; i < newPoints.length - 1; i++) {\n                    var symbolPath = createSymbol(data, idx);\n                    if (symbolPath) {\n                        symbolPath.__dimIdx = i;\n                        if (oldPoints[i]) {\n                            symbolPath.attr('position', oldPoints[i]);\n                            graphic[isInit ? 'initProps' : 'updateProps'](\n                                symbolPath, {\n                                    position: newPoints[i]\n                                }, seriesModel, idx\n                            );\n                        }\n                        else {\n                            symbolPath.attr('position', newPoints[i]);\n                        }\n                        symbolGroup.add(symbolPath);\n                    }\n                }\n            }\n\n            function getInitialPoints(points) {\n                return zrUtil.map(points, function (pt) {\n                    return [polar.cx, polar.cy];\n                });\n            }\n            data.diff(oldData)\n                .add(function (idx) {\n                    var points = data.getItemLayout(idx);\n                    if (!points) {\n                        return;\n                    }\n                    var polygon = new graphic.Polygon();\n                    var polyline = new graphic.Polyline();\n                    var target = {\n                        shape: {\n                            points: points\n                        }\n                    };\n                    polygon.shape.points = getInitialPoints(points);\n                    polyline.shape.points = getInitialPoints(points);\n                    graphic.initProps(polygon, target, seriesModel, idx);\n                    graphic.initProps(polyline, target, seriesModel, idx);\n\n                    var itemGroup = new graphic.Group();\n                    var symbolGroup = new graphic.Group();\n                    itemGroup.add(polyline);\n                    itemGroup.add(polygon);\n                    itemGroup.add(symbolGroup);\n\n                    updateSymbols(\n                        polyline.shape.points, points, symbolGroup, data, idx, true\n                    );\n\n                    data.setItemGraphicEl(idx, itemGroup);\n                })\n                .update(function (newIdx, oldIdx) {\n                    var itemGroup = oldData.getItemGraphicEl(oldIdx);\n                    var polyline = itemGroup.childAt(0);\n                    var polygon = itemGroup.childAt(1);\n                    var symbolGroup = itemGroup.childAt(2);\n                    var target = {\n                        shape: {\n                            points: data.getItemLayout(newIdx)\n                        }\n                    };\n                    if (!target.shape.points) {\n                        return;\n                    }\n                    updateSymbols(\n                        polyline.shape.points, target.shape.points, symbolGroup, data, newIdx, false\n                    );\n\n                    graphic.updateProps(polyline, target, seriesModel);\n                    graphic.updateProps(polygon, target, seriesModel);\n\n                    data.setItemGraphicEl(newIdx, itemGroup);\n                })\n                .remove(function (idx) {\n                    group.remove(oldData.getItemGraphicEl(idx));\n                })\n                .execute();\n\n            data.eachItemGraphicEl(function (itemGroup, idx) {\n                var itemModel = data.getItemModel(idx);\n                var polyline = itemGroup.childAt(0);\n                var polygon = itemGroup.childAt(1);\n                var symbolGroup = itemGroup.childAt(2);\n                var color = data.getItemVisual(idx, 'color');\n\n                group.add(itemGroup);\n\n                polyline.useStyle(\n                    zrUtil.defaults(\n                        itemModel.getModel('lineStyle.normal').getLineStyle(),\n                        {\n                            fill: 'none',\n                            stroke: color\n                        }\n                    )\n                );\n                polyline.hoverStyle = itemModel.getModel('lineStyle.emphasis').getLineStyle();\n\n                var areaStyleModel = itemModel.getModel('areaStyle.normal');\n                var hoverAreaStyleModel = itemModel.getModel('areaStyle.emphasis');\n                var polygonIgnore = areaStyleModel.isEmpty() && areaStyleModel.parentModel.isEmpty();\n                var hoverPolygonIgnore = hoverAreaStyleModel.isEmpty() && hoverAreaStyleModel.parentModel.isEmpty();\n\n                hoverPolygonIgnore = hoverPolygonIgnore && polygonIgnore;\n                polygon.ignore = polygonIgnore;\n\n                polygon.useStyle(\n                    zrUtil.defaults(\n                        areaStyleModel.getAreaStyle(),\n                        {\n                            fill: color,\n                            opacity: 0.7\n                        }\n                    )\n                );\n                polygon.hoverStyle = hoverAreaStyleModel.getAreaStyle();\n\n                var itemStyle = itemModel.getModel('itemStyle.normal').getItemStyle(['color']);\n                var itemHoverStyle = itemModel.getModel('itemStyle.emphasis').getItemStyle();\n                var labelModel = itemModel.getModel('label.normal');\n                var labelHoverModel = itemModel.getModel('label.emphasis');\n                symbolGroup.eachChild(function (symbolPath) {\n                    symbolPath.setStyle(itemStyle);\n                    symbolPath.hoverStyle = zrUtil.clone(itemHoverStyle);\n\n                    var defaultText = data.get(data.dimensions[symbolPath.__dimIdx], idx);\n                    graphic.setText(symbolPath.style, labelModel, color);\n                    symbolPath.setStyle({\n                        text: labelModel.get('show')\n                            ? zrUtil.retrieve(\n                                seriesModel.getFormattedLabel(\n                                    idx, 'normal', null, symbolPath.__dimIdx\n                                ),\n                                defaultText\n                            )\n                            : null\n                    });\n\n                    graphic.setText(symbolPath.hoverStyle, labelHoverModel, true);\n                    symbolPath.hoverStyle.text = labelHoverModel.get('show')\n                        ? seriesModel.getFormattedLabel(\n                            idx, 'emphasis', null, symbolPath.__dimIdx\n                        )\n                        : null;\n                });\n\n                function onEmphasis() {\n                    polygon.attr('ignore', hoverPolygonIgnore);\n                }\n\n                function onNormal() {\n                    polygon.attr('ignore', polygonIgnore);\n                }\n\n                itemGroup.off('mouseover').off('mouseout').off('normal').off('emphasis');\n                itemGroup.on('emphasis', onEmphasis)\n                    .on('mouseover', onEmphasis)\n                    .on('normal', onNormal)\n                    .on('mouseout', onNormal);\n\n                graphic.setHoverStyle(itemGroup);\n            });\n\n            this._data = data;\n        },\n\n        remove: function () {\n            this.group.removeAll();\n            this._data = null;\n        },\n\n        dispose: function () {}\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/radar/RadarView.js\n// module id = 819\n// module chunks = 0 1","// Backward compat for radar chart in 2\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    module.exports = function (option) {\n        var polarOptArr = option.polar;\n        if (polarOptArr) {\n            if (!zrUtil.isArray(polarOptArr)) {\n                polarOptArr = [polarOptArr];\n            }\n            var polarNotRadar = [];\n            zrUtil.each(polarOptArr, function (polarOpt, idx) {\n                if (polarOpt.indicator) {\n                    if (polarOpt.type && !polarOpt.shape) {\n                        polarOpt.shape = polarOpt.type;\n                    }\n                    option.radar = option.radar || [];\n                    if (!zrUtil.isArray(option.radar)) {\n                        option.radar = [option.radar];\n                    }\n                    option.radar.push(polarOpt);\n                }\n                else {\n                    polarNotRadar.push(polarOpt);\n                }\n            });\n            option.polar = polarNotRadar;\n        }\n        zrUtil.each(option.series, function (seriesOpt) {\n            if (seriesOpt.type === 'radar' && seriesOpt.polarIndex) {\n                seriesOpt.radarIndex = seriesOpt.polarIndex;\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/radar/backwardCompat.js\n// module id = 820\n// module chunks = 0 1","\n\n    module.exports = function (ecModel) {\n        ecModel.eachSeriesByType('radar', function (seriesModel) {\n            var data = seriesModel.getData();\n            var points = [];\n            var coordSys = seriesModel.coordinateSystem;\n            if (!coordSys) {\n                return;\n            }\n\n            function pointsConverter(val, idx) {\n                points[idx] = points[idx] || [];\n                points[idx][i] = coordSys.dataToPoint(val, i);\n            }\n            for (var i = 0; i < coordSys.getIndicatorAxes().length; i++) {\n                var dim = data.dimensions[i];\n                data.each(dim, pointsConverter);\n            }\n\n            data.each(function (idx) {\n                // Close polygon\n                points[idx][0] && points[idx].push(points[idx][0].slice());\n                data.setItemLayout(idx, points[idx]);\n            });\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/radar/radarLayout.js\n// module id = 821\n// module chunks = 0 1","/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n *\n * @module echarts/chart/helper/DataSelectable\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    module.exports = {\n\n        updateSelectedMap: function (targetList) {\n            this._targetList = targetList.slice();\n            this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n                targetMap.set(target.name, target);\n                return targetMap;\n            }, zrUtil.createHashMap());\n        },\n\n        /**\n         * Either name or id should be passed as input here.\n         * If both of them are defined, id is used.\n         *\n         * @param {string|undefined} name name of data\n         * @param {number|undefined} id dataIndex of data\n         */\n        // PENGING If selectedMode is null ?\n        select: function (name, id) {\n            var target = id != null\n                ? this._targetList[id]\n                : this._selectTargetMap.get(name);\n            var selectedMode = this.get('selectedMode');\n            if (selectedMode === 'single') {\n                this._selectTargetMap.each(function (target) {\n                    target.selected = false;\n                });\n            }\n            target && (target.selected = true);\n        },\n\n        /**\n         * Either name or id should be passed as input here.\n         * If both of them are defined, id is used.\n         *\n         * @param {string|undefined} name name of data\n         * @param {number|undefined} id dataIndex of data\n         */\n        unSelect: function (name, id) {\n            var target = id != null\n                ? this._targetList[id]\n                : this._selectTargetMap.get(name);\n            // var selectedMode = this.get('selectedMode');\n            // selectedMode !== 'single' && target && (target.selected = false);\n            target && (target.selected = false);\n        },\n\n        /**\n         * Either name or id should be passed as input here.\n         * If both of them are defined, id is used.\n         *\n         * @param {string|undefined} name name of data\n         * @param {number|undefined} id dataIndex of data\n         */\n        toggleSelected: function (name, id) {\n            var target = id != null\n                ? this._targetList[id]\n                : this._selectTargetMap.get(name);\n            if (target != null) {\n                this[target.selected ? 'unSelect' : 'select'](name, id);\n                return target.selected;\n            }\n        },\n\n        /**\n         * Either name or id should be passed as input here.\n         * If both of them are defined, id is used.\n         *\n         * @param {string|undefined} name name of data\n         * @param {number|undefined} id dataIndex of data\n         */\n        isSelected: function (name, id) {\n            var target = id != null\n                ? this._targetList[id]\n                : this._selectTargetMap.get(name);\n            return target && target.selected;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/helper/selectableMixin.js\n// module id = 822\n// module chunks = 0 1","\n\n    require('../coord/radar/Radar');\n    require('../coord/radar/RadarModel');\n\n    require('./radar/RadarView');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/radar.js\n// module id = 823\n// module chunks = 0 1","\n\n    var AxisBuilder = require('../axis/AxisBuilder');\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n\n    var axisBuilderAttrs = [\n        'axisLine', 'axisLabel', 'axisTick', 'axisName'\n    ];\n\n    module.exports = require('../../echarts').extendComponentView({\n\n        type: 'radar',\n\n        render: function (radarModel, ecModel, api) {\n            var group = this.group;\n            group.removeAll();\n\n            this._buildAxes(radarModel);\n            this._buildSplitLineAndArea(radarModel);\n        },\n\n        _buildAxes: function (radarModel) {\n            var radar = radarModel.coordinateSystem;\n            var indicatorAxes = radar.getIndicatorAxes();\n            var axisBuilders = zrUtil.map(indicatorAxes, function (indicatorAxis) {\n                var axisBuilder = new AxisBuilder(indicatorAxis.model, {\n                    position: [radar.cx, radar.cy],\n                    rotation: indicatorAxis.angle,\n                    labelDirection: -1,\n                    tickDirection: -1,\n                    nameDirection: 1\n                });\n                return axisBuilder;\n            });\n\n            zrUtil.each(axisBuilders, function (axisBuilder) {\n                zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n                this.group.add(axisBuilder.getGroup());\n            }, this);\n        },\n\n        _buildSplitLineAndArea: function (radarModel) {\n            var radar = radarModel.coordinateSystem;\n            var indicatorAxes = radar.getIndicatorAxes();\n            if (!indicatorAxes.length) {\n                return;\n            }\n            var shape = radarModel.get('shape');\n            var splitLineModel = radarModel.getModel('splitLine');\n            var splitAreaModel = radarModel.getModel('splitArea');\n            var lineStyleModel = splitLineModel.getModel('lineStyle');\n            var areaStyleModel = splitAreaModel.getModel('areaStyle');\n\n            var showSplitLine = splitLineModel.get('show');\n            var showSplitArea = splitAreaModel.get('show');\n            var splitLineColors = lineStyleModel.get('color');\n            var splitAreaColors = areaStyleModel.get('color');\n\n            splitLineColors = zrUtil.isArray(splitLineColors) ? splitLineColors : [splitLineColors];\n            splitAreaColors = zrUtil.isArray(splitAreaColors) ? splitAreaColors : [splitAreaColors];\n\n            var splitLines = [];\n            var splitAreas = [];\n\n            function getColorIndex(areaOrLine, areaOrLineColorList, idx) {\n                var colorIndex = idx % areaOrLineColorList.length;\n                areaOrLine[colorIndex] = areaOrLine[colorIndex] || [];\n                return colorIndex;\n            }\n\n            if (shape === 'circle') {\n                var ticksRadius = indicatorAxes[0].getTicksCoords();\n                var cx = radar.cx;\n                var cy = radar.cy;\n                for (var i = 0; i < ticksRadius.length; i++) {\n                    if (showSplitLine) {\n                        var colorIndex = getColorIndex(splitLines, splitLineColors, i);\n                        splitLines[colorIndex].push(new graphic.Circle({\n                            shape: {\n                                cx: cx,\n                                cy: cy,\n                                r: ticksRadius[i]\n                            }\n                        }));\n                    }\n                    if (showSplitArea && i < ticksRadius.length - 1) {\n                        var colorIndex = getColorIndex(splitAreas, splitAreaColors, i);\n                        splitAreas[colorIndex].push(new graphic.Ring({\n                            shape: {\n                                cx: cx,\n                                cy: cy,\n                                r0: ticksRadius[i],\n                                r: ticksRadius[i + 1]\n                            }\n                        }));\n                    }\n                }\n            }\n            // Polyyon\n            else {\n                var realSplitNumber;\n                var axesTicksPoints = zrUtil.map(indicatorAxes, function (indicatorAxis, idx) {\n                    var ticksCoords = indicatorAxis.getTicksCoords();\n                    realSplitNumber = realSplitNumber == null\n                        ? ticksCoords.length - 1\n                        : Math.min(ticksCoords.length - 1, realSplitNumber);\n                    return zrUtil.map(ticksCoords, function (tickCoord) {\n                        return radar.coordToPoint(tickCoord, idx);\n                    });\n                });\n\n                var prevPoints = [];\n                for (var i = 0; i <= realSplitNumber; i++) {\n                    var points = [];\n                    for (var j = 0; j < indicatorAxes.length; j++) {\n                        points.push(axesTicksPoints[j][i]);\n                    }\n                    // Close\n                    if (points[0]) {\n                        points.push(points[0].slice());\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.error('Can\\'t draw value axis ' + i);\n                        }\n                    }\n\n                    if (showSplitLine) {\n                        var colorIndex = getColorIndex(splitLines, splitLineColors, i);\n                        splitLines[colorIndex].push(new graphic.Polyline({\n                            shape: {\n                                points: points\n                            }\n                        }));\n                    }\n                    if (showSplitArea && prevPoints) {\n                        var colorIndex = getColorIndex(splitAreas, splitAreaColors, i - 1);\n                        splitAreas[colorIndex].push(new graphic.Polygon({\n                            shape: {\n                                points: points.concat(prevPoints)\n                            }\n                        }));\n                    }\n                    prevPoints = points.slice().reverse();\n                }\n            }\n\n            var lineStyle = lineStyleModel.getLineStyle();\n            var areaStyle = areaStyleModel.getAreaStyle();\n            // Add splitArea before splitLine\n            zrUtil.each(splitAreas, function (splitAreas, idx) {\n                this.group.add(graphic.mergePath(\n                    splitAreas, {\n                        style: zrUtil.defaults({\n                            stroke: 'none',\n                            fill: splitAreaColors[idx % splitAreaColors.length]\n                        }, areaStyle),\n                        silent: true\n                    }\n                ));\n            }, this);\n\n            zrUtil.each(splitLines, function (splitLines, idx) {\n                this.group.add(graphic.mergePath(\n                    splitLines, {\n                        style: zrUtil.defaults({\n                            fill: 'none',\n                            stroke: splitLineColors[idx % splitLineColors.length]\n                        }, lineStyle),\n                        silent: true\n                    }\n                ));\n            }, this);\n\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/radar/RadarView.js\n// module id = 824\n// module chunks = 0 1","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Axis = require('../Axis');\n\n    function IndicatorAxis(dim, scale, radiusExtent) {\n        Axis.call(this, dim, scale, radiusExtent);\n\n        /**\n         * Axis type\n         *  - 'category'\n         *  - 'value'\n         *  - 'time'\n         *  - 'log'\n         * @type {string}\n         */\n        this.type = 'value';\n\n        this.angle = 0;\n\n        /**\n         * Indicator name\n         * @type {string}\n         */\n        this.name = '';\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.model;\n    }\n\n    zrUtil.inherits(IndicatorAxis, Axis);\n\n    module.exports = IndicatorAxis;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/radar/IndicatorAxis.js\n// module id = 825\n// module chunks = 0 1","// TODO clockwise\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var IndicatorAxis = require('./IndicatorAxis');\n    var IntervalScale = require('../../scale/Interval');\n    var numberUtil = require('../../util/number');\n    var axisHelper = require('../axisHelper');\n\n    function Radar(radarModel, ecModel, api) {\n\n        this._model = radarModel;\n        /**\n         * Radar dimensions\n         * @type {Array.<string>}\n         */\n        this.dimensions = [];\n\n        this._indicatorAxes = zrUtil.map(radarModel.getIndicatorModels(), function (indicatorModel, idx) {\n            var dim = 'indicator_' + idx;\n            var indicatorAxis = new IndicatorAxis(dim, new IntervalScale());\n            indicatorAxis.name = indicatorModel.get('name');\n            // Inject model and axis\n            indicatorAxis.model = indicatorModel;\n            indicatorModel.axis = indicatorAxis;\n            this.dimensions.push(dim);\n            return indicatorAxis;\n        }, this);\n\n        this.resize(radarModel, api);\n\n        /**\n         * @type {number}\n         * @readOnly\n         */\n        this.cx;\n        /**\n         * @type {number}\n         * @readOnly\n         */\n        this.cy;\n        /**\n         * @type {number}\n         * @readOnly\n         */\n        this.r;\n        /**\n         * @type {number}\n         * @readOnly\n         */\n        this.startAngle;\n    }\n\n    Radar.prototype.getIndicatorAxes = function () {\n        return this._indicatorAxes;\n    };\n\n    Radar.prototype.dataToPoint = function (value, indicatorIndex) {\n        var indicatorAxis = this._indicatorAxes[indicatorIndex];\n\n        return this.coordToPoint(indicatorAxis.dataToCoord(value), indicatorIndex);\n    };\n\n    Radar.prototype.coordToPoint = function (coord, indicatorIndex) {\n        var indicatorAxis = this._indicatorAxes[indicatorIndex];\n        var angle = indicatorAxis.angle;\n        var x = this.cx + coord * Math.cos(angle);\n        var y = this.cy - coord * Math.sin(angle);\n        return [x, y];\n    };\n\n    Radar.prototype.pointToData = function (pt) {\n        var dx = pt[0] - this.cx;\n        var dy = pt[1] - this.cy;\n        var radius = Math.sqrt(dx * dx + dy * dy);\n        dx /= radius;\n        dy /= radius;\n\n        var radian = Math.atan2(-dy, dx);\n\n        // Find the closest angle\n        // FIXME index can calculated directly\n        var minRadianDiff = Infinity;\n        var closestAxis;\n        var closestAxisIdx = -1;\n        for (var i = 0; i < this._indicatorAxes.length; i++) {\n            var indicatorAxis = this._indicatorAxes[i];\n            var diff = Math.abs(radian - indicatorAxis.angle);\n            if (diff < minRadianDiff) {\n                closestAxis = indicatorAxis;\n                closestAxisIdx = i;\n                minRadianDiff = diff;\n            }\n        }\n\n        return [closestAxisIdx, +(closestAxis && closestAxis.coodToData(radius))];\n    };\n\n    Radar.prototype.resize = function (radarModel, api) {\n        var center = radarModel.get('center');\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n        var viewSize = Math.min(viewWidth, viewHeight) / 2;\n        this.cx = numberUtil.parsePercent(center[0], viewWidth);\n        this.cy = numberUtil.parsePercent(center[1], viewHeight);\n\n        this.startAngle = radarModel.get('startAngle') * Math.PI / 180;\n\n        this.r = numberUtil.parsePercent(radarModel.get('radius'), viewSize);\n\n        zrUtil.each(this._indicatorAxes, function (indicatorAxis, idx) {\n            indicatorAxis.setExtent(0, this.r);\n            var angle = (this.startAngle + idx * Math.PI * 2 / this._indicatorAxes.length);\n            // Normalize to [-PI, PI]\n            angle = Math.atan2(Math.sin(angle), Math.cos(angle));\n            indicatorAxis.angle = angle;\n        }, this);\n    };\n\n    Radar.prototype.update = function (ecModel, api) {\n        var indicatorAxes = this._indicatorAxes;\n        var radarModel = this._model;\n        zrUtil.each(indicatorAxes, function (indicatorAxis) {\n            indicatorAxis.scale.setExtent(Infinity, -Infinity);\n        });\n        ecModel.eachSeriesByType('radar', function (radarSeries, idx) {\n            if (radarSeries.get('coordinateSystem') !== 'radar'\n                || ecModel.getComponent('radar', radarSeries.get('radarIndex')) !== radarModel\n            ) {\n                return;\n            }\n            var data = radarSeries.getData();\n            zrUtil.each(indicatorAxes, function (indicatorAxis) {\n                indicatorAxis.scale.unionExtentFromData(data, indicatorAxis.dim);\n            });\n        }, this);\n\n        var splitNumber = radarModel.get('splitNumber');\n\n        function increaseInterval(interval) {\n            var exp10 = Math.pow(10, Math.floor(Math.log(interval) / Math.LN10));\n            // Increase interval\n            var f = interval / exp10;\n            if (f === 2) {\n                f = 5;\n            }\n            else { // f is 2 or 5\n                f *= 2;\n            }\n            return f * exp10;\n        }\n        // Force all the axis fixing the maxSplitNumber.\n        zrUtil.each(indicatorAxes, function (indicatorAxis, idx) {\n            var rawExtent = axisHelper.getScaleExtent(indicatorAxis.scale, indicatorAxis.model);\n            axisHelper.niceScaleExtent(indicatorAxis.scale, indicatorAxis.model);\n\n            var axisModel = indicatorAxis.model;\n            var scale = indicatorAxis.scale;\n            var fixedMin = axisModel.getMin();\n            var fixedMax = axisModel.getMax();\n            var interval = scale.getInterval();\n\n            if (fixedMin != null && fixedMax != null) {\n                // User set min, max, divide to get new interval\n                scale.setExtent(+fixedMin, +fixedMax);\n                scale.setInterval(\n                    (fixedMax - fixedMin) / splitNumber\n                );\n            }\n            else if (fixedMin != null) {\n                var max;\n                // User set min, expand extent on the other side\n                do {\n                    max = fixedMin + interval * splitNumber;\n                    scale.setExtent(+fixedMin, max);\n                    // Interval must been set after extent\n                    // FIXME\n                    scale.setInterval(interval);\n\n                    interval = increaseInterval(interval);\n                } while (max < rawExtent[1] && isFinite(max) && isFinite(rawExtent[1]));\n            }\n            else if (fixedMax != null) {\n                var min;\n                // User set min, expand extent on the other side\n                do {\n                    min = fixedMax - interval * splitNumber;\n                    scale.setExtent(min, +fixedMax);\n                    scale.setInterval(interval);\n                    interval = increaseInterval(interval);\n                } while (min > rawExtent[0] && isFinite(min) && isFinite(rawExtent[0]));\n            }\n            else {\n                var nicedSplitNumber = scale.getTicks().length - 1;\n                if (nicedSplitNumber > splitNumber) {\n                    interval = increaseInterval(interval);\n                }\n                // PENDING\n                var center = Math.round((rawExtent[0] + rawExtent[1]) / 2 / interval) * interval;\n                var halfSplitNumber = Math.round(splitNumber / 2);\n                scale.setExtent(\n                    numberUtil.round(center - halfSplitNumber * interval),\n                    numberUtil.round(center + (splitNumber - halfSplitNumber) * interval)\n                );\n                scale.setInterval(interval);\n            }\n        });\n    };\n\n    /**\n     * Radar dimensions is based on the data\n     * @type {Array}\n     */\n    Radar.dimensions = [];\n\n    Radar.create = function (ecModel, api) {\n        var radarList = [];\n        ecModel.eachComponent('radar', function (radarModel) {\n            var radar = new Radar(radarModel, ecModel, api);\n            radarList.push(radar);\n            radarModel.coordinateSystem = radar;\n        });\n        ecModel.eachSeriesByType('radar', function (radarSeries) {\n            if (radarSeries.get('coordinateSystem') === 'radar') {\n                // Inject coordinate system\n                radarSeries.coordinateSystem = radarList[radarSeries.get('radarIndex') || 0];\n            }\n        });\n        return radarList;\n    };\n\n    require('../../CoordinateSystem').register('radar', Radar);\n    module.exports = Radar;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/radar/Radar.js\n// module id = 826\n// module chunks = 0 1","\n\n\n    var axisDefault = require('../axisDefault');\n    var valueAxisDefault = axisDefault.valueAxis;\n    var Model = require('../../model/Model');\n    var zrUtil = require('zrender/lib/core/util');\n\n    var axisModelCommonMixin = require('../axisModelCommonMixin');\n\n    function defaultsShow(opt, show) {\n        return zrUtil.defaults({\n            show: show\n        }, opt);\n    }\n\n    var RadarModel = require('../../echarts').extendComponentModel({\n\n        type: 'radar',\n\n        optionUpdated: function () {\n            var boundaryGap = this.get('boundaryGap');\n            var splitNumber = this.get('splitNumber');\n            var scale = this.get('scale');\n            var axisLine = this.get('axisLine');\n            var axisTick = this.get('axisTick');\n            var axisLabel = this.get('axisLabel');\n            var nameTextStyle = this.get('name');\n            var showName = this.get('name.show');\n            var nameFormatter = this.get('name.formatter');\n            var nameGap = this.get('nameGap');\n            var triggerEvent = this.get('triggerEvent');\n\n            var indicatorModels = zrUtil.map(this.get('indicator') || [], function (indicatorOpt) {\n                // PENDING\n                if (indicatorOpt.max != null && indicatorOpt.max > 0 && !indicatorOpt.min) {\n                    indicatorOpt.min = 0;\n                }\n                else if (indicatorOpt.min != null && indicatorOpt.min < 0 && !indicatorOpt.max) {\n                    indicatorOpt.max = 0;\n                }\n                var iNameTextStyle = nameTextStyle;\n                if(indicatorOpt.color != null) {\n                    iNameTextStyle = zrUtil.defaults({color: indicatorOpt.color}, nameTextStyle);\n                }\n                // Use same configuration\n                indicatorOpt = zrUtil.merge(zrUtil.clone(indicatorOpt), {\n                    boundaryGap: boundaryGap,\n                    splitNumber: splitNumber,\n                    scale: scale,\n                    axisLine: axisLine,\n                    axisTick: axisTick,\n                    axisLabel: axisLabel,\n                    // Competitable with 2 and use text\n                    name: indicatorOpt.text,\n                    nameLocation: 'end',\n                    nameGap: nameGap,\n                    // min: 0,\n                    nameTextStyle: iNameTextStyle,\n                    triggerEvent: triggerEvent\n                }, false);\n                if (!showName) {\n                    indicatorOpt.name = '';\n                }\n                if (typeof nameFormatter === 'string') {\n                    var indName = indicatorOpt.name;\n                    indicatorOpt.name = nameFormatter.replace('{value}', indName != null ? indName : '');\n                }\n                else if (typeof nameFormatter === 'function') {\n                    indicatorOpt.name = nameFormatter(\n                        indicatorOpt.name, indicatorOpt\n                    );\n                }\n                var model = zrUtil.extend(\n                    new Model(indicatorOpt, null, this.ecModel),\n                    axisModelCommonMixin\n                );\n\n                // For triggerEvent.\n                model.mainType = 'radar';\n                model.componentIndex = this.componentIndex;\n\n                return model;\n            }, this);\n\n            this.getIndicatorModels = function () {\n                return indicatorModels;\n            };\n        },\n\n        defaultOption: {\n\n            zlevel: 0,\n\n            z: 0,\n\n            center: ['50%', '50%'],\n\n            radius: '75%',\n\n            startAngle: 90,\n\n            name: {\n                show: true\n                // formatter: null\n                // textStyle: {}\n            },\n\n            boundaryGap: [0, 0],\n\n            splitNumber: 5,\n\n            nameGap: 15,\n\n            scale: false,\n\n            // Polygon or circle\n            shape: 'polygon',\n\n            axisLine: zrUtil.merge(\n                {\n                    lineStyle: {\n                        color: '#bbb'\n                    }\n                },\n                valueAxisDefault.axisLine\n            ),\n            axisLabel: defaultsShow(valueAxisDefault.axisLabel, false),\n            axisTick: defaultsShow(valueAxisDefault.axisTick, false),\n            splitLine: defaultsShow(valueAxisDefault.splitLine, true),\n            splitArea: defaultsShow(valueAxisDefault.splitArea, true),\n\n            // {text, min, max}\n            indicator: []\n        }\n    });\n\n    module.exports = RadarModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/radar/RadarModel.js\n// module id = 827\n// module chunks = 0 1","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('../util/number');\n    var parsePercent = numberUtil.parsePercent;\n\n    var STACK_PREFIX = '__ec_stack_';\n\n    function getSeriesStackId(seriesModel) {\n        return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\n    }\n\n    function getAxisKey(axis) {\n        return axis.dim + axis.index;\n    }\n\n    /**\n     * @param {Object} opt\n     * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.\n     * @param {number} opt.count Positive interger.\n     * @param {number} [opt.barWidth]\n     * @param {number} [opt.barMaxWidth]\n     * @param {number} [opt.barGap]\n     * @param {number} [opt.barCategoryGap]\n     * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\n     */\n    function getLayoutOnAxis(opt, api) {\n        var params = [];\n        var baseAxis = opt.axis;\n        var axisKey = 'axis0';\n\n        if (baseAxis.type !== 'category') {\n            return;\n        }\n        var bandWidth = baseAxis.getBandWidth();\n\n        for (var i = 0; i < opt.count || 0; i++) {\n            params.push(zrUtil.defaults({\n                bandWidth: bandWidth,\n                axisKey: axisKey,\n                stackId: STACK_PREFIX + i\n            }, opt));\n        }\n        var widthAndOffsets = doCalBarWidthAndOffset(params, api);\n\n        var result = [];\n        for (var i = 0; i < opt.count; i++) {\n            var item = widthAndOffsets[axisKey][STACK_PREFIX + i];\n            item.offsetCenter = item.offset + item.width / 2;\n            result.push(item);\n        }\n\n        return result;\n    }\n\n    function calBarWidthAndOffset(barSeries, api) {\n        var seriesInfoList = zrUtil.map(barSeries, function (seriesModel) {\n            var data = seriesModel.getData();\n            var cartesian = seriesModel.coordinateSystem;\n            var baseAxis = cartesian.getBaseAxis();\n            var axisExtent = baseAxis.getExtent();\n            var bandWidth = baseAxis.type === 'category'\n                ? baseAxis.getBandWidth()\n                : (Math.abs(axisExtent[1] - axisExtent[0]) / data.count());\n\n            var barWidth = parsePercent(\n                seriesModel.get('barWidth'), bandWidth\n            );\n            var barMaxWidth = parsePercent(\n                seriesModel.get('barMaxWidth'), bandWidth\n            );\n            var barGap = seriesModel.get('barGap');\n            var barCategoryGap = seriesModel.get('barCategoryGap');\n\n            return {\n                bandWidth: bandWidth,\n                barWidth: barWidth,\n                barMaxWidth: barMaxWidth,\n                barGap: barGap,\n                barCategoryGap: barCategoryGap,\n                axisKey: getAxisKey(baseAxis),\n                stackId: getSeriesStackId(seriesModel)\n            };\n        });\n\n        return doCalBarWidthAndOffset(seriesInfoList, api);\n    }\n\n    function doCalBarWidthAndOffset(seriesInfoList, api) {\n        // Columns info on each category axis. Key is cartesian name\n        var columnsMap = {};\n\n        zrUtil.each(seriesInfoList, function (seriesInfo, idx) {\n            var axisKey = seriesInfo.axisKey;\n            var bandWidth = seriesInfo.bandWidth;\n            var columnsOnAxis = columnsMap[axisKey] || {\n                bandWidth: bandWidth,\n                remainedWidth: bandWidth,\n                autoWidthCount: 0,\n                categoryGap: '20%',\n                gap: '30%',\n                stacks: {}\n            };\n            var stacks = columnsOnAxis.stacks;\n            columnsMap[axisKey] = columnsOnAxis;\n\n            var stackId = seriesInfo.stackId;\n\n            if (!stacks[stackId]) {\n                columnsOnAxis.autoWidthCount++;\n            }\n            stacks[stackId] = stacks[stackId] || {\n                width: 0,\n                maxWidth: 0\n            };\n\n            // Caution: In a single coordinate system, these barGrid attributes\n            // will be shared by series. Consider that they have default values,\n            // only the attributes set on the last series will work.\n            // Do not change this fact unless there will be a break change.\n\n            // TODO\n            var barWidth = seriesInfo.barWidth;\n            if (barWidth && !stacks[stackId].width) {\n                // See #6312, do not restrict width.\n                stacks[stackId].width = barWidth;\n                barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n                columnsOnAxis.remainedWidth -= barWidth;\n            }\n\n            var barMaxWidth = seriesInfo.barMaxWidth;\n            barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n            var barGap = seriesInfo.barGap;\n            (barGap != null) && (columnsOnAxis.gap = barGap);\n            var barCategoryGap = seriesInfo.barCategoryGap;\n            (barCategoryGap != null) && (columnsOnAxis.categoryGap = barCategoryGap);\n        });\n\n        var result = {};\n\n        zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n\n            result[coordSysName] = {};\n\n            var stacks = columnsOnAxis.stacks;\n            var bandWidth = columnsOnAxis.bandWidth;\n            var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n            var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n\n            var remainedWidth = columnsOnAxis.remainedWidth;\n            var autoWidthCount = columnsOnAxis.autoWidthCount;\n            var autoWidth = (remainedWidth - categoryGap)\n                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n            autoWidth = Math.max(autoWidth, 0);\n\n            // Find if any auto calculated bar exceeded maxBarWidth\n            zrUtil.each(stacks, function (column, stack) {\n                var maxWidth = column.maxWidth;\n                if (maxWidth && maxWidth < autoWidth) {\n                    maxWidth = Math.min(maxWidth, remainedWidth);\n                    if (column.width) {\n                        maxWidth = Math.min(maxWidth, column.width);\n                    }\n                    remainedWidth -= maxWidth;\n                    column.width = maxWidth;\n                    autoWidthCount--;\n                }\n            });\n\n            // Recalculate width again\n            autoWidth = (remainedWidth - categoryGap)\n                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n            autoWidth = Math.max(autoWidth, 0);\n\n            var widthSum = 0;\n            var lastColumn;\n            zrUtil.each(stacks, function (column, idx) {\n                if (!column.width) {\n                    column.width = autoWidth;\n                }\n                lastColumn = column;\n                widthSum += column.width * (1 + barGapPercent);\n            });\n            if (lastColumn) {\n                widthSum -= lastColumn.width * barGapPercent;\n            }\n\n            var offset = -widthSum / 2;\n            zrUtil.each(stacks, function (column, stackId) {\n                result[coordSysName][stackId] = result[coordSysName][stackId] || {\n                    offset: offset,\n                    width: column.width\n                };\n\n                offset += column.width * (1 + barGapPercent);\n            });\n        });\n\n        return result;\n    }\n\n    /**\n     * @param {string} seriesType\n     * @param {module:echarts/model/Global} ecModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function barLayoutGrid(seriesType, ecModel, api) {\n\n        var barWidthAndOffset = calBarWidthAndOffset(\n            zrUtil.filter(\n                ecModel.getSeriesByType(seriesType),\n                function (seriesModel) {\n                    return !ecModel.isSeriesFiltered(seriesModel)\n                        && seriesModel.coordinateSystem\n                        && seriesModel.coordinateSystem.type === 'cartesian2d';\n                }\n            )\n        );\n\n        var lastStackCoords = {};\n        var lastStackCoordsOrigin = {};\n\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n\n            // Check series coordinate, do layout for cartesian2d only\n            if (seriesModel.coordinateSystem.type !== 'cartesian2d') {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var cartesian = seriesModel.coordinateSystem;\n            var baseAxis = cartesian.getBaseAxis();\n\n            var stackId = getSeriesStackId(seriesModel);\n            var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n            var columnOffset = columnLayoutInfo.offset;\n            var columnWidth = columnLayoutInfo.width;\n            var valueAxis = cartesian.getOtherAxis(baseAxis);\n\n            var barMinHeight = seriesModel.get('barMinHeight') || 0;\n\n            var valueAxisStart = baseAxis.onZero\n                ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0))\n                : valueAxis.getGlobalExtent()[0];\n\n            var coordDims = [\n                seriesModel.coordDimToDataDim('x')[0],\n                seriesModel.coordDimToDataDim('y')[0]\n            ];\n            var coords = data.mapArray(coordDims, function (x, y) {\n                return cartesian.dataToPoint([x, y]);\n            }, true);\n\n            lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n            lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n            data.setLayout({\n                offset: columnOffset,\n                size: columnWidth\n            });\n\n            data.each(seriesModel.coordDimToDataDim(valueAxis.dim)[0], function (value, idx) {\n                if (isNaN(value)) {\n                    return;\n                }\n\n                if (!lastStackCoords[stackId][idx]) {\n                    lastStackCoords[stackId][idx] = {\n                        p: valueAxisStart, // Positive stack\n                        n: valueAxisStart  // Negative stack\n                    };\n                    lastStackCoordsOrigin[stackId][idx] = {\n                        p: valueAxisStart, // Positive stack\n                        n: valueAxisStart  // Negative stack\n                    };\n                }\n                var sign = value >= 0 ? 'p' : 'n';\n                var coord = coords[idx];\n                var lastCoord = lastStackCoords[stackId][idx][sign];\n                var lastCoordOrigin = lastStackCoordsOrigin[stackId][idx][sign];\n                var x;\n                var y;\n                var width;\n                var height;\n\n                if (valueAxis.isHorizontal()) {\n                    x = lastCoord;\n                    y = coord[1] + columnOffset;\n                    width = coord[0] - lastCoordOrigin;\n                    height = columnWidth;\n\n                    lastStackCoordsOrigin[stackId][idx][sign] += width;\n                    if (Math.abs(width) < barMinHeight) {\n                        width = (width < 0 ? -1 : 1) * barMinHeight;\n                    }\n                    lastStackCoords[stackId][idx][sign] += width;\n                }\n                else {\n                    x = coord[0] + columnOffset;\n                    y = lastCoord;\n                    width = columnWidth;\n                    height = coord[1] - lastCoordOrigin;\n\n                    lastStackCoordsOrigin[stackId][idx][sign] += height;\n                    if (Math.abs(height) < barMinHeight) {\n                        // Include zero to has a positive bar\n                        height = (height <= 0 ? -1 : 1) * barMinHeight;\n                    }\n                    lastStackCoords[stackId][idx][sign] += height;\n                }\n\n                data.setItemLayout(idx, {\n                    x: x,\n                    y: y,\n                    width: width,\n                    height: height\n                });\n            }, true);\n\n        }, this);\n    }\n\n    barLayoutGrid.getLayoutOnAxis = getLayoutOnAxis;\n\n    module.exports = barLayoutGrid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/layout/barGrid.js\n// module id = 828\n// module chunks = 0 1","!function(e,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i(require(\"echarts/lib/echarts\"),require(\"echarts/lib/component/tooltip\"),require(\"echarts/lib/component/legend\"),require(\"echarts/lib/chart/bar\"),require(\"echarts/lib/chart/line\"),require(\"echarts/lib/chart/pie\"),require(\"echarts/lib/chart/funnel\"),require(\"echarts/lib/chart/radar\")):\"function\"==typeof define&&define.amd?define([\"echarts/lib/echarts\",\"echarts/lib/component/tooltip\",\"echarts/lib/component/legend\",\"echarts/lib/chart/bar\",\"echarts/lib/chart/line\",\"echarts/lib/chart/pie\",\"echarts/lib/chart/funnel\",\"echarts/lib/chart/radar\"],i):e.VeChart=i(e.echarts)}(this,function(e){\"use strict\";function i(e){var i=e.innerRows,t=e.dimAxisName,n=e.dimension,a=e.axisVisible;return n.map(function(e){return{type:\"category\",name:t,nameLocation:\"middle\",nameGap:22,data:i.map(function(i){return i[e]}),axisLabel:{formatter:function(e){return String(e)}},show:a}})}function t(e){for(var i=e.meaAxisName,t=e.meaAxisType,n=e.axisVisible,a=e.digit,r=e.scale,o=e.min,s=e.max,l={type:\"value\",axisTick:{show:!1},show:n},c=[],u=0;u<2;u++)!function(e){t[e]?c[e]=Object.assign({},l,{axisLabel:{formatter:function(i){return V(i,t[e],a)}}}):c[e]=Object.assign({},l),c[e].name=i[e]||\"\",c[e].scale=r[e]||!1,c[e].min=o[e]||null,c[e].max=s[e]||null}(u);return c}function n(e){var i=e.axisSite,t=e.isHistogram,n=e.meaAxisType,a=e.digit,r=e.labelMap,o=t?i.right:i.top;return r&&(o=o.map(function(e){return void 0===r[e]?e:r[e]})),{trigger:\"axis\",formatter:function(e){var i=[];return i.push(e[0].name+\"<br>\"),e.forEach(function(e){var t=e.seriesName,r=~o.indexOf(t)?n[1]:n[0];i.push(j(e.color)),i.push(t+\": \"),i.push(V(e.value,r,a)),i.push(\"<br>\")}),i.join(\"\")}}}function a(e){var i=e.innerRows,t=e.metrics,n=e.stack,a=e.axisSite,r=e.isHistogram,o=e.labelMap,s=e.itemStyle,l=e.label,c=e.showLine,u=void 0===c?[]:c,d=[],m={},h=r?a.right:a.top,f=r?\"yAxisIndex\":\"xAxisIndex\",p=n&&E(n);return t.forEach(function(e){m[e]=[]}),i.forEach(function(e){t.forEach(function(i){m[i].push(e[i])})}),!!(d=Object.keys(m).map(function(e){var i=H({name:o&&o[e]||e,type:~u.indexOf(e)?\"line\":\"bar\",data:m[e]},f,~h.indexOf(e)?\"1\":\"0\");return n&&p[e]&&(i.stack=p[e]),l&&(i.label=l),s&&(i.itemStyle=s),i})).length&&d}function r(e){var i=e.metrics,t=e.labelMap,n=e.legendName;return n||t?{data:t?i.map(function(e){return null==t[e]?e:t[e]}):i,formatter:function(e){return n&&n[e]||e}}:{data:i}}function o(e){var i=e.dimension,t=e.rows,n=e.xAxisName,a=e.axisVisible;return i.map(function(e,i){return{type:\"category\",nameLocation:\"middle\",nameGap:22,boundaryGap:!1,name:n[i]||\"\",axisTick:{show:!0,lineStyle:{color:\"#eee\"}},data:t.map(function(i){return i[e]}),axisLabel:{formatter:function(e){return String(e)}},show:a}})}function s(e){var i=e.rows,t=e.axisSite,n=e.metrics,a=e.area,r=e.stack,o=e.nullAddZero,s=e.labelMap,l=e.label,c=e.itemStyle,u=e.lineStyle,d=e.areaStyle,m=[],h={},f=r&&E(r);return n.forEach(function(e){h[e]=[]}),i.forEach(function(e){n.forEach(function(i){var t=null;null!=e[i]?t=e[i]:o&&(t=0),h[i].push(t)})}),n.forEach(function(e){var i={name:s&&s[e]||e,type:\"line\",data:h[e]};a&&(i.areaStyle={normal:{}}),i.yAxisIndex=~t.right.indexOf(e)?1:0,r&&f[e]&&(i.stack=f[e]),l&&(i.label=l),c&&(i.itemStyle=c),u&&(i.lineStyle=u),d&&(i.areaStyle=d),m.push(i)}),!!m.length&&m}function l(e){for(var i=e.yAxisName,t=e.yAxisType,n=e.axisVisible,a=e.scale,r=e.min,o=e.max,s=e.digit,l={type:\"value\",axisTick:{show:!1},show:n},c=[],u=0;u<2;u++)!function(e){t[e]?c[e]=Object.assign({},l,{axisLabel:{formatter:function(i){return V(i,t[e],s)}}}):c[e]=Object.assign({},l),c[e].name=i[e]||\"\",c[e].scale=a[e]||!1,c[e].min=r[e]||null,c[e].max=o[e]||null}(u);return c}function c(e){var i=e.axisSite,t=e.yAxisType,n=e.digit,a=e.labelMap,r=a?i.right.map(function(e){return void 0===a[e]?e:a[e]}):i.right;return{trigger:\"axis\",formatter:function(e){var i=[];return i.push(e[0].name+\"<br>\"),e.forEach(function(e){var a=null,o=~r.indexOf(e.seriesName)?t[1]:t[0];a=V(e.data,o,n),i.push(j(e.color)),i.push(e.seriesName+\": \"+a),i.push(\"<br>\")}),i.join(\"\")}}}function u(e){var i=e.metrics,t=e.legendName,n=e.labelMap;return t||n?{data:n?i.map(function(e){return null==n[e]?e:n[e]}):i,formatter:function(e){return t&&t[e]||e}}:{data:i}}function d(e){var i=e.innerRows,t=e.dataType,n=e.percentShow,a=e.dimension,r=e.metrics,o=e.radius,s=e.offsetY,l=e.selectedMode,c=e.hoverAnimation,u=e.digit,d=e.roseType,m=e.label,h=e.level,f=e.limitShowNum,p=e.isRing,v=[],b={},g=[];h?(h.forEach(function(e,i){e.forEach(function(e){b[e]=i})}),i.forEach(function(e){var i=b[e[a]];void 0!==i&&(g[i]?g[i].push(e):g[i]=[e])})):g.push(i);var x={type:\"pie\",selectedMode:l,hoverAnimation:c,roseType:d,center:[\"50%\",s]},y=g.length;if(g.forEach(function(e,i){var s=Object.assign({data:[]},x),l=o/y;if(i){var c=l+o/(2*y)*(2*i-1),d=c+o/(2*y);s.radius=[c,d]}else s.radius=p?o:l;y>1&&0===i&&(s.label={normal:{position:\"inner\"}}),m&&(s.label=m),n&&(s.label={normal:{show:!0,position:y>1&&0===i?\"inner\":\"outside\",formatter:function(e){var i=[];return i.push(e.name+\":\"),i.push(V(e.value,t,u)),i.push(\"(\"+e.percent+\"%)\"),i.join(\" \")}}}),s.data=e.map(function(e){return{name:e[a],value:e[r]}}),v.push(s)}),f&&f<v[0].data.length){var O=v[0].data,w=0;O.slice(f,O.length).forEach(function(e){w+=e.value}),v[0].data=O.slice(0,f),v[0].data.push({name:\"其他\",value:w})}return v}function m(e){var i=e.innerRows,t=e.dimension,n=e.legendLimit,a=e.level,r=e.limitShowNum,o=[],s=[];if(a)a.forEach(function(e){e.forEach(function(e){s.push(e)})}),o=s;else if(r&&r<i.length){for(var l=0;l<r;l++)o.push(i[l][t]);o.push(\"其他\")}else o=i.map(function(e){return e[t]});return!!o.length&&{data:o,show:o.length<n}}function h(e){var i=e.dataType,t=e.innerRows,n=e.limitShowNum,a=e.digit,r=e.metrics,o=e.dimension,s=0,l=t.map(function(e){return s+=e[r],{name:e[o],value:e[r]}}).slice(n,t.length);return{formatter:function(e){var t=[];return t.push(j(e.color)),n&&\"其他\"===e.name?(t.push(\"其他:\"),l.forEach(function(e){var n=e.name,r=e.value,o=V(r/s,\"percent\");t.push(\"<br>\"+n+\":\"),t.push(V(r,i,a)),t.push(\"(\"+o+\")\")})):(t.push(e.name+\":\"),t.push(V(e.value,i,a)),t.push(\"(\"+e.percent+\"%)\")),t.join(\" \")}}}function f(e,i){return{trigger:\"item\",formatter:function(t){var n=[];return n.push(j(t.color)),n.push(t.name+\": \"+V(t.data.realValue,e,i)),n.join(\"\")}}}function p(e){var i=e.dimension,t=e.metrics,n=e.rows,a=e.sequence,r=e.ascending,o={type:\"funnel\"};n.sort(function(e,t){return a.indexOf(e[i])-a.indexOf(t[i])});var s=!1;n.some(function(e,i){if(i&&e[t]>n[i-1][t])return s=!0,!0});var l=100/n.length;return o.data=s?n.slice().reverse().map(function(e,n){return{name:e[i],value:(n+1)*l,realValue:e[t]}}):n.map(function(e){return{name:e[i],value:e[t],realValue:e[t]}}),r&&(o.sort=\"ascending\"),o}function v(e,i){return{data:e.map(function(e){return e[i]})}}function b(e,i,t){var n=[],a=[];return i.indicator.map(function(i,t){n[t]=e[i.name],a[t]=i.name}),{formatter:function(e){var i=[];return i.push(j(e.color)),i.push(e.seriesName+\"<br />\"),e.data.value.forEach(function(e,r){i.push(a[r]+\": \"),i.push(V(e,n[r],t)+\"<br />\")}),i.join(\"\")}}}function g(e,i){var t={indicator:[],shape:\"circle\",splitNumber:5},n={};return e.forEach(function(e){i.forEach(function(i){n[i]?n[i].push(e[i]):n[i]=[e[i]]})}),t.indicator=Object.keys(n).map(function(e){return{name:e,max:Math.max.apply(null,n[e])}}),t}function x(e){var i=e.rows,t=e.dimension,n=e.metrics,a={};e.radar.indicator.forEach(function(e,i){a[e.name]=i});var r=i.map(function(e){var i={value:[],name:e[t]};return Object.keys(e).forEach(function(t){~n.indexOf(t)&&(i.value[a[t]]=e[t])}),i});return[{name:t,type:\"radar\",data:r}]}function y(e,i){return{trigger:\"axis\",axisPointer:{type:\"shadow\"},formatter:function(t){var n=t[1];return[n.name+\"<br/>\"+n.seriesName+\" :\",\"\"+V(n.value,e,i)].join(\"\")}}}function O(e){var i=e.dimension,t=e.rows,n=e.remainStatus,a=e.totalName,r=e.remainName,o=e.xAxisName,s=e.axisVisible,l=[a].concat(t.map(function(e){return e[i]}));return\"have-remain\"===n&&(l=l.concat([r])),{type:\"category\",name:o,splitLine:{show:!1},data:l,show:s}}function w(e){var i=e.dataType,t=e.yAxisName,n=e.axisVisible,a=e.digit;return{type:\"value\",name:t,axisTick:{show:!1},axisLabel:{formatter:function(e){return V(e,i,a)}},show:n}}function S(e){var i=e.dataType,t=e.rows,n=e.metrics,a=e.totalNum,r=e.remainStatus,o=e.dataSum,s=e.digit,l={type:\"bar\",stack:\"总量\"},c=o,u=a,d=void 0,m=void 0,h=t.map(function(e){return e[n]});\"have-remain\"===r?(d=[0].concat(t.map(function(e){return u-=e[n]})).concat([0]),m=[a].concat(h).concat([a-o])):(d=[0].concat(t.map(function(e){return c-=e[n]})),m=[o].concat(h));var f=[];return f.push(Object.assign({name:\"辅助\",itemStyle:{normal:{opacity:0},emphasis:{opacity:0}},data:d},l)),f.push(Object.assign({name:\"数值\",label:{normal:{show:!0,position:\"top\",formatter:function(e){return V(e.value,i,s)}}},data:m},l)),f}function A(e,i){return i?i>e?\"have-remain\":\"none-remain\":\"not-total\"}e=\"default\"in e?e.default:e,\"function\"!=typeof Object.assign&&(Object.assign=function(e){if(null==e)throw new TypeError(\"Cannot convert undefined or null to object\");e=Object(e);for(var i=1;i<arguments.length;i++){var t=arguments[i];if(null!=t)for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e}),e.registerTheme(\"ve-chart\",{categoryAxis:{axisLine:{show:!1},axisTick:{show:!1},splitLine:{show:!1}},valueAxis:{axisLine:{show:!1}},line:{smooth:!0},grid:{containLabel:!0,left:10,right:10}});var j=function(e){return['<span style=\"',\"background-color:\"+e+\";\",\"display: inline-block;\",\"width: 10px;\",\"height: 10px;\",\"border-radius: 50%;\",\"margin-right:2px;\",'\"></span>'].join(\"\")},N=[\"#19d4ae\",\"#5ab1ef\",\"#fa6e86\",\"#ffb980\",\"#0067a6\",\"#c4b4e4\",\"#d87a80\",\"#9cbbff\",\"#d9d0c7\",\"#87a997\",\"#d49ea2\",\"#5b4947\",\"#7ba3a8\"],k=function(e){var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;if(isNaN(+e))return e;for(var t=[{value:1e18,symbol:\"E\"},{value:1e15,symbol:\"P\"},{value:1e12,symbol:\"T\"},{value:1e9,symbol:\"B\"},{value:1e6,symbol:\"M\"},{value:1e3,symbol:\"k\"}],n=0;n<t.length;n++)if(Math.abs(e)>=t[n].value)return(e/t[n].value).toFixed(i)+t[n].symbol;return e.toString()},T=function(e){return String(e).replace(/^(\\s+|-)?\\d+(?=.?\\d*($|\\s))/g,function(e){return e.replace(/(?=(?!\\b)(\\d{3})+$)/g,\",\")})},V=function(e,i){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:2,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:\"-\";if(null==e||isNaN(e))return n;switch(i){case\"KMB\":return k(e);case\"percent\":return parseFloat((100*e).toFixed(t))+\"%\";case\"normal\":return T(e);default:return e}},E=function(e){var i={};return Object.keys(e).forEach(function(t){e[t].forEach(function(e){i[e]=t})}),i},L=function(e){return JSON.parse(JSON.stringify(e))},M=function(e){return Object.prototype.toString.call(e)},H=function(e,i,t){return i in e?Object.defineProperty(e,i,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[i]=t,e},P=function(e,o,s,l){var c=L(o),u=s.axisSite,d=void 0===u?{top:[]}:u,m=s.dimension,h=void 0===m?[e[0]]:m,f=s.stack,p=void 0===f?{}:f,v=s.axisVisible,b=void 0===v||v,g=s.digit,x=void 0===g?2:g,y=s.dataOrder,O=void 0!==y&&y,w=s.scale,S=void 0===w?[!1,!1]:w,A=s.min,j=void 0===A?[null,null]:A,N=s.max,k=void 0===N?[null,null]:N,T=s.legendName,V=s.labelMap,E=s.label,M=s.itemStyle,H=s.showLine,P=l.tooltipVisible,C=l.legendVisible,R=e.slice();s.metrics?R=s.metrics:R.splice(e.indexOf(h[0]),1);var q=s.xAxisType||[\"normal\",\"normal\"],F=s.xAxisName||[],$=s.yAxisName||\"\";if(O){var _=O.label,Z=O.order;_&&Z?c.sort(function(e,i){return\"desc\"===Z?e[_]-i[_]:i[_]-e[_]}):console.warn(\"Need to provide name and order parameters\")}var z=C&&r({metrics:R,labelMap:V,legendName:T}),B=i({innerRows:c,dimAxisName:$,dimension:h,axisVisible:b}),G=t({meaAxisName:F,meaAxisType:q,axisVisible:b,digit:x,scale:S,min:j,max:k}),I={axisSite:d,isHistogram:!1,meaAxisType:q,digit:x,labelMap:V};return{legend:z,yAxis:B,series:a({innerRows:c,metrics:R,stack:p,axisSite:d,isHistogram:!1,labelMap:V,itemStyle:M,label:E,showLine:H}),xAxis:G,tooltip:P&&n(I)}},C=function(e,o,s,l){var c=L(o),u=s.axisSite,d=void 0===u?{right:[]}:u,m=s.dimension,h=void 0===m?[e[0]]:m,f=s.stack,p=void 0===f?{}:f,v=s.axisVisible,b=void 0===v||v,g=s.digit,x=void 0===g?2:g,y=s.dataOrder,O=void 0!==y&&y,w=s.scale,S=void 0===w?[!1,!1]:w,A=s.min,j=void 0===A?[null,null]:A,N=s.max,k=void 0===N?[null,null]:N,T=s.labelMap,V=s.legendName,E=s.label,M=s.itemStyle,H=s.showLine;if(O){var P=O.label,C=O.order;P&&C?c.sort(function(e,i){return\"desc\"===C?e[P]-i[P]:i[P]-e[P]}):console.warn(\"Need to provide name and order parameters\")}var R=l.tooltipVisible,q=l.legendVisible,F=e.slice();s.metrics?F=s.metrics:F.splice(e.indexOf(h[0]),1);var $=s.yAxisType||[\"normal\",\"normal\"],_=s.yAxisName||[],Z=s.xAxisName||\"\",z=q&&r({metrics:F,labelMap:T,legendName:V}),B=i({innerRows:c,dimAxisName:Z,dimension:h,axisVisible:b}),G={axisSite:d,isHistogram:!0,meaAxisType:$,digit:x,labelMap:T};return{legend:z,yAxis:t({meaAxisName:_,meaAxisType:$,axisVisible:b,digit:x,scale:S,min:j,max:k}),series:a({innerRows:c,metrics:F,stack:p,axisSite:d,isHistogram:!0,labelMap:T,itemStyle:M,label:E,showLine:H}),xAxis:B,tooltip:R&&n(G)}},R=function(e,i,t,n){var a=t.axisSite,r=void 0===a?{right:[]}:a,d=t.yAxisType,m=void 0===d?[\"normal\",\"normal\"]:d,h=t.yAxisName,f=void 0===h?[]:h,p=t.dimension,v=void 0===p?[e[0]]:p,b=t.xAxisName,g=void 0===b?[]:b,x=t.axisVisible,y=void 0===x||x,O=t.area,w=t.stack,S=t.scale,A=void 0===S?[!1,!1]:S,j=t.min,N=void 0===j?[null,null]:j,k=t.max,T=void 0===k?[null,null]:k,V=t.nullAddZero,E=void 0!==V&&V,L=t.digit,M=void 0===L?2:L,H=t.legendName,P=t.labelMap,C=t.label,R=t.itemStyle,q=t.lineStyle,F=t.areaStyle,$=n.tooltipVisible,_=n.legendVisible,Z=e.slice();t.metrics?Z=t.metrics:Z.splice(e.indexOf(v[0]),1);var z=_&&u({metrics:Z,legendName:H,labelMap:P}),B=$&&c({axisSite:r,yAxisType:m,digit:M,labelMap:P}),G=o({dimension:v,rows:i,xAxisName:g,axisVisible:y}),I=l({yAxisName:f,yAxisType:m,axisVisible:y,scale:A,min:N,max:T,digit:M}),Y=s({rows:i,axisSite:r,metrics:Z,area:O,stack:w,nullAddZero:E,labelMap:P,label:C,itemStyle:R,lineStyle:q,areaStyle:F});return!(!G||!Y)&&{legend:z,xAxis:G,series:Y,yAxis:I,tooltip:B}},q=[80,100],F=[20,100],$=function(e,i,t,n,a){var r=L(i),o=t.dataType,s=void 0===o?\"normal\":o,l=t.percentShow,c=t.dimension,u=void 0===c?e[0]:c,f=t.metrics,p=void 0===f?e[1]:f,v=t.roseType,b=void 0!==v&&v,g=t.radius,x=void 0===g?a?b?F:q:100:g,y=t.offsetY,O=void 0===y?200:y,w=t.legendLimit,S=void 0===w?30:w,A=t.selectedMode,j=void 0!==A&&A,N=t.hoverAnimation,k=void 0===N||N,T=t.digit,V=void 0===T?2:T,E=t.label,M=void 0!==E&&E,H=t.level,P=void 0!==H&&H,C=t.limitShowNum,R=void 0===C?0:C,$=n.tooltipVisible,_=n.legendVisible;R&&r.sort(function(e,i){return i[p]-e[p]});var Z={innerRows:r,dimension:u,legendLimit:S,level:P,limitShowNum:R};return{series:d({innerRows:r,dataType:s,percentShow:l,dimension:u,metrics:p,radius:x,offsetY:O,selectedMode:j,hoverAnimation:k,digit:V,roseType:b,label:M,level:P,limitShowNum:R,isRing:a}),legend:_&&m(Z),tooltip:$&&h({dataType:s,innerRows:r,limitShowNum:R,digit:V,metrics:p,dimension:u})}},_=function(e,i,t,n){return $(e,i,t,n,!0)},Z=function(e,i,t,n){var a=e.slice(),r=i.slice(),o=t.dataType,s=void 0===o?\"normal\":o,l=t.dimension,c=void 0===l?a[0]:l,u=t.sequence,d=void 0===u?r.map(function(e){return e[c]}):u,m=t.digit,h=void 0===m?2:m,v=t.ascending,b=n.tooltipVisible,g=n.legendVisible,x=void 0;if(t.metrics)x=t.metrics;else{var y=a.slice();y.splice(a.indexOf(c),1),x=y[0]}return{tooltip:b&&f(s,h),legend:g&&{data:d},series:p({dimension:c,metrics:x,rows:r,sequence:d,ascending:v})}},z=function(e,i,t,n){var a=t.dataType,r=void 0===a?{}:a,o=t.dimension,s=void 0===o?e[0]:o,l=t.digit,c=void 0===l?2:l,u=n.tooltipVisible,d=n.legendVisible,m=e.slice();t.metrics?m=t.metrics:m.splice(e.indexOf(s),1);var h=d&&v(i,s),f=g(i,m);return{legend:h,tooltip:u&&b(r,f,c),radar:f,series:x({rows:i,dimension:s,metrics:m,radar:f})}},B=function(e,i,t,n){var a=t.dataType,r=void 0===a?\"normal\":a,o=t.dimension,s=void 0===o?e[0]:o,l=t.totalName,c=void 0===l?\"总计\":l,u=t.totalNum,d=t.remainName,m=void 0===d?\"其他\":d,h=t.xAxisName,f=void 0===h?s:h,p=t.axisVisible,v=void 0===p||p,b=t.digit,g=void 0===b?2:b,x=n.tooltipVisible,j=e.slice();j.splice(j.indexOf(s),1);var N=j[0],k=N,T=x&&y(r,g),V=i.reduce(function(e,i){return e+Number(i[N])},0).toFixed(2),E=A(V,u);return{tooltip:T,xAxis:O({dimension:s,rows:i,remainStatus:E,totalName:c,remainName:m,xAxisName:f,axisVisible:v}),yAxis:w({dataType:r,yAxisName:k,axisVisible:v,digit:g}),series:S({dataType:r,rows:i,dimension:s,metrics:N,totalNum:u,remainStatus:E,dataSum:V,digit:g})}};return{render:function(){var e=this,i=e.$createElement;return(e._self._c||i)(\"div\",{ref:\"canvas\",staticClass:\"ve-chart\",style:e.canvasStyle})},staticRenderFns:[],name:\"VeChart\",mixins:[{props:{data:{type:[Object,Array],default:function(){return{}}},settings:{type:Object,default:function(){return{}}},width:{type:String,default:\"auto\"},height:{type:String,default:\"400px\"},beforeConfig:{type:Function},afterConfig:{type:Function},afterSetOption:{type:Function},afterSetOptionOnce:{type:Function},events:{type:Object},grid:{type:Object},colors:{type:Array},tooltipVisible:{type:Boolean,default:!0},legendVisible:{type:Boolean,default:!0},legendPosition:{type:String},markLine:{type:Object},markArea:{type:Object},markPoint:{type:Object},visualMap:{type:[Object,Array]},dataZoom:{type:[Object,Array]},toolbox:{type:Object},initOptions:{type:Object,default:function(){return{}}},title:Object,legend:Object,xAxis:Object,yAxis:Object,radar:Object,tooltip:Object,axisPointer:Object,brush:Object,geo:Object,timeline:Object,graphic:Object,series:[Object,Array],backgroundColor:[Object,String],textStyle:Object,animation:Object,theme:Object,themeName:String},watch:{data:{deep:!0,handler:function(e){e&&this.dataHandler(e)}},settings:{deep:!0,handler:function(e){e.type&&this.chartLib&&(this.chartHandler=this.chartLib[e.type]),this.dataHandler(this.data)}}},computed:{canvasStyle:function(){return{width:this.width,height:this.height,position:\"relative\"}},chartColor:function(){return this.colors||this.theme&&this.theme.color||N}},methods:{dataHandler:function(e){if(this.chartHandler){var i=e,t=i.columns,n=i.rows,a={tooltipVisible:this.tooltipVisible,legendVisible:this.legendVisible,echarts:this.echarts,color:this.chartColor};this.beforeConfig&&(e=this.beforeConfig(e));var r=this.chartHandler(t,n,this.settings,a);r&&(\"function\"==typeof r.then?r.then(this.optionsHandler):this.optionsHandler(r))}},optionsHandler:function(e){var i=this;if(this.legendPosition&&e.legend&&(e.legend[this.legendPosition]=10,~[\"left\",\"right\"].indexOf(this.legendPosition)&&(e.legend.top=\"middle\",e.legend.orient=\"vertical\")),this.themeName||(e.color=this.chartColor),[\"grid\",\"dataZoom\",\"visualMap\",\"toolbox\",\"title\",\"legend\",\"xAxis\",\"yAxis\",\"radar\",\"tooltip\",\"axisPointer\",\"brush\",\"geo\",\"timeline\",\"graphic\",\"series\",\"backgroundColor\",\"textStyle\"].forEach(function(t){i[t]&&(e[t]=i[t])}),this.animation&&Object.keys(this.animation).forEach(function(t){e[t]=i.animation[t]}),this.markArea||this.markLine||this.markPoint){var t={markArea:this.markArea,markLine:this.markLine,markPoint:this.markPoint},n=e.series;\"[object Array]\"===M(n)?n.forEach(function(e){i.addMark(e,t)}):\"[object Object]\"===M(n)&&this.addMark(n,t)}this.afterConfig&&(e=this.afterConfig(e)),this.echarts.setOption(e,!0),this.afterSetOption&&this.afterSetOption(this.echarts),this.afterSetOptionOnce&&!this._once.afterSetOptionOnce&&(this._once.afterSetOptionOnce=this.afterSetOptionOnce(this.echarts))},addMark:function(e,i){Object.keys(i).forEach(function(t){i[t]&&(e[t]=i[t])})},init:function(){if(!this.echarts){var e=this.themeName||(this.theme?\"outer-theme\":\"ve-chart\");this.echarts=this.echartsLib.init(this.$refs.canvas,e,this.initOptions),this.data&&this.dataHandler(this.data),this.events&&this.bindEvents()}},bindEvents:function(){var e=this;Object.keys(this.events).forEach(function(i){e.echarts.on(i,e.events[i])})},addWatchToProps:function(){var e=this,i=this._watchers.map(function(e){return e.expression});Object.keys(this.$props).forEach(function(t){if(!~i.indexOf(t)){var n={};\"[object Object]\"===M(t)&&(n.deep=!0),e.$watch(t,function(){e.dataHandler(e.data)},n)}})},registerTheme:function(){e.registerTheme(\"outer-theme\",this.theme)}},created:function(){this.echarts=null,this._once={},this.addWatchToProps(),this.theme&&this.registerTheme()},mounted:function(){this.init(),window.addEventListener(\"resize\",this.echarts.resize)},beforeDestory:function(){window.removeEventListener(\"resize\",this.echarts.resize),this.echarts.dispose()}}],created:function(){this.chartLib={bar:P,histogram:C,line:R,pie:$,ring:_,funnel:Z,radar:z,waterfall:B},this.chartHandler=this.chartLib[this.settings.type],this.echartsLib=e}}});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/v-charts/lib/chart.min.js\n// module id = 834\n// module chunks = 0 1","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport VeChart from 'v-charts/lib/chart.min'\nimport VHeader from 'components/v-header/v-header'\nimport Loading from 'base/loading/loading'\nimport { mapGetters } from 'vuex'\nimport { chartDataMixin, dateMixin } from 'common/js/mixin'\nimport { ERR_OK } from 'api/config'\nimport { getChart0 } from 'api'\n\nexport default {\n  name: 'analysis-detail',\n  mixins: [chartDataMixin, dateMixin],\n  props: {},\n  data () {\n    return {\n      chartSettings: {},\n      chartData0: {\n        bars: [],\n        times: []\n      }\n    }\n  },\n  computed: {\n    ...mapGetters([\n      'analysisItem'\n    ]),\n    ...mapGetters({\n      selectedItem: 'analysis/selectedItem'\n    })\n  },\n  components: {\n    VeChart,\n    VHeader,\n    Loading\n  },\n  methods: {\n    async _getChart0 () {\n      const params = {\n        id: this.selectedItem.id,\n        q: this.selectedItem.q,\n        tag: this.selectedItem.tag,\n        startPoTime: this.selectedItem.startPoTime,\n        endPoTime: this.selectedItem.endPoTime\n      }\n      return await getChart0(params).then(data => {\n        if (data.code === ERR_OK) {\n          return data\n        }\n      })\n    },\n    async _concurrent () {\n      const data = await Promise.all([this._getChart0()])\n\n      const [{ obj: chartData0 }] = data\n      this.chartData0 = chartData0\n    },\n    getTitle (label) {\n      switch (label) {\n        case 'company': {\n          return '企业竞争力分析报告'\n        }\n        case 'product': {\n          return '产品竞争力分析报告'\n        }\n        case 'tenderProduct': {\n          return '产品招标竞争力分析报告'\n        }\n        case 'tenderCompany': {\n          return '企业招标竞争力分析报告'\n        }\n        default: {\n          return ''\n        }\n      }\n    }\n  },\n  created () {\n    this.chartSettings = {\n      type: 'line',\n      label: {\n        normal: { show: true }\n      }\n    }\n    this._concurrent()\n    if (!this.selectedItem.id) this.$router.push('/analysis')\n  },\n  mounted () {}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/analysis-detail/analysis-detail.vue","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".analysis-detail[data-v-5314579c]{position:fixed;top:0;bottom:0;left:0;right:0;z-index:100;background-color:#fff}.analysis-detail .title-wrapper[data-v-5314579c]{padding:.266666666666667rem;line-height:1.5em;display:-webkit-box;display:-webkit-flex;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;flex-direction:column}.analysis-detail .title-wrapper>span[data-v-5314579c]{font-size:.32rem;color:#949697}.analysis-detail .chart[data-v-5314579c]{width:100%}.analysis-detail .chart>.chart-title[data-v-5314579c]{font-size:.373333333333333rem;color:#0b62c9;background-color:rgba(11,98,201,.2);padding:.133333333333333rem .266666666666667rem}.analysis-detail .loading[data-v-5314579c]{position:absolute;top:50%}.analysis-detail .slide-enter-active[data-v-5314579c],.analysis-detail .slide-leave-active[data-v-5314579c]{-webkit-transition:all .3s;transition:all .3s}.analysis-detail .slide-enter[data-v-5314579c],.analysis-detail .slide-leave-to[data-v-5314579c]{-webkit-transform:translate3d(100%,0,0);transform:translate3d(100%,0,0)}\", \"\", {\"version\":3,\"sources\":[\"/Users/yangran/workspace/industries/src/components/analysis-detail/analysis-detail.vue\"],\"names\":[],\"mappings\":\"AAAA,kCACE,eAAgB,AAChB,MAAO,AACP,SAAU,AACV,OAAQ,AACR,QAAS,AACT,YAAa,AACb,qBAAuB,CACxB,AAED,iDACE,4BAA8B,AAC9B,kBAAmB,AACnB,oBAAqB,AACrB,qBAAsB,AACtB,aAAc,AACd,4BAA6B,AAC7B,6BAA8B,AAC9B,8BAA+B,AAC/B,qBAAuB,CACxB,AAED,sDACE,iBAAmB,AACnB,aAAe,CAChB,AAED,yCACE,UAAY,CACb,AAED,sDACE,8BAAgC,AAChC,cAAe,AACf,oCAAsC,AACtC,+CAAmD,CACpD,AAED,2CACE,kBAAmB,AACnB,OAAS,CACV,AAED,4GAEE,2BAA6B,AAC7B,kBAAqB,CACtB,AAED,iGAEE,wCAA2C,AAC3C,+BAAmC,CACpC\",\"file\":\"analysis-detail.vue\",\"sourcesContent\":[\".analysis-detail[data-v-5314579c] {\\n  position: fixed;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  z-index: 100;\\n  background-color: #fff;\\n}\\n\\n.analysis-detail .title-wrapper[data-v-5314579c] {\\n  padding: 0.266666666666667rem;\\n  line-height: 1.5em;\\n  display: -webkit-box;\\n  display: -webkit-flex;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n  -webkit-flex-direction: column;\\n  flex-direction: column;\\n}\\n\\n.analysis-detail .title-wrapper > span[data-v-5314579c] {\\n  font-size: 0.32rem;\\n  color: #949697;\\n}\\n\\n.analysis-detail .chart[data-v-5314579c] {\\n  width: 100%;\\n}\\n\\n.analysis-detail .chart > .chart-title[data-v-5314579c] {\\n  font-size: 0.373333333333333rem;\\n  color: #0b62c9;\\n  background-color: rgba(11,98,201,0.2);\\n  padding: 0.133333333333333rem 0.266666666666667rem;\\n}\\n\\n.analysis-detail .loading[data-v-5314579c] {\\n  position: absolute;\\n  top: 50%;\\n}\\n\\n.analysis-detail .slide-enter-active[data-v-5314579c],\\n.analysis-detail .slide-leave-active[data-v-5314579c] {\\n  -webkit-transition: all 0.3s;\\n  transition: all 0.3s;\\n}\\n\\n.analysis-detail .slide-enter[data-v-5314579c],\\n.analysis-detail .slide-leave-to[data-v-5314579c] {\\n  -webkit-transform: translate3d(100%, 0, 0);\\n  transform: translate3d(100%, 0, 0);\\n}\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-5314579c\",\"scoped\":true,\"hasInlineConfig\":true}!./~/stylus-loader?{\"sourceMap\":true}!./~/vux-loader/src/style-loader.js!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/components/analysis-detail/analysis-detail.vue\n// module id = 916\n// module chunks = 1","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-5314579c\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":true}!../../../node_modules/stylus-loader/index.js?{\\\"sourceMap\\\":true}!../../../node_modules/vux-loader/src/style-loader.js!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./analysis-detail.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"3016f508\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/vue-style-loader!./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-5314579c\",\"scoped\":true,\"hasInlineConfig\":true}!./~/stylus-loader?{\"sourceMap\":true}!./~/vux-loader/src/style-loader.js!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/components/analysis-detail/analysis-detail.vue\n// module id = 954\n// module chunks = 1"],"sourceRoot":""}