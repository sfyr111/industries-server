{"version":3,"sources":["webpack:///industries/js/2.a0764b117731bc06f223.js","webpack:///./~/v-charts/lib/line.js","webpack:///./src/base/test/charts.vue?6cb7","webpack:///./src/base/test/charts.vue?f070","webpack:///./~/zrender/lib/core/util.js?10f4*","webpack:///./~/echarts/lib/echarts.js?68a2*","webpack:///./~/echarts/lib/util/graphic.js?e267*","webpack:///./~/echarts/lib/util/model.js?e2bd*","webpack:///./~/echarts/lib/util/number.js?43e3*","webpack:///./~/zrender/lib/core/vector.js?6654*","webpack:///./~/zrender/lib/graphic/Path.js?c119*","webpack:///./~/echarts/lib/util/format.js?7f72*","webpack:///./~/echarts/lib/model/Model.js?f4df*","webpack:///./~/zrender/lib/core/env.js?9ccc*","webpack:///./~/echarts/lib/util/clazz.js?3e66*","webpack:///./~/zrender/lib/core/BoundingRect.js?76f6*","webpack:///./~/echarts/lib/model/Component.js?0e02*","webpack:///./~/echarts/lib/util/layout.js?2b1e*","webpack:///./~/echarts/lib/coord/axisHelper.js?4730*","webpack:///./~/zrender/lib/contain/text.js?3a43*","webpack:///./~/zrender/lib/core/curve.js?9511*","webpack:///./~/zrender/lib/core/matrix.js?97a2*","webpack:///./~/zrender/lib/core/event.js?24ff*","webpack:///./~/zrender/lib/mixin/Eventful.js?223b*","webpack:///./~/zrender/lib/tool/color.js?284f*","webpack:///./~/echarts/lib/component/axisPointer/modelHelper.js?ba01*","webpack:///./~/echarts/lib/data/List.js?b096*","webpack:///./~/echarts/lib/data/helper/completeDimensions.js?9c9e*","webpack:///./~/echarts/lib/scale/Scale.js?c922*","webpack:///./~/zrender/lib/config.js?2861*","webpack:///./~/zrender/lib/container/Group.js?8d57*","webpack:///./~/zrender/lib/core/PathProxy.js?69e9*","webpack:///./~/echarts/lib/CoordinateSystem.js?2b30*","webpack:///./~/echarts/lib/model/mixin/makeStyleMapper.js?e2b1*","webpack:///./~/echarts/lib/scale/Interval.js?08e9*","webpack:///./~/echarts/lib/util/symbol.js?be2c*","webpack:///./~/echarts/lib/model/Series.js?186c*","webpack:///./~/echarts/lib/view/Chart.js?72f3*","webpack:///./~/echarts/lib/util/component.js?cc72*","webpack:///./~/zrender/lib/core/timsort.js?0a74*","webpack:///./~/zrender/lib/graphic/Displayable.js?5c45*","webpack:///./~/zrender/lib/graphic/Gradient.js?5165*","webpack:///./~/zrender/lib/graphic/helper/image.js?8535*","webpack:///./~/zrender/lib/graphic/helper/text.js?069c*","webpack:///./~/echarts/lib/chart/helper/createListFromArray.js?e3fc*","webpack:///./~/echarts/lib/component/axis/AxisBuilder.js?6417*","webpack:///./~/echarts/lib/coord/Axis.js?736c*","webpack:///./~/echarts/lib/coord/axisModelCommonMixin.js?a8d0*","webpack:///./~/echarts/lib/chart/helper/Symbol.js?9fa3*","webpack:///./~/echarts/lib/component/axis/AxisView.js?f854*","webpack:///./~/echarts/lib/component/axis/cartesianAxisHelper.js?ce88*","webpack:///./~/echarts/lib/component/axisPointer/findPointFromSeries.js?2189*","webpack:///./~/echarts/lib/component/axisPointer/globalListener.js?00cf*","webpack:///./~/echarts/lib/component/axisPointer/viewHelper.js?35c0*","webpack:///./~/echarts/lib/coord/cartesian/AxisModel.js?0573*","webpack:///./~/echarts/lib/model/mixin/colorPalette.js?b454*","webpack:///./~/echarts/lib/scale/helper.js?370b*","webpack:///./~/echarts/lib/util/throttle.js?56b3*","webpack:///./~/zrender/lib/Element.js?325b*","webpack:///./~/zrender/lib/animation/Animator.js?d2b9*","webpack:///./~/zrender/lib/animation/requestAnimationFrame.js?6d88*","webpack:///./~/zrender/lib/contain/util.js?0031*","webpack:///./~/zrender/lib/core/LRU.js?018e*","webpack:///./~/zrender/lib/core/guid.js?f0e4*","webpack:///./~/zrender/lib/core/log.js?26a2*","webpack:///./~/zrender/lib/graphic/Image.js?bf1b*","webpack:///./~/zrender/lib/graphic/Pattern.js?a97e*","webpack:///./~/zrender/lib/graphic/Style.js?22d9*","webpack:///./~/zrender/lib/graphic/helper/fixClipWithShadow.js?92a4*","webpack:///./~/zrender/lib/graphic/helper/poly.js?788c*","webpack:///./~/zrender/lib/graphic/helper/roundRect.js?418d*","webpack:///./~/zrender/lib/mixin/Transformable.js?f61b*","webpack:///./~/echarts/lib/component/gridSimple.js?eec5*","webpack:///./~/echarts/lib/coord/axisDefault.js?4492*","webpack:///./~/echarts/lib/coord/cartesian/Grid.js?f167*","webpack:///./~/echarts/lib/visual/symbol.js?518b*","webpack:///./~/echarts/lib/ExtensionAPI.js?e283*","webpack:///./~/echarts/lib/chart/helper/SymbolDraw.js?6b79*","webpack:///./~/echarts/lib/chart/helper/labelHelper.js?2f49*","webpack:///./~/echarts/lib/chart/line.js?f251*","webpack:///./~/echarts/lib/chart/line/LineSeries.js?6f66*","webpack:///./~/echarts/lib/chart/line/LineView.js?018e*","webpack:///./~/echarts/lib/chart/line/lineAnimationDiff.js?8da6*","webpack:///./~/echarts/lib/chart/line/poly.js?c760*","webpack:///./~/echarts/lib/component/axis.js?8a87*","webpack:///./~/echarts/lib/component/axis/CartesianAxisView.js?076a*","webpack:///./~/echarts/lib/component/axisPointer.js?110d*","webpack:///./~/echarts/lib/component/axisPointer/AxisPointerModel.js?e99a*","webpack:///./~/echarts/lib/component/axisPointer/AxisPointerView.js?4293*","webpack:///./~/echarts/lib/component/axisPointer/BaseAxisPointer.js?027a*","webpack:///./~/echarts/lib/component/axisPointer/CartesianAxisPointer.js?ab1e*","webpack:///./~/echarts/lib/component/axisPointer/axisTrigger.js?86e8*","webpack:///./~/echarts/lib/component/helper/listComponent.js?566d*","webpack:///./~/echarts/lib/component/legend.js?d893*","webpack:///./~/echarts/lib/component/legend/LegendModel.js?bbe7*","webpack:///./~/echarts/lib/component/legend/LegendView.js?124f*","webpack:///./~/echarts/lib/component/legend/legendAction.js?b7a9*","webpack:///./~/echarts/lib/component/legend/legendFilter.js?93b2*","webpack:///./~/echarts/lib/component/tooltip.js?b491*","webpack:///./~/echarts/lib/component/tooltip/TooltipContent.js?2c54*","webpack:///./~/echarts/lib/component/tooltip/TooltipModel.js?19ac*","webpack:///./~/echarts/lib/component/tooltip/TooltipView.js?ae52*","webpack:///./~/echarts/lib/coord/axisModelCreator.js?34e4*","webpack:///./~/echarts/lib/coord/cartesian/Axis2D.js?9345*","webpack:///./~/echarts/lib/coord/cartesian/Cartesian.js?9246*","webpack:///./~/echarts/lib/coord/cartesian/Cartesian2D.js?103b*","webpack:///./~/echarts/lib/coord/cartesian/GridModel.js?1817*","webpack:///./~/echarts/lib/data/DataDiffer.js?f330*","webpack:///./~/echarts/lib/helper.js?5794*","webpack:///./~/echarts/lib/layout/points.js?4302*","webpack:///./~/echarts/lib/loading/default.js?8a5f*","webpack:///./~/echarts/lib/model/Global.js?b9d3*","webpack:///./~/echarts/lib/model/OptionManager.js?a7a5*","webpack:///./~/echarts/lib/model/globalDefault.js?fd54*","webpack:///./~/echarts/lib/model/mixin/areaStyle.js?4e41*","webpack:///./~/echarts/lib/model/mixin/boxLayout.js?92d7*","webpack:///./~/echarts/lib/model/mixin/itemStyle.js?9011*","webpack:///./~/echarts/lib/model/mixin/lineStyle.js?3579*","webpack:///./~/echarts/lib/model/mixin/textStyle.js?e4c8*","webpack:///./~/echarts/lib/preprocessor/backwardCompat.js?f171*","webpack:///./~/echarts/lib/preprocessor/helper/compatStyle.js?aff6*","webpack:///./~/echarts/lib/processor/dataSample.js?6fcd*","webpack:///./~/echarts/lib/scale/Log.js?0ad0*","webpack:///./~/echarts/lib/scale/Ordinal.js?3a6b*","webpack:///./~/echarts/lib/scale/Time.js?6fdf*","webpack:///./~/echarts/lib/view/Component.js?415a*","webpack:///./~/echarts/lib/visual/seriesColor.js?4b6a*","webpack:///./~/zrender/lib/Handler.js?fbeb*","webpack:///./~/zrender/lib/Layer.js?f586*","webpack:///./~/zrender/lib/Painter.js?ee99*","webpack:///./~/zrender/lib/Storage.js?7e93*","webpack:///./~/zrender/lib/animation/Animation.js?8743*","webpack:///./~/zrender/lib/animation/Clip.js?fef9*","webpack:///./~/zrender/lib/animation/easing.js?64b6*","webpack:///./~/zrender/lib/contain/arc.js?7367*","webpack:///./~/zrender/lib/contain/cubic.js?b90e*","webpack:///./~/zrender/lib/contain/line.js?4326*","webpack:///./~/zrender/lib/contain/path.js?2e7f*","webpack:///./~/zrender/lib/contain/quadratic.js?f589*","webpack:///./~/zrender/lib/contain/windingLine.js?625a*","webpack:///./~/zrender/lib/core/GestureMgr.js?00fd*","webpack:///./~/zrender/lib/core/bbox.js?1b56*","webpack:///./~/zrender/lib/dom/HandlerProxy.js?2fc7*","webpack:///./~/zrender/lib/graphic/CompoundPath.js?8636*","webpack:///./~/zrender/lib/graphic/LinearGradient.js?4250*","webpack:///./~/zrender/lib/graphic/RadialGradient.js?895e*","webpack:///./~/zrender/lib/graphic/Text.js?3244*","webpack:///./~/zrender/lib/graphic/helper/smoothBezier.js?2713*","webpack:///./~/zrender/lib/graphic/helper/smoothSpline.js?a17c*","webpack:///./~/zrender/lib/graphic/mixin/RectText.js?94ea*","webpack:///./~/zrender/lib/graphic/shape/Arc.js?2994*","webpack:///./~/zrender/lib/graphic/shape/BezierCurve.js?f5c4*","webpack:///./~/zrender/lib/graphic/shape/Circle.js?076e*","webpack:///./~/zrender/lib/graphic/shape/Line.js?7728*","webpack:///./~/zrender/lib/graphic/shape/Polygon.js?d37d*","webpack:///./~/zrender/lib/graphic/shape/Polyline.js?3cdb*","webpack:///./~/zrender/lib/graphic/shape/Rect.js?3b3d*","webpack:///./~/zrender/lib/graphic/shape/Ring.js?b71c*","webpack:///./~/zrender/lib/graphic/shape/Sector.js?9767*","webpack:///./~/zrender/lib/mixin/Animatable.js?35cb*","webpack:///./~/zrender/lib/mixin/Draggable.js?fbca*","webpack:///./~/zrender/lib/tool/path.js?dc4b*","webpack:///./~/zrender/lib/tool/transformPath.js?ddb2*","webpack:///./~/zrender/lib/zrender.js?5dcd*","webpack:///./src/base/test/charts.vue","webpack:///./src/base/test/charts.vue?5f3e","webpack:///./src/base/test/charts.vue?4bad"],"names":["webpackJsonp","1029","module","exports","__webpack_require__","getLineXAxis","args","dimension","rows","xAxisName","axisVisible","map","item","index","type","nameLocation","nameGap","boundaryGap","name","axisTick","show","lineStyle","color","data","row","axisLabel","formatter","v","String","getLineSeries","axisSite","metrics","area","stack","nullAddZero","labelMap","label","itemStyle","areaStyle","series","dataTemp","stackMap","getStackMap","forEach","value","push","seriesItem","normal","yAxisIndex","right","indexOf","length","getLineYAxis","yAxisName","yAxisType","scale","min","max","digit","yAxisBase","yAxis","i","Object","assign","val","getFormated","getLineTooltip","rightList","undefined","trigger","items","tpl","showData","seriesName","itemPoint","join","getLegend","legendName","echarts","ex","target","TypeError","arguments","source","key","prototype","hasOwnProperty","call","registerTheme","categoryAxis","axisLine","splitLine","valueAxis","line","smooth","grid","containLabel","left","numberFormat","digits","isNaN","symbolMap","symbol","Math","abs","toFixed","toString","formatTausends","num","replace","m","defaultVal","parseFloat","keys","getType","columns","settings","extra","_settings$axisSite","_settings$yAxisType","_settings$yAxisName","_settings$dimension","_settings$xAxisName","_settings$axisVisible","_settings$scale","_settings$min","_settings$max","_settings$nullAddZero","_settings$digit","tooltipVisible","legendVisible","slice","splice","legend","tooltip","xAxis","yAxisParams","seriesParams","chartMixin","props","Array","default","width","height","beforeConfig","Function","afterConfig","afterSetOption","afterSetOptionOnce","events","colors","Boolean","legendPosition","markLine","markArea","markPoint","visualMap","dataZoom","toolbox","initOptions","title","radar","axisPointer","brush","geo","timeline","graphic","backgroundColor","textStyle","animation","theme","themeName","watch","deep","handler","this","dataHandler","chartLib","chartHandler","computed","canvasStyle","position","chartColor","methods","_data","options","then","optionsHandler","_this","top","orient","setting","marks","addMark","setOption","_once","init","echartsLib","$refs","canvas","bindEvents","_this2","event","on","addWatchToProps","_this3","watchedVariable","_watchers","watcher","expression","$props","prop","opts","$watch","created","mounted","window","addEventListener","resize","beforeDestory","removeEventListener","dispose","render","_vm","_h","$createElement","_self","_c","ref","staticClass","style","staticRenderFns","mixins","1051","attrs","chartData","chartSettings","588","Component","606","clone","result","typeStr","objToString","len","TYPED_ARRAY","Ctor","constructor","from","BUILTIN_OBJECT","isPrimitive","isDom","merge","overwrite","isObject","targetProp","sourceProp","isArray","isBuiltInObject","mergeAll","targetAndSources","extend","defaults","overlay","createCanvas","document","createElement","getContext","_ctx","util","array","inherits","clazz","baseClazz","F","clazzPrototype","superClass","mixin","isArrayLike","each","obj","cb","context","nativeForEach","nativeMap","reduce","memo","nativeReduce","filter","nativeFilter","find","bind","func","nativeSlice","apply","concat","curry","isFunction","isString","nodeType","ownerDocument","eqNaN","retrieve","values","retrieve2","value0","value1","retrieve3","value2","normalizeCssArray","assert","condition","message","Error","setAsPrimitive","primitiveKey","HashMap","set","createHashMap","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","[object CanvasPattern]","[object Image]","[object Canvas]","[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","arrayProto","get","prefixedKey","removeKey","noop","607","global","createRegisterEventWithLowercaseName","method","eventName","toLowerCase","Eventful","MessageCenter","ECharts","dom","prioritySortFunc","a","b","prio","themeStorage","id","group","_dom","zr","_zr","zrender","renderer","devicePixelRatio","_throttledZrFlush","throttle","zrUtil","flush","_theme","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_coordSysMgr","CoordinateSystemManager","_api","createExtensionAPI","_messageCenter","_initEvents","_pendingActions","timsort","visualFuncs","dataProcessorFuncs","_onframe","doConvertPixel","methodName","finder","ecModel","_model","coordSysList","getCoordinateSystems","modelUtil","parseFinder","coordSys","__DEV__","console","warn","updateDirectly","ecIns","payload","mainType","subType","callView","view","__alive","__model","query","eachComponent","model","__viewId","doDispatchAction","silent","payloadType","escapeConnect","actionWrap","actions","actionInfo","cptType","update","split","updateMethod","pop","parseClassType","IN_MAIN_PROCESS","payloads","batched","batch","eventObj","eventObjBatch","isHighDown","batchItem","action","main","sub","OPTION_UPDATED","updateMethods","prepareAndUpdate","flushPendingActions","pendingActions","shift","triggerUpdatedEvent","invokeUpdateMethod","api","component","componentModel","updateZ","eachSeries","seriesModel","idx","chart","updateProgressiveAndBlend","updateHoverLayerStatus","postUpdateFuncs","prepareView","isComponent","viewList","viewMap","componentType","viewId","classType","Clazz","ComponentView","getClass","ChartView","add","__id","__ecComponentInfo","componentIndex","remove","processData","process","stackSeriesData","stackedDataMap","getData","previousStack","stackedOn","doLayout","visual","isLayout","doVisualEncoding","excludesLayout","clearColorPalette","doRender","componentView","chartView","storage","elCount","traverse","el","isGroup","env","node","useHoverLayer","ignore","frameDrawNum","needProgressive","progressive","floor","stopAnimation","blendMode","canvasSupported","setStyle","z","zlevel","ecInstance","coordSysMgr","ExtensionAPI","getComponentByElement","modelInfo","getComponent","parent","enableConnect","updateConnectedChartsStatus","charts","status","STATUS_KEY","eventActionMap","actionType","eventType","connectedGroups","makeActionFromEvent","otherCharts","instances","otherChart","dispatchAction","GlobalModel","OptionManager","ComponentModel","SeriesModel","colorTool","ACTION_REG","off","one","echartsProto","getDom","getZr","option","notMerge","lazyUpdate","optionManager","optionPreprocessorFuncs","setTheme","log","getModel","getOption","getWidth","getHeight","getDevicePixelRatio","painter","dpr","getRenderedCanvas","pixelRatio","list","getDisplayList","getDataURL","excludeComponents","excludesComponentViews","self","url","toDataURL","getConnectedDataURL","groupId","mathMin","mathMax","Infinity","bottom","canvasList","boundingRect","getBoundingClientRect","targetCanvas","img","Image","x","y","image","refreshImmediately","convertToPixel","convertFromPixel","containPixel","models","coordinateSystem","containPoint","getVisual","visualType","defaultMainType","dataIndexInside","indexOfRawIndex","dataIndex","getItemVisual","getViewOfComponentModel","getViewOfSeriesModel","restoreData","create","isSingleCanvas","configLayer","clearColor","colorArr","parse","stringify","colorStops","background","updateView","clearAllVisual","updateVisual","updateLayout","optionChanged","resetOption","_loadingFX","showLoading","cfg","hideLoading","loadingEffects","opt","browser","weChat","MOUSE_EVENT_NAMES","eveName","e","params","dataModel","getSeriesByIndex","seriesIndex","getDataParams","dataType","eventData","isDisposed","_disposed","clear","idBase","Date","groupIdBase","version","dependencies","existInstance","getInstanceByDom","nodeName","toUpperCase","clientWidth","clientHeight","setAttribute","connect","disConnect","disconnect","getAttribute","getInstanceById","registerPreprocessor","preprocessorFunc","registerProcessor","priority","processorFunc","registerPostUpdate","postUpdateFunc","registerAction","test","registerCoordinateSystem","CoordinateSystem","register","getCoordinateSystemDimensions","coordSysCreator","getDimensionsInfo","dimensions","registerLayout","layoutFunc","registerVisual","visualFunc","registerLoading","loadingFx","extendComponentModel","extendComponentView","extendSeriesModel","extendChartView","setCanvasCreator","creator","List","Model","Axis","number","format","matrix","vector","helper","PRIORITY","PROCESSOR","FILTER","STATISTIC","VISUAL","LAYOUT","GLOBAL","CHART","COMPONENT","BRUSH","608","hasFillOrStroke","fillOrStroke","liftColor","lift","cacheElementStl","__hoverStlDirty","stroke","fill","hoverStyle","__hoverStl","normalStyle","__normalStl","doSingleEnterHover","__isHover","__zr","addHover","extendFrom","dirty","z2","doSingleLeaveHover","normalStl","removeHover","doEnterHover","child","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","__hoverSilentOnTouch","zrByTouch","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","checkInsideForSetText","labelModel","textPosition","setTextStyleCommon","textStyleModel","EMPTY_OBJ","isRectText","getShallow","forMerge","textOffset","labelRotate","PI","textRotation","textDistance","richResult","globalTextStyle","richItemNames","getRichItemNames","richTextStyle","setTokenTextStyle","rich","forceRich","richItemNameMap","parentModel","isBlock","textFill","getAutoColor","textStroke","textLineWidth","textBorderColor","textBorderWidth","checkInside","defaultTextColor","fontStyle","fontWeight","fontSize","fontFamily","textAlign","textVerticalAlign","textLineHeight","textWidth","textHeight","textTag","disableBox","textBackgroundColor","textPadding","textBorderRadius","textBoxShadowColor","textBoxShadowBlur","textBoxShadowOffsetX","textBoxShadowOffsetY","textShadowColor","textShadowBlur","textShadowOffsetX","textShadowOffsetY","autoColor","animateOrSetProps","isUpdate","animatableModel","isAnimationEnabled","postfix","duration","animationEasing","animationDelay","getAnimationDelayParams","animateTo","attr","pathTool","Path","Transformable","BoundingRect","round","Group","Text","Circle","Sector","Ring","Polygon","Polyline","Rect","Line","BezierCurve","Arc","CompoundPath","LinearGradient","RadialGradient","extendShape","extendPath","pathData","extendFromString","makePath","rect","layout","path","createFromString","getBoundingRect","aspect","cx","cy","resizePath","mergePath","applyTransform","pathRect","calculateTransform","subPixelOptimizeLine","param","subPixelOptimize","shape","lineWidth","x1","x2","y1","y2","subPixelOptimizeRect","originX","originY","originWidth","originHeight","positiveOrNegative","doubledPosition","setHoverStyle","hoverSilentOnTouch","setTextStyle","specifiedTextStyle","host","setText","defaultColor","getFont","gTextStyleModel","updateProps","initProps","getTransform","ancestor","mat","identity","mul","getLocalTransform","transform","invert","transformDirection","direction","hBase","vBase","vertex","groupTransition","g1","g2","getAnimatableProps","rotation","elMap1","g","elMap","anid","oldEl","newProp","clipPointsByRect","points","point","clipRectByRect","targetRect","createIcon","iconStr","rectHover","strokeNoScale","609","has","formatUtil","nubmerUtil","normalizeToArray","defaultEmphasis","subOpts","emphasisOpt","emphasis","normalOpt","subOptName","TEXT_STYLE_OPTIONS","getDataItemValue","dataItem","isDataItemOption","converDataValue","dimInfo","dimType","parseDate","NaN","createDataFormatModel","dataFormatMixin","rawValue","getRawValue","rawDataIndex","getRawIndex","getName","itemOpt","getRawDataItem","componentSubType","seriesType","seriesId","marker","getTooltipMarker","$vars","getFormattedLabel","dimIndex","labelProp","itemModel","getItemModel","formatTpl","formatTooltip","mappingToExists","exists","newCptOptions","exist","cptOption","isIdInner","makeIdAndName","mapResult","idMap","existCpt","keyInfo","idNum","compressBatches","batchA","batchB","makeMap","sourceBatch","otherMap","dataIndices","otherDataIndices","j","lenj","mapToArray","isData","mapA","mapB","queryDataIndex","indexOfName","makeGetter","hostObj","parsedKey","match","queryType","includeMainTypes","queryParam","queryComponents","dataDimToCoordDim","dataDim","getDimension","dimItem","getDimensionInfo","coordDim","coordDimToDataDim","dimName","coordDimIndex","otherDimToDataDim","otherDim","otherDims","610","_trim","str","quantityExponent","LN10","linearMap","domain","range","clamp","subDomain","subRange","parsePercent","percent","all","precision","returnStr","asc","arr","sort","getPrecision","count","getPrecisionSafe","eIndex","dotIndex","getPixelPrecision","dataExtent","pixelExtent","dataQuantity","sizeQuantity","isFinite","getPercentWithPrecision","valueList","sum","acc","pow","votesPerQuota","targetSeats","seats","votes","currentSum","remainder","Number","NEGATIVE_INFINITY","maxId","MAX_SAFE_INTEGER","remRadian","radian","pi2","isRadianAroundZero","TIME_REG","getTimezoneOffset","exec","timezoneOffset","timeOffset","quantity","nice","nf","exponent","exp10","f","reformIntervals","littleThan","lg","interval","close","curr","currClose","isNumeric","611","ArrayCtor","Float32Array","out","copy","v1","v2","scaleAndAdd","sqrt","lenSquare","div","dot","s","normalize","d","distance","distanceSquare","negate","lerp","t","lengthSquare","dist","distSquare","612","Displayable","PathProxy","pathContain","Pattern","getCanvasPattern","pathProxyForDraw","__dirtyPath","strokeContainThreshold","ctx","prevEl","hasStroke","hasFill","hasFillGradient","hasStrokeGradient","hasFillPattern","hasStrokePattern","setTransform","__dirty","_fillGradient","getGradient","_strokeGradient","fillStyle","strokeStyle","lineDash","lineDashOffset","ctxLineDash","setLineDash","getGlobalScale","setScale","beginPath","setLineDashOffset","buildPath","rebuildPath","restoreTransform","text","drawRectText","shapeCfg","inBundle","createPathProxy","_rect","needsUpdateRect","rectWithStroke","_rectWithStroke","w","lineScale","getLineScale","contain","localPos","transformCoordToLocal","containStroke","dirtyPath","refresh","__clipTarget","animateShape","loop","animate","attrKV","setShape","Sub","defaultShape","thisShape","613","numberUtil","textContain","addCommas","toCamelCase","upperCaseFirst","group1","charAt","encodeHTML","TPL_VAR_ALIAS","wrapVar","varName","seriesIdx","paramsList","encode","seriesLen","alias","k","formatTplSimple","extraCssText","s2d","formatTime","isUTC","date","utc","M","h","capitalFirst","substr","truncateText","getTextRect","614","doGet","pathArr","getParent","getParentMethod","clazzUtil","mergeOption","ignoreParent","parsePath","thisParentModel","isEmpty","setReadOnly","properties","customizeGetParent","enableClassExtend","615","navigator","os","ua","firefox","ie","edge","touchEventsSupported","pointerEventsSupported","userAgent","616","checkClassType","superCall","superApply","IS_CONTAINER","hasOwn","ret","RootClass","mandatoryMethods","$constructor","proto","ExtendedClass","enableClassManagement","entity","makeContainer","container","registerClass","componentMainType","throwWhenNotFound","getClassesByMainType","o","hasClass","getAllClassMainTypes","types","hasSubTypes","registerWhenExtend","originalExtend","617","vec2","v2ApplyTransform","union","other","lt","rb","lb","rt","maxX","maxY","sx","sy","translate","intersect","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","plain","618","getDependencies","deps","arrayPush","componentUtil","defaultOption","dependentModels","uid","layoutMode","extraOpt","getUID","mergeDefaultAndTheme","inputPositionParams","getLayoutParams","themeModel","getTheme","getDefaultOption","mergeLayoutParam","optionUpdated","newCptOption","isInit","optList","Class","getReferringComponents","enableSubTypeDefaulter","enableTopologicalTravel","619","boxLayout","gap","maxWidth","maxHeight","currentLineMaxSize","eachChild","nextX","nextY","nextChild","childAt","nextChildRect","moveX","newline","moveY","LOCATION_PARAMS","HV_NAMES","box","vbox","hbox","getAvailableSize","positionInfo","containerRect","margin","containerWidth","containerHeight","getLayoutRect","verticalMargin","horizontalMargin","positionElement","hv","boundingMode","needLocalTransform","elPos","dx","dy","sizeCalculable","hvIdx","targetOption","newOption","names","newParams","newValueCount","merged","mergedValueCount","hasProp","hasValue","ignoreSize","hResult","vResult","copyLayoutParams","620","OrdinalScale","IntervalScale","Scale","axisHelper","getScaleExtent","axisDataLen","span","scaleType","getMin","getMax","fixMin","fixMax","originalExtent","getExtent","setBlank","getNeedCrossZero","niceScaleExtent","extent","splitNumber","base","setExtent","niceExtent","minInterval","maxInterval","setInterval","createScaleByModel","axisType","getCategories","ifAxisCrossZero","axis","getAxisLabelInterval","tickCoords","labels","font","isAxisHorizontal","textSpaceTakenRect","autoLabelInterval","accumulatedLabelInterval","step","tickCoord","getFormattedLabels","labelFormatter","getTicksLabels","ticks","getTicks","tick","getAxisRawValue","getLabel","621","getTextWidth","DEFAULT_FONT","textWidthCache","textLines","l","measureText","textWidthCacheCounter","TEXT_CACHE_MAX","truncate","getRichTextRect","getPlainTextRect","contentBlock","parsePlainText","outerWidth","outerHeight","adjustTextX","adjustTextY","lineHeight","parseRichText","adjustTextPositionOnRect","halfHeight","ellipsis","prepareTruncateOptions","truncateSingleLine","maxIterations","minChar","cnCharWidth","ascCharWidth","placeholder","contentWidth","ellipsisWidth","textLine","subLength","estimateLength","charCode","charCodeAt","getLineHeight","padding","lines","truncOuterHeight","truncOuterWidth","lastIndex","STYLE_REG","matchedIndex","pushTokens","substring","contentHeight","pendingList","stlPadding","truncateWidth","truncateHeight","tokens","token","tokenStyle","styleName","tokenHeight","tokenWidth","tokenWidthNotSpecified","percentWidth","bgImg","imageHelper","findExistImage","isImageReady","paddingW","remianTruncWidth","parseInt","block","isEmptyStr","strs","isLineHolder","tokensLen","makeFont","textFont","622","isAroundZero","EPSILON","isNotAroundZero","cubicAt","p0","p1","p2","p3","onet","cubicDerivativeAt","cubicRootAt","roots","c","A","B","C","n","t1","disc","K","t2","discSqrt","mathSqrt","Y1","Y2","mathPow","ONE_THIRD","T","theta","acos","ASqrt","tmp","cos","THREE_SQRT","sin","t3","cubicExtrema","extrema","cubicSubdivide","p01","p12","p23","p012","p123","p0123","cubicProjectPoint","x0","y0","x3","y3","prev","next","d1","d2","_v0","_t","_v1","v2DistSquare","EPSILON_NUMERIC","_v2","quadraticAt","quadraticDerivativeAt","quadraticRootAt","quadraticExtremum","divider","quadraticSubdivide","quadraticProjectPoint","v2Create","623","m1","m2","out0","out1","out2","out3","out4","out5","rotate","rad","aa","ac","atx","ab","ad","aty","st","ct","vx","vy","det","625","clientToLocal","calculate","defaultGetZrXY","layerX","offsetX","zrX","zrY","layerY","offsetY","clientX","clientY","normalizeEvent","touch","targetTouches","changedTouches","zrDelta","wheelDelta","detail","isDomLevel2","attachEvent","detachEvent","stop","preventDefault","stopPropagation","cancelBubble","returnValue","Dispatcher","626","arrySlice","_$handlers","isSilent","newList","argLen","triggerWithContext","627","clampCssByte","clampCssAngle","clampCssFloat","parseCssInt","parseCssFloat","cssHueToRgb","p","setRgba","r","copyRgba","putToCache","colorStr","rgbaArr","lastRemovedArr","colorCache","put","cached","kCSSColorTable","op","ep","fname","alpha","hsla2rgba","iv","hsla","rgba","rgba2hsla","H","S","R","G","vMin","vMax","delta","L","deltaR","deltaG","deltaB","level","toHex","fastMapToColor","normalizedValue","leftIndex","rightIndex","ceil","leftColor","rightColor","dv","mapToColor","fullOutput","modifyHSL","modifyAlpha","arrColor","LRU","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","629","collectAxesInfo","globalTooltipModel","globalAxisPointerModel","linksOption","linkGroups","saveTooltipAxisInfo","fromTooltip","triggerTooltip","axisPointerModel","axisPointerShow","isHandleTrigger","makeAxisPointerModel","baseTooltipModel","snap","makeKey","involveSeries","axisInfo","axesInfo","useHandle","seriesModels","axesInfoInCoordSys","seriesInvolved","groupIndex","getLinkGroupIndex","linkGroup","mapper","axisPointerEnabled","coordSysKey","coordSysAxesInfo","coordSysMap","coordSysModel","getAxes","getTooltipAxes","triggerAxis","cross","tooltipAxes","baseAxes","otherAxes","tooltipAxisPointerModel","volatileOption","field","labelOption","crossStyle","collectSeriesInfo","seriesTooltipTrigger","seriesTooltipShow","getAxis","dim","seriesDataCount","axisModel","linkOption","checkPropInLink","linkPropValue","axisPropValue","collect","fixValue","getAxisInfo","reverse","isBlank","getAxisPointerModel","630","transferProperties","TRANSFERABLE_PROPERTIES","__wrappedMethods","propName","DefaultDataProvider","dataArray","_array","normalizeDimensions","cloneListForMapAndSample","original","excludeDimensions","allDimensions","hostModel","_storage","originalStorage","dimStore","globalObj","Float64Array","Int32Array","dataCtors","float","int","ordinal","time","DataDiffer","pure","getItem","dimensionInfos","dimensionNames","dimensionName","dimensionInfo","stackable","_dimensionInfos","indices","_nameList","_idList","_optionModels","_visual","_layout","_itemVisuals","_itemLayouts","_graphicEls","_rawData","_extent","listProto","hasItemOption","initData","nameList","dimValueGetter","isDataArray","nameDimIdx","dimensionInfoMap","size","idList","nameRepeatCount","itemName","DataCtor","stackedValue","getValues","getDataExtent","dimData","dimExtent","getSum","rawIndex","mid","indicesOfNearest","maxDistance","nearestIndices","minDist","MAX_VALUE","minDiff","diff","rawIdx","getId","dims","dimSize","filterSelf","newIndices","keep","mapArray","tmpRetValue","retValue","downSample","rate","sampleValue","sampleIndex","targetStorage","originalIndices","frameValues","frameIndices","frameSize","otherList","otherIdList","setVisual","setLayout","getLayout","getItemLayout","setItemLayout","clearItemLayouts","itemVisual","setItemVisual","setItemDataAndSeriesIndex","setItemGraphicEl","getItemGraphicEl","eachItemGraphicEl","cloneShallow","dimensionInfoList","wrapMethod","injectFunction","originalMethod","res","TRANSFERABLE_METHODS","CHANGABLE_METHODS","631","completeDimensions","sysDims","applyDim","resultItem","OTHER_DIMS","coordDimNameMap","genName","fromZero","dimsDef","encodeDef","dataDimNameMap","dimCount","retrieveValue","sysDimItem","sysDimItemDimsDef","dimDefItem","userDimName","tooltipName","dataDims","resultDimIdx","availDimIdx","sysDimIndex","sysDimItemOtherDims","extraPrefix","extraFromZero","isExtraCoord","guessOrdinal","632","_setting","_interval","scaleProto","getSetting","unionExtent","unionExtentFromData","start","end","thisExtent","_isBlank","633","config","debugMode","634","Element","_children","__storage","children","childOfName","childCount","_doAdd","addBefore","nextSibling","addToStorage","addChildrenToStorage","delFromStorage","delChildrenFromStorage","removeAll","includeChildren","tmpRect","tmpMat","invisible","childRect","635","curve","bbox","CMD","Q","Z","min2","max2","mathCos","mathSin","mathAbs","hasTypedArray","notSaveData","_saveData","_xi","_yi","_x0","_y0","_ux","_uy","_len","_lineDash","_dashOffset","_dashIdx","_dashSum","moveTo","addData","lineTo","exceedUnit","_needsDash","_dashedLineTo","bezierCurveTo","_dashedBezierTo","quadraticCurveTo","_dashedQuadraticTo","arc","startAngle","endAngle","anticlockwise","arcTo","radius","closePath","toStatic","lineDashSum","offset","setData","appendPath","appendSize","appendPathData","cmd","_expandData","_prevCmd","newData","dash","dashSum","nDash","bezierLen","tmpLen","xi","yi","fromLine","fromCubic","fromQuadratic","rx","ry","fromArc","ux","uy","dTheta","psi","fs","scaleX","scaleY","isEllipse","636","_coordinateSystems","coordinateSystemCreators","coordinateSystems","creater","coordinateSystemCreator","637","excludes","includes","638","roundNumber","_intervalPrecision","getInterval","_niceExtent","getIntervalPrecision","intervalScaleGetTicks","niceTicks","intervalScaleNiceTicks","intervalPrecision","niceTickExtent","expandSize","639","Triangle","Diamond","Pin","angle","asin","tanX","tanY","cpLen","cpLen2","Arrow","symbolCtors","roundRect","square","circle","diamond","pin","arrow","triangle","symbolShapeMakers","symbolBuildProxies","Symbol","symbolType","beforeBrush","proxySymbol","symbolPathSetColor","symbolStyle","symbolShape","__isEmptyBrush","symbolUtil","createSymbol","symbolPath","setColor","640","classUtil","colorPaletteMixin","legendDataProvider","visualColorAccessPath","getInitialData","fillDataTextStyle","newSeriesOption","getLinkedData","getRawData","getBaseAxis","multipleSeries","formattedValue","setEachItem","dimIdx","valStr","vertially","tooltipDims","colorEl","animationEnabled","getColorFromPalette","scope","getAxisTooltipData","getTooltipPosition","641","Chart","elSetState","state","toggleHighlight","dataIdx","highlight","downplay","chartProto","642","random","subTypeDefaulters","registerSubTypeDefaulter","defaulter","determineSubType","componentTypeMain","dependencyGetter","makeDepndencyGraph","fullNameList","graph","noEntryList","thisItem","createDependencyGraphItem","originalDeps","availableDeps","getAvailableDependencies","entryCount","dependentName","predecessor","thatItem","successor","dep","topologicalTravel","targetNameList","callback","removeEdge","succComponentType","removeEdgeAndAdd","targetNameSet","currComponentType","currVertex","isInTargetNameSet","643","minRunLength","DEFAULT_MIN_MERGE","makeAscendingRun","lo","hi","compare","runHi","reverseRun","binaryInsertionSort","pivot","gallopLeft","hint","lastOffset","maxOffset","gallopRight","TimSort","pushRun","_runStart","_runLength","runStart","stackSize","runLength","mergeRuns","mergeAt","forceMergeRuns","start1","length1","start2","length2","mergeLow","mergeHigh","cursor1","cursor2","dest","count1","count2","exit","_minGallop","minGallop","DEFAULT_MIN_GALLOPING","customCursor","customDest","remaining","ts","minRun","force","644","Style","__clipPaths","RectText","draggable","dragging","culling","cursor","afterBrush","rectContain","coord","animateStyle","useStyle","645","Gradient","addColorStop","646","imageOnLoad","cachedImgObj","__cachedImgObj","onload","pending","pendingWrap","cbPayload","hostEl","globalImageCache","newImageOrSrc","createOrUpdateImage","__zrImageSrc","src","647","normalizeStyle","VALID_TEXT_ALIGN","textBaseline","VALID_TEXT_VERTICAL_ALIGN","renderPlainText","setCtx","__textCotentBlock","boxPos","getBoxPosition","baseX","baseY","applyTextRotation","boxY","textX","textY","needDrawBg","needDrawBackground","boxX","drawBackground","getTextXForPadding","getStroke","getFill","strokeText","fillText","renderRichText","drawRichText","xLeft","lineTop","xRight","tokenCount","usedWidth","lineXLeft","lineXRight","placeToken","origin","textOrigin","isPlainBg","roundRectHelper","onBgImageLoaded","drawImage","blockHeiht","__currentValues","maxValue","lastIndexOf","center","middle","normalizeTextStyle","renderText","needDrawText","648","firstDataNotNull","ifNeedCompleteOrdinalData","sampleItem","createListFromArray","coordSysName","creators","registeredCoordSys","completeDimOpt","categoryIndex","createNameList","categories","categoryAxesModels","isStackable","getDimTypeByAxis","categoryAxisModel","categoryDim","dataLen","cartesian2d","axesModels","xAxisModel","yAxisModel","xAxisType","isXAxisCateogry","isYAxisCategory","singleAxis","singleAxisModel","singleAxisType","isCategory","single","polar","polarModel","angleAxisModel","findAxisModel","radiusAxisModel","radiusAxisType","angleAxisType","isAngleAxisCateogry","isRadiusAxisCateogry","649","makeAxisEventDataBase","endTextLayout","textRotate","rotationDiff","inverse","onLeft","tooltipOpt","fixMinMaxLabelShow","textEls","showMinLabel","showMaxLabel","firstLabel","nextLabel","lastLabel","prevLabel","isTwoLabelOverlapped","current","labelLayout","firstRect","nextRect","mRotationBack","AxisBuilder","labelOffset","nameDirection","tickDirection","labelDirection","dumbGroup","updateTransform","_transform","_dumbGroup","hasBuilder","builders","getGroup","pt1","pt2","lineCap","getLineStyle","tickModel","lineStyleModel","tickLen","tickInterval","labelInterval","ticksCoords","getTicksCoords","ifIgnoreOnTick","axisLabelShow","labelMargin","labelRotation","innerTextLayout","categoryData","triggerEvent","tickVal","itemLabelModel","textColor","getTextColor","dataToCoord","pos","labelStr","textEl","targetType","decomposeTransform","axisName","gapSignal","nameRotation","axisNameAvailableWidth","truncateOpt","nameTruncateMaxWidth","truncatedText","formatterParams","__fullText","__truncatedText","content","axisRotation","rawTick","650","fixExtentWithBands","nTick","normalizedExtent","onBand","_labelInterval","containData","coordToData","pointToData","alignWithLabel","bands","getBands","coords","getLabelsCoords","getBandWidth","axisExtent","getLabelInterval","isHorizontal","651","rangeStart","rangeEnd","getCoordSysModel","setRange","resetRange","657","getSymbolSize","symbolSize","getScale","seriesScope","updateData","driftSymbol","drift","labelHelper","symbolProto","_createSymbol","_symbolType","stopSymbolAnimation","toLastFrame","getSymbolPath","setZ","setDraggable","_updateCommon","_seriesModel","normalStyleAccessPath","emphasisStyleAccessPath","normalLabelAccessPath","emphasisLabelAccessPath","hoverItemStyle","symbolRotate","symbolOffset","hoverLabelModel","hoverAnimation","cursorStyle","getItemStyle","elStyle","opacity","valueDim","findLabelValueDim","normalText","onEmphasis","ratio","onNormal","fadeOut","658","updateAxisPointer","axisView","forceRender","AxisView","getAxisPointerClass","axisPointerClass","axisPointerModelHelper","_axisPointer","disposeAxisPointer","axisPointerClazz","registerAxisPointerClass","659","gridModel","rawAxisPosition","axisPosition","onZero","axisDim","getRect","rectBound","axisOffset","posBound","otherAxis","onZeroAxisIndex","onZeroCoord","toGlobalCoord","dirMap","labelInside","660","dataToPoint","661","initGlobalListeners","useHandler","dis","makeDispatchAction","records","record","dispatchTooltipFinally","pendings","initialized","doEnter","onLeave","actuallyPayload","showLen","showTip","hideLen","hideTip","currTrigger","globalListener","unregister","662","confineInContainer","viewWidth","viewHeight","buildElStyle","axisPointerType","styleModel","getAreaStyle","buildLabelElOption","elOption","labelPos","getValueLabel","paddings","textRect","align","verticalAlign","bgColor","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","seriesDataIndices","seriesData","idxItem","dataParams","getTransformedPosition","layoutInfo","buildCartesianSingleLabelElOption","textLayout","makeLineShape","xDimIndex","makeRectShape","xy","wh","makeSectorShape","r0","clockwise","663","getAxisType","axisModelCreator","AxisModel","gridIndex","gridId","extraOption","664","colorIdx","colorNameMap","colorPalette","665","fixExtent","666","lib","ORIGIN_METHOD","RATE","fn","delay","debounce","lastExec","getTime","timer","currCall","debounceNextCall","lastCall","thisDelay","thisDebounce","clearTimeout","setTimeout","debounceDelay","createOrUpdate","fnAttr","throttleType","originFn","lastThrottleType","667","guid","Animatable","clipPath","beforeUpdate","afterUpdate","hide","setClipPath","addSelfToZr","removeClipPath","removeSelfFromZr","animators","addAnimator","removeAnimator","668","defaultGetter","defaultSetter","interpolateNumber","interpolateString","interpolateArray","arrDim","len2","fillArr","arr0","arr1","arr0Len","arr1Len","arraySlice","isArraySame","catmullRomInterpolateArray","catmullRomInterpolate","v0","cloneValue","rgba2String","getArrayDim","keyframes","lastValue","createTrackClip","animator","easing","oneTrackDone","forceAnimate","getter","_getter","setter","_setter","useSpline","trackLen","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","_target","lastFrame","lastFramePercent","onframe","frame","clip","Clip","life","_loop","_delay","ondestroy","Animator","_tracks","_clipCount","_doneList","_onframeList","_clipList","when","tracks","during","pause","_paused","resume","isPaused","_doneCallback","doneList","lastClip","clipCount","addClip","oldOnFrame","forwardToLast","clipList","removeClip","done","getClips","669","requestAnimationFrame","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","670","PI2","normalizeRadian","671","LinkedList","head","tail","linkedListProto","insert","entry","Entry","insertEntry","maxSize","_list","_map","_maxSize","_lastRemovedEntry","LRUProto","removed","leastUsedEntry","672","idStart","673","674","ZImage","_image","sWidth","sHeight","675","repeat","createPattern","676","createLinearGradient","createRadialGradient","textHelper","STYLE_COMMON_PROPS","transformText","blend","prevStyle","firstDraw","globalAlpha","globalCompositeOperation","otherStyle","newStyle","canvasGradient","styleProto","677","shadowTemp","orignalBrush","modified","clipPaths","678","smoothSpline","smoothBezier","controlPoints","smoothConstraint","cp1","cp2","679","r1","r2","r3","r4","total","680","mIdentity","transformableProto","parentHasTransform","invTransform","tmpTransform","atan2","transformCoordToGlobal","683","684","nameRotate","nameTruncate","nameTextStyle","inside","splitArea","timeAxis","logAxis","logBase","685","isAxisUsedInTheGrid","getLabelUnionRect","axisLabelModel","labelCount","isLabelIgnored","singleRect","Grid","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","fixAxisOnZero","axesMap","otherAxisDim","axes","canNotOnZeroToAxis","updateAxisTransfrom","coordBase","axisExtentSum","toLocalCoord","findAxesModels","axesTypes","isCartesian2D","Cartesian2D","Axis2D","gridProto","_updateScale","ignoreContainLabel","adjustAxes","axesList","gridRect","getBoxLayoutParams","labelUnionRect","axisIndex","axesMapOnDim","getCartesian","xAxisIndex","coordList","getCartesians","_findConvertTarget","cartesian","coordsList","createAxisCreator","axisPositionUsed","axesCount","addAxis","baseAxis","getOtherAxis","grids","688","defaultSymbolType","legendSymbol","eachRawSeriesByType","isSeriesFiltered","itemSymbolType","itemSymbolSize","708","chartInstance","echartsAPIList","709","SymbolDraw","symbolCtor","_symbolCtor","symbolNeedsDraw","isIgnore","symbolDrawProto","oldData","SymbolCtor","newIdx","symbolEl","oldIdx","execute","enableAnimation","710","labelDims","711","712","legendHoverLink","clipOverflow","smoothMonotone","showSymbol","showAllSymbol","connectNulls","sampling","hoverLayerThreshold","713","isPointsSame","points1","points2","getSmooth","getAxisExtentWithGap","getGlobalExtent","halfBandWidth","dir","sign","getStackedOnPoints","valueStart","baseDataOffset","stackedOnSameSign","stackedData","createGridClipShape","hasAnimation","xExtent","yExtent","createPolarClipShape","angleAxis","getAngleAxis","radiusAxis","getRadiusAxis","radiusExtent","angleExtent","RADIAN","createClipShape","turnPointsIntoStep","stepTurnAt","baseIndex","stepPoints","nextPt","pt","stepPt","stepPt2","getVisualGradient","visualMetaList","visualMeta","stops","stopLen","outerColors","minCoord","maxCoord","coordSpan","unshift","gradient","lineAnimationDiff","polyHelper","lineGroup","symbolDraw","_symbolDraw","_lineGroup","areaStyleModel","isCoordSysPolar","prevCoordSys","_coordSys","polyline","_polyline","polygon","_polygon","isAreaChart","stackedOnPoints","isSymbolIgnore","_getSymbolIgnoreFunc","__temp","_step","_newPolygon","_stackedOnPoints","_points","_updateAnimation","_newPolyline","visualColor","lineJoin","stackedOnSmooth","getAxesByScale","stackedOnCurrent","stackedOnNext","__points","updatedDataInfo","diffStatus","idx1","ptIdx","714","getStackedOnPoint","diffData","diffResult","oldStackedOnPoints","newStackedOnPoints","oldCoordSys","newCoordSys","currPoints","nextPoints","currStackedPoints","nextStackedPoints","sortedIndices","rawIndices","diffItem","pointAdded","currentPt","sortedCurrPoints","sortedNextPoints","sortedCurrStackedPoints","sortedNextStackedPoints","sortedStatus","715","isPointNull","drawSegment","segLen","allLen","smoothMin","smoothMax","prevIdx","v2Copy","cp0","nextIdx","nextP","ratioNextSeg","prevP","lenPrevSeg","lenNextSeg","vec2Min","vec2Max","getBoundingBox","ptMin","ptMax","fixClipWithShadow","stackedOnBBox","716","717","cartesianAxisHelper","axisBuilderAttrs","selfBuilderAttrs","CartesianAxisView","oldAxisGroup","_axisGroup","axisBuilder","_splitLine","splitLineModel","lineColors","lineInterval","lineCount","colorIndex","_splitArea","splitAreaModel","areaColors","prevX","prevY","areaInterval","718","axisTrigger","link","719","AxisPointerModel","triggerOn","animationDurationUpdate","shadowStyle","borderColor","borderWidth","handle","icon","720","AxisPonterView","disopse","721","BaseAxisPointer","animationModel","moveAnimation","propsEqual","lastProp","lastProps","newProps","equals","updateLabelShowHide","labelEl","getHandleTransProps","trans","updateMandatoryProps","eventTool","_group","_lastGraphicKey","_handle","_dragging","_lastValue","_lastStatus","_payloadInfo","animationThreshold","_axisModel","_axisPointerModel","makeElOption","graphicKey","_moveAnimation","determineAnimation","doUpdateProps","updatePointerEl","updateLabelEl","createPointerEl","createLabelEl","_renderHandle","isCategoryAxis","useSnap","pointerOption","pointer","pointerEl","updateHandleTransform","handleModel","onmousemove","onmousedown","_onHandleDragMove","ondragend","_onHandleDragEnd","includeStyles","handleSize","_moveHandleToValue","getHandleTransform","_doDispatchAxisPointer","payloadInfo","cursorPoint","tooltipOption","doClear","buildLabel","722","getAxisDimIndex","viewHelper","CartesianAxisPointer","otherExtent","pixelValue","pointerShapeBuilder","currPosition","cursorOtherValue","tooltipOptions","targetShape","shadow","bandWidth","723","illegalPoint","findPointFromSeries","isIllegalPoint","inputAxesInfo","shouldHide","outputFinder","showValueMap","dataByCoordSys","updaters","showPointer","showTooltip","coordSysContainsPoint","inputAxisInfo","findInputAxisInfo","processOnAxis","linkTriggers","tarAxisInfo","tarKey","srcAxisInfo","srcKey","srcValItem","makeMapperParam","updateModelActually","dispatchTooltipActually","dispatchHighDownActually","newValue","dontSnap","buildPayloadsBySeries","payloadBatch","snapToValue","seriesNestestValue","nestestValue","modelHelper","coordSysItem","coordSysId","coordSysIndex","coordSysType","coordSysMainType","dataByAxis","axisId","valueLabelOpt","outputAxesInfo","valItem","lastHighlights","newHighlights","toHighlight","toDownplay","724","boxLayoutParams","viewportSize","makeBackground","725","726","LegendModel","selected","_updateData","legendData","hasSelected","isSelected","select","availableNames","getSeries","_availableNames","unSelect","toggleSelected","borderRadius","itemGap","itemWidth","itemHeight","inactiveColor","selectedMode","727","dispatchSelectAction","dispatchHighlightAction","dataName","dispatchDownplayAction","symbolCreator","listComponentHelper","layoutUtil","newlineDisabled","_contentGroup","_backgroundEl","getContentGroup","legendModel","resetInner","itemAlign","renderInner","mainRect","layoutInner","layoutRect","contentGroup","legendDrawnMap","selectMode","getSeriesByName","legendSymbolType","_createItem","eachRawSeries","itemGroup","itemIcon","tooltipModel","legendGlobalTooltipModel","hitRect","legendIndex","__legendDataIndex","contentRect","728","legendSelectActionHandler","selectedMap","isToggleSelect","isItemSelected","729","legendModels","findComponents","filterSeries","730","731","assembleTransition","transitionText","vendors","vendorPrefix","assembleFont","cssText","assembleCssText","transitionDuration","zrColor","borderName","camelCase","TooltipContent","_x","_y","appendChild","_container","_show","_hideTimeout","onmouseenter","_enterable","_inContent","eventUtil","dispatch","onmouseleave","hideLater","_hideDelay","stl","currentStyle","defaultView","getComputedStyle","domStyle","display","innerHTML","setContent","setEnterable","enterable","getSize","viewportRootOffset","getViewportRootOffset","offsetLeft","offsetTop","isShow","732","showContent","alwaysShowContent","displayMode","confine","showDelay","hideDelay","animationEasingUpdate","733","buildTooltipModel","modelCascade","resultModel","refixTooltipPosition","gapH","gapV","getOuterSize","confineTooltipPosition","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","calcTooltipPosition","contentSize","domWidth","domHeight","rectWidth","rectHeight","isCenterAlign","axisPointerViewHelper","proxyRect","tooltipContent","_tooltipContent","_tooltipModel","_ecModel","_lastDataByCoordSys","_alwaysShowContent","_initGlobalListener","_keepShow","_tryShow","_hide","_lastX","_lastY","_refreshUpdateTimeout","manuallyShowTip","_ticket","_manuallyAxisShowTip","pointInfo","findHover","manuallyHideTip","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","_showTimout","singleDefaultHTML","singleParamsList","singleTooltipModel","itemCoordSys","axisValue","seriesDefaultHTML","valueLabel","axisValueLabel","firstLine","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","tooltipTrigger","defaultHtml","asyncTicket","subTooltipModel","html","cbTicket","vAlign","viewSize","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisItemCoordSys","thisDataByAxis","lastItem","indexAxis","lastIndices","lastIdxItem","newIdxItem","734","axisDefault","AXIS_TYPES","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","735","coordExtent","736","dimAxisMapper","_axes","Cartesian","_dimList","_dataCoordConvert","input","dimList","output","737","axisX","axisY","738","739","defaultKeyGetter","oldArr","newArr","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","keyArr","keyGetterName","dataDiffer","existence","_add","_update","_remove","oldDataIndexMap","newDataIndexMap","oldDataKeyArr","newDataKeyArr","740","axisModelCommonMixin","createList","createScale","mixinAxisModelCommonMethods","741","eachSeriesByType","coordDims","742","maskColor","mask","labelRect","743","mergeTheme","themeItem","initBase","baseOption","OPTION_INNER_KEY","_seriesIndices","globalDefault","getComponentsByTypes","componentsMap","existComponent","createSeriesIndices","filterBySubType","components","cpt","assertSeriesInitialized","_optionManager","mountOption","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","visitComponent","newCptOptionList","ComponentModelClass","newCptTypes","componentOption","cpts","isIdArray","isNameArray","queryCond","q","indexAttr","idAttr","nameAttr","queryResult","oneSeries","getSeriesByType","rawSeriesIndex","getCurrentSeriesIndices","filteredSeries","componentTypes","744","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","parseRawOption","rawOption","isNew","mediaDefault","timelineOptions","mediaList","timelineOpt","media","singleMedia","preProcess","applyMediaQuery","ecWidth","ecHeight","realMap","aspectratio","applicatable","matched","QUERY_REG","operator","realAttr","real","expect","indicesEquals","indices1","indices2","oldOption","newCptOpt","oldCptOpt","oldOptionBackup","newParsedOption","isRecreate","optionBackup","timelineModel","getCurrentIndex","745","platform","animationDuration","progressiveThreshold","useUTC","746","747","748","getBorderLineDash","lineType","749","getLineDash","dotSize","dashSize","750","graphicUtil","PATH_COLOR","noDefault","751","compatLayoutProperties","LAYOUT_PROPERTIES","compatStyle","COMPATITABLE_COMPONENTS","COMPATITABLE_SERIES","seriesOpt","clockWise","pointerColor","dataRange","componentName","752","compatItemStyle","itemStyleOpt","POSSIBLE_STYLES","normalItemStyleOpt","emphasisItemStyleOpt","compatTextStyle","labelOptSingle","compatLabelTextStyle","labelOpt","processSeries","upperLabel","edgeLabel","mpData","mlData","toArr","toObj","axisOpt","parallel","parallelOpt","parallelAxisDefault","calendar","calendarOpt","radarOpt","geoOpt","753","samplers","average","nearest","indexSampler","sampler","754","fixRoundingError","originalVal","roundingErrorFix","intervalScaleProto","mathFloor","mathCeil","mathLog","LogScale","_originalScale","originalScale","powVal","__fixMin","__fixMax","approxTickNum","err","755","rank","756","scaleHelper","bisect","TimeScale","stepLvl","_stepLvl","ONE_HOUR","getFullYear","getMonth","getDate","approxInterval","scaleLevelsLen","scaleLevels","yearSpan","ONE_SECOND","ONE_MINUTE","ONE_DAY","757","componentProto","758","encodeColor","colorAccessPath","766","makeEventPacket","eveType","targetInfo","topTarget","gestureEvent","pinchX","pinchY","pinchScale","EmptyProxy","isHover","displayable","SILENT","Draggable","handlerNames","Handler","proxy","painterRoot","_hovered","_lastTouchMoment","mousemove","lastHovered","lastHoveredTarget","hovered","hoveredTarget","setCursor","dispatchToElement","mouseout","innerDom","element","toElement","relatedTarget","parentNode","eventArgs","setCursorStyle","eventHandler","eventPacket","eachOtherLayer","layer","exclude","hoverCheckResult","_downel","_upel","767","returnFalse","createDom","newDom","newDomStyle","Layer","onselectstart","domBack","ctxBack","motionBlur","lastFrameAlpha","initContext","createBackBuffer","clearAll","haveMotionBLur","clearRect","clearColorGradientOrPattern","__canvasGradient","save","fillRect","restore","768","parseInt10","isLayerValid","__builtin__","preProcessLayer","__unusedCount","postProcessLayer","isDisplayableCulled","viewRect","isClipPathChanged","prevClipPaths","doClip","createRoot","domRoot","Painter","root","singleCanvas","_opts","_singleCanvas","rootStyle","zlevelList","_zlevelList","layers","_layers","_layerConfig","_width","_height","mainLayer","_domRoot","_getSize","_progressiveLayers","_hoverlayer","_hoverElements","getViewportRoot","viewportRoot","paintAll","_paintList","refreshHover","_startProgessive","__hoverMir","elMirror","__from","hoverElements","clearHover","hoverLayer","displayableSortFunc","getLayer","originalEl","_doPaintEl","_progressiveToken","_doPaintList","_furtherProgressive","_progress","_clearProgressive","_updateLayerStatus","eachBuiltinLayer","flushProgressiveLayer","currentLayer","currentZLevel","currentProgressiveLayer","layerProgress","progressiveLayerIdx","elZLevel","elFrame","__frame","MAX_PROGRESSIVE_LAYER_NUMBER","renderScope","__progress","__maxProgress","__nextIdxNotProg","forcePaint","prevClipLayer","prevElClipPaths","insertLayer","layersMap","prevLayer","virtual","prevDom","insertBefore","firstChild","eachLayer","getLayers","progressiveLayers","elCountsLastFrame","progressiveElCountsLastFrame","lastProgressiveKey","progressiveLayerCount","frameCount","elProgress","_clearLayer","layerConfig","delLayer","removeChild","clearLayer","findAndDrawOtherLayer","smaller","larger","intermediateLayer","renderToCanvas","imageLayer","displayList","whIdx","cwh","plt","prb","pathToImage","shadowBlurSize","leftMargin","rightMargin","topMargin","bottomMargin","pathTransform","ImageShape","imgShape","769","shapeCompareFunc","Storage","_roots","_displayList","_displayListLen","includeIgnore","updateDisplayList","_updateAndAddDisplayable","userSetClipPath","currentClipPath","parentClipPath","addRoot","delRoot","_renderList","770","Animation","stage","_clips","_running","_time","_pausedTime","_pauseStart","clips","deferredEvents","deferredClips","_needsRemove","fire","_startLoop","771","_life","_initialized","onrestart","easingFuncs","globalTime","deltaTime","_startTime","easingFunc","schedule","restart","arg","772","linear","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","exponentialOut","exponentialInOut","circularIn","circularOut","circularInOut","elasticIn","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","773","_l","774","775","_a","_b","776","isAroundEqual","swapExtrema","windingCubic","nRoots","y0_","y1_","nExtrema","unit","windingQuadratic","y_","x_","windingArc","containPath","isStroke","windingLine","cubic","quadratic","777","778","779","pointPair","GestureMgr","_track","recognize","_doTrack","_recognize","touches","trackItem","recognizers","gestureInfo","pinch","track","pinchEnd","pinchPre","pinchCenter","780","extremity","fromPoints","xDim","yDim","tx","ty","781","eventNameFix","processGesture","gestureMgr","_gestureMgr","setTouchTimer","instance","_touching","_touchTimer","isPointerFromTouch","pointerType","initDomHandler","makeMouseHandler","touchHandlerNames","_handlers","domHandlers","pointerHandlerNames","mouseHandlerNames","HandlerDomProxy","mountHandlers","pointerEventNames","pointerdown","pointerup","pointermove","pointerout","nm","touchstart","mousedown","touchmove","touchend","mouseup","click","handlerDomProxyProto","782","paths","_updatePathDirty","783","globalCoord","784","785","786","v2Min","v2Max","v2Scale","v2Distance","v2Add","isLoop","constraint","prevPoint","nextPoint","cps","d0","787","interpolate","segs","w2","w3","788","789","unitX","unitY","790","someVectorAt","isTangent","cpx2","cpy2","cpx1","cpy1","curveTool","pointAt","tangentAt","791","792","793","794","795","796","797","798","animatingShape","pathSplitted","_animateToShallow","objShallow","propertyCount","799","_dragStart","_drag","_dragEnd","draggingTarget","_draggingTarget","dropTarget","lastDropTarget","_dropTarget","800","processArc","fa","psiDeg","xp","yp","lambda","cxp","cyp","vAngle","u","vRatio","createPathProxyFromString","cs","cc","RegExp","prevCmd","cpx","cpy","ctlPtx","ctlPty","createPathOptions","pathProxy","transformPath","vMag","pathEls","pathList","pathEl","pathBundle","801","nPoint","mathAtan2","802","delInstance","HandlerProxy","useVML","painterCtors","ZRender","getInstance","registerPainter","rendererType","vml","handerProxy","_needsRefresh","oldDelFromStorage","oldAddToStorage","zLevel","_needsRefreshHover","refreshHoverImmediately","clearAnimation","877","__webpack_exports__","defineProperty","__WEBPACK_IMPORTED_MODULE_0_v_charts_lib_line__","__WEBPACK_IMPORTED_MODULE_0_v_charts_lib_line___default","VeLine","$nextTick","日期","销售额-1季度","销售额-2季度","占比","其他","921","sources","mappings","file","sourceRoot","959","locals"],"mappings":"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","file":"industries/js/2.a0764b117731bc06f223.js","sourcesContent":["webpackJsonp([2],{\n\n/***/ 1029:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar echarts = _interopDefault(__webpack_require__(607));\n__webpack_require__(730);\n__webpack_require__(725);\n__webpack_require__(711);\n\nif (typeof Object.assign !== 'function') {\n  Object.assign = function (target) {\n    if (target == null) {\n      throw new TypeError('Cannot convert undefined or null to object');\n    }\n\n    target = Object(target);\n    for (var index = 1; index < arguments.length; index++) {\n      var source = arguments[index];\n      if (source != null) {\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n    }\n    return target;\n  };\n}\n\necharts.registerTheme('ve-chart', {\n  categoryAxis: {\n    axisLine: { show: false },\n    axisTick: { show: false },\n    splitLine: { show: false }\n  },\n  valueAxis: {\n    axisLine: { show: false }\n  },\n  line: {\n    smooth: true\n  },\n  grid: {\n    containLabel: true,\n    left: 10,\n    right: 10\n  }\n});\n\nvar itemPoint = function itemPoint(color) {\n  return ['<span style=\"', 'background-color:' + color + ';', 'display: inline-block;', 'width: 10px;', 'height: 10px;', 'border-radius: 50%;', 'margin-right:2px;', '\"></span>'].join('');\n};\n\nvar color = ['#19d4ae', '#5ab1ef', '#fa6e86', '#ffb980', '#0067a6', '#c4b4e4', '#d87a80', '#9cbbff', '#d9d0c7', '#87a997', '#d49ea2', '#5b4947', '#7ba3a8'];\n\nvar numberFormat = function numberFormat(val) {\n  var digits = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n\n  if (isNaN(+val)) return val;\n\n  var symbolMap = [{ value: 1E18, symbol: 'E' }, { value: 1E15, symbol: 'P' }, { value: 1E12, symbol: 'T' }, { value: 1E9, symbol: 'B' }, { value: 1E6, symbol: 'M' }, { value: 1E3, symbol: 'k' }];\n\n  for (var i = 0; i < symbolMap.length; i++) {\n    if (Math.abs(val) >= symbolMap[i].value) {\n      return (val / symbolMap[i].value).toFixed(digits) + symbolMap[i].symbol;\n    }\n  }\n\n  return val.toString();\n};\n\nvar formatTausends = function formatTausends(num) {\n  return String(num).replace(/^(\\s+|-)?\\d+(?=.?\\d*($|\\s))/g, function (m) {\n    return m.replace(/(?=(?!\\b)(\\d{3})+$)/g, ',');\n  });\n};\n\nvar getFormated = function getFormated(val, type) {\n  var digit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 2;\n  var defaultVal = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '-';\n\n  if (val == null || isNaN(val)) return defaultVal;\n  switch (type) {\n    case 'KMB':\n      return numberFormat(val);\n    case 'percent':\n      return parseFloat((val * 100).toFixed(digit)) + '%';\n    case 'normal':\n      return formatTausends(val);\n    default:\n      return val;\n  }\n};\n\n\n\nvar getStackMap = function getStackMap(stack) {\n  var stackMap = {};\n  Object.keys(stack).forEach(function (item) {\n    stack[item].forEach(function (name) {\n      stackMap[name] = item;\n    });\n  });\n  return stackMap;\n};\n\n\n\n\n\n\n\n\nvar getType = function getType(v) {\n  return Object.prototype.toString.call(v);\n};\n\nfunction getLineXAxis(args) {\n  var dimension = args.dimension,\n      rows = args.rows,\n      xAxisName = args.xAxisName,\n      axisVisible = args.axisVisible;\n\n  return dimension.map(function (item, index) {\n    return {\n      type: 'category',\n      nameLocation: 'middle',\n      nameGap: 22,\n      boundaryGap: false,\n      name: xAxisName[index] || '',\n      axisTick: { show: true, lineStyle: { color: '#eee' } },\n      data: rows.map(function (row) {\n        return row[item];\n      }),\n      axisLabel: {\n        formatter: function formatter(v) {\n          return String(v);\n        }\n      },\n      show: axisVisible\n    };\n  });\n}\n\nfunction getLineSeries(args) {\n  var rows = args.rows,\n      axisSite = args.axisSite,\n      metrics = args.metrics,\n      area = args.area,\n      stack = args.stack,\n      nullAddZero = args.nullAddZero,\n      labelMap = args.labelMap,\n      label = args.label,\n      itemStyle = args.itemStyle,\n      lineStyle = args.lineStyle,\n      areaStyle = args.areaStyle;\n\n  var series = [];\n  var dataTemp = {};\n  var stackMap = stack && getStackMap(stack);\n  metrics.forEach(function (item) {\n    dataTemp[item] = [];\n  });\n  rows.forEach(function (row) {\n    metrics.forEach(function (item) {\n      var value = null;\n      if (row[item] != null) {\n        value = row[item];\n      } else if (nullAddZero) {\n        value = 0;\n      }\n      dataTemp[item].push(value);\n    });\n  });\n  metrics.forEach(function (item) {\n    var seriesItem = {\n      name: labelMap && labelMap[item] || item,\n      type: 'line',\n      data: dataTemp[item]\n    };\n\n    if (area) seriesItem.areaStyle = { normal: {} };\n    seriesItem.yAxisIndex = ~axisSite.right.indexOf(item) ? 1 : 0;\n\n    if (stack && stackMap[item]) seriesItem.stack = stackMap[item];\n\n    if (label) seriesItem.label = label;\n    if (itemStyle) seriesItem.itemStyle = itemStyle;\n    if (lineStyle) seriesItem.lineStyle = lineStyle;\n    if (areaStyle) seriesItem.areaStyle = areaStyle;\n\n    series.push(seriesItem);\n  });\n  return series.length ? series : false;\n}\n\nfunction getLineYAxis(args) {\n  var yAxisName = args.yAxisName,\n      yAxisType = args.yAxisType,\n      axisVisible = args.axisVisible,\n      scale = args.scale,\n      min = args.min,\n      max = args.max,\n      digit = args.digit;\n\n  var yAxisBase = {\n    type: 'value',\n    axisTick: {\n      show: false\n    },\n    show: axisVisible\n  };\n  var yAxis = [];\n\n  var _loop = function _loop(i) {\n    if (yAxisType[i]) {\n      yAxis[i] = Object.assign({}, yAxisBase, {\n        axisLabel: {\n          formatter: function formatter(val) {\n            return getFormated(val, yAxisType[i], digit);\n          }\n        }\n      });\n    } else {\n      yAxis[i] = Object.assign({}, yAxisBase);\n    }\n    yAxis[i].name = yAxisName[i] || '';\n    yAxis[i].scale = scale[i] || false;\n    yAxis[i].min = min[i] || null;\n    yAxis[i].max = max[i] || null;\n  };\n\n  for (var i = 0; i < 2; i++) {\n    _loop(i);\n  }\n  return yAxis;\n}\n\nfunction getLineTooltip(args) {\n  var axisSite = args.axisSite,\n      yAxisType = args.yAxisType,\n      digit = args.digit,\n      labelMap = args.labelMap;\n\n  var rightList = labelMap ? axisSite.right.map(function (item) {\n    return labelMap[item] === undefined ? item : labelMap[item];\n  }) : axisSite.right;\n  return {\n    trigger: 'axis',\n    formatter: function formatter(items) {\n      var tpl = [];\n      tpl.push(items[0].name + '<br>');\n      items.forEach(function (item) {\n        var showData = null;\n        var type = ~rightList.indexOf(item.seriesName) ? yAxisType[1] : yAxisType[0];\n        showData = getFormated(item.data, type, digit);\n        tpl.push(itemPoint(item.color));\n        tpl.push(item.seriesName + ': ' + showData);\n        tpl.push('<br>');\n      });\n      return tpl.join('');\n    }\n  };\n}\n\nfunction getLegend(args) {\n  var metrics = args.metrics,\n      legendName = args.legendName,\n      labelMap = args.labelMap;\n\n  if (!legendName && !labelMap) return { data: metrics };\n  var data = labelMap ? metrics.map(function (item) {\n    return labelMap[item] == null ? item : labelMap[item];\n  }) : metrics;\n  return {\n    data: data,\n    formatter: function formatter(name) {\n      return legendName && legendName[name] || name;\n    }\n  };\n}\n\nvar line = function line(columns, rows, settings, extra) {\n  var _settings$axisSite = settings.axisSite,\n      axisSite = _settings$axisSite === undefined ? { right: [] } : _settings$axisSite,\n      _settings$yAxisType = settings.yAxisType,\n      yAxisType = _settings$yAxisType === undefined ? ['normal', 'normal'] : _settings$yAxisType,\n      _settings$yAxisName = settings.yAxisName,\n      yAxisName = _settings$yAxisName === undefined ? [] : _settings$yAxisName,\n      _settings$dimension = settings.dimension,\n      dimension = _settings$dimension === undefined ? [columns[0]] : _settings$dimension,\n      _settings$xAxisName = settings.xAxisName,\n      xAxisName = _settings$xAxisName === undefined ? [] : _settings$xAxisName,\n      _settings$axisVisible = settings.axisVisible,\n      axisVisible = _settings$axisVisible === undefined ? true : _settings$axisVisible,\n      area = settings.area,\n      stack = settings.stack,\n      _settings$scale = settings.scale,\n      scale = _settings$scale === undefined ? [false, false] : _settings$scale,\n      _settings$min = settings.min,\n      min = _settings$min === undefined ? [null, null] : _settings$min,\n      _settings$max = settings.max,\n      max = _settings$max === undefined ? [null, null] : _settings$max,\n      _settings$nullAddZero = settings.nullAddZero,\n      nullAddZero = _settings$nullAddZero === undefined ? false : _settings$nullAddZero,\n      _settings$digit = settings.digit,\n      digit = _settings$digit === undefined ? 2 : _settings$digit,\n      legendName = settings.legendName,\n      labelMap = settings.labelMap,\n      label = settings.label,\n      itemStyle = settings.itemStyle,\n      lineStyle = settings.lineStyle,\n      areaStyle = settings.areaStyle;\n  var tooltipVisible = extra.tooltipVisible,\n      legendVisible = extra.legendVisible;\n\n  var metrics = columns.slice();\n\n  if (settings.metrics) {\n    metrics = settings.metrics;\n  } else {\n    metrics.splice(columns.indexOf(dimension[0]), 1);\n  }\n\n  var legend = legendVisible && getLegend({ metrics: metrics, legendName: legendName, labelMap: labelMap });\n  var tooltip = tooltipVisible && getLineTooltip({\n    axisSite: axisSite,\n    yAxisType: yAxisType,\n    digit: digit,\n    labelMap: labelMap\n  });\n  var xAxis = getLineXAxis({ dimension: dimension, rows: rows, xAxisName: xAxisName, axisVisible: axisVisible });\n  var yAxisParams = {\n    yAxisName: yAxisName,\n    yAxisType: yAxisType,\n    axisVisible: axisVisible,\n    scale: scale,\n    min: min,\n    max: max,\n    digit: digit\n  };\n  var yAxis = getLineYAxis(yAxisParams);\n  var seriesParams = {\n    rows: rows,\n    axisSite: axisSite,\n    metrics: metrics,\n    area: area,\n    stack: stack,\n    nullAddZero: nullAddZero,\n    labelMap: labelMap,\n    label: label,\n    itemStyle: itemStyle,\n    lineStyle: lineStyle,\n    areaStyle: areaStyle\n  };\n  var series = getLineSeries(seriesParams);\n  if (!xAxis || !series) return false;\n\n  var options = { legend: legend, xAxis: xAxis, series: series, yAxis: yAxis, tooltip: tooltip };\n  return options;\n};\n\nvar chartMixin = {\n  props: {\n    data: { type: [Object, Array], default: function _default() {\n        return {};\n      }\n    },\n    settings: { type: Object, default: function _default() {\n        return {};\n      }\n    },\n    width: { type: String, default: 'auto' },\n    height: { type: String, default: '400px' },\n    beforeConfig: { type: Function },\n    afterConfig: { type: Function },\n    afterSetOption: { type: Function },\n    afterSetOptionOnce: { type: Function },\n    events: { type: Object },\n    grid: { type: Object },\n    colors: { type: Array },\n    tooltipVisible: { type: Boolean, default: true },\n    legendVisible: { type: Boolean, default: true },\n    legendPosition: { type: String },\n    markLine: { type: Object },\n    markArea: { type: Object },\n    markPoint: { type: Object },\n    visualMap: { type: [Object, Array] },\n    dataZoom: { type: [Object, Array] },\n    toolbox: { type: Object },\n    initOptions: { type: Object, default: function _default() {\n        return {};\n      }\n    },\n    title: Object,\n    legend: Object,\n    xAxis: Object,\n    yAxis: Object,\n    radar: Object,\n    tooltip: Object,\n    axisPointer: Object,\n    brush: Object,\n    geo: Object,\n    timeline: Object,\n    graphic: Object,\n    series: [Object, Array],\n    backgroundColor: [Object, String],\n    textStyle: Object,\n    animation: Object,\n    theme: Object,\n    themeName: String\n  },\n\n  watch: {\n    data: {\n      deep: true,\n      handler: function handler(v) {\n        if (v) {\n          this.dataHandler(v);\n        }\n      }\n    },\n\n    settings: {\n      deep: true,\n      handler: function handler(v) {\n        if (v.type && this.chartLib) this.chartHandler = this.chartLib[v.type];\n        this.dataHandler(this.data);\n      }\n    }\n  },\n\n  computed: {\n    canvasStyle: function canvasStyle() {\n      return {\n        width: this.width,\n        height: this.height,\n        position: 'relative'\n      };\n    },\n    chartColor: function chartColor() {\n      return this.colors || this.theme && this.theme.color || color;\n    }\n  },\n\n  methods: {\n    dataHandler: function dataHandler(data) {\n      if (!this.chartHandler) return;\n      var _data = data,\n          columns = _data.columns,\n          rows = _data.rows;\n\n      var extra = {\n        tooltipVisible: this.tooltipVisible,\n        legendVisible: this.legendVisible,\n        echarts: this.echarts,\n        color: this.chartColor\n      };\n      if (this.beforeConfig) data = this.beforeConfig(data);\n\n      var options = this.chartHandler(columns, rows, this.settings, extra);\n      if (options) {\n        if (typeof options.then === 'function') {\n          options.then(this.optionsHandler);\n        } else {\n          this.optionsHandler(options);\n        }\n      }\n    },\n    optionsHandler: function optionsHandler(options) {\n      var _this = this;\n\n      if (this.legendPosition && options.legend) {\n        options.legend[this.legendPosition] = 10;\n        if (~['left', 'right'].indexOf(this.legendPosition)) {\n          options.legend.top = 'middle';\n          options.legend.orient = 'vertical';\n        }\n      }\n      if (!this.themeName) options.color = this.chartColor;\n      var echartsSettings = ['grid', 'dataZoom', 'visualMap', 'toolbox', 'title', 'legend', 'xAxis', 'yAxis', 'radar', 'tooltip', 'axisPointer', 'brush', 'geo', 'timeline', 'graphic', 'series', 'backgroundColor', 'textStyle'];\n      echartsSettings.forEach(function (setting) {\n        if (_this[setting]) options[setting] = _this[setting];\n      });\n      if (this.animation) {\n        Object.keys(this.animation).forEach(function (key) {\n          options[key] = _this.animation[key];\n        });\n      }\n      if (this.markArea || this.markLine || this.markPoint) {\n        var marks = {\n          markArea: this.markArea,\n          markLine: this.markLine,\n          markPoint: this.markPoint\n        };\n        var series = options.series;\n        if (getType(series) === '[object Array]') {\n          series.forEach(function (item) {\n            _this.addMark(item, marks);\n          });\n        } else if (getType(series) === '[object Object]') {\n          this.addMark(series, marks);\n        }\n      }\n      if (this.afterConfig) options = this.afterConfig(options);\n      this.echarts.setOption(options, true);\n      if (this.afterSetOption) this.afterSetOption(this.echarts);\n      if (this.afterSetOptionOnce && !this._once['afterSetOptionOnce']) {\n        this._once['afterSetOptionOnce'] = this.afterSetOptionOnce(this.echarts);\n      }\n    },\n    addMark: function addMark(seriesItem, marks) {\n      Object.keys(marks).forEach(function (key) {\n        if (marks[key]) {\n          seriesItem[key] = marks[key];\n        }\n      });\n    },\n    init: function init() {\n      if (this.echarts) return;\n      var themeName = this.themeName || (this.theme ? 'outer-theme' : 've-chart');\n      this.echarts = this.echartsLib.init(this.$refs.canvas, themeName, this.initOptions);\n      if (this.data) this.dataHandler(this.data);\n      if (this.events) this.bindEvents();\n    },\n    bindEvents: function bindEvents() {\n      var _this2 = this;\n\n      Object.keys(this.events).forEach(function (event) {\n        _this2.echarts.on(event, _this2.events[event]);\n      });\n    },\n    addWatchToProps: function addWatchToProps() {\n      var _this3 = this;\n\n      var watchedVariable = this._watchers.map(function (watcher) {\n        return watcher.expression;\n      });\n      Object.keys(this.$props).forEach(function (prop) {\n        if (!~watchedVariable.indexOf(prop)) {\n          var opts = {};\n          if (getType(prop) === '[object Object]') {\n            opts.deep = true;\n          }\n          _this3.$watch(prop, function () {\n            _this3.dataHandler(_this3.data);\n          }, opts);\n        }\n      });\n    },\n    registerTheme: function registerTheme() {\n      echarts.registerTheme('outer-theme', this.theme);\n    }\n  },\n\n  created: function created() {\n    this.echarts = null;\n    this._once = {};\n    this.addWatchToProps();\n    if (this.theme) this.registerTheme();\n  },\n  mounted: function mounted() {\n    this.init();\n    window.addEventListener('resize', this.echarts.resize);\n  },\n  beforeDestory: function beforeDestory() {\n    window.removeEventListener('resize', this.echarts.resize);\n    this.echarts.dispose();\n  }\n};\n\nvar index = {\n  render: function render() {\n    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('div', { ref: \"canvas\", staticClass: \"ve-line\", style: _vm.canvasStyle });\n  },\n  staticRenderFns: [],\n  name: 'VeLine',\n  mixins: [chartMixin],\n  created: function created() {\n    this.chartHandler = line;\n    this.echartsLib = echarts;\n  }\n};\n\nmodule.exports = index;\n\n\n/***/ }),\n\n/***/ 1051:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {}, [_c('div', {\n    staticClass: \"chart\"\n  }, [_c('ve-line', {\n    attrs: {\n      \"data\": _vm.chartData,\n      \"settings\": _vm.chartSettings\n    }\n  })], 1)])\n},staticRenderFns: []}\n\n/***/ }),\n\n/***/ 588:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(959)\n\nvar Component = __webpack_require__(6)(\n  /* script */\n  __webpack_require__(877),\n  /* template */\n  __webpack_require__(1051),\n  /* scopeId */\n  \"data-v-578a9214\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 606:\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/core/util\n */\n\n\n    // 用于处理merge时无法遍历Date等对象的问题\n    var BUILTIN_OBJECT = {\n        '[object Function]': 1,\n        '[object RegExp]': 1,\n        '[object Date]': 1,\n        '[object Error]': 1,\n        '[object CanvasGradient]': 1,\n        '[object CanvasPattern]': 1,\n        // For node-canvas\n        '[object Image]': 1,\n        '[object Canvas]': 1\n    };\n\n    var TYPED_ARRAY = {\n        '[object Int8Array]': 1,\n        '[object Uint8Array]': 1,\n        '[object Uint8ClampedArray]': 1,\n        '[object Int16Array]': 1,\n        '[object Uint16Array]': 1,\n        '[object Int32Array]': 1,\n        '[object Uint32Array]': 1,\n        '[object Float32Array]': 1,\n        '[object Float64Array]': 1\n    };\n\n    var objToString = Object.prototype.toString;\n\n    var arrayProto = Array.prototype;\n    var nativeForEach = arrayProto.forEach;\n    var nativeFilter = arrayProto.filter;\n    var nativeSlice = arrayProto.slice;\n    var nativeMap = arrayProto.map;\n    var nativeReduce = arrayProto.reduce;\n\n    /**\n     * Those data types can be cloned:\n     *     Plain object, Array, TypedArray, number, string, null, undefined.\n     * Those data types will be assgined using the orginal data:\n     *     BUILTIN_OBJECT\n     * Instance of user defined class will be cloned to a plain object, without\n     * properties in prototype.\n     * Other data types is not supported (not sure what will happen).\n     *\n     * Caution: do not support clone Date, for performance consideration.\n     * (There might be a large number of date in `series.data`).\n     * So date should not be modified in and out of echarts.\n     *\n     * @param {*} source\n     * @return {*} new\n     */\n    function clone(source) {\n        if (source == null || typeof source != 'object') {\n            return source;\n        }\n\n        var result = source;\n        var typeStr = objToString.call(source);\n\n        if (typeStr === '[object Array]') {\n            result = [];\n            for (var i = 0, len = source.length; i < len; i++) {\n                result[i] = clone(source[i]);\n            }\n        }\n        else if (TYPED_ARRAY[typeStr]) {\n            var Ctor = source.constructor;\n            if (source.constructor.from) {\n                result = Ctor.from(source);\n            }\n            else {\n                result = new Ctor(source.length);\n                for (var i = 0, len = source.length; i < len; i++) {\n                    result[i] = clone(source[i]);\n                }\n            }\n        }\n        else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n            result = {};\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    result[key] = clone(source[key]);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overwrite=false]\n     */\n    function merge(target, source, overwrite) {\n        // We should escapse that source is string\n        // and enter for ... in ...\n        if (!isObject(source) || !isObject(target)) {\n            return overwrite ? clone(source) : target;\n        }\n\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                var targetProp = target[key];\n                var sourceProp = source[key];\n\n                if (isObject(sourceProp)\n                    && isObject(targetProp)\n                    && !isArray(sourceProp)\n                    && !isArray(targetProp)\n                    && !isDom(sourceProp)\n                    && !isDom(targetProp)\n                    && !isBuiltInObject(sourceProp)\n                    && !isBuiltInObject(targetProp)\n                    && !isPrimitive(sourceProp)\n                    && !isPrimitive(targetProp)\n                ) {\n                    // 如果需要递归覆盖，就递归调用merge\n                    merge(targetProp, sourceProp, overwrite);\n                }\n                else if (overwrite || !(key in target)) {\n                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n                    // NOTE，在 target[key] 不存在的时候也是直接覆盖\n                    target[key] = clone(source[key], true);\n                }\n            }\n        }\n\n        return target;\n    }\n\n    /**\n     * @param {Array} targetAndSources The first item is target, and the rests are source.\n     * @param {boolean} [overwrite=false]\n     * @return {*} target\n     */\n    function mergeAll(targetAndSources, overwrite) {\n        var result = targetAndSources[0];\n        for (var i = 1, len = targetAndSources.length; i < len; i++) {\n            result = merge(result, targetAndSources[i], overwrite);\n        }\n        return result;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @memberOf module:zrender/core/util\n     */\n    function extend(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overlay=false]\n     * @memberOf module:zrender/core/util\n     */\n    function defaults(target, source, overlay) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)\n                && (overlay ? source[key] != null : target[key] == null)\n            ) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    function createCanvas() {\n        return document.createElement('canvas');\n    }\n    // FIXME\n    var _ctx;\n    function getContext() {\n        if (!_ctx) {\n            // Use util.createCanvas instead of createCanvas\n            // because createCanvas may be overwritten in different environment\n            _ctx = util.createCanvas().getContext('2d');\n        }\n        return _ctx;\n    }\n\n    /**\n     * 查询数组中元素的index\n     * @memberOf module:zrender/core/util\n     */\n    function indexOf(array, value) {\n        if (array) {\n            if (array.indexOf) {\n                return array.indexOf(value);\n            }\n            for (var i = 0, len = array.length; i < len; i++) {\n                if (array[i] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * 构造类继承关系\n     *\n     * @memberOf module:zrender/core/util\n     * @param {Function} clazz 源类\n     * @param {Function} baseClazz 基类\n     */\n    function inherits(clazz, baseClazz) {\n        var clazzPrototype = clazz.prototype;\n        function F() {}\n        F.prototype = baseClazz.prototype;\n        clazz.prototype = new F();\n\n        for (var prop in clazzPrototype) {\n            clazz.prototype[prop] = clazzPrototype[prop];\n        }\n        clazz.prototype.constructor = clazz;\n        clazz.superClass = baseClazz;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Object|Function} target\n     * @param {Object|Function} sorce\n     * @param {boolean} overlay\n     */\n    function mixin(target, source, overlay) {\n        target = 'prototype' in target ? target.prototype : target;\n        source = 'prototype' in source ? source.prototype : source;\n\n        defaults(target, source, overlay);\n    }\n\n    /**\n     * Consider typed array.\n     * @param {Array|TypedArray} data\n     */\n    function isArrayLike(data) {\n        if (! data) {\n            return;\n        }\n        if (typeof data == 'string') {\n            return false;\n        }\n        return typeof data.length == 'number';\n    }\n\n    /**\n     * 数组或对象遍历\n     * @memberOf module:zrender/core/util\n     * @param {Object|Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     */\n    function each(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.forEach && obj.forEach === nativeForEach) {\n            obj.forEach(cb, context);\n        }\n        else if (obj.length === +obj.length) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                cb.call(context, obj[i], i, obj);\n            }\n        }\n        else {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    cb.call(context, obj[key], key, obj);\n                }\n            }\n        }\n    }\n\n    /**\n     * 数组映射\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function map(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.map && obj.map === nativeMap) {\n            return obj.map(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                result.push(cb.call(context, obj[i], i, obj));\n            }\n            return result;\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {Object} [memo]\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function reduce(obj, cb, memo, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.reduce && obj.reduce === nativeReduce) {\n            return obj.reduce(cb, memo, context);\n        }\n        else {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                memo = cb.call(context, memo, obj[i], i, obj);\n            }\n            return memo;\n        }\n    }\n\n    /**\n     * 数组过滤\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function filter(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.filter && obj.filter === nativeFilter) {\n            return obj.filter(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                if (cb.call(context, obj[i], i, obj)) {\n                    result.push(obj[i]);\n                }\n            }\n            return result;\n        }\n    }\n\n    /**\n     * 数组项查找\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function find(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        for (var i = 0, len = obj.length; i < len; i++) {\n            if (cb.call(context, obj[i], i, obj)) {\n                return obj[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @param {*} context\n     * @return {Function}\n     */\n    function bind(func, context) {\n        var args = nativeSlice.call(arguments, 2);\n        return function () {\n            return func.apply(context, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @return {Function}\n     */\n    function curry(func) {\n        var args = nativeSlice.call(arguments, 1);\n        return function () {\n            return func.apply(this, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isArray(value) {\n        return objToString.call(value) === '[object Array]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isString(value) {\n        return objToString.call(value) === '[object String]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isObject(value) {\n        // Avoid a V8 JIT bug in Chrome 19-20.\n        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n        var type = typeof value;\n        return type === 'function' || (!!value && type == 'object');\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isBuiltInObject(value) {\n        return !!BUILTIN_OBJECT[objToString.call(value)];\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isDom(value) {\n        return typeof value === 'object'\n            && typeof value.nodeType === 'number'\n            && typeof value.ownerDocument === 'object';\n    }\n\n    /**\n     * Whether is exactly NaN. Notice isNaN('a') returns true.\n     * @param {*} value\n     * @return {boolean}\n     */\n    function eqNaN(value) {\n        return value !== value;\n    }\n\n    /**\n     * If value1 is not null, then return value1, otherwise judget rest of values.\n     * Low performance.\n     * @memberOf module:zrender/core/util\n     * @return {*} Final value\n     */\n    function retrieve(values) {\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            if (arguments[i] != null) {\n                return arguments[i];\n            }\n        }\n    }\n\n    function retrieve2(value0, value1) {\n        return value0 != null\n            ? value0\n            : value1;\n    }\n\n    function retrieve3(value0, value1, value2) {\n        return value0 != null\n            ? value0\n            : value1 != null\n            ? value1\n            : value2;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} arr\n     * @param {number} startIndex\n     * @param {number} endIndex\n     * @return {Array}\n     */\n    function slice() {\n        return Function.call.apply(nativeSlice, arguments);\n    }\n\n    /**\n     * Normalize css liked array configuration\n     * e.g.\n     *  3 => [3, 3, 3, 3]\n     *  [4, 2] => [4, 2, 4, 2]\n     *  [4, 3, 2] => [4, 3, 2, 3]\n     * @param {number|Array.<number>} val\n     * @return {Array.<number>}\n     */\n    function normalizeCssArray(val) {\n        if (typeof (val) === 'number') {\n            return [val, val, val, val];\n        }\n        var len = val.length;\n        if (len === 2) {\n            // vertical | horizontal\n            return [val[0], val[1], val[0], val[1]];\n        }\n        else if (len === 3) {\n            // top | horizontal | bottom\n            return [val[0], val[1], val[2], val[1]];\n        }\n        return val;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {boolean} condition\n     * @param {string} message\n     */\n    function assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n\n    var primitiveKey = '__ec_primitive__';\n    /**\n     * Set an object as primitive to be ignored traversing children in clone or merge\n     */\n    function setAsPrimitive(obj) {\n        obj[primitiveKey] = true;\n    }\n\n    function isPrimitive(obj) {\n        return obj[primitiveKey];\n    }\n\n    /**\n     * @constructor\n     * @param {Object} obj Only apply `ownProperty`.\n     */\n    function HashMap(obj) {\n        obj && each(obj, function (value, key) {\n            this.set(key, value);\n        }, this);\n    }\n\n    // Add prefix to avoid conflict with Object.prototype.\n    var HASH_MAP_PREFIX = '_ec_';\n    var HASH_MAP_PREFIX_LENGTH = 4;\n\n    HashMap.prototype = {\n        constructor: HashMap,\n        // Do not provide `has` method to avoid defining what is `has`.\n        // (We usually treat `null` and `undefined` as the same, different\n        // from ES6 Map).\n        get: function (key) {\n            return this[HASH_MAP_PREFIX + key];\n        },\n        set: function (key, value) {\n            this[HASH_MAP_PREFIX + key] = value;\n            // Comparing with invocation chaining, `return value` is more commonly\n            // used in this case: `var someVal = map.set('a', genVal());`\n            return value;\n        },\n        // Although util.each can be performed on this hashMap directly, user\n        // should not use the exposed keys, who are prefixed.\n        each: function (cb, context) {\n            context !== void 0 && (cb = bind(cb, context));\n            for (var prefixedKey in this) {\n                this.hasOwnProperty(prefixedKey)\n                    && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n            }\n        },\n        // Do not use this method if performance sensitive.\n        removeKey: function (key) {\n            delete this[key];\n        }\n    };\n\n    function createHashMap(obj) {\n        return new HashMap(obj);\n    }\n\n    var util = {\n        inherits: inherits,\n        mixin: mixin,\n        clone: clone,\n        merge: merge,\n        mergeAll: mergeAll,\n        extend: extend,\n        defaults: defaults,\n        getContext: getContext,\n        createCanvas: createCanvas,\n        indexOf: indexOf,\n        slice: slice,\n        find: find,\n        isArrayLike: isArrayLike,\n        each: each,\n        map: map,\n        reduce: reduce,\n        filter: filter,\n        bind: bind,\n        curry: curry,\n        isArray: isArray,\n        isString: isString,\n        isObject: isObject,\n        isFunction: isFunction,\n        isBuiltInObject: isBuiltInObject,\n        isDom: isDom,\n        eqNaN: eqNaN,\n        retrieve: retrieve,\n        retrieve2: retrieve2,\n        retrieve3: retrieve3,\n        assert: assert,\n        setAsPrimitive: setAsPrimitive,\n        createHashMap: createHashMap,\n        normalizeCssArray: normalizeCssArray,\n        noop: function () {}\n    };\n    module.exports = util;\n\n\n\n/***/ }),\n\n/***/ 607:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {// Enable DEV mode when using source code without build. which has no __DEV__ variable\n// In build process 'typeof __DEV__' will be replace with 'boolean'\n// So this code will be removed or disabled anyway after built.\nif (typeof __DEV__ === 'undefined') {\n    // In browser\n    if (typeof window !== 'undefined') {\n        window.__DEV__ = true;\n    }\n    // In node\n    else if (typeof global !== 'undefined') {\n        global.__DEV__ = true;\n    }\n}\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\n\n/**\n * @module echarts\n */\n\n\n    var env = __webpack_require__(615);\n\n    var GlobalModel = __webpack_require__(743);\n    var ExtensionAPI = __webpack_require__(708);\n    var CoordinateSystemManager = __webpack_require__(636);\n    var OptionManager = __webpack_require__(744);\n\n    var ComponentModel = __webpack_require__(618);\n    var SeriesModel = __webpack_require__(640);\n\n    var ComponentView = __webpack_require__(757);\n    var ChartView = __webpack_require__(641);\n    var graphic = __webpack_require__(608);\n    var modelUtil = __webpack_require__(609);\n    var throttle = __webpack_require__(666);\n\n    var zrender = __webpack_require__(802);\n    var zrUtil = __webpack_require__(606);\n    var colorTool = __webpack_require__(627);\n    var Eventful = __webpack_require__(626);\n    var timsort = __webpack_require__(643);\n\n    var each = zrUtil.each;\n    var parseClassType = ComponentModel.parseClassType;\n\n    var PRIORITY_PROCESSOR_FILTER = 1000;\n    var PRIORITY_PROCESSOR_STATISTIC = 5000;\n\n\n    var PRIORITY_VISUAL_LAYOUT = 1000;\n    var PRIORITY_VISUAL_GLOBAL = 2000;\n    var PRIORITY_VISUAL_CHART = 3000;\n    var PRIORITY_VISUAL_COMPONENT = 4000;\n    // FIXME\n    // necessary?\n    var PRIORITY_VISUAL_BRUSH = 5000;\n\n    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n    // where they must not be invoked nestedly, except the only case: invoke\n    // dispatchAction with updateMethod \"none\" in main process.\n    // This flag is used to carry out this rule.\n    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n    var IN_MAIN_PROCESS = '__flagInMainProcess';\n    var HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\n    var OPTION_UPDATED = '__optionUpdated';\n    var ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\n    function createRegisterEventWithLowercaseName(method) {\n        return function (eventName, handler, context) {\n            // Event name is all lowercase\n            eventName = eventName && eventName.toLowerCase();\n            Eventful.prototype[method].call(this, eventName, handler, context);\n        };\n    }\n\n    /**\n     * @module echarts~MessageCenter\n     */\n    function MessageCenter() {\n        Eventful.call(this);\n    }\n    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\n    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\n    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\n    zrUtil.mixin(MessageCenter, Eventful);\n\n    /**\n     * @module echarts~ECharts\n     */\n    function ECharts(dom, theme, opts) {\n        opts = opts || {};\n\n        // Get theme by name\n        if (typeof theme === 'string') {\n            theme = themeStorage[theme];\n        }\n\n        /**\n         * @type {string}\n         */\n        this.id;\n        /**\n         * Group id\n         * @type {string}\n         */\n        this.group;\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        this._dom = dom;\n        /**\n         * @type {module:zrender/ZRender}\n         * @private\n         */\n        var zr = this._zr = zrender.init(dom, {\n            renderer: opts.renderer || 'canvas',\n            devicePixelRatio: opts.devicePixelRatio,\n            width: opts.width,\n            height: opts.height\n        });\n\n        /**\n         * Expect 60 pfs.\n         * @type {Function}\n         * @private\n         */\n        this._throttledZrFlush = throttle.throttle(zrUtil.bind(zr.flush, zr), 17);\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._theme = zrUtil.clone(theme);\n\n        /**\n         * @type {Array.<module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * @type {module:echarts/CoordinateSystem}\n         * @private\n         */\n        this._coordSysMgr = new CoordinateSystemManager();\n\n        /**\n         * @type {module:echarts/ExtensionAPI}\n         * @private\n         */\n        this._api = createExtensionAPI(this);\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:echarts~MessageCenter}\n         * @private\n         */\n        this._messageCenter = new MessageCenter();\n\n        // Init mouse events\n        this._initEvents();\n\n        // In case some people write `window.onresize = chart.resize`\n        this.resize = zrUtil.bind(this.resize, this);\n\n        // Can't dispatch action during rendering procedure\n        this._pendingActions = [];\n        // Sort on demand\n        function prioritySortFunc(a, b) {\n            return a.prio - b.prio;\n        }\n        timsort(visualFuncs, prioritySortFunc);\n        timsort(dataProcessorFuncs, prioritySortFunc);\n\n        zr.animation.on('frame', this._onframe, this);\n\n        // ECharts instance can be used as value.\n        zrUtil.setAsPrimitive(this);\n    }\n\n    var echartsProto = ECharts.prototype;\n\n    echartsProto._onframe = function () {\n        // Lazy update\n        if (this[OPTION_UPDATED]) {\n            var silent = this[OPTION_UPDATED].silent;\n\n            this[IN_MAIN_PROCESS] = true;\n\n            updateMethods.prepareAndUpdate.call(this);\n\n            this[IN_MAIN_PROCESS] = false;\n\n            this[OPTION_UPDATED] = false;\n\n            flushPendingActions.call(this, silent);\n\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n    /**\n     * @return {HTMLElement}\n     */\n    echartsProto.getDom = function () {\n        return this._dom;\n    };\n\n    /**\n     * @return {module:zrender~ZRender}\n     */\n    echartsProto.getZr = function () {\n        return this._zr;\n    };\n\n    /**\n     * Usage:\n     * chart.setOption(option, notMerge, lazyUpdate);\n     * chart.setOption(option, {\n     *     notMerge: ...,\n     *     lazyUpdate: ...,\n     *     silent: ...\n     * });\n     *\n     * @param {Object} option\n     * @param {Object|boolean} [opts] opts or notMerge.\n     * @param {boolean} [opts.notMerge=false]\n     * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n     */\n    echartsProto.setOption = function (option, notMerge, lazyUpdate) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\n        }\n\n        var silent;\n        if (zrUtil.isObject(notMerge)) {\n            lazyUpdate = notMerge.lazyUpdate;\n            silent = notMerge.silent;\n            notMerge = notMerge.notMerge;\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        if (!this._model || notMerge) {\n            var optionManager = new OptionManager(this._api);\n            var theme = this._theme;\n            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n            ecModel.init(null, null, theme, optionManager);\n        }\n\n        this._model.setOption(option, optionPreprocessorFuncs);\n\n        if (lazyUpdate) {\n            this[OPTION_UPDATED] = {silent: silent};\n            this[IN_MAIN_PROCESS] = false;\n        }\n        else {\n            updateMethods.prepareAndUpdate.call(this);\n            // Ensure zr refresh sychronously, and then pixel in canvas can be\n            // fetched after `setOption`.\n            this._zr.flush();\n\n            this[OPTION_UPDATED] = false;\n            this[IN_MAIN_PROCESS] = false;\n\n            flushPendingActions.call(this, silent);\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n\n    /**\n     * @DEPRECATED\n     */\n    echartsProto.setTheme = function () {\n        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n    };\n\n    /**\n     * @return {module:echarts/model/Global}\n     */\n    echartsProto.getModel = function () {\n        return this._model;\n    };\n\n    /**\n     * @return {Object}\n     */\n    echartsProto.getOption = function () {\n        return this._model && this._model.getOption();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getWidth = function () {\n        return this._zr.getWidth();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getHeight = function () {\n        return this._zr.getHeight();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getDevicePixelRatio = function () {\n        return this._zr.painter.dpr || window.devicePixelRatio || 1;\n    };\n\n    /**\n     * Get canvas which has all thing rendered\n     * @param {Object} opts\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getRenderedCanvas = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        opts = opts || {};\n        opts.pixelRatio = opts.pixelRatio || 1;\n        opts.backgroundColor = opts.backgroundColor\n            || this._model.get('backgroundColor');\n        var zr = this._zr;\n        var list = zr.storage.getDisplayList();\n        // Stop animations\n        zrUtil.each(list, function (el) {\n            el.stopAnimation(true);\n        });\n        return zr.painter.getRenderedCanvas(opts);\n    };\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     * @param {string} [opts.excludeComponents]\n     */\n    echartsProto.getDataURL = function (opts) {\n        opts = opts || {};\n        var excludeComponents = opts.excludeComponents;\n        var ecModel = this._model;\n        var excludesComponentViews = [];\n        var self = this;\n\n        each(excludeComponents, function (componentType) {\n            ecModel.eachComponent({\n                mainType: componentType\n            }, function (component) {\n                var view = self._componentsMap[component.__viewId];\n                if (!view.group.ignore) {\n                    excludesComponentViews.push(view);\n                    view.group.ignore = true;\n                }\n            });\n        });\n\n        var url = this.getRenderedCanvas(opts).toDataURL(\n            'image/' + (opts && opts.type || 'png')\n        );\n\n        each(excludesComponentViews, function (view) {\n            view.group.ignore = false;\n        });\n        return url;\n    };\n\n\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getConnectedDataURL = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        var groupId = this.group;\n        var mathMin = Math.min;\n        var mathMax = Math.max;\n        var MAX_NUMBER = Infinity;\n        if (connectedGroups[groupId]) {\n            var left = MAX_NUMBER;\n            var top = MAX_NUMBER;\n            var right = -MAX_NUMBER;\n            var bottom = -MAX_NUMBER;\n            var canvasList = [];\n            var dpr = (opts && opts.pixelRatio) || 1;\n\n            zrUtil.each(instances, function (chart, id) {\n                if (chart.group === groupId) {\n                    var canvas = chart.getRenderedCanvas(\n                        zrUtil.clone(opts)\n                    );\n                    var boundingRect = chart.getDom().getBoundingClientRect();\n                    left = mathMin(boundingRect.left, left);\n                    top = mathMin(boundingRect.top, top);\n                    right = mathMax(boundingRect.right, right);\n                    bottom = mathMax(boundingRect.bottom, bottom);\n                    canvasList.push({\n                        dom: canvas,\n                        left: boundingRect.left,\n                        top: boundingRect.top\n                    });\n                }\n            });\n\n            left *= dpr;\n            top *= dpr;\n            right *= dpr;\n            bottom *= dpr;\n            var width = right - left;\n            var height = bottom - top;\n            var targetCanvas = zrUtil.createCanvas();\n            targetCanvas.width = width;\n            targetCanvas.height = height;\n            var zr = zrender.init(targetCanvas);\n\n            each(canvasList, function (item) {\n                var img = new graphic.Image({\n                    style: {\n                        x: item.left * dpr - left,\n                        y: item.top * dpr - top,\n                        image: item.dom\n                    }\n                });\n                zr.add(img);\n            });\n            zr.refreshImmediately();\n\n            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n        }\n        else {\n            return this.getDataURL(opts);\n        }\n    };\n\n    /**\n     * Convert from logical coordinate system to pixel coordinate system.\n     * See CoordinateSystem#convertToPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId, geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n\n    /**\n     * Convert from pixel coordinate system to logical coordinate system.\n     * See CoordinateSystem#convertFromPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\n    function doConvertPixel(methodName, finder, value) {\n        var ecModel = this._model;\n        var coordSysList = this._coordSysMgr.getCoordinateSystems();\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        for (var i = 0; i < coordSysList.length; i++) {\n            var coordSys = coordSysList[i];\n            if (coordSys[methodName]\n                && (result = coordSys[methodName](ecModel, finder, value)) != null\n            ) {\n                return result;\n            }\n        }\n\n        if (__DEV__) {\n            console.warn(\n                'No coordinate system that supports ' + methodName + ' found by the given finder.'\n            );\n        }\n    }\n\n    /**\n     * Is the specified coordinate systems or components contain the given pixel point.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {boolean} result\n     */\n    echartsProto.containPixel = function (finder, value) {\n        var ecModel = this._model;\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        zrUtil.each(finder, function (models, key) {\n            key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n                var coordSys = model.coordinateSystem;\n                if (coordSys && coordSys.containPoint) {\n                    result |= !!coordSys.containPoint(value);\n                }\n                else if (key === 'seriesModels') {\n                    var view = this._chartsMap[model.__viewId];\n                    if (view && view.containPoint) {\n                        result |= view.containPoint(value, model);\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.warn(key + ': ' + (view\n                                ? 'The found component do not support containPoint.'\n                                : 'No view mapping to the found component.'\n                            ));\n                        }\n                    }\n                }\n                else {\n                    if (__DEV__) {\n                        console.warn(key + ': containPoint is not supported');\n                    }\n                }\n            }, this);\n        }, this);\n\n        return !!result;\n    };\n\n    /**\n     * Get visual from series or data.\n     * @param {string|Object} finder\n     *        If string, e.g., 'series', means {seriesIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            dataIndex / dataIndexInside\n     *        }\n     *        If dataIndex is not specified, series visual will be fetched,\n     *        but not data item visual.\n     *        If all of seriesIndex, seriesId, seriesName are not specified,\n     *        visual will be fetched from first series.\n     * @param {string} visualType 'color', 'symbol', 'symbolSize'\n     */\n    echartsProto.getVisual = function (finder, visualType) {\n        var ecModel = this._model;\n\n        finder = modelUtil.parseFinder(ecModel, finder, {defaultMainType: 'series'});\n\n        var seriesModel = finder.seriesModel;\n\n        if (__DEV__) {\n            if (!seriesModel) {\n                console.warn('There is no specified seires model');\n            }\n        }\n\n        var data = seriesModel.getData();\n\n        var dataIndexInside = finder.hasOwnProperty('dataIndexInside')\n            ? finder.dataIndexInside\n            : finder.hasOwnProperty('dataIndex')\n            ? data.indexOfRawIndex(finder.dataIndex)\n            : null;\n\n        return dataIndexInside != null\n            ? data.getItemVisual(dataIndexInside, visualType)\n            : data.getVisual(visualType);\n    };\n\n    /**\n     * Get view of corresponding component model\n     * @param  {module:echarts/model/Component} componentModel\n     * @return {module:echarts/view/Component}\n     */\n    echartsProto.getViewOfComponentModel = function (componentModel) {\n        return this._componentsMap[componentModel.__viewId];\n    };\n\n    /**\n     * Get view of corresponding series model\n     * @param  {module:echarts/model/Series} seriesModel\n     * @return {module:echarts/view/Chart}\n     */\n    echartsProto.getViewOfSeriesModel = function (seriesModel) {\n        return this._chartsMap[seriesModel.__viewId];\n    };\n\n\n    var updateMethods = {\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        update: function (payload) {\n            // console.profile && console.profile('update');\n\n            var ecModel = this._model;\n            var api = this._api;\n            var coordSysMgr = this._coordSysMgr;\n            var zr = this._zr;\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            // Fixme First time update ?\n            ecModel.restoreData();\n\n            // TODO\n            // Save total ecModel here for undo/redo (after restoring data and before processing data).\n            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n\n            // Create new coordinate system each update\n            // In LineView may save the old coordinate system and use it to get the orignal point\n            coordSysMgr.create(this._model, this._api);\n\n            processData.call(this, ecModel, api);\n\n            stackSeriesData.call(this, ecModel);\n\n            coordSysMgr.update(ecModel, api);\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            doRender.call(this, ecModel, payload);\n\n            // Set background\n            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n\n            var painter = zr.painter;\n            // TODO all use clearColor ?\n            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n                zr.configLayer(0, {\n                    clearColor: backgroundColor\n                });\n            }\n            else {\n                // In IE8\n                if (!env.canvasSupported) {\n                    var colorArr = colorTool.parse(backgroundColor);\n                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\n                    if (colorArr[3] === 0) {\n                        backgroundColor = 'transparent';\n                    }\n                }\n                if (backgroundColor.colorStops || backgroundColor.image) {\n                    // Gradient background\n                    // FIXME Fixed layer？\n                    zr.configLayer(0, {\n                        clearColor: backgroundColor\n                    });\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n\n                    this._dom.style.background = 'transparent';\n                }\n                else {\n                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n                        zr.configLayer(0, {\n                            clearColor: null\n                        });\n                    }\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n\n                    this._dom.style.background = backgroundColor;\n                }\n            }\n\n            each(postUpdateFuncs, function (func) {\n                func(ecModel, api);\n            });\n\n            // console.profile && console.profileEnd('update');\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateView: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateVisual: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload, true);\n\n            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateLayout: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            doLayout.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        prepareAndUpdate: function (payload) {\n            var ecModel = this._model;\n\n            prepareView.call(this, 'component', ecModel);\n\n            prepareView.call(this, 'chart', ecModel);\n\n            updateMethods.update.call(this, payload);\n        }\n    };\n\n    /**\n     * @private\n     */\n    function updateDirectly(ecIns, method, payload, mainType, subType) {\n        var ecModel = ecIns._model;\n\n        // broadcast\n        if (!mainType) {\n            each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n            return;\n        }\n\n        var query = {};\n        query[mainType + 'Id'] = payload[mainType + 'Id'];\n        query[mainType + 'Index'] = payload[mainType + 'Index'];\n        query[mainType + 'Name'] = payload[mainType + 'Name'];\n\n        var condition = {mainType: mainType, query: query};\n        subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n        // If dispatchAction before setOption, do nothing.\n        ecModel && ecModel.eachComponent(condition, function (model, index) {\n            callView(ecIns[\n                mainType === 'series' ? '_chartsMap' : '_componentsMap'\n            ][model.__viewId]);\n        }, ecIns);\n\n        function callView(view) {\n            view && view.__alive && view[method] && view[method](\n                view.__model, ecModel, ecIns._api, payload\n            );\n        }\n    }\n\n    /**\n     * Resize the chart\n     * @param {Object} opts\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @param {boolean} [opts.silent=false]\n     */\n    echartsProto.resize = function (opts) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        this._zr.resize(opts);\n\n        var optionChanged = this._model && this._model.resetOption('media');\n        var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n\n        updateMethods[updateMethod].call(this);\n\n        // Resize loading effect\n        this._loadingFX && this._loadingFX.resize();\n\n        this[IN_MAIN_PROCESS] = false;\n\n        var silent = opts && opts.silent;\n\n        flushPendingActions.call(this, silent);\n\n        triggerUpdatedEvent.call(this, silent);\n    };\n\n    /**\n     * Show loading effect\n     * @param  {string} [name='default']\n     * @param  {Object} [cfg]\n     */\n    echartsProto.showLoading = function (name, cfg) {\n        if (zrUtil.isObject(name)) {\n            cfg = name;\n            name = '';\n        }\n        name = name || 'default';\n\n        this.hideLoading();\n        if (!loadingEffects[name]) {\n            if (__DEV__) {\n                console.warn('Loading effects ' + name + ' not exists.');\n            }\n            return;\n        }\n        var el = loadingEffects[name](this._api, cfg);\n        var zr = this._zr;\n        this._loadingFX = el;\n\n        zr.add(el);\n    };\n\n    /**\n     * Hide loading effect\n     */\n    echartsProto.hideLoading = function () {\n        this._loadingFX && this._zr.remove(this._loadingFX);\n        this._loadingFX = null;\n    };\n\n    /**\n     * @param {Object} eventObj\n     * @return {Object}\n     */\n    echartsProto.makeActionFromEvent = function (eventObj) {\n        var payload = zrUtil.extend({}, eventObj);\n        payload.type = eventActionMap[eventObj.type];\n        return payload;\n    };\n\n    /**\n     * @pubilc\n     * @param {Object} payload\n     * @param {string} [payload.type] Action type\n     * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n     * @param {boolean} [opt.silent=false] Whether trigger events.\n     * @param {boolean} [opt.flush=undefined]\n     *                  true: Flush immediately, and then pixel in canvas can be fetched\n     *                      immediately. Caution: it might affect performance.\n     *                  false: Not not flush.\n     *                  undefined: Auto decide whether perform flush.\n     */\n    echartsProto.dispatchAction = function (payload, opt) {\n        if (!zrUtil.isObject(opt)) {\n            opt = {silent: !!opt};\n        }\n\n        if (!actions[payload.type]) {\n            return;\n        }\n\n        // Avoid dispatch action before setOption. Especially in `connect`.\n        if (!this._model) {\n            return;\n        }\n\n        // May dispatchAction in rendering procedure\n        if (this[IN_MAIN_PROCESS]) {\n            this._pendingActions.push(payload);\n            return;\n        }\n\n        doDispatchAction.call(this, payload, opt.silent);\n\n        if (opt.flush) {\n            this._zr.flush(true);\n        }\n        else if (opt.flush !== false && env.browser.weChat) {\n            // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n            // hang when sliding page (on touch event), which cause that zr does not\n            // refresh util user interaction finished, which is not expected.\n            // But `dispatchAction` may be called too frequently when pan on touch\n            // screen, which impacts performance if do not throttle them.\n            this._throttledZrFlush();\n        }\n\n        flushPendingActions.call(this, opt.silent);\n\n        triggerUpdatedEvent.call(this, opt.silent);\n    };\n\n    function doDispatchAction(payload, silent) {\n        var payloadType = payload.type;\n        var escapeConnect = payload.escapeConnect;\n        var actionWrap = actions[payloadType];\n        var actionInfo = actionWrap.actionInfo;\n\n        var cptType = (actionInfo.update || 'update').split(':');\n        var updateMethod = cptType.pop();\n        cptType = cptType[0] != null && parseClassType(cptType[0]);\n\n        this[IN_MAIN_PROCESS] = true;\n\n        var payloads = [payload];\n        var batched = false;\n        // Batch action\n        if (payload.batch) {\n            batched = true;\n            payloads = zrUtil.map(payload.batch, function (item) {\n                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n                item.batch = null;\n                return item;\n            });\n        }\n\n        var eventObjBatch = [];\n        var eventObj;\n        var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n\n        each(payloads, function (batchItem) {\n            // Action can specify the event by return it.\n            eventObj = actionWrap.action(batchItem, this._model, this._api);\n            // Emit event outside\n            eventObj = eventObj || zrUtil.extend({}, batchItem);\n            // Convert type to eventType\n            eventObj.type = actionInfo.event || eventObj.type;\n            eventObjBatch.push(eventObj);\n\n            // light update does not perform data process, layout and visual.\n            if (isHighDown) {\n                // method, payload, mainType, subType\n                updateDirectly(this, updateMethod, batchItem, 'series');\n            }\n            else if (cptType) {\n                updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n            }\n        }, this);\n\n        if (updateMethod !== 'none' && !isHighDown && !cptType) {\n            // Still dirty\n            if (this[OPTION_UPDATED]) {\n                // FIXME Pass payload ?\n                updateMethods.prepareAndUpdate.call(this, payload);\n                this[OPTION_UPDATED] = false;\n            }\n            else {\n                updateMethods[updateMethod].call(this, payload);\n            }\n        }\n\n        // Follow the rule of action batch\n        if (batched) {\n            eventObj = {\n                type: actionInfo.event || payloadType,\n                escapeConnect: escapeConnect,\n                batch: eventObjBatch\n            };\n        }\n        else {\n            eventObj = eventObjBatch[0];\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n    }\n\n    function flushPendingActions(silent) {\n        var pendingActions = this._pendingActions;\n        while (pendingActions.length) {\n            var payload = pendingActions.shift();\n            doDispatchAction.call(this, payload, silent);\n        }\n    }\n\n    function triggerUpdatedEvent(silent) {\n        !silent && this.trigger('updated');\n    }\n\n    /**\n     * Register event\n     * @method\n     */\n    echartsProto.on = createRegisterEventWithLowercaseName('on');\n    echartsProto.off = createRegisterEventWithLowercaseName('off');\n    echartsProto.one = createRegisterEventWithLowercaseName('one');\n\n    /**\n     * @param {string} methodName\n     * @private\n     */\n    function invokeUpdateMethod(methodName, ecModel, payload) {\n        var api = this._api;\n\n        // Update all components\n        each(this._componentsViews, function (component) {\n            var componentModel = component.__model;\n            component[methodName](componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, component);\n        }, this);\n\n        // Upate all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chart = this._chartsMap[seriesModel.__viewId];\n            chart[methodName](seriesModel, ecModel, api, payload);\n\n            updateZ(seriesModel, chart);\n\n            updateProgressiveAndBlend(seriesModel, chart);\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Post render\n        each(postUpdateFuncs, function (func) {\n            func(ecModel, api);\n        });\n    }\n\n    /**\n     * Prepare view instances of charts and components\n     * @param  {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function prepareView(type, ecModel) {\n        var isComponent = type === 'component';\n        var viewList = isComponent ? this._componentsViews : this._chartsViews;\n        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n        var zr = this._zr;\n\n        for (var i = 0; i < viewList.length; i++) {\n            viewList[i].__alive = false;\n        }\n\n        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n            if (isComponent) {\n                if (componentType === 'series') {\n                    return;\n                }\n            }\n            else {\n                model = componentType;\n            }\n\n            // Consider: id same and type changed.\n            var viewId = '_ec_' + model.id + '_' + model.type;\n            var view = viewMap[viewId];\n            if (!view) {\n                var classType = parseClassType(model.type);\n                var Clazz = isComponent\n                    ? ComponentView.getClass(classType.main, classType.sub)\n                    : ChartView.getClass(classType.sub);\n                if (Clazz) {\n                    view = new Clazz();\n                    view.init(ecModel, this._api);\n                    viewMap[viewId] = view;\n                    viewList.push(view);\n                    zr.add(view.group);\n                }\n                else {\n                    // Error\n                    return;\n                }\n            }\n\n            model.__viewId = view.__id = viewId;\n            view.__alive = true;\n            view.__model = model;\n            view.group.__ecComponentInfo = {\n                mainType: model.mainType,\n                index: model.componentIndex\n            };\n        }, this);\n\n        for (var i = 0; i < viewList.length;) {\n            var view = viewList[i];\n            if (!view.__alive) {\n                zr.remove(view.group);\n                view.dispose(ecModel, this._api);\n                viewList.splice(i, 1);\n                delete viewMap[view.__id];\n                view.__id = view.group.__ecComponentInfo = null;\n            }\n            else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Processor data in each series\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function processData(ecModel, api) {\n        each(dataProcessorFuncs, function (process) {\n            process.func(ecModel, api);\n        });\n    }\n\n    /**\n     * @private\n     */\n    function stackSeriesData(ecModel) {\n        var stackedDataMap = {};\n        ecModel.eachSeries(function (series) {\n            var stack = series.get('stack');\n            var data = series.getData();\n            if (stack && data.type === 'list') {\n                var previousStack = stackedDataMap[stack];\n                // Avoid conflict with Object.prototype\n                if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n                    data.stackedOn = previousStack;\n                }\n                stackedDataMap[stack] = data;\n            }\n        });\n    }\n\n    /**\n     * Layout before each chart render there series, special visual encoding stage\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doLayout(ecModel, payload) {\n        var api = this._api;\n        each(visualFuncs, function (visual) {\n            if (visual.isLayout) {\n                visual.func(ecModel, api, payload);\n            }\n        });\n    }\n\n    /**\n     * Encode visual infomation from data after data processing\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @param {object} layout\n     * @param {boolean} [excludesLayout]\n     * @private\n     */\n    function doVisualEncoding(ecModel, payload, excludesLayout) {\n        var api = this._api;\n        ecModel.clearColorPalette();\n        ecModel.eachSeries(function (seriesModel) {\n            seriesModel.clearColorPalette();\n        });\n        each(visualFuncs, function (visual) {\n            (!excludesLayout || !visual.isLayout)\n                && visual.func(ecModel, api, payload);\n        });\n    }\n\n    /**\n     * Render each chart and component\n     * @private\n     */\n    function doRender(ecModel, payload) {\n        var api = this._api;\n        // Render all components\n        each(this._componentsViews, function (componentView) {\n            var componentModel = componentView.__model;\n            componentView.render(componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, componentView);\n        }, this);\n\n        each(this._chartsViews, function (chart) {\n            chart.__alive = false;\n        }, this);\n\n        // Render all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chartView = this._chartsMap[seriesModel.__viewId];\n            chartView.__alive = true;\n            chartView.render(seriesModel, ecModel, api, payload);\n\n            chartView.group.silent = !!seriesModel.get('silent');\n\n            updateZ(seriesModel, chartView);\n\n            updateProgressiveAndBlend(seriesModel, chartView);\n\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Remove groups of unrendered charts\n        each(this._chartsViews, function (chart) {\n            if (!chart.__alive) {\n                chart.remove(ecModel, api);\n            }\n        }, this);\n    }\n\n    var MOUSE_EVENT_NAMES = [\n        'click', 'dblclick', 'mouseover', 'mouseout', 'mousemove',\n        'mousedown', 'mouseup', 'globalout', 'contextmenu'\n    ];\n    /**\n     * @private\n     */\n    echartsProto._initEvents = function () {\n        each(MOUSE_EVENT_NAMES, function (eveName) {\n            this._zr.on(eveName, function (e) {\n                var ecModel = this.getModel();\n                var el = e.target;\n                var params;\n\n                // no e.target when 'globalout'.\n                if (eveName === 'globalout') {\n                    params = {};\n                }\n                else if (el && el.dataIndex != null) {\n                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                    params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n                }\n                // If element has custom eventData of components\n                else if (el && el.eventData) {\n                    params = zrUtil.extend({}, el.eventData);\n                }\n\n                if (params) {\n                    params.event = e;\n                    params.type = eveName;\n                    this.trigger(eveName, params);\n                }\n\n            }, this);\n        }, this);\n\n        each(eventActionMap, function (actionType, eventType) {\n            this._messageCenter.on(eventType, function (event) {\n                this.trigger(eventType, event);\n            }, this);\n        }, this);\n    };\n\n    /**\n     * @return {boolean}\n     */\n    echartsProto.isDisposed = function () {\n        return this._disposed;\n    };\n\n    /**\n     * Clear\n     */\n    echartsProto.clear = function () {\n        this.setOption({ series: [] }, true);\n    };\n\n    /**\n     * Dispose instance\n     */\n    echartsProto.dispose = function () {\n        if (this._disposed) {\n            if (__DEV__) {\n                console.warn('Instance ' + this.id + ' has been disposed');\n            }\n            return;\n        }\n        this._disposed = true;\n\n        var api = this._api;\n        var ecModel = this._model;\n\n        each(this._componentsViews, function (component) {\n            component.dispose(ecModel, api);\n        });\n        each(this._chartsViews, function (chart) {\n            chart.dispose(ecModel, api);\n        });\n\n        // Dispose after all views disposed\n        this._zr.dispose();\n\n        delete instances[this.id];\n    };\n\n    zrUtil.mixin(ECharts, Eventful);\n\n    function updateHoverLayerStatus(zr, ecModel) {\n        var storage = zr.storage;\n        var elCount = 0;\n        storage.traverse(function (el) {\n            if (!el.isGroup) {\n                elCount++;\n            }\n        });\n        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n            storage.traverse(function (el) {\n                if (!el.isGroup) {\n                    el.useHoverLayer = true;\n                }\n            });\n        }\n    }\n\n    /**\n     * Update chart progressive and blend.\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateProgressiveAndBlend(seriesModel, chartView) {\n        // Progressive configuration\n        var elCount = 0;\n        chartView.group.traverse(function (el) {\n            if (el.type !== 'group' && !el.ignore) {\n                elCount++;\n            }\n        });\n        var frameDrawNum = +seriesModel.get('progressive');\n        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n        if (needProgressive) {\n            chartView.group.traverse(function (el) {\n                // FIXME marker and other components\n                if (!el.isGroup) {\n                    el.progressive = needProgressive ?\n                        Math.floor(elCount++ / frameDrawNum) : -1;\n                    if (needProgressive) {\n                        el.stopAnimation(true);\n                    }\n                }\n            });\n        }\n\n        // Blend configration\n        var blendMode = seriesModel.get('blendMode') || null;\n        if (__DEV__) {\n            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n                console.warn('Only canvas support blendMode');\n            }\n        }\n        chartView.group.traverse(function (el) {\n            // FIXME marker and other components\n            if (!el.isGroup) {\n                el.setStyle('blend', blendMode);\n            }\n        });\n    }\n\n    /**\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateZ(model, view) {\n        var z = model.get('z');\n        var zlevel = model.get('zlevel');\n        // Set z and zlevel\n        view.group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n            }\n        });\n    }\n\n    function createExtensionAPI(ecInstance) {\n        var coordSysMgr = ecInstance._coordSysMgr;\n        return zrUtil.extend(new ExtensionAPI(ecInstance), {\n            // Inject methods\n            getCoordinateSystems: zrUtil.bind(\n                coordSysMgr.getCoordinateSystems, coordSysMgr\n            ),\n            getComponentByElement: function (el) {\n                while (el) {\n                    var modelInfo = el.__ecComponentInfo;\n                    if (modelInfo != null) {\n                        return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n                    }\n                    el = el.parent;\n                }\n            }\n        });\n    }\n\n    /**\n     * @type {Object} key: actionType.\n     * @inner\n     */\n    var actions = {};\n\n    /**\n     * Map eventType to actionType\n     * @type {Object}\n     */\n    var eventActionMap = {};\n\n    /**\n     * Data processor functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var dataProcessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var optionPreprocessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var postUpdateFuncs = [];\n\n    /**\n     * Visual encoding functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var visualFuncs = [];\n    /**\n     * Theme storage\n     * @type {Object.<key, Object>}\n     */\n    var themeStorage = {};\n    /**\n     * Loading effects\n     */\n    var loadingEffects = {};\n\n\n    var instances = {};\n    var connectedGroups = {};\n\n    var idBase = new Date() - 0;\n    var groupIdBase = new Date() - 0;\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n\n    /**\n     * @alias module:echarts\n     */\n    var echarts = {\n        /**\n         * @type {number}\n         */\n        version: '3.7.0',\n        dependencies: {\n            zrender: '3.6.0'\n        }\n    };\n\n    function enableConnect(chart) {\n        var STATUS_PENDING = 0;\n        var STATUS_UPDATING = 1;\n        var STATUS_UPDATED = 2;\n        var STATUS_KEY = '__connectUpdateStatus';\n\n        function updateConnectedChartsStatus(charts, status) {\n            for (var i = 0; i < charts.length; i++) {\n                var otherChart = charts[i];\n                otherChart[STATUS_KEY] = status;\n            }\n        }\n\n        zrUtil.each(eventActionMap, function (actionType, eventType) {\n            chart._messageCenter.on(eventType, function (event) {\n                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n                    if (event && event.escapeConnect) {\n                        return;\n                    }\n\n                    var action = chart.makeActionFromEvent(event);\n                    var otherCharts = [];\n\n                    zrUtil.each(instances, function (otherChart) {\n                        if (otherChart !== chart && otherChart.group === chart.group) {\n                            otherCharts.push(otherChart);\n                        }\n                    });\n\n                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n                    each(otherCharts, function (otherChart) {\n                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n                            otherChart.dispatchAction(action);\n                        }\n                    });\n                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n                }\n            });\n        });\n    }\n\n    /**\n     * @param {HTMLElement} dom\n     * @param {Object} [theme]\n     * @param {Object} opts\n     * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n     * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n     * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n     *                              Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n     *                               Can be 'auto' (the same as null/undefined)\n     */\n    echarts.init = function (dom, theme, opts) {\n        if (__DEV__) {\n            // Check version\n            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\n                throw new Error(\n                    'ZRender ' + zrender.version\n                    + ' is too old for ECharts ' + echarts.version\n                    + '. Current version need ZRender '\n                    + echarts.dependencies.zrender + '+'\n                );\n            }\n\n            if (!dom) {\n                throw new Error('Initialize failed: invalid dom.');\n            }\n        }\n\n        var existInstance = echarts.getInstanceByDom(dom);\n        if (existInstance) {\n            if (__DEV__) {\n                console.warn('There is a chart instance already initialized on the dom.');\n            }\n            return existInstance;\n        }\n\n        if (__DEV__) {\n            if (zrUtil.isDom(dom)\n                && dom.nodeName.toUpperCase() !== 'CANVAS'\n                && (\n                    (!dom.clientWidth && (!opts || opts.width == null))\n                    || (!dom.clientHeight && (!opts || opts.height == null))\n                )\n            ) {\n                console.warn('Can\\'t get dom width or height');\n            }\n        }\n\n        var chart = new ECharts(dom, theme, opts);\n        chart.id = 'ec_' + idBase++;\n        instances[chart.id] = chart;\n\n        if (dom.setAttribute) {\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n        }\n        else {\n            dom[DOM_ATTRIBUTE_KEY] = chart.id;\n        }\n\n        enableConnect(chart);\n\n        return chart;\n    };\n\n    /**\n     * @return {string|Array.<module:echarts~ECharts>} groupId\n     */\n    echarts.connect = function (groupId) {\n        // Is array of charts\n        if (zrUtil.isArray(groupId)) {\n            var charts = groupId;\n            groupId = null;\n            // If any chart has group\n            zrUtil.each(charts, function (chart) {\n                if (chart.group != null) {\n                    groupId = chart.group;\n                }\n            });\n            groupId = groupId || ('g_' + groupIdBase++);\n            zrUtil.each(charts, function (chart) {\n                chart.group = groupId;\n            });\n        }\n        connectedGroups[groupId] = true;\n        return groupId;\n    };\n\n    /**\n     * @DEPRECATED\n     * @return {string} groupId\n     */\n    echarts.disConnect = function (groupId) {\n        connectedGroups[groupId] = false;\n    };\n\n    /**\n     * @return {string} groupId\n     */\n    echarts.disconnect = echarts.disConnect;\n\n    /**\n     * Dispose a chart instance\n     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n     */\n    echarts.dispose = function (chart) {\n        if (typeof chart === 'string') {\n            chart = instances[chart];\n        }\n        else if (!(chart instanceof ECharts)){\n            // Try to treat as dom\n            chart = echarts.getInstanceByDom(chart);\n        }\n        if ((chart instanceof ECharts) && !chart.isDisposed()) {\n            chart.dispose();\n        }\n    };\n\n    /**\n     * @param  {HTMLElement} dom\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceByDom = function (dom) {\n        var key;\n        if (dom.getAttribute) {\n            key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n        }\n        else {\n            key = dom[DOM_ATTRIBUTE_KEY];\n        }\n        return instances[key];\n    };\n\n    /**\n     * @param {string} key\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceById = function (key) {\n        return instances[key];\n    };\n\n    /**\n     * Register theme\n     */\n    echarts.registerTheme = function (name, theme) {\n        themeStorage[name] = theme;\n    };\n\n    /**\n     * Register option preprocessor\n     * @param {Function} preprocessorFunc\n     */\n    echarts.registerPreprocessor = function (preprocessorFunc) {\n        optionPreprocessorFuncs.push(preprocessorFunc);\n    };\n\n    /**\n     * @param {number} [priority=1000]\n     * @param {Function} processorFunc\n     */\n    echarts.registerProcessor = function (priority, processorFunc) {\n        if (typeof priority === 'function') {\n            processorFunc = priority;\n            priority = PRIORITY_PROCESSOR_FILTER;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown processor priority');\n            }\n        }\n        dataProcessorFuncs.push({\n            prio: priority,\n            func: processorFunc\n        });\n    };\n\n    /**\n     * Register postUpdater\n     * @param {Function} postUpdateFunc\n     */\n    echarts.registerPostUpdate = function (postUpdateFunc) {\n        postUpdateFuncs.push(postUpdateFunc);\n    };\n\n    /**\n     * Usage:\n     * registerAction('someAction', 'someEvent', function () { ... });\n     * registerAction('someAction', function () { ... });\n     * registerAction(\n     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n     *     function () { ... }\n     * );\n     *\n     * @param {(string|Object)} actionInfo\n     * @param {string} actionInfo.type\n     * @param {string} [actionInfo.event]\n     * @param {string} [actionInfo.update]\n     * @param {string} [eventName]\n     * @param {Function} action\n     */\n    echarts.registerAction = function (actionInfo, eventName, action) {\n        if (typeof eventName === 'function') {\n            action = eventName;\n            eventName = '';\n        }\n        var actionType = zrUtil.isObject(actionInfo)\n            ? actionInfo.type\n            : ([actionInfo, actionInfo = {\n                event: eventName\n            }][0]);\n\n        // Event name is all lowercase\n        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n        eventName = actionInfo.event;\n\n        // Validate action type and event name.\n        zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n        if (!actions[actionType]) {\n            actions[actionType] = {action: action, actionInfo: actionInfo};\n        }\n        eventActionMap[eventName] = actionType;\n    };\n\n    /**\n     * @param {string} type\n     * @param {*} CoordinateSystem\n     */\n    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\n        CoordinateSystemManager.register(type, CoordinateSystem);\n    };\n\n    /**\n     * Get dimensions of specified coordinate system.\n     * @param {string} type\n     * @return {Array.<string|Object>}\n     */\n    echarts.getCoordinateSystemDimensions = function (type) {\n        var coordSysCreator = CoordinateSystemManager.get(type);\n        if (coordSysCreator) {\n            return coordSysCreator.getDimensionsInfo\n                    ? coordSysCreator.getDimensionsInfo()\n                    : coordSysCreator.dimensions.slice();\n        }\n    };\n\n    /**\n     * Layout is a special stage of visual encoding\n     * Most visual encoding like color are common for different chart\n     * But each chart has it's own layout algorithm\n     *\n     * @param {number} [priority=1000]\n     * @param {Function} layoutFunc\n     */\n    echarts.registerLayout = function (priority, layoutFunc) {\n        if (typeof priority === 'function') {\n            layoutFunc = priority;\n            priority = PRIORITY_VISUAL_LAYOUT;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown layout priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: layoutFunc,\n            isLayout: true\n        });\n    };\n\n    /**\n     * @param {number} [priority=3000]\n     * @param {Function} visualFunc\n     */\n    echarts.registerVisual = function (priority, visualFunc) {\n        if (typeof priority === 'function') {\n            visualFunc = priority;\n            priority = PRIORITY_VISUAL_CHART;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown visual priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: visualFunc\n        });\n    };\n\n    /**\n     * @param {string} name\n     */\n    echarts.registerLoading = function (name, loadingFx) {\n        loadingEffects[name] = loadingFx;\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentModel = function (opts/*, superClass*/) {\n        // var Clazz = ComponentModel;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentView = function (opts/*, superClass*/) {\n        // var Clazz = ComponentView;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentView.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendSeriesModel = function (opts/*, superClass*/) {\n        // var Clazz = SeriesModel;\n        // if (superClass) {\n        //     superClass = 'series.' + superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return SeriesModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendChartView = function (opts/*, superClass*/) {\n        // var Clazz = ChartView;\n        // if (superClass) {\n        //     superClass = superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ChartView.getClass(classType.main, true);\n        // }\n        return ChartView.extend(opts);\n    };\n\n    /**\n     * ZRender need a canvas context to do measureText.\n     * But in node environment canvas may be created by node-canvas.\n     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n     *\n     * Be careful of using it in the browser.\n     *\n     * @param {Function} creator\n     * @example\n     *     var Canvas = require('canvas');\n     *     var echarts = require('echarts');\n     *     echarts.setCanvasCreator(function () {\n     *         // Small size is enough.\n     *         return new Canvas(32, 32);\n     *     });\n     */\n    echarts.setCanvasCreator = function (creator) {\n        zrUtil.createCanvas = creator;\n    };\n\n    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, __webpack_require__(758));\n    echarts.registerPreprocessor(__webpack_require__(751));\n    echarts.registerLoading('default', __webpack_require__(742));\n\n    // Default action\n    echarts.registerAction({\n        type: 'highlight',\n        event: 'highlight',\n        update: 'highlight'\n    }, zrUtil.noop);\n    echarts.registerAction({\n        type: 'downplay',\n        event: 'downplay',\n        update: 'downplay'\n    }, zrUtil.noop);\n\n\n    // --------\n    // Exports\n    // --------\n    echarts.zrender = zrender;\n\n    echarts.List = __webpack_require__(630);\n    echarts.Model = __webpack_require__(614);\n\n    echarts.Axis = __webpack_require__(650);\n\n    echarts.graphic = __webpack_require__(608);\n    echarts.number = __webpack_require__(610);\n    echarts.format = __webpack_require__(613);\n    echarts.throttle = throttle.throttle;\n    echarts.matrix = __webpack_require__(623);\n    echarts.vector = __webpack_require__(611);\n    echarts.color = __webpack_require__(627);\n\n    echarts.util = {};\n    each([\n            'map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter',\n            'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction',\n            'extend', 'defaults', 'clone', 'merge'\n        ],\n        function (name) {\n            echarts.util[name] = zrUtil[name];\n        }\n    );\n\n    echarts.helper = __webpack_require__(740);\n\n\n    // PRIORITY\n    echarts.PRIORITY = {\n        PROCESSOR: {\n            FILTER: PRIORITY_PROCESSOR_FILTER,\n            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n        },\n        VISUAL: {\n            LAYOUT: PRIORITY_VISUAL_LAYOUT,\n            GLOBAL: PRIORITY_VISUAL_GLOBAL,\n            CHART: PRIORITY_VISUAL_CHART,\n            COMPONENT: PRIORITY_VISUAL_COMPONENT,\n            BRUSH: PRIORITY_VISUAL_BRUSH\n        }\n    };\n\n    module.exports = echarts;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(60)))\n\n/***/ }),\n\n/***/ 608:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(606);\n\n    var pathTool = __webpack_require__(800);\n    var Path = __webpack_require__(612);\n    var colorTool = __webpack_require__(627);\n    var matrix = __webpack_require__(623);\n    var vector = __webpack_require__(611);\n    var Transformable = __webpack_require__(680);\n    var BoundingRect = __webpack_require__(617);\n\n    var round = Math.round;\n    var mathMax = Math.max;\n    var mathMin = Math.min;\n\n    var EMPTY_OBJ = {};\n\n    var graphic = {};\n\n    graphic.Group = __webpack_require__(634);\n\n    graphic.Image = __webpack_require__(674);\n\n    graphic.Text = __webpack_require__(785);\n\n    graphic.Circle = __webpack_require__(791);\n\n    graphic.Sector = __webpack_require__(797);\n\n    graphic.Ring = __webpack_require__(796);\n\n    graphic.Polygon = __webpack_require__(793);\n\n    graphic.Polyline = __webpack_require__(794);\n\n    graphic.Rect = __webpack_require__(795);\n\n    graphic.Line = __webpack_require__(792);\n\n    graphic.BezierCurve = __webpack_require__(790);\n\n    graphic.Arc = __webpack_require__(789);\n\n    graphic.CompoundPath = __webpack_require__(782);\n\n    graphic.LinearGradient = __webpack_require__(783);\n\n    graphic.RadialGradient = __webpack_require__(784);\n\n    graphic.BoundingRect = BoundingRect;\n\n    /**\n     * Extend shape with parameters\n     */\n    graphic.extendShape = function (opts) {\n        return Path.extend(opts);\n    };\n\n    /**\n     * Extend path\n     */\n    graphic.extendPath = function (pathData, opts) {\n        return pathTool.extendFromString(pathData, opts);\n    };\n\n    /**\n     * Create a path element from path data string\n     * @param {string} pathData\n     * @param {Object} opts\n     * @param {module:zrender/core/BoundingRect} rect\n     * @param {string} [layout=cover] 'center' or 'cover'\n     */\n    graphic.makePath = function (pathData, opts, rect, layout) {\n        var path = pathTool.createFromString(pathData, opts);\n        var boundingRect = path.getBoundingRect();\n        if (rect) {\n            var aspect = boundingRect.width / boundingRect.height;\n\n            if (layout === 'center') {\n                // Set rect to center, keep width / height ratio.\n                var width = rect.height * aspect;\n                var height;\n                if (width <= rect.width) {\n                    height = rect.height;\n                }\n                else {\n                    width = rect.width;\n                    height = width / aspect;\n                }\n                var cx = rect.x + rect.width / 2;\n                var cy = rect.y + rect.height / 2;\n\n                rect.x = cx - width / 2;\n                rect.y = cy - height / 2;\n                rect.width = width;\n                rect.height = height;\n            }\n\n            graphic.resizePath(path, rect);\n        }\n        return path;\n    };\n\n    graphic.mergePath = pathTool.mergePath,\n\n    /**\n     * Resize a path to fit the rect\n     * @param {module:zrender/graphic/Path} path\n     * @param {Object} rect\n     */\n    graphic.resizePath = function (path, rect) {\n        if (!path.applyTransform) {\n            return;\n        }\n\n        var pathRect = path.getBoundingRect();\n\n        var m = pathRect.calculateTransform(rect);\n\n        path.applyTransform(m);\n    };\n\n    /**\n     * Sub pixel optimize line for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x1]\n     * @param {number} [param.shape.y1]\n     * @param {number} [param.shape.x2]\n     * @param {number} [param.shape.y2]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeLine = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n\n        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n        }\n        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n        }\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize rect for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x]\n     * @param {number} [param.shape.y]\n     * @param {number} [param.shape.width]\n     * @param {number} [param.shape.height]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeRect = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n        var originX = shape.x;\n        var originY = shape.y;\n        var originWidth = shape.width;\n        var originHeight = shape.height;\n        shape.x = subPixelOptimize(shape.x, lineWidth, true);\n        shape.y = subPixelOptimize(shape.y, lineWidth, true);\n        shape.width = Math.max(\n            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\n            originWidth === 0 ? 0 : 1\n        );\n        shape.height = Math.max(\n            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\n            originHeight === 0 ? 0 : 1\n        );\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize for canvas\n     *\n     * @param {number} position Coordinate, such as x, y\n     * @param {number} lineWidth Should be nonnegative integer.\n     * @param {boolean=} positiveOrNegative Default false (negative).\n     * @return {number} Optimized position.\n     */\n    graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\n        // Assure that (position + lineWidth / 2) is near integer edge,\n        // otherwise line will be fuzzy in canvas.\n        var doubledPosition = round(position * 2);\n        return (doubledPosition + round(lineWidth)) % 2 === 0\n            ? doubledPosition / 2\n            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n    };\n\n    function hasFillOrStroke(fillOrStroke) {\n        return fillOrStroke != null && fillOrStroke != 'none';\n    }\n\n    function liftColor(color) {\n        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n    }\n\n    /**\n     * @private\n     */\n    function cacheElementStl(el) {\n        if (el.__hoverStlDirty) {\n            var stroke = el.style.stroke;\n            var fill = el.style.fill;\n\n            // Create hoverStyle on mouseover\n            var hoverStyle = el.__hoverStl;\n            hoverStyle.fill = hoverStyle.fill\n                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n            hoverStyle.stroke = hoverStyle.stroke\n                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n\n            var normalStyle = {};\n            for (var name in hoverStyle) {\n                // See comment in `doSingleEnterHover`.\n                if (hoverStyle[name] != null) {\n                    normalStyle[name] = el.style[name];\n                }\n            }\n\n            el.__normalStl = normalStyle;\n\n            el.__hoverStlDirty = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    function doSingleEnterHover(el) {\n        if (el.__isHover) {\n            return;\n        }\n\n        cacheElementStl(el);\n\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.addHover(el, el.__hoverStl);\n        }\n        else {\n            // styles can be:\n            // {\n            //     label: {\n            //         normal: {\n            //             show: false,\n            //             position: 'outside',\n            //             fontSize: 18\n            //         },\n            //         emphasis: {\n            //             show: true\n            //         }\n            //     }\n            // },\n            // where properties of `emphasis` may not appear in `normal`. We previously use\n            // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n            // But consider rich text and setOption in merge mode, it is impossible to cover\n            // all properties in merge. So we use merge mode when setting style here, where\n            // only properties that is not `null/undefined` can be set. The disadventage:\n            // null/undefined can not be used to remove style any more in `emphasis`.\n            el.style.extendFrom(el.__hoverStl);\n            el.dirty(false);\n            el.z2 += 1;\n        }\n\n        el.__isHover = true;\n    }\n\n    /**\n     * @inner\n     */\n    function doSingleLeaveHover(el) {\n        if (!el.__isHover) {\n            return;\n        }\n\n        var normalStl = el.__normalStl;\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.removeHover(el);\n        }\n        else {\n            // Consider null/undefined value, should use\n            // `setStyle` but not `extendFrom(stl, true)`.\n            normalStl && el.setStyle(normalStl);\n            el.z2 -= 1;\n        }\n\n        el.__isHover = false;\n    }\n\n    /**\n     * @inner\n     */\n    function doEnterHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleEnterHover(child);\n                }\n            })\n            : doSingleEnterHover(el);\n    }\n\n    function doLeaveHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleLeaveHover(child);\n                }\n            })\n            : doSingleLeaveHover(el);\n    }\n\n    /**\n     * @inner\n     */\n    function setElementHoverStl(el, hoverStl) {\n        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n        // Often used when item group has a label element and it's hoverStyle is different\n        el.__hoverStl = el.hoverStyle || hoverStl || {};\n        el.__hoverStlDirty = true;\n\n        if (el.__isHover) {\n            cacheElementStl(el);\n        }\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOver(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOut(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doLeaveHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function enterEmphasis() {\n        this.__isEmphasis = true;\n        doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function leaveEmphasis() {\n        this.__isEmphasis = false;\n        doLeaveHover(this);\n    }\n\n    /**\n     * Set hover style of element.\n     * This method can be called repeatly without side-effects.\n     * @param {module:zrender/Element} el\n     * @param {Object} [hoverStyle]\n     * @param {Object} [opt]\n     * @param {boolean} [opt.hoverSilentOnTouch=false]\n     *        In touch device, mouseover event will be trigger on touchstart event\n     *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n     *        conviniently use hoverStyle when tap on touch screen without additional\n     *        code for compatibility.\n     *        But if the chart/component has select feature, which usually also use\n     *        hoverStyle, there might be conflict between 'select-highlight' and\n     *        'hover-highlight' especially when roam is enabled (see geo for example).\n     *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n     *        on touch device.\n     */\n    graphic.setHoverStyle = function (el, hoverStyle, opt) {\n        el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    setElementHoverStl(child, hoverStyle);\n                }\n            })\n            : setElementHoverStl(el, hoverStyle);\n\n        // Duplicated function will be auto-ignored, see Eventful.js.\n        el.on('mouseover', onElementMouseOver)\n          .on('mouseout', onElementMouseOut);\n\n        // Emphasis, normal can be triggered manually\n        el.on('emphasis', enterEmphasis)\n          .on('normal', leaveEmphasis);\n    };\n\n    /**\n     * Set basic textStyle properties.\n     * @param {Object|module:zrender/graphic/Style} textStyle\n     * @param {module:echarts/model/Model} model\n     * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n     * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n     */\n    graphic.setTextStyle = function (textStyle, textStyleModel, specifiedTextStyle, opt) {\n        setTextStyleCommon(textStyle, textStyleModel, opt);\n        specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n        textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n\n        return textStyle;\n    };\n\n    /**\n     * Set text option in the style\n     * @param {Object} textStyle\n     * @param {module:echarts/model/Model} labelModel\n     * @param {string|boolean} defaultColor Default text color.\n     *        If set as false, it will be processed as a emphasis style.\n     */\n    graphic.setText = function (textStyle, labelModel, defaultColor) {\n        var opt = {isRectText: true};\n        if (defaultColor === false) {\n            opt.forMerge = true;\n        }\n        else {\n            // Support setting color as 'auto' to get visual color.\n            opt.defaultTextColor = opt.autoColor = defaultColor;\n            opt.checkInside = checkInsideForSetText;\n        }\n        setTextStyleCommon(textStyle, labelModel, opt);\n        textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n    };\n\n    function checkInsideForSetText(labelModel, textPosition) {\n        return textPosition && textPosition.indexOf('inside') >= 0;\n    }\n\n    /**\n     * {\n     *      disableBox: boolean, Whether diable drawing box of block (outer most).\n     *      isRectText: boolean,\n     *      autoColor: string, specify a color when color is 'auto',\n     *                 for textFill, textStroke, textBackgroundColor, and textBorderColor,\n     *      defaultTextColor: string,\n     *      checkInside: function, higher priority than `defaultTextColor`.\n     *      forceRich: boolean,\n     *      forMerge: boolean\n     * }\n     */\n    function setTextStyleCommon(textStyle, textStyleModel, opt) {\n        // Consider there will be abnormal when merge hover style to normal style if given default value.\n        opt = opt || EMPTY_OBJ;\n\n        if (opt.isRectText) {\n            var textPosition = textStyleModel.getShallow('position')\n                || (opt.forMerge ? null : 'inside');\n            // 'outside' is not a valid zr textPostion value, but used\n            // in bar series, and magric type should be considered.\n            textPosition === 'outside' && (textPosition = 'top');\n            textStyle.textPosition = textPosition;\n            textStyle.textOffset = textStyleModel.getShallow('offset');\n            var labelRotate = textStyleModel.getShallow('rotate');\n            labelRotate != null && (labelRotate *= Math.PI / 180);\n            textStyle.textRotation = labelRotate;\n            textStyle.textDistance = zrUtil.retrieve2(\n                textStyleModel.getShallow('distance'), opt.forMerge ? null : 5\n            );\n        }\n\n        var ecModel = textStyleModel.ecModel;\n        var globalTextStyle = ecModel && ecModel.option.textStyle;\n\n        // Consider case:\n        // {\n        //     data: [{\n        //         value: 12,\n        //         label: {\n        //             normal: {\n        //                 rich: {\n        //                     // no 'a' here but using parent 'a'.\n        //                 }\n        //             }\n        //         }\n        //     }],\n        //     rich: {\n        //         a: { ... }\n        //     }\n        // }\n        var richItemNames = getRichItemNames(textStyleModel);\n        var richResult;\n        if (richItemNames) {\n            richResult = {};\n            for (var name in richItemNames) {\n                if (richItemNames.hasOwnProperty(name)) {\n                    // Cascade is supported in rich.\n                    var richTextStyle = textStyleModel.getModel(['rich', name]);\n                    // In rich, never `disableBox`.\n                    setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt);\n                }\n            }\n        }\n        textStyle.rich = richResult;\n\n        setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, true);\n\n        if (opt.forceRich && !opt.textStyle) {\n            opt.textStyle = {};\n        }\n\n        return textStyle;\n    }\n\n    // Consider case:\n    // {\n    //     data: [{\n    //         value: 12,\n    //         label: {\n    //             normal: {\n    //                 rich: {\n    //                     // no 'a' here but using parent 'a'.\n    //                 }\n    //             }\n    //         }\n    //     }],\n    //     rich: {\n    //         a: { ... }\n    //     }\n    // }\n    function getRichItemNames(textStyleModel) {\n        // Use object to remove duplicated names.\n        var richItemNameMap;\n        while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n            var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n            if (rich) {\n                richItemNameMap = richItemNameMap || {};\n                for (var name in rich) {\n                    if (rich.hasOwnProperty(name)) {\n                        richItemNameMap[name] = 1;\n                    }\n                }\n            }\n            textStyleModel = textStyleModel.parentModel;\n        }\n        return richItemNameMap;\n    }\n\n    function setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isBlock) {\n        var forMerge = opt.forMerge;\n\n        // In merge mode, default value should not be given.\n        globalTextStyle = !forMerge && globalTextStyle || EMPTY_OBJ;\n\n        var textFill = getAutoColor(textStyleModel.getShallow('color'));\n        var textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'));\n        var textLineWidth = textStyleModel.getShallow('textBorderWidth');\n\n        if (!forMerge) {\n            textFill == null && (textFill = globalTextStyle.color);\n            textStroke == null && (textStroke = globalTextStyle.textBorderColor);\n            textLineWidth == null && (textLineWidth = globalTextStyle.textBorderWidth);\n\n            if (textFill == null\n                && opt.checkInside\n                && opt.checkInside(textStyleModel, textStyle.textPosition)\n            ) {\n                textFill = '#fff';\n                // Consider text with #fff overflow its container.\n                if (textStroke == null) {\n                    textStroke = opt.defaultTextColor;\n                    textLineWidth == null && (textLineWidth = 2);\n                }\n            }\n\n            textFill == null && (textFill = opt.defaultTextColor);\n        }\n\n        textStyle.textFill = textFill;\n        textStyle.textStroke = textStroke;\n        textStyle.textLineWidth = textLineWidth;\n\n        // Do not use `getFont` here, because merge should be supported, where\n        // part of these properties may be changed in emphasis style, and the\n        // others should remain their original value got from normal style.\n        textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n        textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n        textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n        textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n\n        textStyle.textAlign = textStyleModel.getShallow('align');\n        textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign')\n            || textStyleModel.getShallow('baseline');\n\n        textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n        textStyle.textWidth = textStyleModel.getShallow('width');\n        textStyle.textHeight = textStyleModel.getShallow('height');\n        textStyle.textTag = textStyleModel.getShallow('tag');\n\n        if (!isBlock || !opt.disableBox) {\n            textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n            textStyle.textPadding = textStyleModel.getShallow('padding');\n            textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n            textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n            textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n\n            textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n            textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n            textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n            textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n        }\n\n        textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor')\n            || globalTextStyle.textShadowColor;\n        textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur')\n            || globalTextStyle.textShadowBlur;\n        textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX')\n            || globalTextStyle.textShadowOffsetX;\n        textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY')\n            || globalTextStyle.textShadowOffsetY;\n    }\n\n    function getAutoColor(color, opt) {\n        return color !== 'auto' ? color : (opt && opt.autoColor) ? opt.autoColor : null;\n    }\n\n    graphic.getFont = function (opt, ecModel) {\n        // ecModel or default text style model.\n        var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n        return [\n            // FIXME in node-canvas fontWeight is before fontStyle\n            opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '',\n            opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '',\n            (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px',\n            opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'\n        ].join(' ');\n    };\n\n    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n        if (typeof dataIndex === 'function') {\n            cb = dataIndex;\n            dataIndex = null;\n        }\n        // Do not check 'animation' property directly here. Consider this case:\n        // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n        // but its parent model (`seriesModel`) does.\n        var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n        if (animationEnabled) {\n            var postfix = isUpdate ? 'Update' : '';\n            var duration = animatableModel.getShallow('animationDuration' + postfix);\n            var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n            var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n            if (typeof animationDelay === 'function') {\n                animationDelay = animationDelay(\n                    dataIndex,\n                    animatableModel.getAnimationDelayParams\n                        ? animatableModel.getAnimationDelayParams(el, dataIndex)\n                        : null\n                );\n            }\n            if (typeof duration === 'function') {\n                duration = duration(dataIndex);\n            }\n\n            duration > 0\n                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb)\n                : (el.stopAnimation(), el.attr(props), cb && cb());\n        }\n        else {\n            el.stopAnimation();\n            el.attr(props);\n            cb && cb();\n        }\n    }\n\n    /**\n     * Update graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} [cb]\n     * @example\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n     *     // Or\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, function () { console.log('Animation done!'); });\n     */\n    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Init graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} cb\n     */\n    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Get transform matrix of target (param target),\n     * in coordinate of its ancestor (param ancestor)\n     *\n     * @param {module:zrender/mixin/Transformable} target\n     * @param {module:zrender/mixin/Transformable} [ancestor]\n     */\n    graphic.getTransform = function (target, ancestor) {\n        var mat = matrix.identity([]);\n\n        while (target && target !== ancestor) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n\n        return mat;\n    };\n\n    /**\n     * Apply transform to an vertex.\n     * @param {Array.<number>} target [x, y]\n     * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n     *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n     *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {Array.<number>} [x, y]\n     */\n    graphic.applyTransform = function (target, transform, invert) {\n        if (transform && !zrUtil.isArrayLike(transform)) {\n            transform = Transformable.getLocalTransform(transform);\n        }\n\n        if (invert) {\n            transform = matrix.invert([], transform);\n        }\n        return vector.applyTransform([], target, transform);\n    };\n\n    /**\n     * @param {string} direction 'left' 'right' 'top' 'bottom'\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n     */\n    graphic.transformDirection = function (direction, transform, invert) {\n\n        // Pick a base, ensure that transform result will not be (0, 0).\n        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[0]);\n        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[2]);\n\n        var vertex = [\n            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\n            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\n        ];\n\n        vertex = graphic.applyTransform(vertex, transform, invert);\n\n        return Math.abs(vertex[0]) > Math.abs(vertex[1])\n            ? (vertex[0] > 0 ? 'right' : 'left')\n            : (vertex[1] > 0 ? 'bottom' : 'top');\n    };\n\n    /**\n     * Apply group transition animation from g1 to g2.\n     * If no animatableModel, no animation.\n     */\n    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\n        if (!g1 || !g2) {\n            return;\n        }\n\n        function getElMap(g) {\n            var elMap = {};\n            g.traverse(function (el) {\n                if (!el.isGroup && el.anid) {\n                    elMap[el.anid] = el;\n                }\n            });\n            return elMap;\n        }\n        function getAnimatableProps(el) {\n            var obj = {\n                position: vector.clone(el.position),\n                rotation: el.rotation\n            };\n            if (el.shape) {\n                obj.shape = zrUtil.extend({}, el.shape);\n            }\n            return obj;\n        }\n        var elMap1 = getElMap(g1);\n\n        g2.traverse(function (el) {\n            if (!el.isGroup && el.anid) {\n                var oldEl = elMap1[el.anid];\n                if (oldEl) {\n                    var newProp = getAnimatableProps(el);\n                    el.attr(getAnimatableProps(oldEl));\n                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\n                }\n                // else {\n                //     if (el.previousProps) {\n                //         graphic.updateProps\n                //     }\n                // }\n            }\n        });\n    };\n\n    /**\n     * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n     * @param {Object} rect {x, y, width, height}\n     * @return {Array.<Array.<number>>} A new clipped points.\n     */\n    graphic.clipPointsByRect = function (points, rect) {\n        return zrUtil.map(points, function (point) {\n            var x = point[0];\n            x = mathMax(x, rect.x);\n            x = mathMin(x, rect.x + rect.width);\n            var y = point[1];\n            y = mathMax(y, rect.y);\n            y = mathMin(y, rect.y + rect.height);\n            return [x, y];\n        });\n    };\n\n    /**\n     * @param {Object} targetRect {x, y, width, height}\n     * @param {Object} rect {x, y, width, height}\n     * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n     */\n    graphic.clipRectByRect = function (targetRect, rect) {\n        var x = mathMax(targetRect.x, rect.x);\n        var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n        var y = mathMax(targetRect.y, rect.y);\n        var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n        if (x2 >= x && y2 >= y) {\n            return {\n                x: x,\n                y: y,\n                width: x2 - x,\n                height: y2 - y\n            };\n        }\n    };\n\n    /**\n     * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n     * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n     * @param {Object} [rect] {x, y, width, height}\n     * @return {module:zrender/Element} Icon path or image element.\n     */\n    graphic.createIcon = function (iconStr, opt, rect) {\n        opt = zrUtil.extend({rectHover: true}, opt);\n        var style = opt.style = {strokeNoScale: true};\n        rect = rect || {x: -1, y: -1, width: 2, height: 2};\n\n        if (iconStr) {\n            return iconStr.indexOf('image://') === 0\n                ? (\n                    style.image = iconStr.slice(8),\n                    zrUtil.defaults(style, rect),\n                    new graphic.Image(opt)\n                )\n                : (\n                    graphic.makePath(\n                        iconStr.replace('path://', ''),\n                        opt,\n                        rect,\n                        'center'\n                    )\n                );\n        }\n\n    };\n\n    module.exports = graphic;\n\n\n\n/***/ }),\n\n/***/ 609:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var formatUtil = __webpack_require__(613);\n    var nubmerUtil = __webpack_require__(610);\n    var Model = __webpack_require__(614);\n    var zrUtil = __webpack_require__(606);\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var modelUtil = {};\n\n    /**\n     * If value is not array, then translate it to array.\n     * @param  {*} value\n     * @return {Array} [value] or value\n     */\n    modelUtil.normalizeToArray = function (value) {\n        return value instanceof Array\n            ? value\n            : value == null\n            ? []\n            : [value];\n    };\n\n    /**\n     * Sync default option between normal and emphasis like `position` and `show`\n     * In case some one will write code like\n     *     label: {\n     *         normal: {\n     *             show: false,\n     *             position: 'outside',\n     *             fontSize: 18\n     *         },\n     *         emphasis: {\n     *             show: true\n     *         }\n     *     }\n     * @param {Object} opt\n     * @param {Array.<string>} subOpts\n     */\n     modelUtil.defaultEmphasis = function (opt, subOpts) {\n        if (opt) {\n            var emphasisOpt = opt.emphasis = opt.emphasis || {};\n            var normalOpt = opt.normal = opt.normal || {};\n\n            // Default emphasis option from normal\n            for (var i = 0, len = subOpts.length; i < len; i++) {\n                var subOptName = subOpts[i];\n                if (!emphasisOpt.hasOwnProperty(subOptName)\n                    && normalOpt.hasOwnProperty(subOptName)\n                ) {\n                    emphasisOpt[subOptName] = normalOpt[subOptName];\n                }\n            }\n        }\n    };\n\n    modelUtil.TEXT_STYLE_OPTIONS = [\n        'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n        'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth',\n        'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline',\n        'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY',\n        'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY',\n        'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding'\n    ];\n\n    // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n    //     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n    //     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n    //     // FIXME: deprecated, check and remove it.\n    //     'textStyle'\n    // ]);\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method retieves value from data.\n     * @param {string|number|Date|Array|Object} dataItem\n     * @return {number|string|Date|Array.<number|string|Date>}\n     */\n    modelUtil.getDataItemValue = function (dataItem) {\n        // Performance sensitive.\n        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n    };\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method determine if dataItem has extra option besides value\n     * @param {string|number|Date|Array|Object} dataItem\n     */\n    modelUtil.isDataItemOption = function (dataItem) {\n        return isObject(dataItem)\n            && !(dataItem instanceof Array);\n            // // markLine data can be array\n            // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n    };\n\n    /**\n     * This helper method convert value in data.\n     * @param {string|number|Date} value\n     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n     */\n    modelUtil.converDataValue = function (value, dimInfo) {\n        // Performance sensitive.\n        var dimType = dimInfo && dimInfo.type;\n        if (dimType === 'ordinal') {\n            return value;\n        }\n\n        if (dimType === 'time'\n            // spead up when using timestamp\n            && typeof value !== 'number'\n            && value != null\n            && value !== '-'\n        ) {\n            value = +nubmerUtil.parseDate(value);\n        }\n\n        // dimType defaults 'number'.\n        // If dimType is not ordinal and value is null or undefined or NaN or '-',\n        // parse to NaN.\n        return (value == null || value === '')\n            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n    };\n\n    /**\n     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n     * @param {module:echarts/data/List} data\n     * @param {Object} opt\n     * @param {string} [opt.seriesIndex]\n     * @param {Object} [opt.name]\n     * @param {Object} [opt.mainType]\n     * @param {Object} [opt.subType]\n     */\n    modelUtil.createDataFormatModel = function (data, opt) {\n        var model = new Model();\n        zrUtil.mixin(model, modelUtil.dataFormatMixin);\n        model.seriesIndex = opt.seriesIndex;\n        model.name = opt.name || '';\n        model.mainType = opt.mainType;\n        model.subType = opt.subType;\n\n        model.getData = function () {\n            return data;\n        };\n        return model;\n    };\n\n    // PENDING A little ugly\n    modelUtil.dataFormatMixin = {\n        /**\n         * Get params for formatter\n         * @param {number} dataIndex\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getDataParams: function (dataIndex, dataType) {\n            var data = this.getData(dataType);\n            var rawValue = this.getRawValue(dataIndex, dataType);\n            var rawDataIndex = data.getRawIndex(dataIndex);\n            var name = data.getName(dataIndex, true);\n            var itemOpt = data.getRawDataItem(dataIndex);\n            var color = data.getItemVisual(dataIndex, 'color');\n\n            return {\n                componentType: this.mainType,\n                componentSubType: this.subType,\n                seriesType: this.mainType === 'series' ? this.subType : null,\n                seriesIndex: this.seriesIndex,\n                seriesId: this.id,\n                seriesName: this.name,\n                name: name,\n                dataIndex: rawDataIndex,\n                data: itemOpt,\n                dataType: dataType,\n                value: rawValue,\n                color: color,\n                marker: formatUtil.getTooltipMarker(color),\n\n                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n                $vars: ['seriesName', 'name', 'value']\n            };\n        },\n\n        /**\n         * Format label\n         * @param {number} dataIndex\n         * @param {string} [status='normal'] 'normal' or 'emphasis'\n         * @param {string} [dataType]\n         * @param {number} [dimIndex]\n         * @param {string} [labelProp='label']\n         * @return {string}\n         */\n        getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n            status = status || 'normal';\n            var data = this.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var params = this.getDataParams(dataIndex, dataType);\n            if (dimIndex != null && (params.value instanceof Array)) {\n                params.value = params.value[dimIndex];\n            }\n\n            var formatter = itemModel.get([labelProp || 'label', status, 'formatter']);\n\n            if (typeof formatter === 'function') {\n                params.status = status;\n                return formatter(params);\n            }\n            else if (typeof formatter === 'string') {\n                return formatUtil.formatTpl(formatter, params);\n            }\n        },\n\n        /**\n         * Get raw value in option\n         * @param {number} idx\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getRawValue: function (idx, dataType) {\n            var data = this.getData(dataType);\n            var dataItem = data.getRawDataItem(idx);\n            if (dataItem != null) {\n                return (isObject(dataItem) && !(dataItem instanceof Array))\n                    ? dataItem.value : dataItem;\n            }\n        },\n\n        /**\n         * Should be implemented.\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         * @return {string} tooltip string\n         */\n        formatTooltip: zrUtil.noop\n    };\n\n    /**\n     * Mapping to exists for merge.\n     *\n     * @public\n     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n     * @param {Object|Array.<Object>} newCptOptions\n     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          index of which is the same as exists.\n     */\n    modelUtil.mappingToExists = function (exists, newCptOptions) {\n        // Mapping by the order by original option (but not order of\n        // new option) in merge mode. Because we should ensure\n        // some specified index (like xAxisIndex) is consistent with\n        // original option, which is easy to understand, espatially in\n        // media query. And in most case, merge option is used to\n        // update partial option but not be expected to change order.\n        newCptOptions = (newCptOptions || []).slice();\n\n        var result = zrUtil.map(exists || [], function (obj, index) {\n            return {exist: obj};\n        });\n\n        // Mapping by id or name if specified.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            // id has highest priority.\n            for (var i = 0; i < result.length; i++) {\n                if (!result[i].option // Consider name: two map to one.\n                    && cptOption.id != null\n                    && result[i].exist.id === cptOption.id + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n\n            for (var i = 0; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option // Consider name: two map to one.\n                    // Can not match when both ids exist but different.\n                    && (exist.id == null || cptOption.id == null)\n                    && cptOption.name != null\n                    && !modelUtil.isIdInner(cptOption)\n                    && !modelUtil.isIdInner(exist)\n                    && exist.name === cptOption.name + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n        });\n\n        // Otherwise mapping by index.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            var i = 0;\n            for (; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option\n                    // Existing model that already has id should be able to\n                    // mapped to (because after mapping performed model may\n                    // be assigned with a id, whish should not affect next\n                    // mapping), except those has inner id.\n                    && !modelUtil.isIdInner(exist)\n                    // Caution:\n                    // Do not overwrite id. But name can be overwritten,\n                    // because axis use name as 'show label text'.\n                    // 'exist' always has id and name and we dont\n                    // need to check it.\n                    && cptOption.id == null\n                ) {\n                    result[i].option = cptOption;\n                    break;\n                }\n            }\n\n            if (i >= result.length) {\n                result.push({option: cptOption});\n            }\n        });\n\n        return result;\n    };\n\n    /**\n     * Make id and name for mapping result (result of mappingToExists)\n     * into `keyInfo` field.\n     *\n     * @public\n     * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          which order is the same as exists.\n     * @return {Array.<Object>} The input.\n     */\n    modelUtil.makeIdAndName = function (mapResult) {\n        // We use this id to hash component models and view instances\n        // in echarts. id can be specified by user, or auto generated.\n\n        // The id generation rule ensures new view instance are able\n        // to mapped to old instance when setOption are called in\n        // no-merge mode. So we generate model id by name and plus\n        // type in view id.\n\n        // name can be duplicated among components, which is convenient\n        // to specify multi components (like series) by one name.\n\n        // Ensure that each id is distinct.\n        var idMap = zrUtil.createHashMap();\n\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            existCpt && idMap.set(existCpt.id, item);\n        });\n\n        each(mapResult, function (item, index) {\n            var opt = item.option;\n\n            zrUtil.assert(\n                !opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item,\n                'id duplicates: ' + (opt && opt.id)\n            );\n\n            opt && opt.id != null && idMap.set(opt.id, item);\n            !item.keyInfo && (item.keyInfo = {});\n        });\n\n        // Make name and id.\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            var opt = item.option;\n            var keyInfo = item.keyInfo;\n\n            if (!isObject(opt)) {\n                return;\n            }\n\n            // name can be overwitten. Consider case: axis.name = '20km'.\n            // But id generated by name will not be changed, which affect\n            // only in that case: setOption with 'not merge mode' and view\n            // instance will be recreated, which can be accepted.\n            keyInfo.name = opt.name != null\n                ? opt.name + ''\n                : existCpt\n                ? existCpt.name\n                : '\\0-'; // name may be displayed on screen, so use '-'.\n\n            if (existCpt) {\n                keyInfo.id = existCpt.id;\n            }\n            else if (opt.id != null) {\n                keyInfo.id = opt.id + '';\n            }\n            else {\n                // Consider this situatoin:\n                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n                // Series with the same name between optionA and optionB\n                // should be mapped.\n                var idNum = 0;\n                do {\n                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n                }\n                while (idMap.get(keyInfo.id));\n            }\n\n            idMap.set(keyInfo.id, item);\n        });\n    };\n\n    /**\n     * @public\n     * @param {Object} cptOption\n     * @return {boolean}\n     */\n    modelUtil.isIdInner = function (cptOption) {\n        return isObject(cptOption)\n            && cptOption.id\n            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n    };\n\n    /**\n     * A helper for removing duplicate items between batchA and batchB,\n     * and in themselves, and categorize by series.\n     *\n     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n     */\n    modelUtil.compressBatches = function (batchA, batchB) {\n        var mapA = {};\n        var mapB = {};\n\n        makeMap(batchA || [], mapA);\n        makeMap(batchB || [], mapB, mapA);\n\n        return [mapToArray(mapA), mapToArray(mapB)];\n\n        function makeMap(sourceBatch, map, otherMap) {\n            for (var i = 0, len = sourceBatch.length; i < len; i++) {\n                var seriesId = sourceBatch[i].seriesId;\n                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\n                var otherDataIndices = otherMap && otherMap[seriesId];\n\n                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n                    var dataIndex = dataIndices[j];\n\n                    if (otherDataIndices && otherDataIndices[dataIndex]) {\n                        otherDataIndices[dataIndex] = null;\n                    }\n                    else {\n                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n                    }\n                }\n            }\n        }\n\n        function mapToArray(map, isData) {\n            var result = [];\n            for (var i in map) {\n                if (map.hasOwnProperty(i) && map[i] != null) {\n                    if (isData) {\n                        result.push(+i);\n                    }\n                    else {\n                        var dataIndices = mapToArray(map[i], true);\n                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\n                    }\n                }\n            }\n            return result;\n        }\n    };\n\n    /**\n     * @param {module:echarts/data/List} data\n     * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n     *                         each of which can be Array or primary type.\n     * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n     */\n    modelUtil.queryDataIndex = function (data, payload) {\n        if (payload.dataIndexInside != null) {\n            return payload.dataIndexInside;\n        }\n        else if (payload.dataIndex != null) {\n            return zrUtil.isArray(payload.dataIndex)\n                ? zrUtil.map(payload.dataIndex, function (value) {\n                    return data.indexOfRawIndex(value);\n                })\n                : data.indexOfRawIndex(payload.dataIndex);\n        }\n        else if (payload.name != null) {\n            return zrUtil.isArray(payload.name)\n                ? zrUtil.map(payload.name, function (value) {\n                    return data.indexOfName(value);\n                })\n                : data.indexOfName(payload.name);\n        }\n    };\n\n    /**\n     * Enable property storage to any host object.\n     * Notice: Serialization is not supported.\n     *\n     * For example:\n     * var get = modelUitl.makeGetter();\n     *\n     * function some(hostObj) {\n     *      get(hostObj)._someProperty = 1212;\n     *      ...\n     * }\n     *\n     * @return {Function}\n     */\n    modelUtil.makeGetter = (function () {\n        var index = 0;\n        return function () {\n            var key = '\\0__ec_prop_getter_' + index++;\n            return function (hostObj) {\n                return hostObj[key] || (hostObj[key] = {});\n            };\n        };\n    })();\n\n    /**\n     * @param {module:echarts/model/Global} ecModel\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex, seriesId, seriesName,\n     *            geoIndex, geoId, geoName,\n     *            bmapIndex, bmapId, bmapName,\n     *            xAxisIndex, xAxisId, xAxisName,\n     *            yAxisIndex, yAxisId, yAxisName,\n     *            gridIndex, gridId, gridName,\n     *            ... (can be extended)\n     *        }\n     *        Each properties can be number|string|Array.<number>|Array.<string>\n     *        For example, a finder could be\n     *        {\n     *            seriesIndex: 3,\n     *            geoId: ['aa', 'cc'],\n     *            gridName: ['xx', 'rr']\n     *        }\n     *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n     *        If nothing or null/undefined specified, return nothing.\n     * @param {Object} [opt]\n     * @param {string} [opt.defaultMainType]\n     * @param {Array.<string>} [opt.includeMainTypes]\n     * @return {Object} result like:\n     *        {\n     *            seriesModels: [seriesModel1, seriesModel2],\n     *            seriesModel: seriesModel1, // The first model\n     *            geoModels: [geoModel1, geoModel2],\n     *            geoModel: geoModel1, // The first model\n     *            ...\n     *        }\n     */\n    modelUtil.parseFinder = function (ecModel, finder, opt) {\n        if (zrUtil.isString(finder)) {\n            var obj = {};\n            obj[finder + 'Index'] = 0;\n            finder = obj;\n        }\n\n        var defaultMainType = opt && opt.defaultMainType;\n        if (defaultMainType\n            && !has(finder, defaultMainType + 'Index')\n            && !has(finder, defaultMainType + 'Id')\n            && !has(finder, defaultMainType + 'Name')\n        ) {\n            finder[defaultMainType + 'Index'] = 0;\n        }\n\n        var result = {};\n\n        each(finder, function (value, key) {\n            var value = finder[key];\n\n            // Exclude 'dataIndex' and other illgal keys.\n            if (key === 'dataIndex' || key === 'dataIndexInside') {\n                result[key] = value;\n                return;\n            }\n\n            var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n            var mainType = parsedKey[1];\n            var queryType = (parsedKey[2] || '').toLowerCase();\n\n            if (!mainType\n                || !queryType\n                || value == null\n                || (queryType === 'index' && value === 'none')\n                || (opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0)\n            ) {\n                return;\n            }\n\n            var queryParam = {mainType: mainType};\n            if (queryType !== 'index' || value !== 'all') {\n                queryParam[queryType] = value;\n            }\n\n            var models = ecModel.queryComponents(queryParam);\n            result[mainType + 'Models'] = models;\n            result[mainType + 'Model'] = models[0];\n        });\n\n        return result;\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string|number} dataDim\n     * @return {string}\n     */\n    modelUtil.dataDimToCoordDim = function (data, dataDim) {\n        var dimensions = data.dimensions;\n        dataDim = data.getDimension(dataDim);\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimItem = data.getDimensionInfo(dimensions[i]);\n            if (dimItem.name === dataDim) {\n                return dimItem.coordDim;\n            }\n        }\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string} coordDim\n     * @return {Array.<string>} data dimensions on the coordDim.\n     */\n    modelUtil.coordDimToDataDim = function (data, coordDim) {\n        var dataDim = [];\n        each(data.dimensions, function (dimName) {\n            var dimItem = data.getDimensionInfo(dimName);\n            if (dimItem.coordDim === coordDim) {\n                dataDim[dimItem.coordDimIndex] = dimItem.name;\n            }\n        });\n        return dataDim;\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string} otherDim Can be `otherDims`\n     *                        like 'label' or 'tooltip'.\n     * @return {Array.<string>} data dimensions on the otherDim.\n     */\n    modelUtil.otherDimToDataDim = function (data, otherDim) {\n        var dataDim = [];\n        each(data.dimensions, function (dimName) {\n            var dimItem = data.getDimensionInfo(dimName);\n            var otherDims = dimItem.otherDims;\n            var dimIndex = otherDims[otherDim];\n            if (dimIndex != null && dimIndex !== false) {\n                dataDim[dimIndex] = dimItem.name;\n            }\n        });\n        return dataDim;\n    };\n\n    function has(obj, prop) {\n        return obj && obj.hasOwnProperty(prop);\n    }\n\n    module.exports = modelUtil;\n\n\n\n/***/ }),\n\n/***/ 610:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 数值处理模块\n * @module echarts/util/number\n */\n\n\n\n    var zrUtil = __webpack_require__(606);\n\n    var number = {};\n\n    var RADIAN_EPSILON = 1e-4;\n\n    function _trim(str) {\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n\n    /**\n     * Linear mapping a value from domain to range\n     * @memberOf module:echarts/util/number\n     * @param  {(number|Array.<number>)} val\n     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n     * @param  {boolean} clamp\n     * @return {(number|Array.<number>}\n     */\n    number.linearMap = function (val, domain, range, clamp) {\n        var subDomain = domain[1] - domain[0];\n        var subRange = range[1] - range[0];\n\n        if (subDomain === 0) {\n            return subRange === 0\n                ? range[0]\n                : (range[0] + range[1]) / 2;\n        }\n\n        // Avoid accuracy problem in edge, such as\n        // 146.39 - 62.83 === 83.55999999999999.\n        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n        // It is a little verbose for efficiency considering this method\n        // is a hotspot.\n        if (clamp) {\n            if (subDomain > 0) {\n                if (val <= domain[0]) {\n                    return range[0];\n                }\n                else if (val >= domain[1]) {\n                    return range[1];\n                }\n            }\n            else {\n                if (val >= domain[0]) {\n                    return range[0];\n                }\n                else if (val <= domain[1]) {\n                    return range[1];\n                }\n            }\n        }\n        else {\n            if (val === domain[0]) {\n                return range[0];\n            }\n            if (val === domain[1]) {\n                return range[1];\n            }\n        }\n\n        return (val - domain[0]) / subDomain * subRange + range[0];\n    };\n\n    /**\n     * Convert a percent string to absolute number.\n     * Returns NaN if percent is not a valid string or number\n     * @memberOf module:echarts/util/number\n     * @param {string|number} percent\n     * @param {number} all\n     * @return {number}\n     */\n    number.parsePercent = function(percent, all) {\n        switch (percent) {\n            case 'center':\n            case 'middle':\n                percent = '50%';\n                break;\n            case 'left':\n            case 'top':\n                percent = '0%';\n                break;\n            case 'right':\n            case 'bottom':\n                percent = '100%';\n                break;\n        }\n        if (typeof percent === 'string') {\n            if (_trim(percent).match(/%$/)) {\n                return parseFloat(percent) / 100 * all;\n            }\n\n            return parseFloat(percent);\n        }\n\n        return percent == null ? NaN : +percent;\n    };\n\n    /**\n     * (1) Fix rounding error of float numbers.\n     * (2) Support return string to avoid scientific notation like '3.5e-7'.\n     *\n     * @param {number} x\n     * @param {number} [precision]\n     * @param {boolean} [returnStr]\n     * @return {number|string}\n     */\n    number.round = function (x, precision, returnStr) {\n        if (precision == null) {\n            precision = 10;\n        }\n        // Avoid range error\n        precision = Math.min(Math.max(0, precision), 20);\n        x = (+x).toFixed(precision);\n        return returnStr ? x : +x;\n    };\n\n    number.asc = function (arr) {\n        arr.sort(function (a, b) {\n            return a - b;\n        });\n        return arr;\n    };\n\n    /**\n     * Get precision\n     * @param {number} val\n     */\n    number.getPrecision = function (val) {\n        val = +val;\n        if (isNaN(val)) {\n            return 0;\n        }\n        // It is much faster than methods converting number to string as follows\n        //      var tmp = val.toString();\n        //      return tmp.length - 1 - tmp.indexOf('.');\n        // especially when precision is low\n        var e = 1;\n        var count = 0;\n        while (Math.round(val * e) / e !== val) {\n            e *= 10;\n            count++;\n        }\n        return count;\n    };\n\n    /**\n     * @param {string|number} val\n     * @return {number}\n     */\n    number.getPrecisionSafe = function (val) {\n        var str = val.toString();\n\n        // Consider scientific notation: '3.4e-12' '3.4e+12'\n        var eIndex = str.indexOf('e');\n        if (eIndex > 0) {\n            var precision = +str.slice(eIndex + 1);\n            return precision < 0 ? -precision : 0;\n        }\n        else {\n            var dotIndex = str.indexOf('.');\n            return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n        }\n    };\n\n    /**\n     * Minimal dicernible data precisioin according to a single pixel.\n     *\n     * @param {Array.<number>} dataExtent\n     * @param {Array.<number>} pixelExtent\n     * @return {number} precision\n     */\n    number.getPixelPrecision = function (dataExtent, pixelExtent) {\n        var log = Math.log;\n        var LN10 = Math.LN10;\n        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n        // toFixed() digits argument must be between 0 and 20.\n        var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n        return !isFinite(precision) ? 20 : precision;\n    };\n\n    /**\n     * Get a data of given precision, assuring the sum of percentages\n     * in valueList is 1.\n     * The largest remainer method is used.\n     * https://en.wikipedia.org/wiki/Largest_remainder_method\n     *\n     * @param {Array.<number>} valueList a list of all data\n     * @param {number} idx index of the data to be processed in valueList\n     * @param {number} precision integer number showing digits of precision\n     * @return {number} percent ranging from 0 to 100\n     */\n    number.getPercentWithPrecision = function (valueList, idx, precision) {\n        if (!valueList[idx]) {\n            return 0;\n        }\n\n        var sum = zrUtil.reduce(valueList, function (acc, val) {\n            return acc + (isNaN(val) ? 0 : val);\n        }, 0);\n        if (sum === 0) {\n            return 0;\n        }\n\n        var digits = Math.pow(10, precision);\n        var votesPerQuota = zrUtil.map(valueList, function (val) {\n            return (isNaN(val) ? 0 : val) / sum * digits * 100;\n        });\n        var targetSeats = digits * 100;\n\n        var seats = zrUtil.map(votesPerQuota, function (votes) {\n            // Assign automatic seats.\n            return Math.floor(votes);\n        });\n        var currentSum = zrUtil.reduce(seats, function (acc, val) {\n            return acc + val;\n        }, 0);\n\n        var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n            return votes - seats[idx];\n        });\n\n        // Has remainding votes.\n        while (currentSum < targetSeats) {\n            // Find next largest remainder.\n            var max = Number.NEGATIVE_INFINITY;\n            var maxId = null;\n            for (var i = 0, len = remainder.length; i < len; ++i) {\n                if (remainder[i] > max) {\n                    max = remainder[i];\n                    maxId = i;\n                }\n            }\n\n            // Add a vote to max remainder.\n            ++seats[maxId];\n            remainder[maxId] = 0;\n            ++currentSum;\n        }\n\n        return seats[idx] / digits;\n    };\n\n    // Number.MAX_SAFE_INTEGER, ie do not support.\n    number.MAX_SAFE_INTEGER = 9007199254740991;\n\n    /**\n     * To 0 - 2 * PI, considering negative radian.\n     * @param {number} radian\n     * @return {number}\n     */\n    number.remRadian = function (radian) {\n        var pi2 = Math.PI * 2;\n        return (radian % pi2 + pi2) % pi2;\n    };\n\n    /**\n     * @param {type} radian\n     * @return {boolean}\n     */\n    number.isRadianAroundZero = function (val) {\n        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n    };\n\n    var TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n    /**\n     * @return {number} in minutes\n     */\n    number.getTimezoneOffset = function () {\n        return (new Date()).getTimezoneOffset();\n    };\n\n    /**\n     * @param {string|Date|number} value These values can be accepted:\n     *   + An instance of Date, represent a time in its own time zone.\n     *   + Or string in a subset of ISO 8601, only including:\n     *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n     *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n     *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n     *     all of which will be treated as local time if time zone is not specified\n     *     (see <https://momentjs.com/>).\n     *   + Or other string format, including (all of which will be treated as loacal time):\n     *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n     *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n     *   + a timestamp, which represent a time in UTC.\n     * @return {Date} date\n     */\n    number.parseDate = function (value) {\n        if (value instanceof Date) {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            // Different browsers parse date in different way, so we parse it manually.\n            // Some other issues:\n            // new Date('1970-01-01') is UTC,\n            // new Date('1970/01/01') and new Date('1970-1-01') is local.\n            // See issue #3623\n            var match = TIME_REG.exec(value);\n\n            if (!match) {\n                // return Invalid Date.\n                return new Date(NaN);\n            }\n\n            var timezoneOffset = number.getTimezoneOffset();\n            var timeOffset = !match[8]\n                ? 0\n                : match[8].toUpperCase() === 'Z'\n                ? timezoneOffset\n                : +match[8].slice(0, 3) * 60 + timezoneOffset;\n\n            // match[n] can only be string or undefined.\n            // But take care of '12' + 1 => '121'.\n            return new Date(\n                +match[1],\n                +(match[2] || 1) - 1,\n                +match[3] || 1,\n                +match[4] || 0,\n                +(match[5] || 0) - timeOffset,\n                +match[6] || 0,\n                +match[7] || 0\n            );\n        }\n        else if (value == null) {\n            return new Date(NaN);\n        }\n\n        return new Date(Math.round(value));\n    };\n\n    /**\n     * Quantity of a number. e.g. 0.1, 1, 10, 100\n     *\n     * @param  {number} val\n     * @return {number}\n     */\n    number.quantity = function (val) {\n        return Math.pow(10, quantityExponent(val));\n    };\n\n    function quantityExponent(val) {\n        return Math.floor(Math.log(val) / Math.LN10);\n    }\n\n    /**\n     * find a “nice” number approximately equal to x. Round the number if round = true,\n     * take ceiling if round = false. The primary observation is that the “nicest”\n     * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n     *\n     * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n     *\n     * @param  {number} val Non-negative value.\n     * @param  {boolean} round\n     * @return {number}\n     */\n    number.nice = function (val, round) {\n        var exponent = quantityExponent(val);\n        var exp10 = Math.pow(10, exponent);\n        var f = val / exp10; // 1 <= f < 10\n        var nf;\n        if (round) {\n            if (f < 1.5) { nf = 1; }\n            else if (f < 2.5) { nf = 2; }\n            else if (f < 4) { nf = 3; }\n            else if (f < 7) { nf = 5; }\n            else { nf = 10; }\n        }\n        else {\n            if (f < 1) { nf = 1; }\n            else if (f < 2) { nf = 2; }\n            else if (f < 3) { nf = 3; }\n            else if (f < 5) { nf = 5; }\n            else { nf = 10; }\n        }\n        val = nf * exp10;\n\n        // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n        // 20 is the uppper bound of toFixed.\n        return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n    };\n\n    /**\n     * Order intervals asc, and split them when overlap.\n     * expect(numberUtil.reformIntervals([\n     *     {interval: [18, 62], close: [1, 1]},\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [1, 1]},\n     *     {interval: [62, 150], close: [1, 1]},\n     *     {interval: [106, 150], close: [1, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ])).toEqual([\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [0, 1]},\n     *     {interval: [18, 62], close: [0, 1]},\n     *     {interval: [62, 150], close: [0, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ]);\n     * @param {Array.<Object>} list, where `close` mean open or close\n     *        of the interval, and Infinity can be used.\n     * @return {Array.<Object>} The origin list, which has been reformed.\n     */\n    number.reformIntervals = function (list) {\n        list.sort(function (a, b) {\n            return littleThan(a, b, 0) ? -1 : 1;\n        });\n\n        var curr = -Infinity;\n        var currClose = 1;\n        for (var i = 0; i < list.length;) {\n            var interval = list[i].interval;\n            var close = list[i].close;\n\n            for (var lg = 0; lg < 2; lg++) {\n                if (interval[lg] <= curr) {\n                    interval[lg] = curr;\n                    close[lg] = !lg ? 1 - currClose : 1;\n                }\n                curr = interval[lg];\n                currClose = close[lg];\n            }\n\n            if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n                list.splice(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n\n        return list;\n\n        function littleThan(a, b, lg) {\n            return a.interval[lg] < b.interval[lg]\n                || (\n                    a.interval[lg] === b.interval[lg]\n                    && (\n                        (a.close[lg] - b.close[lg] === (!lg ? 1 : -1))\n                        || (!lg && littleThan(a, b, 1))\n                    )\n                );\n        }\n    };\n\n    /**\n     * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n     * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n     * subtraction forces infinities to NaN\n     *\n     * @param {*} v\n     * @return {boolean}\n     */\n    number.isNumeric = function (v) {\n        return v - parseFloat(v) >= 0;\n    };\n\n    module.exports = number;\n\n\n/***/ }),\n\n/***/ 611:\n/***/ (function(module, exports) {\n\n\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n\n    /**\n     * @typedef {Float32Array|Array.<number>} Vector2\n     */\n    /**\n     * 二维向量类\n     * @exports zrender/tool/vector\n     */\n    var vector = {\n        /**\n         * 创建一个向量\n         * @param {number} [x=0]\n         * @param {number} [y=0]\n         * @return {Vector2}\n         */\n        create: function (x, y) {\n            var out = new ArrayCtor(2);\n            if (x == null) {\n                x = 0;\n            }\n            if (y == null) {\n                y = 0;\n            }\n            out[0] = x;\n            out[1] = y;\n            return out;\n        },\n\n        /**\n         * 复制向量数据\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        copy: function (out, v) {\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 克隆一个向量\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        clone: function (v) {\n            var out = new ArrayCtor(2);\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 设置向量的两个项\n         * @param {Vector2} out\n         * @param {number} a\n         * @param {number} b\n         * @return {Vector2} 结果\n         */\n        set: function (out, a, b) {\n            out[0] = a;\n            out[1] = b;\n            return out;\n        },\n\n        /**\n         * 向量相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        add: function (out, v1, v2) {\n            out[0] = v1[0] + v2[0];\n            out[1] = v1[1] + v2[1];\n            return out;\n        },\n\n        /**\n         * 向量缩放后相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} a\n         */\n        scaleAndAdd: function (out, v1, v2, a) {\n            out[0] = v1[0] + v2[0] * a;\n            out[1] = v1[1] + v2[1] * a;\n            return out;\n        },\n\n        /**\n         * 向量相减\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        sub: function (out, v1, v2) {\n            out[0] = v1[0] - v2[0];\n            out[1] = v1[1] - v2[1];\n            return out;\n        },\n\n        /**\n         * 向量长度\n         * @param {Vector2} v\n         * @return {number}\n         */\n        len: function (v) {\n            return Math.sqrt(this.lenSquare(v));\n        },\n\n        /**\n         * 向量长度平方\n         * @param {Vector2} v\n         * @return {number}\n         */\n        lenSquare: function (v) {\n            return v[0] * v[0] + v[1] * v[1];\n        },\n\n        /**\n         * 向量乘法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        mul: function (out, v1, v2) {\n            out[0] = v1[0] * v2[0];\n            out[1] = v1[1] * v2[1];\n            return out;\n        },\n\n        /**\n         * 向量除法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        div: function (out, v1, v2) {\n            out[0] = v1[0] / v2[0];\n            out[1] = v1[1] / v2[1];\n            return out;\n        },\n\n        /**\n         * 向量点乘\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        dot: function (v1, v2) {\n            return v1[0] * v2[0] + v1[1] * v2[1];\n        },\n\n        /**\n         * 向量缩放\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {number} s\n         */\n        scale: function (out, v, s) {\n            out[0] = v[0] * s;\n            out[1] = v[1] * s;\n            return out;\n        },\n\n        /**\n         * 向量归一化\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        normalize: function (out, v) {\n            var d = vector.len(v);\n            if (d === 0) {\n                out[0] = 0;\n                out[1] = 0;\n            }\n            else {\n                out[0] = v[0] / d;\n                out[1] = v[1] / d;\n            }\n            return out;\n        },\n\n        /**\n         * 计算向量间距离\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distance: function (v1, v2) {\n            return Math.sqrt(\n                (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1])\n            );\n        },\n\n        /**\n         * 向量距离平方\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distanceSquare: function (v1, v2) {\n            return (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n        },\n\n        /**\n         * 求负向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        negate: function (out, v) {\n            out[0] = -v[0];\n            out[1] = -v[1];\n            return out;\n        },\n\n        /**\n         * 插值两个点\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} t\n         */\n        lerp: function (out, v1, v2, t) {\n            out[0] = v1[0] + t * (v2[0] - v1[0]);\n            out[1] = v1[1] + t * (v2[1] - v1[1]);\n            return out;\n        },\n\n        /**\n         * 矩阵左乘向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {Vector2} m\n         */\n        applyTransform: function (out, v, m) {\n            var x = v[0];\n            var y = v[1];\n            out[0] = m[0] * x + m[2] * y + m[4];\n            out[1] = m[1] * x + m[3] * y + m[5];\n            return out;\n        },\n        /**\n         * 求两个向量最小值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        min: function (out, v1, v2) {\n            out[0] = Math.min(v1[0], v2[0]);\n            out[1] = Math.min(v1[1], v2[1]);\n            return out;\n        },\n        /**\n         * 求两个向量最大值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        max: function (out, v1, v2) {\n            out[0] = Math.max(v1[0], v2[0]);\n            out[1] = Math.max(v1[1], v2[1]);\n            return out;\n        }\n    };\n\n    vector.length = vector.len;\n    vector.lengthSquare = vector.lenSquare;\n    vector.dist = vector.distance;\n    vector.distSquare = vector.distanceSquare;\n\n    module.exports = vector;\n\n\n\n/***/ }),\n\n/***/ 612:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Path element\n * @module zrender/graphic/Path\n */\n\n\n\n    var Displayable = __webpack_require__(644);\n    var zrUtil = __webpack_require__(606);\n    var PathProxy = __webpack_require__(635);\n    var pathContain = __webpack_require__(776);\n\n    var Pattern = __webpack_require__(675);\n    var getCanvasPattern = Pattern.prototype.getCanvasPattern;\n\n    var abs = Math.abs;\n\n    var pathProxyForDraw = new PathProxy(true);\n    /**\n     * @alias module:zrender/graphic/Path\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function Path(opts) {\n        Displayable.call(this, opts);\n\n        /**\n         * @type {module:zrender/core/PathProxy}\n         * @readOnly\n         */\n        this.path = null;\n    }\n\n    Path.prototype = {\n\n        constructor: Path,\n\n        type: 'path',\n\n        __dirtyPath: true,\n\n        strokeContainThreshold: 5,\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var path = this.path || pathProxyForDraw;\n            var hasStroke = style.hasStroke();\n            var hasFill = style.hasFill();\n            var fill = style.fill;\n            var stroke = style.stroke;\n            var hasFillGradient = hasFill && !!(fill.colorStops);\n            var hasStrokeGradient = hasStroke && !!(stroke.colorStops);\n            var hasFillPattern = hasFill && !!(fill.image);\n            var hasStrokePattern = hasStroke && !!(stroke.image);\n\n            style.bind(ctx, this, prevEl);\n            this.setTransform(ctx);\n\n            if (this.__dirty) {\n                var rect;\n                // Update gradient because bounding rect may changed\n                if (hasFillGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._fillGradient = style.getGradient(ctx, fill, rect);\n                }\n                if (hasStrokeGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._strokeGradient = style.getGradient(ctx, stroke, rect);\n                }\n            }\n            // Use the gradient or pattern\n            if (hasFillGradient) {\n                // PENDING If may have affect the state\n                ctx.fillStyle = this._fillGradient;\n            }\n            else if (hasFillPattern) {\n                ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n            }\n            if (hasStrokeGradient) {\n                ctx.strokeStyle = this._strokeGradient;\n            }\n            else if (hasStrokePattern) {\n                ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n            }\n\n            var lineDash = style.lineDash;\n            var lineDashOffset = style.lineDashOffset;\n\n            var ctxLineDash = !!ctx.setLineDash;\n\n            // Update path sx, sy\n            var scale = this.getGlobalScale();\n            path.setScale(scale[0], scale[1]);\n\n            // Proxy context\n            // Rebuild path in following 2 cases\n            // 1. Path is dirty\n            // 2. Path needs javascript implemented lineDash stroking.\n            //    In this case, lineDash information will not be saved in PathProxy\n            if (this.__dirtyPath\n                || (lineDash && !ctxLineDash && hasStroke)\n            ) {\n                path.beginPath(ctx);\n\n                // Setting line dash before build path\n                if (lineDash && !ctxLineDash) {\n                    path.setLineDash(lineDash);\n                    path.setLineDashOffset(lineDashOffset);\n                }\n\n                this.buildPath(path, this.shape, false);\n\n                // Clear path dirty flag\n                if (this.path) {\n                    this.__dirtyPath = false;\n                }\n            }\n            else {\n                // Replay path building\n                ctx.beginPath();\n                this.path.rebuildPath(ctx);\n            }\n\n            hasFill && path.fill(ctx);\n\n            if (lineDash && ctxLineDash) {\n                ctx.setLineDash(lineDash);\n                ctx.lineDashOffset = lineDashOffset;\n            }\n\n            hasStroke && path.stroke(ctx);\n\n            if (lineDash && ctxLineDash) {\n                // PENDING\n                // Remove lineDash\n                ctx.setLineDash([]);\n            }\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n        // Like in circle\n        buildPath: function (ctx, shapeCfg, inBundle) {},\n\n        createPathProxy: function () {\n            this.path = new PathProxy();\n        },\n\n        getBoundingRect: function () {\n            var rect = this._rect;\n            var style = this.style;\n            var needsUpdateRect = !rect;\n            if (needsUpdateRect) {\n                var path = this.path;\n                if (!path) {\n                    // Create path on demand.\n                    path = this.path = new PathProxy();\n                }\n                if (this.__dirtyPath) {\n                    path.beginPath();\n                    this.buildPath(path, this.shape, false);\n                }\n                rect = path.getBoundingRect();\n            }\n            this._rect = rect;\n\n            if (style.hasStroke()) {\n                // Needs update rect with stroke lineWidth when\n                // 1. Element changes scale or lineWidth\n                // 2. Shape is changed\n                var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n                if (this.__dirty || needsUpdateRect) {\n                    rectWithStroke.copy(rect);\n                    // FIXME Must after updateTransform\n                    var w = style.lineWidth;\n                    // PENDING, Min line width is needed when line is horizontal or vertical\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n\n                    // Only add extra hover lineWidth when there are no fill\n                    if (!style.hasFill()) {\n                        w = Math.max(w, this.strokeContainThreshold || 4);\n                    }\n                    // Consider line width\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        rectWithStroke.width += w / lineScale;\n                        rectWithStroke.height += w / lineScale;\n                        rectWithStroke.x -= w / lineScale / 2;\n                        rectWithStroke.y -= w / lineScale / 2;\n                    }\n                }\n\n                // Return rect with stroke\n                return rectWithStroke;\n            }\n\n            return rect;\n        },\n\n        contain: function (x, y) {\n            var localPos = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            var style = this.style;\n            x = localPos[0];\n            y = localPos[1];\n\n            if (rect.contain(x, y)) {\n                var pathData = this.path.data;\n                if (style.hasStroke()) {\n                    var lineWidth = style.lineWidth;\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        // Only add extra hover lineWidth when there are no fill\n                        if (!style.hasFill()) {\n                            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n                        }\n                        if (pathContain.containStroke(\n                            pathData, lineWidth / lineScale, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                }\n                if (style.hasFill()) {\n                    return pathContain.contain(pathData, x, y);\n                }\n            }\n            return false;\n        },\n\n        /**\n         * @param  {boolean} dirtyPath\n         */\n        dirty: function (dirtyPath) {\n            if (dirtyPath == null) {\n                dirtyPath = true;\n            }\n            // Only mark dirty, not mark clean\n            if (dirtyPath) {\n                this.__dirtyPath = dirtyPath;\n                this._rect = null;\n            }\n\n            this.__dirty = true;\n\n            this.__zr && this.__zr.refresh();\n\n            // Used as a clipping path\n            if (this.__clipTarget) {\n                this.__clipTarget.dirty();\n            }\n        },\n\n        /**\n         * Alias for animate('shape')\n         * @param {boolean} loop\n         */\n        animateShape: function (loop) {\n            return this.animate('shape', loop);\n        },\n\n        // Overwrite attrKV\n        attrKV: function (key, value) {\n            // FIXME\n            if (key === 'shape') {\n                this.setShape(value);\n                this.__dirtyPath = true;\n                this._rect = null;\n            }\n            else {\n                Displayable.prototype.attrKV.call(this, key, value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setShape: function (key, value) {\n            var shape = this.shape;\n            // Path from string may not have shape\n            if (shape) {\n                if (zrUtil.isObject(key)) {\n                    for (var name in key) {\n                        if (key.hasOwnProperty(name)) {\n                            shape[name] = key[name];\n                        }\n                    }\n                }\n                else {\n                    shape[key] = value;\n                }\n                this.dirty(true);\n            }\n            return this;\n        },\n\n        getLineScale: function () {\n            var m = this.transform;\n            // Get the line scale.\n            // Determinant of `m` means how much the area is enlarged by the\n            // transformation. So its square root can be used as a scale factor\n            // for width.\n            return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\n                ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\n                : 1;\n        }\n    };\n\n    /**\n     * 扩展一个 Path element, 比如星形，圆等。\n     * Extend a path element\n     * @param {Object} props\n     * @param {string} props.type Path type\n     * @param {Function} props.init Initialize\n     * @param {Function} props.buildPath Overwrite buildPath method\n     * @param {Object} [props.style] Extended default style config\n     * @param {Object} [props.shape] Extended default shape config\n     */\n    Path.extend = function (defaults) {\n        var Sub = function (opts) {\n            Path.call(this, opts);\n\n            if (defaults.style) {\n                // Extend default style\n                this.style.extendFrom(defaults.style, false);\n            }\n\n            // Extend default shape\n            var defaultShape = defaults.shape;\n            if (defaultShape) {\n                this.shape = this.shape || {};\n                var thisShape = this.shape;\n                for (var name in defaultShape) {\n                    if (\n                        ! thisShape.hasOwnProperty(name)\n                        && defaultShape.hasOwnProperty(name)\n                    ) {\n                        thisShape[name] = defaultShape[name];\n                    }\n                }\n            }\n\n            defaults.init && defaults.init.call(this, opts);\n        };\n\n        zrUtil.inherits(Sub, Path);\n\n        // FIXME 不能 extend position, rotation 等引用对象\n        for (var name in defaults) {\n            // Extending prototype values and methods\n            if (name !== 'style' && name !== 'shape') {\n                Sub.prototype[name] = defaults[name];\n            }\n        }\n\n        return Sub;\n    };\n\n    zrUtil.inherits(Path, Displayable);\n\n    module.exports = Path;\n\n\n/***/ }),\n\n/***/ 613:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var numberUtil = __webpack_require__(610);\n    var textContain = __webpack_require__(621);\n\n    var formatUtil = {};\n\n    /**\n     * 每三位默认加,格式化\n     * @param {string|number} x\n     * @return {string}\n     */\n    formatUtil.addCommas = function (x) {\n        if (isNaN(x)) {\n            return '-';\n        }\n        x = (x + '').split('.');\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\n               + (x.length > 1 ? ('.' + x[1]) : '');\n    };\n\n    /**\n     * @param {string} str\n     * @param {boolean} [upperCaseFirst=false]\n     * @return {string} str\n     */\n    formatUtil.toCamelCase = function (str, upperCaseFirst) {\n        str = (str || '').toLowerCase().replace(/-(.)/g, function(match, group1) {\n            return group1.toUpperCase();\n        });\n\n        if (upperCaseFirst && str) {\n            str = str.charAt(0).toUpperCase() + str.slice(1);\n        }\n\n        return str;\n    };\n\n    formatUtil.normalizeCssArray = zrUtil.normalizeCssArray;\n\n    var encodeHTML = formatUtil.encodeHTML = function (source) {\n        return String(source)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    };\n\n    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\n    var wrapVar = function (varName, seriesIdx) {\n        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n    };\n\n    /**\n     * Template formatter\n     * @param {string} tpl\n     * @param {Array.<Object>|Object} paramsList\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTpl = function (tpl, paramsList, encode) {\n        if (!zrUtil.isArray(paramsList)) {\n            paramsList = [paramsList];\n        }\n        var seriesLen = paramsList.length;\n        if (!seriesLen) {\n            return '';\n        }\n\n        var $vars = paramsList[0].$vars || [];\n        for (var i = 0; i < $vars.length; i++) {\n            var alias = TPL_VAR_ALIAS[i];\n            var val = wrapVar(alias, 0);\n            tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n        }\n        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n            for (var k = 0; k < $vars.length; k++) {\n                var val = paramsList[seriesIdx][$vars[k]];\n                tpl = tpl.replace(\n                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\n                    encode ? encodeHTML(val) : val\n                );\n            }\n        }\n\n        return tpl;\n    };\n\n    /**\n     * simple Template formatter\n     *\n     * @param {string} tpl\n     * @param {Object} param\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTplSimple = function (tpl, param, encode) {\n        zrUtil.each(param, function (value, key) {\n            tpl = tpl.replace(\n                '{' + key + '}',\n                encode ? encodeHTML(value) : value\n            );\n        });\n        return tpl;\n    };\n\n    /**\n     * @param {string} color\n     * @param {string} [extraCssText]\n     * @return {string}\n     */\n    formatUtil.getTooltipMarker = function (color, extraCssText) {\n        return color\n            ? '<span style=\"display:inline-block;margin-right:5px;'\n                + 'border-radius:10px;width:9px;height:9px;background-color:'\n                + formatUtil.encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>'\n            : '';\n    };\n\n    /**\n     * @param {string} str\n     * @return {string}\n     * @inner\n     */\n    var s2d = function (str) {\n        return str < 10 ? ('0' + str) : str;\n    };\n\n    /**\n     * ISO Date format\n     * @param {string} tpl\n     * @param {number} value\n     * @param {boolean} [isUTC=false] Default in local time.\n     *           see `module:echarts/scale/Time`\n     *           and `module:echarts/util/number#parseDate`.\n     * @inner\n     */\n    formatUtil.formatTime = function (tpl, value, isUTC) {\n        if (tpl === 'week'\n            || tpl === 'month'\n            || tpl === 'quarter'\n            || tpl === 'half-year'\n            || tpl === 'year'\n        ) {\n            tpl = 'MM-dd\\nyyyy';\n        }\n\n        var date = numberUtil.parseDate(value);\n        var utc = isUTC ? 'UTC' : '';\n        var y = date['get' + utc + 'FullYear']();\n        var M = date['get' + utc + 'Month']() + 1;\n        var d = date['get' + utc + 'Date']();\n        var h = date['get' + utc + 'Hours']();\n        var m = date['get' + utc + 'Minutes']();\n        var s = date['get' + utc + 'Seconds']();\n\n        tpl = tpl.replace('MM', s2d(M))\n            .replace('M', M)\n            .replace('yyyy', y)\n            .replace('yy', y % 100)\n            .replace('dd', s2d(d))\n            .replace('d', d)\n            .replace('hh', s2d(h))\n            .replace('h', h)\n            .replace('mm', s2d(m))\n            .replace('m', m)\n            .replace('ss', s2d(s))\n            .replace('s', s);\n\n        return tpl;\n    };\n\n    /**\n     * Capital first\n     * @param {string} str\n     * @return {string}\n     */\n    formatUtil.capitalFirst = function (str) {\n        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n    };\n\n    formatUtil.truncateText = textContain.truncateText;\n\n    formatUtil.getTextRect = textContain.getBoundingRect;\n\n    module.exports = formatUtil;\n\n\n\n/***/ }),\n\n/***/ 614:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/model/Model\n */\n\n\n    var zrUtil = __webpack_require__(606);\n    var clazzUtil = __webpack_require__(616);\n    var env = __webpack_require__(615);\n\n    /**\n     * @alias module:echarts/model/Model\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} [parentModel]\n     * @param {module:echarts/model/Global} [ecModel]\n     */\n    function Model(option, parentModel, ecModel) {\n        /**\n         * @type {module:echarts/model/Model}\n         * @readOnly\n         */\n        this.parentModel = parentModel;\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        this.option = option;\n\n        // Simple optimization\n        // if (this.init) {\n        //     if (arguments.length <= 4) {\n        //         this.init(option, parentModel, ecModel, extraOpt);\n        //     }\n        //     else {\n        //         this.init.apply(this, arguments);\n        //     }\n        // }\n    }\n\n    Model.prototype = {\n\n        constructor: Model,\n\n        /**\n         * Model 的初始化函数\n         * @param {Object} option\n         */\n        init: null,\n\n        /**\n         * 从新的 Option merge\n         */\n        mergeOption: function (option) {\n            zrUtil.merge(this.option, option, true);\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        get: function (path, ignoreParent) {\n            if (path == null) {\n                return this.option;\n            }\n\n            return doGet(\n                this.option,\n                this.parsePath(path),\n                !ignoreParent && getParent(this, path)\n            );\n        },\n\n        /**\n         * @param {string} key\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        getShallow: function (key, ignoreParent) {\n            var option = this.option;\n\n            var val = option == null ? option : option[key];\n            var parentModel = !ignoreParent && getParent(this, key);\n            if (val == null && parentModel) {\n                val = parentModel.getShallow(key);\n            }\n            return val;\n        },\n\n        /**\n         * @param {string|Array.<string>} [path]\n         * @param {module:echarts/model/Model} [parentModel]\n         * @return {module:echarts/model/Model}\n         */\n        getModel: function (path, parentModel) {\n            var obj = path == null\n                ? this.option\n                : doGet(this.option, path = this.parsePath(path));\n\n            var thisParentModel;\n            parentModel = parentModel || (\n                (thisParentModel = getParent(this, path))\n                    && thisParentModel.getModel(path)\n            );\n\n            return new Model(obj, parentModel, this.ecModel);\n        },\n\n        /**\n         * If model has option\n         */\n        isEmpty: function () {\n            return this.option == null;\n        },\n\n        restoreData: function () {},\n\n        // Pending\n        clone: function () {\n            var Ctor = this.constructor;\n            return new Ctor(zrUtil.clone(this.option));\n        },\n\n        setReadOnly: function (properties) {\n            clazzUtil.setReadOnly(this, properties);\n        },\n\n        // If path is null/undefined, return null/undefined.\n        parsePath: function(path) {\n            if (typeof path === 'string') {\n                path = path.split('.');\n            }\n            return path;\n        },\n\n        /**\n         * @param {Function} getParentMethod\n         *        param {Array.<string>|string} path\n         *        return {module:echarts/model/Model}\n         */\n        customizeGetParent: function (getParentMethod) {\n            clazzUtil.set(this, 'getParent', getParentMethod);\n        },\n\n        isAnimationEnabled: function () {\n            if (!env.node) {\n                if (this.option.animation != null) {\n                    return !!this.option.animation;\n                }\n                else if (this.parentModel) {\n                    return this.parentModel.isAnimationEnabled();\n                }\n            }\n        }\n    };\n\n    function doGet(obj, pathArr, parentModel) {\n        for (var i = 0; i < pathArr.length; i++) {\n            // Ignore empty\n            if (!pathArr[i]) {\n                continue;\n            }\n            // obj could be number/string/... (like 0)\n            obj = (obj && typeof obj === 'object') ? obj[pathArr[i]] : null;\n            if (obj == null) {\n                break;\n            }\n        }\n        if (obj == null && parentModel) {\n            obj = parentModel.get(pathArr);\n        }\n        return obj;\n    }\n\n    // `path` can be null/undefined\n    function getParent(model, path) {\n        var getParentMethod = clazzUtil.get(model, 'getParent');\n        return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n    }\n\n    // Enable Model.extend.\n    clazzUtil.enableClassExtend(Model);\n\n    var mixin = zrUtil.mixin;\n    mixin(Model, __webpack_require__(749));\n    mixin(Model, __webpack_require__(746));\n    mixin(Model, __webpack_require__(750));\n    mixin(Model, __webpack_require__(748));\n\n    module.exports = Model;\n\n\n/***/ }),\n\n/***/ 615:\n/***/ (function(module, exports) {\n\n/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\n\n    var env = {};\n    if (typeof navigator === 'undefined') {\n        // In node\n        env = {\n            browser: {},\n            os: {},\n            node: true,\n            // Assume canvas is supported\n            canvasSupported: true\n        };\n    }\n    else {\n        env = detect(navigator.userAgent);\n    }\n\n    module.exports = env;\n\n    // Zepto.js\n    // (c) 2010-2013 Thomas Fuchs\n    // Zepto.js may be freely distributed under the MIT license.\n\n    function detect(ua) {\n        var os = {};\n        var browser = {};\n        // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n        // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n        // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n        // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n        // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n        // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n        // var touchpad = webos && ua.match(/TouchPad/);\n        // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n        // var silk = ua.match(/Silk\\/([\\d._]+)/);\n        // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n        // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n        // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n        // var playbook = ua.match(/PlayBook/);\n        // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n        var firefox = ua.match(/Firefox\\/([\\d.]+)/);\n        // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n        // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n        var ie = ua.match(/MSIE\\s([\\d.]+)/)\n            // IE 11 Trident/7.0; rv:11.0\n            || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n        var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n        var weChat = (/micromessenger/i).test(ua);\n\n        // Todo: clean this up with a better OS/browser seperation:\n        // - discern (more) between multiple browsers on android\n        // - decide if kindle fire in silk mode is android or not\n        // - Firefox on Android doesn't specify the Android version\n        // - possibly devide in os, device and browser hashes\n\n        // if (browser.webkit = !!webkit) browser.version = webkit[1];\n\n        // if (android) os.android = true, os.version = android[2];\n        // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n        // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n        // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n        // if (webos) os.webos = true, os.version = webos[2];\n        // if (touchpad) os.touchpad = true;\n        // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n        // if (bb10) os.bb10 = true, os.version = bb10[2];\n        // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n        // if (playbook) browser.playbook = true;\n        // if (kindle) os.kindle = true, os.version = kindle[1];\n        // if (silk) browser.silk = true, browser.version = silk[1];\n        // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n        // if (chrome) browser.chrome = true, browser.version = chrome[1];\n        if (firefox) {\n            browser.firefox = true;\n            browser.version = firefox[1];\n        }\n        // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n        // if (webview) browser.webview = true;\n\n        if (ie) {\n            browser.ie = true;\n            browser.version = ie[1];\n        }\n\n        if (edge) {\n            browser.edge = true;\n            browser.version = edge[1];\n        }\n\n        // It is difficult to detect WeChat in Win Phone precisely, because ua can\n        // not be set on win phone. So we do not consider Win Phone.\n        if (weChat) {\n            browser.weChat = true;\n        }\n\n        // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n        //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n        // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n        //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n        //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n        return {\n            browser: browser,\n            os: os,\n            node: false,\n            // 原生canvas支持，改极端点了\n            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n            canvasSupported : document.createElement('canvas').getContext ? true : false,\n            // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n            // works on most browsers\n            // IE10/11 does not support touch event, and MS Edge supports them but not by\n            // default, so we dont check navigator.maxTouchPoints for them here.\n            touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n            // <http://caniuse.com/#search=pointer%20event>.\n            pointerEventsSupported: 'onpointerdown' in window\n                // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n                // events currently. So we dont use that on other browsers unless tested sufficiently.\n                // Although IE 10 supports pointer event, it use old style and is different from the\n                // standard. So we exclude that. (IE 10 is hardly used on touch device)\n                && (browser.edge || (browser.ie && browser.version >= 11))\n        };\n    }\n\n\n/***/ }),\n\n/***/ 616:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(606);\n\n    var clazz = {};\n\n    var TYPE_DELIMITER = '.';\n    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n    var MEMBER_PRIFIX = '\\0ec_\\0';\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name] = value;` (can be right-value)\n     * @public\n     */\n    clazz.set = function (host, name, value) {\n        return (host[MEMBER_PRIFIX + name] = value);\n    };\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name];`\n     * @public\n     */\n    clazz.get = function (host, name) {\n        return host[MEMBER_PRIFIX + name];\n    };\n\n    /**\n     * For hidden private class member.\n     * The same behavior as `host.hasOwnProperty(name);`\n     * @public\n     */\n    clazz.hasOwn = function (host, name) {\n        return host.hasOwnProperty(MEMBER_PRIFIX + name);\n    };\n\n    /**\n     * Notice, parseClassType('') should returns {main: '', sub: ''}\n     * @public\n     */\n    var parseClassType = clazz.parseClassType = function (componentType) {\n        var ret = {main: '', sub: ''};\n        if (componentType) {\n            componentType = componentType.split(TYPE_DELIMITER);\n            ret.main = componentType[0] || '';\n            ret.sub = componentType[1] || '';\n        }\n        return ret;\n    };\n\n    /**\n     * @public\n     */\n    function checkClassType(componentType) {\n        zrUtil.assert(\n            /^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType),\n            'componentType \"' + componentType + '\" illegal'\n        );\n    }\n\n    /**\n     * @public\n     */\n    clazz.enableClassExtend = function (RootClass, mandatoryMethods) {\n\n        RootClass.$constructor = RootClass;\n        RootClass.extend = function (proto) {\n\n            if (__DEV__) {\n                zrUtil.each(mandatoryMethods, function (method) {\n                    if (!proto[method]) {\n                        console.warn(\n                            'Method `' + method + '` should be implemented'\n                            + (proto.type ? ' in ' + proto.type : '') + '.'\n                        );\n                    }\n                });\n            }\n\n            var superClass = this;\n            var ExtendedClass = function () {\n                if (!proto.$constructor) {\n                    superClass.apply(this, arguments);\n                }\n                else {\n                    proto.$constructor.apply(this, arguments);\n                }\n            };\n\n            zrUtil.extend(ExtendedClass.prototype, proto);\n\n            ExtendedClass.extend = this.extend;\n            ExtendedClass.superCall = superCall;\n            ExtendedClass.superApply = superApply;\n            zrUtil.inherits(ExtendedClass, this);\n            ExtendedClass.superClass = superClass;\n\n            return ExtendedClass;\n        };\n    };\n\n    // superCall should have class info, which can not be fetch from 'this'.\n    // Consider this case:\n    // class A has method f,\n    // class B inherits class A, overrides method f, f call superApply('f'),\n    // class C inherits class B, do not overrides method f,\n    // then when method of class C is called, dead loop occured.\n    function superCall(context, methodName) {\n        var args = zrUtil.slice(arguments, 2);\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    function superApply(context, methodName, args) {\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    /**\n     * @param {Object} entity\n     * @param {Object} options\n     * @param {boolean} [options.registerWhenExtend]\n     * @public\n     */\n    clazz.enableClassManagement = function (entity, options) {\n        options = options || {};\n\n        /**\n         * Component model classes\n         * key: componentType,\n         * value:\n         *     componentClass, when componentType is 'xxx'\n         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n         * @type {Object}\n         */\n        var storage = {};\n\n        entity.registerClass = function (Clazz, componentType) {\n            if (componentType) {\n                checkClassType(componentType);\n                componentType = parseClassType(componentType);\n\n                if (!componentType.sub) {\n                    if (__DEV__) {\n                        if (storage[componentType.main]) {\n                            console.warn(componentType.main + ' exists.');\n                        }\n                    }\n                    storage[componentType.main] = Clazz;\n                }\n                else if (componentType.sub !== IS_CONTAINER) {\n                    var container = makeContainer(componentType);\n                    container[componentType.sub] = Clazz;\n                }\n            }\n            return Clazz;\n        };\n\n        entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n            var Clazz = storage[componentMainType];\n\n            if (Clazz && Clazz[IS_CONTAINER]) {\n                Clazz = subType ? Clazz[subType] : null;\n            }\n\n            if (throwWhenNotFound && !Clazz) {\n                throw new Error(\n                    !subType\n                        ? componentMainType + '.' + 'type should be specified.'\n                        : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.'\n                );\n            }\n\n            return Clazz;\n        };\n\n        entity.getClassesByMainType = function (componentType) {\n            componentType = parseClassType(componentType);\n\n            var result = [];\n            var obj = storage[componentType.main];\n\n            if (obj && obj[IS_CONTAINER]) {\n                zrUtil.each(obj, function (o, type) {\n                    type !== IS_CONTAINER && result.push(o);\n                });\n            }\n            else {\n                result.push(obj);\n            }\n\n            return result;\n        };\n\n        entity.hasClass = function (componentType) {\n            // Just consider componentType.main.\n            componentType = parseClassType(componentType);\n            return !!storage[componentType.main];\n        };\n\n        /**\n         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n         */\n        entity.getAllClassMainTypes = function () {\n            var types = [];\n            zrUtil.each(storage, function (obj, type) {\n                types.push(type);\n            });\n            return types;\n        };\n\n        /**\n         * If a main type is container and has sub types\n         * @param  {string}  mainType\n         * @return {boolean}\n         */\n        entity.hasSubTypes = function (componentType) {\n            componentType = parseClassType(componentType);\n            var obj = storage[componentType.main];\n            return obj && obj[IS_CONTAINER];\n        };\n\n        entity.parseClassType = parseClassType;\n\n        function makeContainer(componentType) {\n            var container = storage[componentType.main];\n            if (!container || !container[IS_CONTAINER]) {\n                container = storage[componentType.main] = {};\n                container[IS_CONTAINER] = true;\n            }\n            return container;\n        }\n\n        if (options.registerWhenExtend) {\n            var originalExtend = entity.extend;\n            if (originalExtend) {\n                entity.extend = function (proto) {\n                    var ExtendedClass = originalExtend.call(this, proto);\n                    return entity.registerClass(ExtendedClass, proto.type);\n                };\n            }\n        }\n\n        return entity;\n    };\n\n    /**\n     * @param {string|Array.<string>} properties\n     */\n    clazz.setReadOnly = function (obj, properties) {\n        // FIXME It seems broken in IE8 simulation of IE11\n        // if (!zrUtil.isArray(properties)) {\n        //     properties = properties != null ? [properties] : [];\n        // }\n        // zrUtil.each(properties, function (prop) {\n        //     var value = obj[prop];\n\n        //     Object.defineProperty\n        //         && Object.defineProperty(obj, prop, {\n        //             value: value, writable: false\n        //         });\n        //     zrUtil.isArray(obj[prop])\n        //         && Object.freeze\n        //         && Object.freeze(obj[prop]);\n        // });\n    };\n\n    module.exports = clazz;\n\n\n/***/ }),\n\n/***/ 617:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module echarts/core/BoundingRect\n */\n\n\n    var vec2 = __webpack_require__(611);\n    var matrix = __webpack_require__(623);\n\n    var v2ApplyTransform = vec2.applyTransform;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    /**\n     * @alias module:echarts/core/BoundingRect\n     */\n    function BoundingRect(x, y, width, height) {\n\n        if (width < 0) {\n            x = x + width;\n            width = -width;\n        }\n        if (height < 0) {\n            y = y + height;\n            height = -height;\n        }\n\n        /**\n         * @type {number}\n         */\n        this.x = x;\n        /**\n         * @type {number}\n         */\n        this.y = y;\n        /**\n         * @type {number}\n         */\n        this.width = width;\n        /**\n         * @type {number}\n         */\n        this.height = height;\n    }\n\n    BoundingRect.prototype = {\n\n        constructor: BoundingRect,\n\n        /**\n         * @param {module:echarts/core/BoundingRect} other\n         */\n        union: function (other) {\n            var x = mathMin(other.x, this.x);\n            var y = mathMin(other.y, this.y);\n\n            this.width = mathMax(\n                    other.x + other.width,\n                    this.x + this.width\n                ) - x;\n            this.height = mathMax(\n                    other.y + other.height,\n                    this.y + this.height\n                ) - y;\n            this.x = x;\n            this.y = y;\n        },\n\n        /**\n         * @param {Array.<number>} m\n         * @methods\n         */\n        applyTransform: (function () {\n            var lt = [];\n            var rb = [];\n            var lb = [];\n            var rt = [];\n            return function (m) {\n                // In case usage like this\n                // el.getBoundingRect().applyTransform(el.transform)\n                // And element has no transform\n                if (!m) {\n                    return;\n                }\n                lt[0] = lb[0] = this.x;\n                lt[1] = rt[1] = this.y;\n                rb[0] = rt[0] = this.x + this.width;\n                rb[1] = lb[1] = this.y + this.height;\n\n                v2ApplyTransform(lt, lt, m);\n                v2ApplyTransform(rb, rb, m);\n                v2ApplyTransform(lb, lb, m);\n                v2ApplyTransform(rt, rt, m);\n\n                this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n                this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n                var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n                var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n                this.width = maxX - this.x;\n                this.height = maxY - this.y;\n            };\n        })(),\n\n        /**\n         * Calculate matrix of transforming from self to target rect\n         * @param  {module:zrender/core/BoundingRect} b\n         * @return {Array.<number>}\n         */\n        calculateTransform: function (b) {\n            var a = this;\n            var sx = b.width / a.width;\n            var sy = b.height / a.height;\n\n            var m = matrix.create();\n\n            // 矩阵右乘\n            matrix.translate(m, m, [-a.x, -a.y]);\n            matrix.scale(m, m, [sx, sy]);\n            matrix.translate(m, m, [b.x, b.y]);\n\n            return m;\n        },\n\n        /**\n         * @param {(module:echarts/core/BoundingRect|Object)} b\n         * @return {boolean}\n         */\n        intersect: function (b) {\n            if (!b) {\n                return false;\n            }\n\n            if (!(b instanceof BoundingRect)) {\n                // Normalize negative width/height.\n                b = BoundingRect.create(b);\n            }\n\n            var a = this;\n            var ax0 = a.x;\n            var ax1 = a.x + a.width;\n            var ay0 = a.y;\n            var ay1 = a.y + a.height;\n\n            var bx0 = b.x;\n            var bx1 = b.x + b.width;\n            var by0 = b.y;\n            var by1 = b.y + b.height;\n\n            return ! (ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n        },\n\n        contain: function (x, y) {\n            var rect = this;\n            return x >= rect.x\n                && x <= (rect.x + rect.width)\n                && y >= rect.y\n                && y <= (rect.y + rect.height);\n        },\n\n        /**\n         * @return {module:echarts/core/BoundingRect}\n         */\n        clone: function () {\n            return new BoundingRect(this.x, this.y, this.width, this.height);\n        },\n\n        /**\n         * Copy from another rect\n         */\n        copy: function (other) {\n            this.x = other.x;\n            this.y = other.y;\n            this.width = other.width;\n            this.height = other.height;\n        },\n\n        plain: function () {\n            return {\n                x: this.x,\n                y: this.y,\n                width: this.width,\n                height: this.height\n            };\n        }\n    };\n\n    /**\n     * @param {Object|module:zrender/core/BoundingRect} rect\n     * @param {number} rect.x\n     * @param {number} rect.y\n     * @param {number} rect.width\n     * @param {number} rect.height\n     * @return {module:zrender/core/BoundingRect}\n     */\n    BoundingRect.create = function (rect) {\n        return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n    };\n\n    module.exports = BoundingRect;\n\n\n/***/ }),\n\n/***/ 618:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\n\n\n    var Model = __webpack_require__(614);\n    var zrUtil = __webpack_require__(606);\n    var arrayPush = Array.prototype.push;\n    var componentUtil = __webpack_require__(642);\n    var clazzUtil = __webpack_require__(616);\n    var layout = __webpack_require__(619);\n\n    /**\n     * @alias module:echarts/model/Component\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {module:echarts/model/Model} ecModel\n     */\n    var ComponentModel = Model.extend({\n\n        type: 'component',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        id: '',\n\n        /**\n         * @readOnly\n         */\n        name: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        mainType: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        subType: '',\n\n        /**\n         * @readOnly\n         * @type {number}\n         */\n        componentIndex: 0,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        ecModel: null,\n\n        /**\n         * key: componentType\n         * value:  Component model list, can not be null.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @readOnly\n         */\n        dependentModels: [],\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        uid: null,\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        $constructor: function (option, parentModel, ecModel, extraOpt) {\n            Model.call(this, option, parentModel, ecModel, extraOpt);\n\n            this.uid = componentUtil.getUID('componentModel');\n        },\n\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n            this.mergeDefaultAndTheme(option, ecModel);\n        },\n\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            var themeModel = ecModel.getTheme();\n            zrUtil.merge(option, themeModel.get(this.mainType));\n            zrUtil.merge(option, this.getDefaultOption());\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (option, extraOpt) {\n            zrUtil.merge(this.option, option, true);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, option, layoutMode);\n            }\n        },\n\n        // Hooker after init or mergeOption\n        optionUpdated: function (newCptOption, isInit) {},\n\n        getDefaultOption: function () {\n            if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n                var optList = [];\n                var Class = this.constructor;\n                while (Class) {\n                    var opt = Class.prototype.defaultOption;\n                    opt && optList.push(opt);\n                    Class = Class.superClass;\n                }\n\n                var defaultOption = {};\n                for (var i = optList.length - 1; i >= 0; i--) {\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n                }\n                clazzUtil.set(this, '__defaultOption', defaultOption);\n            }\n            return clazzUtil.get(this, '__defaultOption');\n        },\n\n        getReferringComponents: function (mainType) {\n            return this.ecModel.queryComponents({\n                mainType: mainType,\n                index: this.get(mainType + 'Index', true),\n                id: this.get(mainType + 'Id', true)\n            });\n        }\n\n    });\n\n    // Reset ComponentModel.extend, add preConstruct.\n    // clazzUtil.enableClassExtend(\n    //     ComponentModel,\n    //     function (option, parentModel, ecModel, extraOpt) {\n    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\n    //         zrUtil.extend(this, extraOpt);\n\n    //         this.uid = componentUtil.getUID('componentModel');\n\n    //         // this.setReadOnly([\n    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n    //         //     'dependentModels', 'componentIndex'\n    //         // ]);\n    //     }\n    // );\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(\n        ComponentModel, {registerWhenExtend: true}\n    );\n    componentUtil.enableSubTypeDefaulter(ComponentModel);\n\n    // Add capability of ComponentModel.topologicalTravel.\n    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\n    function getDependencies(componentType) {\n        var deps = [];\n        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n        });\n        // Ensure main type\n        return zrUtil.map(deps, function (type) {\n            return clazzUtil.parseClassType(type).main;\n        });\n    }\n\n    zrUtil.mixin(ComponentModel, __webpack_require__(747));\n\n    module.exports = ComponentModel;\n\n\n/***/ }),\n\n/***/ 619:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Layout helpers for each component positioning\n\n\n    var zrUtil = __webpack_require__(606);\n    var BoundingRect = __webpack_require__(617);\n    var numberUtil = __webpack_require__(610);\n    var formatUtil = __webpack_require__(613);\n    var parsePercent = numberUtil.parsePercent;\n    var each = zrUtil.each;\n\n    var layout = {};\n\n    /**\n     * @public\n     */\n    var LOCATION_PARAMS = layout.LOCATION_PARAMS = [\n        'left', 'right', 'top', 'bottom', 'width', 'height'\n    ];\n\n    /**\n     * @public\n     */\n    var HV_NAMES = layout.HV_NAMES = [\n        ['width', 'left', 'right'],\n        ['height', 'top', 'bottom']\n    ];\n\n    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\n        var x = 0;\n        var y = 0;\n\n        if (maxWidth == null) {\n            maxWidth = Infinity;\n        }\n        if (maxHeight == null) {\n            maxHeight = Infinity;\n        }\n        var currentLineMaxSize = 0;\n\n        group.eachChild(function (child, idx) {\n            var position = child.position;\n            var rect = child.getBoundingRect();\n            var nextChild = group.childAt(idx + 1);\n            var nextChildRect = nextChild && nextChild.getBoundingRect();\n            var nextX;\n            var nextY;\n\n            if (orient === 'horizontal') {\n                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\n                nextX = x + moveX;\n                // Wrap when width exceeds maxWidth or meet a `newline` group\n                // FIXME compare before adding gap?\n                if (nextX > maxWidth || child.newline) {\n                    x = 0;\n                    nextX = moveX;\n                    y += currentLineMaxSize + gap;\n                    currentLineMaxSize = rect.height;\n                }\n                else {\n                    // FIXME: consider rect.y is not `0`?\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n                }\n            }\n            else {\n                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\n                nextY = y + moveY;\n                // Wrap when width exceeds maxHeight or meet a `newline` group\n                if (nextY > maxHeight || child.newline) {\n                    x += currentLineMaxSize + gap;\n                    y = 0;\n                    nextY = moveY;\n                    currentLineMaxSize = rect.width;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n                }\n            }\n\n            if (child.newline) {\n                return;\n            }\n\n            position[0] = x;\n            position[1] = y;\n\n            orient === 'horizontal'\n                ? (x = nextX + gap)\n                : (y = nextY + gap);\n        });\n    }\n\n    /**\n     * VBox or HBox layouting\n     * @param {string} orient\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.box = boxLayout;\n\n    /**\n     * VBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\n\n    /**\n     * HBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\n\n    /**\n     * If x or x2 is not specified or 'center' 'left' 'right',\n     * the width would be as long as possible.\n     * If y or y2 is not specified or 'middle' 'top' 'bottom',\n     * the height would be as long as possible.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.x]\n     * @param {number|string} [positionInfo.y]\n     * @param {number|string} [positionInfo.x2]\n     * @param {number|string} [positionInfo.y2]\n     * @param {Object} containerRect {width, height}\n     * @param {string|number} margin\n     * @return {Object} {width, height}\n     */\n    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var x = parsePercent(positionInfo.x, containerWidth);\n        var y = parsePercent(positionInfo.y, containerHeight);\n        var x2 = parsePercent(positionInfo.x2, containerWidth);\n        var y2 = parsePercent(positionInfo.y2, containerHeight);\n\n        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        return {\n            width: Math.max(x2 - x - margin[1] - margin[3], 0),\n            height: Math.max(y2 - y - margin[0] - margin[2], 0)\n        };\n    };\n\n    /**\n     * Parse position info.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width]\n     * @param {number|string} [positionInfo.height]\n     * @param {number|string} [positionInfo.aspect] Aspect is width / height\n     * @param {Object} containerRect\n     * @param {string|number} [margin]\n     *\n     * @return {module:zrender/core/BoundingRect}\n     */\n    layout.getLayoutRect = function (\n        positionInfo, containerRect, margin\n    ) {\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var left = parsePercent(positionInfo.left, containerWidth);\n        var top = parsePercent(positionInfo.top, containerHeight);\n        var right = parsePercent(positionInfo.right, containerWidth);\n        var bottom = parsePercent(positionInfo.bottom, containerHeight);\n        var width = parsePercent(positionInfo.width, containerWidth);\n        var height = parsePercent(positionInfo.height, containerHeight);\n\n        var verticalMargin = margin[2] + margin[0];\n        var horizontalMargin = margin[1] + margin[3];\n        var aspect = positionInfo.aspect;\n\n        // If width is not specified, calculate width from left and right\n        if (isNaN(width)) {\n            width = containerWidth - right - horizontalMargin - left;\n        }\n        if (isNaN(height)) {\n            height = containerHeight - bottom - verticalMargin - top;\n        }\n\n        if (aspect != null) {\n            // If width and height are not given\n            // 1. Graph should not exceeds the container\n            // 2. Aspect must be keeped\n            // 3. Graph should take the space as more as possible\n            // FIXME\n            // Margin is not considered, because there is no case that both\n            // using margin and aspect so far.\n            if (isNaN(width) && isNaN(height)) {\n                if (aspect > containerWidth / containerHeight) {\n                    width = containerWidth * 0.8;\n                }\n                else {\n                    height = containerHeight * 0.8;\n                }\n            }\n\n            // Calculate width or height with given aspect\n            if (isNaN(width)) {\n                width = aspect * height;\n            }\n            if (isNaN(height)) {\n                height = width / aspect;\n            }\n        }\n\n        // If left is not specified, calculate left from right and width\n        if (isNaN(left)) {\n            left = containerWidth - right - width - horizontalMargin;\n        }\n        if (isNaN(top)) {\n            top = containerHeight - bottom - height - verticalMargin;\n        }\n\n        // Align left and top\n        switch (positionInfo.left || positionInfo.right) {\n            case 'center':\n                left = containerWidth / 2 - width / 2 - margin[3];\n                break;\n            case 'right':\n                left = containerWidth - width - horizontalMargin;\n                break;\n        }\n        switch (positionInfo.top || positionInfo.bottom) {\n            case 'middle':\n            case 'center':\n                top = containerHeight / 2 - height / 2 - margin[0];\n                break;\n            case 'bottom':\n                top = containerHeight - height - verticalMargin;\n                break;\n        }\n        // If something is wrong and left, top, width, height are calculated as NaN\n        left = left || 0;\n        top = top || 0;\n        if (isNaN(width)) {\n            // Width may be NaN if only one value is given except width\n            width = containerWidth - horizontalMargin - left - (right || 0);\n        }\n        if (isNaN(height)) {\n            // Height may be NaN if only one value is given except height\n            height = containerHeight - verticalMargin - top - (bottom || 0);\n        }\n\n        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n        rect.margin = margin;\n        return rect;\n    };\n\n\n    /**\n     * Position a zr element in viewport\n     *  Group position is specified by either\n     *  {left, top}, {right, bottom}\n     *  If all properties exists, right and bottom will be igonred.\n     *\n     * Logic:\n     *     1. Scale (against origin point in parent coord)\n     *     2. Rotate (against origin point in parent coord)\n     *     3. Traslate (with el.position by this method)\n     * So this method only fixes the last step 'Traslate', which does not affect\n     * scaling and rotating.\n     *\n     * If be called repeatly with the same input el, the same result will be gotten.\n     *\n     * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n     * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @param {Object} [opt]\n     * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n     * @param {Array.<number>} [opt.boundingMode='all']\n     *        Specify how to calculate boundingRect when locating.\n     *        'all': Position the boundingRect that is transformed and uioned\n     *               both itself and its descendants.\n     *               This mode simplies confine the elements in the bounding\n     *               of their container (e.g., using 'right: 0').\n     *        'raw': Position the boundingRect that is not transformed and only itself.\n     *               This mode is useful when you want a element can overflow its\n     *               container. (Consider a rotated circle needs to be located in a corner.)\n     *               In this mode positionInfo.width/height can only be number.\n     */\n    layout.positionElement = function (el, positionInfo, containerRect, margin, opt) {\n        var h = !opt || !opt.hv || opt.hv[0];\n        var v = !opt || !opt.hv || opt.hv[1];\n        var boundingMode = opt && opt.boundingMode || 'all';\n\n        if (!h && !v) {\n            return;\n        }\n\n        var rect;\n        if (boundingMode === 'raw') {\n            rect = el.type === 'group'\n                ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0)\n                : el.getBoundingRect();\n        }\n        else {\n            rect = el.getBoundingRect();\n            if (el.needLocalTransform()) {\n                var transform = el.getLocalTransform();\n                // Notice: raw rect may be inner object of el,\n                // which should not be modified.\n                rect = rect.clone();\n                rect.applyTransform(transform);\n            }\n        }\n\n        // The real width and height can not be specified but calculated by the given el.\n        positionInfo = layout.getLayoutRect(\n            zrUtil.defaults(\n                {width: rect.width, height: rect.height},\n                positionInfo\n            ),\n            containerRect,\n            margin\n        );\n\n        // Because 'tranlate' is the last step in transform\n        // (see zrender/core/Transformable#getLocalTransfrom),\n        // we can just only modify el.position to get final result.\n        var elPos = el.position;\n        var dx = h ? positionInfo.x - rect.x : 0;\n        var dy = v ? positionInfo.y - rect.y : 0;\n\n        el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n    };\n\n    /**\n     * @param {Object} option Contains some of the properties in HV_NAMES.\n     * @param {number} hvIdx 0: horizontal; 1: vertical.\n     */\n    layout.sizeCalculable = function (option, hvIdx) {\n        return option[HV_NAMES[hvIdx][0]] != null\n            || (option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null);\n    };\n\n    /**\n     * Consider Case:\n     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n     * through setOption or media query, using normal zrUtil.merge will cause\n     * {right: 0} does not take effect.\n     *\n     * @example\n     * ComponentModel.extend({\n     *     init: function () {\n     *         ...\n     *         var inputPositionParams = layout.getLayoutParams(option);\n     *         this.mergeOption(inputPositionParams);\n     *     },\n     *     mergeOption: function (newOption) {\n     *         newOption && zrUtil.merge(thisOption, newOption, true);\n     *         layout.mergeLayoutParam(thisOption, newOption);\n     *     }\n     * });\n     *\n     * @param {Object} targetOption\n     * @param {Object} newOption\n     * @param {Object|string} [opt]\n     * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n     *  that width (or height) should not be calculated by left and right (or top and bottom).\n     */\n    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\n        !zrUtil.isObject(opt) && (opt = {});\n\n        var ignoreSize = opt.ignoreSize;\n        !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n\n        var hResult = merge(HV_NAMES[0], 0);\n        var vResult = merge(HV_NAMES[1], 1);\n\n        copy(HV_NAMES[0], targetOption, hResult);\n        copy(HV_NAMES[1], targetOption, vResult);\n\n        function merge(names, hvIdx) {\n            var newParams = {};\n            var newValueCount = 0;\n            var merged = {};\n            var mergedValueCount = 0;\n            var enoughParamNumber = 2;\n\n            each(names, function (name) {\n                merged[name] = targetOption[name];\n            });\n            each(names, function (name) {\n                // Consider case: newOption.width is null, which is\n                // set by user for removing width setting.\n                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n                hasValue(newParams, name) && newValueCount++;\n                hasValue(merged, name) && mergedValueCount++;\n            });\n\n            if (ignoreSize[hvIdx]) {\n                // Only one of left/right is premitted to exist.\n                if (hasValue(newOption, names[1])) {\n                    merged[names[2]] = null;\n                }\n                else if (hasValue(newOption, names[2])) {\n                    merged[names[1]] = null;\n                }\n                return merged;\n            }\n\n            // Case: newOption: {width: ..., right: ...},\n            // or targetOption: {right: ...} and newOption: {width: ...},\n            // There is no conflict when merged only has params count\n            // little than enoughParamNumber.\n            if (mergedValueCount === enoughParamNumber || !newValueCount) {\n                return merged;\n            }\n            // Case: newOption: {width: ..., right: ...},\n            // Than we can make sure user only want those two, and ignore\n            // all origin params in targetOption.\n            else if (newValueCount >= enoughParamNumber) {\n                return newParams;\n            }\n            else {\n                // Chose another param from targetOption by priority.\n                for (var i = 0; i < names.length; i++) {\n                    var name = names[i];\n                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n                        newParams[name] = targetOption[name];\n                        break;\n                    }\n                }\n                return newParams;\n            }\n        }\n\n        function hasProp(obj, name) {\n            return obj.hasOwnProperty(name);\n        }\n\n        function hasValue(obj, name) {\n            return obj[name] != null && obj[name] !== 'auto';\n        }\n\n        function copy(names, target, source) {\n            each(names, function (name) {\n                target[name] = source[name];\n            });\n        }\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.getLayoutParams = function (source) {\n        return layout.copyLayoutParams({}, source);\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.copyLayoutParams = function (target, source) {\n        source && target && each(LOCATION_PARAMS, function (name) {\n            source.hasOwnProperty(name) && (target[name] = source[name]);\n        });\n        return target;\n    };\n\n    module.exports = layout;\n\n\n\n/***/ }),\n\n/***/ 620:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var OrdinalScale = __webpack_require__(755);\n    var IntervalScale = __webpack_require__(638);\n    __webpack_require__(756);\n    __webpack_require__(754);\n    var Scale = __webpack_require__(632);\n\n    var numberUtil = __webpack_require__(610);\n    var zrUtil = __webpack_require__(606);\n    var textContain = __webpack_require__(621);\n    var axisHelper = {};\n\n    /**\n     * Get axis scale extent before niced.\n     * Item of returned array can only be number (including Infinity and NaN).\n     */\n    axisHelper.getScaleExtent = function (scale, model) {\n        var scaleType = scale.type;\n\n        var min = model.getMin();\n        var max = model.getMax();\n        var fixMin = min != null;\n        var fixMax = max != null;\n        var originalExtent = scale.getExtent();\n\n        var axisDataLen;\n        var boundaryGap;\n        var span;\n        if (scaleType === 'ordinal') {\n            axisDataLen = (model.get('data') || []).length;\n        }\n        else {\n            boundaryGap = model.get('boundaryGap');\n            if (!zrUtil.isArray(boundaryGap)) {\n                boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n            }\n            if (typeof boundaryGap[0] === 'boolean') {\n                if (__DEV__) {\n                    console.warn('Boolean type for boundaryGap is only '\n                        + 'allowed for ordinal axis. Please use string in '\n                        + 'percentage instead, e.g., \"20%\". Currently, '\n                        + 'boundaryGap is set to be 0.');\n                }\n                boundaryGap = [0, 0];\n            }\n            boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n            boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n            span = (originalExtent[1] - originalExtent[0])\n                || Math.abs(originalExtent[0]);\n        }\n\n        // Notice: When min/max is not set (that is, when there are null/undefined,\n        // which is the most common case), these cases should be ensured:\n        // (1) For 'ordinal', show all axis.data.\n        // (2) For others:\n        //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n        //      disabled).\n        //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n        //      be the result that originalExtent enlarged by boundaryGap.\n        // (3) If no data, it should be ensured that `scale.setBlank` is set.\n\n        // FIXME\n        // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n        // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n        // that the results processed by boundaryGap are positive/negative?\n\n        if (min == null) {\n            min = scaleType === 'ordinal'\n                ? (axisDataLen ? 0 : NaN)\n                : originalExtent[0] - boundaryGap[0] * span;\n        }\n        if (max == null) {\n            max = scaleType === 'ordinal'\n                ? (axisDataLen ? axisDataLen - 1 : NaN)\n                : originalExtent[1] + boundaryGap[1] * span;\n        }\n\n        if (min === 'dataMin') {\n            min = originalExtent[0];\n        }\n        if (max === 'dataMax') {\n            max = originalExtent[1];\n        }\n\n        (min == null || !isFinite(min)) && (min = NaN);\n        (max == null || !isFinite(max)) && (max = NaN);\n\n        scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max));\n\n        // Evaluate if axis needs cross zero\n        if (model.getNeedCrossZero()) {\n            // Axis is over zero and min is not set\n            if (min > 0 && max > 0 && !fixMin) {\n                min = 0;\n            }\n            // Axis is under zero and max is not set\n            if (min < 0 && max < 0 && !fixMax) {\n                max = 0;\n            }\n        }\n\n        return [min, max];\n    };\n\n    axisHelper.niceScaleExtent = function (scale, model) {\n        var extent = axisHelper.getScaleExtent(scale, model);\n        var fixMin = model.getMin() != null;\n        var fixMax = model.getMax() != null;\n        var splitNumber = model.get('splitNumber');\n\n        if (scale.type === 'log') {\n            scale.base = model.get('logBase');\n        }\n\n        var scaleType = scale.type;\n        scale.setExtent(extent[0], extent[1]);\n        scale.niceExtent({\n            splitNumber: splitNumber,\n            fixMin: fixMin,\n            fixMax: fixMax,\n            minInterval: (scaleType === 'interval' || scaleType === 'time')\n                ? model.get('minInterval') : null,\n            maxInterval: (scaleType === 'interval' || scaleType === 'time')\n                ? model.get('maxInterval') : null\n        });\n\n        // If some one specified the min, max. And the default calculated interval\n        // is not good enough. He can specify the interval. It is often appeared\n        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n        // to be 60.\n        // FIXME\n        var interval = model.get('interval');\n        if (interval != null) {\n            scale.setInterval && scale.setInterval(interval);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @param {string} [axisType] Default retrieve from model.type\n     * @return {module:echarts/scale/*}\n     */\n    axisHelper.createScaleByModel = function(model, axisType) {\n        axisType = axisType || model.get('type');\n        if (axisType) {\n            switch (axisType) {\n                // Buildin scale\n                case 'category':\n                    return new OrdinalScale(\n                        model.getCategories(), [Infinity, -Infinity]\n                    );\n                case 'value':\n                    return new IntervalScale();\n                // Extended scale, like time and log\n                default:\n                    return (Scale.getClass(axisType) || IntervalScale).create(model);\n            }\n        }\n    };\n\n    /**\n     * Check if the axis corss 0\n     */\n    axisHelper.ifAxisCrossZero = function (axis) {\n        var dataExtent = axis.scale.getExtent();\n        var min = dataExtent[0];\n        var max = dataExtent[1];\n        return !((min > 0 && max > 0) || (min < 0 && max < 0));\n    };\n\n    /**\n     * @param {Array.<number>} tickCoords In axis self coordinate.\n     * @param {Array.<string>} labels\n     * @param {string} font\n     * @param {boolean} isAxisHorizontal\n     * @return {number}\n     */\n    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\n        // FIXME\n        // 不同角的axis和label，不只是horizontal和vertical.\n\n        var textSpaceTakenRect;\n        var autoLabelInterval = 0;\n        var accumulatedLabelInterval = 0;\n\n        var step = 1;\n        if (labels.length > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.floor(labels.length / 40);\n        }\n\n        for (var i = 0; i < tickCoords.length; i += step) {\n            var tickCoord = tickCoords[i];\n            var rect = textContain.getBoundingRect(\n                labels[i], font, 'center', 'top'\n            );\n            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\n            // FIXME Magic number 1.5\n            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\n            if (!textSpaceTakenRect) {\n                textSpaceTakenRect = rect.clone();\n            }\n            // There is no space for current label;\n            else if (textSpaceTakenRect.intersect(rect)) {\n                accumulatedLabelInterval++;\n                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n            }\n            else {\n                textSpaceTakenRect.union(rect);\n                // Reset\n                accumulatedLabelInterval = 0;\n            }\n        }\n        if (autoLabelInterval === 0 && step > 1) {\n            return step;\n        }\n        return (autoLabelInterval + 1) * step - 1;\n    };\n\n    /**\n     * @param {Object} axis\n     * @param {Function} labelFormatter\n     * @return {Array.<string>}\n     */\n    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\n        var scale = axis.scale;\n        var labels = scale.getTicksLabels();\n        var ticks = scale.getTicks();\n        if (typeof labelFormatter === 'string') {\n            labelFormatter = (function (tpl) {\n                return function (val) {\n                    return tpl.replace('{value}', val != null ? val : '');\n                };\n            })(labelFormatter);\n            // Consider empty array\n            return zrUtil.map(labels, labelFormatter);\n        }\n        else if (typeof labelFormatter === 'function') {\n            return zrUtil.map(ticks, function (tick, idx) {\n                return labelFormatter(\n                    axisHelper.getAxisRawValue(axis, tick),\n                    idx\n                );\n            }, this);\n        }\n        else {\n            return labels;\n        }\n    };\n\n    axisHelper.getAxisRawValue = function (axis, value) {\n        // In category axis with data zoom, tick is not the original\n        // index of axis.data. So tick should not be exposed to user\n        // in category axis.\n        return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n    };\n\n    module.exports = axisHelper;\n\n\n/***/ }),\n\n/***/ 621:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var util = __webpack_require__(606);\n    var BoundingRect = __webpack_require__(617);\n    var imageHelper = __webpack_require__(646);\n\n    var textWidthCache = {};\n    var textWidthCacheCounter = 0;\n\n    var TEXT_CACHE_MAX = 5000;\n    var STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\n    var DEFAULT_FONT = '12px sans-serif';\n\n    var retrieve2 = util.retrieve2;\n    var retrieve3 = util.retrieve3;\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @return {number} width\n     */\n    function getTextWidth(text, font) {\n        font = font || DEFAULT_FONT;\n        var key = text + ':' + font;\n        if (textWidthCache[key]) {\n            return textWidthCache[key];\n        }\n\n        var textLines = (text + '').split('\\n');\n        var width = 0;\n\n        for (var i = 0, l = textLines.length; i < l; i++) {\n            // textContain.measureText may be overrided in SVG or VML\n            width = Math.max(textContain.measureText(textLines[i], font).width, width);\n        }\n\n        if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n            textWidthCacheCounter = 0;\n            textWidthCache = {};\n        }\n        textWidthCacheCounter++;\n        textWidthCache[key] = width;\n\n        return width;\n    }\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @param {string} [textAlign='left']\n     * @param {string} [textVerticalAlign='top']\n     * @param {Array.<number>} [textPadding]\n     * @param {Object} [rich]\n     * @param {Object} [truncate]\n     * @return {Object} {x, y, width, height, lineHeight}\n     */\n    function getTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n        return rich\n            ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate)\n            : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n    }\n\n    function getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n        var contentBlock = parsePlainText(text, font, textPadding, truncate);\n        var outerWidth = getTextWidth(text, font);\n        if (textPadding) {\n            outerWidth += textPadding[1] + textPadding[3];\n        }\n        var outerHeight = contentBlock.outerHeight;\n\n        var x = adjustTextX(0, outerWidth, textAlign);\n        var y = adjustTextY(0, outerHeight, textVerticalAlign);\n\n        var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n        rect.lineHeight = contentBlock.lineHeight;\n\n        return rect;\n    }\n\n    function getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n        var contentBlock = parseRichText(text, {\n            rich: rich,\n            truncate: truncate,\n            font: font,\n            textAlign: textAlign,\n            textPadding: textPadding\n        });\n        var outerWidth = contentBlock.outerWidth;\n        var outerHeight = contentBlock.outerHeight;\n\n        var x = adjustTextX(0, outerWidth, textAlign);\n        var y = adjustTextY(0, outerHeight, textVerticalAlign);\n\n        return new BoundingRect(x, y, outerWidth, outerHeight);\n    }\n\n    /**\n     * @public\n     * @param {number} x\n     * @param {number} width\n     * @param {string} [textAlign='left']\n     * @return {number} Adjusted x.\n     */\n    function adjustTextX(x, width, textAlign) {\n        // FIXME Right to left language\n        if (textAlign === 'right') {\n            x -= width;\n        }\n        else if (textAlign === 'center') {\n            x -= width / 2;\n        }\n        return x;\n    }\n\n    /**\n     * @public\n     * @param {number} y\n     * @param {number} height\n     * @param {string} [textVerticalAlign='top']\n     * @return {number} Adjusted y.\n     */\n    function adjustTextY(y, height, textVerticalAlign) {\n        if (textVerticalAlign === 'middle') {\n            y -= height / 2;\n        }\n        else if (textVerticalAlign === 'bottom') {\n            y -= height;\n        }\n        return y;\n    }\n\n    /**\n     * @public\n     * @param {stirng} textPosition\n     * @param {Object} rect {x, y, width, height}\n     * @param {number} distance\n     * @return {Object} {x, y, textAlign, textVerticalAlign}\n     */\n    function adjustTextPositionOnRect(textPosition, rect, distance) {\n\n        var x = rect.x;\n        var y = rect.y;\n\n        var height = rect.height;\n        var width = rect.width;\n        var halfHeight = height / 2;\n\n        var textAlign = 'left';\n        var textVerticalAlign = 'top';\n\n        switch (textPosition) {\n            case 'left':\n                x -= distance;\n                y += halfHeight;\n                textAlign = 'right';\n                textVerticalAlign = 'middle';\n                break;\n            case 'right':\n                x += distance + width;\n                y += halfHeight;\n                textVerticalAlign = 'middle';\n                break;\n            case 'top':\n                x += width / 2;\n                y -= distance;\n                textAlign = 'center';\n                textVerticalAlign = 'bottom';\n                break;\n            case 'bottom':\n                x += width / 2;\n                y += height + distance;\n                textAlign = 'center';\n                break;\n            case 'inside':\n                x += width / 2;\n                y += halfHeight;\n                textAlign = 'center';\n                textVerticalAlign = 'middle';\n                break;\n            case 'insideLeft':\n                x += distance;\n                y += halfHeight;\n                textVerticalAlign = 'middle';\n                break;\n            case 'insideRight':\n                x += width - distance;\n                y += halfHeight;\n                textAlign = 'right';\n                textVerticalAlign = 'middle';\n                break;\n            case 'insideTop':\n                x += width / 2;\n                y += distance;\n                textAlign = 'center';\n                break;\n            case 'insideBottom':\n                x += width / 2;\n                y += height - distance;\n                textAlign = 'center';\n                textVerticalAlign = 'bottom';\n                break;\n            case 'insideTopLeft':\n                x += distance;\n                y += distance;\n                break;\n            case 'insideTopRight':\n                x += width - distance;\n                y += distance;\n                textAlign = 'right';\n                break;\n            case 'insideBottomLeft':\n                x += distance;\n                y += height - distance;\n                textVerticalAlign = 'bottom';\n                break;\n            case 'insideBottomRight':\n                x += width - distance;\n                y += height - distance;\n                textAlign = 'right';\n                textVerticalAlign = 'bottom';\n                break;\n        }\n\n        return {\n            x: x,\n            y: y,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    /**\n     * Show ellipsis if overflow.\n     *\n     * @public\n     * @param  {string} text\n     * @param  {string} containerWidth\n     * @param  {string} font\n     * @param  {number} [ellipsis='...']\n     * @param  {Object} [options]\n     * @param  {number} [options.maxIterations=3]\n     * @param  {number} [options.minChar=0] If truncate result are less\n     *                  then minChar, ellipsis will not show, which is\n     *                  better for user hint in some cases.\n     * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n     * @return {string}\n     */\n    function truncateText(text, containerWidth, font, ellipsis, options) {\n        if (!containerWidth) {\n            return '';\n        }\n\n        var textLines = (text + '').split('\\n');\n        options = prepareTruncateOptions(containerWidth, font, ellipsis, options);\n\n        // FIXME\n        // It is not appropriate that every line has '...' when truncate multiple lines.\n        for (var i = 0, len = textLines.length; i < len; i++) {\n            textLines[i] = truncateSingleLine(textLines[i], options);\n        }\n\n        return textLines.join('\\n');\n    }\n\n    function prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n        options = util.extend({}, options);\n\n        options.font = font;\n        var ellipsis = retrieve2(ellipsis, '...');\n        options.maxIterations = retrieve2(options.maxIterations, 2);\n        var minChar = options.minChar = retrieve2(options.minChar, 0);\n        // FIXME\n        // Other languages?\n        options.cnCharWidth = getTextWidth('国', font);\n        // FIXME\n        // Consider proportional font?\n        var ascCharWidth = options.ascCharWidth = getTextWidth('a', font);\n        options.placeholder = retrieve2(options.placeholder, '');\n\n        // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n        // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n        var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n        for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n            contentWidth -= ascCharWidth;\n        }\n\n        var ellipsisWidth = getTextWidth(ellipsis);\n        if (ellipsisWidth > contentWidth) {\n            ellipsis = '';\n            ellipsisWidth = 0;\n        }\n\n        contentWidth = containerWidth - ellipsisWidth;\n\n        options.ellipsis = ellipsis;\n        options.ellipsisWidth = ellipsisWidth;\n        options.contentWidth = contentWidth;\n        options.containerWidth = containerWidth;\n\n        return options;\n    }\n\n    function truncateSingleLine(textLine, options) {\n        var containerWidth = options.containerWidth;\n        var font = options.font;\n        var contentWidth = options.contentWidth;\n\n        if (!containerWidth) {\n            return '';\n        }\n\n        var lineWidth = getTextWidth(textLine, font);\n\n        if (lineWidth <= containerWidth) {\n            return textLine;\n        }\n\n        for (var j = 0;; j++) {\n            if (lineWidth <= contentWidth || j >= options.maxIterations) {\n                textLine += options.ellipsis;\n                break;\n            }\n\n            var subLength = j === 0\n                ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth)\n                : lineWidth > 0\n                ? Math.floor(textLine.length * contentWidth / lineWidth)\n                : 0;\n\n            textLine = textLine.substr(0, subLength);\n            lineWidth = getTextWidth(textLine, font);\n        }\n\n        if (textLine === '') {\n            textLine = options.placeholder;\n        }\n\n        return textLine;\n    }\n\n    function estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n        var width = 0;\n        var i = 0;\n        for (var len = text.length; i < len && width < contentWidth; i++) {\n            var charCode = text.charCodeAt(i);\n            width += (0 <= charCode && charCode <= 127) ? ascCharWidth : cnCharWidth;\n        }\n        return i;\n    }\n\n    /**\n     * @public\n     * @param {string} font\n     * @return {number} line height\n     */\n    function getLineHeight(font) {\n        // FIXME A rough approach.\n        return getTextWidth('国', font);\n    }\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @return {Object} width\n     */\n    function measureText(text, font) {\n        var ctx = util.getContext();\n        ctx.font = font || DEFAULT_FONT;\n        return ctx.measureText(text);\n    }\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @param {Object} [truncate]\n     * @return {Object} block: {lineHeight, lines, height, outerHeight}\n     *  Notice: for performance, do not calculate outerWidth util needed.\n     */\n    function parsePlainText(text, font, padding, truncate) {\n        text != null && (text += '');\n\n        var lineHeight = getLineHeight(font);\n        var lines = text ? text.split('\\n') : [];\n        var height = lines.length * lineHeight;\n        var outerHeight = height;\n\n        if (padding) {\n            outerHeight += padding[0] + padding[2];\n        }\n\n        if (text && truncate) {\n            var truncOuterHeight = truncate.outerHeight;\n            var truncOuterWidth = truncate.outerWidth;\n            if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n                text = '';\n                lines = [];\n            }\n            else if (truncOuterWidth != null) {\n                var options = prepareTruncateOptions(\n                    truncOuterWidth - (padding ? padding[1] + padding[3] : 0),\n                    font,\n                    truncate.ellipsis,\n                    {minChar: truncate.minChar, placeholder: truncate.placeholder}\n                );\n\n                // FIXME\n                // It is not appropriate that every line has '...' when truncate multiple lines.\n                for (var i = 0, len = lines.length; i < len; i++) {\n                    lines[i] = truncateSingleLine(lines[i], options);\n                }\n            }\n        }\n\n        return {\n            lines: lines,\n            height: height,\n            outerHeight: outerHeight,\n            lineHeight: lineHeight\n        };\n    }\n\n    /**\n     * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n     * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n     *\n     * @public\n     * @param {string} text\n     * @param {Object} style\n     * @return {Object} block\n     * {\n     *      width,\n     *      height,\n     *      lines: [{\n     *          lineHeight,\n     *          width,\n     *          tokens: [[{\n     *              styleName,\n     *              text,\n     *              width,      // include textPadding\n     *              height,     // include textPadding\n     *              textWidth, // pure text width\n     *              textHeight, // pure text height\n     *              lineHeihgt,\n     *              font,\n     *              textAlign,\n     *              textVerticalAlign\n     *          }], [...], ...]\n     *      }, ...]\n     * }\n     * If styleName is undefined, it is plain text.\n     */\n    function parseRichText(text, style) {\n        var contentBlock = {lines: [], width: 0, height: 0};\n\n        text != null && (text += '');\n        if (!text) {\n            return contentBlock;\n        }\n\n        var lastIndex = STYLE_REG.lastIndex = 0;\n        var result;\n        while ((result = STYLE_REG.exec(text)) != null)  {\n            var matchedIndex = result.index;\n            if (matchedIndex > lastIndex) {\n                pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n            }\n            pushTokens(contentBlock, result[2], result[1]);\n            lastIndex = STYLE_REG.lastIndex;\n        }\n\n        if (lastIndex < text.length) {\n            pushTokens(contentBlock, text.substring(lastIndex, text.length));\n        }\n\n        var lines = contentBlock.lines;\n        var contentHeight = 0;\n        var contentWidth = 0;\n        // For `textWidth: 100%`\n        var pendingList = [];\n\n        var stlPadding = style.textPadding;\n\n        var truncate = style.truncate;\n        var truncateWidth = truncate && truncate.outerWidth;\n        var truncateHeight = truncate && truncate.outerHeight;\n        if (stlPadding) {\n            truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n            truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n        }\n\n        // Calculate layout info of tokens.\n        for (var i = 0; i < lines.length; i++) {\n            var line = lines[i];\n            var lineHeight = 0;\n            var lineWidth = 0;\n\n            for (var j = 0; j < line.tokens.length; j++) {\n                var token = line.tokens[j];\n                var tokenStyle = token.styleName && style.rich[token.styleName] || {};\n                // textPadding should not inherit from style.\n                var textPadding = token.textPadding = tokenStyle.textPadding;\n\n                // textFont has been asigned to font by `normalizeStyle`.\n                var font = token.font = tokenStyle.font || style.font;\n\n                // textHeight can be used when textVerticalAlign is specified in token.\n                var tokenHeight = token.textHeight = retrieve2(\n                    // textHeight should not be inherited, consider it can be specified\n                    // as box height of the block.\n                    tokenStyle.textHeight, textContain.getLineHeight(font)\n                );\n                textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n                token.height = tokenHeight;\n                token.lineHeight = retrieve3(\n                    tokenStyle.textLineHeight, style.textLineHeight, tokenHeight\n                );\n\n                token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n                token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n                if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n                    return {lines: [], width: 0, height: 0};\n                }\n\n                token.textWidth = textContain.getWidth(token.text, font);\n                var tokenWidth = tokenStyle.textWidth;\n                var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto';\n\n                // Percent width, can be `100%`, can be used in drawing separate\n                // line when box width is needed to be auto.\n                if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n                    token.percentWidth = tokenWidth;\n                    pendingList.push(token);\n                    tokenWidth = 0;\n                    // Do not truncate in this case, because there is no user case\n                    // and it is too complicated.\n                }\n                else {\n                    if (tokenWidthNotSpecified) {\n                        tokenWidth = token.textWidth;\n\n                        // FIXME: If image is not loaded and textWidth is not specified, calling\n                        // `getBoundingRect()` will not get correct result.\n                        var textBackgroundColor = tokenStyle.textBackgroundColor;\n                        var bgImg = textBackgroundColor && textBackgroundColor.image;\n\n                        // Use cases:\n                        // (1) If image is not loaded, it will be loaded at render phase and call\n                        // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n                        // image, and then the right size will be calculated here at the next tick.\n                        // See `graphic/helper/text.js`.\n                        // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n                        // use `imageHelper.findExistImage` to find cached image.\n                        // `imageHelper.findExistImage` will always be called here before\n                        // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n                        // which ensures that image will not be rendered before correct size calcualted.\n                        if (bgImg) {\n                            bgImg = imageHelper.findExistImage(bgImg);\n                            if (imageHelper.isImageReady(bgImg)) {\n                                tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n                            }\n                        }\n                    }\n\n                    var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n                    tokenWidth += paddingW;\n\n                    var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n                    if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n                        if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n                            token.text = '';\n                            token.textWidth = tokenWidth = 0;\n                        }\n                        else {\n                            token.text = truncateText(\n                                token.text, remianTruncWidth - paddingW, font, truncate.ellipsis,\n                                {minChar: truncate.minChar}\n                            );\n                            token.textWidth = textContain.getWidth(token.text, font);\n                            tokenWidth = token.textWidth + paddingW;\n                        }\n                    }\n                }\n\n                lineWidth += (token.width = tokenWidth);\n                tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n            }\n\n            line.width = lineWidth;\n            line.lineHeight = lineHeight;\n            contentHeight += lineHeight;\n            contentWidth = Math.max(contentWidth, lineWidth);\n        }\n\n        contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n        contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n        if (stlPadding) {\n            contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n            contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n        }\n\n        for (var i = 0; i < pendingList.length; i++) {\n            var token = pendingList[i];\n            var percentWidth = token.percentWidth;\n            // Should not base on outerWidth, because token can not be placed out of padding.\n            token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n        }\n\n        return contentBlock;\n    }\n\n    function pushTokens(block, str, styleName) {\n        var isEmptyStr = str === '';\n        var strs = str.split('\\n');\n        var lines = block.lines;\n\n        for (var i = 0; i < strs.length; i++) {\n            var text = strs[i];\n            var token = {\n                styleName: styleName,\n                text: text,\n                isLineHolder: !text && !isEmptyStr\n            };\n\n            // The first token should be appended to the last line.\n            if (!i) {\n                var tokens = (lines[lines.length - 1] || (lines[0] = {tokens: []})).tokens;\n\n                // Consider cases:\n                // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n                // (which is a placeholder) should be replaced by new token.\n                // (2) A image backage, where token likes {a|}.\n                // (3) A redundant '' will affect textAlign in line.\n                // (4) tokens with the same tplName should not be merged, because\n                // they should be displayed in different box (with border and padding).\n                var tokensLen = tokens.length;\n                (tokensLen === 1 && tokens[0].isLineHolder)\n                    ? (tokens[0] = token)\n                    // Consider text is '', only insert when it is the \"lineHolder\" or\n                    // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n                    : ((text || !tokensLen || isEmptyStr) && tokens.push(token));\n            }\n            // Other tokens always start a new line.\n            else {\n                // If there is '', insert it as a placeholder.\n                lines.push({tokens: [token]});\n            }\n        }\n    }\n\n    function makeFont(style) {\n        // FIXME in node-canvas fontWeight is before fontStyle\n        // Use `fontSize` `fontFamily` to check whether font properties are defined.\n        return (style.fontSize || style.fontFamily) && [\n            style.fontStyle,\n            style.fontWeight,\n            (style.fontSize || 12) + 'px',\n            // If font properties are defined, `fontFamily` should not be ignored.\n            style.fontFamily || 'sans-serif'\n        ].join(' ') || style.textFont || style.font;\n    }\n\n    var textContain = {\n\n        getWidth: getTextWidth,\n\n        getBoundingRect: getTextRect,\n\n        adjustTextPositionOnRect: adjustTextPositionOnRect,\n\n        truncateText: truncateText,\n\n        measureText: measureText,\n\n        getLineHeight: getLineHeight,\n\n        parsePlainText: parsePlainText,\n\n        parseRichText: parseRichText,\n\n        adjustTextX: adjustTextX,\n\n        adjustTextY: adjustTextY,\n\n        makeFont: makeFont,\n\n        DEFAULT_FONT: DEFAULT_FONT\n    };\n\n    module.exports = textContain;\n\n\n/***/ }),\n\n/***/ 622:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var vec2 = __webpack_require__(611);\n    var v2Create = vec2.create;\n    var v2DistSquare = vec2.distSquare;\n    var mathPow = Math.pow;\n    var mathSqrt = Math.sqrt;\n\n    var EPSILON = 1e-8;\n    var EPSILON_NUMERIC = 1e-4;\n\n    var THREE_SQRT = mathSqrt(3);\n    var ONE_THIRD = 1 / 3;\n\n    // 临时变量\n    var _v0 = v2Create();\n    var _v1 = v2Create();\n    var _v2 = v2Create();\n    // var _v3 = vec2.create();\n\n    function isAroundZero(val) {\n        return val > -EPSILON && val < EPSILON;\n    }\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n    /**\n     * 计算三次贝塞尔值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return onet * onet * (onet * p0 + 3 * t * p1)\n             + t * t * (t * p3 + 3 * onet * p2);\n    }\n\n    /**\n     * 计算三次贝塞尔导数值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicDerivativeAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return 3 * (\n            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\n            + (p3 - p2) * t * t\n        );\n    }\n\n    /**\n     * 计算三次贝塞尔方程根，使用盛金公式\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} val\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function cubicRootAt(p0, p1, p2, p3, val, roots) {\n        // Evaluate roots of cubic functions\n        var a = p3 + 3 * (p1 - p2) - p0;\n        var b = 3 * (p2 - p1 * 2 + p0);\n        var c = 3 * (p1  - p0);\n        var d = p0 - val;\n\n        var A = b * b - 3 * a * c;\n        var B = b * c - 9 * a * d;\n        var C = c * c - 3 * b * d;\n\n        var n = 0;\n\n        if (isAroundZero(A) && isAroundZero(B)) {\n            if (isAroundZero(b)) {\n                roots[0] = 0;\n            }\n            else {\n                var t1 = -c / b;  //t1, t2, t3, b is not zero\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = B * B - 4 * A * C;\n\n            if (isAroundZero(disc)) {\n                var K = B / A;\n                var t1 = -b / a + K;  // t1, a is not zero\n                var t2 = -K / 2;  // t2, t3\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n                if (Y1 < 0) {\n                    Y1 = -mathPow(-Y1, ONE_THIRD);\n                }\n                else {\n                    Y1 = mathPow(Y1, ONE_THIRD);\n                }\n                if (Y2 < 0) {\n                    Y2 = -mathPow(-Y2, ONE_THIRD);\n                }\n                else {\n                    Y2 = mathPow(Y2, ONE_THIRD);\n                }\n                var t1 = (-b - (Y1 + Y2)) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else {\n                var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n                var theta = Math.acos(T) / 3;\n                var ASqrt = mathSqrt(A);\n                var tmp = Math.cos(theta);\n\n                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n                if (t3 >= 0 && t3 <= 1) {\n                    roots[n++] = t3;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算三次贝塞尔方程极限值的位置\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {Array.<number>} extrema\n     * @return {number} 有效数目\n     */\n    function cubicExtrema(p0, p1, p2, p3, extrema) {\n        var b = 6 * p2 - 12 * p1 + 6 * p0;\n        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n        var c = 3 * p1 - 3 * p0;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <=1) {\n                    extrema[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                extrema[0] = -b / (2 * a);\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    extrema[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    extrema[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 细分三次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function cubicSubdivide(p0, p1, p2, p3, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p23 = (p3 - p2) * t + p2;\n\n        var p012 = (p12 - p01) * t + p01;\n        var p123 = (p23 - p12) * t + p12;\n\n        var p0123 = (p123 - p012) * t + p012;\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n        out[3] = p0123;\n        // Seg1\n        out[4] = p0123;\n        out[5] = p123;\n        out[6] = p23;\n        out[7] = p3;\n    }\n\n    /**\n     * 投射点到三次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} [out] 投射点\n     * @return {number}\n     */\n    function cubicProjectPoint(\n        x0, y0, x1, y1, x2, y2, x3, y3,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n        var prev;\n        var next;\n        var d1;\n        var d2;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n            d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            prev = t - interval;\n            next = t + interval;\n            // t - interval\n            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n\n            d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = cubicAt(x0, x1, x2, x3, next);\n                _v2[1] = cubicAt(y0, y1, y2, y3, next);\n                d2 = v2DistSquare(_v2, _v0);\n\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = cubicAt(x0, x1, x2, x3, t);\n            out[1] = cubicAt(y0, y1, y2, y3, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    /**\n     * 计算二次方贝塞尔值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticAt(p0, p1, p2, t) {\n        var onet = 1 - t;\n        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n    }\n\n    /**\n     * 计算二次方贝塞尔导数值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticDerivativeAt(p0, p1, p2, t) {\n        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n    }\n\n    /**\n     * 计算二次方贝塞尔方程根\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function quadraticRootAt(p0, p1, p2, val, roots) {\n        var a = p0 - 2 * p1 + p2;\n        var b = 2 * (p1 - p0);\n        var c = p0 - val;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                var t1 = -b / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算二次贝塞尔方程极限值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @return {number}\n     */\n    function quadraticExtremum(p0, p1, p2) {\n        var divider = p0 + p2 - 2 * p1;\n        if (divider === 0) {\n            // p1 is center of p0 and p2\n            return 0.5;\n        }\n        else {\n            return (p0 - p1) / divider;\n        }\n    }\n\n    /**\n     * 细分二次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function quadraticSubdivide(p0, p1, p2, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p012 = (p12 - p01) * t + p01;\n\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n\n        // Seg1\n        out[3] = p012;\n        out[4] = p12;\n        out[5] = p2;\n    }\n\n    /**\n     * 投射点到二次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} out 投射点\n     * @return {number}\n     */\n    function quadraticProjectPoint(\n        x0, y0, x1, y1, x2, y2,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = quadraticAt(x0, x1, x2, _t);\n            _v1[1] = quadraticAt(y0, y1, y2, _t);\n            var d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            var prev = t - interval;\n            var next = t + interval;\n            // t - interval\n            _v1[0] = quadraticAt(x0, x1, x2, prev);\n            _v1[1] = quadraticAt(y0, y1, y2, prev);\n\n            var d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = quadraticAt(x0, x1, x2, next);\n                _v2[1] = quadraticAt(y0, y1, y2, next);\n                var d2 = v2DistSquare(_v2, _v0);\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = quadraticAt(x0, x1, x2, t);\n            out[1] = quadraticAt(y0, y1, y2, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    module.exports = {\n\n        cubicAt: cubicAt,\n\n        cubicDerivativeAt: cubicDerivativeAt,\n\n        cubicRootAt: cubicRootAt,\n\n        cubicExtrema: cubicExtrema,\n\n        cubicSubdivide: cubicSubdivide,\n\n        cubicProjectPoint: cubicProjectPoint,\n\n        quadraticAt: quadraticAt,\n\n        quadraticDerivativeAt: quadraticDerivativeAt,\n\n        quadraticRootAt: quadraticRootAt,\n\n        quadraticExtremum: quadraticExtremum,\n\n        quadraticSubdivide: quadraticSubdivide,\n\n        quadraticProjectPoint: quadraticProjectPoint\n    };\n\n\n/***/ }),\n\n/***/ 623:\n/***/ (function(module, exports) {\n\n\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n    /**\n     * 3x2矩阵操作类\n     * @exports zrender/tool/matrix\n     */\n    var matrix = {\n        /**\n         * 创建一个单位矩阵\n         * @return {Float32Array|Array.<number>}\n         */\n        create : function() {\n            var out = new ArrayCtor(6);\n            matrix.identity(out);\n\n            return out;\n        },\n        /**\n         * 设置矩阵为单位矩阵\n         * @param {Float32Array|Array.<number>} out\n         */\n        identity : function(out) {\n            out[0] = 1;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            out[4] = 0;\n            out[5] = 0;\n            return out;\n        },\n        /**\n         * 复制矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m\n         */\n        copy: function(out, m) {\n            out[0] = m[0];\n            out[1] = m[1];\n            out[2] = m[2];\n            out[3] = m[3];\n            out[4] = m[4];\n            out[5] = m[5];\n            return out;\n        },\n        /**\n         * 矩阵相乘\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m1\n         * @param {Float32Array|Array.<number>} m2\n         */\n        mul : function (out, m1, m2) {\n            // Consider matrix.mul(m, m2, m);\n            // where out is the same as m2.\n            // So use temp variable to escape error.\n            var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n            var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n            var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n            var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n            var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n            var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n            out[0] = out0;\n            out[1] = out1;\n            out[2] = out2;\n            out[3] = out3;\n            out[4] = out4;\n            out[5] = out5;\n            return out;\n        },\n        /**\n         * 平移变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        translate : function(out, a, v) {\n            out[0] = a[0];\n            out[1] = a[1];\n            out[2] = a[2];\n            out[3] = a[3];\n            out[4] = a[4] + v[0];\n            out[5] = a[5] + v[1];\n            return out;\n        },\n        /**\n         * 旋转变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {number} rad\n         */\n        rotate : function(out, a, rad) {\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n            var st = Math.sin(rad);\n            var ct = Math.cos(rad);\n\n            out[0] = aa * ct + ab * st;\n            out[1] = -aa * st + ab * ct;\n            out[2] = ac * ct + ad * st;\n            out[3] = -ac * st + ct * ad;\n            out[4] = ct * atx + st * aty;\n            out[5] = ct * aty - st * atx;\n            return out;\n        },\n        /**\n         * 缩放变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        scale : function(out, a, v) {\n            var vx = v[0];\n            var vy = v[1];\n            out[0] = a[0] * vx;\n            out[1] = a[1] * vy;\n            out[2] = a[2] * vx;\n            out[3] = a[3] * vy;\n            out[4] = a[4] * vx;\n            out[5] = a[5] * vy;\n            return out;\n        },\n        /**\n         * 求逆矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         */\n        invert : function(out, a) {\n\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n\n            var det = aa * ad - ab * ac;\n            if (!det) {\n                return null;\n            }\n            det = 1.0 / det;\n\n            out[0] = ad * det;\n            out[1] = -ab * det;\n            out[2] = -ac * det;\n            out[3] = aa * det;\n            out[4] = (ac * aty - ad * atx) * det;\n            out[5] = (ab * atx - aa * aty) * det;\n            return out;\n        }\n    };\n\n    module.exports = matrix;\n\n\n\n/***/ }),\n\n/***/ 625:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n\n    var Eventful = __webpack_require__(626);\n    var env = __webpack_require__(615);\n\n    var isDomLevel2 = (typeof window !== 'undefined') && !!window.addEventListener;\n\n    function getBoundingClientRect(el) {\n        // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n        return el.getBoundingClientRect ? el.getBoundingClientRect() : {left: 0, top: 0};\n    }\n\n    // `calculate` is optional, default false\n    function clientToLocal(el, e, out, calculate) {\n        out = out || {};\n\n        // According to the W3C Working Draft, offsetX and offsetY should be relative\n        // to the padding edge of the target element. The only browser using this convention\n        // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n        // not support the properties.\n        // (see http://www.jacklmoore.com/notes/mouse-position/)\n        // In zr painter.dom, padding edge equals to border edge.\n\n        // FIXME\n        // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n        // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n        // is too complex. So css-transfrom dont support in this case temporarily.\n        if (calculate || !env.canvasSupported) {\n            defaultGetZrXY(el, e, out);\n        }\n        // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n        // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n        // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n        // zoom-factor, overflow / opacity layers, transforms ...)\n        // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n        // <https://bugs.jquery.com/ticket/8523#comment:14>\n        // BTW3, In ff, offsetX/offsetY is always 0.\n        else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n            out.zrX = e.layerX;\n            out.zrY = e.layerY;\n        }\n        // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n        else if (e.offsetX != null) {\n            out.zrX = e.offsetX;\n            out.zrY = e.offsetY;\n        }\n        // For some other device, e.g., IOS safari.\n        else {\n            defaultGetZrXY(el, e, out);\n        }\n\n        return out;\n    }\n\n    function defaultGetZrXY(el, e, out) {\n        // This well-known method below does not support css transform.\n        var box = getBoundingClientRect(el);\n        out.zrX = e.clientX - box.left;\n        out.zrY = e.clientY - box.top;\n    }\n\n    /**\n     * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n     * `calculate` is optional, default false.\n     */\n    function normalizeEvent(el, e, calculate) {\n\n        e = e || window.event;\n\n        if (e.zrX != null) {\n            return e;\n        }\n\n        var eventType = e.type;\n        var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n        if (!isTouch) {\n            clientToLocal(el, e, e, calculate);\n            e.zrDelta = (e.wheelDelta) ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n        }\n        else {\n            var touch = eventType != 'touchend'\n                ? e.targetTouches[0]\n                : e.changedTouches[0];\n            touch && clientToLocal(el, touch, e, calculate);\n        }\n\n        return e;\n    }\n\n    function addEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.addEventListener(name, handler);\n        }\n        else {\n            el.attachEvent('on' + name, handler);\n        }\n    }\n\n    function removeEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.removeEventListener(name, handler);\n        }\n        else {\n            el.detachEvent('on' + name, handler);\n        }\n    }\n\n    /**\n     * preventDefault and stopPropagation.\n     * Notice: do not do that in zrender. Upper application\n     * do that if necessary.\n     *\n     * @memberOf module:zrender/core/event\n     * @method\n     * @param {Event} e : event对象\n     */\n    var stop = isDomLevel2\n        ? function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.cancelBubble = true;\n        }\n        : function (e) {\n            e.returnValue = false;\n            e.cancelBubble = true;\n        };\n\n    module.exports = {\n        clientToLocal: clientToLocal,\n        normalizeEvent: normalizeEvent,\n        addEventListener: addEventListener,\n        removeEventListener: removeEventListener,\n\n        stop: stop,\n        // 做向上兼容\n        Dispatcher: Eventful\n    };\n\n\n\n/***/ }),\n\n/***/ 626:\n/***/ (function(module, exports) {\n\n/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n\n\n    var arrySlice = Array.prototype.slice;\n\n    /**\n     * 事件分发器\n     * @alias module:zrender/mixin/Eventful\n     * @constructor\n     */\n    var Eventful = function () {\n        this._$handlers = {};\n    };\n\n    Eventful.prototype = {\n\n        constructor: Eventful,\n\n        /**\n         * 单次触发绑定，trigger后销毁\n         *\n         * @param {string} event 事件名\n         * @param {Function} handler 响应函数\n         * @param {Object} context\n         */\n        one: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: true,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 绑定事件\n         * @param {string} event 事件名\n         * @param {Function} handler 事件处理函数\n         * @param {Object} [context]\n         */\n        on: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: false,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 是否绑定了事件\n         * @param  {string}  event\n         * @return {boolean}\n         */\n        isSilent: function (event) {\n            var _h = this._$handlers;\n            return _h[event] && _h[event].length;\n        },\n\n        /**\n         * 解绑事件\n         * @param {string} event 事件名\n         * @param {Function} [handler] 事件处理函数\n         */\n        off: function (event, handler) {\n            var _h = this._$handlers;\n\n            if (!event) {\n                this._$handlers = {};\n                return this;\n            }\n\n            if (handler) {\n                if (_h[event]) {\n                    var newList = [];\n                    for (var i = 0, l = _h[event].length; i < l; i++) {\n                        if (_h[event][i]['h'] != handler) {\n                            newList.push(_h[event][i]);\n                        }\n                    }\n                    _h[event] = newList;\n                }\n\n                if (_h[event] && _h[event].length === 0) {\n                    delete _h[event];\n                }\n            }\n            else {\n                delete _h[event];\n            }\n\n            return this;\n        },\n\n        /**\n         * 事件分发\n         *\n         * @param {string} type 事件类型\n         */\n        trigger: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 3) {\n                    args = arrySlice.call(args, 1);\n                }\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(_h[i]['ctx']);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(_h[i]['ctx'], args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 带有context的事件分发, 最后一个参数是事件回调的context\n         * @param {string} type 事件类型\n         */\n        triggerWithContext: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 4) {\n                    args = arrySlice.call(args, 1, args.length - 1);\n                }\n                var ctx = args[args.length - 1];\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(ctx);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(ctx, args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(ctx, args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(ctx, args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        }\n    };\n\n    // 对象可以通过 onxxxx 绑定事件\n    /**\n     * @event module:zrender/mixin/Eventful#onclick\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseout\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousemove\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousewheel\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousedown\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseup\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrag\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragstart\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragend\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragenter\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragleave\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrop\n     * @type {Function}\n     * @default null\n     */\n\n    module.exports = Eventful;\n\n\n\n/***/ }),\n\n/***/ 627:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/tool/color\n */\n\n\n    var LRU = __webpack_require__(671);\n\n    var kCSSColorTable = {\n        'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\n        'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\n        'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\n        'beige': [245,245,220,1], 'bisque': [255,228,196,1],\n        'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\n        'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\n        'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\n        'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\n        'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\n        'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\n        'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\n        'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\n        'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\n        'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\n        'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\n        'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\n        'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\n        'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\n        'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\n        'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\n        'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\n        'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\n        'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\n        'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\n        'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\n        'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\n        'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\n        'gray': [128,128,128,1], 'green': [0,128,0,1],\n        'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\n        'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\n        'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\n        'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\n        'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\n        'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\n        'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\n        'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\n        'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\n        'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\n        'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\n        'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\n        'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\n        'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\n        'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\n        'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\n        'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\n        'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\n        'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\n        'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\n        'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\n        'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\n        'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\n        'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\n        'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\n        'orange': [255,165,0,1], 'orangered': [255,69,0,1],\n        'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\n        'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\n        'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\n        'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\n        'pink': [255,192,203,1], 'plum': [221,160,221,1],\n        'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\n        'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\n        'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\n        'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\n        'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\n        'sienna': [160,82,45,1], 'silver': [192,192,192,1],\n        'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\n        'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\n        'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\n        'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\n        'teal': [0,128,128,1], 'thistle': [216,191,216,1],\n        'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\n        'violet': [238,130,238,1], 'wheat': [245,222,179,1],\n        'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\n        'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\n    };\n\n    function clampCssByte(i) {  // Clamp to integer 0 .. 255.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 255 ? 255 : i;\n    }\n\n    function clampCssAngle(i) {  // Clamp to integer 0 .. 360.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 360 ? 360 : i;\n    }\n\n    function clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\n        return f < 0 ? 0 : f > 1 ? 1 : f;\n    }\n\n    function parseCssInt(str) {  // int or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssByte(parseFloat(str) / 100 * 255);\n        }\n        return clampCssByte(parseInt(str, 10));\n    }\n\n    function parseCssFloat(str) {  // float or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssFloat(parseFloat(str) / 100);\n        }\n        return clampCssFloat(parseFloat(str));\n    }\n\n    function cssHueToRgb(m1, m2, h) {\n        if (h < 0) {\n            h += 1;\n        }\n        else if (h > 1) {\n            h -= 1;\n        }\n\n        if (h * 6 < 1) {\n            return m1 + (m2 - m1) * h * 6;\n        }\n        if (h * 2 < 1) {\n            return m2;\n        }\n        if (h * 3 < 2) {\n            return m1 + (m2 - m1) * (2/3 - h) * 6;\n        }\n        return m1;\n    }\n\n    function lerp(a, b, p) {\n        return a + (b - a) * p;\n    }\n\n    function setRgba(out, r, g, b, a) {\n        out[0] = r; out[1] = g; out[2] = b; out[3] = a;\n        return out;\n    }\n    function copyRgba(out, a) {\n        out[0] = a[0]; out[1] = a[1]; out[2] = a[2]; out[3] = a[3];\n        return out;\n    }\n    var colorCache = new LRU(20);\n    var lastRemovedArr = null;\n    function putToCache(colorStr, rgbaArr) {\n        // Reuse removed array\n        if (lastRemovedArr) {\n            copyRgba(lastRemovedArr, rgbaArr);\n        }\n        lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || (rgbaArr.slice()));\n    }\n    /**\n     * @param {string} colorStr\n     * @param {Array.<number>} out\n     * @return {Array.<number>}\n     * @memberOf module:zrender/util/color\n     */\n    function parse(colorStr, rgbaArr) {\n        if (!colorStr) {\n            return;\n        }\n        rgbaArr = rgbaArr || [];\n\n        var cached = colorCache.get(colorStr);\n        if (cached) {\n            return copyRgba(rgbaArr, cached);\n        }\n\n        // colorStr may be not string\n        colorStr = colorStr + '';\n        // Remove all whitespace, not compliant, but should just be more accepting.\n        var str = colorStr.replace(/ /g, '').toLowerCase();\n\n        // Color keywords (and transparent) lookup.\n        if (str in kCSSColorTable) {\n            copyRgba(rgbaArr, kCSSColorTable[str]);\n            putToCache(colorStr, rgbaArr);\n            return rgbaArr;\n        }\n\n        // #abc and #abc123 syntax.\n        if (str.charAt(0) === '#') {\n            if (str.length === 4) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xfff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n                    (iv & 0xf0) | ((iv & 0xf0) >> 4),\n                    (iv & 0xf) | ((iv & 0xf) << 4),\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n            else if (str.length === 7) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xffffff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    (iv & 0xff0000) >> 16,\n                    (iv & 0xff00) >> 8,\n                    iv & 0xff,\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n\n            return;\n        }\n        var op = str.indexOf('('), ep = str.indexOf(')');\n        if (op !== -1 && ep + 1 === str.length) {\n            var fname = str.substr(0, op);\n            var params = str.substr(op + 1, ep - (op + 1)).split(',');\n            var alpha = 1;  // To allow case fallthrough.\n            switch (fname) {\n                case 'rgba':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    alpha = parseCssFloat(params.pop()); // jshint ignore:line\n                // Fall through.\n                case 'rgb':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    setRgba(rgbaArr,\n                        parseCssInt(params[0]),\n                        parseCssInt(params[1]),\n                        parseCssInt(params[2]),\n                        alpha\n                    );\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsla':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    params[3] = parseCssFloat(params[3]);\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsl':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                default:\n                    return;\n            }\n        }\n\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return;\n    }\n\n    /**\n     * @param {Array.<number>} hsla\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} rgba\n     */\n    function hsla2rgba(hsla, rgba) {\n        var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parseCssFloat(hsla[1]);\n        var l = parseCssFloat(hsla[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n\n        rgba = rgba || [];\n        setRgba(rgba,\n            clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255),\n            1\n        );\n\n        if (hsla.length === 4) {\n            rgba[3] = hsla[3];\n        }\n\n        return rgba;\n    }\n\n    /**\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} hsla\n     */\n    function rgba2hsla(rgba) {\n        if (!rgba) {\n            return;\n        }\n\n        // RGB from 0 to 255\n        var R = rgba[0] / 255;\n        var G = rgba[1] / 255;\n        var B = rgba[2] / 255;\n\n        var vMin = Math.min(R, G, B); // Min. value of RGB\n        var vMax = Math.max(R, G, B); // Max. value of RGB\n        var delta = vMax - vMin; // Delta RGB value\n\n        var L = (vMax + vMin) / 2;\n        var H;\n        var S;\n        // HSL results from 0 to 1\n        if (delta === 0) {\n            H = 0;\n            S = 0;\n        }\n        else {\n            if (L < 0.5) {\n                S = delta / (vMax + vMin);\n            }\n            else {\n                S = delta / (2 - vMax - vMin);\n            }\n\n            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\n            if (R === vMax) {\n                H = deltaB - deltaG;\n            }\n            else if (G === vMax) {\n                H = (1 / 3) + deltaR - deltaB;\n            }\n            else if (B === vMax) {\n                H = (2 / 3) + deltaG - deltaR;\n            }\n\n            if (H < 0) {\n                H += 1;\n            }\n\n            if (H > 1) {\n                H -= 1;\n            }\n        }\n\n        var hsla = [H * 360, S, L];\n\n        if (rgba[3] != null) {\n            hsla.push(rgba[3]);\n        }\n\n        return hsla;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number} level\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function lift(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            for (var i = 0; i < 3; i++) {\n                if (level < 0) {\n                    colorArr[i] = colorArr[i] * (1 - level) | 0;\n                }\n                else {\n                    colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\n                }\n            }\n            return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function toHex(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\n        }\n    }\n\n    /**\n     * Map value to color. Faster than mapToColor methods because color is represented by rgba array.\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<Array.<number>>} colors List of rgba color array\n     * @param {Array.<number>} [out] Mapped gba color array\n     * @return {Array.<number>} will be null/undefined if input illegal.\n     */\n    function fastMapToColor(normalizedValue, colors, out) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        out = out || [];\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = colors[leftIndex];\n        var rightColor = colors[rightIndex];\n        var dv = value - leftIndex;\n        out[0] = clampCssByte(lerp(leftColor[0], rightColor[0], dv));\n        out[1] = clampCssByte(lerp(leftColor[1], rightColor[1], dv));\n        out[2] = clampCssByte(lerp(leftColor[2], rightColor[2], dv));\n        out[3] = clampCssFloat(lerp(leftColor[3], rightColor[3], dv));\n\n        return out;\n    }\n    /**\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<string>} colors Color list.\n     * @param {boolean=} fullOutput Default false.\n     * @return {(string|Object)} Result color. If fullOutput,\n     *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n     * @memberOf module:zrender/util/color\n     */\n    function mapToColor(normalizedValue, colors, fullOutput) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = parse(colors[leftIndex]);\n        var rightColor = parse(colors[rightIndex]);\n        var dv = value - leftIndex;\n\n        var color = stringify(\n            [\n                clampCssByte(lerp(leftColor[0], rightColor[0], dv)),\n                clampCssByte(lerp(leftColor[1], rightColor[1], dv)),\n                clampCssByte(lerp(leftColor[2], rightColor[2], dv)),\n                clampCssFloat(lerp(leftColor[3], rightColor[3], dv))\n            ],\n            'rgba'\n        );\n\n        return fullOutput\n            ? {\n                color: color,\n                leftIndex: leftIndex,\n                rightIndex: rightIndex,\n                value: value\n            }\n            : color;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} h 0 ~ 360, ignore when null.\n     * @param {number=} s 0 ~ 1, ignore when null.\n     * @param {number=} l 0 ~ 1, ignore when null.\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyHSL(color, h, s, l) {\n        color = parse(color);\n\n        if (color) {\n            color = rgba2hsla(color);\n            h != null && (color[0] = clampCssAngle(h));\n            s != null && (color[1] = parseCssFloat(s));\n            l != null && (color[2] = parseCssFloat(l));\n\n            return stringify(hsla2rgba(color), 'rgba');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} alpha 0 ~ 1\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyAlpha(color, alpha) {\n        color = parse(color);\n\n        if (color && alpha != null) {\n            color[3] = clampCssFloat(alpha);\n            return stringify(color, 'rgba');\n        }\n    }\n\n    /**\n     * @param {Array.<number>} arrColor like [12,33,44,0.4]\n     * @param {string} type 'rgba', 'hsva', ...\n     * @return {string} Result color. (If input illegal, return undefined).\n     */\n    function stringify(arrColor, type) {\n        if (!arrColor || !arrColor.length) {\n            return;\n        }\n        var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n        if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n            colorStr += ',' + arrColor[3];\n        }\n        return type + '(' + colorStr + ')';\n    }\n\n    module.exports = {\n        parse: parse,\n        lift: lift,\n        toHex: toHex,\n        fastMapToColor: fastMapToColor,\n        mapToColor: mapToColor,\n        modifyHSL: modifyHSL,\n        modifyAlpha: modifyAlpha,\n        stringify: stringify\n    };\n\n\n\n\n/***/ }),\n\n/***/ 629:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var Model = __webpack_require__(614);\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n\n    var helper = {};\n\n    // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n    // allAxesInfo should be updated when setOption performed.\n    helper.collect = function (ecModel, api) {\n        var result = {\n            /**\n             * key: makeKey(axis.model)\n             * value: {\n             *      axis,\n             *      coordSys,\n             *      axisPointerModel,\n             *      triggerTooltip,\n             *      involveSeries,\n             *      snap,\n             *      seriesModels,\n             *      seriesDataCount\n             * }\n             */\n            axesInfo: {},\n            seriesInvolved: false,\n            /**\n             * key: makeKey(coordSys.model)\n             * value: Object: key makeKey(axis.model), value: axisInfo\n             */\n            coordSysAxesInfo: {},\n            coordSysMap: {}\n        };\n\n        collectAxesInfo(result, ecModel, api);\n\n        // Check seriesInvolved for performance, in case too many series in some chart.\n        result.seriesInvolved && collectSeriesInfo(result, ecModel);\n\n        return result;\n    };\n\n    function collectAxesInfo(result, ecModel, api) {\n        var globalTooltipModel = ecModel.getComponent('tooltip');\n        var globalAxisPointerModel = ecModel.getComponent('axisPointer');\n        // links can only be set on global.\n        var linksOption = globalAxisPointerModel.get('link', true) || [];\n        var linkGroups = [];\n\n        // Collect axes info.\n        each(api.getCoordinateSystems(), function (coordSys) {\n            // Some coordinate system do not support axes, like geo.\n            if (!coordSys.axisPointerEnabled) {\n                return;\n            }\n\n            var coordSysKey = makeKey(coordSys.model);\n            var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n            result.coordSysMap[coordSysKey] = coordSys;\n\n            // Set tooltip (like 'cross') is a convienent way to show axisPointer\n            // for user. So we enable seting tooltip on coordSys model.\n            var coordSysModel = coordSys.model;\n            var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n\n            each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null));\n\n            // If axis tooltip used, choose tooltip axis for each coordSys.\n            // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n            if (coordSys.getTooltipAxes\n                && globalTooltipModel\n                // If tooltip.showContent is set as false, tooltip will not\n                // show but axisPointer will show as normal.\n                && baseTooltipModel.get('show')\n            ) {\n                // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n                // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n                var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n                var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n                var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n                if (triggerAxis || cross) {\n                    each(tooltipAxes.baseAxes, curry(\n                        saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis\n                    ));\n                }\n                if (cross) {\n                    each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n                }\n            }\n\n            // fromTooltip: true | false | 'cross'\n            // triggerTooltip: true | false | null\n            function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n                var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n\n                var axisPointerShow = axisPointerModel.get('show');\n                if (!axisPointerShow || (\n                    axisPointerShow === 'auto'\n                    && !fromTooltip\n                    && !isHandleTrigger(axisPointerModel)\n                )) {\n                    return;\n                }\n\n                if (triggerTooltip == null) {\n                    triggerTooltip = axisPointerModel.get('triggerTooltip');\n                }\n\n                axisPointerModel = fromTooltip\n                    ? makeAxisPointerModel(\n                        axis, baseTooltipModel, globalAxisPointerModel, ecModel,\n                        fromTooltip, triggerTooltip\n                    )\n                    : axisPointerModel;\n\n                var snap = axisPointerModel.get('snap');\n                var key = makeKey(axis.model);\n                var involveSeries = triggerTooltip || snap || axis.type === 'category';\n\n                // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n                var axisInfo = result.axesInfo[key] = {\n                    key: key,\n                    axis: axis,\n                    coordSys: coordSys,\n                    axisPointerModel: axisPointerModel,\n                    triggerTooltip: triggerTooltip,\n                    involveSeries: involveSeries,\n                    snap: snap,\n                    useHandle: isHandleTrigger(axisPointerModel),\n                    seriesModels: []\n                };\n                axesInfoInCoordSys[key] = axisInfo;\n                result.seriesInvolved |= involveSeries;\n\n                var groupIndex = getLinkGroupIndex(linksOption, axis);\n                if (groupIndex != null) {\n                    var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {axesInfo: {}});\n                    linkGroup.axesInfo[key] = axisInfo;\n                    linkGroup.mapper = linksOption[groupIndex].mapper;\n                    axisInfo.linkGroup = linkGroup;\n                }\n            }\n        });\n    }\n\n    function makeAxisPointerModel(\n        axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip\n    ) {\n        var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n        var volatileOption = {};\n\n        each(\n            [\n                'type', 'snap', 'lineStyle', 'shadowStyle', 'label',\n                'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'\n            ],\n            function (field) {\n                volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n            }\n        );\n\n        // category axis do not auto snap, otherwise some tick that do not\n        // has value can not be hovered. value/time/log axis default snap if\n        // triggered from tooltip and trigger tooltip.\n        volatileOption.snap = axis.type !== 'category' && !!triggerTooltip;\n\n        // Compatibel with previous behavior, tooltip axis do not show label by default.\n        // Only these properties can be overrided from tooltip to axisPointer.\n        if (tooltipAxisPointerModel.get('type') === 'cross') {\n            volatileOption.type = 'line';\n        }\n        var labelOption = volatileOption.label || (volatileOption.label = {});\n        // Follow the convention, do not show label when triggered by tooltip by default.\n        labelOption.show == null && (labelOption.show = false);\n\n        if (fromTooltip === 'cross') {\n            // When 'cross', both axes show labels.\n            labelOption.show = true;\n            // If triggerTooltip, this is a base axis, which should better not use cross style\n            // (cross style is dashed by default)\n            if (!triggerTooltip) {\n                var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n                crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n            }\n        }\n\n        return axis.model.getModel(\n            'axisPointer',\n            new Model(volatileOption, globalAxisPointerModel, ecModel)\n        );\n    }\n\n    function collectSeriesInfo(result, ecModel) {\n        // Prepare data for axis trigger\n        ecModel.eachSeries(function (seriesModel) {\n\n            // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n            var coordSys = seriesModel.coordinateSystem;\n            var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n            var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n            if (!coordSys\n                || seriesTooltipTrigger === 'none'\n                || seriesTooltipTrigger === false\n                || seriesTooltipTrigger === 'item'\n                || seriesTooltipShow === false\n                || seriesModel.get('axisPointer.show', true) === false\n            ) {\n                return;\n            }\n\n            each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n                var axis = axisInfo.axis;\n                if (coordSys.getAxis(axis.dim) === axis) {\n                    axisInfo.seriesModels.push(seriesModel);\n                    axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n                    axisInfo.seriesDataCount += seriesModel.getData().count();\n                }\n            });\n\n        }, this);\n    }\n\n    /**\n     * For example:\n     * {\n     *     axisPointer: {\n     *         links: [{\n     *             xAxisIndex: [2, 4],\n     *             yAxisIndex: 'all'\n     *         }, {\n     *             xAxisId: ['a5', 'a7'],\n     *             xAxisName: 'xxx'\n     *         }]\n     *     }\n     * }\n     */\n    function getLinkGroupIndex(linksOption, axis) {\n        var axisModel = axis.model;\n        var dim = axis.dim;\n        for (var i = 0; i < linksOption.length; i++) {\n            var linkOption = linksOption[i] || {};\n            if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id)\n                || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex)\n                || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)\n            ) {\n                return i;\n            }\n        }\n    }\n\n    function checkPropInLink(linkPropValue, axisPropValue) {\n        return linkPropValue === 'all'\n            || (zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0)\n            || linkPropValue === axisPropValue;\n    }\n\n    helper.fixValue = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        if (!axisInfo) {\n            return;\n        }\n\n        var axisPointerModel = axisInfo.axisPointerModel;\n        var scale = axisInfo.axis.scale;\n        var option = axisPointerModel.option;\n        var status = axisPointerModel.get('status');\n        var value = axisPointerModel.get('value');\n\n        // Parse init value for category and time axis.\n        if (value != null) {\n            value = scale.parse(value);\n        }\n\n        var useHandle = isHandleTrigger(axisPointerModel);\n        // If `handle` used, `axisPointer` will always be displayed, so value\n        // and status should be initialized.\n        if (status == null) {\n            option.status = useHandle ? 'show' : 'hide';\n        }\n\n        var extent = scale.getExtent().slice();\n        extent[0] > extent[1] && extent.reverse();\n\n        if (// Pick a value on axis when initializing.\n            value == null\n            // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n            // where we should re-pick a value to keep `handle` displaying normally.\n            || value > extent[1]\n        ) {\n            // Make handle displayed on the end of the axis when init, which looks better.\n            value = extent[1];\n        }\n        if (value < extent[0]) {\n            value = extent[0];\n        }\n\n        option.value = value;\n\n        if (useHandle) {\n            option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n        }\n    };\n\n    helper.getAxisInfo = function (axisModel) {\n        var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n        return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n    };\n\n    helper.getAxisPointerModel = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        return axisInfo && axisInfo.axisPointerModel;\n    };\n\n    function isHandleTrigger(axisPointerModel) {\n        return !!axisPointerModel.get('handle.show');\n    }\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @return {string} unique key\n     */\n    var makeKey = helper.makeKey = function (model) {\n        return model.type + '||' + model.id;\n    };\n\n    module.exports = helper;\n\n\n\n/***/ }),\n\n/***/ 630:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n * List for data storage\n * @module echarts/data/List\n */\n\n\n    var UNDEFINED = 'undefined';\n    var globalObj = typeof window === 'undefined' ? global : window;\n    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\n        ? Array : globalObj.Float64Array;\n    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\n        ? Array : globalObj.Int32Array;\n\n    var dataCtors = {\n        'float': Float64Array,\n        'int': Int32Array,\n        // Ordinal data type can be string or int\n        'ordinal': Array,\n        'number': Array,\n        'time': Array\n    };\n\n    var Model = __webpack_require__(614);\n    var DataDiffer = __webpack_require__(739);\n\n    var zrUtil = __webpack_require__(606);\n    var modelUtil = __webpack_require__(609);\n    var isObject = zrUtil.isObject;\n\n    var TRANSFERABLE_PROPERTIES = [\n        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\n    ];\n\n    function transferProperties(a, b) {\n        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n            if (b.hasOwnProperty(propName)) {\n                a[propName] = b[propName];\n            }\n        });\n\n        a.__wrappedMethods = b.__wrappedMethods;\n    }\n\n    function DefaultDataProvider(dataArray) {\n        this._array = dataArray || [];\n    }\n\n    DefaultDataProvider.prototype.pure = false;\n\n    DefaultDataProvider.prototype.count = function () {\n        return this._array.length;\n    };\n    DefaultDataProvider.prototype.getItem = function (idx) {\n        return this._array[idx];\n    };\n\n    /**\n     * @constructor\n     * @alias module:echarts/data/List\n     *\n     * @param {Array.<string|Object>} dimensions\n     *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n     *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n     * @param {module:echarts/model/Model} hostModel\n     */\n    var List = function (dimensions, hostModel) {\n\n        dimensions = dimensions || ['x', 'y'];\n\n        var dimensionInfos = {};\n        var dimensionNames = [];\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimensionName;\n            var dimensionInfo = {};\n            if (typeof dimensions[i] === 'string') {\n                dimensionName = dimensions[i];\n                dimensionInfo = {\n                    name: dimensionName,\n                    coordDim: dimensionName,\n                    coordDimIndex: 0,\n                    stackable: false,\n                    // Type can be 'float', 'int', 'number'\n                    // Default is number, Precision of float may not enough\n                    type: 'number'\n                };\n            }\n            else {\n                dimensionInfo = dimensions[i];\n                dimensionName = dimensionInfo.name;\n                dimensionInfo.type = dimensionInfo.type || 'number';\n                if (!dimensionInfo.coordDim) {\n                    dimensionInfo.coordDim = dimensionName;\n                    dimensionInfo.coordDimIndex = 0;\n                }\n            }\n            dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n            dimensionNames.push(dimensionName);\n            dimensionInfos[dimensionName] = dimensionInfo;\n        }\n\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        this.dimensions = dimensionNames;\n\n        /**\n         * Infomation of each data dimension, like data type.\n         * @type {Object}\n         */\n        this._dimensionInfos = dimensionInfos;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.hostModel = hostModel;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.dataType;\n\n        /**\n         * Indices stores the indices of data subset after filtered.\n         * This data subset will be used in chart.\n         * @type {Array.<number>}\n         * @readOnly\n         */\n        this.indices = [];\n\n        /**\n         * Data storage\n         * @type {Object.<key, TypedArray|Array>}\n         * @private\n         */\n        this._storage = {};\n\n        /**\n         * @type {Array.<string>}\n         */\n        this._nameList = [];\n        /**\n         * @type {Array.<string>}\n         */\n        this._idList = [];\n\n        /**\n         * Models of data option is stored sparse for optimizing memory cost\n         * @type {Array.<module:echarts/model/Model>}\n         * @private\n         */\n        this._optionModels = [];\n\n        /**\n         * @param {module:echarts/data/List}\n         */\n        this.stackedOn = null;\n\n        /**\n         * Global visual properties after visual coding\n         * @type {Object}\n         * @private\n         */\n        this._visual = {};\n\n        /**\n         * Globel layout properties.\n         * @type {Object}\n         * @private\n         */\n        this._layout = {};\n\n        /**\n         * Item visual properties after visual coding\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemVisuals = [];\n\n        /**\n         * Item layout properties after layout\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemLayouts = [];\n\n        /**\n         * Graphic elemnents\n         * @type {Array.<module:zrender/Element>}\n         * @private\n         */\n        this._graphicEls = [];\n\n        /**\n         * @type {Array.<Array|Object>}\n         * @private\n         */\n        this._rawData;\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._extent;\n    };\n\n    var listProto = List.prototype;\n\n    listProto.type = 'list';\n\n    /**\n     * If each data item has it's own option\n     * @type {boolean}\n     */\n    listProto.hasItemOption = true;\n\n    /**\n     * Get dimension name\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     * @return {string} Concrete dim name.\n     */\n    listProto.getDimension = function (dim) {\n        if (!isNaN(dim)) {\n            dim = this.dimensions[dim] || dim;\n        }\n        return dim;\n    };\n\n    /**\n     * Get type and stackable info of particular dimension\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     */\n    listProto.getDimensionInfo = function (dim) {\n        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n    };\n\n    /**\n     * Initialize from data\n     * @param {Array.<Object|number|Array>} data\n     * @param {Array.<string>} [nameList]\n     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n     */\n    listProto.initData = function (data, nameList, dimValueGetter) {\n        data = data || [];\n\n        var isDataArray = zrUtil.isArray(data);\n        if (isDataArray) {\n            data = new DefaultDataProvider(data);\n        }\n        if (__DEV__) {\n            if (!isDataArray && (typeof data.getItem != 'function' || typeof data.count != 'function')) {\n                throw new Error('Inavlid data provider.');\n            }\n        }\n\n        this._rawData = data;\n\n        // Clear\n        var storage = this._storage = {};\n        var indices = this.indices = [];\n\n        var dimensions = this.dimensions;\n        var dimensionInfoMap = this._dimensionInfos;\n\n        var size = data.count();\n\n        var idList = [];\n        var nameRepeatCount = {};\n        var nameDimIdx;\n\n        nameList = nameList || [];\n\n        // Init storage\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimInfo = dimensionInfoMap[dimensions[i]];\n            dimInfo.otherDims.itemName === 0 && (nameDimIdx = i);\n            var DataCtor = dataCtors[dimInfo.type];\n            storage[dimensions[i]] = new DataCtor(size);\n        }\n\n        var self = this;\n        if (!dimValueGetter) {\n            self.hasItemOption = false;\n        }\n        // Default dim value getter\n        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n            var value = modelUtil.getDataItemValue(dataItem);\n            // If any dataItem is like { value: 10 }\n            if (modelUtil.isDataItemOption(dataItem)) {\n                self.hasItemOption = true;\n            }\n            return modelUtil.converDataValue(\n                (value instanceof Array)\n                    ? value[dimIndex]\n                    // If value is a single number or something else not array.\n                    : value,\n                dimensionInfoMap[dimName]\n            );\n        };\n\n        for (var i = 0; i < size; i++) {\n            // NOTICE: Try not to write things into dataItem\n            var dataItem = data.getItem(i);\n            // Each data item is value\n            // [1, 2]\n            // 2\n            // Bar chart, line chart which uses category axis\n            // only gives the 'y' value. 'x' value is the indices of cateogry\n            // Use a tempValue to normalize the value to be a (x, y) value\n\n            // Store the data by dimensions\n            for (var k = 0; k < dimensions.length; k++) {\n                var dim = dimensions[k];\n                var dimStorage = storage[dim];\n                // PENDING NULL is empty or zero\n                dimStorage[i] = dimValueGetter(dataItem, dim, i, k);\n            }\n\n            indices.push(i);\n        }\n\n        // Use the name in option and create id\n        for (var i = 0; i < size; i++) {\n            var dataItem = data.getItem(i);\n            if (!nameList[i] && dataItem) {\n                if (dataItem.name != null) {\n                    nameList[i] = dataItem.name;\n                }\n                else if (nameDimIdx != null) {\n                    nameList[i] = storage[dimensions[nameDimIdx]][i];\n                }\n            }\n            var name = nameList[i] || '';\n            // Try using the id in option\n            var id = dataItem && dataItem.id;\n\n            if (!id && name) {\n                // Use name as id and add counter to avoid same name\n                nameRepeatCount[name] = nameRepeatCount[name] || 0;\n                id = name;\n                if (nameRepeatCount[name] > 0) {\n                    id += '__ec__' + nameRepeatCount[name];\n                }\n                nameRepeatCount[name]++;\n            }\n            id && (idList[i] = id);\n        }\n\n        this._nameList = nameList;\n        this._idList = idList;\n    };\n\n    /**\n     * @return {number}\n     */\n    listProto.count = function () {\n        return this.indices.length;\n    };\n\n    /**\n     * Get value. Return NaN if idx is out of range.\n     * @param {string} dim Dim must be concrete name.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.get = function (dim, idx, stack) {\n        var storage = this._storage;\n        var dataIndex = this.indices[idx];\n\n        // If value not exists\n        if (dataIndex == null || !storage[dim]) {\n            return NaN;\n        }\n\n        var value = storage[dim][dataIndex];\n        // FIXME ordinal data type is not stackable\n        if (stack) {\n            var dimensionInfo = this._dimensionInfos[dim];\n            if (dimensionInfo && dimensionInfo.stackable) {\n                var stackedOn = this.stackedOn;\n                while (stackedOn) {\n                    // Get no stacked data of stacked on\n                    var stackedValue = stackedOn.get(dim, idx);\n                    // Considering positive stack, negative stack and empty data\n                    if ((value >= 0 && stackedValue > 0)  // Positive stack\n                        || (value <= 0 && stackedValue < 0) // Negative stack\n                    ) {\n                        value += stackedValue;\n                    }\n                    stackedOn = stackedOn.stackedOn;\n                }\n            }\n        }\n        return value;\n    };\n\n    /**\n     * Get value for multi dimensions.\n     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.getValues = function (dimensions, idx, stack) {\n        var values = [];\n\n        if (!zrUtil.isArray(dimensions)) {\n            stack = idx;\n            idx = dimensions;\n            dimensions = this.dimensions;\n        }\n\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            values.push(this.get(dimensions[i], idx, stack));\n        }\n\n        return values;\n    };\n\n    /**\n     * If value is NaN. Inlcuding '-'\n     * @param {string} dim\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.hasValue = function (idx) {\n        var dimensions = this.dimensions;\n        var dimensionInfos = this._dimensionInfos;\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            if (\n                // Ordinal type can be string or number\n                dimensionInfos[dimensions[i]].type !== 'ordinal'\n                && isNaN(this.get(dimensions[i], idx))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * Get extent of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     * @param {Function} filter\n     */\n    listProto.getDataExtent = function (dim, stack, filter) {\n        dim = this.getDimension(dim);\n        var dimData = this._storage[dim];\n        var dimInfo = this.getDimensionInfo(dim);\n        stack = (dimInfo && dimInfo.stackable) && stack;\n        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\n        var value;\n        if (dimExtent) {\n            return dimExtent;\n        }\n        // var dimInfo = this._dimensionInfos[dim];\n        if (dimData) {\n            var min = Infinity;\n            var max = -Infinity;\n            // var isOrdinal = dimInfo.type === 'ordinal';\n            for (var i = 0, len = this.count(); i < len; i++) {\n                value = this.get(dim, i, stack);\n                // FIXME\n                // if (isOrdinal && typeof value === 'string') {\n                //     value = zrUtil.indexOf(dimData, value);\n                // }\n                if (!filter || filter(value, dim, i)) {\n                    value < min && (min = value);\n                    value > max && (max = value);\n                }\n            }\n            return (this._extent[dim + !!stack] = [min, max]);\n        }\n        else {\n            return [Infinity, -Infinity];\n        }\n    };\n\n    /**\n     * Get sum of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getSum = function (dim, stack) {\n        var dimData = this._storage[dim];\n        var sum = 0;\n        if (dimData) {\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var value = this.get(dim, i, stack);\n                if (!isNaN(value)) {\n                    sum += value;\n                }\n            }\n        }\n        return sum;\n    };\n\n    /**\n     * Retreive the index with given value\n     * @param {number} idx\n     * @param {number} value\n     * @return {number}\n     */\n    // FIXME Precision of float value\n    listProto.indexOf = function (dim, value) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var indices = this.indices;\n\n        if (dimData) {\n            for (var i = 0, len = indices.length; i < len; i++) {\n                var rawIndex = indices[i];\n                if (dimData[rawIndex] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given name\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfName = function (name) {\n        var indices = this.indices;\n        var nameList = this._nameList;\n\n        for (var i = 0, len = indices.length; i < len; i++) {\n            var rawIndex = indices[i];\n            if (nameList[rawIndex] === name) {\n                return i;\n            }\n        }\n\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given raw data index\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfRawIndex = function (rawIndex) {\n        // Indices are ascending\n        var indices = this.indices;\n\n        // If rawIndex === dataIndex\n        var rawDataIndex = indices[rawIndex];\n        if (rawDataIndex != null && rawDataIndex === rawIndex) {\n            return rawIndex;\n        }\n\n        var left = 0;\n        var right = indices.length - 1;\n        while (left <= right) {\n            var mid = (left + right) / 2 | 0;\n            if (indices[mid] < rawIndex) {\n                left = mid + 1;\n            }\n            else if (indices[mid] > rawIndex) {\n                right = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index of nearest value\n     * @param {string} dim\n     * @param {number} value\n     * @param {boolean} stack If given value is after stacked\n     * @param {number} [maxDistance=Infinity]\n     * @return {Array.<number>} Considere multiple points has the same value.\n     */\n    listProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var nearestIndices = [];\n\n        if (!dimData) {\n            return nearestIndices;\n        }\n\n        if (maxDistance == null) {\n            maxDistance = Infinity;\n        }\n\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n        for (var i = 0, len = this.count(); i < len; i++) {\n            var diff = value - this.get(dim, i, stack);\n            var dist = Math.abs(diff);\n            if (diff <= maxDistance && dist <= minDist) {\n                // For the case of two data are same on xAxis, which has sequence data.\n                // Show the nearest index\n                // https://github.com/ecomfe/echarts/issues/2869\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    nearestIndices.length = 0;\n                }\n                nearestIndices.push(i);\n            }\n        }\n        return nearestIndices;\n    };\n\n    /**\n     * Get raw data index\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawIndex = function (idx) {\n        var rawIdx = this.indices[idx];\n        return rawIdx == null ? -1 : rawIdx;\n    };\n\n    /**\n     * Get raw data item\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawDataItem = function (idx) {\n        return this._rawData.getItem(this.getRawIndex(idx));\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getName = function (idx) {\n        return this._nameList[this.indices[idx]] || '';\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getId = function (idx) {\n        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\n    };\n\n\n    function normalizeDimensions(dimensions) {\n        if (!zrUtil.isArray(dimensions)) {\n            dimensions = [dimensions];\n        }\n        return dimensions;\n    }\n\n    /**\n     * Data iteration\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     *\n     * @example\n     *  list.each('x', function (x, idx) {});\n     *  list.each(['x', 'y'], function (x, y, idx) {});\n     *  list.each(function (idx) {})\n     */\n    listProto.each = function (dims, cb, stack, context) {\n        if (typeof dims === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dims;\n            dims = [];\n        }\n\n        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n\n        var value = [];\n        var dimSize = dims.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            // Simple optimization\n            switch (dimSize) {\n                case 0:\n                    cb.call(context, i);\n                    break;\n                case 1:\n                    cb.call(context, this.get(dims[0], i, stack), i);\n                    break;\n                case 2:\n                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n                    break;\n                default:\n                    for (var k = 0; k < dimSize; k++) {\n                        value[k] = this.get(dims[k], i, stack);\n                    }\n                    // Index\n                    value[k] = i;\n                    cb.apply(context, value);\n            }\n        }\n    };\n\n    /**\n     * Data filter\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     */\n    listProto.filterSelf = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var newIndices = [];\n        var value = [];\n        var dimSize = dimensions.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            var keep;\n            // Simple optimization\n            if (!dimSize) {\n                keep = cb.call(context, i);\n            }\n            else if (dimSize === 1) {\n                keep = cb.call(\n                    context, this.get(dimensions[0], i, stack), i\n                );\n            }\n            else {\n                for (var k = 0; k < dimSize; k++) {\n                    value[k] = this.get(dimensions[k], i, stack);\n                }\n                value[k] = i;\n                keep = cb.apply(context, value);\n            }\n            if (keep) {\n                newIndices.push(indices[i]);\n            }\n        }\n\n        this.indices = newIndices;\n\n        // Reset data extent\n        this._extent = {};\n\n        return this;\n    };\n\n    /**\n     * Data mapping to a plain array\n     * @param {string|Array.<string>} [dimensions]\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.mapArray = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        var result = [];\n        this.each(dimensions, function () {\n            result.push(cb && cb.apply(this, arguments));\n        }, stack, context);\n        return result;\n    };\n\n    function cloneListForMapAndSample(original, excludeDimensions) {\n        var allDimensions = original.dimensions;\n        var list = new List(\n            zrUtil.map(allDimensions, original.getDimensionInfo, original),\n            original.hostModel\n        );\n        // FIXME If needs stackedOn, value may already been stacked\n        transferProperties(list, original);\n\n        var storage = list._storage = {};\n        var originalStorage = original._storage;\n        // Init storage\n        for (var i = 0; i < allDimensions.length; i++) {\n            var dim = allDimensions[i];\n            var dimStore = originalStorage[dim];\n            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n                storage[dim] = new dimStore.constructor(\n                    originalStorage[dim].length\n                );\n            }\n            else {\n                // Direct reference for other dimensions\n                storage[dim] = originalStorage[dim];\n            }\n        }\n        return list;\n    }\n\n    /**\n     * Data mapping to a new List with given dimensions\n     * @param {string|Array.<string>} dimensions\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.map = function (dimensions, cb, stack, context) {\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var list = cloneListForMapAndSample(this, dimensions);\n        // Following properties are all immutable.\n        // So we can reference to the same value\n        var indices = list.indices = this.indices;\n\n        var storage = list._storage;\n\n        var tmpRetValue = [];\n        this.each(dimensions, function () {\n            var idx = arguments[arguments.length - 1];\n            var retValue = cb && cb.apply(this, arguments);\n            if (retValue != null) {\n                // a number\n                if (typeof retValue === 'number') {\n                    tmpRetValue[0] = retValue;\n                    retValue = tmpRetValue;\n                }\n                for (var i = 0; i < retValue.length; i++) {\n                    var dim = dimensions[i];\n                    var dimStore = storage[dim];\n                    var rawIdx = indices[idx];\n                    if (dimStore) {\n                        dimStore[rawIdx] = retValue[i];\n                    }\n                }\n            }\n        }, stack, context);\n\n        return list;\n    };\n\n    /**\n     * Large data down sampling on given dimension\n     * @param {string} dimension\n     * @param {number} rate\n     * @param {Function} sampleValue\n     * @param {Function} sampleIndex Sample index for name and id\n     */\n    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n        var list = cloneListForMapAndSample(this, [dimension]);\n        var storage = this._storage;\n        var targetStorage = list._storage;\n\n        var originalIndices = this.indices;\n        var indices = list.indices = [];\n\n        var frameValues = [];\n        var frameIndices = [];\n        var frameSize = Math.floor(1 / rate);\n\n        var dimStore = targetStorage[dimension];\n        var len = this.count();\n        // Copy data from original data\n        for (var i = 0; i < storage[dimension].length; i++) {\n            targetStorage[dimension][i] = storage[dimension][i];\n        }\n        for (var i = 0; i < len; i += frameSize) {\n            // Last frame\n            if (frameSize > len - i) {\n                frameSize = len - i;\n                frameValues.length = frameSize;\n            }\n            for (var k = 0; k < frameSize; k++) {\n                var idx = originalIndices[i + k];\n                frameValues[k] = dimStore[idx];\n                frameIndices[k] = idx;\n            }\n            var value = sampleValue(frameValues);\n            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\n            // Only write value on the filtered data\n            dimStore[idx] = value;\n            indices.push(idx);\n        }\n\n        return list;\n    };\n\n    /**\n     * Get model of one data item.\n     *\n     * @param {number} idx\n     */\n    // FIXME Model proxy ?\n    listProto.getItemModel = function (idx) {\n        var hostModel = this.hostModel;\n        idx = this.indices[idx];\n        return new Model(this._rawData.getItem(idx), hostModel, hostModel && hostModel.ecModel);\n    };\n\n    /**\n     * Create a data differ\n     * @param {module:echarts/data/List} otherList\n     * @return {module:echarts/data/DataDiffer}\n     */\n    listProto.diff = function (otherList) {\n        var idList = this._idList;\n        var otherIdList = otherList && otherList._idList;\n        var val;\n        // Use prefix to avoid index to be the same as otherIdList[idx],\n        // which will cause weird udpate animation.\n        var prefix = 'e\\0\\0';\n\n        return new DataDiffer(\n            otherList ? otherList.indices : [],\n            this.indices,\n            function (idx) {\n                return (val = otherIdList[idx]) != null ? val : prefix + idx;\n            },\n            function (idx) {\n                return (val = idList[idx]) != null ? val : prefix + idx;\n            }\n        );\n    };\n    /**\n     * Get visual property.\n     * @param {string} key\n     */\n    listProto.getVisual = function (key) {\n        var visual = this._visual;\n        return visual && visual[key];\n    };\n\n    /**\n     * Set visual property\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setVisual('color', color);\n     *  setVisual({\n     *      'color': color\n     *  });\n     */\n    listProto.setVisual = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setVisual(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._visual = this._visual || {};\n        this._visual[key] = val;\n    };\n\n    /**\n     * Set layout property.\n     * @param {string|Object} key\n     * @param {*} [val]\n     */\n    listProto.setLayout = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setLayout(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._layout[key] = val;\n    };\n\n    /**\n     * Get layout property.\n     * @param  {string} key.\n     * @return {*}\n     */\n    listProto.getLayout = function (key) {\n        return this._layout[key];\n    };\n\n    /**\n     * Get layout of single data item\n     * @param {number} idx\n     */\n    listProto.getItemLayout = function (idx) {\n        return this._itemLayouts[idx];\n    };\n\n    /**\n     * Set layout of single data item\n     * @param {number} idx\n     * @param {Object} layout\n     * @param {boolean=} [merge=false]\n     */\n    listProto.setItemLayout = function (idx, layout, merge) {\n        this._itemLayouts[idx] = merge\n            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\n            : layout;\n    };\n\n    /**\n     * Clear all layout of single data item\n     */\n    listProto.clearItemLayouts = function () {\n        this._itemLayouts.length = 0;\n    };\n\n    /**\n     * Get visual property of single data item\n     * @param {number} idx\n     * @param {string} key\n     * @param {boolean} [ignoreParent=false]\n     */\n    listProto.getItemVisual = function (idx, key, ignoreParent) {\n        var itemVisual = this._itemVisuals[idx];\n        var val = itemVisual && itemVisual[key];\n        if (val == null && !ignoreParent) {\n            // Use global visual property\n            return this.getVisual(key);\n        }\n        return val;\n    };\n\n    /**\n     * Set visual property of single data item\n     *\n     * @param {number} idx\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setItemVisual(0, 'color', color);\n     *  setItemVisual(0, {\n     *      'color': color\n     *  });\n     */\n    listProto.setItemVisual = function (idx, key, value) {\n        var itemVisual = this._itemVisuals[idx] || {};\n        this._itemVisuals[idx] = itemVisual;\n\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    itemVisual[name] = key[name];\n                }\n            }\n            return;\n        }\n        itemVisual[key] = value;\n    };\n\n    /**\n     * Clear itemVisuals and list visual.\n     */\n    listProto.clearAllVisual = function () {\n        this._visual = {};\n        this._itemVisuals = [];\n    };\n\n    var setItemDataAndSeriesIndex = function (child) {\n        child.seriesIndex = this.seriesIndex;\n        child.dataIndex = this.dataIndex;\n        child.dataType = this.dataType;\n    };\n    /**\n     * Set graphic element relative to data. It can be set as null\n     * @param {number} idx\n     * @param {module:zrender/Element} [el]\n     */\n    listProto.setItemGraphicEl = function (idx, el) {\n        var hostModel = this.hostModel;\n\n        if (el) {\n            // Add data index and series index for indexing the data by element\n            // Useful in tooltip\n            el.dataIndex = idx;\n            el.dataType = this.dataType;\n            el.seriesIndex = hostModel && hostModel.seriesIndex;\n            if (el.type === 'group') {\n                el.traverse(setItemDataAndSeriesIndex, el);\n            }\n        }\n\n        this._graphicEls[idx] = el;\n    };\n\n    /**\n     * @param {number} idx\n     * @return {module:zrender/Element}\n     */\n    listProto.getItemGraphicEl = function (idx) {\n        return this._graphicEls[idx];\n    };\n\n    /**\n     * @param {Function} cb\n     * @param {*} context\n     */\n    listProto.eachItemGraphicEl = function (cb, context) {\n        zrUtil.each(this._graphicEls, function (el, idx) {\n            if (el) {\n                cb && cb.call(context, el, idx);\n            }\n        });\n    };\n\n    /**\n     * Shallow clone a new list except visual and layout properties, and graph elements.\n     * New list only change the indices.\n     */\n    listProto.cloneShallow = function () {\n        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n        var list = new List(dimensionInfoList, this.hostModel);\n\n        // FIXME\n        list._storage = this._storage;\n\n        transferProperties(list, this);\n\n\n        // Clone will not change the data extent and indices\n        list.indices = this.indices.slice();\n\n        if (this._extent) {\n            list._extent = zrUtil.extend({}, this._extent);\n        }\n\n        return list;\n    };\n\n    /**\n     * Wrap some method to add more feature\n     * @param {string} methodName\n     * @param {Function} injectFunction\n     */\n    listProto.wrapMethod = function (methodName, injectFunction) {\n        var originalMethod = this[methodName];\n        if (typeof originalMethod !== 'function') {\n            return;\n        }\n        this.__wrappedMethods = this.__wrappedMethods || [];\n        this.__wrappedMethods.push(methodName);\n        this[methodName] = function () {\n            var res = originalMethod.apply(this, arguments);\n            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n        };\n    };\n\n    // Methods that create a new list based on this list should be listed here.\n    // Notice that those method should `RETURN` the new list.\n    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\n    // Methods that change indices of this list should be listed here.\n    listProto.CHANGABLE_METHODS = ['filterSelf'];\n\n    module.exports = List;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(60)))\n\n/***/ }),\n\n/***/ 631:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Complete dimensions by data (guess dimension).\n */\n\n\n    var zrUtil = __webpack_require__(606);\n    var modelUtil = __webpack_require__(609);\n    var each = zrUtil.each;\n    var isString = zrUtil.isString;\n    var defaults = zrUtil.defaults;\n    var normalizeToArray = modelUtil.normalizeToArray;\n\n    var OTHER_DIMS = {tooltip: 1, label: 1, itemName: 1};\n\n    /**\n     * Complete the dimensions array, by user defined `dimension` and `encode`,\n     * and guessing from the data structure.\n     * If no 'value' dimension specified, the first no-named dimension will be\n     * named as 'value'.\n     *\n     * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n     *      provides not only dim template, but also default order.\n     *      `name` of each item provides default coord name.\n     *      [{dimsDef: []}, ...] can be specified to give names.\n     * @param {Array} data Data list. [[1, 2, 3], [2, 3, 4]].\n     * @param {Object} [opt]\n     * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n     *      For example: ['asdf', {name, type}, ...].\n     * @param {Object} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n     * @param {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n     * @param {string} [opt.extraFromZero] If specified, extra dim names will be:\n     *                      extraPrefix + 0, extraPrefix + extraBaseIndex + 1 ...\n     *                      If not specified, extra dim names will be:\n     *                      extraPrefix, extraPrefix + 0, extraPrefix + 1 ...\n     * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n     * @return {Array.<Object>} [{\n     *      name: string mandatory,\n     *      coordDim: string mandatory,\n     *      coordDimIndex: number mandatory,\n     *      type: string optional,\n     *      tooltipName: string optional,\n     *      otherDims: {\n     *          tooltip: number optional,\n     *          label: number optional\n     *      },\n     *      isExtraCoord: boolean true or undefined.\n     *      other props ...\n     * }]\n     */\n    function completeDimensions(sysDims, data, opt) {\n        data = data || [];\n        opt = opt || {};\n        sysDims = (sysDims || []).slice();\n        var dimsDef = (opt.dimsDef || []).slice();\n        var encodeDef = zrUtil.createHashMap(opt.encodeDef);\n        var dataDimNameMap = zrUtil.createHashMap();\n        var coordDimNameMap = zrUtil.createHashMap();\n        // var valueCandidate;\n        var result = [];\n\n        var dimCount = opt.dimCount;\n        if (dimCount == null) {\n            var value0 = retrieveValue(data[0]);\n            dimCount = Math.max(\n                zrUtil.isArray(value0) && value0.length || 1,\n                sysDims.length,\n                dimsDef.length\n            );\n            each(sysDims, function (sysDimItem) {\n                var sysDimItemDimsDef = sysDimItem.dimsDef;\n                sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n            });\n        }\n\n        // Apply user defined dims (`name` and `type`) and init result.\n        for (var i = 0; i < dimCount; i++) {\n            var dimDefItem = isString(dimsDef[i]) ? {name: dimsDef[i]} : (dimsDef[i] || {});\n            var userDimName = dimDefItem.name;\n            var resultItem = result[i] = {otherDims: {}};\n            // Name will be applied later for avoiding duplication.\n            if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n                // Only if `series.dimensions` is defined in option, tooltipName\n                // will be set, and dimension will be diplayed vertically in\n                // tooltip by default.\n                resultItem.name = resultItem.tooltipName = userDimName;\n                dataDimNameMap.set(userDimName, i);\n            }\n            dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n        }\n\n        // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n        encodeDef.each(function (dataDims, coordDim) {\n            dataDims = encodeDef.set(coordDim, normalizeToArray(dataDims).slice());\n            each(dataDims, function (resultDimIdx, coordDimIndex) {\n                // The input resultDimIdx can be dim name or index.\n                isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n                if (resultDimIdx != null && resultDimIdx < dimCount) {\n                    dataDims[coordDimIndex] = resultDimIdx;\n                    applyDim(result[resultDimIdx], coordDim, coordDimIndex);\n                }\n            });\n        });\n\n        // Apply templetes and default order from `sysDims`.\n        var availDimIdx = 0;\n        each(sysDims, function (sysDimItem, sysDimIndex) {\n            var coordDim;\n            var sysDimItem;\n            var sysDimItemDimsDef;\n            var sysDimItemOtherDims;\n            if (isString(sysDimItem)) {\n                coordDim = sysDimItem;\n                sysDimItem = {};\n            }\n            else {\n                coordDim = sysDimItem.name;\n                sysDimItem = zrUtil.clone(sysDimItem);\n                // `coordDimIndex` should not be set directly.\n                sysDimItemDimsDef = sysDimItem.dimsDef;\n                sysDimItemOtherDims = sysDimItem.otherDims;\n                sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex\n                    = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n            }\n\n            var dataDims = normalizeToArray(encodeDef.get(coordDim));\n            // dimensions provides default dim sequences.\n            if (!dataDims.length) {\n                for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n                    while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n                        availDimIdx++;\n                    }\n                    availDimIdx < result.length && dataDims.push(availDimIdx++);\n                }\n            }\n            // Apply templates.\n            each(dataDims, function (resultDimIdx, coordDimIndex) {\n                var resultItem = result[resultDimIdx];\n                applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n                if (resultItem.name == null && sysDimItemDimsDef) {\n                    resultItem.name = resultItem.tooltipName = sysDimItemDimsDef[coordDimIndex];\n                }\n                sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n            });\n        });\n\n        // Make sure the first extra dim is 'value'.\n        var extra = opt.extraPrefix || 'value';\n\n        // Set dim `name` and other `coordDim` and other props.\n        for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n            var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n            var coordDim = resultItem.coordDim;\n\n            coordDim == null && (\n                resultItem.coordDim = genName(extra, coordDimNameMap, opt.extraFromZero),\n                resultItem.coordDimIndex = 0,\n                resultItem.isExtraCoord = true\n            );\n\n            resultItem.name == null && (resultItem.name = genName(\n                resultItem.coordDim,\n                dataDimNameMap\n            ));\n\n            resultItem.type == null && guessOrdinal(data, resultDimIdx)\n                && (resultItem.type = 'ordinal');\n        }\n\n        return result;\n\n        function applyDim(resultItem, coordDim, coordDimIndex) {\n            if (OTHER_DIMS[coordDim]) {\n                resultItem.otherDims[coordDim] = coordDimIndex;\n            }\n            else {\n                resultItem.coordDim = coordDim;\n                resultItem.coordDimIndex = coordDimIndex;\n                coordDimNameMap.set(coordDim, true);\n            }\n        }\n\n        function genName(name, map, fromZero) {\n            if (fromZero || map.get(name) != null) {\n                var i = 0;\n                while (map.get(name + i) != null) {\n                    i++;\n                }\n                name += i;\n            }\n            map.set(name, true);\n            return name;\n        }\n    }\n\n    // The rule should not be complex, otherwise user might not\n    // be able to known where the data is wrong.\n    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n        for (var i = 0, len = data.length; i < len; i++) {\n            var value = retrieveValue(data[i]);\n\n            if (!zrUtil.isArray(value)) {\n                return false;\n            }\n\n            var value = value[dimIndex];\n            // Consider usage convenience, '1', '2' will be treated as \"number\".\n            // `isFinit('')` get `true`.\n            if (value != null && isFinite(value) && value !== '') {\n                return false;\n            }\n            else if (isString(value) && value !== '-') {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    function retrieveValue(o) {\n        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\n    }\n\n    module.exports = completeDimensions;\n\n\n\n/***/ }),\n\n/***/ 632:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n\n    var clazzUtil = __webpack_require__(616);\n\n    /**\n     * @param {Object} [setting]\n     */\n    function Scale(setting) {\n        this._setting = setting || {};\n\n        /**\n         * Extent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._extent = [Infinity, -Infinity];\n\n        /**\n         * Step is calculated in adjustExtent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._interval = 0;\n\n        this.init && this.init.apply(this, arguments);\n    }\n\n    var scaleProto = Scale.prototype;\n\n    /**\n     * Parse input val to valid inner number.\n     * @param {*} val\n     * @return {number}\n     */\n    scaleProto.parse = function (val) {\n        // Notice: This would be a trap here, If the implementation\n        // of this method depends on extent, and this method is used\n        // before extent set (like in dataZoom), it would be wrong.\n        // Nevertheless, parse does not depend on extent generally.\n        return val;\n    };\n\n    scaleProto.getSetting = function (name) {\n        return this._setting[name];\n    };\n\n    scaleProto.contain = function (val) {\n        var extent = this._extent;\n        return val >= extent[0] && val <= extent[1];\n    };\n\n    /**\n     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.normalize = function (val) {\n        var extent = this._extent;\n        if (extent[1] === extent[0]) {\n            return 0.5;\n        }\n        return (val - extent[0]) / (extent[1] - extent[0]);\n    };\n\n    /**\n     * Scale normalized value\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.scale = function (val) {\n        var extent = this._extent;\n        return val * (extent[1] - extent[0]) + extent[0];\n    };\n\n    /**\n     * Set extent from data\n     * @param {Array.<number>} other\n     */\n    scaleProto.unionExtent = function (other) {\n        var extent = this._extent;\n        other[0] < extent[0] && (extent[0] = other[0]);\n        other[1] > extent[1] && (extent[1] = other[1]);\n        // not setExtent because in log axis it may transformed to power\n        // this.setExtent(extent[0], extent[1]);\n    };\n\n    /**\n     * Set extent from data\n     * @param {module:echarts/data/List} data\n     * @param {string} dim\n     */\n    scaleProto.unionExtentFromData = function (data, dim) {\n        this.unionExtent(data.getDataExtent(dim, true));\n    };\n\n    /**\n     * Get extent\n     * @return {Array.<number>}\n     */\n    scaleProto.getExtent = function () {\n        return this._extent.slice();\n    };\n\n    /**\n     * Set extent\n     * @param {number} start\n     * @param {number} end\n     */\n    scaleProto.setExtent = function (start, end) {\n        var thisExtent = this._extent;\n        if (!isNaN(start)) {\n            thisExtent[0] = start;\n        }\n        if (!isNaN(end)) {\n            thisExtent[1] = end;\n        }\n    };\n\n    /**\n     * @return {Array.<string>}\n     */\n    scaleProto.getTicksLabels = function () {\n        var labels = [];\n        var ticks = this.getTicks();\n        for (var i = 0; i < ticks.length; i++) {\n            labels.push(this.getLabel(ticks[i]));\n        }\n        return labels;\n    };\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.isBlank = function () {\n        return this._isBlank;\n    },\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.setBlank = function (isBlank) {\n        this._isBlank = isBlank;\n    };\n\n\n    clazzUtil.enableClassExtend(Scale);\n    clazzUtil.enableClassManagement(Scale, {\n        registerWhenExtend: true\n    });\n\n    module.exports = Scale;\n\n\n/***/ }),\n\n/***/ 633:\n/***/ (function(module, exports) {\n\n\n    var dpr = 1;\n    // If in browser environment\n    if (typeof window !== 'undefined') {\n        dpr = Math.max(window.devicePixelRatio || 1, 1);\n    }\n    /**\n     * config默认配置项\n     * @exports zrender/config\n     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n     */\n    var config = {\n        /**\n         * debug日志选项：catchBrushException为true下有效\n         * 0 : 不生成debug数据，发布用\n         * 1 : 异常抛出，调试用\n         * 2 : 控制台输出，调试用\n         */\n        debugMode: 0,\n\n        // retina 屏幕优化\n        devicePixelRatio: dpr\n    };\n    module.exports = config;\n\n\n\n\n/***/ }),\n\n/***/ 634:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/lib/container/Group');\n *     var Circle = require('zrender/lib/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n\n    var zrUtil = __webpack_require__(606);\n    var Element = __webpack_require__(667);\n    var BoundingRect = __webpack_require__(617);\n\n    /**\n     * @alias module:zrender/graphic/Group\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @extends module:zrender/mixin/Eventful\n     */\n    var Group = function (opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        for (var key in opts) {\n            if (opts.hasOwnProperty(key)) {\n                this[key] = opts[key];\n            }\n        }\n\n        this._children = [];\n\n        this.__storage = null;\n\n        this.__dirty = true;\n    };\n\n    Group.prototype = {\n\n        constructor: Group,\n\n        isGroup: true,\n\n        /**\n         * @type {string}\n         */\n        type: 'group',\n\n        /**\n         * 所有子孙元素是否响应鼠标事件\n         * @name module:/zrender/container/Group#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * @return {Array.<module:zrender/Element>}\n         */\n        children: function () {\n            return this._children.slice();\n        },\n\n        /**\n         * 获取指定 index 的儿子节点\n         * @param  {number} idx\n         * @return {module:zrender/Element}\n         */\n        childAt: function (idx) {\n            return this._children[idx];\n        },\n\n        /**\n         * 获取指定名字的儿子节点\n         * @param  {string} name\n         * @return {module:zrender/Element}\n         */\n        childOfName: function (name) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i].name === name) {\n                    return children[i];\n                }\n             }\n        },\n\n        /**\n         * @return {number}\n         */\n        childCount: function () {\n            return this._children.length;\n        },\n\n        /**\n         * 添加子节点到最后\n         * @param {module:zrender/Element} child\n         */\n        add: function (child) {\n            if (child && child !== this && child.parent !== this) {\n\n                this._children.push(child);\n\n                this._doAdd(child);\n            }\n\n            return this;\n        },\n\n        /**\n         * 添加子节点在 nextSibling 之前\n         * @param {module:zrender/Element} child\n         * @param {module:zrender/Element} nextSibling\n         */\n        addBefore: function (child, nextSibling) {\n            if (child && child !== this && child.parent !== this\n                && nextSibling && nextSibling.parent === this) {\n\n                var children = this._children;\n                var idx = children.indexOf(nextSibling);\n\n                if (idx >= 0) {\n                    children.splice(idx, 0, child);\n                    this._doAdd(child);\n                }\n            }\n\n            return this;\n        },\n\n        _doAdd: function (child) {\n            if (child.parent) {\n                child.parent.remove(child);\n            }\n\n            child.parent = this;\n\n            var storage = this.__storage;\n            var zr = this.__zr;\n            if (storage && storage !== child.__storage) {\n\n                storage.addToStorage(child);\n\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n        },\n\n        /**\n         * 移除子节点\n         * @param {module:zrender/Element} child\n         */\n        remove: function (child) {\n            var zr = this.__zr;\n            var storage = this.__storage;\n            var children = this._children;\n\n            var idx = zrUtil.indexOf(children, child);\n            if (idx < 0) {\n                return this;\n            }\n            children.splice(idx, 1);\n\n            child.parent = null;\n\n            if (storage) {\n\n                storage.delFromStorage(child);\n\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n\n            return this;\n        },\n\n        /**\n         * 移除所有子节点\n         */\n        removeAll: function () {\n            var children = this._children;\n            var storage = this.__storage;\n            var child;\n            var i;\n            for (i = 0; i < children.length; i++) {\n                child = children[i];\n                if (storage) {\n                    storage.delFromStorage(child);\n                    if (child instanceof Group) {\n                        child.delChildrenFromStorage(storage);\n                    }\n                }\n                child.parent = null;\n            }\n            children.length = 0;\n\n            return this;\n        },\n\n        /**\n         * 遍历所有子节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        eachChild: function (cb, context) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                cb.call(context, child, i);\n            }\n            return this;\n        },\n\n        /**\n         * 深度优先遍历所有子孙节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                cb.call(context, child);\n\n                if (child.type === 'group') {\n                    child.traverse(cb, context);\n                }\n            }\n            return this;\n        },\n\n        addChildrenToStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.addToStorage(child);\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n        },\n\n        delChildrenFromStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.delFromStorage(child);\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n        },\n\n        dirty: function () {\n            this.__dirty = true;\n            this.__zr && this.__zr.refresh();\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function (includeChildren) {\n            // TODO Caching\n            var rect = null;\n            var tmpRect = new BoundingRect(0, 0, 0, 0);\n            var children = includeChildren || this._children;\n            var tmpMat = [];\n\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                if (child.ignore || child.invisible) {\n                    continue;\n                }\n\n                var childRect = child.getBoundingRect();\n                var transform = child.getLocalTransform(tmpMat);\n                // TODO\n                // The boundingRect cacluated by transforming original\n                // rect may be bigger than the actual bundingRect when rotation\n                // is used. (Consider a circle rotated aginst its center, where\n                // the actual boundingRect should be the same as that not be\n                // rotated.) But we can not find better approach to calculate\n                // actual boundingRect yet, considering performance.\n                if (transform) {\n                    tmpRect.copy(childRect);\n                    tmpRect.applyTransform(transform);\n                    rect = rect || tmpRect.clone();\n                    rect.union(tmpRect);\n                }\n                else {\n                    rect = rect || childRect.clone();\n                    rect.union(childRect);\n                }\n            }\n            return rect || tmpRect;\n        }\n    };\n\n    zrUtil.inherits(Group, Element);\n\n    module.exports = Group;\n\n\n/***/ }),\n\n/***/ 635:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n\n // TODO getTotalLength, getPointAtLength\n\n\n    var curve = __webpack_require__(622);\n    var vec2 = __webpack_require__(611);\n    var bbox = __webpack_require__(780);\n    var BoundingRect = __webpack_require__(617);\n    var dpr = __webpack_require__(633).devicePixelRatio;\n\n    var CMD = {\n        M: 1,\n        L: 2,\n        C: 3,\n        Q: 4,\n        A: 5,\n        Z: 6,\n        // Rect\n        R: 7\n    };\n\n    // var CMD_MEM_SIZE = {\n    //     M: 3,\n    //     L: 3,\n    //     C: 7,\n    //     Q: 5,\n    //     A: 9,\n    //     R: 5,\n    //     Z: 1\n    // };\n\n    var min = [];\n    var max = [];\n    var min2 = [];\n    var max2 = [];\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var mathSqrt = Math.sqrt;\n    var mathAbs = Math.abs;\n\n    var hasTypedArray = typeof Float32Array != 'undefined';\n\n    /**\n     * @alias module:zrender/core/PathProxy\n     * @constructor\n     */\n    var PathProxy = function (notSaveData) {\n\n        this._saveData = !(notSaveData || false);\n\n        if (this._saveData) {\n            /**\n             * Path data. Stored as flat array\n             * @type {Array.<Object>}\n             */\n            this.data = [];\n        }\n\n        this._ctx = null;\n    };\n\n    /**\n     * 快速计算Path包围盒（并不是最小包围盒）\n     * @return {Object}\n     */\n    PathProxy.prototype = {\n\n        constructor: PathProxy,\n\n        _xi: 0,\n        _yi: 0,\n\n        _x0: 0,\n        _y0: 0,\n        // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n        _ux: 0,\n        _uy: 0,\n\n        _len: 0,\n\n        _lineDash: null,\n\n        _dashOffset: 0,\n\n        _dashIdx: 0,\n\n        _dashSum: 0,\n\n        /**\n         * @readOnly\n         */\n        setScale: function (sx, sy) {\n            this._ux = mathAbs(1 / dpr / sx) || 0;\n            this._uy = mathAbs(1 / dpr / sy) || 0;\n        },\n\n        getContext: function () {\n            return this._ctx;\n        },\n\n        /**\n         * @param  {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        beginPath: function (ctx) {\n\n            this._ctx = ctx;\n\n            ctx && ctx.beginPath();\n\n            ctx && (this.dpr = ctx.dpr);\n\n            // Reset\n            if (this._saveData) {\n                this._len = 0;\n            }\n\n            if (this._lineDash) {\n                this._lineDash = null;\n\n                this._dashOffset = 0;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        moveTo: function (x, y) {\n            this.addData(CMD.M, x, y);\n            this._ctx && this._ctx.moveTo(x, y);\n\n            // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n            // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n            // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n            // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n            this._x0 = x;\n            this._y0 = y;\n\n            this._xi = x;\n            this._yi = y;\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        lineTo: function (x, y) {\n            var exceedUnit = mathAbs(x - this._xi) > this._ux\n                || mathAbs(y - this._yi) > this._uy\n                // Force draw the first segment\n                || this._len < 5;\n\n            this.addData(CMD.L, x, y);\n\n            if (this._ctx && exceedUnit) {\n                this._needsDash() ? this._dashedLineTo(x, y)\n                    : this._ctx.lineTo(x, y);\n            }\n            if (exceedUnit) {\n                this._xi = x;\n                this._yi = y;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @param  {number} x3\n         * @param  {number} y3\n         * @return {module:zrender/core/PathProxy}\n         */\n        bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n            this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)\n                    : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n            }\n            this._xi = x3;\n            this._yi = y3;\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @return {module:zrender/core/PathProxy}\n         */\n        quadraticCurveTo: function (x1, y1, x2, y2) {\n            this.addData(CMD.Q, x1, y1, x2, y2);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2)\n                    : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n            }\n            this._xi = x2;\n            this._yi = y2;\n            return this;\n        },\n\n        /**\n         * @param  {number} cx\n         * @param  {number} cy\n         * @param  {number} r\n         * @param  {number} startAngle\n         * @param  {number} endAngle\n         * @param  {boolean} anticlockwise\n         * @return {module:zrender/core/PathProxy}\n         */\n        arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n            this.addData(\n                CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1\n            );\n            this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n\n            this._xi = mathCos(endAngle) * r + cx;\n            this._yi = mathSin(endAngle) * r + cx;\n            return this;\n        },\n\n        // TODO\n        arcTo: function (x1, y1, x2, y2, radius) {\n            if (this._ctx) {\n                this._ctx.arcTo(x1, y1, x2, y2, radius);\n            }\n            return this;\n        },\n\n        // TODO\n        rect: function (x, y, w, h) {\n            this._ctx && this._ctx.rect(x, y, w, h);\n            this.addData(CMD.R, x, y, w, h);\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/PathProxy}\n         */\n        closePath: function () {\n            this.addData(CMD.Z);\n\n            var ctx = this._ctx;\n            var x0 = this._x0;\n            var y0 = this._y0;\n            if (ctx) {\n                this._needsDash() && this._dashedLineTo(x0, y0);\n                ctx.closePath();\n            }\n\n            this._xi = x0;\n            this._yi = y0;\n            return this;\n        },\n\n        /**\n         * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n         * stroke 同样\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        fill: function (ctx) {\n            ctx && ctx.fill();\n            this.toStatic();\n        },\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        stroke: function (ctx) {\n            ctx && ctx.stroke();\n            this.toStatic();\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDash: function (lineDash) {\n            if (lineDash instanceof Array) {\n                this._lineDash = lineDash;\n\n                this._dashIdx = 0;\n\n                var lineDashSum = 0;\n                for (var i = 0; i < lineDash.length; i++) {\n                    lineDashSum += lineDash[i];\n                }\n                this._dashSum = lineDashSum;\n            }\n            return this;\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDashOffset: function (offset) {\n            this._dashOffset = offset;\n            return this;\n        },\n\n        /**\n         *\n         * @return {boolean}\n         */\n        len: function () {\n            return this._len;\n        },\n\n        /**\n         * 直接设置 Path 数据\n         */\n        setData: function (data) {\n\n            var len = data.length;\n\n            if (! (this.data && this.data.length == len) && hasTypedArray) {\n                this.data = new Float32Array(len);\n            }\n\n            for (var i = 0; i < len; i++) {\n                this.data[i] = data[i];\n            }\n\n            this._len = len;\n        },\n\n        /**\n         * 添加子路径\n         * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n         */\n        appendPath: function (path) {\n            if (!(path instanceof Array)) {\n                path = [path];\n            }\n            var len = path.length;\n            var appendSize = 0;\n            var offset = this._len;\n            for (var i = 0; i < len; i++) {\n                appendSize += path[i].len();\n            }\n            if (hasTypedArray && (this.data instanceof Float32Array)) {\n                this.data = new Float32Array(offset + appendSize);\n            }\n            for (var i = 0; i < len; i++) {\n                var appendPathData = path[i].data;\n                for (var k = 0; k < appendPathData.length; k++) {\n                    this.data[offset++] = appendPathData[k];\n                }\n            }\n            this._len = offset;\n        },\n\n        /**\n         * 填充 Path 数据。\n         * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n         */\n        addData: function (cmd) {\n            if (!this._saveData) {\n                return;\n            }\n\n            var data = this.data;\n            if (this._len + arguments.length > data.length) {\n                // 因为之前的数组已经转换成静态的 Float32Array\n                // 所以不够用时需要扩展一个新的动态数组\n                this._expandData();\n                data = this.data;\n            }\n            for (var i = 0; i < arguments.length; i++) {\n                data[this._len++] = arguments[i];\n            }\n\n            this._prevCmd = cmd;\n        },\n\n        _expandData: function () {\n            // Only if data is Float32Array\n            if (!(this.data instanceof Array)) {\n                var newData = [];\n                for (var i = 0; i < this._len; i++) {\n                    newData[i] = this.data[i];\n                }\n                this.data = newData;\n            }\n        },\n\n        /**\n         * If needs js implemented dashed line\n         * @return {boolean}\n         * @private\n         */\n        _needsDash: function () {\n            return this._lineDash;\n        },\n\n        _dashedLineTo: function (x1, y1) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var dx = x1 - x0;\n            var dy = y1 - y0;\n            var dist = mathSqrt(dx * dx + dy * dy);\n            var x = x0;\n            var y = y0;\n            var dash;\n            var nDash = lineDash.length;\n            var idx;\n            dx /= dist;\n            dy /= dist;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            x -= offset * dx;\n            y -= offset * dy;\n\n            while ((dx > 0 && x <= x1) || (dx < 0 && x >= x1)\n            || (dx == 0 && ((dy > 0 && y <= y1) || (dy < 0 && y >= y1)))) {\n                idx = this._dashIdx;\n                dash = lineDash[idx];\n                x += dx * dash;\n                y += dy * dash;\n                this._dashIdx = (idx + 1) % nDash;\n                // Skip positive offset\n                if ((dx > 0 && x < x0) || (dx < 0 && x > x0) || (dy > 0 && y < y0) || (dy < 0 && y > y0)) {\n                    continue;\n                }\n                ctx[idx % 2 ? 'moveTo' : 'lineTo'](\n                    dx >= 0 ? mathMin(x, x1) : mathMax(x, x1),\n                    dy >= 0 ? mathMin(y, y1) : mathMax(y, y1)\n                );\n            }\n            // Offset for next lineTo\n            dx = x - x1;\n            dy = y - y1;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        // Not accurate dashed line to\n        _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var t;\n            var dx;\n            var dy;\n            var cubicAt = curve.cubicAt;\n            var bezierLen = 0;\n            var idx = this._dashIdx;\n            var nDash = lineDash.length;\n\n            var x;\n            var y;\n\n            var tmpLen = 0;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            // Bezier approx length\n            for (t = 0; t < 1; t += 0.1) {\n                dx = cubicAt(x0, x1, x2, x3, t + 0.1)\n                    - cubicAt(x0, x1, x2, x3, t);\n                dy = cubicAt(y0, y1, y2, y3, t + 0.1)\n                    - cubicAt(y0, y1, y2, y3, t);\n                bezierLen += mathSqrt(dx * dx + dy * dy);\n            }\n\n            // Find idx after add offset\n            for (; idx < nDash; idx++) {\n                tmpLen += lineDash[idx];\n                if (tmpLen > offset) {\n                    break;\n                }\n            }\n            t = (tmpLen - offset) / bezierLen;\n\n            while (t <= 1) {\n\n                x = cubicAt(x0, x1, x2, x3, t);\n                y = cubicAt(y0, y1, y2, y3, t);\n\n                // Use line to approximate dashed bezier\n                // Bad result if dash is long\n                idx % 2 ? ctx.moveTo(x, y)\n                    : ctx.lineTo(x, y);\n\n                t += lineDash[idx] / bezierLen;\n\n                idx = (idx + 1) % nDash;\n            }\n\n            // Finish the last segment and calculate the new offset\n            (idx % 2 !== 0) && ctx.lineTo(x3, y3);\n            dx = x3 - x;\n            dy = y3 - y;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        _dashedQuadraticTo: function (x1, y1, x2, y2) {\n            // Convert quadratic to cubic using degree elevation\n            var x3 = x2;\n            var y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (this._xi + 2 * x1) / 3;\n            y1 = (this._yi + 2 * y1) / 3;\n\n            this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n        },\n\n        /**\n         * 转成静态的 Float32Array 减少堆内存占用\n         * Convert dynamic array to static Float32Array\n         */\n        toStatic: function () {\n            var data = this.data;\n            if (data instanceof Array) {\n                data.length = this._len;\n                if (hasTypedArray) {\n                    this.data = new Float32Array(data);\n                }\n            }\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function () {\n            min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n            max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n\n            var data = this.data;\n            var xi = 0;\n            var yi = 0;\n            var x0 = 0;\n            var y0 = 0;\n\n            for (var i = 0; i < data.length;) {\n                var cmd = data[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = data[i];\n                    yi = data[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n\n                switch (cmd) {\n                    case CMD.M:\n                        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                        // 在 closePath 的时候使用\n                        x0 = data[i++];\n                        y0 = data[i++];\n                        xi = x0;\n                        yi = y0;\n                        min2[0] = x0;\n                        min2[1] = y0;\n                        max2[0] = x0;\n                        max2[1] = y0;\n                        break;\n                    case CMD.L:\n                        bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.C:\n                        bbox.fromCubic(\n                            xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.Q:\n                        bbox.fromQuadratic(\n                            xi, yi, data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.A:\n                        // TODO Arc 判断的开销比较大\n                        var cx = data[i++];\n                        var cy = data[i++];\n                        var rx = data[i++];\n                        var ry = data[i++];\n                        var startAngle = data[i++];\n                        var endAngle = data[i++] + startAngle;\n                        // TODO Arc 旋转\n                        var psi = data[i++];\n                        var anticlockwise = 1 - data[i++];\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(startAngle) * rx + cx;\n                            y0 = mathSin(startAngle) * ry + cy;\n                        }\n\n                        bbox.fromArc(\n                            cx, cy, rx, ry, startAngle, endAngle,\n                            anticlockwise, min2, max2\n                        );\n\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = data[i++];\n                        y0 = yi = data[i++];\n                        var width = data[i++];\n                        var height = data[i++];\n                        // Use fromLine\n                        bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n                        break;\n                    case CMD.Z:\n                        xi = x0;\n                        yi = y0;\n                        break;\n                }\n\n                // Union\n                vec2.min(min, min, min2);\n                vec2.max(max, max, max2);\n            }\n\n            // No data\n            if (i === 0) {\n                min[0] = min[1] = max[0] = max[1] = 0;\n            }\n\n            return new BoundingRect(\n                min[0], min[1], max[0] - min[0], max[1] - min[1]\n            );\n        },\n\n        /**\n         * Rebuild path from current data\n         * Rebuild path will not consider javascript implemented line dash.\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        rebuildPath: function (ctx) {\n            var d = this.data;\n            var x0, y0;\n            var xi, yi;\n            var x, y;\n            var ux = this._ux;\n            var uy = this._uy;\n            var len = this._len;\n            for (var i = 0; i < len;) {\n                var cmd = d[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = d[i];\n                    yi = d[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n                switch (cmd) {\n                    case CMD.M:\n                        x0 = xi = d[i++];\n                        y0 = yi = d[i++];\n                        ctx.moveTo(xi, yi);\n                        break;\n                    case CMD.L:\n                        x = d[i++];\n                        y = d[i++];\n                        // Not draw too small seg between\n                        if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n                            ctx.lineTo(x, y);\n                            xi = x;\n                            yi = y;\n                        }\n                        break;\n                    case CMD.C:\n                        ctx.bezierCurveTo(\n                            d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]\n                        );\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.Q:\n                        ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.A:\n                        var cx = d[i++];\n                        var cy = d[i++];\n                        var rx = d[i++];\n                        var ry = d[i++];\n                        var theta = d[i++];\n                        var dTheta = d[i++];\n                        var psi = d[i++];\n                        var fs = d[i++];\n                        var r = (rx > ry) ? rx : ry;\n                        var scaleX = (rx > ry) ? 1 : rx / ry;\n                        var scaleY = (rx > ry) ? ry / rx : 1;\n                        var isEllipse = Math.abs(rx - ry) > 1e-3;\n                        var endAngle = theta + dTheta;\n                        if (isEllipse) {\n                            ctx.translate(cx, cy);\n                            ctx.rotate(psi);\n                            ctx.scale(scaleX, scaleY);\n                            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n                            ctx.scale(1 / scaleX, 1 / scaleY);\n                            ctx.rotate(-psi);\n                            ctx.translate(-cx, -cy);\n                        }\n                        else {\n                            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n                        }\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(theta) * rx + cx;\n                            y0 = mathSin(theta) * ry + cy;\n                        }\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = d[i];\n                        y0 = yi = d[i + 1];\n                        ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n                        break;\n                    case CMD.Z:\n                        ctx.closePath();\n                        xi = x0;\n                        yi = y0;\n                }\n            }\n        }\n    };\n\n    PathProxy.CMD = CMD;\n\n    module.exports = PathProxy;\n\n\n/***/ }),\n\n/***/ 636:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(606);\n\n    var coordinateSystemCreators = {};\n\n    function CoordinateSystemManager() {\n\n        this._coordinateSystems = [];\n    }\n\n    CoordinateSystemManager.prototype = {\n\n        constructor: CoordinateSystemManager,\n\n        create: function (ecModel, api) {\n            var coordinateSystems = [];\n            zrUtil.each(coordinateSystemCreators, function (creater, type) {\n                var list = creater.create(ecModel, api);\n                coordinateSystems = coordinateSystems.concat(list || []);\n            });\n\n            this._coordinateSystems = coordinateSystems;\n        },\n\n        update: function (ecModel, api) {\n            zrUtil.each(this._coordinateSystems, function (coordSys) {\n                // FIXME MUST have\n                coordSys.update && coordSys.update(ecModel, api);\n            });\n        },\n\n        getCoordinateSystems: function () {\n            return this._coordinateSystems.slice();\n        }\n    };\n\n    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n        coordinateSystemCreators[type] = coordinateSystemCreator;\n    };\n\n    CoordinateSystemManager.get = function (type) {\n        return coordinateSystemCreators[type];\n    };\n\n    module.exports = CoordinateSystemManager;\n\n\n/***/ }),\n\n/***/ 637:\n/***/ (function(module, exports, __webpack_require__) {\n\n// TODO Parse shadow style\n// TODO Only shallow path support\n\n    var zrUtil = __webpack_require__(606);\n\n    module.exports = function (properties) {\n        // Normalize\n        for (var i = 0; i < properties.length; i++) {\n            if (!properties[i][1]) {\n               properties[i][1] = properties[i][0];\n            }\n        }\n        return function (excludes, includes) {\n            var style = {};\n            for (var i = 0; i < properties.length; i++) {\n                var propName = properties[i][1];\n                if ((excludes && zrUtil.indexOf(excludes, propName) >= 0)\n                    || (includes && zrUtil.indexOf(includes, propName) < 0)\n                ) {\n                    continue;\n                }\n                var val = this.getShallow(propName);\n                if (val != null) {\n                    style[properties[i][0]] = val;\n                }\n            }\n            return style;\n        };\n    };\n\n\n/***/ }),\n\n/***/ 638:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\n\n\n\n    var numberUtil = __webpack_require__(610);\n    var formatUtil = __webpack_require__(613);\n    var Scale = __webpack_require__(632);\n    var helper = __webpack_require__(665);\n\n    var roundNumber = numberUtil.round;\n\n    /**\n     * @alias module:echarts/coord/scale/Interval\n     * @constructor\n     */\n    var IntervalScale = Scale.extend({\n\n        type: 'interval',\n\n        _interval: 0,\n\n        _intervalPrecision: 2,\n\n        setExtent: function (start, end) {\n            var thisExtent = this._extent;\n            //start,end may be a Number like '25',so...\n            if (!isNaN(start)) {\n                thisExtent[0] = parseFloat(start);\n            }\n            if (!isNaN(end)) {\n                thisExtent[1] = parseFloat(end);\n            }\n        },\n\n        unionExtent: function (other) {\n            var extent = this._extent;\n            other[0] < extent[0] && (extent[0] = other[0]);\n            other[1] > extent[1] && (extent[1] = other[1]);\n\n            // unionExtent may called by it's sub classes\n            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n        },\n        /**\n         * Get interval\n         */\n        getInterval: function () {\n            return this._interval;\n        },\n\n        /**\n         * Set interval\n         */\n        setInterval: function (interval) {\n            this._interval = interval;\n            // Dropped auto calculated niceExtent and use user setted extent\n            // We assume user wan't to set both interval, min, max to get a better result\n            this._niceExtent = this._extent.slice();\n\n            this._intervalPrecision = helper.getIntervalPrecision(interval);\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            return helper.intervalScaleGetTicks(\n                this._interval, this._extent, this._niceExtent, this._intervalPrecision\n            );\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getTicksLabels: function () {\n            var labels = [];\n            var ticks = this.getTicks();\n            for (var i = 0; i < ticks.length; i++) {\n                labels.push(this.getLabel(ticks[i]));\n            }\n            return labels;\n        },\n\n        /**\n         * @param {number} data\n         * @param {Object} [opt]\n         * @param {number|string} [opt.precision] If 'auto', use nice presision.\n         * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n         * @return {string}\n         */\n        getLabel: function (data, opt) {\n            if (data == null) {\n                return '';\n            }\n\n            var precision = opt && opt.precision;\n\n            if (precision == null) {\n                precision = numberUtil.getPrecisionSafe(data) || 0;\n            }\n            else if (precision === 'auto') {\n                // Should be more precise then tick.\n                precision = this._intervalPrecision;\n            }\n\n            // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n            // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n            data = roundNumber(data, precision, true);\n\n            return formatUtil.addCommas(data);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         *\n         * @param {number} [splitNumber = 5] Desired number of ticks\n         * @param {number} [minInterval]\n         * @param {number} [maxInterval]\n         */\n        niceTicks: function (splitNumber, minInterval, maxInterval) {\n            splitNumber = splitNumber || 5;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (!isFinite(span)) {\n                return;\n            }\n            // User may set axis min 0 and data are all negative\n            // FIXME If it needs to reverse ?\n            if (span < 0) {\n                span = -span;\n                extent.reverse();\n            }\n\n            var result = helper.intervalScaleNiceTicks(\n                extent, splitNumber, minInterval, maxInterval\n            );\n\n            this._intervalPrecision = result.intervalPrecision;\n            this._interval = result.interval;\n            this._niceExtent = result.niceTickExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {Object} opt\n         * @param {number} [opt.splitNumber = 5] Given approx tick number\n         * @param {boolean} [opt.fixMin=false]\n         * @param {boolean} [opt.fixMax=false]\n         * @param {boolean} [opt.minInterval]\n         * @param {boolean} [opt.maxInterval]\n         */\n        niceExtent: function (opt) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                if (extent[0] !== 0) {\n                    // Expand extent\n                    var expandSize = extent[0];\n                    // In the fowllowing case\n                    //      Axis has been fixed max 100\n                    //      Plus data are all 100 and axis extent are [100, 100].\n                    // Extend to the both side will cause expanded max is larger than fixed max.\n                    // So only expand to the smaller side.\n                    if (!opt.fixMax) {\n                        extent[1] += expandSize / 2;\n                        extent[0] -= expandSize / 2;\n                    }\n                    else {\n                        extent[0] -= expandSize / 2;\n                    }\n                }\n                else {\n                    extent[1] = 1;\n                }\n            }\n            var span = extent[1] - extent[0];\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (!isFinite(span)) {\n                extent[0] = 0;\n                extent[1] = 1;\n            }\n\n            this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!opt.fixMin) {\n                extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n            }\n            if (!opt.fixMax) {\n                extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n            }\n        }\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    IntervalScale.create = function () {\n        return new IntervalScale();\n    };\n\n    module.exports = IntervalScale;\n\n\n\n/***/ }),\n\n/***/ 639:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Symbol factory\n\n\n    var graphic = __webpack_require__(608);\n    var BoundingRect = __webpack_require__(617);\n\n    /**\n     * Triangle shape\n     * @inner\n     */\n    var Triangle = graphic.extendShape({\n        type: 'triangle',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy + height);\n            path.lineTo(cx - width, cy + height);\n            path.closePath();\n        }\n    });\n    /**\n     * Diamond shape\n     * @inner\n     */\n    var Diamond = graphic.extendShape({\n        type: 'diamond',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy);\n            path.lineTo(cx, cy + height);\n            path.lineTo(cx - width, cy);\n            path.closePath();\n        }\n    });\n\n    /**\n     * Pin shape\n     * @inner\n     */\n    var Pin = graphic.extendShape({\n        type: 'pin',\n        shape: {\n            // x, y on the cusp\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (path, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var w = shape.width / 5 * 3;\n            // Height must be larger than width\n            var h = Math.max(w, shape.height);\n            var r = w / 2;\n\n            // Dist on y with tangent point and circle center\n            var dy = r * r / (h - r);\n            var cy = y - h + r + dy;\n            var angle = Math.asin(dy / r);\n            // Dist on x with tangent point and circle center\n            var dx = Math.cos(angle) * r;\n\n            var tanX = Math.sin(angle);\n            var tanY = Math.cos(angle);\n\n            path.arc(\n                x, cy, r,\n                Math.PI - angle,\n                Math.PI * 2 + angle\n            );\n\n            var cpLen = r * 0.6;\n            var cpLen2 = r * 0.7;\n            path.bezierCurveTo(\n                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\n                x, y - cpLen2,\n                x, y\n            );\n            path.bezierCurveTo(\n                x, y - cpLen2,\n                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\n                x - dx, cy + dy\n            );\n            path.closePath();\n        }\n    });\n\n    /**\n     * Arrow shape\n     * @inner\n     */\n    var Arrow = graphic.extendShape({\n\n        type: 'arrow',\n\n        shape: {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var height = shape.height;\n            var width = shape.width;\n            var x = shape.x;\n            var y = shape.y;\n            var dx = width / 3 * 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + dx, y + height);\n            ctx.lineTo(x, y + height / 4 * 3);\n            ctx.lineTo(x - dx, y + height);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n        }\n    });\n\n    /**\n     * Map of path contructors\n     * @type {Object.<string, module:zrender/graphic/Path>}\n     */\n    var symbolCtors = {\n        line: graphic.Line,\n\n        rect: graphic.Rect,\n\n        roundRect: graphic.Rect,\n\n        square: graphic.Rect,\n\n        circle: graphic.Circle,\n\n        diamond: Diamond,\n\n        pin: Pin,\n\n        arrow: Arrow,\n\n        triangle: Triangle\n    };\n\n    var symbolShapeMakers = {\n\n        line: function (x, y, w, h, shape) {\n            // FIXME\n            shape.x1 = x;\n            shape.y1 = y + h / 2;\n            shape.x2 = x + w;\n            shape.y2 = y + h / 2;\n        },\n\n        rect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        roundRect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n            shape.r = Math.min(w, h) / 4;\n        },\n\n        square: function (x, y, w, h, shape) {\n            var size = Math.min(w, h);\n            shape.x = x;\n            shape.y = y;\n            shape.width = size;\n            shape.height = size;\n        },\n\n        circle: function (x, y, w, h, shape) {\n            // Put circle in the center of square\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.r = Math.min(w, h) / 2;\n        },\n\n        diamond: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        pin: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        arrow: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        triangle: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        }\n    };\n\n    var symbolBuildProxies = {};\n    for (var name in symbolCtors) {\n        if (symbolCtors.hasOwnProperty(name)) {\n            symbolBuildProxies[name] = new symbolCtors[name]();\n        }\n    }\n\n    var Symbol = graphic.extendShape({\n\n        type: 'symbol',\n\n        shape: {\n            symbolType: '',\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        beforeBrush: function () {\n            var style = this.style;\n            var shape = this.shape;\n            // FIXME\n            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n                style.textPosition = ['50%', '40%'];\n                style.textAlign = 'center';\n                style.textVerticalAlign = 'middle';\n            }\n        },\n\n        buildPath: function (ctx, shape, inBundle) {\n            var symbolType = shape.symbolType;\n            var proxySymbol = symbolBuildProxies[symbolType];\n            if (shape.symbolType !== 'none') {\n                if (!proxySymbol) {\n                    // Default rect\n                    symbolType = 'rect';\n                    proxySymbol = symbolBuildProxies[symbolType];\n                }\n                symbolShapeMakers[symbolType](\n                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\n                );\n                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n            }\n        }\n    });\n\n    // Provide setColor helper method to avoid determine if set the fill or stroke outside\n    var symbolPathSetColor = function (color) {\n        if (this.type !== 'image') {\n            var symbolStyle = this.style;\n            var symbolShape = this.shape;\n            if (symbolShape && symbolShape.symbolType === 'line') {\n                symbolStyle.stroke = color;\n            }\n            else if (this.__isEmptyBrush) {\n                symbolStyle.stroke = color;\n                symbolStyle.fill = '#fff';\n            }\n            else {\n                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n                symbolStyle.fill && (symbolStyle.fill = color);\n                symbolStyle.stroke && (symbolStyle.stroke = color);\n            }\n            this.dirty(false);\n        }\n    };\n\n    var symbolUtil = {\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @param {string} symbolType\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: function (symbolType, x, y, w, h, color) {\n            // TODO Support image object, DynamicImage.\n\n            var isEmpty = symbolType.indexOf('empty') === 0;\n            if (isEmpty) {\n                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n            }\n            var symbolPath;\n\n            if (symbolType.indexOf('image://') === 0) {\n                symbolPath = new graphic.Image({\n                    style: {\n                        image: symbolType.slice(8),\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n            else if (symbolType.indexOf('path://') === 0) {\n                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\n            }\n            else {\n                symbolPath = new Symbol({\n                    shape: {\n                        symbolType: symbolType,\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n\n            symbolPath.__isEmptyBrush = isEmpty;\n\n            symbolPath.setColor = symbolPathSetColor;\n\n            symbolPath.setColor(color);\n\n            return symbolPath;\n        }\n    };\n\n    module.exports = symbolUtil;\n\n\n/***/ }),\n\n/***/ 640:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var formatUtil = __webpack_require__(613);\n    var classUtil = __webpack_require__(616);\n    var modelUtil = __webpack_require__(609);\n    var ComponentModel = __webpack_require__(618);\n    var colorPaletteMixin = __webpack_require__(664);\n    var env = __webpack_require__(615);\n    var layout = __webpack_require__(619);\n\n    var set = classUtil.set;\n    var get = classUtil.get;\n    var encodeHTML = formatUtil.encodeHTML;\n    var addCommas = formatUtil.addCommas;\n\n    var SeriesModel = ComponentModel.extend({\n\n        type: 'series.__base__',\n\n        /**\n         * @readOnly\n         */\n        seriesIndex: 0,\n\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\n        coordinateSystem: null,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * Data provided for legend\n         * @type {Function}\n         */\n        // PENDING\n        legendDataProvider: null,\n\n        /**\n         * Access path of color for visual\n         */\n        visualColorAccessPath: 'itemStyle.normal.color',\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            /**\n             * @type {number}\n             * @readOnly\n             */\n            this.seriesIndex = this.componentIndex;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            var data = this.getInitialData(option, ecModel);\n            if (__DEV__) {\n                zrUtil.assert(data, 'getInitialData returned invalid data.');\n            }\n            /**\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n             * @private\n             */\n            set(this, 'dataBeforeProcessed', data);\n\n            // If we reverse the order (make data firstly, and then make\n            // dataBeforeProcessed by cloneShallow), cloneShallow will\n            // cause data.graph.data !== data when using\n            // module:echarts/data/Graph or module:echarts/data/Tree.\n            // See module:echarts/data/helper/linkList\n            this.restoreData();\n        },\n\n        /**\n         * Util for merge default and theme to option\n         * @param  {Object} option\n         * @param  {module:echarts/model/Global} ecModel\n         */\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            zrUtil.merge(\n                option,\n                ecModel.getTheme().get(this.subType)\n            );\n            zrUtil.merge(option, this.getDefaultOption());\n\n            // Default label emphasis `show`\n            modelUtil.defaultEmphasis(option.label, ['show']);\n\n            this.fillDataTextStyle(option.data);\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (newSeriesOption, ecModel) {\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n            this.fillDataTextStyle(newSeriesOption.data);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n            }\n\n            var data = this.getInitialData(newSeriesOption, ecModel);\n            // TODO Merge data?\n            if (data) {\n                set(this, 'data', data);\n                set(this, 'dataBeforeProcessed', data.cloneShallow());\n            }\n        },\n\n        fillDataTextStyle: function (data) {\n            // Default data label emphasis `show`\n            // FIXME Tree structure data ?\n            // FIXME Performance ?\n            if (data) {\n                var props = ['show'];\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] && data[i].label) {\n                        modelUtil.defaultEmphasis(data[i].label, props);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Init a data structure from data related option in series\n         * Must be overwritten\n         */\n        getInitialData: function () {},\n\n        /**\n         * @param {string} [dataType]\n         * @return {module:echarts/data/List}\n         */\n        getData: function (dataType) {\n            var data = get(this, 'data');\n            return dataType == null ? data : data.getLinkedData(dataType);\n        },\n\n        /**\n         * @param {module:echarts/data/List} data\n         */\n        setData: function (data) {\n            set(this, 'data', data);\n        },\n\n        /**\n         * Get data before processed\n         * @return {module:echarts/data/List}\n         */\n        getRawData: function () {\n            return get(this, 'dataBeforeProcessed');\n        },\n\n        /**\n         * Coord dimension to data dimension.\n         *\n         * By default the result is the same as dimensions of series data.\n         * But in some series data dimensions are different from coord dimensions (i.e.\n         * candlestick and boxplot). Override this method to handle those cases.\n         *\n         * Coord dimension to data dimension can be one-to-many\n         *\n         * @param {string} coordDim\n         * @return {Array.<string>} dimensions on the axis.\n         */\n        coordDimToDataDim: function (coordDim) {\n            return modelUtil.coordDimToDataDim(this.getData(), coordDim);\n        },\n\n        /**\n         * Convert data dimension to coord dimension.\n         *\n         * @param {string|number} dataDim\n         * @return {string}\n         */\n        dataDimToCoordDim: function (dataDim) {\n            return modelUtil.dataDimToCoordDim(this.getData(), dataDim);\n        },\n\n        /**\n         * Get base axis if has coordinate system and has axis.\n         * By default use coordSys.getBaseAxis();\n         * Can be overrided for some chart.\n         * @return {type} description\n         */\n        getBaseAxis: function () {\n            var coordSys = this.coordinateSystem;\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n        },\n\n        // FIXME\n        /**\n         * Default tooltip formatter\n         *\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         */\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n            function formatArrayValue(value) {\n                var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n                    var dimItem = data.getDimensionInfo(idx);\n                    return vertially |= dimItem && dimItem.tooltip !== false && dimItem.tooltipName != null;\n                }, 0);\n\n                var result = [];\n                var tooltipDims = modelUtil.otherDimToDataDim(data, 'tooltip');\n\n                tooltipDims.length\n                    ? zrUtil.each(tooltipDims, function (dimIdx) {\n                        setEachItem(data.get(dimIdx, dataIndex), dimIdx);\n                    })\n                    // By default, all dims is used on tooltip.\n                    : zrUtil.each(value, setEachItem);\n\n                function setEachItem(val, dimIdx) {\n                    var dimInfo = data.getDimensionInfo(dimIdx);\n                    // If `dimInfo.tooltip` is not set, show tooltip.\n                    if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n                        return;\n                    }\n                    var dimType = dimInfo.type;\n                    var valStr = (vertially ? '- ' + (dimInfo.tooltipName || dimInfo.name) + ': ' : '')\n                        + (dimType === 'ordinal'\n                            ? val + ''\n                            : dimType === 'time'\n                            ? (multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val))\n                            : addCommas(val)\n                        );\n                    valStr && result.push(encodeHTML(valStr));\n                }\n\n                return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n            }\n\n            var data = get(this, 'data');\n\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = zrUtil.isArray(value)\n                ? formatArrayValue(value) : encodeHTML(addCommas(value));\n            var name = data.getName(dataIndex);\n\n            var color = data.getItemVisual(dataIndex, 'color');\n            if (zrUtil.isObject(color) && color.colorStops) {\n                color = (color.colorStops[0] || {}).color;\n            }\n            color = color || 'transparent';\n\n            var colorEl = formatUtil.getTooltipMarker(color);\n\n            var seriesName = this.name;\n            // FIXME\n            if (seriesName === '\\0-') {\n                // Not show '-'\n                seriesName = '';\n            }\n            seriesName = seriesName\n                ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ')\n                : '';\n            return !multipleSeries\n                ? seriesName + colorEl\n                    + (name\n                        ? encodeHTML(name) + ': ' + formattedValue\n                        : formattedValue\n                    )\n                : colorEl + seriesName + formattedValue;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var animationEnabled = this.getShallow('animation');\n            if (animationEnabled) {\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\n                    animationEnabled = false;\n                }\n            }\n            return animationEnabled;\n        },\n\n        restoreData: function () {\n            set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n        },\n\n        getColorFromPalette: function (name, scope) {\n            var ecModel = this.ecModel;\n            // PENDING\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n            if (!color) {\n                color = ecModel.getColorFromPalette(name, scope);\n            }\n            return color;\n        },\n\n        /**\n         * Get data indices for show tooltip content. See tooltip.\n         * @abstract\n         * @param {Array.<string>|string} dim\n         * @param {Array.<number>} value\n         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n         * @return {Object} {dataIndices, nestestValue}.\n         */\n        getAxisTooltipData: null,\n\n        /**\n         * See tooltip.\n         * @abstract\n         * @param {number} dataIndex\n         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n         */\n        getTooltipPosition: null\n    });\n\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\n    module.exports = SeriesModel;\n\n\n/***/ }),\n\n/***/ 641:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Group = __webpack_require__(634);\n    var componentUtil = __webpack_require__(642);\n    var clazzUtil = __webpack_require__(616);\n    var modelUtil = __webpack_require__(609);\n    var zrUtil = __webpack_require__(606);\n\n    function Chart() {\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewChart');\n    }\n\n    Chart.prototype = {\n\n        type: 'chart',\n\n        /**\n         * Init the chart\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        init: function (ecModel, api) {},\n\n        /**\n         * Render the chart\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        render: function (seriesModel, ecModel, api, payload) {},\n\n        /**\n         * Highlight series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        highlight: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n        },\n\n        /**\n         * Downplay series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        downplay: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'normal');\n        },\n\n        /**\n         * Remove self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        remove: function (ecModel, api) {\n            this.group.removeAll();\n        },\n\n        /**\n         * Dispose self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        dispose: function () {}\n\n        /**\n         * The view contains the given point.\n         * @interface\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        // containPoint: function () {}\n\n    };\n\n    var chartProto = Chart.prototype;\n    chartProto.updateView\n        = chartProto.updateLayout\n        = chartProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            this.render(seriesModel, ecModel, api, payload);\n        };\n\n    /**\n     * Set state of single element\n     * @param  {module:zrender/Element} el\n     * @param  {string} state\n     */\n    function elSetState(el, state) {\n        if (el) {\n            el.trigger(state);\n            if (el.type === 'group') {\n                for (var i = 0; i < el.childCount(); i++) {\n                    elSetState(el.childAt(i), state);\n                }\n            }\n        }\n    }\n    /**\n     * @param  {module:echarts/data/List} data\n     * @param  {Object} payload\n     * @param  {string} state 'normal'|'emphasis'\n     * @inner\n     */\n    function toggleHighlight(data, payload, state) {\n        var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n        if (dataIndex != null) {\n            zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n                elSetState(data.getItemGraphicEl(dataIdx), state);\n            });\n        }\n        else {\n            data.eachItemGraphicEl(function (el) {\n                elSetState(el, state);\n            });\n        }\n    }\n\n    // Enable Chart.extend.\n    clazzUtil.enableClassExtend(Chart, ['dispose']);\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\n\n    module.exports = Chart;\n\n\n/***/ }),\n\n/***/ 642:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var clazz = __webpack_require__(616);\n\n    var parseClassType = clazz.parseClassType;\n\n    var base = 0;\n\n    var componentUtil = {};\n\n    var DELIMITER = '_';\n\n    /**\n     * @public\n     * @param {string} type\n     * @return {string}\n     */\n    componentUtil.getUID = function (type) {\n        // Considering the case of crossing js context,\n        // use Math.random to make id as unique as possible.\n        return [(type || ''), base++, Math.random()].join(DELIMITER);\n    };\n\n    /**\n     * @inner\n     */\n    componentUtil.enableSubTypeDefaulter = function (entity) {\n\n        var subTypeDefaulters = {};\n\n        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n            componentType = parseClassType(componentType);\n            subTypeDefaulters[componentType.main] = defaulter;\n        };\n\n        entity.determineSubType = function (componentType, option) {\n            var type = option.type;\n            if (!type) {\n                var componentTypeMain = parseClassType(componentType).main;\n                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n                    type = subTypeDefaulters[componentTypeMain](option);\n                }\n            }\n            return type;\n        };\n\n        return entity;\n    };\n\n    /**\n     * Topological travel on Activity Network (Activity On Vertices).\n     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n     *\n     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n     *\n     * If there is circle dependencey, Error will be thrown.\n     *\n     */\n    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\n\n        /**\n         * @public\n         * @param {Array.<string>} targetNameList Target Component type list.\n         *                                           Can be ['aa', 'bb', 'aa.xx']\n         * @param {Array.<string>} fullNameList By which we can build dependency graph.\n         * @param {Function} callback Params: componentType, dependencies.\n         * @param {Object} context Scope of callback.\n         */\n        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n            if (!targetNameList.length) {\n                return;\n            }\n\n            var result = makeDepndencyGraph(fullNameList);\n            var graph = result.graph;\n            var stack = result.noEntryList;\n\n            var targetNameSet = {};\n            zrUtil.each(targetNameList, function (name) {\n                targetNameSet[name] = true;\n            });\n\n            while (stack.length) {\n                var currComponentType = stack.pop();\n                var currVertex = graph[currComponentType];\n                var isInTargetNameSet = !!targetNameSet[currComponentType];\n                if (isInTargetNameSet) {\n                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\n                    delete targetNameSet[currComponentType];\n                }\n                zrUtil.each(\n                    currVertex.successor,\n                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\n                );\n            }\n\n            zrUtil.each(targetNameSet, function () {\n                throw new Error('Circle dependency may exists');\n            });\n\n            function removeEdge(succComponentType) {\n                graph[succComponentType].entryCount--;\n                if (graph[succComponentType].entryCount === 0) {\n                    stack.push(succComponentType);\n                }\n            }\n\n            // Consider this case: legend depends on series, and we call\n            // chart.setOption({series: [...]}), where only series is in option.\n            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n            // not be called, but only sereis.mergeOption is called. Thus legend\n            // have no chance to update its local record about series (like which\n            // name of series is available in legend).\n            function removeEdgeAndAdd(succComponentType) {\n                targetNameSet[succComponentType] = true;\n                removeEdge(succComponentType);\n            }\n        };\n\n        /**\n         * DepndencyGraph: {Object}\n         * key: conponentType,\n         * value: {\n         *     successor: [conponentTypes...],\n         *     originalDeps: [conponentTypes...],\n         *     entryCount: {number}\n         * }\n         */\n        function makeDepndencyGraph(fullNameList) {\n            var graph = {};\n            var noEntryList = [];\n\n            zrUtil.each(fullNameList, function (name) {\n\n                var thisItem = createDependencyGraphItem(graph, name);\n                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n\n                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n                thisItem.entryCount = availableDeps.length;\n                if (thisItem.entryCount === 0) {\n                    noEntryList.push(name);\n                }\n\n                zrUtil.each(availableDeps, function (dependentName) {\n                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n                        thisItem.predecessor.push(dependentName);\n                    }\n                    var thatItem = createDependencyGraphItem(graph, dependentName);\n                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n                        thatItem.successor.push(name);\n                    }\n                });\n            });\n\n            return {graph: graph, noEntryList: noEntryList};\n        }\n\n        function createDependencyGraphItem(graph, name) {\n            if (!graph[name]) {\n                graph[name] = {predecessor: [], successor: []};\n            }\n            return graph[name];\n        }\n\n        function getAvailableDependencies(originalDeps, fullNameList) {\n            var availableDeps = [];\n            zrUtil.each(originalDeps, function (dep) {\n                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n            });\n            return availableDeps;\n        }\n    };\n\n    module.exports = componentUtil;\n\n\n/***/ }),\n\n/***/ 643:\n/***/ (function(module, exports) {\n\n// https://github.com/mziccard/node-timsort\n\n    var DEFAULT_MIN_MERGE = 32;\n\n    var DEFAULT_MIN_GALLOPING = 7;\n\n    var DEFAULT_TMP_STORAGE_LENGTH = 256;\n\n    function minRunLength(n) {\n        var r = 0;\n\n        while (n >= DEFAULT_MIN_MERGE) {\n            r |= n & 1;\n            n >>= 1;\n        }\n\n        return n + r;\n    }\n\n    function makeAscendingRun(array, lo, hi, compare) {\n        var runHi = lo + 1;\n\n        if (runHi === hi) {\n            return 1;\n        }\n\n        if (compare(array[runHi++], array[lo]) < 0) {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n                runHi++;\n            }\n\n            reverseRun(array, lo, runHi);\n        }\n        else {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n                runHi++;\n            }\n        }\n\n        return runHi - lo;\n    }\n\n    function reverseRun(array, lo, hi) {\n        hi--;\n\n        while (lo < hi) {\n            var t = array[lo];\n            array[lo++] = array[hi];\n            array[hi--] = t;\n        }\n    }\n\n    function binaryInsertionSort(array, lo, hi, start, compare) {\n        if (start === lo) {\n            start++;\n        }\n\n        for (; start < hi; start++) {\n            var pivot = array[start];\n\n            var left = lo;\n            var right = start;\n            var mid;\n\n            while (left < right) {\n                mid = left + right >>> 1;\n\n                if (compare(pivot, array[mid]) < 0) {\n                    right = mid;\n                }\n                else {\n                    left = mid + 1;\n                }\n            }\n\n            var n = start - left;\n\n            switch (n) {\n                case 3:\n                    array[left + 3] = array[left + 2];\n\n                case 2:\n                    array[left + 2] = array[left + 1];\n\n                case 1:\n                    array[left + 1] = array[left];\n                    break;\n                default:\n                    while (n > 0) {\n                        array[left + n] = array[left + n - 1];\n                        n--;\n                    }\n            }\n\n            array[left] = pivot;\n        }\n    }\n\n    function gallopLeft(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) > 0) {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n        else {\n            maxOffset = hint + 1;\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n\n        lastOffset++;\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) > 0) {\n                lastOffset = m + 1;\n            }\n            else {\n                offset = m;\n            }\n        }\n        return offset;\n    }\n\n    function gallopRight(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) < 0) {\n            maxOffset = hint + 1;\n\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n        else {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n\n        lastOffset++;\n\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) < 0) {\n                offset = m;\n            }\n            else {\n                lastOffset = m + 1;\n            }\n        }\n\n        return offset;\n    }\n\n    function TimSort(array, compare) {\n        var minGallop = DEFAULT_MIN_GALLOPING;\n        var length = 0;\n        var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n        var stackLength = 0;\n        var runStart;\n        var runLength;\n        var stackSize = 0;\n\n        length = array.length;\n\n        if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n            tmpStorageLength = length >>> 1;\n        }\n\n        var tmp = [];\n\n        stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n\n        runStart = [];\n        runLength = [];\n\n        function pushRun(_runStart, _runLength) {\n            runStart[stackSize] = _runStart;\n            runLength[stackSize] = _runLength;\n            stackSize += 1;\n        }\n\n        function mergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n                    if (runLength[n - 1] < runLength[n + 1]) {\n                        n--;\n                    }\n                }\n                else if (runLength[n] > runLength[n + 1]) {\n                    break;\n                }\n                mergeAt(n);\n            }\n        }\n\n        function forceMergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n                    n--;\n                }\n\n                mergeAt(n);\n            }\n        }\n\n        function mergeAt(i) {\n            var start1 = runStart[i];\n            var length1 = runLength[i];\n            var start2 = runStart[i + 1];\n            var length2 = runLength[i + 1];\n\n            runLength[i] = length1 + length2;\n\n            if (i === stackSize - 3) {\n                runStart[i + 1] = runStart[i + 2];\n                runLength[i + 1] = runLength[i + 2];\n            }\n\n            stackSize--;\n\n            var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n            start1 += k;\n            length1 -= k;\n\n            if (length1 === 0) {\n                return;\n            }\n\n            length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n            if (length2 === 0) {\n                return;\n            }\n\n            if (length1 <= length2) {\n                mergeLow(start1, length1, start2, length2);\n            }\n            else {\n                mergeHigh(start1, length1, start2, length2);\n            }\n        }\n\n        function mergeLow(start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length1; i++) {\n                tmp[i] = array[start1 + i];\n            }\n\n            var cursor1 = 0;\n            var cursor2 = start2;\n            var dest = start1;\n\n            array[dest++] = array[cursor2++];\n\n            if (--length2 === 0) {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n                return;\n            }\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n                return;\n            }\n\n            var _minGallop = minGallop;\n            var count1, count2, exit;\n\n            while (1) {\n                count1 = 0;\n                count2 = 0;\n                exit = false;\n\n                do {\n                    if (compare(array[cursor2], tmp[cursor1]) < 0) {\n                        array[dest++] = array[cursor2++];\n                        count2++;\n                        count1 = 0;\n\n                        if (--length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest++] = tmp[cursor1++];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n                    if (count1 !== 0) {\n                        for (i = 0; i < count1; i++) {\n                            array[dest + i] = tmp[cursor1 + i];\n                        }\n\n                        dest += count1;\n                        cursor1 += count1;\n                        length1 -= count1;\n                        if (length1 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest++] = array[cursor2++];\n\n                    if (--length2 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n                    if (count2 !== 0) {\n                        for (i = 0; i < count2; i++) {\n                            array[dest + i] = array[cursor2 + i];\n                        }\n\n                        dest += count2;\n                        cursor2 += count2;\n                        length2 -= count2;\n\n                        if (length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    array[dest++] = tmp[cursor1++];\n\n                    if (--length1 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            minGallop < 1 && (minGallop = 1);\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n            }\n            else if (length1 === 0) {\n                throw new Error();\n                // throw new Error('mergeLow preconditions were not respected');\n            }\n            else {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n            }\n        }\n\n        function mergeHigh (start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length2; i++) {\n                tmp[i] = array[start2 + i];\n            }\n\n            var cursor1 = start1 + length1 - 1;\n            var cursor2 = length2 - 1;\n            var dest = start2 + length2 - 1;\n            var customCursor = 0;\n            var customDest = 0;\n\n            array[dest--] = array[cursor1--];\n\n            if (--length1 === 0) {\n                customCursor = dest - (length2 - 1);\n\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n\n                return;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n                return;\n            }\n\n            var _minGallop = minGallop;\n\n            while (true) {\n                var count1 = 0;\n                var count2 = 0;\n                var exit = false;\n\n                do {\n                    if (compare(tmp[cursor2], array[cursor1]) < 0) {\n                        array[dest--] = array[cursor1--];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest--] = tmp[cursor2--];\n                        count2++;\n                        count1 = 0;\n                        if (--length2 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n                    if (count1 !== 0) {\n                        dest -= count1;\n                        cursor1 -= count1;\n                        length1 -= count1;\n                        customDest = dest + 1;\n                        customCursor = cursor1 + 1;\n\n                        for (i = count1 - 1; i >= 0; i--) {\n                            array[customDest + i] = array[customCursor + i];\n                        }\n\n                        if (length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = tmp[cursor2--];\n\n                    if (--length2 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n                    if (count2 !== 0) {\n                        dest -= count2;\n                        cursor2 -= count2;\n                        length2 -= count2;\n                        customDest = dest + 1;\n                        customCursor = cursor2 + 1;\n\n                        for (i = 0; i < count2; i++) {\n                            array[customDest + i] = tmp[customCursor + i];\n                        }\n\n                        if (length2 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = array[cursor1--];\n\n                    if (--length1 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            if (minGallop < 1) {\n                minGallop = 1;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n            }\n            else if (length2 === 0) {\n                throw new Error();\n                // throw new Error('mergeHigh preconditions were not respected');\n            }\n            else {\n                customCursor = dest - (length2 - 1);\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n            }\n        }\n\n        this.mergeRuns = mergeRuns;\n        this.forceMergeRuns = forceMergeRuns;\n        this.pushRun = pushRun;\n    }\n\n    function sort(array, compare, lo, hi) {\n        if (!lo) {\n            lo = 0;\n        }\n        if (!hi) {\n            hi = array.length;\n        }\n\n        var remaining = hi - lo;\n\n        if (remaining < 2) {\n            return;\n        }\n\n        var runLength = 0;\n\n        if (remaining < DEFAULT_MIN_MERGE) {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n            return;\n        }\n\n        var ts = new TimSort(array, compare);\n\n        var minRun = minRunLength(remaining);\n\n        do {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            if (runLength < minRun) {\n                var force = remaining;\n                if (force > minRun) {\n                    force = minRun;\n                }\n\n                binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n                runLength = force;\n            }\n\n            ts.pushRun(lo, runLength);\n            ts.mergeRuns();\n\n            remaining -= runLength;\n            lo += runLength;\n        } while (remaining !== 0);\n\n        ts.forceMergeRuns();\n    }\n\n    module.exports = sort;\n\n\n/***/ }),\n\n/***/ 644:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n\n\n    var zrUtil = __webpack_require__(606);\n\n    var Style = __webpack_require__(676);\n\n    var Element = __webpack_require__(667);\n    var RectText = __webpack_require__(788);\n    // var Stateful = require('./mixin/Stateful');\n\n    /**\n     * @alias module:zrender/graphic/Displayable\n     * @extends module:zrender/Element\n     * @extends module:zrender/graphic/mixin/RectText\n     */\n    function Displayable(opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        // Extend properties\n        for (var name in opts) {\n            if (\n                opts.hasOwnProperty(name) &&\n                name !== 'style'\n            ) {\n                this[name] = opts[name];\n            }\n        }\n\n        /**\n         * @type {module:zrender/graphic/Style}\n         */\n        this.style = new Style(opts.style, this);\n\n        this._rect = null;\n        // Shapes for cascade clipping.\n        this.__clipPaths = [];\n\n        // FIXME Stateful must be mixined after style is setted\n        // Stateful.call(this, opts);\n    }\n\n    Displayable.prototype = {\n\n        constructor: Displayable,\n\n        type: 'displayable',\n\n        /**\n         * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n         * Dirty flag. From which painter will determine if this displayable object needs brush\n         * @name module:zrender/graphic/Displayable#__dirty\n         * @type {boolean}\n         */\n        __dirty: true,\n\n        /**\n         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n         * If ignore drawing of the displayable object. Mouse event will still be triggered\n         * @name module:/zrender/graphic/Displayable#invisible\n         * @type {boolean}\n         * @default false\n         */\n        invisible: false,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z: 0,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z2: 0,\n\n        /**\n         * z层level，决定绘画在哪层canvas中\n         * @name module:/zrender/graphic/Displayable#zlevel\n         * @type {number}\n         * @default 0\n         */\n        zlevel: 0,\n\n        /**\n         * 是否可拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        draggable: false,\n\n        /**\n         * 是否正在拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        dragging: false,\n\n        /**\n         * 是否相应鼠标事件\n         * @name module:/zrender/graphic/Displayable#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * If enable culling\n         * @type {boolean}\n         * @default false\n         */\n        culling: false,\n\n        /**\n         * Mouse cursor when hovered\n         * @name module:/zrender/graphic/Displayable#cursor\n         * @type {string}\n         */\n        cursor: 'pointer',\n\n        /**\n         * If hover area is bounding rect\n         * @name module:/zrender/graphic/Displayable#rectHover\n         * @type {string}\n         */\n        rectHover: false,\n\n        /**\n         * Render the element progressively when the value >= 0,\n         * usefull for large data.\n         * @type {number}\n         */\n        progressive: -1,\n\n        beforeBrush: function (ctx) {},\n\n        afterBrush: function (ctx) {},\n\n        /**\n         * 图形绘制方法\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        // Interface\n        brush: function (ctx, prevEl) {},\n\n        /**\n         * 获取最小包围盒\n         * @return {module:zrender/core/BoundingRect}\n         */\n        // Interface\n        getBoundingRect: function () {},\n\n        /**\n         * 判断坐标 x, y 是否在图形上\n         * If displayable element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        contain: function (x, y) {\n            return this.rectContain(x, y);\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            cb.call(context, this);\n        },\n\n        /**\n         * 判断坐标 x, y 是否在图形的包围盒上\n         * If bounding rect of element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        rectContain: function (x, y) {\n            var coord = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            return rect.contain(coord[0], coord[1]);\n        },\n\n        /**\n         * 标记图形元素为脏，并且在下一帧重绘\n         * Mark displayable element dirty and refresh next frame\n         */\n        dirty: function () {\n            this.__dirty = true;\n\n            this._rect = null;\n\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * 图形是否会触发事件\n         * If displayable object binded any event\n         * @return {boolean}\n         */\n        // TODO, 通过 bind 绑定的事件\n        // isSilent: function () {\n        //     return !(\n        //         this.hoverable || this.draggable\n        //         || this.onmousemove || this.onmouseover || this.onmouseout\n        //         || this.onmousedown || this.onmouseup || this.onclick\n        //         || this.ondragenter || this.ondragover || this.ondragleave\n        //         || this.ondrop\n        //     );\n        // },\n        /**\n         * Alias for animate('style')\n         * @param {boolean} loop\n         */\n        animateStyle: function (loop) {\n            return this.animate('style', loop);\n        },\n\n        attrKV: function (key, value) {\n            if (key !== 'style') {\n                Element.prototype.attrKV.call(this, key, value);\n            }\n            else {\n                this.style.set(value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setStyle: function (key, value) {\n            this.style.set(key, value);\n            this.dirty(false);\n            return this;\n        },\n\n        /**\n         * Use given style object\n         * @param  {Object} obj\n         */\n        useStyle: function (obj) {\n            this.style = new Style(obj, this);\n            this.dirty(false);\n            return this;\n        }\n    };\n\n    zrUtil.inherits(Displayable, Element);\n\n    zrUtil.mixin(Displayable, RectText);\n    // zrUtil.mixin(Displayable, Stateful);\n\n    module.exports = Displayable;\n\n\n/***/ }),\n\n/***/ 645:\n/***/ (function(module, exports) {\n\n\n\n    /**\n     * @param {Array.<Object>} colorStops\n     */\n    var Gradient = function (colorStops) {\n\n        this.colorStops = colorStops || [];\n\n    };\n\n    Gradient.prototype = {\n\n        constructor: Gradient,\n\n        addColorStop: function (offset, color) {\n            this.colorStops.push({\n\n                offset: offset,\n\n                color: color\n            });\n        }\n\n    };\n\n    module.exports = Gradient;\n\n\n/***/ }),\n\n/***/ 646:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var LRU = __webpack_require__(671);\n    var globalImageCache = new LRU(50);\n\n    var helper = {};\n\n    /**\n     * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n     * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n     */\n    helper.findExistImage = function (newImageOrSrc) {\n        if (typeof newImageOrSrc === 'string') {\n            var cachedImgObj = globalImageCache.get(newImageOrSrc);\n            return cachedImgObj && cachedImgObj.image;\n        }\n        else {\n            return newImageOrSrc;\n        }\n    };\n\n    /**\n     * Caution: User should cache loaded images, but not just count on LRU.\n     * Consider if required images more than LRU size, will dead loop occur?\n     *\n     * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n     * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n     * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n     * @param {Function} [cb] params: (image, cbPayload)\n     * @param {Object} [cbPayload] Payload on cb calling.\n     * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n     */\n    helper.createOrUpdateImage = function (newImageOrSrc, image, hostEl, cb, cbPayload) {\n        if (!newImageOrSrc) {\n            return image;\n        }\n        else if (typeof newImageOrSrc === 'string') {\n\n            // Image should not be loaded repeatly.\n            if ((image && image.__zrImageSrc === newImageOrSrc) || !hostEl) {\n                return image;\n            }\n\n            // Only when there is no existent image or existent image src\n            // is different, this method is responsible for load.\n            var cachedImgObj = globalImageCache.get(newImageOrSrc);\n\n            var pendingWrap = {hostEl: hostEl, cb: cb, cbPayload: cbPayload};\n\n            if (cachedImgObj) {\n                image = cachedImgObj.image;\n                !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n            }\n            else {\n                !image && (image = new Image());\n                image.onload = imageOnLoad;\n\n                globalImageCache.put(\n                    newImageOrSrc,\n                    image.__cachedImgObj = {\n                        image: image,\n                        pending: [pendingWrap]\n                    }\n                );\n\n                image.src = image.__zrImageSrc = newImageOrSrc;\n            }\n\n            return image;\n        }\n        // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n        else {\n            return newImageOrSrc;\n        }\n    };\n\n    function imageOnLoad() {\n        var cachedImgObj = this.__cachedImgObj;\n        this.onload = this.__cachedImgObj = null;\n\n        for (var i = 0; i < cachedImgObj.pending.length; i++) {\n            var pendingWrap = cachedImgObj.pending[i];\n            var cb = pendingWrap.cb;\n            cb && cb(this, pendingWrap.cbPayload);\n            pendingWrap.hostEl.dirty();\n        }\n        cachedImgObj.pending.length = 0;\n    }\n\n    var isImageReady = helper.isImageReady = function (image) {\n        return image && image.width && image.height;\n    };\n\n    module.exports = helper;\n\n\n\n/***/ }),\n\n/***/ 647:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var textContain = __webpack_require__(621);\n    var util = __webpack_require__(606);\n    var roundRectHelper = __webpack_require__(679);\n    var imageHelper = __webpack_require__(646);\n\n    var retrieve3 = util.retrieve3;\n    var retrieve2 = util.retrieve2;\n\n    // TODO: Have not support 'start', 'end' yet.\n    var VALID_TEXT_ALIGN = {left: 1, right: 1, center: 1};\n    var VALID_TEXT_VERTICAL_ALIGN = {top: 1, bottom: 1, middle: 1};\n\n    var helper = {};\n\n    /**\n     * @param {module:zrender/graphic/Style} style\n     * @return {module:zrender/graphic/Style} The input style.\n     */\n    helper.normalizeTextStyle = function (style) {\n        normalizeStyle(style);\n        util.each(style.rich, normalizeStyle);\n        return style;\n    };\n\n    function normalizeStyle(style) {\n        if (style) {\n\n            style.font = textContain.makeFont(style);\n\n            var textAlign = style.textAlign;\n            textAlign === 'middle' && (textAlign = 'center');\n            style.textAlign = (\n                textAlign == null || VALID_TEXT_ALIGN[textAlign]\n            ) ? textAlign : 'left';\n\n            // Compatible with textBaseline.\n            var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n            textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n            style.textVerticalAlign = (\n                textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign]\n            ) ? textVerticalAlign : 'top';\n\n            var textPadding = style.textPadding;\n            if (textPadding) {\n                style.textPadding = util.normalizeCssArray(style.textPadding);\n            }\n        }\n    }\n\n    /**\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {string} text\n     * @param {module:zrender/graphic/Style} style\n     * @param {Object|boolean} [rect] {x, y, width, height}\n     *                  If set false, rect text is not used.\n     */\n    helper.renderText = function (hostEl, ctx, text, style, rect) {\n        style.rich\n            ? renderRichText(hostEl, ctx, text, style, rect)\n            : renderPlainText(hostEl, ctx, text, style, rect);\n    };\n\n    function renderPlainText(hostEl, ctx, text, style, rect) {\n        var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n\n        var textPadding = style.textPadding;\n\n        var contentBlock = hostEl.__textCotentBlock;\n        if (!contentBlock || hostEl.__dirty) {\n            contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(\n                text, font, textPadding, style.truncate\n            );\n        }\n\n        var outerHeight = contentBlock.outerHeight;\n\n        var textLines = contentBlock.lines;\n        var lineHeight = contentBlock.lineHeight;\n\n        var boxPos = getBoxPosition(outerHeight, style, rect);\n        var baseX = boxPos.baseX;\n        var baseY = boxPos.baseY;\n        var textAlign = boxPos.textAlign;\n        var textVerticalAlign = boxPos.textVerticalAlign;\n\n        // Origin of textRotation should be the base point of text drawing.\n        applyTextRotation(ctx, style, rect, baseX, baseY);\n\n        var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n        var textX = baseX;\n        var textY = boxY;\n\n        var needDrawBg = needDrawBackground(style);\n        if (needDrawBg || textPadding) {\n            // Consider performance, do not call getTextWidth util necessary.\n            var textWidth = textContain.getWidth(text, font);\n            var outerWidth = textWidth;\n            textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n            var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n\n            needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n            if (textPadding) {\n                textX = getTextXForPadding(baseX, textAlign, textPadding);\n                textY += textPadding[0];\n            }\n        }\n\n        setCtx(ctx, 'textAlign', textAlign || 'left');\n        // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n        // text will offset downward a little bit in font \"Microsoft YaHei\".\n        setCtx(ctx, 'textBaseline', 'middle');\n\n        // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n        setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n        setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n        setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n        setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0);\n\n        // `textBaseline` is set as 'middle'.\n        textY += lineHeight / 2;\n\n        var textLineWidth = style.textLineWidth;\n        var textStroke = getStroke(style.textStroke, textLineWidth);\n        var textFill = getFill(style.textFill);\n\n        if (textStroke) {\n            setCtx(ctx, 'lineWidth', textLineWidth);\n            setCtx(ctx, 'strokeStyle', textStroke);\n        }\n        if (textFill) {\n            setCtx(ctx, 'fillStyle', textFill);\n        }\n\n        for (var i = 0; i < textLines.length; i++) {\n            // Fill after stroke so the outline will not cover the main part.\n            textStroke && ctx.strokeText(textLines[i], textX, textY);\n            textFill && ctx.fillText(textLines[i], textX, textY);\n            textY += lineHeight;\n        }\n    }\n\n    function renderRichText(hostEl, ctx, text, style, rect) {\n        var contentBlock = hostEl.__textCotentBlock;\n\n        if (!contentBlock || hostEl.__dirty) {\n            contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n        }\n\n        drawRichText(hostEl, ctx, contentBlock, style, rect);\n    }\n\n    function drawRichText(hostEl, ctx, contentBlock, style, rect) {\n        var contentWidth = contentBlock.width;\n        var outerWidth = contentBlock.outerWidth;\n        var outerHeight = contentBlock.outerHeight;\n        var textPadding = style.textPadding;\n\n        var boxPos = getBoxPosition(outerHeight, style, rect);\n        var baseX = boxPos.baseX;\n        var baseY = boxPos.baseY;\n        var textAlign = boxPos.textAlign;\n        var textVerticalAlign = boxPos.textVerticalAlign;\n\n        // Origin of textRotation should be the base point of text drawing.\n        applyTextRotation(ctx, style, rect, baseX, baseY);\n\n        var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n        var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n        var xLeft = boxX;\n        var lineTop = boxY;\n        if (textPadding) {\n            xLeft += textPadding[3];\n            lineTop += textPadding[0];\n        }\n        var xRight = xLeft + contentWidth;\n\n        needDrawBackground(style) && drawBackground(\n            hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight\n        );\n\n        for (var i = 0; i < contentBlock.lines.length; i++) {\n            var line = contentBlock.lines[i];\n            var tokens = line.tokens;\n            var tokenCount = tokens.length;\n            var lineHeight = line.lineHeight;\n            var usedWidth = line.width;\n\n            var leftIndex = 0;\n            var lineXLeft = xLeft;\n            var lineXRight = xRight;\n            var rightIndex = tokenCount - 1;\n            var token;\n\n            while (\n                leftIndex < tokenCount\n                && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')\n            ) {\n                placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n                usedWidth -= token.width;\n                lineXLeft += token.width;\n                leftIndex++;\n            }\n\n            while (\n                rightIndex >= 0\n                && (token = tokens[rightIndex], token.textAlign === 'right')\n            ) {\n                placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n                usedWidth -= token.width;\n                lineXRight -= token.width;\n                rightIndex--;\n            }\n\n            // The other tokens are placed as textAlign 'center' if there is enough space.\n            lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n            while (leftIndex <= rightIndex) {\n                token = tokens[leftIndex];\n                // Consider width specified by user, use 'center' rather than 'left'.\n                placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n                lineXLeft += token.width;\n                leftIndex++;\n            }\n\n            lineTop += lineHeight;\n        }\n    }\n\n    function applyTextRotation(ctx, style, rect, x, y) {\n        // textRotation only apply in RectText.\n        if (rect && style.textRotation) {\n            var origin = style.textOrigin;\n            if (origin === 'center') {\n                x = rect.width / 2 + rect.x;\n                y = rect.height / 2 + rect.y;\n            }\n            else if (origin) {\n                x = origin[0] + rect.x;\n                y = origin[1] + rect.y;\n            }\n\n            ctx.translate(x, y);\n            // Positive: anticlockwise\n            ctx.rotate(-style.textRotation);\n            ctx.translate(-x, -y);\n        }\n    }\n\n    function placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n        var tokenStyle = style.rich[token.styleName] || {};\n\n        // 'ctx.textBaseline' is always set as 'middle', for sake of\n        // the bias of \"Microsoft YaHei\".\n        var textVerticalAlign = token.textVerticalAlign;\n        var y = lineTop + lineHeight / 2;\n        if (textVerticalAlign === 'top') {\n            y = lineTop + token.height / 2;\n        }\n        else if (textVerticalAlign === 'bottom') {\n            y = lineTop + lineHeight - token.height / 2;\n        }\n\n        !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(\n            hostEl,\n            ctx,\n            tokenStyle,\n            textAlign === 'right'\n                ? x - token.width\n                : textAlign === 'center'\n                ? x - token.width / 2\n                : x,\n            y - token.height / 2,\n            token.width,\n            token.height\n        );\n\n        var textPadding = token.textPadding;\n        if (textPadding) {\n            x = getTextXForPadding(x, textAlign, textPadding);\n            y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n        }\n\n        setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n        setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n        setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n        setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n\n        setCtx(ctx, 'textAlign', textAlign);\n        // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n        // text will offset downward a little bit in font \"Microsoft YaHei\".\n        setCtx(ctx, 'textBaseline', 'middle');\n\n        setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n\n        var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textLineWidth);\n        var textFill = getFill(tokenStyle.textFill || style.textFill);\n        var textLineWidth = retrieve2(tokenStyle.textLineWidth, style.textLineWidth);\n\n        // Fill after stroke so the outline will not cover the main part.\n        if (textStroke) {\n            setCtx(ctx, 'lineWidth', textLineWidth);\n            setCtx(ctx, 'strokeStyle', textStroke);\n            ctx.strokeText(token.text, x, y);\n        }\n        if (textFill) {\n            setCtx(ctx, 'fillStyle', textFill);\n            ctx.fillText(token.text, x, y);\n        }\n    }\n\n    function needDrawBackground(style) {\n        return style.textBackgroundColor\n            || (style.textBorderWidth && style.textBorderColor);\n    }\n\n    // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n    // shape: {x, y, width, height}\n    function drawBackground(hostEl, ctx, style, x, y, width, height) {\n        var textBackgroundColor = style.textBackgroundColor;\n        var textBorderWidth = style.textBorderWidth;\n        var textBorderColor = style.textBorderColor;\n        var isPlainBg = util.isString(textBackgroundColor);\n\n        setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n        setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n        setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n        setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n        if (isPlainBg || (textBorderWidth && textBorderColor)) {\n            ctx.beginPath();\n            var textBorderRadius = style.textBorderRadius;\n            if (!textBorderRadius) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, {\n                    x: x, y: y, width: width, height: height, r: textBorderRadius\n                });\n            }\n            ctx.closePath();\n        }\n\n        if (isPlainBg) {\n            setCtx(ctx, 'fillStyle', textBackgroundColor);\n            ctx.fill();\n        }\n        else if (util.isObject(textBackgroundColor)) {\n            var image = textBackgroundColor.image;\n\n            image = imageHelper.createOrUpdateImage(\n                image, null, hostEl, onBgImageLoaded, textBackgroundColor\n            );\n            if (image && imageHelper.isImageReady(image)) {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n\n        if (textBorderWidth && textBorderColor) {\n            setCtx(ctx, 'lineWidth', textBorderWidth);\n            setCtx(ctx, 'strokeStyle', textBorderColor);\n            ctx.stroke();\n        }\n    }\n\n    function onBgImageLoaded(image, textBackgroundColor) {\n        // Replace image, so that `contain/text.js#parseRichText`\n        // will get correct result in next tick.\n        textBackgroundColor.image = image;\n    }\n\n    function getBoxPosition(blockHeiht, style, rect) {\n        var baseX = style.x || 0;\n        var baseY = style.y || 0;\n        var textAlign = style.textAlign;\n        var textVerticalAlign = style.textVerticalAlign;\n\n        // Text position represented by coord\n        if (rect) {\n            var textPosition = style.textPosition;\n            if (textPosition instanceof Array) {\n                // Percent\n                baseX = rect.x + parsePercent(textPosition[0], rect.width);\n                baseY = rect.y + parsePercent(textPosition[1], rect.height);\n            }\n            else {\n                var res = textContain.adjustTextPositionOnRect(\n                    textPosition, rect, style.textDistance\n                );\n                baseX = res.x;\n                baseY = res.y;\n                // Default align and baseline when has textPosition\n                textAlign = textAlign || res.textAlign;\n                textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n            }\n\n            // textOffset is only support in RectText, otherwise\n            // we have to adjust boundingRect for textOffset.\n            var textOffset = style.textOffset;\n            if (textOffset) {\n                baseX += textOffset[0];\n                baseY += textOffset[1];\n            }\n        }\n\n        return {\n            baseX: baseX,\n            baseY: baseY,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    function setCtx(ctx, prop, value) {\n        // FIXME ??? performance try\n        // if (ctx.__currentValues[prop] !== value) {\n            ctx[prop] = ctx.__currentValues[prop] = value;\n        // }\n        return ctx[prop];\n    }\n\n    /**\n     * @param {string} [stroke] If specified, do not check style.textStroke.\n     * @param {string} [lineWidth] If specified, do not check style.textStroke.\n     * @param {number} style\n     */\n    var getStroke = helper.getStroke = function (stroke, lineWidth) {\n        return (stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none')\n            ? null\n            // TODO pattern and gradient?\n            : (stroke.image || stroke.colorStops)\n            ? '#000'\n            : stroke;\n    };\n\n    var getFill = helper.getFill = function (fill) {\n        return (fill == null || fill === 'none')\n            ? null\n            // TODO pattern and gradient?\n            : (fill.image || fill.colorStops)\n            ? '#000'\n            : fill;\n    };\n\n    function parsePercent(value, maxValue) {\n        if (typeof value === 'string') {\n            if (value.lastIndexOf('%') >= 0) {\n                return parseFloat(value) / 100 * maxValue;\n            }\n            return parseFloat(value);\n        }\n        return value;\n    }\n\n    function getTextXForPadding(x, textAlign, textPadding) {\n        return textAlign === 'right'\n            ? (x - textPadding[1])\n            : textAlign === 'center'\n            ? (x + textPadding[3] / 2 - textPadding[1] / 2)\n            : (x + textPadding[3]);\n    }\n\n    /**\n     * @param {string} text\n     * @param {module:zrender/Style} style\n     * @return {boolean}\n     */\n    helper.needDrawText = function (text, style) {\n        return text != null\n            && (text\n                || style.textBackgroundColor\n                || (style.textBorderWidth && style.textBorderColor)\n                || style.textPadding\n            );\n    };\n\n    module.exports = helper;\n\n\n\n\n/***/ }),\n\n/***/ 648:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var List = __webpack_require__(630);\n    var completeDimensions = __webpack_require__(631);\n    var zrUtil = __webpack_require__(606);\n    var modelUtil = __webpack_require__(609);\n    var CoordinateSystem = __webpack_require__(636);\n    var getDataItemValue = modelUtil.getDataItemValue;\n    var converDataValue = modelUtil.converDataValue;\n\n    function firstDataNotNull(data) {\n        var i = 0;\n        while (i < data.length && data[i] == null) {\n            i++;\n        }\n        return data[i];\n    }\n    function ifNeedCompleteOrdinalData(data) {\n        var sampleItem = firstDataNotNull(data);\n        return sampleItem != null\n            && !zrUtil.isArray(getDataItemValue(sampleItem));\n    }\n\n    /**\n     * Helper function to create a list from option data\n     */\n    function createListFromArray(data, seriesModel, ecModel) {\n        // If data is undefined\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        var coordSysName = seriesModel.get('coordinateSystem');\n        var creator = creators[coordSysName];\n        var registeredCoordSys = CoordinateSystem.get(coordSysName);\n        var completeDimOpt = {\n            encodeDef: seriesModel.get('encode'),\n            dimsDef: seriesModel.get('dimensions')\n        };\n\n        // FIXME\n        var axesInfo = creator && creator(data, seriesModel, ecModel, completeDimOpt);\n        var dimensions = axesInfo && axesInfo.dimensions;\n        if (!dimensions) {\n            // Get dimensions from registered coordinate system\n            dimensions = (registeredCoordSys && (\n                registeredCoordSys.getDimensionsInfo\n                    ? registeredCoordSys.getDimensionsInfo()\n                    : registeredCoordSys.dimensions.slice()\n            )) || ['x', 'y'];\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n        }\n\n        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n\n        var list = new List(dimensions, seriesModel);\n\n        var nameList = createNameList(axesInfo, data);\n\n        var categories = {};\n        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\n            ? function (itemOpt, dimName, dataIndex, dimIndex) {\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                // Use dataIndex as ordinal value in categoryAxis\n                return dimIndex === categoryIndex\n                    ? dataIndex\n                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n            }\n            : function (itemOpt, dimName, dataIndex, dimIndex) {\n                var value = getDataItemValue(itemOpt);\n                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n                if (categoryAxesModels && categoryAxesModels[dimName]) {\n                    // If given value is a category string\n                    if (typeof val === 'string') {\n                        // Lazy get categories\n                        categories[dimName] = categories[dimName]\n                            || categoryAxesModels[dimName].getCategories();\n                        val = zrUtil.indexOf(categories[dimName], val);\n                        if (val < 0 && !isNaN(val)) {\n                            // In case some one write '1', '2' istead of 1, 2\n                            val = +val;\n                        }\n                    }\n                }\n                return val;\n            };\n\n        list.hasItemOption = false;\n        list.initData(data, nameList, dimValueGetter);\n\n        return list;\n    }\n\n    function isStackable(axisType) {\n        return axisType !== 'category' && axisType !== 'time';\n    }\n\n    function getDimTypeByAxis(axisType) {\n        return axisType === 'category'\n            ? 'ordinal'\n            : axisType === 'time'\n            ? 'time'\n            : 'float';\n    }\n\n    /**\n     * Creaters for each coord system.\n     */\n    var creators = {\n\n        cartesian2d: function (data, seriesModel, ecModel, completeDimOpt) {\n\n            var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n                return ecModel.queryComponents({\n                    mainType: name,\n                    index: seriesModel.get(name + 'Index'),\n                    id: seriesModel.get(name + 'Id')\n                })[0];\n            });\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            if (__DEV__) {\n                if (!xAxisModel) {\n                    throw new Error('xAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('xAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n                if (!yAxisModel) {\n                    throw new Error('yAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('yAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'x',\n                    type: getDimTypeByAxis(xAxisType),\n                    stackable: isStackable(xAxisType)\n                },\n                {\n                    name: 'y',\n                    // If two category axes\n                    type: getDimTypeByAxis(yAxisType),\n                    stackable: isStackable(yAxisType)\n                }\n            ];\n\n            var isXAxisCateogry = xAxisType === 'category';\n            var isYAxisCategory = yAxisType === 'category';\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isXAxisCateogry) {\n                categoryAxesModels.x = xAxisModel;\n            }\n            if (isYAxisCategory) {\n                categoryAxesModels.y = yAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        singleAxis: function (data, seriesModel, ecModel, completeDimOpt) {\n\n            var singleAxisModel = ecModel.queryComponents({\n                mainType: 'singleAxis',\n                index: seriesModel.get('singleAxisIndex'),\n                id: seriesModel.get('singleAxisId')\n            })[0];\n\n            if (__DEV__) {\n                if (!singleAxisModel) {\n                    throw new Error('singleAxis should be specified.');\n                }\n            }\n\n            var singleAxisType = singleAxisModel.get('type');\n            var isCategory = singleAxisType === 'category';\n\n            var dimensions = [{\n                name: 'single',\n                type: getDimTypeByAxis(singleAxisType),\n                stackable: isStackable(singleAxisType)\n            }];\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isCategory) {\n                categoryAxesModels.single = singleAxisModel;\n            }\n\n            return {\n                dimensions: dimensions,\n                categoryIndex: isCategory ? 0 : -1,\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        polar: function (data, seriesModel, ecModel, completeDimOpt) {\n            var polarModel = ecModel.queryComponents({\n                mainType: 'polar',\n                index: seriesModel.get('polarIndex'),\n                id: seriesModel.get('polarId')\n            })[0];\n\n            var angleAxisModel = polarModel.findAxisModel('angleAxis');\n            var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n\n            if (__DEV__) {\n                if (!angleAxisModel) {\n                    throw new Error('angleAxis option not found');\n                }\n                if (!radiusAxisModel) {\n                    throw new Error('radiusAxis option not found');\n                }\n            }\n\n            var radiusAxisType = radiusAxisModel.get('type');\n            var angleAxisType = angleAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'radius',\n                    type: getDimTypeByAxis(radiusAxisType),\n                    stackable: isStackable(radiusAxisType)\n                },\n                {\n                    name: 'angle',\n                    type: getDimTypeByAxis(angleAxisType),\n                    stackable: isStackable(angleAxisType)\n                }\n            ];\n            var isAngleAxisCateogry = angleAxisType === 'category';\n            var isRadiusAxisCateogry = radiusAxisType === 'category';\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isRadiusAxisCateogry) {\n                categoryAxesModels.radius = radiusAxisModel;\n            }\n            if (isAngleAxisCateogry) {\n                categoryAxesModels.angle = angleAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        geo: function (data, seriesModel, ecModel, completeDimOpt) {\n            // TODO Region\n            // 多个散点图系列在同一个地区的时候\n            return {\n                dimensions: completeDimensions([\n                    {name: 'lng'},\n                    {name: 'lat'}\n                ], data, completeDimOpt)\n            };\n        }\n    };\n\n    function createNameList(result, data) {\n        var nameList = [];\n\n        var categoryDim = result && result.dimensions[result.categoryIndex];\n        var categoryAxisModel;\n        if (categoryDim) {\n            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n        }\n\n        if (categoryAxisModel) {\n            // FIXME Two category axis\n            var categories = categoryAxisModel.getCategories();\n            if (categories) {\n                var dataLen = data.length;\n                // Ordered data is given explicitly like\n                // [[3, 0.2], [1, 0.3], [2, 0.15]]\n                // or given scatter data,\n                // pick the category\n                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n                    nameList = [];\n                    for (var i = 0; i < dataLen; i++) {\n                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\n                    }\n                }\n                else {\n                    nameList = categories.slice(0);\n                }\n            }\n        }\n\n        return nameList;\n    }\n\n    module.exports = createListFromArray;\n\n\n\n/***/ }),\n\n/***/ 649:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var formatUtil = __webpack_require__(613);\n    var graphic = __webpack_require__(608);\n    var Model = __webpack_require__(614);\n    var numberUtil = __webpack_require__(610);\n    var remRadian = numberUtil.remRadian;\n    var isRadianAroundZero = numberUtil.isRadianAroundZero;\n    var vec2 = __webpack_require__(611);\n    var matrix = __webpack_require__(623);\n    var v2ApplyTransform = vec2.applyTransform;\n    var retrieve = zrUtil.retrieve;\n\n    var PI = Math.PI;\n\n    function makeAxisEventDataBase(axisModel) {\n        var eventData = {\n            componentType: axisModel.mainType\n        };\n        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n        return eventData;\n    }\n\n    /**\n     * A final axis is translated and rotated from a \"standard axis\".\n     * So opt.position and opt.rotation is required.\n     *\n     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n     * for example: (0, 0) ------------> (0, 50)\n     *\n     * nameDirection or tickDirection or labelDirection is 1 means tick\n     * or label is below the standard axis, whereas is -1 means above\n     * the standard axis. labelOffset means offset between label and axis,\n     * which is useful when 'onZero', where axisLabel is in the grid and\n     * label in outside grid.\n     *\n     * Tips: like always,\n     * positive rotation represents anticlockwise, and negative rotation\n     * represents clockwise.\n     * The direction of position coordinate is the same as the direction\n     * of screen coordinate.\n     *\n     * Do not need to consider axis 'inverse', which is auto processed by\n     * axis extent.\n     *\n     * @param {module:zrender/container/Group} group\n     * @param {Object} axisModel\n     * @param {Object} opt Standard axis parameters.\n     * @param {Array.<number>} opt.position [x, y]\n     * @param {number} opt.rotation by radian\n     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle'.\n     * @param {number} [opt.tickDirection=1] 1 or -1\n     * @param {number} [opt.labelDirection=1] 1 or -1\n     * @param {number} [opt.labelOffset=0] Usefull when onZero.\n     * @param {string} [opt.axisLabelShow] default get from axisModel.\n     * @param {string} [opt.axisName] default get from axisModel.\n     * @param {number} [opt.axisNameAvailableWidth]\n     * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n     * @param {number} [opt.labelInterval] Default label interval when label\n     *                                     interval from model is null or 'auto'.\n     * @param {number} [opt.strokeContainThreshold] Default label interval when label\n     * @param {number} [opt.nameTruncateMaxWidth]\n     */\n    var AxisBuilder = function (axisModel, opt) {\n\n        /**\n         * @readOnly\n         */\n        this.opt = opt;\n\n        /**\n         * @readOnly\n         */\n        this.axisModel = axisModel;\n\n        // Default value\n        zrUtil.defaults(\n            opt,\n            {\n                labelOffset: 0,\n                nameDirection: 1,\n                tickDirection: 1,\n                labelDirection: 1,\n                silent: true\n            }\n        );\n\n        /**\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        // FIXME Not use a seperate text group?\n        var dumbGroup = new graphic.Group({\n            position: opt.position.slice(),\n            rotation: opt.rotation\n        });\n\n        // this.group.add(dumbGroup);\n        // this._dumbGroup = dumbGroup;\n\n        dumbGroup.updateTransform();\n        this._transform = dumbGroup.transform;\n\n        this._dumbGroup = dumbGroup;\n    };\n\n    AxisBuilder.prototype = {\n\n        constructor: AxisBuilder,\n\n        hasBuilder: function (name) {\n            return !!builders[name];\n        },\n\n        add: function (name) {\n            builders[name].call(this);\n        },\n\n        getGroup: function () {\n            return this.group;\n        }\n\n    };\n\n    var builders = {\n\n        /**\n         * @private\n         */\n        axisLine: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisLine.show')) {\n                return;\n            }\n\n            var extent = this.axisModel.axis.getExtent();\n\n            var matrix = this._transform;\n            var pt1 = [extent[0], 0];\n            var pt2 = [extent[1], 0];\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n\n            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                // Id for animation\n                anid: 'line',\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.extend(\n                    {lineCap: 'round'},\n                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\n                ),\n                strokeContainThreshold: opt.strokeContainThreshold || 5,\n                silent: true,\n                z2: 1\n            })));\n        },\n\n        /**\n         * @private\n         */\n        axisTick: function () {\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n\n            if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n                return;\n            }\n\n            var tickModel = axisModel.getModel('axisTick');\n            var opt = this.opt;\n\n            var lineStyleModel = tickModel.getModel('lineStyle');\n            var tickLen = tickModel.get('length');\n\n            var tickInterval = getInterval(tickModel, opt.labelInterval);\n            var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\n            var ticks = axis.scale.getTicks();\n\n            var pt1 = [];\n            var pt2 = [];\n            var matrix = this._transform;\n\n            for (var i = 0; i < ticksCoords.length; i++) {\n                // Only ordinal scale support tick interval\n                if (ifIgnoreOnTick(axis, i, tickInterval)) {\n                     continue;\n                }\n\n                var tickCoord = ticksCoords[i];\n\n                pt1[0] = tickCoord;\n                pt1[1] = 0;\n                pt2[0] = tickCoord;\n                pt2[1] = opt.tickDirection * tickLen;\n\n                if (matrix) {\n                    v2ApplyTransform(pt1, pt1, matrix);\n                    v2ApplyTransform(pt2, pt2, matrix);\n                }\n                // Tick line, Not use group transform to have better line draw\n                this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                    // Id for animation\n                    anid: 'tick_' + ticks[i],\n\n                    shape: {\n                        x1: pt1[0],\n                        y1: pt1[1],\n                        x2: pt2[0],\n                        y2: pt2[1]\n                    },\n                    style: zrUtil.defaults(\n                        lineStyleModel.getLineStyle(),\n                        {\n                            stroke: axisModel.get('axisLine.lineStyle.color')\n                        }\n                    ),\n                    z2: 2,\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @private\n         */\n        axisLabel: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n            var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n            if (!show || axis.scale.isBlank()) {\n                return;\n            }\n\n            var labelModel = axisModel.getModel('axisLabel');\n            var labelMargin = labelModel.get('margin');\n            var ticks = axis.scale.getTicks();\n            var labels = axisModel.getFormattedLabels();\n\n            // Special label rotate.\n            var labelRotation = (\n                retrieve(opt.labelRotate, labelModel.get('rotate')) || 0\n            ) * PI / 180;\n\n            var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n            var categoryData = axisModel.get('data');\n\n            var textEls = [];\n            var silent = isSilent(axisModel);\n            var triggerEvent = axisModel.get('triggerEvent');\n\n            zrUtil.each(ticks, function (tickVal, index) {\n                if (ifIgnoreOnTick(axis, index, opt.labelInterval)) {\n                     return;\n                }\n\n                var itemLabelModel = labelModel;\n                if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n                    itemLabelModel = new Model(\n                        categoryData[tickVal].textStyle, labelModel, axisModel.ecModel\n                    );\n                }\n\n                var textColor = itemLabelModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color');\n\n                var tickCoord = axis.dataToCoord(tickVal);\n                var pos = [\n                    tickCoord,\n                    opt.labelOffset + opt.labelDirection * labelMargin\n                ];\n                var labelStr = axis.scale.getLabel(tickVal);\n\n                var textEl = new graphic.Text({\n                    // Id for animation\n                    anid: 'label_' + tickVal,\n                    position: pos,\n                    rotation: labelLayout.rotation,\n                    silent: silent,\n                    z2: 10\n                });\n\n                graphic.setTextStyle(textEl.style, itemLabelModel, {\n                    text: labels[index],\n                    textAlign: itemLabelModel.getShallow('align', true)\n                        || labelLayout.textAlign,\n                    textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true)\n                        || itemLabelModel.getShallow('baseline', true)\n                        || labelLayout.textVerticalAlign,\n                    textFill: typeof textColor === 'function'\n                        ? textColor(\n                            // (1) In category axis with data zoom, tick is not the original\n                            // index of axis.data. So tick should not be exposed to user\n                            // in category axis.\n                            // (2) Compatible with previous version, which always returns labelStr.\n                            // But in interval scale labelStr is like '223,445', which maked\n                            // user repalce ','. So we modify it to return original val but remain\n                            // it as 'string' to avoid error in replacing.\n                            axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal,\n                            index\n                        )\n                        : textColor\n                });\n\n                // Pack data for mouse event\n                if (triggerEvent) {\n                    textEl.eventData = makeAxisEventDataBase(axisModel);\n                    textEl.eventData.targetType = 'axisLabel';\n                    textEl.eventData.value = labelStr;\n                }\n\n                // FIXME\n                this._dumbGroup.add(textEl);\n                textEl.updateTransform();\n\n                textEls.push(textEl);\n                this.group.add(textEl);\n\n                textEl.decomposeTransform();\n\n            }, this);\n\n            fixMinMaxLabelShow(axisModel, textEls);\n        },\n\n        /**\n         * @private\n         */\n        axisName: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var name = retrieve(opt.axisName, axisModel.get('name'));\n\n            if (!name) {\n                return;\n            }\n\n            var nameLocation = axisModel.get('nameLocation');\n            var nameDirection = opt.nameDirection;\n            var textStyleModel = axisModel.getModel('nameTextStyle');\n            var gap = axisModel.get('nameGap') || 0;\n\n            var extent = this.axisModel.axis.getExtent();\n            var gapSignal = extent[0] > extent[1] ? -1 : 1;\n            var pos = [\n                nameLocation === 'start'\n                    ? extent[0] - gapSignal * gap\n                    : nameLocation === 'end'\n                    ? extent[1] + gapSignal * gap\n                    : (extent[0] + extent[1]) / 2, // 'middle'\n                // Reuse labelOffset.\n                nameLocation === 'middle' ? opt.labelOffset + nameDirection * gap : 0\n            ];\n\n            var labelLayout;\n\n            var nameRotation = axisModel.get('nameRotate');\n            if (nameRotation != null) {\n                nameRotation = nameRotation * PI / 180; // To radian.\n            }\n\n            var axisNameAvailableWidth;\n\n            if (nameLocation === 'middle') {\n                labelLayout = innerTextLayout(\n                    opt.rotation,\n                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n                    nameDirection\n                );\n            }\n            else {\n                labelLayout = endTextLayout(\n                    opt, nameLocation, nameRotation || 0, extent\n                );\n\n                axisNameAvailableWidth = opt.axisNameAvailableWidth;\n                if (axisNameAvailableWidth != null) {\n                    axisNameAvailableWidth = Math.abs(\n                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\n                    );\n                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n                }\n            }\n\n            var textFont = textStyleModel.getFont();\n\n            var truncateOpt = axisModel.get('nameTruncate', true) || {};\n            var ellipsis = truncateOpt.ellipsis;\n            var maxWidth = retrieve(\n                opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth\n            );\n            // FIXME\n            // truncate rich text? (consider performance)\n            var truncatedText = (ellipsis != null && maxWidth != null)\n                ? formatUtil.truncateText(\n                    name, maxWidth, textFont, ellipsis,\n                    {minChar: 2, placeholder: truncateOpt.placeholder}\n                )\n                : name;\n\n            var tooltipOpt = axisModel.get('tooltip', true);\n\n            var mainType = axisModel.mainType;\n            var formatterParams = {\n                componentType: mainType,\n                name: name,\n                $vars: ['name']\n            };\n            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n\n            var textEl = new graphic.Text({\n                // Id for animation\n                anid: 'name',\n\n                __fullText: name,\n                __truncatedText: truncatedText,\n\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: isSilent(axisModel),\n                z2: 1,\n                tooltip: (tooltipOpt && tooltipOpt.show)\n                    ? zrUtil.extend({\n                        content: name,\n                        formatter: function () {\n                            return name;\n                        },\n                        formatterParams: formatterParams\n                    }, tooltipOpt)\n                    : null\n            });\n\n            graphic.setTextStyle(textEl.style, textStyleModel, {\n                text: truncatedText,\n                textFont: textFont,\n                textFill: textStyleModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color'),\n                textAlign: labelLayout.textAlign,\n                textVerticalAlign: labelLayout.textVerticalAlign\n            });\n\n            if (axisModel.get('triggerEvent')) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisName';\n                textEl.eventData.name = name;\n            }\n\n            // FIXME\n            this._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            this.group.add(textEl);\n\n            textEl.decomposeTransform();\n        }\n\n    };\n\n    /**\n     * @public\n     * @static\n     * @param {Object} opt\n     * @param {number} axisRotation in radian\n     * @param {number} textRotation in radian\n     * @param {number} direction\n     * @return {Object} {\n     *  rotation, // according to axis\n     *  textAlign,\n     *  textVerticalAlign\n     * }\n     */\n    var innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n        var rotationDiff = remRadian(textRotation - axisRotation);\n        var textAlign;\n        var textVerticalAlign;\n\n        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n\n            if (rotationDiff > 0 && rotationDiff < PI) {\n                textAlign = direction > 0 ? 'right' : 'left';\n            }\n            else {\n                textAlign = direction > 0 ? 'left' : 'right';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    };\n\n    function endTextLayout(opt, textPosition, textRotate, extent) {\n        var rotationDiff = remRadian(textRotate - opt.rotation);\n        var textAlign;\n        var textVerticalAlign;\n        var inverse = extent[0] > extent[1];\n        var onLeft = (textPosition === 'start' && !inverse)\n            || (textPosition !== 'start' && inverse);\n\n        if (isRadianAroundZero(rotationDiff - PI / 2)) {\n            textVerticalAlign = onLeft ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n            textVerticalAlign = onLeft ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n                textAlign = onLeft ? 'left' : 'right';\n            }\n            else {\n                textAlign = onLeft ? 'right' : 'left';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    function isSilent(axisModel) {\n        var tooltipOpt = axisModel.get('tooltip');\n        return axisModel.get('silent')\n            // Consider mouse cursor, add these restrictions.\n            || !(\n                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\n            );\n    }\n\n    function fixMinMaxLabelShow(axisModel, textEls) {\n        // If min or max are user set, we need to check\n        // If the tick on min(max) are overlap on their neighbour tick\n        // If they are overlapped, we need to hide the min(max) tick label\n        var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n        var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n        var firstLabel = textEls[0];\n        var nextLabel = textEls[1];\n        var lastLabel = textEls[textEls.length - 1];\n        var prevLabel = textEls[textEls.length - 2];\n\n        if (showMinLabel === false) {\n            firstLabel.ignore = true;\n        }\n        else if (axisModel.getMin() != null && isTwoLabelOverlapped(firstLabel, nextLabel)) {\n            showMinLabel ? (nextLabel.ignore = true) : (firstLabel.ignore = true);\n        }\n\n        if (showMaxLabel === false) {\n            lastLabel.ignore = true;\n        }\n        else if (axisModel.getMax() != null && isTwoLabelOverlapped(prevLabel, lastLabel)) {\n            showMaxLabel ? (prevLabel.ignore = true) : (lastLabel.ignore = true);\n        }\n    }\n\n    function isTwoLabelOverlapped(current, next, labelLayout) {\n        // current and next has the same rotation.\n        var firstRect = current && current.getBoundingRect().clone();\n        var nextRect = next && next.getBoundingRect().clone();\n\n        if (!firstRect || !nextRect) {\n            return;\n        }\n\n        // When checking intersect of two rotated labels, we use mRotationBack\n        // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n        var mRotationBack = matrix.identity([]);\n        matrix.rotate(mRotationBack, mRotationBack, -current.rotation);\n\n        firstRect.applyTransform(matrix.mul([], mRotationBack, current.getLocalTransform()));\n        nextRect.applyTransform(matrix.mul([], mRotationBack, next.getLocalTransform()));\n\n        return firstRect.intersect(nextRect);\n    }\n\n\n    /**\n     * @static\n     */\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval) {\n        var rawTick;\n        var scale = axis.scale;\n        return scale.type === 'ordinal'\n            && (\n                typeof interval === 'function'\n                    ? (\n                        rawTick = scale.getTicks()[i],\n                        !interval(rawTick, scale.getLabel(rawTick))\n                    )\n                    : i % (interval + 1)\n            );\n    };\n\n    /**\n     * @static\n     */\n    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n        var interval = model.get('interval');\n        if (interval == null || interval == 'auto') {\n            interval = labelInterval;\n        }\n        return interval;\n    };\n\n    module.exports = AxisBuilder;\n\n\n\n/***/ }),\n\n/***/ 650:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var numberUtil = __webpack_require__(610);\n    var linearMap = numberUtil.linearMap;\n    var zrUtil = __webpack_require__(606);\n    var axisHelper = __webpack_require__(620);\n\n    function fixExtentWithBands(extent, nTick) {\n        var size = extent[1] - extent[0];\n        var len = nTick;\n        var margin = size / len / 2;\n        extent[0] += margin;\n        extent[1] -= margin;\n    }\n\n    var normalizedExtent = [0, 1];\n    /**\n     * @name module:echarts/coord/CartesianAxis\n     * @constructor\n     */\n    var Axis = function (dim, scale, extent) {\n\n        /**\n         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n         * @type {string}\n         */\n        this.dim = dim;\n\n        /**\n         * Axis scale\n         * @type {module:echarts/coord/scale/*}\n         */\n        this.scale = scale;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        this._extent = extent || [0, 0];\n\n        /**\n         * @type {boolean}\n         */\n        this.inverse = false;\n\n        /**\n         * Usually true when axis has a ordinal scale\n         * @type {boolean}\n         */\n        this.onBand = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._labelInterval;\n    };\n\n    Axis.prototype = {\n\n        constructor: Axis,\n\n        /**\n         * If axis extent contain given coord\n         * @param {number} coord\n         * @return {boolean}\n         */\n        contain: function (coord) {\n            var extent = this._extent;\n            var min = Math.min(extent[0], extent[1]);\n            var max = Math.max(extent[0], extent[1]);\n            return coord >= min && coord <= max;\n        },\n\n        /**\n         * If axis extent contain given data\n         * @param {number} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.contain(this.dataToCoord(data));\n        },\n\n        /**\n         * Get coord extent.\n         * @return {Array.<number>}\n         */\n        getExtent: function () {\n            return this._extent.slice();\n        },\n\n        /**\n         * Get precision used for formatting\n         * @param {Array.<number>} [dataExtent]\n         * @return {number}\n         */\n        getPixelPrecision: function (dataExtent) {\n            return numberUtil.getPixelPrecision(\n                dataExtent || this.scale.getExtent(),\n                this._extent\n            );\n        },\n\n        /**\n         * Set coord extent\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var extent = this._extent;\n            extent[0] = start;\n            extent[1] = end;\n        },\n\n        /**\n         * Convert data to coord. Data is the rank if it has a ordinal scale\n         * @param {number} data\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        dataToCoord: function (data, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n            data = scale.normalize(data);\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            return linearMap(data, normalizedExtent, extent, clamp);\n        },\n\n        /**\n         * Convert coord to data. Data is the rank if it has a ordinal scale\n         * @param {number} coord\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        coordToData: function (coord, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            var t = linearMap(coord, extent, normalizedExtent, clamp);\n\n            return this.scale.scale(t);\n        },\n\n        /**\n         * Convert pixel point to data in axis\n         * @param {Array.<number>} point\n         * @param  {boolean} clamp\n         * @return {number} data\n         */\n        pointToData: function (point, clamp) {\n            // Should be implemented in derived class if necessary.\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicksCoords: function (alignWithLabel) {\n            if (this.onBand && !alignWithLabel) {\n                var bands = this.getBands();\n                var coords = [];\n                for (var i = 0; i < bands.length; i++) {\n                    coords.push(bands[i][0]);\n                }\n                if (bands[i - 1]) {\n                    coords.push(bands[i - 1][1]);\n                }\n                return coords;\n            }\n            else {\n                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n            }\n        },\n\n        /**\n         * Coords of labels are on the ticks or on the middle of bands\n         * @return {Array.<number>}\n         */\n        getLabelsCoords: function () {\n            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n        },\n\n        /**\n         * Get bands.\n         *\n         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n         * |---1---|---2---|---3---|---4---|.\n         *\n         * @return {Array}\n         */\n         // FIXME Situation when labels is on ticks\n        getBands: function () {\n            var extent = this.getExtent();\n            var bands = [];\n            var len = this.scale.count();\n            var start = extent[0];\n            var end = extent[1];\n            var span = end - start;\n\n            for (var i = 0; i < len; i++) {\n                bands.push([\n                    span * i / len + start,\n                    span * (i + 1) / len + start\n                ]);\n            }\n            return bands;\n        },\n\n        /**\n         * Get width of band\n         * @return {number}\n         */\n        getBandWidth: function () {\n            var axisExtent = this._extent;\n            var dataExtent = this.scale.getExtent();\n\n            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\n            // Fix #2728, avoid NaN when only one data.\n            len === 0 && (len = 1);\n\n            var size = Math.abs(axisExtent[1] - axisExtent[0]);\n\n            return Math.abs(size) / len;\n        },\n\n        /**\n         * Get interval of the axis label.\n         * @return {number}\n         */\n        getLabelInterval: function () {\n            var labelInterval = this._labelInterval;\n            if (!labelInterval) {\n                var axisModel = this.model;\n                var labelModel = axisModel.getModel('axisLabel');\n                var interval = labelModel.get('interval');\n                if (!(this.type === 'category' && interval === 'auto')) {\n                    labelInterval = interval === 'auto' ? 0 : interval;\n                }\n                else if (this.isHorizontal){\n                    labelInterval = axisHelper.getAxisLabelInterval(\n                        zrUtil.map(this.scale.getTicks(), this.dataToCoord, this),\n                        axisModel.getFormattedLabels(),\n                        labelModel.getFont(),\n                        this.isHorizontal()\n                    );\n                }\n                this._labelInterval = labelInterval;\n            }\n            return labelInterval;\n        }\n\n    };\n\n    module.exports = Axis;\n\n\n/***/ }),\n\n/***/ 651:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var axisHelper = __webpack_require__(620);\n\n    function getName(obj) {\n        if (zrUtil.isObject(obj) && obj.value != null) {\n            return obj.value;\n        }\n        else {\n            return obj + '';\n        }\n    }\n\n    module.exports = {\n\n        /**\n         * Format labels\n         * @return {Array.<string>}\n         */\n        getFormattedLabels: function () {\n            return axisHelper.getFormattedLabels(\n                this.axis,\n                this.get('axisLabel.formatter')\n            );\n        },\n\n        /**\n         * Get categories\n         */\n        getCategories: function () {\n            return this.get('type') === 'category'\n                && zrUtil.map(this.get('data'), getName);\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n         */\n        getMin: function (origin) {\n            var option = this.option;\n            var min = (!origin && option.rangeStart != null)\n                ? option.rangeStart : option.min;\n\n            if (this.axis && min != null && min !== 'dataMin' && !zrUtil.eqNaN(min)) {\n                min = this.axis.scale.parse(min);\n            }\n            return min;\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n         */\n        getMax: function (origin) {\n            var option = this.option;\n            var max = (!origin && option.rangeEnd != null)\n                ? option.rangeEnd : option.max;\n\n            if (this.axis && max != null && max !== 'dataMax' && !zrUtil.eqNaN(max)) {\n                max = this.axis.scale.parse(max);\n            }\n            return max;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        getNeedCrossZero: function () {\n            var option = this.option;\n            return (option.rangeStart != null || option.rangeEnd != null)\n                ? false : !option.scale;\n        },\n\n        /**\n         * Should be implemented by each axis model if necessary.\n         * @return {module:echarts/model/Component} coordinate system model\n         */\n        getCoordSysModel: zrUtil.noop,\n\n        /**\n         * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n         * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n         */\n        setRange: function (rangeStart, rangeEnd) {\n            this.option.rangeStart = rangeStart;\n            this.option.rangeEnd = rangeEnd;\n        },\n\n        /**\n         * Reset range\n         */\n        resetRange: function () {\n            // rangeStart and rangeEnd is readonly.\n            this.option.rangeStart = this.option.rangeEnd = null;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 657:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var zrUtil = __webpack_require__(606);\n    var symbolUtil = __webpack_require__(639);\n    var graphic = __webpack_require__(608);\n    var numberUtil = __webpack_require__(610);\n    var labelHelper = __webpack_require__(710);\n\n    function getSymbolSize(data, idx) {\n        var symbolSize = data.getItemVisual(idx, 'symbolSize');\n        return symbolSize instanceof Array\n            ? symbolSize.slice()\n            : [+symbolSize, +symbolSize];\n    }\n\n    function getScale(symbolSize) {\n        return [symbolSize[0] / 2, symbolSize[1] / 2];\n    }\n\n    /**\n     * @constructor\n     * @alias {module:echarts/chart/helper/Symbol}\n     * @param {module:echarts/data/List} data\n     * @param {number} idx\n     * @extends {module:zrender/graphic/Group}\n     */\n    function Symbol(data, idx, seriesScope) {\n        graphic.Group.call(this);\n\n        this.updateData(data, idx, seriesScope);\n    }\n\n    var symbolProto = Symbol.prototype;\n\n    function driftSymbol(dx, dy) {\n        this.parent.drift(dx, dy);\n    }\n\n    symbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n        // Remove paths created before\n        this.removeAll();\n\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // var symbolPath = symbolUtil.createSymbol(\n        //     symbolType, -0.5, -0.5, 1, 1, color\n        // );\n        // If width/height are set too small (e.g., set to 1) on ios10\n        // and macOS Sierra, a circle stroke become a rect, no matter what\n        // the scale is set. So we set width/height as 2. See #4150.\n        var symbolPath = symbolUtil.createSymbol(\n            symbolType, -1, -1, 2, 2, color\n        );\n\n        symbolPath.attr({\n            z2: 100,\n            culling: true,\n            scale: [0, 0]\n        });\n        // Rewrite drift method\n        symbolPath.drift = driftSymbol;\n\n        graphic.initProps(symbolPath, {\n            scale: getScale(symbolSize)\n        }, seriesModel, idx);\n        this._symbolType = symbolType;\n\n        this.add(symbolPath);\n    };\n\n    /**\n     * Stop animation\n     * @param {boolean} toLastFrame\n     */\n    symbolProto.stopSymbolAnimation = function (toLastFrame) {\n        this.childAt(0).stopAnimation(toLastFrame);\n    };\n\n    /**\n     * Get symbol path element\n     */\n    symbolProto.getSymbolPath = function () {\n        return this.childAt(0);\n    };\n\n    /**\n     * Get scale(aka, current symbol size).\n     * Including the change caused by animation\n     */\n    symbolProto.getScale = function () {\n        return this.childAt(0).scale;\n    };\n\n    /**\n     * Highlight symbol\n     */\n    symbolProto.highlight = function () {\n        this.childAt(0).trigger('emphasis');\n    };\n\n    /**\n     * Downplay symbol\n     */\n    symbolProto.downplay = function () {\n        this.childAt(0).trigger('normal');\n    };\n\n    /**\n     * @param {number} zlevel\n     * @param {number} z\n     */\n    symbolProto.setZ = function (zlevel, z) {\n        var symbolPath = this.childAt(0);\n        symbolPath.zlevel = zlevel;\n        symbolPath.z = z;\n    };\n\n    symbolProto.setDraggable = function (draggable) {\n        var symbolPath = this.childAt(0);\n        symbolPath.draggable = draggable;\n        symbolPath.cursor = draggable ? 'move' : 'pointer';\n    };\n\n    /**\n     * Update symbol properties\n     * @param  {module:echarts/data/List} data\n     * @param  {number} idx\n     */\n    symbolProto.updateData = function (data, idx, seriesScope) {\n        this.silent = false;\n\n        var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n        var seriesModel = data.hostModel;\n        var symbolSize = getSymbolSize(data, idx);\n\n        if (symbolType !== this._symbolType) {\n            this._createSymbol(symbolType, data, idx, symbolSize);\n        }\n        else {\n            var symbolPath = this.childAt(0);\n            symbolPath.silent = false;\n            graphic.updateProps(symbolPath, {\n                scale: getScale(symbolSize)\n            }, seriesModel, idx);\n        }\n        this._updateCommon(data, idx, symbolSize, seriesScope);\n        this._seriesModel = seriesModel;\n    };\n\n    // Update common properties\n    var normalStyleAccessPath = ['itemStyle', 'normal'];\n    var emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n    var normalLabelAccessPath = ['label', 'normal'];\n    var emphasisLabelAccessPath = ['label', 'emphasis'];\n\n    symbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n        var symbolPath = this.childAt(0);\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // Reset style\n        if (symbolPath.type !== 'image') {\n            symbolPath.useStyle({\n                strokeNoScale: true\n            });\n        }\n\n        seriesScope = seriesScope || null;\n\n        var itemStyle = seriesScope && seriesScope.itemStyle;\n        var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n        var symbolRotate = seriesScope && seriesScope.symbolRotate;\n        var symbolOffset = seriesScope && seriesScope.symbolOffset;\n        var labelModel = seriesScope && seriesScope.labelModel;\n        var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n        var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n        var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n        if (!seriesScope || data.hasItemOption) {\n            var itemModel = data.getItemModel(idx);\n\n            // Color must be excluded.\n            // Because symbol provide setColor individually to set fill and stroke\n            itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n            hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n\n            symbolRotate = itemModel.getShallow('symbolRotate');\n            symbolOffset = itemModel.getShallow('symbolOffset');\n\n            labelModel = itemModel.getModel(normalLabelAccessPath);\n            hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n            hoverAnimation = itemModel.getShallow('hoverAnimation');\n            cursorStyle = itemModel.getShallow('cursor');\n        }\n        else {\n            hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n        }\n\n        var elStyle = symbolPath.style;\n\n        symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n        if (symbolOffset) {\n            symbolPath.attr('position', [\n                numberUtil.parsePercent(symbolOffset[0], symbolSize[0]),\n                numberUtil.parsePercent(symbolOffset[1], symbolSize[1])\n            ]);\n        }\n\n        cursorStyle && symbolPath.attr('cursor', cursorStyle);\n\n        // PENDING setColor before setStyle!!!\n        symbolPath.setColor(color);\n\n        symbolPath.setStyle(itemStyle);\n\n        var opacity = data.getItemVisual(idx, 'opacity');\n        if (opacity != null) {\n            elStyle.opacity = opacity;\n        }\n\n        var valueDim = labelHelper.findLabelValueDim(data);\n\n        if (valueDim != null) {\n            graphic.setText(elStyle, labelModel, color);\n            var normalText = seriesModel.getFormattedLabel(idx, 'normal');\n            var value = data.get(valueDim, idx);\n            elStyle.text = labelModel.getShallow('show')\n                ? zrUtil.retrieve2(\n                    normalText,\n                    value\n                )\n                : null;\n\n            graphic.setText(hoverItemStyle, hoverLabelModel, false);\n            hoverItemStyle.text = hoverLabelModel.getShallow('show')\n                ? zrUtil.retrieve3(\n                    seriesModel.getFormattedLabel(idx, 'emphasis'),\n                    normalText,\n                    value\n                )\n                : null;\n        }\n\n        symbolPath.off('mouseover')\n            .off('mouseout')\n            .off('emphasis')\n            .off('normal');\n\n        symbolPath.hoverStyle = hoverItemStyle;\n\n        graphic.setHoverStyle(symbolPath);\n\n        var scale = getScale(symbolSize);\n\n        if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n            var onEmphasis = function() {\n                var ratio = scale[1] / scale[0];\n                this.animateTo({\n                    scale: [\n                        Math.max(scale[0] * 1.1, scale[0] + 3),\n                        Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)\n                    ]\n                }, 400, 'elasticOut');\n            };\n            var onNormal = function() {\n                this.animateTo({\n                    scale: scale\n                }, 400, 'elasticOut');\n            };\n            symbolPath.on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n    };\n\n    symbolProto.fadeOut = function (cb) {\n        var symbolPath = this.childAt(0);\n        // Avoid mistaken hover when fading out\n        this.silent = symbolPath.silent = true;\n        // Not show text when animating\n        symbolPath.style.text = null;\n        graphic.updateProps(symbolPath, {\n            scale: [0, 0]\n        }, this._seriesModel, this.dataIndex, cb);\n    };\n\n    zrUtil.inherits(Symbol, graphic.Group);\n\n    module.exports = Symbol;\n\n\n/***/ }),\n\n/***/ 658:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var axisPointerModelHelper = __webpack_require__(629);\n\n    /**\n     * Base class of AxisView.\n     */\n    var AxisView = __webpack_require__(607).extendComponentView({\n\n        type: 'axis',\n\n        /**\n         * @private\n         */\n        _axisPointer: null,\n\n        /**\n         * @protected\n         * @type {string}\n         */\n        axisPointerClass: null,\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n            // FIXME\n            // This process should proformed after coordinate systems updated\n            // (axis scale updated), and should be performed each time update.\n            // So put it here temporarily, although it is not appropriate to\n            // put a model-writing procedure in `view`.\n            this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n\n            AxisView.superApply(this, 'render', arguments);\n\n            updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n        },\n\n        /**\n         * Action handler.\n         * @public\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/model/Global} ecModel\n         * @param {module:echarts/ExtensionAPI} api\n         * @param {Object} payload\n         */\n        updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n            updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            var axisPointer = this._axisPointer;\n            axisPointer && axisPointer.remove(api);\n            AxisView.superApply(this, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            disposeAxisPointer(this, api);\n            AxisView.superApply(this, 'dispose', arguments);\n        }\n\n    });\n\n    function updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n        var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n        if (!Clazz) {\n            return;\n        }\n        var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n        axisPointerModel\n            ? (axisView._axisPointer || (axisView._axisPointer = new Clazz()))\n                .render(axisModel, axisPointerModel, api, forceRender)\n            : disposeAxisPointer(axisView, api);\n    }\n\n    function disposeAxisPointer(axisView, ecModel, api) {\n        var axisPointer = axisView._axisPointer;\n        axisPointer && axisPointer.dispose(ecModel, api);\n        axisView._axisPointer = null;\n    }\n\n    var axisPointerClazz = [];\n\n    AxisView.registerAxisPointerClass = function (type, clazz) {\n        if (__DEV__) {\n            if (axisPointerClazz[type]) {\n                throw new Error('axisPointer ' + type + ' exists');\n            }\n        }\n        axisPointerClazz[type] = clazz;\n    };\n\n    AxisView.getAxisPointerClass = function (type) {\n        return type && axisPointerClazz[type];\n    };\n\n    module.exports = AxisView;\n\n\n/***/ }),\n\n/***/ 659:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(606);\n\n    var helper = {};\n\n    /**\n     * @param {Object} opt {labelInside}\n     * @return {Object} {\n     *  position, rotation, labelDirection, labelOffset,\n     *  tickDirection, labelRotate, labelInterval, z2\n     * }\n     */\n    helper.layout = function (gridModel, axisModel, opt) {\n        opt = opt || {};\n        var grid = gridModel.coordinateSystem;\n        var axis = axisModel.axis;\n        var layout = {};\n\n        var rawAxisPosition = axis.position;\n        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n        var axisDim = axis.dim;\n\n        var rect = grid.getRect();\n        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n        var idx = {left: 0, right: 1, top: 0, bottom: 1, onZero: 2};\n        var axisOffset = axisModel.get('offset') || 0;\n\n        var posBound = axisDim === 'x'\n            ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset]\n            : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n        if (axis.onZero) {\n            var otherAxis = grid.getAxis(axisDim === 'x' ? 'y' : 'x', axis.onZeroAxisIndex);\n            var onZeroCoord = otherAxis.toGlobalCoord(otherAxis.dataToCoord(0));\n            posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n        }\n\n        // Axis position\n        layout.position = [\n            axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0],\n            axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]\n        ];\n\n        // Axis rotation\n        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\n\n        // Tick and label direction, x y is axisDim\n        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\n\n        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n        layout.labelOffset = axis.onZero ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n        if (axisModel.get('axisTick.inside')) {\n            layout.tickDirection = -layout.tickDirection;\n        }\n        if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n            layout.labelDirection = -layout.labelDirection;\n        }\n\n        // Special label rotation\n        var labelRotate = axisModel.get('axisLabel.rotate');\n        layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate;\n\n        // label interval when auto mode.\n        layout.labelInterval = axis.getLabelInterval();\n\n        // Over splitLine and splitArea\n        layout.z2 = 1;\n\n        return layout;\n    };\n\n    module.exports = helper;\n\n\n\n/***/ }),\n\n/***/ 660:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var modelUtil = __webpack_require__(609);\n\n    /**\n     * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n     * @param {module:echarts/model/Global} ecModel\n     * @return {Object} {point: [x, y], el: ...} point Will not be null.\n     */\n    module.exports = function (finder, ecModel) {\n        var point = [];\n        var seriesIndex = finder.seriesIndex;\n        var seriesModel;\n        if (seriesIndex == null || !(\n            seriesModel = ecModel.getSeriesByIndex(seriesIndex)\n        )) {\n            return {point: []};\n        }\n\n        var data = seriesModel.getData();\n        var dataIndex = modelUtil.queryDataIndex(data, finder);\n        if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n            return {point: []};\n        }\n\n        var el = data.getItemGraphicEl(dataIndex);\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (seriesModel.getTooltipPosition) {\n            point = seriesModel.getTooltipPosition(dataIndex) || [];\n        }\n        else if (coordSys && coordSys.dataToPoint) {\n            point = coordSys.dataToPoint(\n                data.getValues(\n                    zrUtil.map(coordSys.dimensions, function (dim) {\n                        return seriesModel.coordDimToDataDim(dim)[0];\n                    }), dataIndex, true\n                )\n            ) || [];\n        }\n        else if (el) {\n            // Use graphic bounding rect\n            var rect = el.getBoundingRect().clone();\n            rect.applyTransform(el.transform);\n            point = [\n                rect.x + rect.width / 2,\n                rect.y + rect.height / 2\n            ];\n        }\n\n        return {point: point, el: el};\n    };\n\n\n\n\n/***/ }),\n\n/***/ 661:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var env = __webpack_require__(615);\n    var zrUtil = __webpack_require__(606);\n    var get = __webpack_require__(609).makeGetter();\n\n    var each = zrUtil.each;\n\n    var globalListener = {};\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Function} handler\n     *      param: {string} currTrigger\n     *      param: {Array.<number>} point\n     */\n    globalListener.register = function (key, api, handler) {\n        if (env.node) {\n            return;\n        }\n\n        var zr = api.getZr();\n        get(zr).records || (get(zr).records = {});\n\n        initGlobalListeners(zr, api);\n\n        var record = get(zr).records[key] || (get(zr).records[key] = {});\n        record.handler = handler;\n    };\n\n    function initGlobalListeners(zr, api) {\n        if (get(zr).initialized) {\n            return;\n        }\n\n        get(zr).initialized = true;\n\n        useHandler('click', zrUtil.curry(doEnter, 'click'));\n        useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove'));\n        // useHandler('mouseout', onLeave);\n        useHandler('globalout', onLeave);\n\n        function useHandler(eventType, cb) {\n            zr.on(eventType, function (e) {\n                var dis = makeDispatchAction(api);\n\n                each(get(zr).records, function (record) {\n                    record && cb(record, e, dis.dispatchAction);\n                });\n\n                dispatchTooltipFinally(dis.pendings, api);\n            });\n        }\n    }\n\n    function dispatchTooltipFinally(pendings, api) {\n        var showLen = pendings.showTip.length;\n        var hideLen = pendings.hideTip.length;\n\n        var actuallyPayload;\n        if (showLen) {\n            actuallyPayload = pendings.showTip[showLen - 1];\n        }\n        else if (hideLen) {\n            actuallyPayload = pendings.hideTip[hideLen - 1];\n        }\n        if (actuallyPayload) {\n            actuallyPayload.dispatchAction = null;\n            api.dispatchAction(actuallyPayload);\n        }\n    }\n\n    function onLeave(record, e, dispatchAction) {\n        record.handler('leave', null, dispatchAction);\n    }\n\n    function doEnter(currTrigger, record, e, dispatchAction) {\n        record.handler(currTrigger, e, dispatchAction);\n    }\n\n    function makeDispatchAction(api) {\n        var pendings = {\n            showTip: [],\n            hideTip: []\n        };\n        // FIXME\n        // better approach?\n        // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n        // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n        // So we have to add \"final stage\" to merge those dispatched actions.\n        var dispatchAction = function (payload) {\n            var pendingList = pendings[payload.type];\n            if (pendingList) {\n                pendingList.push(payload);\n            }\n            else {\n                payload.dispatchAction = dispatchAction;\n                api.dispatchAction(payload);\n            }\n        };\n\n        return {\n            dispatchAction: dispatchAction,\n            pendings: pendings\n        };\n    }\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    globalListener.unregister = function (key, api) {\n        if (env.node) {\n            return;\n        }\n        var zr = api.getZr();\n        var record = (get(zr).records || {})[key];\n        if (record) {\n            get(zr).records[key] = null;\n        }\n    };\n\n    module.exports = globalListener;\n\n\n/***/ }),\n\n/***/ 662:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var graphic = __webpack_require__(608);\n    var textContain = __webpack_require__(621);\n    var formatUtil = __webpack_require__(613);\n    var matrix = __webpack_require__(623);\n    var axisHelper = __webpack_require__(620);\n    var AxisBuilder = __webpack_require__(649);\n\n    var helper = {};\n\n    /**\n     * @param {module:echarts/model/Model} axisPointerModel\n     */\n    helper.buildElStyle = function (axisPointerModel) {\n        var axisPointerType = axisPointerModel.get('type');\n        var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n        var style;\n        if (axisPointerType === 'line') {\n            style = styleModel.getLineStyle();\n            style.fill = null;\n        }\n        else if (axisPointerType === 'shadow') {\n            style = styleModel.getAreaStyle();\n            style.stroke = null;\n        }\n        return style;\n    };\n\n    /**\n     * @param {Function} labelPos {align, verticalAlign, position}\n     */\n    helper.buildLabelElOption = function (\n        elOption, axisModel, axisPointerModel, api, labelPos\n    ) {\n        var value = axisPointerModel.get('value');\n        var text = helper.getValueLabel(\n            value, axisModel.axis, axisModel.ecModel,\n            axisPointerModel.get('seriesDataIndices'),\n            {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            }\n        );\n        var labelModel = axisPointerModel.getModel('label');\n        var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n\n        var font = labelModel.getFont();\n        var textRect = textContain.getBoundingRect(text, font);\n\n        var position = labelPos.position;\n        var width = textRect.width + paddings[1] + paddings[3];\n        var height = textRect.height + paddings[0] + paddings[2];\n\n        // Adjust by align.\n        var align = labelPos.align;\n        align === 'right' && (position[0] -= width);\n        align === 'center' && (position[0] -= width / 2);\n        var verticalAlign = labelPos.verticalAlign;\n        verticalAlign === 'bottom' && (position[1] -= height);\n        verticalAlign === 'middle' && (position[1] -= height / 2);\n\n        // Not overflow ec container\n        confineInContainer(position, width, height, api);\n\n        var bgColor = labelModel.get('backgroundColor');\n        if (!bgColor || bgColor === 'auto') {\n            bgColor = axisModel.get('axisLine.lineStyle.color');\n        }\n\n        elOption.label = {\n            shape: {x: 0, y: 0, width: width, height: height, r: labelModel.get('borderRadius')},\n            position: position.slice(),\n            // TODO: rich\n            style: {\n                text: text,\n                textFont: font,\n                textFill: labelModel.getTextColor(),\n                textPosition: 'inside',\n                fill: bgColor,\n                stroke: labelModel.get('borderColor') || 'transparent',\n                lineWidth: labelModel.get('borderWidth') || 0,\n                shadowBlur: labelModel.get('shadowBlur'),\n                shadowColor: labelModel.get('shadowColor'),\n                shadowOffsetX: labelModel.get('shadowOffsetX'),\n                shadowOffsetY: labelModel.get('shadowOffsetY')\n            },\n            // Lable should be over axisPointer.\n            z2: 10\n        };\n    };\n\n    // Do not overflow ec container\n    function confineInContainer(position, width, height, api) {\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n        position[0] = Math.min(position[0] + width, viewWidth) - width;\n        position[1] = Math.min(position[1] + height, viewHeight) - height;\n        position[0] = Math.max(position[0], 0);\n        position[1] = Math.max(position[1], 0);\n    }\n\n    /**\n     * @param {number} value\n     * @param {module:echarts/coord/Axis} axis\n     * @param {module:echarts/model/Global} ecModel\n     * @param {Object} opt\n     * @param {Array.<Object>} seriesDataIndices\n     * @param {number|string} opt.precision 'auto' or a number\n     * @param {string|Function} opt.formatter label formatter\n     */\n    helper.getValueLabel = function (value, axis, ecModel, seriesDataIndices, opt) {\n        var text = axis.scale.getLabel(\n            // If `precision` is set, width can be fixed (like '12.00500'), which\n            // helps to debounce when when moving label.\n            value, {precision: opt.precision}\n        );\n        var formatter = opt.formatter;\n\n        if (formatter) {\n            var params = {\n                value: axisHelper.getAxisRawValue(axis, value),\n                seriesData: []\n            };\n            zrUtil.each(seriesDataIndices, function (idxItem) {\n                var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                var dataIndex = idxItem.dataIndexInside;\n                var dataParams = series && series.getDataParams(dataIndex);\n                dataParams && params.seriesData.push(dataParams);\n            });\n\n            if (zrUtil.isString(formatter)) {\n                text = formatter.replace('{value}', text);\n            }\n            else if (zrUtil.isFunction(formatter)) {\n                text = formatter(params);\n            }\n        }\n\n        return text;\n    };\n\n    /**\n     * @param {module:echarts/coord/Axis} axis\n     * @param {number} value\n     * @param {Object} layoutInfo {\n     *  rotation, position, labelOffset, labelDirection, labelMargin\n     * }\n     */\n    helper.getTransformedPosition = function (axis, value, layoutInfo) {\n        var transform = matrix.create();\n        matrix.rotate(transform, transform, layoutInfo.rotation);\n        matrix.translate(transform, transform, layoutInfo.position);\n\n        return graphic.applyTransform([\n            axis.dataToCoord(value),\n            (layoutInfo.labelOffset || 0)\n                + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)\n        ], transform);\n    };\n\n    helper.buildCartesianSingleLabelElOption = function (\n        value, elOption, layoutInfo, axisModel, axisPointerModel, api\n    ) {\n        var textLayout = AxisBuilder.innerTextLayout(\n            layoutInfo.rotation, 0, layoutInfo.labelDirection\n        );\n        layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n        helper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n            position: helper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n            align: textLayout.textAlign,\n            verticalAlign: textLayout.textVerticalAlign\n        });\n    };\n\n    /**\n     * @param {Array.<number>} p1\n     * @param {Array.<number>} p2\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeLineShape = function (p1, p2, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x1: p1[xDimIndex],\n            y1: p1[1 - xDimIndex],\n            x2: p2[xDimIndex],\n            y2: p2[1 - xDimIndex]\n        };\n    };\n\n    /**\n     * @param {Array.<number>} xy\n     * @param {Array.<number>} wh\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeRectShape = function (xy, wh, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x: xy[xDimIndex],\n            y: xy[1 - xDimIndex],\n            width: wh[xDimIndex],\n            height: wh[1 - xDimIndex]\n        };\n    };\n\n    helper.makeSectorShape = function (cx, cy, r0, r, startAngle, endAngle) {\n        return {\n            cx: cx,\n            cy: cy,\n            r0: r0,\n            r: r,\n            startAngle: startAngle,\n            endAngle: endAngle,\n            clockwise: true\n        };\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n\n/***/ 663:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var ComponentModel = __webpack_require__(618);\n    var zrUtil = __webpack_require__(606);\n    var axisModelCreator = __webpack_require__(734);\n\n    var AxisModel = ComponentModel.extend({\n\n        type: 'cartesian2dAxis',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Axis2D}\n         */\n        axis: null,\n\n        /**\n         * @override\n         */\n        init: function () {\n            AxisModel.superApply(this, 'init', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function () {\n            AxisModel.superApply(this, 'mergeOption', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        restoreData: function () {\n            AxisModel.superApply(this, 'restoreData', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         * @return {module:echarts/model/Component}\n         */\n        getCoordSysModel: function () {\n            return this.ecModel.queryComponents({\n                mainType: 'grid',\n                index: this.option.gridIndex,\n                id: this.option.gridId\n            })[0];\n        }\n\n    });\n\n    function getAxisType(axisDim, option) {\n        // Default axis with data is category axis\n        return option.type || (option.data ? 'category' : 'value');\n    }\n\n    zrUtil.merge(AxisModel.prototype, __webpack_require__(651));\n\n    var extraOption = {\n        // gridIndex: 0,\n        // gridId: '',\n\n        // Offset is for multiple axis on the same position\n        offset: 0\n    };\n\n    axisModelCreator('x', AxisModel, getAxisType, extraOption);\n    axisModelCreator('y', AxisModel, getAxisType, extraOption);\n\n    module.exports = AxisModel;\n\n\n/***/ }),\n\n/***/ 664:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var classUtil = __webpack_require__(616);\n    var set = classUtil.set;\n    var get = classUtil.get;\n\n    module.exports = {\n        clearColorPalette: function () {\n            set(this, 'colorIdx', 0);\n            set(this, 'colorNameMap', {});\n        },\n\n        getColorFromPalette: function (name, scope) {\n            scope = scope || this;\n            var colorIdx = get(scope, 'colorIdx') || 0;\n            var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {});\n            // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n            if (colorNameMap.hasOwnProperty(name)) {\n                return colorNameMap[name];\n            }\n            var colorPalette = this.get('color', true) || [];\n            if (!colorPalette.length) {\n                return;\n            }\n\n            var color = colorPalette[colorIdx];\n            if (name) {\n                colorNameMap[name] = color;\n            }\n            set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n\n            return color;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 665:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * For testable.\n */\n\n\n    var numberUtil = __webpack_require__(610);\n\n    var roundNumber = numberUtil.round;\n\n    var helper = {};\n\n    /**\n     * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n     *                                Should be extent[0] < extent[1].\n     * @param {number} splitNumber splitNumber should be >= 1.\n     * @param {number} [minInterval]\n     * @param {number} [maxInterval]\n     * @return {Object} {interval, intervalPrecision, niceTickExtent}\n     */\n    helper.intervalScaleNiceTicks = function (extent, splitNumber, minInterval, maxInterval) {\n        var result = {};\n        var span = extent[1] - extent[0];\n\n        var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n        if (minInterval != null && interval < minInterval) {\n            interval = result.interval = minInterval;\n        }\n        if (maxInterval != null && interval > maxInterval) {\n            interval = result.interval = maxInterval;\n        }\n        // Tow more digital for tick.\n        var precision = result.intervalPrecision = helper.getIntervalPrecision(interval);\n        // Niced extent inside original extent\n        var niceTickExtent = result.niceTickExtent = [\n            roundNumber(Math.ceil(extent[0] / interval) * interval, precision),\n            roundNumber(Math.floor(extent[1] / interval) * interval, precision)\n        ];\n\n        helper.fixExtent(niceTickExtent, extent);\n\n        return result;\n    };\n\n    /**\n     * @param {number} interval\n     * @return {number} interval precision\n     */\n    helper.getIntervalPrecision = function (interval) {\n        // Tow more digital for tick.\n        return numberUtil.getPrecisionSafe(interval) + 2;\n    };\n\n    function clamp(niceTickExtent, idx, extent) {\n        niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n    }\n\n    // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n    helper.fixExtent = function (niceTickExtent, extent) {\n        !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n        !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n        clamp(niceTickExtent, 0, extent);\n        clamp(niceTickExtent, 1, extent);\n        if (niceTickExtent[0] > niceTickExtent[1]) {\n            niceTickExtent[0] = niceTickExtent[1];\n        }\n    };\n\n    helper.intervalScaleGetTicks = function (interval, extent, niceTickExtent, intervalPrecision) {\n        var ticks = [];\n\n        // If interval is 0, return [];\n        if (!interval) {\n            return ticks;\n        }\n\n        // Consider this case: using dataZoom toolbox, zoom and zoom.\n        var safeLimit = 10000;\n\n        if (extent[0] < niceTickExtent[0]) {\n            ticks.push(extent[0]);\n        }\n        var tick = niceTickExtent[0];\n\n        while (tick <= niceTickExtent[1]) {\n            ticks.push(tick);\n            // Avoid rounding error\n            tick = roundNumber(tick + interval, intervalPrecision);\n            if (tick === ticks[ticks.length - 1]) {\n                // Consider out of safe float point, e.g.,\n                // -3711126.9907707 + 2e-10 === -3711126.9907707\n                break;\n            }\n            if (ticks.length > safeLimit) {\n                return [];\n            }\n        }\n        // Consider this case: the last item of ticks is smaller\n        // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n        if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n            ticks.push(extent[1]);\n        }\n\n        return ticks;\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n\n/***/ 666:\n/***/ (function(module, exports) {\n\n\n\n    var lib = {};\n\n    var ORIGIN_METHOD = '\\0__throttleOriginMethod';\n    var RATE = '\\0__throttleRate';\n    var THROTTLE_TYPE = '\\0__throttleType';\n\n    /**\n     * @public\n     * @param {(Function)} fn\n     * @param {number} [delay=0] Unit: ms.\n     * @param {boolean} [debounce=false]\n     *        true: If call interval less than `delay`, only the last call works.\n     *        false: If call interval less than `delay, call works on fixed rate.\n     * @return {(Function)} throttled fn.\n     */\n    lib.throttle = function (fn, delay, debounce) {\n\n        var currCall;\n        var lastCall = 0;\n        var lastExec = 0;\n        var timer = null;\n        var diff;\n        var scope;\n        var args;\n        var debounceNextCall;\n\n        delay = delay || 0;\n\n        function exec() {\n            lastExec = (new Date()).getTime();\n            timer = null;\n            fn.apply(scope, args || []);\n        }\n\n        var cb = function () {\n            currCall = (new Date()).getTime();\n            scope = this;\n            args = arguments;\n            var thisDelay = debounceNextCall || delay;\n            var thisDebounce = debounceNextCall || debounce;\n            debounceNextCall = null;\n            diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n\n            clearTimeout(timer);\n\n            if (thisDebounce) {\n                timer = setTimeout(exec, thisDelay);\n            }\n            else {\n                if (diff >= 0) {\n                    exec();\n                }\n                else {\n                    timer = setTimeout(exec, -diff);\n                }\n            }\n\n            lastCall = currCall;\n        };\n\n        /**\n         * Clear throttle.\n         * @public\n         */\n        cb.clear = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n\n        /**\n         * Enable debounce once.\n         */\n        cb.debounceNextCall = function (debounceDelay) {\n            debounceNextCall = debounceDelay;\n        };\n\n        return cb;\n    };\n\n    /**\n     * Create throttle method or update throttle rate.\n     *\n     * @example\n     * ComponentView.prototype.render = function () {\n     *     ...\n     *     throttle.createOrUpdate(\n     *         this,\n     *         '_dispatchAction',\n     *         this.model.get('throttle'),\n     *         'fixRate'\n     *     );\n     * };\n     * ComponentView.prototype.remove = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     * ComponentView.prototype.dispose = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     * @param {number} [rate]\n     * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n     * @return {Function} throttled function.\n     */\n    lib.createOrUpdate = function (obj, fnAttr, rate, throttleType) {\n        var fn = obj[fnAttr];\n\n        if (!fn) {\n            return;\n        }\n\n        var originFn = fn[ORIGIN_METHOD] || fn;\n        var lastThrottleType = fn[THROTTLE_TYPE];\n        var lastRate = fn[RATE];\n\n        if (lastRate !== rate || lastThrottleType !== throttleType) {\n            if (rate == null || !throttleType) {\n                return (obj[fnAttr] = originFn);\n            }\n\n            fn = obj[fnAttr] = lib.throttle(\n                originFn, rate, throttleType === 'debounce'\n            );\n            fn[ORIGIN_METHOD] = originFn;\n            fn[THROTTLE_TYPE] = throttleType;\n            fn[RATE] = rate;\n        }\n\n        return fn;\n    };\n\n    /**\n     * Clear throttle. Example see throttle.createOrUpdate.\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     */\n    lib.clear = function (obj, fnAttr) {\n        var fn = obj[fnAttr];\n        if (fn && fn[ORIGIN_METHOD]) {\n            obj[fnAttr] = fn[ORIGIN_METHOD];\n        }\n    };\n\n    module.exports = lib;\n\n\n\n/***/ }),\n\n/***/ 667:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module zrender/Element\n */\n\n\n    var guid = __webpack_require__(672);\n    var Eventful = __webpack_require__(626);\n    var Transformable = __webpack_require__(680);\n    var Animatable = __webpack_require__(798);\n    var zrUtil = __webpack_require__(606);\n\n    /**\n     * @alias module:zrender/Element\n     * @constructor\n     * @extends {module:zrender/mixin/Animatable}\n     * @extends {module:zrender/mixin/Transformable}\n     * @extends {module:zrender/mixin/Eventful}\n     */\n    var Element = function (opts) {\n\n        Transformable.call(this, opts);\n        Eventful.call(this, opts);\n        Animatable.call(this, opts);\n\n        /**\n         * 画布元素ID\n         * @type {string}\n         */\n        this.id = opts.id || guid();\n    };\n\n    Element.prototype = {\n\n        /**\n         * 元素类型\n         * Element type\n         * @type {string}\n         */\n        type: 'element',\n\n        /**\n         * 元素名字\n         * Element name\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n         * ZRender instance will be assigned when element is associated with zrender\n         * @name module:/zrender/Element#__zr\n         * @type {module:zrender/ZRender}\n         */\n        __zr: null,\n\n        /**\n         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n         * If ignore drawing and events of the element object\n         * @name module:/zrender/Element#ignore\n         * @type {boolean}\n         * @default false\n         */\n        ignore: false,\n\n        /**\n         * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n         * 该路径会继承被裁减对象的变换\n         * @type {module:zrender/graphic/Path}\n         * @see http://www.w3.org/TR/2dcontext/#clipping-region\n         * @readOnly\n         */\n        clipPath: null,\n\n        /**\n         * Drift element\n         * @param  {number} dx dx on the global space\n         * @param  {number} dy dy on the global space\n         */\n        drift: function (dx, dy) {\n            switch (this.draggable) {\n                case 'horizontal':\n                    dy = 0;\n                    break;\n                case 'vertical':\n                    dx = 0;\n                    break;\n            }\n\n            var m = this.transform;\n            if (!m) {\n                m = this.transform = [1, 0, 0, 1, 0, 0];\n            }\n            m[4] += dx;\n            m[5] += dy;\n\n            this.decomposeTransform();\n            this.dirty(false);\n        },\n\n        /**\n         * Hook before update\n         */\n        beforeUpdate: function () {},\n        /**\n         * Hook after update\n         */\n        afterUpdate: function () {},\n        /**\n         * Update each frame\n         */\n        update: function () {\n            this.updateTransform();\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {},\n\n        /**\n         * @protected\n         */\n        attrKV: function (key, value) {\n            if (key === 'position' || key === 'scale' || key === 'origin') {\n                // Copy the array\n                if (value) {\n                    var target = this[key];\n                    if (!target) {\n                        target = this[key] = [];\n                    }\n                    target[0] = value[0];\n                    target[1] = value[1];\n                }\n            }\n            else {\n                this[key] = value;\n            }\n        },\n\n        /**\n         * Hide the element\n         */\n        hide: function () {\n            this.ignore = true;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * Show the element\n         */\n        show: function () {\n            this.ignore = false;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * @param {string|Object} key\n         * @param {*} value\n         */\n        attr: function (key, value) {\n            if (typeof key === 'string') {\n                this.attrKV(key, value);\n            }\n            else if (zrUtil.isObject(key)) {\n                for (var name in key) {\n                    if (key.hasOwnProperty(name)) {\n                        this.attrKV(name, key[name]);\n                    }\n                }\n            }\n\n            this.dirty(false);\n\n            return this;\n        },\n\n        /**\n         * @param {module:zrender/graphic/Path} clipPath\n         */\n        setClipPath: function (clipPath) {\n            var zr = this.__zr;\n            if (zr) {\n                clipPath.addSelfToZr(zr);\n            }\n\n            // Remove previous clip path\n            if (this.clipPath && this.clipPath !== clipPath) {\n                this.removeClipPath();\n            }\n\n            this.clipPath = clipPath;\n            clipPath.__zr = zr;\n            clipPath.__clipTarget = this;\n\n            this.dirty(false);\n        },\n\n        /**\n         */\n        removeClipPath: function () {\n            var clipPath = this.clipPath;\n            if (clipPath) {\n                if (clipPath.__zr) {\n                    clipPath.removeSelfFromZr(clipPath.__zr);\n                }\n\n                clipPath.__zr = null;\n                clipPath.__clipTarget = null;\n                this.clipPath = null;\n\n                this.dirty(false);\n            }\n        },\n\n        /**\n         * Add self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        addSelfToZr: function (zr) {\n            this.__zr = zr;\n            // 添加动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.addAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.addSelfToZr(zr);\n            }\n        },\n\n        /**\n         * Remove self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        removeSelfFromZr: function (zr) {\n            this.__zr = null;\n            // 移除动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.removeAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.removeSelfFromZr(zr);\n            }\n        }\n    };\n\n    zrUtil.mixin(Element, Animatable);\n    zrUtil.mixin(Element, Transformable);\n    zrUtil.mixin(Element, Eventful);\n\n    module.exports = Element;\n\n\n/***/ }),\n\n/***/ 668:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/animation/Animator\n */\n\n\n    var Clip = __webpack_require__(771);\n    var color = __webpack_require__(627);\n    var util = __webpack_require__(606);\n    var isArrayLike = util.isArrayLike;\n\n    var arraySlice = Array.prototype.slice;\n\n    function defaultGetter(target, key) {\n        return target[key];\n    }\n\n    function defaultSetter(target, key, value) {\n        target[key] = value;\n    }\n\n    /**\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} percent\n     * @return {number}\n     */\n    function interpolateNumber(p0, p1, percent) {\n        return (p1 - p0) * percent + p0;\n    }\n\n    /**\n     * @param  {string} p0\n     * @param  {string} p1\n     * @param  {number} percent\n     * @return {string}\n     */\n    function interpolateString(p0, p1, percent) {\n        return percent > 0.5 ? p1 : p0;\n    }\n\n    /**\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {number} percent\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function interpolateArray(p0, p1, percent, out, arrDim) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = interpolateNumber(p0[i], p1[i], percent);\n            }\n        }\n        else {\n            var len2 = len && p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = interpolateNumber(\n                        p0[i][j], p1[i][j], percent\n                    );\n                }\n            }\n        }\n    }\n\n    // arr0 is source array, arr1 is target array.\n    // Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n    function fillArr(arr0, arr1, arrDim) {\n        var arr0Len = arr0.length;\n        var arr1Len = arr1.length;\n        if (arr0Len !== arr1Len) {\n            // FIXME Not work for TypedArray\n            var isPreviousLarger = arr0Len > arr1Len;\n            if (isPreviousLarger) {\n                // Cut the previous\n                arr0.length = arr1Len;\n            }\n            else {\n                // Fill the previous\n                for (var i = arr0Len; i < arr1Len; i++) {\n                    arr0.push(\n                        arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i])\n                    );\n                }\n            }\n        }\n        // Handling NaN value\n        var len2 = arr0[0] && arr0[0].length;\n        for (var i = 0; i < arr0.length; i++) {\n            if (arrDim === 1) {\n                if (isNaN(arr0[i])) {\n                    arr0[i] = arr1[i];\n                }\n            }\n            else {\n                for (var j = 0; j < len2; j++) {\n                    if (isNaN(arr0[i][j])) {\n                        arr0[i][j] = arr1[i][j];\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @param  {Array} arr0\n     * @param  {Array} arr1\n     * @param  {number} arrDim\n     * @return {boolean}\n     */\n    function isArraySame(arr0, arr1, arrDim) {\n        if (arr0 === arr1) {\n            return true;\n        }\n        var len = arr0.length;\n        if (len !== arr1.length) {\n            return false;\n        }\n        if (arrDim === 1) {\n            for (var i = 0; i < len; i++) {\n                if (arr0[i] !== arr1[i]) {\n                    return false;\n                }\n            }\n        }\n        else {\n            var len2 = arr0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    if (arr0[i][j] !== arr1[i][j]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Catmull Rom interpolate array\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {Array} p2\n     * @param  {Array} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function catmullRomInterpolateArray(\n        p0, p1, p2, p3, t, t2, t3, out, arrDim\n    ) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = catmullRomInterpolate(\n                    p0[i], p1[i], p2[i], p3[i], t, t2, t3\n                );\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = catmullRomInterpolate(\n                        p0[i][j], p1[i][j], p2[i][j], p3[i][j],\n                        t, t2, t3\n                    );\n                }\n            }\n        }\n    }\n\n    /**\n     * Catmull Rom interpolate number\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @return {number}\n     */\n    function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    function cloneValue(value) {\n        if (isArrayLike(value)) {\n            var len = value.length;\n            if (isArrayLike(value[0])) {\n                var ret = [];\n                for (var i = 0; i < len; i++) {\n                    ret.push(arraySlice.call(value[i]));\n                }\n                return ret;\n            }\n\n            return arraySlice.call(value);\n        }\n\n        return value;\n    }\n\n    function rgba2String(rgba) {\n        rgba[0] = Math.floor(rgba[0]);\n        rgba[1] = Math.floor(rgba[1]);\n        rgba[2] = Math.floor(rgba[2]);\n\n        return 'rgba(' + rgba.join(',') + ')';\n    }\n\n    function getArrayDim(keyframes) {\n        var lastValue = keyframes[keyframes.length - 1].value;\n        return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n    }\n\n    function createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n        var getter = animator._getter;\n        var setter = animator._setter;\n        var useSpline = easing === 'spline';\n\n        var trackLen = keyframes.length;\n        if (!trackLen) {\n            return;\n        }\n        // Guess data type\n        var firstVal = keyframes[0].value;\n        var isValueArray = isArrayLike(firstVal);\n        var isValueColor = false;\n        var isValueString = false;\n\n        // For vertices morphing\n        var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n\n        var trackMaxTime;\n        // Sort keyframe as ascending\n        keyframes.sort(function(a, b) {\n            return a.time - b.time;\n        });\n\n        trackMaxTime = keyframes[trackLen - 1].time;\n        // Percents of each keyframe\n        var kfPercents = [];\n        // Value of each keyframe\n        var kfValues = [];\n        var prevValue = keyframes[0].value;\n        var isAllValueEqual = true;\n        for (var i = 0; i < trackLen; i++) {\n            kfPercents.push(keyframes[i].time / trackMaxTime);\n            // Assume value is a color when it is a string\n            var value = keyframes[i].value;\n\n            // Check if value is equal, deep check if value is array\n            if (!((isValueArray && isArraySame(value, prevValue, arrDim))\n                || (!isValueArray && value === prevValue))) {\n                isAllValueEqual = false;\n            }\n            prevValue = value;\n\n            // Try converting a string to a color array\n            if (typeof value == 'string') {\n                var colorArray = color.parse(value);\n                if (colorArray) {\n                    value = colorArray;\n                    isValueColor = true;\n                }\n                else {\n                    isValueString = true;\n                }\n            }\n            kfValues.push(value);\n        }\n        if (!forceAnimate && isAllValueEqual) {\n            return;\n        }\n\n        var lastValue = kfValues[trackLen - 1];\n        // Polyfill array and NaN value\n        for (var i = 0; i < trackLen - 1; i++) {\n            if (isValueArray) {\n                fillArr(kfValues[i], lastValue, arrDim);\n            }\n            else {\n                if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n                    kfValues[i] = lastValue;\n                }\n            }\n        }\n        isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim);\n\n        // Cache the key of last frame to speed up when\n        // animation playback is sequency\n        var lastFrame = 0;\n        var lastFramePercent = 0;\n        var start;\n        var w;\n        var p0;\n        var p1;\n        var p2;\n        var p3;\n\n        if (isValueColor) {\n            var rgba = [0, 0, 0, 0];\n        }\n\n        var onframe = function (target, percent) {\n            // Find the range keyframes\n            // kf1-----kf2---------current--------kf3\n            // find kf2 and kf3 and do interpolation\n            var frame;\n            // In the easing function like elasticOut, percent may less than 0\n            if (percent < 0) {\n                frame = 0;\n            }\n            else if (percent < lastFramePercent) {\n                // Start from next key\n                // PENDING start from lastFrame ?\n                start = Math.min(lastFrame + 1, trackLen - 1);\n                for (frame = start; frame >= 0; frame--) {\n                    if (kfPercents[frame] <= percent) {\n                        break;\n                    }\n                }\n                // PENDING really need to do this ?\n                frame = Math.min(frame, trackLen - 2);\n            }\n            else {\n                for (frame = lastFrame; frame < trackLen; frame++) {\n                    if (kfPercents[frame] > percent) {\n                        break;\n                    }\n                }\n                frame = Math.min(frame - 1, trackLen - 2);\n            }\n            lastFrame = frame;\n            lastFramePercent = percent;\n\n            var range = (kfPercents[frame + 1] - kfPercents[frame]);\n            if (range === 0) {\n                return;\n            }\n            else {\n                w = (percent - kfPercents[frame]) / range;\n            }\n            if (useSpline) {\n                p1 = kfValues[frame];\n                p0 = kfValues[frame === 0 ? frame : frame - 1];\n                p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n                p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n                if (isValueArray) {\n                    catmullRomInterpolateArray(\n                        p0, p1, p2, p3, w, w * w, w * w * w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        value = catmullRomInterpolateArray(\n                            p0, p1, p2, p3, w, w * w, w * w * w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(p1, p2, w);\n                    }\n                    else {\n                        value = catmullRomInterpolate(\n                            p0, p1, p2, p3, w, w * w, w * w * w\n                        );\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n            else {\n                if (isValueArray) {\n                    interpolateArray(\n                        kfValues[frame], kfValues[frame + 1], w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        interpolateArray(\n                            kfValues[frame], kfValues[frame + 1], w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    else {\n                        value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n        };\n\n        var clip = new Clip({\n            target: animator._target,\n            life: trackMaxTime,\n            loop: animator._loop,\n            delay: animator._delay,\n            onframe: onframe,\n            ondestroy: oneTrackDone\n        });\n\n        if (easing && easing !== 'spline') {\n            clip.easing = easing;\n        }\n\n        return clip;\n    }\n\n    /**\n     * @alias module:zrender/animation/Animator\n     * @constructor\n     * @param {Object} target\n     * @param {boolean} loop\n     * @param {Function} getter\n     * @param {Function} setter\n     */\n    var Animator = function(target, loop, getter, setter) {\n        this._tracks = {};\n        this._target = target;\n\n        this._loop = loop || false;\n\n        this._getter = getter || defaultGetter;\n        this._setter = setter || defaultSetter;\n\n        this._clipCount = 0;\n\n        this._delay = 0;\n\n        this._doneList = [];\n\n        this._onframeList = [];\n\n        this._clipList = [];\n    };\n\n    Animator.prototype = {\n        /**\n         * 设置动画关键帧\n         * @param  {number} time 关键帧时间，单位是ms\n         * @param  {Object} props 关键帧的属性值，key-value表示\n         * @return {module:zrender/animation/Animator}\n         */\n        when: function(time /* ms */, props) {\n            var tracks = this._tracks;\n            for (var propName in props) {\n                if (!props.hasOwnProperty(propName)) {\n                    continue;\n                }\n\n                if (!tracks[propName]) {\n                    tracks[propName] = [];\n                    // Invalid value\n                    var value = this._getter(this._target, propName);\n                    if (value == null) {\n                        // zrLog('Invalid property ' + propName);\n                        continue;\n                    }\n                    // If time is 0\n                    //  Then props is given initialize value\n                    // Else\n                    //  Initialize value from current prop value\n                    if (time !== 0) {\n                        tracks[propName].push({\n                            time: 0,\n                            value: cloneValue(value)\n                        });\n                    }\n                }\n                tracks[propName].push({\n                    time: time,\n                    value: props[propName]\n                });\n            }\n            return this;\n        },\n        /**\n         * 添加动画每一帧的回调函数\n         * @param  {Function} callback\n         * @return {module:zrender/animation/Animator}\n         */\n        during: function (callback) {\n            this._onframeList.push(callback);\n            return this;\n        },\n\n        pause: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].pause();\n            }\n            this._paused = true;\n        },\n\n        resume: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].resume();\n            }\n            this._paused = false;\n        },\n\n        isPaused: function () {\n            return !!this._paused;\n        },\n\n        _doneCallback: function () {\n            // Clear all tracks\n            this._tracks = {};\n            // Clear all clips\n            this._clipList.length = 0;\n\n            var doneList = this._doneList;\n            var len = doneList.length;\n            for (var i = 0; i < len; i++) {\n                doneList[i].call(this);\n            }\n        },\n        /**\n         * 开始执行动画\n         * @param  {string|Function} [easing]\n         *         动画缓动函数，详见{@link module:zrender/animation/easing}\n         * @param  {boolean} forceAnimate\n         * @return {module:zrender/animation/Animator}\n         */\n        start: function (easing, forceAnimate) {\n\n            var self = this;\n            var clipCount = 0;\n\n            var oneTrackDone = function() {\n                clipCount--;\n                if (!clipCount) {\n                    self._doneCallback();\n                }\n            };\n\n            var lastClip;\n            for (var propName in this._tracks) {\n                if (!this._tracks.hasOwnProperty(propName)) {\n                    continue;\n                }\n                var clip = createTrackClip(\n                    this, easing, oneTrackDone,\n                    this._tracks[propName], propName, forceAnimate\n                );\n                if (clip) {\n                    this._clipList.push(clip);\n                    clipCount++;\n\n                    // If start after added to animation\n                    if (this.animation) {\n                        this.animation.addClip(clip);\n                    }\n\n                    lastClip = clip;\n                }\n            }\n\n            // Add during callback on the last clip\n            if (lastClip) {\n                var oldOnFrame = lastClip.onframe;\n                lastClip.onframe = function (target, percent) {\n                    oldOnFrame(target, percent);\n\n                    for (var i = 0; i < self._onframeList.length; i++) {\n                        self._onframeList[i](target, percent);\n                    }\n                };\n            }\n\n            // This optimization will help the case that in the upper application\n            // the view may be refreshed frequently, where animation will be\n            // called repeatly but nothing changed.\n            if (!clipCount) {\n                this._doneCallback();\n            }\n            return this;\n        },\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stop: function (forwardToLast) {\n            var clipList = this._clipList;\n            var animation = this.animation;\n            for (var i = 0; i < clipList.length; i++) {\n                var clip = clipList[i];\n                if (forwardToLast) {\n                    // Move to last frame before stop\n                    clip.onframe(this._target, 1);\n                }\n                animation && animation.removeClip(clip);\n            }\n            clipList.length = 0;\n        },\n        /**\n         * 设置动画延迟开始的时间\n         * @param  {number} time 单位ms\n         * @return {module:zrender/animation/Animator}\n         */\n        delay: function (time) {\n            this._delay = time;\n            return this;\n        },\n        /**\n         * 添加动画结束的回调\n         * @param  {Function} cb\n         * @return {module:zrender/animation/Animator}\n         */\n        done: function(cb) {\n            if (cb) {\n                this._doneList.push(cb);\n            }\n            return this;\n        },\n\n        /**\n         * @return {Array.<module:zrender/animation/Clip>}\n         */\n        getClips: function () {\n            return this._clipList;\n        }\n    };\n\n    module.exports = Animator;\n\n\n/***/ }),\n\n/***/ 669:\n/***/ (function(module, exports) {\n\n\n\n    module.exports = (typeof window !== 'undefined' &&\n                ((window.requestAnimationFrame && window.requestAnimationFrame.bind(window))\n                // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\n                || (window.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window))\n                || window.mozRequestAnimationFrame\n                || window.webkitRequestAnimationFrame)\n            )\n            || function (func) {\n                setTimeout(func, 16);\n            };\n\n\n\n/***/ }),\n\n/***/ 670:\n/***/ (function(module, exports) {\n\n\n\n    var PI2 = Math.PI * 2;\n    module.exports = {\n        normalizeRadian: function(angle) {\n            angle %= PI2;\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return angle;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 671:\n/***/ (function(module, exports) {\n\n// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n\n    /**\n     * Simple double linked list. Compared with array, it has O(1) remove operation.\n     * @constructor\n     */\n    var LinkedList = function () {\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.head = null;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.tail = null;\n\n        this._len = 0;\n    };\n\n    var linkedListProto = LinkedList.prototype;\n    /**\n     * Insert a new value at the tail\n     * @param  {} val\n     * @return {module:zrender/core/LRU~Entry}\n     */\n    linkedListProto.insert = function (val) {\n        var entry = new Entry(val);\n        this.insertEntry(entry);\n        return entry;\n    };\n\n    /**\n     * Insert an entry at the tail\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.insertEntry = function (entry) {\n        if (!this.head) {\n            this.head = this.tail = entry;\n        }\n        else {\n            this.tail.next = entry;\n            entry.prev = this.tail;\n            entry.next = null;\n            this.tail = entry;\n        }\n        this._len++;\n    };\n\n    /**\n     * Remove entry.\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.remove = function (entry) {\n        var prev = entry.prev;\n        var next = entry.next;\n        if (prev) {\n            prev.next = next;\n        }\n        else {\n            // Is head\n            this.head = next;\n        }\n        if (next) {\n            next.prev = prev;\n        }\n        else {\n            // Is tail\n            this.tail = prev;\n        }\n        entry.next = entry.prev = null;\n        this._len--;\n    };\n\n    /**\n     * @return {number}\n     */\n    linkedListProto.len = function () {\n        return this._len;\n    };\n\n    /**\n     * Clear list\n     */\n    linkedListProto.clear = function () {\n        this.head = this.tail = null;\n        this._len = 0;\n    };\n\n    /**\n     * @constructor\n     * @param {} val\n     */\n    var Entry = function (val) {\n        /**\n         * @type {}\n         */\n        this.value = val;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.next;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.prev;\n    };\n\n    /**\n     * LRU Cache\n     * @constructor\n     * @alias module:zrender/core/LRU\n     */\n    var LRU = function (maxSize) {\n\n        this._list = new LinkedList();\n\n        this._map = {};\n\n        this._maxSize = maxSize || 10;\n\n        this._lastRemovedEntry = null;\n    };\n\n    var LRUProto = LRU.prototype;\n\n    /**\n     * @param  {string} key\n     * @param  {} value\n     * @return {} Removed value\n     */\n    LRUProto.put = function (key, value) {\n        var list = this._list;\n        var map = this._map;\n        var removed = null;\n        if (map[key] == null) {\n            var len = list.len();\n            // Reuse last removed entry\n            var entry = this._lastRemovedEntry;\n\n            if (len >= this._maxSize && len > 0) {\n                // Remove the least recently used\n                var leastUsedEntry = list.head;\n                list.remove(leastUsedEntry);\n                delete map[leastUsedEntry.key];\n\n                removed = leastUsedEntry.value;\n                this._lastRemovedEntry = leastUsedEntry;\n            }\n\n            if (entry) {\n                entry.value = value;\n            }\n            else {\n                entry = new Entry(value);\n            }\n            entry.key = key;\n            list.insertEntry(entry);\n            map[key] = entry;\n        }\n\n        return removed;\n    };\n\n    /**\n     * @param  {string} key\n     * @return {}\n     */\n    LRUProto.get = function (key) {\n        var entry = this._map[key];\n        var list = this._list;\n        if (entry != null) {\n            // Put the latest used entry in the tail\n            if (entry !== list.tail) {\n                list.remove(entry);\n                list.insertEntry(entry);\n            }\n\n            return entry.value;\n        }\n    };\n\n    /**\n     * Clear the cache\n     */\n    LRUProto.clear = function () {\n        this._list.clear();\n        this._map = {};\n    };\n\n    module.exports = LRU;\n\n\n/***/ }),\n\n/***/ 672:\n/***/ (function(module, exports) {\n\n/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\n\n\n    var idStart = 0x0907;\n\n    module.exports = function () {\n        return idStart++;\n    };\n\n\n\n/***/ }),\n\n/***/ 673:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n        var config = __webpack_require__(633);\n\n        /**\n         * @exports zrender/tool/log\n         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n         */\n        module.exports = function() {\n            if (config.debugMode === 0) {\n                return;\n            }\n            else if (config.debugMode == 1) {\n                for (var k in arguments) {\n                    throw new Error(arguments[k]);\n                }\n            }\n            else if (config.debugMode > 1) {\n                for (var k in arguments) {\n                    console.log(arguments[k]);\n                }\n            }\n        };\n\n        /* for debug\n        return function(mes) {\n            document.getElementById('wrong-message').innerHTML =\n                mes + ' ' + (new Date() - 0)\n                + '<br/>'\n                + document.getElementById('wrong-message').innerHTML;\n        };\n        */\n    \n\n\n/***/ }),\n\n/***/ 674:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Image element\n * @module zrender/graphic/Image\n */\n\n\n\n    var Displayable = __webpack_require__(644);\n    var BoundingRect = __webpack_require__(617);\n    var zrUtil = __webpack_require__(606);\n    var imageHelper = __webpack_require__(646);\n\n    /**\n     * @alias zrender/graphic/Image\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function ZImage(opts) {\n        Displayable.call(this, opts);\n    }\n\n    ZImage.prototype = {\n\n        constructor: ZImage,\n\n        type: 'image',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var src = style.image;\n\n            // Must bind each time\n            style.bind(ctx, this, prevEl);\n\n            var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this);\n\n            if (!image || !imageHelper.isImageReady(image)) {\n                return;\n            }\n\n            // 图片已经加载完成\n            // if (image.nodeName.toUpperCase() == 'IMG') {\n            //     if (!image.complete) {\n            //         return;\n            //     }\n            // }\n            // Else is canvas\n\n            var x = style.x || 0;\n            var y = style.y || 0;\n            var width = style.width;\n            var height = style.height;\n            var aspect = image.width / image.height;\n            if (width == null && height != null) {\n                // Keep image/height ratio\n                width = height * aspect;\n            }\n            else if (height == null && width != null) {\n                height = width / aspect;\n            }\n            else if (width == null && height == null) {\n                width = image.width;\n                height = image.height;\n            }\n\n            // 设置transform\n            this.setTransform(ctx);\n\n            if (style.sWidth && style.sHeight) {\n                var sx = style.sx || 0;\n                var sy = style.sy || 0;\n                ctx.drawImage(\n                    image,\n                    sx, sy, style.sWidth, style.sHeight,\n                    x, y, width, height\n                );\n            }\n            else if (style.sx && style.sy) {\n                var sx = style.sx;\n                var sy = style.sy;\n                var sWidth = width - sx;\n                var sHeight = height - sy;\n                ctx.drawImage(\n                    image,\n                    sx, sy, sWidth, sHeight,\n                    x, y, width, height\n                );\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (! this._rect) {\n                this._rect = new BoundingRect(\n                    style.x || 0, style.y || 0, style.width || 0, style.height || 0\n                );\n            }\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(ZImage, Displayable);\n\n    module.exports = ZImage;\n\n\n/***/ }),\n\n/***/ 675:\n/***/ (function(module, exports) {\n\n\n\n    var Pattern = function (image, repeat) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {image: ...}`, where this constructor will not be called.\n\n        this.image = image;\n        this.repeat = repeat;\n\n        // Can be cloned\n        this.type = 'pattern';\n    };\n\n    Pattern.prototype.getCanvasPattern = function (ctx) {\n        return ctx.createPattern(this.image, this.repeat || 'repeat');\n    };\n\n    module.exports = Pattern;\n\n\n/***/ }),\n\n/***/ 676:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/graphic/Style\n */\n\n\n    var textHelper = __webpack_require__(647);\n\n    var STYLE_COMMON_PROPS = [\n        ['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'],\n        ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]\n    ];\n\n    // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n    // var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\n    var Style = function (opts, host) {\n        this.extendFrom(opts, false);\n        this.host = host;\n    };\n\n    function createLinearGradient(ctx, obj, rect) {\n        var x = obj.x == null ? 0 : obj.x;\n        var x2 = obj.x2 == null ? 1 : obj.x2;\n        var y = obj.y == null ? 0 : obj.y;\n        var y2 = obj.y2 == null ? 0 : obj.y2;\n\n        if (!obj.global) {\n            x = x * rect.width + rect.x;\n            x2 = x2 * rect.width + rect.x;\n            y = y * rect.height + rect.y;\n            y2 = y2 * rect.height + rect.y;\n        }\n\n        var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n\n        return canvasGradient;\n    }\n\n    function createRadialGradient(ctx, obj, rect) {\n        var width = rect.width;\n        var height = rect.height;\n        var min = Math.min(width, height);\n\n        var x = obj.x == null ? 0.5 : obj.x;\n        var y = obj.y == null ? 0.5 : obj.y;\n        var r = obj.r == null ? 0.5 : obj.r;\n        if (!obj.global) {\n            x = x * width + rect.x;\n            y = y * height + rect.y;\n            r = r * min;\n        }\n\n        var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n\n        return canvasGradient;\n    }\n\n\n    Style.prototype = {\n\n        constructor: Style,\n\n        /**\n         * @type {module:zrender/graphic/Displayable}\n         */\n        host: null,\n\n        /**\n         * @type {string}\n         */\n        fill: '#000000',\n\n        /**\n         * @type {string}\n         */\n        stroke: null,\n\n        /**\n         * @type {number}\n         */\n        opacity: 1,\n\n        /**\n         * @type {Array.<number>}\n         */\n        lineDash: null,\n\n        /**\n         * @type {number}\n         */\n        lineDashOffset: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetY: 0,\n\n        /**\n         * @type {number}\n         */\n        lineWidth: 1,\n\n        /**\n         * If stroke ignore scale\n         * @type {Boolean}\n         */\n        strokeNoScale: false,\n\n        // Bounding rect text configuration\n        // Not affected by element transform\n        /**\n         * @type {string}\n         */\n        text: null,\n\n        /**\n         * If `fontSize` or `fontFamily` exists, `font` will be reset by\n         * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n         * So do not visit it directly in upper application (like echarts),\n         * but use `contain/text#makeFont` instead.\n         * @type {string}\n         */\n        font: null,\n\n        /**\n         * The same as font. Use font please.\n         * @deprecated\n         * @type {string}\n         */\n        textFont: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * @type {string}\n         */\n        fontStyle: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * @type {string}\n         */\n        fontWeight: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * Should be 12 but not '12px'.\n         * @type {number}\n         */\n        fontSize: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * @type {string}\n         */\n        fontFamily: null,\n\n        /**\n         * Reserved for special functinality, like 'hr'.\n         * @type {string}\n         */\n        textTag: null,\n\n        /**\n         * @type {string}\n         */\n        textFill: '#000',\n\n        /**\n         * @type {string}\n         */\n        textStroke: null,\n\n        /**\n         * @type {number}\n         */\n        textWidth: null,\n\n        /**\n         * Only for textBackground.\n         * @type {number}\n         */\n        textHeight: null,\n\n        /**\n         * textStroke may be set as some color as a default\n         * value in upper applicaion, where the default value\n         * of textLineWidth should be 0 to make sure that\n         * user can choose to do not use text stroke.\n         * @type {number}\n         */\n        textLineWidth: 0,\n\n        /**\n         * @type {number}\n         */\n        textLineHeight: null,\n\n        /**\n         * 'inside', 'left', 'right', 'top', 'bottom'\n         * [x, y]\n         * Based on x, y of rect.\n         * @type {string|Array.<number>}\n         * @default 'inside'\n         */\n        textPosition: 'inside',\n\n        /**\n         * If not specified, use the boundingRect of a `displayable`.\n         * @type {Object}\n         */\n        textRect: null,\n\n        /**\n         * [x, y]\n         * @type {Array.<number>}\n         */\n        textOffset: null,\n\n        /**\n         * @type {string}\n         */\n        textAlign: null,\n\n        /**\n         * @type {string}\n         */\n        textVerticalAlign: null,\n\n        /**\n         * @type {number}\n         */\n        textDistance: 5,\n\n        /**\n         * @type {string}\n         */\n        textShadowColor: 'transparent',\n\n        /**\n         * @type {number}\n         */\n        textShadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        textShadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        textShadowOffsetY: 0,\n\n        /**\n         * @type {string}\n         */\n        textBoxShadowColor: 'transparent',\n\n        /**\n         * @type {number}\n         */\n        textBoxShadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        textBoxShadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        textBoxShadowOffsetY: 0,\n\n        /**\n         * Whether transform text.\n         * Only useful in Path and Image element\n         * @type {boolean}\n         */\n        transformText: false,\n\n        /**\n         * Text rotate around position of Path or Image\n         * Only useful in Path and Image element and transformText is false.\n         */\n        textRotation: 0,\n\n        /**\n         * Text origin of text rotation, like [10, 40].\n         * Based on x, y of rect.\n         * Useful in label rotation of circular symbol.\n         * By default, this origin is textPosition.\n         * Can be 'center'.\n         * @type {string|Array.<number>}\n         */\n        textOrigin: null,\n\n        /**\n         * @type {string}\n         */\n        textBackgroundColor: null,\n\n        /**\n         * @type {string}\n         */\n        textBorderColor: null,\n\n        /**\n         * @type {number}\n         */\n        textBorderWidth: 0,\n\n        /**\n         * @type {number}\n         */\n        textBorderRadius: 0,\n\n        /**\n         * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n         * @type {number|Array.<number>}\n         */\n        textPadding: null,\n\n        /**\n         * Text styles for rich text.\n         * @type {Object}\n         */\n        rich: null,\n\n        /**\n         * {outerWidth, outerHeight, ellipsis, placeholder}\n         * @type {Object}\n         */\n        truncate: null,\n\n        /**\n         * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n         * @type {string}\n         */\n        blend: null,\n\n        normalize: function () {\n            textHelper.normalizeTextStyle(this);\n        },\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        bind: function (ctx, el, prevEl) {\n            var style = this;\n            var prevStyle = prevEl && prevEl.style;\n            var firstDraw = !prevStyle;\n\n            for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n                var prop = STYLE_COMMON_PROPS[i];\n                var styleName = prop[0];\n\n                if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n                    // FIXME Invalid property value will cause style leak from previous element.\n                    ctx[styleName] = style[styleName] || prop[1];\n                }\n            }\n\n            if ((firstDraw || style.fill !== prevStyle.fill)) {\n                ctx.fillStyle = style.fill;\n            }\n            if ((firstDraw || style.stroke !== prevStyle.stroke)) {\n                ctx.strokeStyle = style.stroke;\n            }\n            if ((firstDraw || style.opacity !== prevStyle.opacity)) {\n                ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n            }\n\n            if ((firstDraw || style.blend !== prevStyle.blend)) {\n                ctx.globalCompositeOperation = style.blend || 'source-over';\n            }\n            if (this.hasStroke()) {\n                var lineWidth = style.lineWidth;\n                ctx.lineWidth = lineWidth / (\n                    (this.strokeNoScale && el && el.getLineScale) ? el.getLineScale() : 1\n                );\n            }\n        },\n\n        hasFill: function () {\n            var fill = this.fill;\n            return fill != null && fill !== 'none';\n        },\n\n        hasStroke: function () {\n            var stroke = this.stroke;\n            return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n        },\n\n        /**\n         * Extend from other style\n         * @param {zrender/graphic/Style} otherStyle\n         * @param {boolean} overwrite true: overwrirte any way.\n         *                            false: overwrite only when !target.hasOwnProperty\n         *                            others: overwrite when property is not null/undefined.\n         */\n        extendFrom: function (otherStyle, overwrite) {\n            if (otherStyle) {\n                for (var name in otherStyle) {\n                    if (otherStyle.hasOwnProperty(name)\n                        && (overwrite === true\n                            || (\n                                overwrite === false\n                                    ? !this.hasOwnProperty(name)\n                                    : otherStyle[name] != null\n                            )\n                        )\n                    ) {\n                        this[name] = otherStyle[name];\n                    }\n                }\n            }\n        },\n\n        /**\n         * Batch setting style with a given object\n         * @param {Object|string} obj\n         * @param {*} [obj]\n         */\n        set: function (obj, value) {\n            if (typeof obj === 'string') {\n                this[obj] = value;\n            }\n            else {\n                this.extendFrom(obj, true);\n            }\n        },\n\n        /**\n         * Clone\n         * @return {zrender/graphic/Style} [description]\n         */\n        clone: function () {\n            var newStyle = new this.constructor();\n            newStyle.extendFrom(this, true);\n            return newStyle;\n        },\n\n        getGradient: function (ctx, obj, rect) {\n            var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n            var canvasGradient = method(ctx, obj, rect);\n            var colorStops = obj.colorStops;\n            for (var i = 0; i < colorStops.length; i++) {\n                canvasGradient.addColorStop(\n                    colorStops[i].offset, colorStops[i].color\n                );\n            }\n            return canvasGradient;\n        }\n\n    };\n\n    var styleProto = Style.prototype;\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n        var prop = STYLE_COMMON_PROPS[i];\n        if (!(prop[0] in styleProto)) {\n            styleProto[prop[0]] = prop[1];\n        }\n    }\n\n    // Provide for others\n    Style.getGradient = styleProto.getGradient;\n\n    module.exports = Style;\n\n\n/***/ }),\n\n/***/ 677:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var env = __webpack_require__(615);\n\n    // Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n    // where exception \"unexpected call to method or property access\"\n    // might be thrown when calling ctx.fill or ctx.stroke after a path\n    // whose area size is zero is drawn and ctx.clip() is called and\n    // shadowBlur is set. See #4572, #3112, #5777.\n    // (e.g.,\n    //  ctx.moveTo(10, 10);\n    //  ctx.lineTo(20, 10);\n    //  ctx.closePath();\n    //  ctx.clip();\n    //  ctx.shadowBlur = 10;\n    //  ...\n    //  ctx.fill();\n    // )\n\n    var shadowTemp = [\n        ['shadowBlur', 0],\n        ['shadowColor', '#000'],\n        ['shadowOffsetX', 0],\n        ['shadowOffsetY', 0]\n    ];\n\n    module.exports = function (orignalBrush) {\n\n        // version string can be: '11.0'\n        return (env.browser.ie && env.browser.version >= 11)\n\n            ? function () {\n                var clipPaths = this.__clipPaths;\n                var style = this.style;\n                var modified;\n\n                if (clipPaths) {\n                    for (var i = 0; i < clipPaths.length; i++) {\n                        var clipPath = clipPaths[i];\n                        var shape = clipPath && clipPath.shape;\n                        var type = clipPath && clipPath.type;\n\n                        if (shape && (\n                            (type === 'sector' && shape.startAngle === shape.endAngle)\n                            || (type === 'rect' && (!shape.width || !shape.height))\n                        )) {\n                            for (var j = 0; j < shadowTemp.length; j++) {\n                                // It is save to put shadowTemp static, because shadowTemp\n                                // will be all modified each item brush called.\n                                shadowTemp[j][2] = style[shadowTemp[j][0]];\n                                style[shadowTemp[j][0]] = shadowTemp[j][1];\n                            }\n                            modified = true;\n                            break;\n                        }\n                    }\n                }\n\n                orignalBrush.apply(this, arguments);\n\n                if (modified) {\n                    for (var j = 0; j < shadowTemp.length; j++) {\n                        style[shadowTemp[j][0]] = shadowTemp[j][2];\n                    }\n                }\n            }\n\n            : orignalBrush;\n    };\n\n\n\n/***/ }),\n\n/***/ 678:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var smoothSpline = __webpack_require__(787);\n    var smoothBezier = __webpack_require__(786);\n\n    module.exports = {\n        buildPath: function (ctx, shape, closePath) {\n            var points = shape.points;\n            var smooth = shape.smooth;\n            if (points && points.length >= 2) {\n                if (smooth && smooth !== 'spline') {\n                    var controlPoints = smoothBezier(\n                        points, smooth, closePath, shape.smoothConstraint\n                    );\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    var len = points.length;\n                    for (var i = 0; i < (closePath ? len : len - 1); i++) {\n                        var cp1 = controlPoints[i * 2];\n                        var cp2 = controlPoints[i * 2 + 1];\n                        var p = points[(i + 1) % len];\n                        ctx.bezierCurveTo(\n                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\n                        );\n                    }\n                }\n                else {\n                    if (smooth === 'spline') {\n                        points = smoothSpline(points, closePath);\n                    }\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    for (var i = 1, l = points.length; i < l; i++) {\n                        ctx.lineTo(points[i][0], points[i][1]);\n                    }\n                }\n\n                closePath && ctx.closePath();\n            }\n        }\n    };\n\n\n/***/ }),\n\n/***/ 679:\n/***/ (function(module, exports) {\n\n\n\n    module.exports = {\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            var r = shape.r;\n            var r1;\n            var r2;\n            var r3;\n            var r4;\n\n            // Convert width and height to positive for better borderRadius\n            if (width < 0) {\n                x = x + width;\n                width = -width;\n            }\n            if (height < 0) {\n                y = y + height;\n                height = -height;\n            }\n\n            if (typeof r === 'number') {\n                r1 = r2 = r3 = r4 = r;\n            }\n            else if (r instanceof Array) {\n                if (r.length === 1) {\n                    r1 = r2 = r3 = r4 = r[0];\n                }\n                else if (r.length === 2) {\n                    r1 = r3 = r[0];\n                    r2 = r4 = r[1];\n                }\n                else if (r.length === 3) {\n                    r1 = r[0];\n                    r2 = r4 = r[1];\n                    r3 = r[2];\n                }\n                else {\n                    r1 = r[0];\n                    r2 = r[1];\n                    r3 = r[2];\n                    r4 = r[3];\n                }\n            }\n            else {\n                r1 = r2 = r3 = r4 = 0;\n            }\n\n            var total;\n            if (r1 + r2 > width) {\n                total = r1 + r2;\n                r1 *= width / total;\n                r2 *= width / total;\n            }\n            if (r3 + r4 > width) {\n                total = r3 + r4;\n                r3 *= width / total;\n                r4 *= width / total;\n            }\n            if (r2 + r3 > height) {\n                total = r2 + r3;\n                r2 *= height / total;\n                r3 *= height / total;\n            }\n            if (r1 + r4 > height) {\n                total = r1 + r4;\n                r1 *= height / total;\n                r4 *= height / total;\n            }\n            ctx.moveTo(x + r1, y);\n            ctx.lineTo(x + width - r2, y);\n            r2 !== 0 && ctx.quadraticCurveTo(\n                x + width, y, x + width, y + r2\n            );\n            ctx.lineTo(x + width, y + height - r3);\n            r3 !== 0 && ctx.quadraticCurveTo(\n                x + width, y + height, x + width - r3, y + height\n            );\n            ctx.lineTo(x + r4, y + height);\n            r4 !== 0 && ctx.quadraticCurveTo(\n                x, y + height, x, y + height - r4\n            );\n            ctx.lineTo(x, y + r1);\n            r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n        }\n    };\n\n\n/***/ }),\n\n/***/ 680:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\n\n\n    var matrix = __webpack_require__(623);\n    var vector = __webpack_require__(611);\n    var mIdentity = matrix.identity;\n\n    var EPSILON = 5e-5;\n\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n\n    /**\n     * @alias module:zrender/mixin/Transformable\n     * @constructor\n     */\n    var Transformable = function (opts) {\n        opts = opts || {};\n        // If there are no given position, rotation, scale\n        if (!opts.position) {\n            /**\n             * 平移\n             * @type {Array.<number>}\n             * @default [0, 0]\n             */\n            this.position = [0, 0];\n        }\n        if (opts.rotation == null) {\n            /**\n             * 旋转\n             * @type {Array.<number>}\n             * @default 0\n             */\n            this.rotation = 0;\n        }\n        if (!opts.scale) {\n            /**\n             * 缩放\n             * @type {Array.<number>}\n             * @default [1, 1]\n             */\n            this.scale = [1, 1];\n        }\n        /**\n         * 旋转和缩放的原点\n         * @type {Array.<number>}\n         * @default null\n         */\n        this.origin = this.origin || null;\n    };\n\n    var transformableProto = Transformable.prototype;\n    transformableProto.transform = null;\n\n    /**\n     * 判断是否需要有坐标变换\n     * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n     */\n    transformableProto.needLocalTransform = function () {\n        return isNotAroundZero(this.rotation)\n            || isNotAroundZero(this.position[0])\n            || isNotAroundZero(this.position[1])\n            || isNotAroundZero(this.scale[0] - 1)\n            || isNotAroundZero(this.scale[1] - 1);\n    };\n\n    transformableProto.updateTransform = function () {\n        var parent = this.parent;\n        var parentHasTransform = parent && parent.transform;\n        var needLocalTransform = this.needLocalTransform();\n\n        var m = this.transform;\n        if (!(needLocalTransform || parentHasTransform)) {\n            m && mIdentity(m);\n            return;\n        }\n\n        m = m || matrix.create();\n\n        if (needLocalTransform) {\n            this.getLocalTransform(m);\n        }\n        else {\n            mIdentity(m);\n        }\n\n        // 应用父节点变换\n        if (parentHasTransform) {\n            if (needLocalTransform) {\n                matrix.mul(m, parent.transform, m);\n            }\n            else {\n                matrix.copy(m, parent.transform);\n            }\n        }\n        // 保存这个变换矩阵\n        this.transform = m;\n\n        this.invTransform = this.invTransform || matrix.create();\n        matrix.invert(this.invTransform, m);\n    };\n\n    transformableProto.getLocalTransform = function (m) {\n        return Transformable.getLocalTransform(this, m);\n    };\n\n    /**\n     * 将自己的transform应用到context上\n     * @param {CanvasRenderingContext2D} ctx\n     */\n    transformableProto.setTransform = function (ctx) {        \n        var m = this.transform;\n        var dpr = ctx.dpr || 1;\n        if (m) {\n            ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n        }\n        else {\n            ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n        }\n    };\n\n    transformableProto.restoreTransform = function (ctx) {\n        var dpr = ctx.dpr || 1;\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n    };\n\n    var tmpTransform = [];\n\n    /**\n     * 分解`transform`矩阵到`position`, `rotation`, `scale`\n     */\n    transformableProto.decomposeTransform = function () {\n        if (!this.transform) {\n            return;\n        }\n        var parent = this.parent;\n        var m = this.transform;\n        if (parent && parent.transform) {\n            // Get local transform and decompose them to position, scale, rotation\n            matrix.mul(tmpTransform, parent.invTransform, m);\n            m = tmpTransform;\n        }\n        var sx = m[0] * m[0] + m[1] * m[1];\n        var sy = m[2] * m[2] + m[3] * m[3];\n        var position = this.position;\n        var scale = this.scale;\n        if (isNotAroundZero(sx - 1)) {\n            sx = Math.sqrt(sx);\n        }\n        if (isNotAroundZero(sy - 1)) {\n            sy = Math.sqrt(sy);\n        }\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        position[0] = m[4];\n        position[1] = m[5];\n        scale[0] = sx;\n        scale[1] = sy;\n        this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n    };\n\n    /**\n     * Get global scale\n     * @return {Array.<number>}\n     */\n    transformableProto.getGlobalScale = function () {\n        var m = this.transform;\n        if (!m) {\n            return [1, 1];\n        }\n        var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        return [sx, sy];\n    };\n    /**\n     * 变换坐标位置到 shape 的局部坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToLocal = function (x, y) {\n        var v2 = [x, y];\n        var invTransform = this.invTransform;\n        if (invTransform) {\n            vector.applyTransform(v2, v2, invTransform);\n        }\n        return v2;\n    };\n\n    /**\n     * 变换局部坐标位置到全局坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToGlobal = function (x, y) {\n        var v2 = [x, y];\n        var transform = this.transform;\n        if (transform) {\n            vector.applyTransform(v2, v2, transform);\n        }\n        return v2;\n    };\n\n    /**\n     * @static\n     * @param {Object} target\n     * @param {Array.<number>} target.origin\n     * @param {number} target.rotation\n     * @param {Array.<number>} target.position\n     * @param {Array.<number>} [m]\n     */\n    Transformable.getLocalTransform = function (target, m) {\n        m = m || [];\n        mIdentity(m);\n\n        var origin = target.origin;\n        var scale = target.scale || [1, 1];\n        var rotation = target.rotation || 0;\n        var position = target.position || [0, 0];\n\n        if (origin) {\n            // Translate to origin\n            m[4] -= origin[0];\n            m[5] -= origin[1];\n        }\n        matrix.scale(m, m, scale);\n        if (rotation) {\n            matrix.rotate(m, m, rotation);\n        }\n        if (origin) {\n            // Translate back from origin\n            m[4] += origin[0];\n            m[5] += origin[1];\n        }\n\n        m[4] += position[0];\n        m[5] += position[1];\n\n        return m;\n    };\n\n    module.exports = Transformable;\n\n\n\n/***/ }),\n\n/***/ 683:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var graphic = __webpack_require__(608);\n    var zrUtil = __webpack_require__(606);\n    var echarts = __webpack_require__(607);\n\n    __webpack_require__(685);\n\n    __webpack_require__(716);\n\n    // Grid view\n    echarts.extendComponentView({\n\n        type: 'grid',\n\n        render: function (gridModel, ecModel) {\n            this.group.removeAll();\n            if (gridModel.get('show')) {\n                this.group.add(new graphic.Rect({\n                    shape: gridModel.coordinateSystem.getRect(),\n                    style: zrUtil.defaults({\n                        fill: gridModel.get('backgroundColor')\n                    }, gridModel.getItemStyle()),\n                    silent: true,\n                    z2: -1\n                }));\n            }\n        }\n\n    });\n\n    echarts.registerPreprocessor(function (option) {\n        // Only create grid when need\n        if (option.xAxis && option.yAxis && !option.grid) {\n            option.grid = {};\n        }\n    });\n\n\n/***/ }),\n\n/***/ 684:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(606);\n\n    var defaultOption = {\n        show: true,\n        zlevel: 0,                  // 一级层叠\n        z: 0,                       // 二级层叠\n        // 反向坐标轴\n        inverse: false,\n\n        // 坐标轴名字，默认为空\n        name: '',\n        // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n        nameLocation: 'end',\n        // 坐标轴名字旋转，degree。\n        nameRotate: null, // Adapt to axis rotate, when nameLocation is 'middle'.\n        nameTruncate: {\n            maxWidth: null,\n            ellipsis: '...',\n            placeholder: '.'\n        },\n        // 坐标轴文字样式，默认取全局样式\n        nameTextStyle: {},\n        // 文字与轴线距离\n        nameGap: 15,\n\n        silent: false, // Default false to support tooltip.\n        triggerEvent: false, // Default false to avoid legacy user event listener fail.\n\n        tooltip: {\n            show: false\n        },\n\n        axisPointer: {},\n\n        // 坐标轴线\n        axisLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            onZero: true,\n            onZeroAxisIndex: null,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                color: '#333',\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // 属性show控制显示与否，默认显示\n            show: true,\n            // 控制小标记是否在grid里\n            inside: false,\n            // 属性length控制线长\n            length: 5,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                width: 1\n            }\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            show: true,\n            // 控制文本标签是否在grid里\n            inside: false,\n            rotate: 0,\n            showMinLabel: null, // true | false | null (auto)\n            showMaxLabel: null, // true | false | null (auto)\n            margin: 8,\n            // formatter: null,\n            // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n            fontSize: 12\n        },\n        // 分隔线\n        splitLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            // 属性lineStyle（详见lineStyle）控制线条样式\n            lineStyle: {\n                color: ['#ccc'],\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 分隔区域\n        splitArea: {\n            // 默认不显示，属性show控制显示与否\n            show: false,\n            // 属性areaStyle（详见areaStyle）控制区域样式\n            areaStyle: {\n                color: ['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']\n            }\n        }\n    };\n\n    var categoryAxis = zrUtil.merge({\n        // 类目起始和结束两端空白策略\n        boundaryGap: true,\n        // splitArea: {\n            // show: false\n        // },\n        splitLine: {\n            show: false\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // If tick is align with label when boundaryGap is true\n            alignWithLabel: false,\n            interval: 'auto'\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            interval: 'auto'\n        }\n    }, defaultOption);\n\n    var valueAxis = zrUtil.merge({\n        // 数值起始和结束两端空白策略\n        boundaryGap: [0, 0],\n        // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n        // min: null,\n        // 最大值，设置成 'dataMax' 则从数据中计算最大值\n        // max: null,\n        // Readonly prop, specifies start value of the range when using data zoom.\n        // rangeStart: null\n        // Readonly prop, specifies end value of the range when using data zoom.\n        // rangeEnd: null\n        // 脱离0值比例，放大聚焦到最终_min，_max区间\n        // scale: false,\n        // 分割段数，默认为5\n        splitNumber: 5\n        // Minimum interval\n        // minInterval: null\n        // maxInterval: null\n    }, defaultOption);\n\n    // FIXME\n    var timeAxis = zrUtil.defaults({\n        scale: true,\n        min: 'dataMin',\n        max: 'dataMax'\n    }, valueAxis);\n\n    var logAxis = zrUtil.defaults({\n        scale: true,\n        logBase: 10\n    }, valueAxis);\n\n    module.exports = {\n        categoryAxis: categoryAxis,\n        valueAxis: valueAxis,\n        timeAxis: timeAxis,\n        logAxis: logAxis\n    };\n\n\n/***/ }),\n\n/***/ 685:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\nvar factory = exports;\n\n    var layout = __webpack_require__(619);\n    var axisHelper = __webpack_require__(620);\n\n    var zrUtil = __webpack_require__(606);\n    var Cartesian2D = __webpack_require__(737);\n    var Axis2D = __webpack_require__(735);\n\n    var each = zrUtil.each;\n\n    var ifAxisCrossZero = axisHelper.ifAxisCrossZero;\n    var niceScaleExtent = axisHelper.niceScaleExtent;\n\n    // 依赖 GridModel, AxisModel 做预处理\n    __webpack_require__(738);\n\n    /**\n     * Check if the axis is used in the specified grid\n     * @inner\n     */\n    function isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n        return axisModel.getCoordSysModel() === gridModel;\n    }\n\n    function getLabelUnionRect(axis) {\n        var axisModel = axis.model;\n        var labels = axisModel.getFormattedLabels();\n        var axisLabelModel = axisModel.getModel('axisLabel');\n        var rect;\n        var step = 1;\n        var labelCount = labels.length;\n        if (labelCount > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.ceil(labelCount / 40);\n        }\n        for (var i = 0; i < labelCount; i += step) {\n            if (!axis.isLabelIgnored(i)) {\n                var singleRect = axisLabelModel.getTextRect(labels[i]);\n                // FIXME consider label rotate\n                rect ? rect.union(singleRect) : (rect = singleRect);\n            }\n        }\n        return rect;\n    }\n\n    function Grid(gridModel, ecModel, api) {\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n         * @private\n         */\n        this._coordsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n         * @private\n         */\n        this._coordsList = [];\n\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesList = [];\n\n        this._initCartesian(gridModel, ecModel, api);\n\n        this.model = gridModel;\n    }\n\n    var gridProto = Grid.prototype;\n\n    gridProto.type = 'grid';\n\n    gridProto.axisPointerEnabled = true;\n\n    gridProto.getRect = function () {\n        return this._rect;\n    };\n\n    gridProto.update = function (ecModel, api) {\n\n        var axesMap = this._axesMap;\n\n        this._updateScale(ecModel, this.model);\n\n        each(axesMap.x, function (xAxis) {\n            niceScaleExtent(xAxis.scale, xAxis.model);\n        });\n        each(axesMap.y, function (yAxis) {\n            niceScaleExtent(yAxis.scale, yAxis.model);\n        });\n        each(axesMap.x, function (xAxis) {\n            fixAxisOnZero(axesMap, 'y', xAxis);\n        });\n        each(axesMap.y, function (yAxis) {\n            fixAxisOnZero(axesMap, 'x', yAxis);\n        });\n\n        // Resize again if containLabel is enabled\n        // FIXME It may cause getting wrong grid size in data processing stage\n        this.resize(this.model, api);\n    };\n\n    function fixAxisOnZero(axesMap, otherAxisDim, axis) {\n        // onZero can not be enabled in these two situations:\n        // 1. When any other axis is a category axis.\n        // 2. When no axis is cross 0 point.\n        var axes = axesMap[otherAxisDim];\n\n        if (!axis.onZero) {\n            return;\n        }\n\n        var onZeroAxisIndex = axis.onZeroAxisIndex;\n\n        // If target axis is specified.\n        if (onZeroAxisIndex != null) {\n            var otherAxis = axes[onZeroAxisIndex];\n            if (otherAxis && canNotOnZeroToAxis(otherAxis)) {\n                axis.onZero = false;\n            }\n            return;\n        }\n\n        for (var idx in axes) {\n            if (axes.hasOwnProperty(idx)) {\n                var otherAxis = axes[idx];\n                if (otherAxis && !canNotOnZeroToAxis(otherAxis)) {\n                    onZeroAxisIndex = +idx;\n                    break;\n                }\n            }\n        }\n\n        if (onZeroAxisIndex == null) {\n            axis.onZero = false;\n        }\n        axis.onZeroAxisIndex = onZeroAxisIndex;\n    }\n\n    function canNotOnZeroToAxis(axis) {\n        return axis.type === 'category' || axis.type === 'time' || !ifAxisCrossZero(axis);\n    }\n\n    /**\n     * Resize the grid\n     * @param {module:echarts/coord/cartesian/GridModel} gridModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    gridProto.resize = function (gridModel, api, ignoreContainLabel) {\n\n        var gridRect = layout.getLayoutRect(\n            gridModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n\n        this._rect = gridRect;\n\n        var axesList = this._axesList;\n\n        adjustAxes();\n\n        // Minus label size\n        if (!ignoreContainLabel && gridModel.get('containLabel')) {\n            each(axesList, function (axis) {\n                if (!axis.model.get('axisLabel.inside')) {\n                    var labelUnionRect = getLabelUnionRect(axis);\n                    if (labelUnionRect) {\n                        var dim = axis.isHorizontal() ? 'height' : 'width';\n                        var margin = axis.model.get('axisLabel.margin');\n                        gridRect[dim] -= labelUnionRect[dim] + margin;\n                        if (axis.position === 'top') {\n                            gridRect.y += labelUnionRect.height + margin;\n                        }\n                        else if (axis.position === 'left')  {\n                            gridRect.x += labelUnionRect.width + margin;\n                        }\n                    }\n                }\n            });\n\n            adjustAxes();\n        }\n\n        function adjustAxes() {\n            each(axesList, function (axis) {\n                var isHorizontal = axis.isHorizontal();\n                var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n                var idx = axis.inverse ? 1 : 0;\n                axis.setExtent(extent[idx], extent[1 - idx]);\n                updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n            });\n        }\n    };\n\n    /**\n     * @param {string} axisType\n     * @param {number} [axisIndex]\n     */\n    gridProto.getAxis = function (axisType, axisIndex) {\n        var axesMapOnDim = this._axesMap[axisType];\n        if (axesMapOnDim != null) {\n            if (axisIndex == null) {\n                // Find first axis\n                for (var name in axesMapOnDim) {\n                    if (axesMapOnDim.hasOwnProperty(name)) {\n                        return axesMapOnDim[name];\n                    }\n                }\n            }\n            return axesMapOnDim[axisIndex];\n        }\n    };\n\n    /**\n     * @return {Array.<module:echarts/coord/Axis>}\n     */\n    gridProto.getAxes = function () {\n        return this._axesList.slice();\n    };\n\n    /**\n     * Usage:\n     *      grid.getCartesian(xAxisIndex, yAxisIndex);\n     *      grid.getCartesian(xAxisIndex);\n     *      grid.getCartesian(null, yAxisIndex);\n     *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n     *\n     * @param {number|Object} [xAxisIndex]\n     * @param {number} [yAxisIndex]\n     */\n    gridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n        if (xAxisIndex != null && yAxisIndex != null) {\n            var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n            return this._coordsMap[key];\n        }\n\n        if (zrUtil.isObject(xAxisIndex)) {\n            yAxisIndex = xAxisIndex.yAxisIndex;\n            xAxisIndex = xAxisIndex.xAxisIndex;\n        }\n        // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n        for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n            if (coordList[i].getAxis('x').index === xAxisIndex\n                || coordList[i].getAxis('y').index === yAxisIndex\n            ) {\n                return coordList[i];\n            }\n        }\n    };\n\n    gridProto.getCartesians = function () {\n        return this._coordsList.slice();\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertToPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.dataToPoint(value)\n            : target.axis\n            ? target.axis.toGlobalCoord(target.axis.dataToCoord(value))\n            : null;\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertFromPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.pointToData(value)\n            : target.axis\n            ? target.axis.coordToData(target.axis.toLocalCoord(value))\n            : null;\n    };\n\n    /**\n     * @inner\n     */\n    gridProto._findConvertTarget = function (ecModel, finder) {\n        var seriesModel = finder.seriesModel;\n        var xAxisModel = finder.xAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('xAxis')[0]);\n        var yAxisModel = finder.yAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('yAxis')[0]);\n        var gridModel = finder.gridModel;\n        var coordsList = this._coordsList;\n        var cartesian;\n        var axis;\n\n        if (seriesModel) {\n            cartesian = seriesModel.coordinateSystem;\n            zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n        }\n        else if (xAxisModel && yAxisModel) {\n            cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n        }\n        else if (xAxisModel) {\n            axis = this.getAxis('x', xAxisModel.componentIndex);\n        }\n        else if (yAxisModel) {\n            axis = this.getAxis('y', yAxisModel.componentIndex);\n        }\n        // Lowest priority.\n        else if (gridModel) {\n            var grid = gridModel.coordinateSystem;\n            if (grid === this) {\n                cartesian = this._coordsList[0];\n            }\n        }\n\n        return {cartesian: cartesian, axis: axis};\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.containPoint = function (point) {\n        var coord = this._coordsList[0];\n        if (coord) {\n            return coord.containPoint(point);\n        }\n    };\n\n    /**\n     * Initialize cartesian coordinate systems\n     * @private\n     */\n    gridProto._initCartesian = function (gridModel, ecModel, api) {\n        var axisPositionUsed = {\n            left: false,\n            right: false,\n            top: false,\n            bottom: false\n        };\n\n        var axesMap = {\n            x: {},\n            y: {}\n        };\n        var axesCount = {\n            x: 0,\n            y: 0\n        };\n\n        /// Create axis\n        ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n        ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n        if (!axesCount.x || !axesCount.y) {\n            // Roll back when there no either x or y axis\n            this._axesMap = {};\n            this._axesList = [];\n            return;\n        }\n\n        this._axesMap = axesMap;\n\n        /// Create cartesian2d\n        each(axesMap.x, function (xAxis, xAxisIndex) {\n            each(axesMap.y, function (yAxis, yAxisIndex) {\n                var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n                var cartesian = new Cartesian2D(key);\n\n                cartesian.grid = this;\n                cartesian.model = gridModel;\n\n                this._coordsMap[key] = cartesian;\n                this._coordsList.push(cartesian);\n\n                cartesian.addAxis(xAxis);\n                cartesian.addAxis(yAxis);\n            }, this);\n        }, this);\n\n        function createAxisCreator(axisType) {\n            return function (axisModel, idx) {\n                if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n                    return;\n                }\n\n                var axisPosition = axisModel.get('position');\n                if (axisType === 'x') {\n                    // Fix position\n                    if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n                        // Default bottom of X\n                        axisPosition = 'bottom';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n                        }\n                    }\n                }\n                else {\n                    // Fix position\n                    if (axisPosition !== 'left' && axisPosition !== 'right') {\n                        // Default left of Y\n                        axisPosition = 'left';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n                        }\n                    }\n                }\n                axisPositionUsed[axisPosition] = true;\n\n                var axis = new Axis2D(\n                    axisType, axisHelper.createScaleByModel(axisModel),\n                    [0, 0],\n                    axisModel.get('type'),\n                    axisPosition\n                );\n\n                var isCategory = axis.type === 'category';\n                axis.onBand = isCategory && axisModel.get('boundaryGap');\n                axis.inverse = axisModel.get('inverse');\n\n                axis.onZero = axisModel.get('axisLine.onZero');\n                axis.onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex');\n\n                // Inject axis into axisModel\n                axisModel.axis = axis;\n\n                // Inject axisModel into axis\n                axis.model = axisModel;\n\n                // Inject grid info axis\n                axis.grid = this;\n\n                // Index of axis, can be used as key\n                axis.index = idx;\n\n                this._axesList.push(axis);\n\n                axesMap[axisType][idx] = axis;\n                axesCount[axisType]++;\n            };\n        }\n    };\n\n    /**\n     * Update cartesian properties from series\n     * @param  {module:echarts/model/Option} option\n     * @private\n     */\n    gridProto._updateScale = function (ecModel, gridModel) {\n        // Reset scale\n        zrUtil.each(this._axesList, function (axis) {\n            axis.scale.setExtent(Infinity, -Infinity);\n        });\n        ecModel.eachSeries(function (seriesModel) {\n            if (isCartesian2D(seriesModel)) {\n                var axesModels = findAxesModels(seriesModel, ecModel);\n                var xAxisModel = axesModels[0];\n                var yAxisModel = axesModels[1];\n\n                if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel)\n                    || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)\n                 ) {\n                    return;\n                }\n\n                var cartesian = this.getCartesian(\n                    xAxisModel.componentIndex, yAxisModel.componentIndex\n                );\n                var data = seriesModel.getData();\n                var xAxis = cartesian.getAxis('x');\n                var yAxis = cartesian.getAxis('y');\n\n                if (data.type === 'list') {\n                    unionExtent(data, xAxis, seriesModel);\n                    unionExtent(data, yAxis, seriesModel);\n                }\n            }\n        }, this);\n\n        function unionExtent(data, axis, seriesModel) {\n            each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n                axis.scale.unionExtentFromData(data, dim);\n            });\n        }\n    };\n\n    /**\n     * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n     * @return {Object} {baseAxes: [], otherAxes: []}\n     */\n    gridProto.getTooltipAxes = function (dim) {\n        var baseAxes = [];\n        var otherAxes = [];\n\n        each(this.getCartesians(), function (cartesian) {\n            var baseAxis = (dim != null && dim !== 'auto')\n                ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n            var otherAxis = cartesian.getOtherAxis(baseAxis);\n            zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n            zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n        });\n\n        return {baseAxes: baseAxes, otherAxes: otherAxes};\n    };\n\n    /**\n     * @inner\n     */\n    function updateAxisTransfrom(axis, coordBase) {\n        var axisExtent = axis.getExtent();\n        var axisExtentSum = axisExtent[0] + axisExtent[1];\n\n        // Fast transform\n        axis.toGlobalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord + coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n        axis.toLocalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord - coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n    }\n\n    var axesTypes = ['xAxis', 'yAxis'];\n    /**\n     * @inner\n     */\n    function findAxesModels(seriesModel, ecModel) {\n        return zrUtil.map(axesTypes, function (axisType) {\n            var axisModel = seriesModel.getReferringComponents(axisType)[0];\n\n            if (__DEV__) {\n                if (!axisModel) {\n                    throw new Error(axisType + ' \"' + zrUtil.retrieve(\n                        seriesModel.get(axisType + 'Index'),\n                        seriesModel.get(axisType + 'Id'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n            return axisModel;\n        });\n    }\n\n    /**\n     * @inner\n     */\n    function isCartesian2D(seriesModel) {\n        return seriesModel.get('coordinateSystem') === 'cartesian2d';\n    }\n\n    Grid.create = function (ecModel, api) {\n        var grids = [];\n        ecModel.eachComponent('grid', function (gridModel, idx) {\n            var grid = new Grid(gridModel, ecModel, api);\n            grid.name = 'grid_' + idx;\n            // dataSampling requires axis extent, so resize\n            // should be performed in create stage.\n            grid.resize(gridModel, api, true);\n\n            gridModel.coordinateSystem = grid;\n\n            grids.push(grid);\n        });\n\n        // Inject the coordinateSystems into seriesModel\n        ecModel.eachSeries(function (seriesModel) {\n            if (!isCartesian2D(seriesModel)) {\n                return;\n            }\n\n            var axesModels = findAxesModels(seriesModel, ecModel);\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            var gridModel = xAxisModel.getCoordSysModel();\n\n            if (__DEV__) {\n                if (!gridModel) {\n                    throw new Error(\n                        'Grid \"' + zrUtil.retrieve(\n                            xAxisModel.get('gridIndex'),\n                            xAxisModel.get('gridId'),\n                            0\n                        ) + '\" not found'\n                    );\n                }\n                if (xAxisModel.getCoordSysModel() !== yAxisModel.getCoordSysModel()) {\n                    throw new Error('xAxis and yAxis must use the same grid');\n                }\n            }\n\n            var grid = gridModel.coordinateSystem;\n\n            seriesModel.coordinateSystem = grid.getCartesian(\n                xAxisModel.componentIndex, yAxisModel.componentIndex\n            );\n        });\n\n        return grids;\n    };\n\n    // For deciding which dimensions to use when creating list data\n    Grid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\n\n    __webpack_require__(636).register('cartesian2d', Grid);\n\n    module.exports = Grid;\n\n\n/***/ }),\n\n/***/ 688:\n/***/ (function(module, exports) {\n\n\n\n    module.exports = function (seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n\n        // Encoding visual for all series include which is filtered for legend drawing\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n\n            var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n            var symbolSize = seriesModel.get('symbolSize');\n\n            data.setVisual({\n                legendSymbol: legendSymbol || symbolType,\n                symbol: symbolType,\n                symbolSize: symbolSize\n            });\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof symbolSize === 'function') {\n                    data.each(function (idx) {\n                        var rawValue = seriesModel.getRawValue(idx);\n                        // FIXME\n                        var params = seriesModel.getDataParams(idx);\n                        data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n                    });\n                }\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var itemSymbolType = itemModel.getShallow('symbol', true);\n                    var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n                    // If has item symbol\n                    if (itemSymbolType != null) {\n                        data.setItemVisual(idx, 'symbol', itemSymbolType);\n                    }\n                    if (itemSymbolSize != null) {\n                        // PENDING Transform symbolSize ?\n                        data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n                    }\n                });\n            }\n        });\n    };\n\n\n/***/ }),\n\n/***/ 708:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(606);\n\n    var echartsAPIList = [\n        'getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed',\n        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption',\n        'getViewOfComponentModel', 'getViewOfSeriesModel'\n    ];\n    // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\n    function ExtensionAPI(chartInstance) {\n        zrUtil.each(echartsAPIList, function (name) {\n            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n        }, this);\n    }\n\n    module.exports = ExtensionAPI;\n\n\n/***/ }),\n\n/***/ 709:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n\n    var graphic = __webpack_require__(608);\n    var Symbol = __webpack_require__(657);\n\n    /**\n     * @constructor\n     * @alias module:echarts/chart/helper/SymbolDraw\n     * @param {module:zrender/graphic/Group} [symbolCtor]\n     */\n    function SymbolDraw(symbolCtor) {\n        this.group = new graphic.Group();\n\n        this._symbolCtor = symbolCtor || Symbol;\n    }\n\n    var symbolDrawProto = SymbolDraw.prototype;\n\n    function symbolNeedsDraw(data, idx, isIgnore) {\n        var point = data.getItemLayout(idx);\n        // Is an object\n        // if (point && point.hasOwnProperty('point')) {\n        //     point = point.point;\n        // }\n        return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx))\n                    && data.getItemVisual(idx, 'symbol') !== 'none';\n    }\n    /**\n     * Update symbols draw by new data\n     * @param {module:echarts/data/List} data\n     * @param {Array.<boolean>} [isIgnore]\n     */\n    symbolDrawProto.updateData = function (data, isIgnore) {\n        var group = this.group;\n        var seriesModel = data.hostModel;\n        var oldData = this._data;\n\n        var SymbolCtor = this._symbolCtor;\n\n        var seriesScope = {\n            itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n            hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n            symbolRotate: seriesModel.get('symbolRotate'),\n            symbolOffset: seriesModel.get('symbolOffset'),\n            hoverAnimation: seriesModel.get('hoverAnimation'),\n\n            labelModel: seriesModel.getModel('label.normal'),\n            hoverLabelModel: seriesModel.getModel('label.emphasis'),\n            cursorStyle: seriesModel.get('cursor')\n        };\n\n        data.diff(oldData)\n            .add(function (newIdx) {\n                var point = data.getItemLayout(newIdx);\n                if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n                    symbolEl.attr('position', point);\n                    data.setItemGraphicEl(newIdx, symbolEl);\n                    group.add(symbolEl);\n                }\n            })\n            .update(function (newIdx, oldIdx) {\n                var symbolEl = oldData.getItemGraphicEl(oldIdx);\n                var point = data.getItemLayout(newIdx);\n                if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    group.remove(symbolEl);\n                    return;\n                }\n                if (!symbolEl) {\n                    symbolEl = new SymbolCtor(data, newIdx);\n                    symbolEl.attr('position', point);\n                }\n                else {\n                    symbolEl.updateData(data, newIdx, seriesScope);\n                    graphic.updateProps(symbolEl, {\n                        position: point\n                    }, seriesModel);\n                }\n\n                // Add back\n                group.add(symbolEl);\n\n                data.setItemGraphicEl(newIdx, symbolEl);\n            })\n            .remove(function (oldIdx) {\n                var el = oldData.getItemGraphicEl(oldIdx);\n                el && el.fadeOut(function () {\n                    group.remove(el);\n                });\n            })\n            .execute();\n\n        this._data = data;\n    };\n\n    symbolDrawProto.updateLayout = function () {\n        var data = this._data;\n        if (data) {\n            // Not use animation\n            data.eachItemGraphicEl(function (el, idx) {\n                var point = data.getItemLayout(idx);\n                el.attr('position', point);\n            });\n        }\n    };\n\n    symbolDrawProto.remove = function (enableAnimation) {\n        var group = this.group;\n        var data = this._data;\n        if (data) {\n            if (enableAnimation) {\n                data.eachItemGraphicEl(function (el) {\n                    el.fadeOut(function () {\n                        group.remove(el);\n                    });\n                });\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    };\n\n    module.exports = SymbolDraw;\n\n\n/***/ }),\n\n/***/ 710:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var graphic = __webpack_require__(608);\n    var modelUtil = __webpack_require__(609);\n\n    var helper = {};\n\n    helper.findLabelValueDim = function (data) {\n        var valueDim;\n        var labelDims = modelUtil.otherDimToDataDim(data, 'label');\n\n        if (labelDims.length) {\n            valueDim = labelDims[0];\n        }\n        else {\n            // Get last value dim\n            var dimensions = data.dimensions.slice();\n            var dataType;\n            while (dimensions.length && (\n                valueDim = dimensions.pop(),\n                dataType = data.getDimensionInfo(valueDim).type,\n                dataType === 'ordinal' || dataType === 'time'\n            )) {} // jshint ignore:line\n        }\n\n        return valueDim;\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n\n/***/ 711:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var echarts = __webpack_require__(607);\n    var PRIORITY = echarts.PRIORITY;\n\n    __webpack_require__(712);\n    __webpack_require__(713);\n\n    echarts.registerVisual(zrUtil.curry(\n        __webpack_require__(688), 'line', 'circle', 'line'\n    ));\n    echarts.registerLayout(zrUtil.curry(\n        __webpack_require__(741), 'line'\n    ));\n\n    // Down sample after filter\n    echarts.registerProcessor(PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(\n        __webpack_require__(753), 'line'\n    ));\n\n    // In case developer forget to include grid component\n    __webpack_require__(683);\n\n\n/***/ }),\n\n/***/ 712:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var createListFromArray = __webpack_require__(648);\n    var SeriesModel = __webpack_require__(640);\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.line',\n\n        dependencies: ['grid', 'polar'],\n\n        getInitialData: function (option, ecModel) {\n            if (__DEV__) {\n                var coordSys = option.coordinateSystem;\n                if (coordSys !== 'polar' && coordSys !== 'cartesian2d') {\n                    throw new Error('Line not support coordinateSystem besides cartesian and polar');\n                }\n            }\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // stack: null\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // polarIndex: 0,\n\n            // If clip the overflow value\n            clipOverflow: true,\n            // cursor: null,\n\n            label: {\n                normal: {\n                    position: 'top'\n                }\n            },\n            // itemStyle: {\n            //     normal: {},\n            //     emphasis: {}\n            // },\n            lineStyle: {\n                normal: {\n                    width: 2,\n                    type: 'solid'\n                }\n            },\n            // areaStyle: {},\n            // false, 'start', 'end', 'middle'\n            step: false,\n\n            // Disabled if step is true\n            smooth: false,\n            smoothMonotone: null,\n            // 拐点图形类型\n            symbol: 'emptyCircle',\n            // 拐点图形大小\n            symbolSize: 4,\n            // 拐点图形旋转控制\n            symbolRotate: null,\n\n            // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n            showSymbol: true,\n            // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n            showAllSymbol: false,\n\n            // 是否连接断点\n            connectNulls: false,\n\n            // 数据过滤，'average', 'max', 'min', 'sum'\n            sampling: 'none',\n\n            animationEasing: 'linear',\n\n            // Disable progressive\n            progressive: 0,\n            hoverLayerThreshold: Infinity\n        }\n    });\n\n\n/***/ }),\n\n/***/ 713:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// FIXME step not support polar\n\n\n    var zrUtil = __webpack_require__(606);\n    var SymbolDraw = __webpack_require__(709);\n    var Symbol = __webpack_require__(657);\n    var lineAnimationDiff = __webpack_require__(714);\n    var graphic = __webpack_require__(608);\n    var modelUtil = __webpack_require__(609);\n    var polyHelper = __webpack_require__(715);\n    var ChartView = __webpack_require__(641);\n\n    function isPointsSame(points1, points2) {\n        if (points1.length !== points2.length) {\n            return;\n        }\n        for (var i = 0; i < points1.length; i++) {\n            var p1 = points1[i];\n            var p2 = points2[i];\n            if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n                return;\n            }\n        }\n        return true;\n    }\n\n    function getSmooth(smooth) {\n        return typeof (smooth) === 'number' ? smooth : (smooth ? 0.3 : 0);\n    }\n\n    function getAxisExtentWithGap(axis) {\n        var extent = axis.getGlobalExtent();\n        if (axis.onBand) {\n            // Remove extra 1px to avoid line miter in clipped edge\n            var halfBandWidth = axis.getBandWidth() / 2 - 1;\n            var dir = extent[1] > extent[0] ? 1 : -1;\n            extent[0] += dir * halfBandWidth;\n            extent[1] -= dir * halfBandWidth;\n        }\n        return extent;\n    }\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n    /**\n     * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n     * @param {module:echarts/data/List} data\n     * @param {Array.<Array.<number>>} points\n     * @private\n     */\n    function getStackedOnPoints(coordSys, data) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        return data.mapArray([valueDim], function (val, idx) {\n            var stackedOnSameSign;\n            var stackedOn = data.stackedOn;\n            // Find first stacked value with same sign\n            while (stackedOn &&\n                sign(stackedOn.get(valueDim, idx)) === sign(val)\n            ) {\n                stackedOnSameSign = stackedOn;\n                break;\n            }\n            var stackedData = [];\n            stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n            stackedData[1 - baseDataOffset] = stackedOnSameSign\n                ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n            return coordSys.dataToPoint(stackedData);\n        }, true);\n    }\n\n    function createGridClipShape(cartesian, hasAnimation, seriesModel) {\n        var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n        var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n        var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n\n        var x = Math.min(xExtent[0], xExtent[1]);\n        var y = Math.min(yExtent[0], yExtent[1]);\n        var width = Math.max(xExtent[0], xExtent[1]) - x;\n        var height = Math.max(yExtent[0], yExtent[1]) - y;\n        var lineWidth = seriesModel.get('lineStyle.normal.width') || 2;\n        // Expand clip shape to avoid clipping when line value exceeds axis\n        var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n        if (isHorizontal) {\n            y -= expandSize;\n            height += expandSize * 2;\n        }\n        else {\n            x -= expandSize;\n            width += expandSize * 2;\n        }\n\n        var clipPath = new graphic.Rect({\n            shape: {\n                x: x,\n                y: y,\n                width: width,\n                height: height\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n            graphic.initProps(clipPath, {\n                shape: {\n                    width: width,\n                    height: height\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createPolarClipShape(polar, hasAnimation, seriesModel) {\n        var angleAxis = polar.getAngleAxis();\n        var radiusAxis = polar.getRadiusAxis();\n\n        var radiusExtent = radiusAxis.getExtent();\n        var angleExtent = angleAxis.getExtent();\n\n        var RADIAN = Math.PI / 180;\n\n        var clipPath = new graphic.Sector({\n            shape: {\n                cx: polar.cx,\n                cy: polar.cy,\n                r0: radiusExtent[0],\n                r: radiusExtent[1],\n                startAngle: -angleExtent[0] * RADIAN,\n                endAngle: -angleExtent[1] * RADIAN,\n                clockwise: angleAxis.inverse\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: -angleExtent[1] * RADIAN\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createClipShape(coordSys, hasAnimation, seriesModel) {\n        return coordSys.type === 'polar'\n            ? createPolarClipShape(coordSys, hasAnimation, seriesModel)\n            : createGridClipShape(coordSys, hasAnimation, seriesModel);\n    }\n\n    function turnPointsIntoStep(points, coordSys, stepTurnAt) {\n        var baseAxis = coordSys.getBaseAxis();\n        var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n\n        var stepPoints = [];\n        for (var i = 0; i < points.length - 1; i++) {\n            var nextPt = points[i + 1];\n            var pt = points[i];\n            stepPoints.push(pt);\n\n            var stepPt = [];\n            switch (stepTurnAt) {\n                case 'end':\n                    stepPt[baseIndex] = nextPt[baseIndex];\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n                    break;\n                case 'middle':\n                    // default is start\n                    var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n                    var stepPt2 = [];\n                    stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n                    stepPoints.push(stepPt);\n                    stepPoints.push(stepPt2);\n                    break;\n                default:\n                    stepPt[baseIndex] = pt[baseIndex];\n                    stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n            }\n        }\n        // Last points\n        points[i] && stepPoints.push(points[i]);\n        return stepPoints;\n    }\n\n    function getVisualGradient(data, coordSys) {\n        var visualMetaList = data.getVisual('visualMeta');\n        if (!visualMetaList || !visualMetaList.length || !data.count()) {\n            // When data.count() is 0, gradient range can not be calculated.\n            return;\n        }\n\n        var visualMeta;\n        for (var i = visualMetaList.length - 1; i >= 0; i--) {\n            // Can only be x or y\n            if (visualMetaList[i].dimension < 2) {\n                visualMeta = visualMetaList[i];\n                break;\n            }\n        }\n        if (!visualMeta || coordSys.type !== 'cartesian2d') {\n            if (__DEV__) {\n                console.warn('Visual map on line style only support x or y dimension.');\n            }\n            return;\n        }\n\n        // If the area to be rendered is bigger than area defined by LinearGradient,\n        // the canvas spec prescribes that the color of the first stop and the last\n        // stop should be used. But if two stops are added at offset 0, in effect\n        // browsers use the color of the second stop to render area outside\n        // LinearGradient. So we can only infinitesimally extend area defined in\n        // LinearGradient to render `outerColors`.\n\n        var dimension = visualMeta.dimension;\n        var dimName = data.dimensions[dimension];\n        var axis = coordSys.getAxis(dimName);\n\n        // dataToCoor mapping may not be linear, but must be monotonic.\n        var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n            return {\n                coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n                color: stop.color\n            };\n        });\n        var stopLen = colorStops.length;\n        var outerColors = visualMeta.outerColors.slice();\n\n        if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n            colorStops.reverse();\n            outerColors.reverse();\n        }\n\n        var tinyExtent = 10; // Arbitrary value: 10px\n        var minCoord = colorStops[0].coord - tinyExtent;\n        var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n        var coordSpan = maxCoord - minCoord;\n\n        if (coordSpan < 1e-3) {\n            return 'transparent';\n        }\n\n        zrUtil.each(colorStops, function (stop) {\n            stop.offset = (stop.coord - minCoord) / coordSpan;\n        });\n        colorStops.push({\n            offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n            color: outerColors[1] || 'transparent'\n        });\n        colorStops.unshift({ // notice colorStops.length have been changed.\n            offset: stopLen ? colorStops[0].offset : 0.5,\n            color: outerColors[0] || 'transparent'\n        });\n\n        // zrUtil.each(colorStops, function (colorStop) {\n        //     // Make sure each offset has rounded px to avoid not sharp edge\n        //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n        // });\n\n        var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n        gradient[dimName] = minCoord;\n        gradient[dimName + '2'] = maxCoord;\n\n        return gradient;\n    }\n\n    module.exports = ChartView.extend({\n\n        type: 'line',\n\n        init: function () {\n            var lineGroup = new graphic.Group();\n\n            var symbolDraw = new SymbolDraw();\n            this.group.add(symbolDraw.group);\n\n            this._symbolDraw = symbolDraw;\n            this._lineGroup = lineGroup;\n        },\n\n        render: function (seriesModel, ecModel, api) {\n            var coordSys = seriesModel.coordinateSystem;\n            var group = this.group;\n            var data = seriesModel.getData();\n            var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n            var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n\n            var points = data.mapArray(data.getItemLayout, true);\n\n            var isCoordSysPolar = coordSys.type === 'polar';\n            var prevCoordSys = this._coordSys;\n\n            var symbolDraw = this._symbolDraw;\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n\n            var lineGroup = this._lineGroup;\n\n            var hasAnimation = seriesModel.get('animation');\n\n            var isAreaChart = !areaStyleModel.isEmpty();\n            var stackedOnPoints = getStackedOnPoints(coordSys, data);\n\n            var showSymbol = seriesModel.get('showSymbol');\n\n            var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol')\n                && this._getSymbolIgnoreFunc(data, coordSys);\n\n            // Remove temporary symbols\n            var oldData = this._data;\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            // Remove previous created symbols if showSymbol changed to false\n            if (!showSymbol) {\n                symbolDraw.remove();\n            }\n\n            group.add(lineGroup);\n\n            // FIXME step not support polar\n            var step = !isCoordSysPolar && seriesModel.get('step');\n            // Initialization animation or coordinate system changed\n            if (\n                !(polyline && prevCoordSys.type === coordSys.type && step === this._step)\n            ) {\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                if (step) {\n                    // TODO If stacked series is not step\n                    points = turnPointsIntoStep(points, coordSys, step);\n                    stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                }\n\n                polyline = this._newPolyline(points, coordSys, hasAnimation);\n                if (isAreaChart) {\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n            }\n            else {\n                if (isAreaChart && !polygon) {\n                    // If areaStyle is added\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                else if (polygon && !isAreaChart) {\n                    // If areaStyle is removed\n                    lineGroup.remove(polygon);\n                    polygon = this._polygon = null;\n                }\n\n                // Update clipPath\n                lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel));\n\n                // Always update, or it is wrong in the case turning on legend\n                // because points are not changed\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                // Stop symbol animation and sync with line points\n                // FIXME performance?\n                data.eachItemGraphicEl(function (el) {\n                    el.stopAnimation(true);\n                });\n\n                // In the case data zoom triggerred refreshing frequently\n                // Data may not change if line has a category axis. So it should animate nothing\n                if (!isPointsSame(this._stackedOnPoints, stackedOnPoints)\n                    || !isPointsSame(this._points, points)\n                ) {\n                    if (hasAnimation) {\n                        this._updateAnimation(\n                            data, stackedOnPoints, coordSys, api, step\n                        );\n                    }\n                    else {\n                        // Not do it in update with animation\n                        if (step) {\n                            // TODO If stacked series is not step\n                            points = turnPointsIntoStep(points, coordSys, step);\n                            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                        }\n\n                        polyline.setShape({\n                            points: points\n                        });\n                        polygon && polygon.setShape({\n                            points: points,\n                            stackedOnPoints: stackedOnPoints\n                        });\n                    }\n                }\n            }\n\n            var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n\n            polyline.useStyle(zrUtil.defaults(\n                // Use color in lineStyle first\n                lineStyleModel.getLineStyle(),\n                {\n                    fill: 'none',\n                    stroke: visualColor,\n                    lineJoin: 'bevel'\n                }\n            ));\n\n            var smooth = seriesModel.get('smooth');\n            smooth = getSmooth(seriesModel.get('smooth'));\n            polyline.setShape({\n                smooth: smooth,\n                smoothMonotone: seriesModel.get('smoothMonotone'),\n                connectNulls: seriesModel.get('connectNulls')\n            });\n\n            if (polygon) {\n                var stackedOn = data.stackedOn;\n                var stackedOnSmooth = 0;\n\n                polygon.useStyle(zrUtil.defaults(\n                    areaStyleModel.getAreaStyle(),\n                    {\n                        fill: visualColor,\n                        opacity: 0.7,\n                        lineJoin: 'bevel'\n                    }\n                ));\n\n                if (stackedOn) {\n                    var stackedOnSeries = stackedOn.hostModel;\n                    stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n                }\n\n                polygon.setShape({\n                    smooth: smooth,\n                    stackedOnSmooth: stackedOnSmooth,\n                    smoothMonotone: seriesModel.get('smoothMonotone'),\n                    connectNulls: seriesModel.get('connectNulls')\n                });\n            }\n\n            this._data = data;\n            // Save the coordinate system for transition animation when data changed\n            this._coordSys = coordSys;\n            this._stackedOnPoints = stackedOnPoints;\n            this._points = points;\n            this._step = step;\n        },\n\n        dispose: function () {},\n\n        highlight: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n            if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (!symbol) {\n                    // Create a temporary symbol if it is not exists\n                    var pt = data.getItemLayout(dataIndex);\n                    if (!pt) {\n                        // Null data\n                        return;\n                    }\n                    symbol = new Symbol(data, dataIndex);\n                    symbol.position = pt;\n                    symbol.setZ(\n                        seriesModel.get('zlevel'),\n                        seriesModel.get('z')\n                    );\n                    symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n                    symbol.__temp = true;\n                    data.setItemGraphicEl(dataIndex, symbol);\n\n                    // Stop scale animation\n                    symbol.stopSymbolAnimation(true);\n\n                    this.group.add(symbol);\n                }\n                symbol.highlight();\n            }\n            else {\n                // Highlight whole series\n                ChartView.prototype.highlight.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        downplay: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n            if (dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (symbol) {\n                    if (symbol.__temp) {\n                        data.setItemGraphicEl(dataIndex, null);\n                        this.group.remove(symbol);\n                    }\n                    else {\n                        symbol.downplay();\n                    }\n                }\n            }\n            else {\n                // FIXME\n                // can not downplay completely.\n                // Downplay whole series\n                ChartView.prototype.downplay.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolyline: function (points) {\n            var polyline = this._polyline;\n            // Remove previous created polyline\n            if (polyline) {\n                this._lineGroup.remove(polyline);\n            }\n\n            polyline = new polyHelper.Polyline({\n                shape: {\n                    points: points\n                },\n                silent: true,\n                z2: 10\n            });\n\n            this._lineGroup.add(polyline);\n\n            this._polyline = polyline;\n\n            return polyline;\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} stackedOnPoints\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolygon: function (points, stackedOnPoints) {\n            var polygon = this._polygon;\n            // Remove previous created polygon\n            if (polygon) {\n                this._lineGroup.remove(polygon);\n            }\n\n            polygon = new polyHelper.Polygon({\n                shape: {\n                    points: points,\n                    stackedOnPoints: stackedOnPoints\n                },\n                silent: true\n            });\n\n            this._lineGroup.add(polygon);\n\n            this._polygon = polygon;\n            return polygon;\n        },\n        /**\n         * @private\n         */\n        _getSymbolIgnoreFunc: function (data, coordSys) {\n            var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n            // `getLabelInterval` is provided by echarts/component/axis\n            if (categoryAxis && categoryAxis.isLabelIgnored) {\n                return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n            }\n        },\n\n        /**\n         * @private\n         */\n        // FIXME Two value axis\n        _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n            var seriesModel = data.hostModel;\n\n            var diff = lineAnimationDiff(\n                this._data, data,\n                this._stackedOnPoints, stackedOnPoints,\n                this._coordSys, coordSys\n            );\n\n            var current = diff.current;\n            var stackedOnCurrent = diff.stackedOnCurrent;\n            var next = diff.next;\n            var stackedOnNext = diff.stackedOnNext;\n            if (step) {\n                // TODO If stacked series is not step\n                current = turnPointsIntoStep(diff.current, coordSys, step);\n                stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n                next = turnPointsIntoStep(diff.next, coordSys, step);\n                stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n            }\n            // `diff.current` is subset of `current` (which should be ensured by\n            // turnPointsIntoStep), so points in `__points` can be updated when\n            // points in `current` are update during animation.\n            polyline.shape.__points = diff.current;\n            polyline.shape.points = current;\n\n            graphic.updateProps(polyline, {\n                shape: {\n                    points: next\n                }\n            }, seriesModel);\n\n            if (polygon) {\n                polygon.setShape({\n                    points: current,\n                    stackedOnPoints: stackedOnCurrent\n                });\n                graphic.updateProps(polygon, {\n                    shape: {\n                        points: next,\n                        stackedOnPoints: stackedOnNext\n                    }\n                }, seriesModel);\n            }\n\n            var updatedDataInfo = [];\n            var diffStatus = diff.status;\n\n            for (var i = 0; i < diffStatus.length; i++) {\n                var cmd = diffStatus[i].cmd;\n                if (cmd === '=') {\n                    var el = data.getItemGraphicEl(diffStatus[i].idx1);\n                    if (el) {\n                        updatedDataInfo.push({\n                            el: el,\n                            ptIdx: i    // Index of points\n                        });\n                    }\n                }\n            }\n\n            if (polyline.animators && polyline.animators.length) {\n                polyline.animators[0].during(function () {\n                    for (var i = 0; i < updatedDataInfo.length; i++) {\n                        var el = updatedDataInfo[i].el;\n                        el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n                    }\n                });\n            }\n        },\n\n        remove: function (ecModel) {\n            var group = this.group;\n            var oldData = this._data;\n            this._lineGroup.removeAll();\n            this._symbolDraw.remove(true);\n            // Remove temporary created elements when highlighting\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            this._polyline =\n            this._polygon =\n            this._coordSys =\n            this._points =\n            this._stackedOnPoints =\n            this._data = null;\n        }\n    });\n\n\n/***/ }),\n\n/***/ 714:\n/***/ (function(module, exports) {\n\n\n\n    // var arrayDiff = require('zrender/lib/core/arrayDiff');\n    // 'zrender/core/arrayDiff' has been used before, but it did\n    // not do well in performance when roam with fixed dataZoom window.\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n\n    function getStackedOnPoint(coordSys, data, idx) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        var stackedOnSameSign;\n        var stackedOn = data.stackedOn;\n        var val = data.get(valueDim, idx);\n        // Find first stacked value with same sign\n        while (stackedOn &&\n            sign(stackedOn.get(valueDim, idx)) === sign(val)\n        ) {\n            stackedOnSameSign = stackedOn;\n            break;\n        }\n        var stackedData = [];\n        stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n        stackedData[1 - baseDataOffset] = stackedOnSameSign\n            ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n        return coordSys.dataToPoint(stackedData);\n    }\n\n    // function convertToIntId(newIdList, oldIdList) {\n    //     // Generate int id instead of string id.\n    //     // Compare string maybe slow in score function of arrDiff\n\n    //     // Assume id in idList are all unique\n    //     var idIndicesMap = {};\n    //     var idx = 0;\n    //     for (var i = 0; i < newIdList.length; i++) {\n    //         idIndicesMap[newIdList[i]] = idx;\n    //         newIdList[i] = idx++;\n    //     }\n    //     for (var i = 0; i < oldIdList.length; i++) {\n    //         var oldId = oldIdList[i];\n    //         // Same with newIdList\n    //         if (idIndicesMap[oldId]) {\n    //             oldIdList[i] = idIndicesMap[oldId];\n    //         }\n    //         else {\n    //             oldIdList[i] = idx++;\n    //         }\n    //     }\n    // }\n\n    function diffData(oldData, newData) {\n        var diffResult = [];\n\n        newData.diff(oldData)\n            .add(function (idx) {\n                diffResult.push({cmd: '+', idx: idx});\n            })\n            .update(function (newIdx, oldIdx) {\n                diffResult.push({cmd: '=', idx: oldIdx, idx1: newIdx});\n            })\n            .remove(function (idx) {\n                diffResult.push({cmd: '-', idx: idx});\n            })\n            .execute();\n\n        return diffResult;\n    }\n\n    module.exports = function (\n        oldData, newData,\n        oldStackedOnPoints, newStackedOnPoints,\n        oldCoordSys, newCoordSys\n    ) {\n        var diff = diffData(oldData, newData);\n\n        // var newIdList = newData.mapArray(newData.getId);\n        // var oldIdList = oldData.mapArray(oldData.getId);\n\n        // convertToIntId(newIdList, oldIdList);\n\n        // // FIXME One data ?\n        // diff = arrayDiff(oldIdList, newIdList);\n\n        var currPoints = [];\n        var nextPoints = [];\n        // Points for stacking base line\n        var currStackedPoints = [];\n        var nextStackedPoints = [];\n\n        var status = [];\n        var sortedIndices = [];\n        var rawIndices = [];\n        var dims = newCoordSys.dimensions;\n        for (var i = 0; i < diff.length; i++) {\n            var diffItem = diff[i];\n            var pointAdded = true;\n\n            // FIXME, animation is not so perfect when dataZoom window moves fast\n            // Which is in case remvoing or add more than one data in the tail or head\n            switch (diffItem.cmd) {\n                case '=':\n                    var currentPt = oldData.getItemLayout(diffItem.idx);\n                    var nextPt = newData.getItemLayout(diffItem.idx1);\n                    // If previous data is NaN, use next point directly\n                    if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n                        currentPt = nextPt.slice();\n                    }\n                    currPoints.push(currentPt);\n                    nextPoints.push(nextPt);\n\n                    currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n                    nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n\n                    rawIndices.push(newData.getRawIndex(diffItem.idx1));\n                    break;\n                case '+':\n                    var idx = diffItem.idx;\n                    currPoints.push(\n                        oldCoordSys.dataToPoint([\n                            newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)\n                        ])\n                    );\n\n                    nextPoints.push(newData.getItemLayout(idx).slice());\n\n                    currStackedPoints.push(\n                        getStackedOnPoint(oldCoordSys, newData, idx)\n                    );\n                    nextStackedPoints.push(newStackedOnPoints[idx]);\n\n                    rawIndices.push(newData.getRawIndex(idx));\n                    break;\n                case '-':\n                    var idx = diffItem.idx;\n                    var rawIndex = oldData.getRawIndex(idx);\n                    // Data is replaced. In the case of dynamic data queue\n                    // FIXME FIXME FIXME\n                    if (rawIndex !== idx) {\n                        currPoints.push(oldData.getItemLayout(idx));\n                        nextPoints.push(newCoordSys.dataToPoint([\n                            oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)\n                        ]));\n\n                        currStackedPoints.push(oldStackedOnPoints[idx]);\n                        nextStackedPoints.push(\n                            getStackedOnPoint(\n                                newCoordSys, oldData, idx\n                            )\n                        );\n\n                        rawIndices.push(rawIndex);\n                    }\n                    else {\n                        pointAdded = false;\n                    }\n            }\n\n            // Original indices\n            if (pointAdded) {\n                status.push(diffItem);\n                sortedIndices.push(sortedIndices.length);\n            }\n        }\n\n        // Diff result may be crossed if all items are changed\n        // Sort by data index\n        sortedIndices.sort(function (a, b) {\n            return rawIndices[a] - rawIndices[b];\n        });\n\n        var sortedCurrPoints = [];\n        var sortedNextPoints = [];\n\n        var sortedCurrStackedPoints = [];\n        var sortedNextStackedPoints = [];\n\n        var sortedStatus = [];\n        for (var i = 0; i < sortedIndices.length; i++) {\n            var idx = sortedIndices[i];\n            sortedCurrPoints[i] = currPoints[idx];\n            sortedNextPoints[i] = nextPoints[idx];\n\n            sortedCurrStackedPoints[i] = currStackedPoints[idx];\n            sortedNextStackedPoints[i] = nextStackedPoints[idx];\n\n            sortedStatus[i] = status[idx];\n        }\n\n        return {\n            current: sortedCurrPoints,\n            next: sortedNextPoints,\n\n            stackedOnCurrent: sortedCurrStackedPoints,\n            stackedOnNext: sortedNextStackedPoints,\n\n            status: sortedStatus\n        };\n    };\n\n\n/***/ }),\n\n/***/ 715:\n/***/ (function(module, exports, __webpack_require__) {\n\n// Poly path support NaN point\n\n\n    var Path = __webpack_require__(612);\n    var vec2 = __webpack_require__(611);\n    var fixClipWithShadow = __webpack_require__(677);\n\n    var vec2Min = vec2.min;\n    var vec2Max = vec2.max;\n\n    var scaleAndAdd = vec2.scaleAndAdd;\n    var v2Copy = vec2.copy;\n\n    // Temporary variable\n    var v = [];\n    var cp0 = [];\n    var cp1 = [];\n\n    function isPointNull(p) {\n        return isNaN(p[0]) || isNaN(p[1]);\n    }\n\n    function drawSegment(\n        ctx, points, start, segLen, allLen,\n        dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls\n    ) {\n        var prevIdx = 0;\n        var idx = start;\n        for (var k = 0; k < segLen; k++) {\n            var p = points[idx];\n            if (idx >= allLen || idx < 0) {\n                break;\n            }\n            if (isPointNull(p)) {\n                if (connectNulls) {\n                    idx += dir;\n                    continue;\n                }\n                break;\n            }\n\n            if (idx === start) {\n                ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n                v2Copy(cp0, p);\n            }\n            else {\n                if (smooth > 0) {\n                    var nextIdx = idx + dir;\n                    var nextP = points[nextIdx];\n                    if (connectNulls) {\n                        // Find next point not null\n                        while (nextP && isPointNull(points[nextIdx])) {\n                            nextIdx += dir;\n                            nextP = points[nextIdx];\n                        }\n                    }\n\n                    var ratioNextSeg = 0.5;\n                    var prevP = points[prevIdx];\n                    var nextP = points[nextIdx];\n                    // Last point\n                    if (!nextP || isPointNull(nextP)) {\n                        v2Copy(cp1, p);\n                    }\n                    else {\n                        // If next data is null in not connect case\n                        if (isPointNull(nextP) && !connectNulls) {\n                            nextP = p;\n                        }\n\n                        vec2.sub(v, nextP, prevP);\n\n                        var lenPrevSeg;\n                        var lenNextSeg;\n                        if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n                            var dim = smoothMonotone === 'x' ? 0 : 1;\n                            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n                            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n                        }\n                        else {\n                            lenPrevSeg = vec2.dist(p, prevP);\n                            lenNextSeg = vec2.dist(p, nextP);\n                        }\n\n                        // Use ratio of seg length\n                        ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n\n                        scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n                    }\n                    // Smooth constraint\n                    vec2Min(cp0, cp0, smoothMax);\n                    vec2Max(cp0, cp0, smoothMin);\n                    vec2Min(cp1, cp1, smoothMax);\n                    vec2Max(cp1, cp1, smoothMin);\n\n                    ctx.bezierCurveTo(\n                        cp0[0], cp0[1],\n                        cp1[0], cp1[1],\n                        p[0], p[1]\n                    );\n                    // cp0 of next segment\n                    scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n                }\n                else {\n                    ctx.lineTo(p[0], p[1]);\n                }\n            }\n\n            prevIdx = idx;\n            idx += dir;\n        }\n\n        return k;\n    }\n\n    function getBoundingBox(points, smoothConstraint) {\n        var ptMin = [Infinity, Infinity];\n        var ptMax = [-Infinity, -Infinity];\n        if (smoothConstraint) {\n            for (var i = 0; i < points.length; i++) {\n                var pt = points[i];\n                if (pt[0] < ptMin[0]) { ptMin[0] = pt[0]; }\n                if (pt[1] < ptMin[1]) { ptMin[1] = pt[1]; }\n                if (pt[0] > ptMax[0]) { ptMax[0] = pt[0]; }\n                if (pt[1] > ptMax[1]) { ptMax[1] = pt[1]; }\n            }\n        }\n        return {\n            min: smoothConstraint ? ptMin : ptMax,\n            max: smoothConstraint ? ptMax : ptMin\n        };\n    }\n\n    module.exports = {\n\n        Polyline: Path.extend({\n\n            type: 'ec-polyline',\n\n            shape: {\n                points: [],\n\n                smooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            style: {\n                fill: null,\n\n                stroke: '#000'\n            },\n\n            brush: fixClipWithShadow(Path.prototype.brush),\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n\n                var i = 0;\n                var len = points.length;\n\n                var result = getBoundingBox(points, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    i += drawSegment(\n                        ctx, points, i, len, len,\n                        1, result.min, result.max, shape.smooth,\n                        shape.smoothMonotone, shape.connectNulls\n                    ) + 1;\n                }\n            }\n        }),\n\n        Polygon: Path.extend({\n\n            type: 'ec-polygon',\n\n            shape: {\n                points: [],\n\n                // Offset between stacked base points and points\n                stackedOnPoints: [],\n\n                smooth: 0,\n\n                stackedOnSmooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            brush: fixClipWithShadow(Path.prototype.brush),\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n                var stackedOnPoints = shape.stackedOnPoints;\n\n                var i = 0;\n                var len = points.length;\n                var smoothMonotone = shape.smoothMonotone;\n                var bbox = getBoundingBox(points, shape.smoothConstraint);\n                var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    var k = drawSegment(\n                        ctx, points, i, len, len,\n                        1, bbox.min, bbox.max, shape.smooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    drawSegment(\n                        ctx, stackedOnPoints, i + k - 1, k, len,\n                        -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    i += k + 1;\n\n                    ctx.closePath();\n                }\n            }\n        })\n    };\n\n\n/***/ }),\n\n/***/ 716:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// TODO boundaryGap\n\n\n    __webpack_require__(663);\n\n    __webpack_require__(717);\n\n\n/***/ }),\n\n/***/ 717:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var graphic = __webpack_require__(608);\n    var AxisBuilder = __webpack_require__(649);\n    var AxisView = __webpack_require__(658);\n    var cartesianAxisHelper = __webpack_require__(659);\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\n    var getInterval = AxisBuilder.getInterval;\n\n    var axisBuilderAttrs = [\n        'axisLine', 'axisLabel', 'axisTick', 'axisName'\n    ];\n    var selfBuilderAttrs = [\n        'splitArea', 'splitLine'\n    ];\n\n    // function getAlignWithLabel(model, axisModel) {\n    //     var alignWithLabel = model.get('alignWithLabel');\n    //     if (alignWithLabel === 'auto') {\n    //         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n    //     }\n    //     return alignWithLabel;\n    // }\n\n    var CartesianAxisView = AxisView.extend({\n\n        type: 'cartesianAxis',\n\n        axisPointerClass: 'CartesianAxisPointer',\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n\n            this.group.removeAll();\n\n            var oldAxisGroup = this._axisGroup;\n            this._axisGroup = new graphic.Group();\n\n            this.group.add(this._axisGroup);\n\n            if (!axisModel.get('show')) {\n                return;\n            }\n\n            var gridModel = axisModel.getCoordSysModel();\n\n            var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n\n            var axisBuilder = new AxisBuilder(axisModel, layout);\n\n            zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n            this._axisGroup.add(axisBuilder.getGroup());\n\n            zrUtil.each(selfBuilderAttrs, function (name) {\n                if (axisModel.get(name + '.show')) {\n                    this['_' + name](axisModel, gridModel, layout.labelInterval);\n                }\n            }, this);\n\n            graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n\n            CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitLine: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.scale.isBlank()) {\n                return;\n            }\n\n            var splitLineModel = axisModel.getModel('splitLine');\n            var lineStyleModel = splitLineModel.getModel('lineStyle');\n            var lineColors = lineStyleModel.get('color');\n\n            var lineInterval = getInterval(splitLineModel, labelInterval);\n\n            lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n            var isHorizontal = axis.isHorizontal();\n\n            var lineCount = 0;\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitLineModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var p1 = [];\n            var p2 = [];\n            // Simple optimization\n            // Batching the lines if color are the same\n            var lineStyle = lineStyleModel.getLineStyle();\n            for (var i = 0; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, lineInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                if (isHorizontal) {\n                    p1[0] = tickCoord;\n                    p1[1] = gridRect.y;\n                    p2[0] = tickCoord;\n                    p2[1] = gridRect.y + gridRect.height;\n                }\n                else {\n                    p1[0] = gridRect.x;\n                    p1[1] = tickCoord;\n                    p2[0] = gridRect.x + gridRect.width;\n                    p2[1] = tickCoord;\n                }\n\n                var colorIndex = (lineCount++) % lineColors.length;\n                this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n                    anid: 'line_' + ticks[i],\n\n                    shape: {\n                        x1: p1[0],\n                        y1: p1[1],\n                        x2: p2[0],\n                        y2: p2[1]\n                    },\n                    style: zrUtil.defaults({\n                        stroke: lineColors[colorIndex]\n                    }, lineStyle),\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitArea: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.scale.isBlank()) {\n                return;\n            }\n\n            var splitAreaModel = axisModel.getModel('splitArea');\n            var areaStyleModel = splitAreaModel.getModel('areaStyle');\n            var areaColors = areaStyleModel.get('color');\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitAreaModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var prevX = axis.toGlobalCoord(ticksCoords[0]);\n            var prevY = axis.toGlobalCoord(ticksCoords[0]);\n\n            var count = 0;\n\n            var areaInterval = getInterval(splitAreaModel, labelInterval);\n\n            var areaStyle = areaStyleModel.getAreaStyle();\n            areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n            for (var i = 1; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, areaInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                var x;\n                var y;\n                var width;\n                var height;\n                if (axis.isHorizontal()) {\n                    x = prevX;\n                    y = gridRect.y;\n                    width = tickCoord - x;\n                    height = gridRect.height;\n                }\n                else {\n                    x = gridRect.x;\n                    y = prevY;\n                    width = gridRect.width;\n                    height = tickCoord - y;\n                }\n\n                var colorIndex = (count++) % areaColors.length;\n                this._axisGroup.add(new graphic.Rect({\n                    anid: 'area_' + ticks[i],\n\n                    shape: {\n                        x: x,\n                        y: y,\n                        width: width,\n                        height: height\n                    },\n                    style: zrUtil.defaults({\n                        fill: areaColors[colorIndex]\n                    }, areaStyle),\n                    silent: true\n                }));\n\n                prevX = x + width;\n                prevY = y + height;\n            }\n        }\n    });\n\n    CartesianAxisView.extend({\n        type: 'xAxis'\n    });\n    CartesianAxisView.extend({\n        type: 'yAxis'\n    });\n\n\n\n/***/ }),\n\n/***/ 718:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var echarts = __webpack_require__(607);\n    var axisPointerModelHelper = __webpack_require__(629);\n    var axisTrigger = __webpack_require__(723);\n    var zrUtil = __webpack_require__(606);\n\n    __webpack_require__(719);\n    __webpack_require__(720);\n\n    // CartesianAxisPointer is not supposed to be required here. But consider\n    // echarts.simple.js and online build tooltip, which only require gridSimple,\n    // CartesianAxisPointer should be able to required somewhere.\n    __webpack_require__(722);\n\n    echarts.registerPreprocessor(function (option) {\n        // Always has a global axisPointerModel for default setting.\n        if (option) {\n            (!option.axisPointer || option.axisPointer.length === 0)\n                && (option.axisPointer = {});\n\n            var link = option.axisPointer.link;\n            // Normalize to array to avoid object mergin. But if link\n            // is not set, remain null/undefined, otherwise it will\n            // override existent link setting.\n            if (link && !zrUtil.isArray(link)) {\n                option.axisPointer.link = [link];\n            }\n        }\n    });\n\n    // This process should proformed after coordinate systems created\n    // and series data processed. So put it on statistic processing stage.\n    echarts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n        // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n        // allAxesInfo should be updated when setOption performed.\n        ecModel.getComponent('axisPointer').coordSysAxesInfo\n            = axisPointerModelHelper.collect(ecModel, api);\n    });\n\n    // Broadcast to all views.\n    echarts.registerAction({\n        type: 'updateAxisPointer',\n        event: 'updateAxisPointer',\n        update: ':updateAxisPointer'\n    }, axisTrigger);\n\n\n\n/***/ }),\n\n/***/ 719:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var echarts = __webpack_require__(607);\n\n    var AxisPointerModel = echarts.extendComponentModel({\n\n        type: 'axisPointer',\n\n        coordSysAxesInfo: null,\n\n        defaultOption: {\n            // 'auto' means that show when triggered by tooltip or handle.\n            show: 'auto',\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: null, // set default in AxisPonterView.js\n\n            zlevel: 0,\n            z: 50,\n\n            type: 'line',\n            // axispointer triggered by tootip determine snap automatically,\n            // see `modelHelper`.\n            snap: false,\n            triggerTooltip: true,\n\n            value: null,\n            status: null, // Init value depends on whether handle is used.\n\n            // [group0, group1, ...]\n            // Each group can be: {\n            //      mapper: function () {},\n            //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n            //      xAxisId: ...,\n            //      yAxisName: ...,\n            //      angleAxisIndex: ...\n            // }\n            // mapper: can be ignored.\n            //      input: {axisInfo, value}\n            //      output: {axisInfo, value}\n            link: [],\n\n            // Do not set 'auto' here, otherwise global animation: false\n            // will not effect at this axispointer.\n            animation: null,\n            animationDurationUpdate: 200,\n\n            lineStyle: {\n                color: '#aaa',\n                width: 1,\n                type: 'solid'\n            },\n\n            shadowStyle: {\n                color: 'rgba(150,150,150,0.3)'\n            },\n\n            label: {\n                show: true,\n                formatter: null, // string | Function\n                precision: 'auto', // Or a number like 0, 1, 2 ...\n                margin: 3,\n                color: '#fff',\n                padding: [5, 7, 5, 7],\n                backgroundColor: 'auto', // default: axis line color\n                borderColor: null,\n                borderWidth: 0,\n                shadowBlur: 3,\n                shadowColor: '#aaa'\n                // Considering applicability, common style should\n                // better not have shadowOffset.\n                // shadowOffsetX: 0,\n                // shadowOffsetY: 2\n            },\n\n            handle: {\n                show: false,\n                icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z', // jshint ignore:line\n                size: 45,\n                // handle margin is from symbol center to axis, which is stable when circular move.\n                margin: 50,\n                // color: '#1b8bbd'\n                // color: '#2f4554'\n                color: '#333',\n                shadowBlur: 3,\n                shadowColor: '#aaa',\n                shadowOffsetX: 0,\n                shadowOffsetY: 2,\n\n                // For mobile performance\n                throttle: 40\n            }\n        }\n\n    });\n\n    module.exports = AxisPointerModel;\n\n\n\n/***/ }),\n\n/***/ 720:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var globalListener = __webpack_require__(661);\n\n    var AxisPonterView = __webpack_require__(607).extendComponentView({\n\n        type: 'axisPointer',\n\n        render: function (globalAxisPointerModel, ecModel, api) {\n            var globalTooltipModel = ecModel.getComponent('tooltip');\n            var triggerOn = globalAxisPointerModel.get('triggerOn')\n                || (globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click');\n\n            // Register global listener in AxisPointerView to enable\n            // AxisPointerView to be independent to Tooltip.\n            globalListener.register(\n                'axisPointer',\n                api,\n                function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none'\n                        && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)\n                    ) {\n                        dispatchAction({\n                            type: 'updateAxisPointer',\n                            currTrigger: currTrigger,\n                            x: e && e.offsetX,\n                            y: e && e.offsetY\n                        });\n                    }\n                }\n            );\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            globalListener.disopse(api.getZr(), 'axisPointer');\n            AxisPonterView.superApply(this._model, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            globalListener.unregister('axisPointer', api);\n            AxisPonterView.superApply(this._model, 'dispose', arguments);\n        }\n\n    });\n\n\n\n/***/ }),\n\n/***/ 721:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var clazzUtil = __webpack_require__(616);\n    var graphic = __webpack_require__(608);\n    var get = __webpack_require__(609).makeGetter();\n    var axisPointerModelHelper = __webpack_require__(629);\n    var eventTool = __webpack_require__(625);\n    var throttle = __webpack_require__(666);\n\n    var clone = zrUtil.clone;\n    var bind = zrUtil.bind;\n\n    /**\n     * Base axis pointer class in 2D.\n     * Implemenents {module:echarts/component/axis/IAxisPointer}.\n     */\n    function BaseAxisPointer () {\n    }\n\n    BaseAxisPointer.prototype = {\n\n        /**\n         * @private\n         */\n        _group: null,\n\n        /**\n         * @private\n         */\n        _lastGraphicKey: null,\n\n        /**\n         * @private\n         */\n        _handle: null,\n\n        /**\n         * @private\n         */\n        _dragging: false,\n\n        /**\n         * @private\n         */\n        _lastValue: null,\n\n        /**\n         * @private\n         */\n        _lastStatus: null,\n\n        /**\n         * @private\n         */\n        _payloadInfo: null,\n\n        /**\n         * In px, arbitrary value. Do not set too small,\n         * no animation is ok for most cases.\n         * @protected\n         */\n        animationThreshold: 15,\n\n        /**\n         * @implement\n         */\n        render: function (axisModel, axisPointerModel, api, forceRender) {\n            var value = axisPointerModel.get('value');\n            var status = axisPointerModel.get('status');\n\n            // Bind them to `this`, not in closure, otherwise they will not\n            // be replaced when user calling setOption in not merge mode.\n            this._axisModel = axisModel;\n            this._axisPointerModel = axisPointerModel;\n            this._api = api;\n\n            // Optimize: `render` will be called repeatly during mouse move.\n            // So it is power consuming if performing `render` each time,\n            // especially on mobile device.\n            if (!forceRender\n                && this._lastValue === value\n                && this._lastStatus === status\n            ) {\n                return;\n            }\n            this._lastValue = value;\n            this._lastStatus = status;\n\n            var group = this._group;\n            var handle = this._handle;\n\n            if (!status || status === 'hide') {\n                // Do not clear here, for animation better.\n                group && group.hide();\n                handle && handle.hide();\n                return;\n            }\n            group && group.show();\n            handle && handle.show();\n\n            // Otherwise status is 'show'\n            var elOption = {};\n            this.makeElOption(elOption, value, axisModel, axisPointerModel, api);\n\n            // Enable change axis pointer type.\n            var graphicKey = elOption.graphicKey;\n            if (graphicKey !== this._lastGraphicKey) {\n                this.clear(api);\n            }\n            this._lastGraphicKey = graphicKey;\n\n            var moveAnimation = this._moveAnimation =\n                this.determineAnimation(axisModel, axisPointerModel);\n\n            if (!group) {\n                group = this._group = new graphic.Group();\n                this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n                this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n                api.getZr().add(group);\n            }\n            else {\n                var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n                this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n                this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n            }\n\n            updateMandatoryProps(group, axisPointerModel, true);\n\n            this._renderHandle(value);\n        },\n\n        /**\n         * @implement\n         */\n        remove: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @implement\n         */\n        dispose: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @protected\n         */\n        determineAnimation: function (axisModel, axisPointerModel) {\n            var animation = axisPointerModel.get('animation');\n            var axis = axisModel.axis;\n            var isCategoryAxis = axis.type === 'category';\n            var useSnap = axisPointerModel.get('snap');\n\n            // Value axis without snap always do not snap.\n            if (!useSnap && !isCategoryAxis) {\n                return false;\n            }\n\n            if (animation === 'auto' || animation == null) {\n                var animationThreshold = this.animationThreshold;\n                if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n                    return true;\n                }\n\n                // It is important to auto animation when snap used. Consider if there is\n                // a dataZoom, animation will be disabled when too many points exist, while\n                // it will be enabled for better visual effect when little points exist.\n                if (useSnap) {\n                    var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n                    var axisExtent = axis.getExtent();\n                    // Approximate band width\n                    return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n                }\n\n                return false;\n            }\n\n            return animation === true;\n        },\n\n        /**\n         * add {pointer, label, graphicKey} to elOption\n         * @protected\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            // Shoule be implemenented by sub-class.\n        },\n\n        /**\n         * @protected\n         */\n        createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n            var pointerOption = elOption.pointer;\n            if (pointerOption) {\n                var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](\n                    clone(elOption.pointer)\n                );\n                group.add(pointerEl);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n            if (elOption.label) {\n                var labelEl = get(group).labelEl = new graphic.Rect(\n                    clone(elOption.label)\n                );\n\n                group.add(labelEl);\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updatePointerEl: function (group, elOption, updateProps) {\n            var pointerEl = get(group).pointerEl;\n            if (pointerEl) {\n                pointerEl.setStyle(elOption.pointer.style);\n                updateProps(pointerEl, {shape: elOption.pointer.shape});\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n            var labelEl = get(group).labelEl;\n            if (labelEl) {\n                labelEl.setStyle(elOption.label.style);\n                updateProps(labelEl, {\n                    // Consider text length change in vertical axis, animation should\n                    // be used on shape, otherwise the effect will be weird.\n                    shape: elOption.label.shape,\n                    position: elOption.label.position\n                });\n\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _renderHandle: function (value) {\n            if (this._dragging || !this.updateHandleTransform) {\n                return;\n            }\n\n            var axisPointerModel = this._axisPointerModel;\n            var zr = this._api.getZr();\n            var handle = this._handle;\n            var handleModel = axisPointerModel.getModel('handle');\n\n            var status = axisPointerModel.get('status');\n            if (!handleModel.get('show') || !status || status === 'hide') {\n                handle && zr.remove(handle);\n                this._handle = null;\n                return;\n            }\n\n            var isInit;\n            if (!this._handle) {\n                isInit = true;\n                handle = this._handle = graphic.createIcon(\n                    handleModel.get('icon'), \n                    {\n                        cursor: 'move',\n                        draggable: true,\n                        onmousemove: function (e) {\n                            // Fot mobile devicem, prevent screen slider on the button.\n                            eventTool.stop(e.event);\n                        },\n                        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n                        drift: bind(this._onHandleDragMove, this),\n                        ondragend: bind(this._onHandleDragEnd, this)\n                    }\n                );\n                zr.add(handle);\n            }\n\n            updateMandatoryProps(handle, axisPointerModel, false);\n\n            // update style\n            var includeStyles = [\n                'color', 'borderColor', 'borderWidth', 'opacity',\n                'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'\n            ];\n            handle.setStyle(handleModel.getItemStyle(null, includeStyles));\n\n            // update position\n            var handleSize = handleModel.get('size');\n            if (!zrUtil.isArray(handleSize)) {\n                handleSize = [handleSize, handleSize];\n            }\n            handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n\n            throttle.createOrUpdate(\n                this,\n                '_doDispatchAxisPointer',\n                handleModel.get('throttle') || 0,\n                'fixRate'\n            );\n\n            this._moveHandleToValue(value, isInit);\n        },\n\n        /**\n         * @private\n         */\n        _moveHandleToValue: function (value, isInit) {\n            updateProps(\n                this._axisPointerModel,\n                !isInit && this._moveAnimation,\n                this._handle,\n                getHandleTransProps(this.getHandleTransform(\n                    value, this._axisModel, this._axisPointerModel\n                ))\n            );\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragMove: function (dx, dy) {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            this._dragging = true;\n\n            // Persistent for throttle.\n            var trans = this.updateHandleTransform(\n                getHandleTransProps(handle),\n                [dx, dy],\n                this._axisModel,\n                this._axisPointerModel\n            );\n            this._payloadInfo = trans;\n\n            handle.stopAnimation();\n            handle.attr(getHandleTransProps(trans));\n            get(handle).lastProp = null;\n\n            this._doDispatchAxisPointer();\n        },\n\n        /**\n         * Throttled method.\n         * @private\n         */\n        _doDispatchAxisPointer: function () {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var payloadInfo = this._payloadInfo;\n            var axisModel = this._axisModel;\n            this._api.dispatchAction({\n                type: 'updateAxisPointer',\n                x: payloadInfo.cursorPoint[0],\n                y: payloadInfo.cursorPoint[1],\n                tooltipOption: payloadInfo.tooltipOption,\n                axesInfo: [{\n                    axisDim: axisModel.axis.dim,\n                    axisIndex: axisModel.componentIndex\n                }]\n            });\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragEnd: function (moveAnimation) {\n            this._dragging = false;\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var value = this._axisPointerModel.get('value');\n            // Consider snap or categroy axis, handle may be not consistent with\n            // axisPointer. So move handle to align the exact value position when\n            // drag ended.\n            this._moveHandleToValue(value);\n\n            // For the effect: tooltip will be shown when finger holding on handle\n            // button, and will be hidden after finger left handle button.\n            this._api.dispatchAction({\n                type: 'hideTip'\n            });\n        },\n\n        /**\n         * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {number} value\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0}\n         */\n        getHandleTransform: null,\n\n        /**\n         * * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {Object} transform {position, rotation}\n         * @param {Array.<number>} delta [dx, dy]\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n         */\n        updateHandleTransform: null,\n\n        /**\n         * @private\n         */\n        clear: function (api) {\n            this._lastValue = null;\n            this._lastStatus = null;\n\n            var zr = api.getZr();\n            var group = this._group;\n            var handle = this._handle;\n            if (zr && group) {\n                this._lastGraphicKey = null;\n                group && zr.remove(group);\n                handle && zr.remove(handle);\n                this._group = null;\n                this._handle = null;\n                this._payloadInfo = null;\n            }\n        },\n\n        /**\n         * @protected\n         */\n        doClear: function () {\n            // Implemented by sub-class if necessary.\n        },\n\n        /**\n         * @protected\n         * @param {Array.<number>} xy\n         * @param {Array.<number>} wh\n         * @param {number} [xDimIndex=0] or 1\n         */\n        buildLabel: function (xy, wh, xDimIndex) {\n            xDimIndex = xDimIndex || 0;\n            return {\n                x: xy[xDimIndex],\n                y: xy[1 - xDimIndex],\n                width: wh[xDimIndex],\n                height: wh[1 - xDimIndex]\n            };\n        }\n    };\n\n    BaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\n\n    function updateProps(animationModel, moveAnimation, el, props) {\n        // Animation optimize.\n        if (!propsEqual(get(el).lastProp, props)) {\n            get(el).lastProp = props;\n            moveAnimation\n                ? graphic.updateProps(el, props, animationModel)\n                : (el.stopAnimation(), el.attr(props));\n        }\n    }\n\n    function propsEqual(lastProps, newProps) {\n        if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n            var equals = true;\n            zrUtil.each(newProps, function (item, key) {\n                equals = equals && propsEqual(lastProps[key], item);\n            });\n            return !!equals;\n        }\n        else {\n            return lastProps === newProps;\n        }\n    }\n\n    function updateLabelShowHide(labelEl, axisPointerModel) {\n        labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n    }\n\n    function getHandleTransProps(trans) {\n        return {\n            position: trans.position.slice(),\n            rotation: trans.rotation || 0\n        };\n    }\n\n    function updateMandatoryProps(group, axisPointerModel, silent) {\n        var z = axisPointerModel.get('z');\n        var zlevel = axisPointerModel.get('zlevel');\n\n        group && group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n                el.silent = silent;\n            }\n        });\n    }\n\n    clazzUtil.enableClassExtend(BaseAxisPointer);\n\n    module.exports = BaseAxisPointer;\n\n\n/***/ }),\n\n/***/ 722:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var graphic = __webpack_require__(608);\n    var BaseAxisPointer = __webpack_require__(721);\n    var viewHelper = __webpack_require__(662);\n    var cartesianAxisHelper = __webpack_require__(659);\n    var AxisView = __webpack_require__(658);\n\n    var CartesianAxisPointer = BaseAxisPointer.extend({\n\n        /**\n         * @override\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisPointerType = axisPointerModel.get('type');\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n            if (axisPointerType && axisPointerType !== 'none') {\n                var elStyle = viewHelper.buildElStyle(axisPointerModel);\n                var pointerOption = pointerShapeBuilder[axisPointerType](\n                    axis, pixelValue, otherExtent, elStyle\n                );\n                pointerOption.style = elStyle;\n                elOption.graphicKey = pointerOption.type;\n                elOption.pointer = pointerOption;\n            }\n\n            var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n            viewHelper.buildCartesianSingleLabelElOption(\n                value, elOption, layoutInfo, axisModel, axisPointerModel, api\n            );\n        },\n\n        /**\n         * @override\n         */\n        getHandleTransform: function (value, axisModel, axisPointerModel) {\n            var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n                labelInside: false\n            });\n            layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n            return {\n                position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n                rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n            };\n        },\n\n        /**\n         * @override\n         */\n        updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisExtent = axis.getGlobalExtent(true);\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var dimIndex = axis.dim === 'x' ? 0 : 1;\n\n            var currPosition = transform.position;\n            currPosition[dimIndex] += delta[dimIndex];\n            currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n            currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n\n            var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n            var cursorPoint = [cursorOtherValue, cursorOtherValue];\n            cursorPoint[dimIndex] = currPosition[dimIndex];\n\n            // Make tooltip do not overlap axisPointer and in the middle of the grid.\n            var tooltipOptions = [{verticalAlign: 'middle'}, {align: 'center'}];\n\n            return {\n                position: currPosition,\n                rotation: transform.rotation,\n                cursorPoint: cursorPoint,\n                tooltipOption: tooltipOptions[dimIndex]\n            };\n        }\n\n    });\n\n    function getCartesian(grid, axis) {\n        var opt = {};\n        opt[axis.dim + 'AxisIndex'] = axis.index;\n        return grid.getCartesian(opt);\n    }\n\n    var pointerShapeBuilder = {\n\n        line: function (axis, pixelValue, otherExtent, elStyle) {\n            var targetShape = viewHelper.makeLineShape(\n                [pixelValue, otherExtent[0]],\n                [pixelValue, otherExtent[1]],\n                getAxisDimIndex(axis)\n            );\n            graphic.subPixelOptimizeLine({\n                shape: targetShape,\n                style: elStyle\n            });\n            return {\n                type: 'Line',\n                shape: targetShape\n            };\n        },\n\n        shadow: function (axis, pixelValue, otherExtent, elStyle) {\n            var bandWidth = axis.getBandWidth();\n            var span = otherExtent[1] - otherExtent[0];\n            return {\n                type: 'Rect',\n                shape: viewHelper.makeRectShape(\n                    [pixelValue - bandWidth / 2, otherExtent[0]],\n                    [bandWidth, span],\n                    getAxisDimIndex(axis)\n                )\n            };\n        }\n    };\n\n    function getAxisDimIndex(axis) {\n        return axis.dim === 'x' ? 0 : 1;\n    }\n\n    AxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\n\n    module.exports = CartesianAxisPointer;\n\n\n/***/ }),\n\n/***/ 723:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var modelUtil = __webpack_require__(609);\n    var modelHelper = __webpack_require__(629);\n    var findPointFromSeries = __webpack_require__(660);\n\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n    var get = modelUtil.makeGetter();\n\n    /**\n     * Basic logic: check all axis, if they do not demand show/highlight,\n     * then hide/downplay them.\n     *\n     * @param {Object} coordSysAxesInfo\n     * @param {Object} payload\n     * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n     * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n     *              trigger axisPointer and tooltip.\n     * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n     *              trigger axisPointer and tooltip.\n     * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n     * @param {Object} [payload.dataIndex] finder, restrict target axes.\n     * @param {Object} [payload.axesInfo] finder, restrict target axes.\n     *        [{\n     *          axisDim: 'x'|'y'|'angle'|...,\n     *          axisIndex: ...,\n     *          value: ...\n     *        }, ...]\n     * @param {Function} [payload.dispatchAction]\n     * @param {Object} [payload.tooltipOption]\n     * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n     *        which can be specified in dispatchAction\n     * @param {module:echarts/model/Global} ecModel\n     * @param {module:echarts/ExtensionAPI} api\n     * @return {Object} content of event obj for echarts.connect.\n     */\n    function axisTrigger(payload, ecModel, api) {\n        var currTrigger = payload.currTrigger;\n        var point = [payload.x, payload.y];\n        var finder = payload;\n        var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n        var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n        // Pending\n        // See #6121. But we are not able to reproduce it yet.\n        if (!coordSysAxesInfo) {\n            return;\n        }\n\n        if (illegalPoint(point)) {\n            // Used in the default behavior of `connection`: use the sample seriesIndex\n            // and dataIndex. And also used in the tooltipView trigger.\n            point = findPointFromSeries({\n                seriesIndex: finder.seriesIndex,\n                // Do not use dataIndexInside from other ec instance.\n                // FIXME: auto detect it?\n                dataIndex: finder.dataIndex\n            }, ecModel).point;\n        }\n        var isIllegalPoint = illegalPoint(point);\n\n        // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n        // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n        // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n        // and dataIndex.\n        var inputAxesInfo = finder.axesInfo;\n\n        var axesInfo = coordSysAxesInfo.axesInfo;\n        var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n        var outputFinder = {};\n\n        var showValueMap = {};\n        var dataByCoordSys = {list: [], map: {}};\n        var updaters = {\n            showPointer: curry(showPointer, showValueMap),\n            showTooltip: curry(showTooltip, dataByCoordSys)\n        };\n\n        // Process for triggered axes.\n        each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n            // If a point given, it must be contained by the coordinate system.\n            var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n\n            each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n                var axis = axisInfo.axis;\n                var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo);\n                // If no inputAxesInfo, no axis is restricted.\n                if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n                    var val = inputAxisInfo && inputAxisInfo.value;\n                    if (val == null && !isIllegalPoint) {\n                        val = axis.pointToData(point);\n                    }\n                    val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n                }\n            });\n        });\n\n        // Process for linked axes.\n        var linkTriggers = {};\n        each(axesInfo, function (tarAxisInfo, tarKey) {\n            var linkGroup = tarAxisInfo.linkGroup;\n\n            // If axis has been triggered in the previous stage, it should not be triggered by link.\n            if (linkGroup && !showValueMap[tarKey]) {\n                each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n                    var srcValItem = showValueMap[srcKey];\n                    // If srcValItem exist, source axis is triggered, so link to target axis.\n                    if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n                        var val = srcValItem.value;\n                        linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(\n                            val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo)\n                        )));\n                        linkTriggers[tarAxisInfo.key] = val;\n                    }\n                });\n            }\n        });\n        each(linkTriggers, function (val, tarKey) {\n            processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n        });\n\n        updateModelActually(showValueMap, axesInfo, outputFinder);\n        dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n        dispatchHighDownActually(axesInfo, dispatchAction, api);\n\n        return outputFinder;\n    }\n\n    function processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n        var axis = axisInfo.axis;\n\n        if (axis.scale.isBlank() || !axis.containData(newValue)) {\n            return;\n        }\n\n        if (!axisInfo.involveSeries) {\n            updaters.showPointer(axisInfo, newValue);\n            return;\n        }\n\n        // Heavy calculation. So put it after axis.containData checking.\n        var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n        var payloadBatch = payloadInfo.payloadBatch;\n        var snapToValue = payloadInfo.snapToValue;\n\n        // Fill content of event obj for echarts.connect.\n        // By defualt use the first involved series data as a sample to connect.\n        if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n            zrUtil.extend(outputFinder, payloadBatch[0]);\n        }\n\n        // If no linkSource input, this process is for collecting link\n        // target, where snap should not be accepted.\n        if (!dontSnap && axisInfo.snap) {\n            if (axis.containData(snapToValue) && snapToValue != null) {\n                newValue = snapToValue;\n            }\n        }\n\n        updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder);\n        // Tooltip should always be snapToValue, otherwise there will be\n        // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n        updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n    }\n\n    function buildPayloadsBySeries(value, axisInfo) {\n        var axis = axisInfo.axis;\n        var dim = axis.dim;\n        var snapToValue = value;\n        var payloadBatch = [];\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n\n        each(axisInfo.seriesModels, function (series, idx) {\n            var dataDim = series.coordDimToDataDim(dim);\n            var seriesNestestValue;\n            var dataIndices;\n\n            if (series.getAxisTooltipData) {\n                var result = series.getAxisTooltipData(dataDim, value, axis);\n                dataIndices = result.dataIndices;\n                seriesNestestValue = result.nestestValue;\n            }\n            else {\n                dataIndices = series.getData().indicesOfNearest(\n                    dataDim[0],\n                    value,\n                    // Add a threshold to avoid find the wrong dataIndex\n                    // when data length is not same.\n                    false, axis.type === 'category' ? 0.5 : null\n                );\n                if (!dataIndices.length) {\n                    return;\n                }\n                seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n            }\n\n            if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n                return;\n            }\n\n            var diff = value - seriesNestestValue;\n            var dist = Math.abs(diff);\n            // Consider category case\n            if (dist <= minDist) {\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    snapToValue = seriesNestestValue;\n                    payloadBatch.length = 0;\n                }\n                each(dataIndices, function (dataIndex) {\n                    payloadBatch.push({\n                        seriesIndex: series.seriesIndex,\n                        dataIndexInside: dataIndex,\n                        dataIndex: series.getData().getRawIndex(dataIndex)\n                    });\n                });\n            }\n        });\n\n        return {\n            payloadBatch: payloadBatch,\n            snapToValue: snapToValue\n        };\n    }\n\n    function showPointer(showValueMap, axisInfo, value, payloadBatch) {\n        showValueMap[axisInfo.key] = {value: value, payloadBatch: payloadBatch};\n    }\n\n    function showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n        var payloadBatch = payloadInfo.payloadBatch;\n        var axis = axisInfo.axis;\n        var axisModel = axis.model;\n        var axisPointerModel = axisInfo.axisPointerModel;\n\n        // If no data, do not create anything in dataByCoordSys,\n        // whose length will be used to judge whether dispatch action.\n        if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n            return;\n        }\n\n        var coordSysModel = axisInfo.coordSys.model;\n        var coordSysKey = modelHelper.makeKey(coordSysModel);\n        var coordSysItem = dataByCoordSys.map[coordSysKey];\n        if (!coordSysItem) {\n            coordSysItem = dataByCoordSys.map[coordSysKey] = {\n                coordSysId: coordSysModel.id,\n                coordSysIndex: coordSysModel.componentIndex,\n                coordSysType: coordSysModel.type,\n                coordSysMainType: coordSysModel.mainType,\n                dataByAxis: []\n            };\n            dataByCoordSys.list.push(coordSysItem);\n        }\n\n        coordSysItem.dataByAxis.push({\n            axisDim: axis.dim,\n            axisIndex: axisModel.componentIndex,\n            axisType: axisModel.type,\n            axisId: axisModel.id,\n            value: value,\n            // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n            // depends that all models have been updated. So it should not be performed\n            // here. Considering axisPointerModel used here is volatile, which is hard\n            // to be retrieve in TooltipView, we prepare parameters here.\n            valueLabelOpt: {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            },\n            seriesDataIndices: payloadBatch.slice()\n        });\n    }\n\n    function updateModelActually(showValueMap, axesInfo, outputFinder) {\n        var outputAxesInfo = outputFinder.axesInfo = [];\n        // Basic logic: If no 'show' required, 'hide' this axisPointer.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            var valItem = showValueMap[key];\n\n            if (valItem) {\n                !axisInfo.useHandle && (option.status = 'show');\n                option.value = valItem.value;\n                // For label formatter param and highlight.\n                option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n            }\n            // When always show (e.g., handle used), remain\n            // original value and status.\n            else {\n                // If hide, value still need to be set, consider\n                // click legend to toggle axis blank.\n                !axisInfo.useHandle && (option.status = 'hide');\n            }\n\n            // If status is 'hide', should be no info in payload.\n            option.status === 'show' && outputAxesInfo.push({\n                axisDim: axisInfo.axis.dim,\n                axisIndex: axisInfo.axis.model.componentIndex,\n                value: option.value\n            });\n        });\n    }\n\n    function dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n        // Basic logic: If no showTip required, hideTip will be dispatched.\n        if (illegalPoint(point) || !dataByCoordSys.list.length) {\n            dispatchAction({type: 'hideTip'});\n            return;\n        }\n\n        // In most case only one axis (or event one series is used). It is\n        // convinient to fetch payload.seriesIndex and payload.dataIndex\n        // dirtectly. So put the first seriesIndex and dataIndex of the first\n        // axis on the payload.\n        var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n\n        dispatchAction({\n            type: 'showTip',\n            escapeConnect: true,\n            x: point[0],\n            y: point[1],\n            tooltipOption: payload.tooltipOption,\n            position: payload.position,\n            dataIndexInside: sampleItem.dataIndexInside,\n            dataIndex: sampleItem.dataIndex,\n            seriesIndex: sampleItem.seriesIndex,\n            dataByCoordSys: dataByCoordSys.list\n        });\n    }\n\n    function dispatchHighDownActually(axesInfo, dispatchAction, api) {\n        // FIXME\n        // highlight status modification shoule be a stage of main process?\n        // (Consider confilct (e.g., legend and axisPointer) and setOption)\n\n        var zr = api.getZr();\n        var highDownKey = 'axisPointerLastHighlights';\n        var lastHighlights = get(zr)[highDownKey] || {};\n        var newHighlights = get(zr)[highDownKey] = {};\n\n        // Update highlight/downplay status according to axisPointer model.\n        // Build hash map and remove duplicate incidentally.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n                var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n                newHighlights[key] = batchItem;\n            });\n        });\n\n        // Diff.\n        var toHighlight = [];\n        var toDownplay = [];\n        zrUtil.each(lastHighlights, function (batchItem, key) {\n            !newHighlights[key] && toDownplay.push(batchItem);\n        });\n        zrUtil.each(newHighlights, function (batchItem, key) {\n            !lastHighlights[key] && toHighlight.push(batchItem);\n        });\n\n        toDownplay.length && api.dispatchAction({\n            type: 'downplay', escapeConnect: true, batch: toDownplay\n        });\n        toHighlight.length && api.dispatchAction({\n            type: 'highlight', escapeConnect: true, batch: toHighlight\n        });\n    }\n\n    function findInputAxisInfo(inputAxesInfo, axisInfo) {\n        for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n            var inputAxisInfo = inputAxesInfo[i];\n            if (axisInfo.axis.dim === inputAxisInfo.axisDim\n                && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex\n            ) {\n                return inputAxisInfo;\n            }\n        }\n    }\n\n    function makeMapperParam(axisInfo) {\n        var axisModel = axisInfo.axis.model;\n        var item = {};\n        var dim = item.axisDim = axisInfo.axis.dim;\n        item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n        item.axisName = item[dim + 'AxisName'] = axisModel.name;\n        item.axisId = item[dim + 'AxisId'] = axisModel.id;\n        return item;\n    }\n\n    function illegalPoint(point) {\n        return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n    }\n\n    module.exports = axisTrigger;\n\n\n/***/ }),\n\n/***/ 724:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    // List layout\n    var layout = __webpack_require__(619);\n    var formatUtil = __webpack_require__(613);\n    var graphic = __webpack_require__(608);\n\n    module.exports = {\n        /**\n         * Layout list like component.\n         * It will box layout each items in group of component and then position the whole group in the viewport\n         * @param {module:zrender/group/Group} group\n         * @param {module:echarts/model/Component} componentModel\n         * @param {module:echarts/ExtensionAPI}\n         */\n        layout: function (group, componentModel, api) {\n            var boxLayoutParams = componentModel.getBoxLayoutParams();\n            var padding = componentModel.get('padding');\n            var viewportSize = {width: api.getWidth(), height: api.getHeight()};\n\n            var rect = layout.getLayoutRect(\n                boxLayoutParams,\n                viewportSize,\n                padding\n            );\n\n            layout.box(\n                componentModel.get('orient'),\n                group,\n                componentModel.get('itemGap'),\n                rect.width,\n                rect.height\n            );\n\n            layout.positionElement(\n                group,\n                boxLayoutParams,\n                viewportSize,\n                padding\n            );\n        },\n\n        makeBackground: function (rect, componentModel) {\n            var padding = formatUtil.normalizeCssArray(\n                componentModel.get('padding')\n            );\n            var style = componentModel.getItemStyle(['color', 'opacity']);\n            style.fill = componentModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: rect.x - padding[3],\n                    y: rect.y - padding[0],\n                    width: rect.width + padding[1] + padding[3],\n                    height: rect.height + padding[0] + padding[2],\n                    r: componentModel.get('borderRadius')\n                },\n                style: style,\n                silent: true,\n                z2: -1\n            });\n            // FIXME\n            // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n            // and background rect when setting like `left: 0`, `top: 0`.\n            // graphic.subPixelOptimizeRect(rect);\n\n            return rect;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 725:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    // Do not contain scrollable legend, for sake of file size.\n\n    __webpack_require__(726);\n    __webpack_require__(728);\n    __webpack_require__(727);\n\n    var echarts = __webpack_require__(607);\n    // Series Filter\n    echarts.registerProcessor(__webpack_require__(729));\n\n    __webpack_require__(618).registerSubTypeDefaulter('legend', function () {\n        // Default 'plain' when no type specified.\n        return 'plain';\n    });\n\n\n\n/***/ }),\n\n/***/ 726:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var Model = __webpack_require__(614);\n\n    var LegendModel = __webpack_require__(607).extendComponentModel({\n\n        type: 'legend.plain',\n\n        dependencies: ['series'],\n\n        layoutMode: {\n            type: 'box',\n            // legend.width/height are maxWidth/maxHeight actually,\n            // whereas realy width/height is calculated by its content.\n            // (Setting {left: 10, right: 10} does not make sense).\n            // So consider the case:\n            // `setOption({legend: {left: 10});`\n            // then `setOption({legend: {right: 10});`\n            // The previous `left` should be cleared by setting `ignoreSize`.\n            ignoreSize: true\n        },\n\n        init: function (option, parentModel, ecModel) {\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            option.selected = option.selected || {};\n        },\n\n        mergeOption: function (option) {\n            LegendModel.superCall(this, 'mergeOption', option);\n        },\n\n        optionUpdated: function () {\n            this._updateData(this.ecModel);\n\n            var legendData = this._data;\n\n            // If selectedMode is single, try to select one\n            if (legendData[0] && this.get('selectedMode') === 'single') {\n                var hasSelected = false;\n                // If has any selected in option.selected\n                for (var i = 0; i < legendData.length; i++) {\n                    var name = legendData[i].get('name');\n                    if (this.isSelected(name)) {\n                        // Force to unselect others\n                        this.select(name);\n                        hasSelected = true;\n                        break;\n                    }\n                }\n                // Try select the first if selectedMode is single\n                !hasSelected && this.select(legendData[0].get('name'));\n            }\n        },\n\n        _updateData: function (ecModel) {\n            var legendData = zrUtil.map(this.get('data') || [], function (dataItem) {\n                // Can be string or number\n                if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n                    dataItem = {\n                        name: dataItem\n                    };\n                }\n                return new Model(dataItem, this, this.ecModel);\n            }, this);\n            this._data = legendData;\n\n            var availableNames = zrUtil.map(ecModel.getSeries(), function (series) {\n                return series.name;\n            });\n            ecModel.eachSeries(function (seriesModel) {\n                if (seriesModel.legendDataProvider) {\n                    var data = seriesModel.legendDataProvider();\n                    availableNames = availableNames.concat(data.mapArray(data.getName));\n                }\n            });\n            /**\n             * @type {Array.<string>}\n             * @private\n             */\n            this._availableNames = availableNames;\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Model>}\n         */\n        getData: function () {\n            return this._data;\n        },\n\n        /**\n         * @param {string} name\n         */\n        select: function (name) {\n            var selected = this.option.selected;\n            var selectedMode = this.get('selectedMode');\n            if (selectedMode === 'single') {\n                var data = this._data;\n                zrUtil.each(data, function (dataItem) {\n                    selected[dataItem.get('name')] = false;\n                });\n            }\n            selected[name] = true;\n        },\n\n        /**\n         * @param {string} name\n         */\n        unSelect: function (name) {\n            if (this.get('selectedMode') !== 'single') {\n                this.option.selected[name] = false;\n            }\n        },\n\n        /**\n         * @param {string} name\n         */\n        toggleSelected: function (name) {\n            var selected = this.option.selected;\n            // Default is true\n            if (!selected.hasOwnProperty(name)) {\n                selected[name] = true;\n            }\n            this[selected[name] ? 'unSelect' : 'select'](name);\n        },\n\n        /**\n         * @param {string} name\n         */\n        isSelected: function (name) {\n            var selected = this.option.selected;\n            return !(selected.hasOwnProperty(name) && !selected[name])\n                && zrUtil.indexOf(this._availableNames, name) >= 0;\n        },\n\n        defaultOption: {\n            // 一级层叠\n            zlevel: 0,\n            // 二级层叠\n            z: 4,\n            show: true,\n\n            // 布局方式，默认为水平布局，可选为：\n            // 'horizontal' | 'vertical'\n            orient: 'horizontal',\n\n            left: 'center',\n            // right: 'center',\n\n            top: 0,\n            // bottom: null,\n\n            // 水平对齐\n            // 'auto' | 'left' | 'right'\n            // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n            align: 'auto',\n\n            backgroundColor: 'rgba(0,0,0,0)',\n            // 图例边框颜色\n            borderColor: '#ccc',\n            borderRadius: 0,\n            // 图例边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n            // 图例内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n            // 各个item之间的间隔，单位px，默认为10，\n            // 横向布局时为水平间隔，纵向布局时为纵向间隔\n            itemGap: 10,\n            // 图例图形宽度\n            itemWidth: 25,\n            // 图例图形高度\n            itemHeight: 14,\n\n            // 图例关闭时候的颜色\n            inactiveColor: '#ccc',\n\n            textStyle: {\n                // 图例文字颜色\n                color: '#333'\n            },\n            // formatter: '',\n            // 选择模式，默认开启图例开关\n            selectedMode: true,\n            // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n            // selected: null,\n            // 图例内容（详见legend.data，数组中每一项代表一个item\n            // data: [],\n\n            // Tooltip 相关配置\n            tooltip: {\n                show: false\n            }\n        }\n    });\n\n    module.exports = LegendModel;\n\n\n/***/ }),\n\n/***/ 727:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var symbolCreator = __webpack_require__(639);\n    var graphic = __webpack_require__(608);\n    var listComponentHelper = __webpack_require__(724);\n    var layoutUtil = __webpack_require__(619);\n\n    var curry = zrUtil.curry;\n    var each = zrUtil.each;\n    var Group = graphic.Group;\n\n    module.exports = __webpack_require__(607).extendComponentView({\n\n        type: 'legend.plain',\n\n        newlineDisabled: false,\n\n        /**\n         * @override\n         */\n        init: function () {\n\n            /**\n             * @private\n             * @type {module:zrender/container/Group}\n             */\n            this.group.add(this._contentGroup = new Group());\n\n            /**\n             * @private\n             * @type {module:zrender/Element}\n             */\n            this._backgroundEl;\n        },\n\n        /**\n         * @protected\n         */\n        getContentGroup: function () {\n            return this._contentGroup;\n        },\n\n        /**\n         * @override\n         */\n        render: function (legendModel, ecModel, api) {\n\n            this.resetInner();\n\n            if (!legendModel.get('show', true)) {\n                return;\n            }\n\n            var itemAlign = legendModel.get('align');\n            if (!itemAlign || itemAlign === 'auto') {\n                itemAlign = (\n                    legendModel.get('left') === 'right'\n                    && legendModel.get('orient') === 'vertical'\n                ) ? 'right' : 'left';\n            }\n\n            this.renderInner(itemAlign, legendModel, ecModel, api);\n\n            // Perform layout.\n            var positionInfo = legendModel.getBoxLayoutParams();\n            var viewportSize = {width: api.getWidth(), height: api.getHeight()};\n            var padding = legendModel.get('padding');\n\n            var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n            var mainRect = this.layoutInner(legendModel, itemAlign, maxSize);\n\n            // Place mainGroup, based on the calculated `mainRect`.\n            var layoutRect = layoutUtil.getLayoutRect(\n                zrUtil.defaults({width: mainRect.width, height: mainRect.height}, positionInfo),\n                viewportSize,\n                padding\n            );\n            this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]);\n\n            // Render background after group is layout.\n            this.group.add(\n                this._backgroundEl = listComponentHelper.makeBackground(mainRect, legendModel)\n            );\n        },\n\n        /**\n         * @protected\n         */\n        resetInner: function () {\n            this.getContentGroup().removeAll();\n            this._backgroundEl && this.group.remove(this._backgroundEl);\n        },\n\n        /**\n         * @protected\n         */\n        renderInner: function (itemAlign, legendModel, ecModel, api) {\n            var contentGroup = this.getContentGroup();\n            var legendDrawnMap = zrUtil.createHashMap();\n            var selectMode = legendModel.get('selectedMode');\n\n            each(legendModel.getData(), function (itemModel, dataIndex) {\n                var name = itemModel.get('name');\n\n                // Use empty string or \\n as a newline string\n                if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n                    contentGroup.add(new Group({\n                        newline: true\n                    }));\n                    return;\n                }\n\n                var seriesModel = ecModel.getSeriesByName(name)[0];\n\n                if (legendDrawnMap.get(name)) {\n                    // Have been drawed\n                    return;\n                }\n\n                // Series legend\n                if (seriesModel) {\n                    var data = seriesModel.getData();\n                    var color = data.getVisual('color');\n\n                    // If color is a callback function\n                    if (typeof color === 'function') {\n                        // Use the first data\n                        color = color(seriesModel.getDataParams(0));\n                    }\n\n                    // Using rect symbol defaultly\n                    var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n                    var symbolType = data.getVisual('symbol');\n\n                    var itemGroup = this._createItem(\n                        name, dataIndex, itemModel, legendModel,\n                        legendSymbolType, symbolType,\n                        itemAlign, color,\n                        selectMode\n                    );\n\n                    itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                        .on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api))\n                        .on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n\n                    legendDrawnMap.set(name, true);\n                }\n                else {\n                    // Data legend of pie, funnel\n                    ecModel.eachRawSeries(function (seriesModel) {\n                        // In case multiple series has same data name\n                        if (legendDrawnMap.get(name)) {\n                            return;\n                        }\n                        if (seriesModel.legendDataProvider) {\n                            var data = seriesModel.legendDataProvider();\n                            var idx = data.indexOfName(name);\n                            if (idx < 0) {\n                                return;\n                            }\n\n                            var color = data.getItemVisual(idx, 'color');\n\n                            var legendSymbolType = 'roundRect';\n\n                            var itemGroup = this._createItem(\n                                name, dataIndex, itemModel, legendModel,\n                                legendSymbolType, null,\n                                itemAlign, color,\n                                selectMode\n                            );\n\n                            itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                                // FIXME Should not specify the series name\n                                .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api))\n                                .on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n\n                            legendDrawnMap.set(name, true);\n                        }\n                    }, this);\n                }\n\n                if (__DEV__) {\n                    if (!legendDrawnMap.get(name)) {\n                        console.warn(name + ' series not exists. Legend data should be same with series name or data name.');\n                    }\n                }\n            }, this);\n        },\n\n        _createItem: function (\n            name, dataIndex, itemModel, legendModel,\n            legendSymbolType, symbolType,\n            itemAlign, color, selectMode\n        ) {\n            var itemWidth = legendModel.get('itemWidth');\n            var itemHeight = legendModel.get('itemHeight');\n            var inactiveColor = legendModel.get('inactiveColor');\n\n            var isSelected = legendModel.isSelected(name);\n            var itemGroup = new Group();\n\n            var textStyleModel = itemModel.getModel('textStyle');\n\n            var itemIcon = itemModel.get('icon');\n\n            var tooltipModel = itemModel.getModel('tooltip');\n            var legendGlobalTooltipModel = tooltipModel.parentModel;\n\n            // Use user given icon first\n            legendSymbolType = itemIcon || legendSymbolType;\n            itemGroup.add(symbolCreator.createSymbol(\n                legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor\n            ));\n\n            // Compose symbols\n            // PENDING\n            if (!itemIcon && symbolType\n                // At least show one symbol, can't be all none\n                && ((symbolType !== legendSymbolType) || symbolType == 'none')\n            ) {\n                var size = itemHeight * 0.8;\n                if (symbolType === 'none') {\n                    symbolType = 'circle';\n                }\n                // Put symbol in the center\n                itemGroup.add(symbolCreator.createSymbol(\n                    symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size,\n                    isSelected ? color : inactiveColor\n                ));\n            }\n\n            var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n            var textAlign = itemAlign;\n\n            var formatter = legendModel.get('formatter');\n            var content = name;\n            if (typeof formatter === 'string' && formatter) {\n                content = formatter.replace('{name}', name != null ? name : '');\n            }\n            else if (typeof formatter === 'function') {\n                content = formatter(name);\n            }\n\n            itemGroup.add(new graphic.Text({\n                style: graphic.setTextStyle({}, textStyleModel, {\n                    text: content,\n                    x: textX,\n                    y: itemHeight / 2,\n                    textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n                    textAlign: textAlign,\n                    textVerticalAlign: 'middle'\n                })\n            }));\n\n            // Add a invisible rect to increase the area of mouse hover\n            var hitRect = new graphic.Rect({\n                shape: itemGroup.getBoundingRect(),\n                invisible: true,\n                tooltip: tooltipModel.get('show') ? zrUtil.extend({\n                    content: name,\n                    // Defaul formatter\n                    formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n                        return name;\n                    },\n                    formatterParams: {\n                        componentType: 'legend',\n                        legendIndex: legendModel.componentIndex,\n                        name: name,\n                        $vars: ['name']\n                    }\n                }, tooltipModel.option) : null\n            });\n            itemGroup.add(hitRect);\n\n            itemGroup.eachChild(function (child) {\n                child.silent = true;\n            });\n\n            hitRect.silent = !selectMode;\n\n            this.getContentGroup().add(itemGroup);\n\n            graphic.setHoverStyle(itemGroup);\n\n            itemGroup.__legendDataIndex = dataIndex;\n\n            return itemGroup;\n        },\n\n        /**\n         * @protected\n         */\n        layoutInner: function (legendModel, itemAlign, maxSize) {\n            var contentGroup = this.getContentGroup();\n\n            // Place items in contentGroup.\n            layoutUtil.box(\n                legendModel.get('orient'),\n                contentGroup,\n                legendModel.get('itemGap'),\n                maxSize.width,\n                maxSize.height\n            );\n\n            var contentRect = contentGroup.getBoundingRect();\n            contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n\n            return this.group.getBoundingRect();\n        }\n\n    });\n\n    function dispatchSelectAction(name, api) {\n        api.dispatchAction({\n            type: 'legendToggleSelect',\n            name: name\n        });\n    }\n\n    function dispatchHighlightAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'highlight',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n    function dispatchDownplayAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'downplay',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n\n\n/***/ }),\n\n/***/ 728:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Legend action\n */\n\n\n    var echarts = __webpack_require__(607);\n    var zrUtil = __webpack_require__(606);\n\n    function legendSelectActionHandler(methodName, payload, ecModel) {\n        var selectedMap = {};\n        var isToggleSelect = methodName === 'toggleSelected';\n        var isSelected;\n        // Update all legend components\n        ecModel.eachComponent('legend', function (legendModel) {\n            if (isToggleSelect && isSelected != null) {\n                // Force other legend has same selected status\n                // Or the first is toggled to true and other are toggled to false\n                // In the case one legend has some item unSelected in option. And if other legend\n                // doesn't has the item, they will assume it is selected.\n                legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n            }\n            else {\n                legendModel[methodName](payload.name);\n                isSelected = legendModel.isSelected(payload.name);\n            }\n            var legendData = legendModel.getData();\n            zrUtil.each(legendData, function (model) {\n                var name = model.get('name');\n                // Wrap element\n                if (name === '\\n' || name === '') {\n                    return;\n                }\n                var isItemSelected = legendModel.isSelected(name);\n                if (selectedMap.hasOwnProperty(name)) {\n                    // Unselected if any legend is unselected\n                    selectedMap[name] = selectedMap[name] && isItemSelected;\n                }\n                else {\n                    selectedMap[name] = isItemSelected;\n                }\n            });\n        });\n        // Return the event explicitly\n        return {\n            name: payload.name,\n            selected: selectedMap\n        };\n    }\n    /**\n     * @event legendToggleSelect\n     * @type {Object}\n     * @property {string} type 'legendToggleSelect'\n     * @property {string} [from]\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendToggleSelect', 'legendselectchanged',\n        zrUtil.curry(legendSelectActionHandler, 'toggleSelected')\n    );\n\n    /**\n     * @event legendSelect\n     * @type {Object}\n     * @property {string} type 'legendSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendSelect', 'legendselected',\n        zrUtil.curry(legendSelectActionHandler, 'select')\n    );\n\n    /**\n     * @event legendUnSelect\n     * @type {Object}\n     * @property {string} type 'legendUnSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendUnSelect', 'legendunselected',\n        zrUtil.curry(legendSelectActionHandler, 'unSelect')\n    );\n\n\n\n/***/ }),\n\n/***/ 729:\n/***/ (function(module, exports) {\n\n\n   module.exports = function (ecModel) {\n        var legendModels = ecModel.findComponents({\n            mainType: 'legend'\n        });\n        if (legendModels && legendModels.length) {\n            ecModel.filterSeries(function (series) {\n                // If in any legend component the status is not selected.\n                // Because in legend series is assumed selected when it is not in the legend data.\n                for (var i = 0; i < legendModels.length; i++) {\n                    if (!legendModels[i].isSelected(series.name)) {\n                        return false;\n                    }\n                }\n                return true;\n            });\n        }\n    };\n\n\n/***/ }),\n\n/***/ 730:\n/***/ (function(module, exports, __webpack_require__) {\n\n// FIXME Better way to pack data in graphic element\n\n\n    __webpack_require__(718);\n\n    __webpack_require__(732);\n\n    __webpack_require__(733);\n\n\n    // Show tip action\n    /**\n     * @action\n     * @property {string} type\n     * @property {number} seriesIndex\n     * @property {number} dataIndex\n     * @property {number} [x]\n     * @property {number} [y]\n     */\n    __webpack_require__(607).registerAction(\n        {\n            type: 'showTip',\n            event: 'showTip',\n            update: 'tooltip:manuallyShowTip'\n        },\n        // noop\n        function () {}\n    );\n    // Hide tip action\n    __webpack_require__(607).registerAction(\n        {\n            type: 'hideTip',\n            event: 'hideTip',\n            update: 'tooltip:manuallyHideTip'\n        },\n        // noop\n        function () {}\n    );\n\n\n/***/ }),\n\n/***/ 731:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/component/tooltip/TooltipContent\n */\n\n\n    var zrUtil = __webpack_require__(606);\n    var zrColor = __webpack_require__(627);\n    var eventUtil = __webpack_require__(625);\n    var formatUtil = __webpack_require__(613);\n    var each = zrUtil.each;\n    var toCamelCase = formatUtil.toCamelCase;\n    var env = __webpack_require__(615);\n\n    var vendors = ['', '-webkit-', '-moz-', '-o-'];\n\n    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n\n    /**\n     * @param {number} duration\n     * @return {string}\n     * @inner\n     */\n    function assembleTransition(duration) {\n        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\n                            + 'top ' + duration + 's ' + transitionCurve;\n        return zrUtil.map(vendors, function (vendorPrefix) {\n            return vendorPrefix + 'transition:' + transitionText;\n        }).join(';');\n    }\n\n    /**\n     * @param {Object} textStyle\n     * @return {string}\n     * @inner\n     */\n    function assembleFont(textStyleModel) {\n        var cssText = [];\n\n        var fontSize = textStyleModel.get('fontSize');\n        var color = textStyleModel.getTextColor();\n\n        color && cssText.push('color:' + color);\n\n        cssText.push('font:' + textStyleModel.getFont());\n\n        fontSize &&\n            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n\n        each(['decoration', 'align'], function (name) {\n            var val = textStyleModel.get(name);\n            val && cssText.push('text-' + name + ':' + val);\n        });\n\n        return cssText.join(';');\n    }\n\n    /**\n     * @param {Object} tooltipModel\n     * @return {string}\n     * @inner\n     */\n    function assembleCssText(tooltipModel) {\n\n        var cssText = [];\n\n        var transitionDuration = tooltipModel.get('transitionDuration');\n        var backgroundColor = tooltipModel.get('backgroundColor');\n        var textStyleModel = tooltipModel.getModel('textStyle');\n        var padding = tooltipModel.get('padding');\n\n        // Animation transition. Do not animate when transitionDuration is 0.\n        transitionDuration &&\n            cssText.push(assembleTransition(transitionDuration));\n\n        if (backgroundColor) {\n            if (env.canvasSupported) {\n                cssText.push('background-Color:' + backgroundColor);\n            }\n            else {\n                // for ie\n                cssText.push(\n                    'background-Color:#' + zrColor.toHex(backgroundColor)\n                );\n                cssText.push('filter:alpha(opacity=70)');\n            }\n        }\n\n        // Border style\n        each(['width', 'color', 'radius'], function (name) {\n            var borderName = 'border-' + name;\n            var camelCase = toCamelCase(borderName);\n            var val = tooltipModel.get(camelCase);\n            val != null &&\n                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n        });\n\n        // Text style\n        cssText.push(assembleFont(textStyleModel));\n\n        // Padding\n        if (padding != null) {\n            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n        }\n\n        return cssText.join(';') + ';';\n    }\n\n    /**\n     * @alias module:echarts/component/tooltip/TooltipContent\n     * @constructor\n     */\n    function TooltipContent(container, api) {\n        var el = document.createElement('div');\n        var zr = this._zr = api.getZr();\n\n        this.el = el;\n\n        this._x = api.getWidth() / 2;\n        this._y = api.getHeight() / 2;\n\n        container.appendChild(el);\n\n        this._container = container;\n\n        this._show = false;\n\n        /**\n         * @private\n         */\n        this._hideTimeout;\n\n        var self = this;\n        el.onmouseenter = function () {\n            // clear the timeout in hideLater and keep showing tooltip\n            if (self._enterable) {\n                clearTimeout(self._hideTimeout);\n                self._show = true;\n            }\n            self._inContent = true;\n        };\n        el.onmousemove = function (e) {\n            e = e || window.event;\n            if (!self._enterable) {\n                // Try trigger zrender event to avoid mouse\n                // in and out shape too frequently\n                var handler = zr.handler;\n                eventUtil.normalizeEvent(container, e, true);\n                handler.dispatch('mousemove', e);\n            }\n        };\n        el.onmouseleave = function () {\n            if (self._enterable) {\n                if (self._show) {\n                    self.hideLater(self._hideDelay);\n                }\n            }\n            self._inContent = false;\n        };\n    }\n\n    TooltipContent.prototype = {\n\n        constructor: TooltipContent,\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _enterable: true,\n\n        /**\n         * Update when tooltip is rendered\n         */\n        update: function () {\n            // FIXME\n            // Move this logic to ec main?\n            var container = this._container;\n            var stl = container.currentStyle\n                || document.defaultView.getComputedStyle(container);\n            var domStyle = container.style;\n            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n                domStyle.position = 'relative';\n            }\n            // Hide the tooltip\n            // PENDING\n            // this.hide();\n        },\n\n        show: function (tooltipModel) {\n            clearTimeout(this._hideTimeout);\n            var el = this.el;\n\n            el.style.cssText = gCssText + assembleCssText(tooltipModel)\n                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\n                + (tooltipModel.get('extraCssText') || '');\n\n            el.style.display = el.innerHTML ?  'block' : 'none';\n\n            this._show = true;\n        },\n\n        setContent: function (content) {\n            this.el.innerHTML = content == null ? '' : content;\n        },\n\n        setEnterable: function (enterable) {\n            this._enterable = enterable;\n        },\n\n        getSize: function () {\n            var el = this.el;\n            return [el.clientWidth, el.clientHeight];\n        },\n\n        moveTo: function (x, y) {\n            // xy should be based on canvas root. But tooltipContent is\n            // the sibling of canvas root. So padding of ec container\n            // should be considered here.\n            var zr = this._zr;\n            var viewportRootOffset;\n            if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n                x += viewportRootOffset.offsetLeft;\n                y += viewportRootOffset.offsetTop;\n            }\n\n            var style = this.el.style;\n            style.left = x + 'px';\n            style.top = y + 'px';\n\n            this._x = x;\n            this._y = y;\n        },\n\n        hide: function () {\n            this.el.style.display = 'none';\n            this._show = false;\n        },\n\n        hideLater: function (time) {\n            if (this._show && !(this._inContent && this._enterable)) {\n                if (time) {\n                    this._hideDelay = time;\n                    // Set show false to avoid invoke hideLater mutiple times\n                    this._show = false;\n                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n                }\n                else {\n                    this.hide();\n                }\n            }\n        },\n\n        isShow: function () {\n            return this._show;\n        }\n    };\n\n    module.exports = TooltipContent;\n\n\n/***/ }),\n\n/***/ 732:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    __webpack_require__(607).extendComponentModel({\n\n        type: 'tooltip',\n\n        dependencies: ['axisPointer'],\n\n        defaultOption: {\n            zlevel: 0,\n\n            z: 8,\n\n            show: true,\n\n            // tooltip主体内容\n            showContent: true,\n\n            // 'trigger' only works on coordinate system.\n            // 'item' | 'axis' | 'none'\n            trigger: 'item',\n\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: 'mousemove|click',\n\n            alwaysShowContent: false,\n\n            displayMode: 'single', // 'single' | 'multipleByCoordSys'\n\n            // 位置 {Array} | {Function}\n            // position: null\n            // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n            // align: null,\n            // verticalAlign: null,\n\n            // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n            confine: false,\n\n            // 内容格式器：{string}（Template） ¦ {Function}\n            // formatter: null\n\n            showDelay: 0,\n\n            // 隐藏延迟，单位ms\n            hideDelay: 100,\n\n            // 动画变换时间，单位s\n            transitionDuration: 0.4,\n\n            enterable: false,\n\n            // 提示背景颜色，默认为透明度为0.7的黑色\n            backgroundColor: 'rgba(50,50,50,0.7)',\n\n            // 提示边框颜色\n            borderColor: '#333',\n\n            // 提示边框圆角，单位px，默认为4\n            borderRadius: 4,\n\n            // 提示边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 提示内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // Extra css text\n            extraCssText: '',\n\n            // 坐标轴指示器，坐标轴触发有效\n            axisPointer: {\n                // 默认为直线\n                // 可选为：'line' | 'shadow' | 'cross'\n                type: 'line',\n\n                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n                // 极坐标系会默认选择 angle 轴\n                axis: 'auto',\n\n                animation: 'auto',\n                animationDurationUpdate: 200,\n                animationEasingUpdate: 'exponentialOut',\n\n                crossStyle: {\n                    color: '#999',\n                    width: 1,\n                    type: 'dashed',\n\n                    // TODO formatter\n                    textStyle: {}\n                }\n\n                // lineStyle and shadowStyle should not be specified here,\n                // otherwise it will always override those styles on option.axisPointer.\n            },\n            textStyle: {\n                color: '#fff',\n                fontSize: 14\n            }\n        }\n    });\n\n\n/***/ }),\n\n/***/ 733:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var TooltipContent = __webpack_require__(731);\n    var zrUtil = __webpack_require__(606);\n    var formatUtil = __webpack_require__(613);\n    var numberUtil = __webpack_require__(610);\n    var graphic = __webpack_require__(608);\n    var findPointFromSeries = __webpack_require__(660);\n    var layoutUtil = __webpack_require__(619);\n    var env = __webpack_require__(615);\n    var Model = __webpack_require__(614);\n    var globalListener = __webpack_require__(661);\n    var axisHelper = __webpack_require__(620);\n    var axisPointerViewHelper = __webpack_require__(662);\n\n    var bind = zrUtil.bind;\n    var each = zrUtil.each;\n    var parsePercent = numberUtil.parsePercent;\n\n\n    var proxyRect = new graphic.Rect({\n        shape: {x: -1, y: -1, width: 2, height: 2}\n    });\n\n    __webpack_require__(607).extendComponentView({\n\n        type: 'tooltip',\n\n        init: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var tooltipContent = new TooltipContent(api.getDom(), api);\n            this._tooltipContent = tooltipContent;\n        },\n\n        render: function (tooltipModel, ecModel, api) {\n            if (env.node) {\n                return;\n            }\n\n            // Reset\n            this.group.removeAll();\n\n            /**\n             * @private\n             * @type {module:echarts/component/tooltip/TooltipModel}\n             */\n            this._tooltipModel = tooltipModel;\n\n            /**\n             * @private\n             * @type {module:echarts/model/Global}\n             */\n            this._ecModel = ecModel;\n\n            /**\n             * @private\n             * @type {module:echarts/ExtensionAPI}\n             */\n            this._api = api;\n\n            /**\n             * Should be cleaned when render.\n             * @private\n             * @type {Array.<Array.<Object>>}\n             */\n            this._lastDataByCoordSys = null;\n\n            /**\n             * @private\n             * @type {boolean}\n             */\n            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n\n            var tooltipContent = this._tooltipContent;\n            tooltipContent.update();\n            tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n            this._initGlobalListener();\n\n            this._keepShow();\n        },\n\n        _initGlobalListener: function () {\n            var tooltipModel = this._tooltipModel;\n            var triggerOn = tooltipModel.get('triggerOn');\n\n            globalListener.register(\n                'itemTooltip',\n                this._api,\n                bind(function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none') {\n                        if (triggerOn.indexOf(currTrigger) >= 0) {\n                            this._tryShow(e, dispatchAction);\n                        }\n                        else if (currTrigger === 'leave') {\n                            this._hide(dispatchAction);\n                        }\n                    }\n                }, this)\n            );\n        },\n\n        _keepShow: function () {\n            var tooltipModel = this._tooltipModel;\n            var ecModel = this._ecModel;\n            var api = this._api;\n\n            // Try to keep the tooltip show when refreshing\n            if (this._lastX != null\n                && this._lastY != null\n                // When user is willing to control tooltip totally using API,\n                // self.manuallyShowTip({x, y}) might cause tooltip hide,\n                // which is not expected.\n                && tooltipModel.get('triggerOn') !== 'none'\n            ) {\n                var self = this;\n                clearTimeout(this._refreshUpdateTimeout);\n                this._refreshUpdateTimeout = setTimeout(function () {\n                    // Show tip next tick after other charts are rendered\n                    // In case highlight action has wrong result\n                    // FIXME\n                    self.manuallyShowTip(tooltipModel, ecModel, api, {\n                        x: self._lastX,\n                        y: self._lastY\n                    });\n                });\n            }\n        },\n\n        /**\n         * Show tip manually by\n         * dispatchAction({\n         *     type: 'showTip',\n         *     x: 10,\n         *     y: 10\n         * });\n         * Or\n         * dispatchAction({\n         *      type: 'showTip',\n         *      seriesIndex: 0,\n         *      dataIndex or dataIndexInside or name\n         * });\n         *\n         *  TODO Batch\n         */\n        manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n            if (payload.from === this.uid || env.node) {\n                return;\n            }\n\n            var dispatchAction = makeDispatchAction(payload, api);\n\n            // Reset ticket\n            this._ticket = '';\n\n            // When triggered from axisPointer.\n            var dataByCoordSys = payload.dataByCoordSys;\n\n            if (payload.tooltip && payload.x != null && payload.y != null) {\n                var el = proxyRect;\n                el.position = [payload.x, payload.y];\n                el.update();\n                el.tooltip = payload.tooltip;\n                // Manually show tooltip while view is not using zrender elements.\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    target: el\n                }, dispatchAction);\n            }\n            else if (dataByCoordSys) {\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    event: {},\n                    dataByCoordSys: payload.dataByCoordSys,\n                    tooltipOption: payload.tooltipOption\n                }, dispatchAction);\n            }\n            else if (payload.seriesIndex != null) {\n\n                if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n                    return;\n                }\n\n                var pointInfo = findPointFromSeries(payload, ecModel);\n                var cx = pointInfo.point[0];\n                var cy = pointInfo.point[1];\n                if (cx != null && cy != null) {\n                    this._tryShow({\n                        offsetX: cx,\n                        offsetY: cy,\n                        position: payload.position,\n                        target: pointInfo.el,\n                        event: {}\n                    }, dispatchAction);\n                }\n            }\n            else if (payload.x != null && payload.y != null) {\n                // FIXME\n                // should wrap dispatchAction like `axisPointer/globalListener` ?\n                api.dispatchAction({\n                    type: 'updateAxisPointer',\n                    x: payload.x,\n                    y: payload.y\n                });\n\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    target: api.getZr().findHover(payload.x, payload.y).target,\n                    event: {}\n                }, dispatchAction);\n            }\n        },\n\n        manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n            var tooltipContent = this._tooltipContent;\n\n            if (!this._alwaysShowContent) {\n                tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n            }\n\n            this._lastX = this._lastY = null;\n\n            if (payload.from !== this.uid) {\n                this._hide(makeDispatchAction(payload, api));\n            }\n        },\n\n        // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n        // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n        // and tooltip.\n        _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n            var seriesIndex = payload.seriesIndex;\n            var dataIndex = payload.dataIndex;\n            var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n            if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n                return;\n            }\n\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n            if (!seriesModel) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                seriesModel,\n                (seriesModel.coordinateSystem || {}).model,\n                tooltipModel\n            ]);\n\n            if (tooltipModel.get('trigger') !== 'axis') {\n                return;\n            }\n\n            api.dispatchAction({\n                type: 'updateAxisPointer',\n                seriesIndex: seriesIndex,\n                dataIndex: dataIndex,\n                position: payload.position\n            });\n\n            return true;\n        },\n\n        _tryShow: function (e, dispatchAction) {\n            var el = e.target;\n            var tooltipModel = this._tooltipModel;\n\n            if (!tooltipModel) {\n                return;\n            }\n\n            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n            this._lastX = e.offsetX;\n            this._lastY = e.offsetY;\n\n            var dataByCoordSys = e.dataByCoordSys;\n            if (dataByCoordSys && dataByCoordSys.length) {\n                this._showAxisTooltip(dataByCoordSys, e);\n            }\n            // Always show item tooltip if mouse is on the element with dataIndex\n            else if (el && el.dataIndex != null) {\n                this._lastDataByCoordSys = null;\n                this._showSeriesItemTooltip(e, el, dispatchAction);\n            }\n            // Tooltip provided directly. Like legend.\n            else if (el && el.tooltip) {\n                this._lastDataByCoordSys = null;\n                this._showComponentItemTooltip(e, el, dispatchAction);\n            }\n            else {\n                this._lastDataByCoordSys = null;\n                this._hide(dispatchAction);\n            }\n        },\n\n        _showOrMove: function (tooltipModel, cb) {\n            // showDelay is used in this case: tooltip.enterable is set\n            // as true. User intent to move mouse into tooltip and click\n            // something. `showDelay` makes it easyer to enter the content\n            // but tooltip do not move immediately.\n            var delay = tooltipModel.get('showDelay');\n            cb = zrUtil.bind(cb, this);\n            clearTimeout(this._showTimout);\n            delay > 0\n                ? (this._showTimout = setTimeout(cb, delay))\n                : cb();\n        },\n\n        _showAxisTooltip: function (dataByCoordSys, e) {\n            var ecModel = this._ecModel;\n            var globalTooltipModel = this._tooltipModel;\n            var point = [e.offsetX, e.offsetY];\n            var singleDefaultHTML = [];\n            var singleParamsList = [];\n            var singleTooltipModel = buildTooltipModel([\n                e.tooltipOption,\n                globalTooltipModel\n            ]);\n\n            each(dataByCoordSys, function (itemCoordSys) {\n                // var coordParamList = [];\n                // var coordDefaultHTML = [];\n                // var coordTooltipModel = buildTooltipModel([\n                //     e.tooltipOption,\n                //     itemCoordSys.tooltipOption,\n                //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n                //     globalTooltipModel\n                // ]);\n                // var displayMode = coordTooltipModel.get('displayMode');\n                // var paramsList = displayMode === 'single' ? singleParamsList : [];\n\n                each(itemCoordSys.dataByAxis, function (item) {\n                    var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n                    var axisValue = item.value;\n                    var seriesDefaultHTML = [];\n\n                    if (!axisModel || axisValue == null) {\n                        return;\n                    }\n\n                    var valueLabel = axisPointerViewHelper.getValueLabel(\n                        axisValue, axisModel.axis, ecModel,\n                        item.seriesDataIndices,\n                        item.valueLabelOpt\n                    );\n\n                    zrUtil.each(item.seriesDataIndices, function (idxItem) {\n                        var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                        var dataIndex = idxItem.dataIndexInside;\n                        var dataParams = series && series.getDataParams(dataIndex);\n                        dataParams.axisDim = item.axisDim;\n                        dataParams.axisIndex = item.axisIndex;\n                        dataParams.axisType = item.axisType;\n                        dataParams.axisId = item.axisId;\n                        dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n                        dataParams.axisValueLabel = valueLabel;\n\n                        if (dataParams) {\n                            singleParamsList.push(dataParams);\n                            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n                        }\n                    });\n\n                    // Default tooltip content\n                    // FIXME\n                    // (1) shold be the first data which has name?\n                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n                    var firstLine = valueLabel;\n                    singleDefaultHTML.push(\n                        (firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '')\n                        + seriesDefaultHTML.join('<br />')\n                    );\n                });\n            }, this);\n\n            // In most case, the second axis is shown upper than the first one.\n            singleDefaultHTML.reverse();\n            singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n\n            var positionExpr = e.position;\n            this._showOrMove(singleTooltipModel, function () {\n                if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n                    this._updatePosition(\n                        singleTooltipModel,\n                        positionExpr,\n                        point[0], point[1],\n                        this._tooltipContent,\n                        singleParamsList\n                    );\n                }\n                else {\n                    this._showTooltipContent(\n                        singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(),\n                        point[0], point[1], positionExpr\n                    );\n                }\n            });\n\n            // Do not trigger events here, because this branch only be entered\n            // from dispatchAction.\n        },\n\n        _showSeriesItemTooltip: function (e, el, dispatchAction) {\n            var ecModel = this._ecModel;\n            // Use dataModel in element if possible\n            // Used when mouseover on a element like markPoint or edge\n            // In which case, the data is not main data in series.\n            var seriesIndex = el.seriesIndex;\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n            // For example, graph link.\n            var dataModel = el.dataModel || seriesModel;\n            var dataIndex = el.dataIndex;\n            var dataType = el.dataType;\n            var data = dataModel.getData();\n\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                dataModel,\n                seriesModel && (seriesModel.coordinateSystem || {}).model,\n                this._tooltipModel\n            ]);\n\n            var tooltipTrigger = tooltipModel.get('trigger');\n            if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n                return;\n            }\n\n            var params = dataModel.getDataParams(dataIndex, dataType);\n            var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n            var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n            this._showOrMove(tooltipModel, function () {\n                this._showTooltipContent(\n                    tooltipModel, defaultHtml, params, asyncTicket,\n                    e.offsetX, e.offsetY, e.position, e.target\n                );\n            });\n\n            // FIXME\n            // duplicated showtip if manuallyShowTip is called from dispatchAction.\n            dispatchAction({\n                type: 'showTip',\n                dataIndexInside: dataIndex,\n                dataIndex: data.getRawIndex(dataIndex),\n                seriesIndex: seriesIndex,\n                from: this.uid\n            });\n        },\n\n        _showComponentItemTooltip: function (e, el, dispatchAction) {\n            var tooltipOpt = el.tooltip;\n            if (typeof tooltipOpt === 'string') {\n                var content = tooltipOpt;\n                tooltipOpt = {\n                    content: content,\n                    // Fixed formatter\n                    formatter: content\n                };\n            }\n            var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n            var defaultHtml = subTooltipModel.get('content');\n            var asyncTicket = Math.random();\n\n            // Do not check whether `trigger` is 'none' here, because `trigger`\n            // only works on cooridinate system. In fact, we have not found case\n            // that requires setting `trigger` nothing on component yet.\n\n            this._showOrMove(subTooltipModel, function () {\n                this._showTooltipContent(\n                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\n                    asyncTicket, e.offsetX, e.offsetY, e.position, el\n                );\n            });\n\n            // If not dispatch showTip, tip may be hide triggered by axis.\n            dispatchAction({\n                type: 'showTip',\n                from: this.uid\n            });\n        },\n\n        _showTooltipContent: function (\n            tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el\n        ) {\n            // Reset ticket\n            this._ticket = '';\n\n            if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n                return;\n            }\n\n            var tooltipContent = this._tooltipContent;\n\n            var formatter = tooltipModel.get('formatter');\n            positionExpr = positionExpr || tooltipModel.get('position');\n            var html = defaultHtml;\n\n            if (formatter && typeof formatter === 'string') {\n                html = formatUtil.formatTpl(formatter, params, true);\n            }\n            else if (typeof formatter === 'function') {\n                var callback = bind(function (cbTicket, html) {\n                    if (cbTicket === this._ticket) {\n                        tooltipContent.setContent(html);\n                        this._updatePosition(\n                            tooltipModel, positionExpr, x, y, tooltipContent, params, el\n                        );\n                    }\n                }, this);\n                this._ticket = asyncTicket;\n                html = formatter(params, asyncTicket, callback);\n            }\n\n            tooltipContent.setContent(html);\n            tooltipContent.show(tooltipModel);\n\n            this._updatePosition(\n                tooltipModel, positionExpr, x, y, tooltipContent, params, el\n            );\n        },\n\n        /**\n         * @param  {string|Function|Array.<number>|Object} positionExpr\n         * @param  {number} x Mouse x\n         * @param  {number} y Mouse y\n         * @param  {boolean} confine Whether confine tooltip content in view rect.\n         * @param  {Object|<Array.<Object>} params\n         * @param  {module:zrender/Element} el target element\n         * @param  {module:echarts/ExtensionAPI} api\n         * @return {Array.<number>}\n         */\n        _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n            var viewWidth = this._api.getWidth();\n            var viewHeight = this._api.getHeight();\n            positionExpr = positionExpr || tooltipModel.get('position');\n\n            var contentSize = content.getSize();\n            var align = tooltipModel.get('align');\n            var vAlign = tooltipModel.get('verticalAlign');\n            var rect = el && el.getBoundingRect().clone();\n            el && rect.applyTransform(el.transform);\n\n            if (typeof positionExpr === 'function') {\n                // Callback of position can be an array or a string specify the position\n                positionExpr = positionExpr([x, y], params, content.el, rect, {\n                    viewSize: [viewWidth, viewHeight],\n                    contentSize: contentSize.slice()\n                });\n            }\n\n            if (zrUtil.isArray(positionExpr)) {\n                x = parsePercent(positionExpr[0], viewWidth);\n                y = parsePercent(positionExpr[1], viewHeight);\n            }\n            else if (zrUtil.isObject(positionExpr)) {\n                positionExpr.width = contentSize[0];\n                positionExpr.height = contentSize[1];\n                var layoutRect = layoutUtil.getLayoutRect(\n                    positionExpr, {width: viewWidth, height: viewHeight}\n                );\n                x = layoutRect.x;\n                y = layoutRect.y;\n                align = null;\n                // When positionExpr is left/top/right/bottom,\n                // align and verticalAlign will not work.\n                vAlign = null;\n            }\n            // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n            else if (typeof positionExpr === 'string' && el) {\n                var pos = calcTooltipPosition(\n                    positionExpr, rect, contentSize\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n            else {\n                var pos = refixTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n            vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n            if (tooltipModel.get('confine')) {\n                var pos = confineTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            content.moveTo(x, y);\n        },\n\n        // FIXME\n        // Should we remove this but leave this to user?\n        _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n            var lastCoordSys = this._lastDataByCoordSys;\n            var contentNotChanged = !!lastCoordSys\n                && lastCoordSys.length === dataByCoordSys.length;\n\n            contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n                var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n                var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n                var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n                contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n\n                contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n                    var thisItem = thisDataByAxis[indexAxis] || {};\n                    var lastIndices = lastItem.seriesDataIndices || [];\n                    var newIndices = thisItem.seriesDataIndices || [];\n\n                    contentNotChanged &=\n                        lastItem.value === thisItem.value\n                        && lastItem.axisType === thisItem.axisType\n                        && lastItem.axisId === thisItem.axisId\n                        && lastIndices.length === newIndices.length;\n\n                    contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n                        var newIdxItem = newIndices[j];\n                        contentNotChanged &=\n                            lastIdxItem.seriesIndex === newIdxItem.seriesIndex\n                            && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n                    });\n                });\n            });\n\n            this._lastDataByCoordSys = dataByCoordSys;\n\n            return !!contentNotChanged;\n        },\n\n        _hide: function (dispatchAction) {\n            // Do not directly hideLater here, because this behavior may be prevented\n            // in dispatchAction when showTip is dispatched.\n\n            // FIXME\n            // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n            this._lastDataByCoordSys = null;\n            dispatchAction({\n                type: 'hideTip',\n                from: this.uid\n            });\n        },\n\n        dispose: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            this._tooltipContent.hide();\n            globalListener.unregister('itemTooltip', api);\n        }\n    });\n\n\n    /**\n     * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n     * From top to bottom. (the last one should be globalTooltipModel);\n     */\n    function buildTooltipModel(modelCascade) {\n        var resultModel = modelCascade.pop();\n        while (modelCascade.length) {\n            var tooltipOpt = modelCascade.pop();\n            if (tooltipOpt) {\n                if (tooltipOpt instanceof Model) {\n                    tooltipOpt = tooltipOpt.get('tooltip', true);\n                }\n                // In each data item tooltip can be simply write:\n                // {\n                //  value: 10,\n                //  tooltip: 'Something you need to know'\n                // }\n                if (typeof tooltipOpt === 'string') {\n                    tooltipOpt = {formatter: tooltipOpt};\n                }\n                resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n            }\n        }\n        return resultModel;\n    }\n\n    function makeDispatchAction(payload, api) {\n        return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n    }\n\n    function refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n        var size = getOuterSize(el);\n        var width = size.width;\n        var height = size.height;\n\n        if (gapH != null) {\n            if (x + width + gapH > viewWidth) {\n                x -= width + gapH;\n            }\n            else {\n                x += gapH;\n            }\n        }\n        if (gapV != null) {\n            if (y + height + gapV > viewHeight) {\n                y -= height + gapV;\n            }\n            else {\n                y += gapV;\n            }\n        }\n        return [x, y];\n    }\n\n    function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var size = getOuterSize(el);\n        var width = size.width;\n        var height = size.height;\n\n        x = Math.min(x + width, viewWidth) - width;\n        y = Math.min(y + height, viewHeight) - height;\n        x = Math.max(x, 0);\n        y = Math.max(y, 0);\n\n        return [x, y];\n    }\n\n    function getOuterSize(el) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        // Consider browser compatibility.\n        // IE8 does not support getComputedStyle.\n        if (document.defaultView && document.defaultView.getComputedStyle) {\n            var stl = document.defaultView.getComputedStyle(el);\n            if (stl) {\n                width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10)\n                    + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n                height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10)\n                    + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n            }\n        }\n\n        return {width: width, height: height};\n    }\n\n    function calcTooltipPosition(position, rect, contentSize) {\n        var domWidth = contentSize[0];\n        var domHeight = contentSize[1];\n        var gap = 5;\n        var x = 0;\n        var y = 0;\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n        switch (position) {\n            case 'inside':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'top':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y - domHeight - gap;\n                break;\n            case 'bottom':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight + gap;\n                break;\n            case 'left':\n                x = rect.x - domWidth - gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'right':\n                x = rect.x + rectWidth + gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n        }\n        return [x, y];\n    }\n\n    function isCenterAlign(align) {\n        return align === 'center' || align === 'middle';\n    }\n\n\n\n\n/***/ }),\n\n/***/ 734:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var axisDefault = __webpack_require__(684);\n    var zrUtil = __webpack_require__(606);\n    var ComponentModel = __webpack_require__(618);\n    var layout = __webpack_require__(619);\n\n    // FIXME axisType is fixed ?\n    var AXIS_TYPES = ['value', 'category', 'time', 'log'];\n\n    /**\n     * Generate sub axis model class\n     * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n     * @param {module:echarts/model/Component} BaseAxisModelClass\n     * @param {Function} axisTypeDefaulter\n     * @param {Object} [extraDefaultOption]\n     */\n    module.exports = function (axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n\n        zrUtil.each(AXIS_TYPES, function (axisType) {\n\n            BaseAxisModelClass.extend({\n\n                type: axisName + 'Axis.' + axisType,\n\n                mergeDefaultAndTheme: function (option, ecModel) {\n                    var layoutMode = this.layoutMode;\n                    var inputPositionParams = layoutMode\n                        ? layout.getLayoutParams(option) : {};\n\n                    var themeModel = ecModel.getTheme();\n                    zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n                    zrUtil.merge(option, this.getDefaultOption());\n\n                    option.type = axisTypeDefaulter(axisName, option);\n\n                    if (layoutMode) {\n                        layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n                    }\n                },\n\n                defaultOption: zrUtil.mergeAll(\n                    [\n                        {},\n                        axisDefault[axisType + 'Axis'],\n                        extraDefaultOption\n                    ],\n                    true\n                )\n            });\n        });\n\n        ComponentModel.registerSubTypeDefaulter(\n            axisName + 'Axis',\n            zrUtil.curry(axisTypeDefaulter, axisName)\n        );\n    };\n\n\n/***/ }),\n\n/***/ 735:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var Axis = __webpack_require__(650);\n\n    /**\n     * Extend axis 2d\n     * @constructor module:echarts/coord/cartesian/Axis2D\n     * @extends {module:echarts/coord/cartesian/Axis}\n     * @param {string} dim\n     * @param {*} scale\n     * @param {Array.<number>} coordExtent\n     * @param {string} axisType\n     * @param {string} position\n     */\n    var Axis2D = function (dim, scale, coordExtent, axisType, position) {\n        Axis.call(this, dim, scale, coordExtent);\n        /**\n         * Axis type\n         *  - 'category'\n         *  - 'value'\n         *  - 'time'\n         *  - 'log'\n         * @type {string}\n         */\n        this.type = axisType || 'value';\n\n        /**\n         * Axis position\n         *  - 'top'\n         *  - 'bottom'\n         *  - 'left'\n         *  - 'right'\n         */\n        this.position = position || 'bottom';\n    };\n\n    Axis2D.prototype = {\n\n        constructor: Axis2D,\n\n        /**\n         * Index of axis, can be used as key\n         */\n        index: 0,\n        /**\n         * If axis is on the zero position of the other axis\n         * @type {boolean}\n         */\n        onZero: false,\n\n        /**\n         * Axis model\n         * @param {module:echarts/coord/cartesian/AxisModel}\n         */\n        model: null,\n\n        isHorizontal: function () {\n            var position = this.position;\n            return position === 'top' || position === 'bottom';\n        },\n\n        /**\n         * Each item cooresponds to this.getExtent(), which\n         * means globalExtent[0] may greater than globalExtent[1],\n         * unless `asc` is input.\n         *\n         * @param {boolean} [asc]\n         * @return {Array.<number>}\n         */\n        getGlobalExtent: function (asc) {\n            var ret = this.getExtent();\n            ret[0] = this.toGlobalCoord(ret[0]);\n            ret[1] = this.toGlobalCoord(ret[1]);\n            asc && ret[0] > ret[1] && ret.reverse();\n            return ret;\n        },\n\n        getOtherAxis: function () {\n            this.grid.getOtherAxis();\n        },\n\n        /**\n         * If label is ignored.\n         * Automatically used when axis is category and label can not be all shown\n         * @param  {number}  idx\n         * @return {boolean}\n         */\n        isLabelIgnored: function (idx) {\n            if (this.type === 'category') {\n                var labelInterval = this.getLabelInterval();\n                return ((typeof labelInterval === 'function')\n                    && !labelInterval(idx, this.scale.getLabel(idx)))\n                    || idx % (labelInterval + 1);\n            }\n        },\n\n        /**\n         * @override\n         */\n        pointToData: function (point, clamp) {\n            return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n        },\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var localCoord = axis.toLocalCoord(80);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toLocalCoord: null,\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var globalCoord = axis.toLocalCoord(40);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toGlobalCoord: null\n\n    };\n    zrUtil.inherits(Axis2D, Axis);\n\n    module.exports = Axis2D;\n\n\n/***/ }),\n\n/***/ 736:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\n\n\n    var zrUtil = __webpack_require__(606);\n\n    function dimAxisMapper(dim) {\n        return this._axes[dim];\n    }\n\n    /**\n     * @alias module:echarts/coord/Cartesian\n     * @constructor\n     */\n    var Cartesian = function (name) {\n        this._axes = {};\n\n        this._dimList = [];\n\n        /**\n         * @type {string}\n         */\n        this.name = name || '';\n    };\n\n    Cartesian.prototype = {\n\n        constructor: Cartesian,\n\n        type: 'cartesian',\n\n        /**\n         * Get axis\n         * @param  {number|string} dim\n         * @return {module:echarts/coord/Cartesian~Axis}\n         */\n        getAxis: function (dim) {\n            return this._axes[dim];\n        },\n\n        /**\n         * Get axes list\n         * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n         */\n        getAxes: function () {\n            return zrUtil.map(this._dimList, dimAxisMapper, this);\n        },\n\n        /**\n         * Get axes list by given scale type\n         */\n        getAxesByScale: function (scaleType) {\n            scaleType = scaleType.toLowerCase();\n            return zrUtil.filter(\n                this.getAxes(),\n                function (axis) {\n                    return axis.scale.type === scaleType;\n                }\n            );\n        },\n\n        /**\n         * Add axis\n         * @param {module:echarts/coord/Cartesian.Axis}\n         */\n        addAxis: function (axis) {\n            var dim = axis.dim;\n\n            this._axes[dim] = axis;\n\n            this._dimList.push(dim);\n        },\n\n        /**\n         * Convert data to coord in nd space\n         * @param {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        dataToCoord: function (val) {\n            return this._dataCoordConvert(val, 'dataToCoord');\n        },\n\n        /**\n         * Convert coord in nd space to data\n         * @param  {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        coordToData: function (val) {\n            return this._dataCoordConvert(val, 'coordToData');\n        },\n\n        _dataCoordConvert: function (input, method) {\n            var dimList = this._dimList;\n\n            var output = input instanceof Array ? [] : {};\n\n            for (var i = 0; i < dimList.length; i++) {\n                var dim = dimList[i];\n                var axis = this._axes[dim];\n\n                output[dim] = axis[method](input[dim]);\n            }\n\n            return output;\n        }\n    };\n\n    module.exports = Cartesian;\n\n\n/***/ }),\n\n/***/ 737:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var Cartesian = __webpack_require__(736);\n\n    function Cartesian2D(name) {\n\n        Cartesian.call(this, name);\n    }\n\n    Cartesian2D.prototype = {\n\n        constructor: Cartesian2D,\n\n        type: 'cartesian2d',\n\n        /**\n         * @type {Array.<string>}\n         * @readOnly\n         */\n        dimensions: ['x', 'y'],\n\n        /**\n         * Base axis will be used on stacking.\n         *\n         * @return {module:echarts/coord/cartesian/Axis2D}\n         */\n        getBaseAxis: function () {\n            return this.getAxesByScale('ordinal')[0]\n                || this.getAxesByScale('time')[0]\n                || this.getAxis('x');\n        },\n\n        /**\n         * If contain point\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        containPoint: function (point) {\n            var axisX = this.getAxis('x');\n            var axisY = this.getAxis('y');\n            return axisX.contain(axisX.toLocalCoord(point[0]))\n                && axisY.contain(axisY.toLocalCoord(point[1]));\n        },\n\n        /**\n         * If contain data\n         * @param {Array.<number>} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.getAxis('x').containData(data[0])\n                && this.getAxis('y').containData(data[1]);\n        },\n\n        /**\n         * @param {Array.<number>} data\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        dataToPoint: function (data, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)),\n                yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))\n            ];\n        },\n\n        /**\n         * @param {Array.<number>} point\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        pointToData: function (point, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp),\n                yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)\n            ];\n        },\n\n        /**\n         * Get other axis\n         * @param {module:echarts/coord/cartesian/Axis2D} axis\n         */\n        getOtherAxis: function (axis) {\n            return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n        }\n\n    };\n\n    zrUtil.inherits(Cartesian2D, Cartesian);\n\n    module.exports = Cartesian2D;\n\n\n/***/ }),\n\n/***/ 738:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\n\n\n    __webpack_require__(663);\n\n    var ComponentModel = __webpack_require__(618);\n\n    module.exports = ComponentModel.extend({\n\n        type: 'grid',\n\n        dependencies: ['xAxis', 'yAxis'],\n\n        layoutMode: 'box',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Grid}\n         */\n        coordinateSystem: null,\n\n        defaultOption: {\n            show: false,\n            zlevel: 0,\n            z: 0,\n            left: '10%',\n            top: 60,\n            right: '10%',\n            bottom: 60,\n            // If grid size contain label\n            containLabel: false,\n            // width: {totalWidth} - left - right,\n            // height: {totalHeight} - top - bottom,\n            backgroundColor: 'rgba(0,0,0,0)',\n            borderWidth: 1,\n            borderColor: '#ccc'\n        }\n    });\n\n\n/***/ }),\n\n/***/ 739:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    function defaultKeyGetter(item) {\n        return item;\n    }\n\n    /**\n     * @param {Array} oldArr\n     * @param {Array} newArr\n     * @param {Function} oldKeyGetter\n     * @param {Function} newKeyGetter\n     * @param {Object} [context] Can be visited by this.context in callback.\n     */\n    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n        this._old = oldArr;\n        this._new = newArr;\n\n        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n\n        this.context = context;\n    }\n\n    DataDiffer.prototype = {\n\n        constructor: DataDiffer,\n\n        /**\n         * Callback function when add a data\n         */\n        add: function (func) {\n            this._add = func;\n            return this;\n        },\n\n        /**\n         * Callback function when update a data\n         */\n        update: function (func) {\n            this._update = func;\n            return this;\n        },\n\n        /**\n         * Callback function when remove a data\n         */\n        remove: function (func) {\n            this._remove = func;\n            return this;\n        },\n\n        execute: function () {\n            var oldArr = this._old;\n            var newArr = this._new;\n\n            var oldDataIndexMap = {};\n            var newDataIndexMap = {};\n            var oldDataKeyArr = [];\n            var newDataKeyArr = [];\n            var i;\n\n            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this);\n\n            // Travel by inverted order to make sure order consistency\n            // when duplicate keys exists (consider newDataIndex.pop() below).\n            // For performance consideration, these code below do not look neat.\n            for (i = 0; i < oldArr.length; i++) {\n                var key = oldDataKeyArr[i];\n                var idx = newDataIndexMap[key];\n\n                // idx can never be empty array here. see 'set null' logic below.\n                if (idx != null) {\n                    // Consider there is duplicate key (for example, use dataItem.name as key).\n                    // We should make sure every item in newArr and oldArr can be visited.\n                    var len = idx.length;\n                    if (len) {\n                        len === 1 && (newDataIndexMap[key] = null);\n                        idx = idx.unshift();\n                    }\n                    else {\n                        newDataIndexMap[key] = null;\n                    }\n                    this._update && this._update(idx, i);\n                }\n                else {\n                    this._remove && this._remove(i);\n                }\n            }\n\n            for (var i = 0; i < newDataKeyArr.length; i++) {\n                var key = newDataKeyArr[i];\n                if (newDataIndexMap.hasOwnProperty(key)) {\n                    var idx = newDataIndexMap[key];\n                    if (idx == null) {\n                        continue;\n                    }\n                    // idx can never be empty array here. see 'set null' logic above.\n                    if (!idx.length) {\n                        this._add && this._add(idx);\n                    }\n                    else {\n                        for (var j = 0, len = idx.length; j < len; j++) {\n                            this._add && this._add(idx[j]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    function initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n        for (var i = 0; i < arr.length; i++) {\n            // Add prefix to avoid conflict with Object.prototype.\n            var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n            var existence = map[key];\n            if (existence == null) {\n                keyArr.push(key);\n                map[key] = i;\n            }\n            else {\n                if (!existence.length) {\n                    map[key] = existence = [existence];\n                }\n                existence.push(i);\n            }\n        }\n    }\n\n    module.exports = DataDiffer;\n\n\n/***/ }),\n\n/***/ 740:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var createListFromArray = __webpack_require__(648);\n    var symbolUtil = __webpack_require__(639);\n    var axisHelper = __webpack_require__(620);\n    var axisModelCommonMixin = __webpack_require__(651);\n    var Model = __webpack_require__(614);\n    var util = __webpack_require__(606);\n\n    module.exports = {\n        /**\n         * Create a muti dimension List structure from seriesModel.\n         * @param  {module:echarts/model/Model} seriesModel\n         * @return {module:echarts/data/List} list\n         */\n        createList: function (seriesModel) {\n            var data = seriesModel.get('data');\n            return createListFromArray(data, seriesModel, seriesModel.ecModel);\n        },\n\n        /**\n         * @see {module:echarts/data/helper/completeDimensions}\n         */\n        completeDimensions: __webpack_require__(631),\n\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @see http://echarts.baidu.com/option.html#series-scatter.symbol\n         * @param {string} symbolDesc\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: symbolUtil.createSymbol,\n\n        /**\n         * Create scale\n         * @param {Array.<number>} dataExtent\n         * @param {Object|module:echarts/Model} option\n         */\n        createScale: function (dataExtent, option) {\n            var axisModel = option;\n            if (!(option instanceof Model)) {\n                axisModel = new Model(option);\n                util.mixin(axisModel, axisModelCommonMixin);\n            }\n\n            var scale = axisHelper.createScaleByModel(axisModel);\n            scale.setExtent(dataExtent[0], dataExtent[1]);\n\n            axisHelper.niceScaleExtent(scale, axisModel);\n            return scale;\n        },\n\n        /**\n         * Mixin common methods to axis model,\n         *\n         * Inlcude methods\n         * `getFormattedLabels() => Array.<string>`\n         * `getCategories() => Array.<string>`\n         * `getMin(origin: boolean) => number`\n         * `getMax(origin: boolean) => number`\n         * `getNeedCrossZero() => boolean`\n         * `setRange(start: number, end: number)`\n         * `resetRange()`\n         */\n        mixinAxisModelCommonMethods: function (Model) {\n            util.mixin(Model, axisModelCommonMixin);\n        }\n    };\n\n\n/***/ }),\n\n/***/ 741:\n/***/ (function(module, exports) {\n\n\n\n    module.exports = function (seriesType, ecModel) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var coordSys = seriesModel.coordinateSystem;\n\n            if (!coordSys) {\n                return;\n            }\n\n            var dims = [];\n            var coordDims = coordSys.dimensions;\n            for (var i = 0; i < coordDims.length; i++) {\n                dims.push(seriesModel.coordDimToDataDim(coordSys.dimensions[i])[0]);\n            }\n\n            if (dims.length === 1) {\n                data.each(dims[0], function (x, idx) {\n                    // Also {Array.<number>}, not undefined to avoid if...else... statement\n                    data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n                });\n            }\n            else if (dims.length === 2) {\n                data.each(dims, function (x, y, idx) {\n                    // Also {Array.<number>}, not undefined to avoid if...else... statement\n                    data.setItemLayout(\n                        idx, (isNaN(x) || isNaN(y)) ? [NaN, NaN] : coordSys.dataToPoint([x, y])\n                    );\n                }, true);\n            }\n        });\n    };\n\n\n\n/***/ }),\n\n/***/ 742:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var graphic = __webpack_require__(608);\n    var zrUtil = __webpack_require__(606);\n    var PI = Math.PI;\n    /**\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [opts]\n     * @param {string} [opts.text]\n     * @param {string} [opts.color]\n     * @param {string} [opts.textColor]\n     * @return {module:zrender/Element}\n     */\n    module.exports = function (api, opts) {\n        opts = opts || {};\n        zrUtil.defaults(opts, {\n            text: 'loading',\n            color: '#c23531',\n            textColor: '#000',\n            maskColor: 'rgba(255, 255, 255, 0.8)',\n            zlevel: 0\n        });\n        var mask = new graphic.Rect({\n            style: {\n                fill: opts.maskColor\n            },\n            zlevel: opts.zlevel,\n            z: 10000\n        });\n        var arc = new graphic.Arc({\n            shape: {\n                startAngle: -PI / 2,\n                endAngle: -PI / 2 + 0.1,\n                r: 10\n            },\n            style: {\n                stroke: opts.color,\n                lineCap: 'round',\n                lineWidth: 5\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n        var labelRect = new graphic.Rect({\n            style: {\n                fill: 'none',\n                text: opts.text,\n                textPosition: 'right',\n                textDistance: 10,\n                textFill: opts.textColor\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n\n        arc.animateShape(true)\n            .when(1000, {\n                endAngle: PI * 3 / 2\n            })\n            .start('circularInOut');\n        arc.animateShape(true)\n            .when(1000, {\n                startAngle: PI * 3 / 2\n            })\n            .delay(300)\n            .start('circularInOut');\n\n        var group = new graphic.Group();\n        group.add(arc);\n        group.add(labelRect);\n        group.add(mask);\n        // Inject resize\n        group.resize = function () {\n            var cx = api.getWidth() / 2;\n            var cy = api.getHeight() / 2;\n            arc.setShape({\n                cx: cx,\n                cy: cy\n            });\n            var r = arc.shape.r;\n            labelRect.setShape({\n                x: cx - r,\n                y: cy - r,\n                width: r * 2,\n                height: r * 2\n            });\n\n            mask.setShape({\n                x: 0,\n                y: 0,\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n        };\n        group.resize();\n        return group;\n    };\n\n\n/***/ }),\n\n/***/ 743:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n\n\n    /**\n     * Caution: If the mechanism should be changed some day, these cases\n     * should be considered:\n     *\n     * (1) In `merge option` mode, if using the same option to call `setOption`\n     * many times, the result should be the same (try our best to ensure that).\n     * (2) In `merge option` mode, if a component has no id/name specified, it\n     * will be merged by index, and the result sequence of the components is\n     * consistent to the original sequence.\n     * (3) `reset` feature (in toolbox). Find detailed info in comments about\n     * `mergeOption` in module:echarts/model/OptionManager.\n     */\n\n    var zrUtil = __webpack_require__(606);\n    var modelUtil = __webpack_require__(609);\n    var Model = __webpack_require__(614);\n    var each = zrUtil.each;\n    var filter = zrUtil.filter;\n    var map = zrUtil.map;\n    var isArray = zrUtil.isArray;\n    var indexOf = zrUtil.indexOf;\n    var isObject = zrUtil.isObject;\n\n    var ComponentModel = __webpack_require__(618);\n\n    var globalDefault = __webpack_require__(745);\n\n    var OPTION_INNER_KEY = '\\0_ec_inner';\n\n    /**\n     * @alias module:echarts/model/Global\n     *\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {Object} theme\n     */\n    var GlobalModel = Model.extend({\n\n        constructor: GlobalModel,\n\n        init: function (option, parentModel, theme, optionManager) {\n            theme = theme || {};\n\n            this.option = null; // Mark as not initialized.\n\n            /**\n             * @type {module:echarts/model/Model}\n             * @private\n             */\n            this._theme = new Model(theme);\n\n            /**\n             * @type {module:echarts/model/OptionManager}\n             */\n            this._optionManager = optionManager;\n        },\n\n        setOption: function (option, optionPreprocessorFuncs) {\n            zrUtil.assert(\n                !(OPTION_INNER_KEY in option),\n                'please use chart.getOption()'\n            );\n\n            this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n            this.resetOption(null);\n        },\n\n        /**\n         * @param {string} type null/undefined: reset all.\n         *                      'recreate': force recreate all.\n         *                      'timeline': only reset timeline option\n         *                      'media': only reset media query option\n         * @return {boolean} Whether option changed.\n         */\n        resetOption: function (type) {\n            var optionChanged = false;\n            var optionManager = this._optionManager;\n\n            if (!type || type === 'recreate') {\n                var baseOption = optionManager.mountOption(type === 'recreate');\n\n                if (!this.option || type === 'recreate') {\n                    initBase.call(this, baseOption);\n                }\n                else {\n                    this.restoreData();\n                    this.mergeOption(baseOption);\n                }\n                optionChanged = true;\n            }\n\n            if (type === 'timeline' || type === 'media') {\n                this.restoreData();\n            }\n\n            if (!type || type === 'recreate' || type === 'timeline') {\n                var timelineOption = optionManager.getTimelineOption(this);\n                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n            }\n\n            if (!type || type === 'recreate' || type === 'media') {\n                var mediaOptions = optionManager.getMediaOption(this, this._api);\n                if (mediaOptions.length) {\n                    each(mediaOptions, function (mediaOption) {\n                        this.mergeOption(mediaOption, optionChanged = true);\n                    }, this);\n                }\n            }\n\n            return optionChanged;\n        },\n\n        /**\n         * @protected\n         */\n        mergeOption: function (newOption) {\n            var option = this.option;\n            var componentsMap = this._componentsMap;\n            var newCptTypes = [];\n\n            // 如果不存在对应的 component model 则直接 merge\n            each(newOption, function (componentOption, mainType) {\n                if (componentOption == null) {\n                    return;\n                }\n\n                if (!ComponentModel.hasClass(mainType)) {\n                    option[mainType] = option[mainType] == null\n                        ? zrUtil.clone(componentOption)\n                        : zrUtil.merge(option[mainType], componentOption, true);\n                }\n                else {\n                    newCptTypes.push(mainType);\n                }\n            });\n\n            // FIXME OPTION 同步是否要改回原来的\n            ComponentModel.topologicalTravel(\n                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\n            );\n\n            this._seriesIndices = this._seriesIndices || [];\n\n            function visitComponent(mainType, dependencies) {\n                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n\n                var mapResult = modelUtil.mappingToExists(\n                    componentsMap.get(mainType), newCptOptionList\n                );\n\n                modelUtil.makeIdAndName(mapResult);\n\n                // Set mainType and complete subType.\n                each(mapResult, function (item, index) {\n                    var opt = item.option;\n                    if (isObject(opt)) {\n                        item.keyInfo.mainType = mainType;\n                        item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n                    }\n                });\n\n                var dependentModels = getComponentsByTypes(\n                    componentsMap, dependencies\n                );\n\n                option[mainType] = [];\n                componentsMap.set(mainType, []);\n\n                each(mapResult, function (resultItem, index) {\n                    var componentModel = resultItem.exist;\n                    var newCptOption = resultItem.option;\n\n                    zrUtil.assert(\n                        isObject(newCptOption) || componentModel,\n                        'Empty component definition'\n                    );\n\n                    // Consider where is no new option and should be merged using {},\n                    // see removeEdgeAndAdd in topologicalTravel and\n                    // ComponentModel.getAllClassMainTypes.\n                    if (!newCptOption) {\n                        componentModel.mergeOption({}, this);\n                        componentModel.optionUpdated({}, false);\n                    }\n                    else {\n                        var ComponentModelClass = ComponentModel.getClass(\n                            mainType, resultItem.keyInfo.subType, true\n                        );\n\n                        if (componentModel && componentModel instanceof ComponentModelClass) {\n                            componentModel.name = resultItem.keyInfo.name;\n                            componentModel.mergeOption(newCptOption, this);\n                            componentModel.optionUpdated(newCptOption, false);\n                        }\n                        else {\n                            // PENDING Global as parent ?\n                            var extraOpt = zrUtil.extend(\n                                {\n                                    dependentModels: dependentModels,\n                                    componentIndex: index\n                                },\n                                resultItem.keyInfo\n                            );\n                            componentModel = new ComponentModelClass(\n                                newCptOption, this, this, extraOpt\n                            );\n                            zrUtil.extend(componentModel, extraOpt);\n                            componentModel.init(newCptOption, this, this, extraOpt);\n                            // Call optionUpdated after init.\n                            // newCptOption has been used as componentModel.option\n                            // and may be merged with theme and default, so pass null\n                            // to avoid confusion.\n                            componentModel.optionUpdated(null, true);\n                        }\n                    }\n\n                    componentsMap.get(mainType)[index] = componentModel;\n                    option[mainType][index] = componentModel.option;\n                }, this);\n\n                // Backup series for filtering.\n                if (mainType === 'series') {\n                    this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n                }\n            }\n        },\n\n        /**\n         * Get option for output (cloned option and inner info removed)\n         * @public\n         * @return {Object}\n         */\n        getOption: function () {\n            var option = zrUtil.clone(this.option);\n\n            each(option, function (opts, mainType) {\n                if (ComponentModel.hasClass(mainType)) {\n                    var opts = modelUtil.normalizeToArray(opts);\n                    for (var i = opts.length - 1; i >= 0; i--) {\n                        // Remove options with inner id.\n                        if (modelUtil.isIdInner(opts[i])) {\n                            opts.splice(i, 1);\n                        }\n                    }\n                    option[mainType] = opts;\n                }\n            });\n\n            delete option[OPTION_INNER_KEY];\n\n            return option;\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        getTheme: function () {\n            return this._theme;\n        },\n\n        /**\n         * @param {string} mainType\n         * @param {number} [idx=0]\n         * @return {module:echarts/model/Component}\n         */\n        getComponent: function (mainType, idx) {\n            var list = this._componentsMap.get(mainType);\n            if (list) {\n                return list[idx || 0];\n            }\n        },\n\n        /**\n         * If none of index and id and name used, return all components with mainType.\n         * @param {Object} condition\n         * @param {string} condition.mainType\n         * @param {string} [condition.subType] If ignore, only query by mainType\n         * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        queryComponents: function (condition) {\n            var mainType = condition.mainType;\n            if (!mainType) {\n                return [];\n            }\n\n            var index = condition.index;\n            var id = condition.id;\n            var name = condition.name;\n\n            var cpts = this._componentsMap.get(mainType);\n\n            if (!cpts || !cpts.length) {\n                return [];\n            }\n\n            var result;\n\n            if (index != null) {\n                if (!isArray(index)) {\n                    index = [index];\n                }\n                result = filter(map(index, function (idx) {\n                    return cpts[idx];\n                }), function (val) {\n                    return !!val;\n                });\n            }\n            else if (id != null) {\n                var isIdArray = isArray(id);\n                result = filter(cpts, function (cpt) {\n                    return (isIdArray && indexOf(id, cpt.id) >= 0)\n                        || (!isIdArray && cpt.id === id);\n                });\n            }\n            else if (name != null) {\n                var isNameArray = isArray(name);\n                result = filter(cpts, function (cpt) {\n                    return (isNameArray && indexOf(name, cpt.name) >= 0)\n                        || (!isNameArray && cpt.name === name);\n                });\n            }\n            else {\n                // Return all components with mainType\n                result = cpts.slice();\n            }\n\n            return filterBySubType(result, condition);\n        },\n\n        /**\n         * The interface is different from queryComponents,\n         * which is convenient for inner usage.\n         *\n         * @usage\n         * var result = findComponents(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series'},\n         *     function (model, index) {...}\n         * );\n         * // result like [component0, componnet1, ...]\n         *\n         * @param {Object} condition\n         * @param {string} condition.mainType Mandatory.\n         * @param {string} [condition.subType] Optional.\n         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n         *        where xxx is mainType.\n         *        If query attribute is null/undefined or has no index/id/name,\n         *        do not filtering by query conditions, which is convenient for\n         *        no-payload situations or when target of action is global.\n         * @param {Function} [condition.filter] parameter: component, return boolean.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        findComponents: function (condition) {\n            var query = condition.query;\n            var mainType = condition.mainType;\n\n            var queryCond = getQueryCond(query);\n            var result = queryCond\n                ? this.queryComponents(queryCond)\n                : this._componentsMap.get(mainType);\n\n            return doFilter(filterBySubType(result, condition));\n\n            function getQueryCond(q) {\n                var indexAttr = mainType + 'Index';\n                var idAttr = mainType + 'Id';\n                var nameAttr = mainType + 'Name';\n                return q && (\n                        q[indexAttr] != null\n                        || q[idAttr] != null\n                        || q[nameAttr] != null\n                    )\n                    ? {\n                        mainType: mainType,\n                        // subType will be filtered finally.\n                        index: q[indexAttr],\n                        id: q[idAttr],\n                        name: q[nameAttr]\n                    }\n                    : null;\n            }\n\n            function doFilter(res) {\n                return condition.filter\n                     ? filter(res, condition.filter)\n                     : res;\n            }\n        },\n\n        /**\n         * @usage\n         * eachComponent('legend', function (legendModel, index) {\n         *     ...\n         * });\n         * eachComponent(function (componentType, model, index) {\n         *     // componentType does not include subType\n         *     // (componentType is 'xxx' but not 'xxx.aa')\n         * });\n         * eachComponent(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n         *     function (model, index) {...}\n         * );\n         * eachComponent(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n         *     function (model, index) {...}\n         * );\n         *\n         * @param {string|Object=} mainType When mainType is object, the definition\n         *                                  is the same as the method 'findComponents'.\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachComponent: function (mainType, cb, context) {\n            var componentsMap = this._componentsMap;\n\n            if (typeof mainType === 'function') {\n                context = cb;\n                cb = mainType;\n                componentsMap.each(function (components, componentType) {\n                    each(components, function (component, index) {\n                        cb.call(context, componentType, component, index);\n                    });\n                });\n            }\n            else if (zrUtil.isString(mainType)) {\n                each(componentsMap.get(mainType), cb, context);\n            }\n            else if (isObject(mainType)) {\n                var queryResult = this.findComponents(mainType);\n                each(queryResult, cb, context);\n            }\n        },\n\n        /**\n         * @param {string} name\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByName: function (name) {\n            var series = this._componentsMap.get('series');\n            return filter(series, function (oneSeries) {\n                return oneSeries.name === name;\n            });\n        },\n\n        /**\n         * @param {number} seriesIndex\n         * @return {module:echarts/model/Series}\n         */\n        getSeriesByIndex: function (seriesIndex) {\n            return this._componentsMap.get('series')[seriesIndex];\n        },\n\n        /**\n         * @param {string} subType\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByType: function (subType) {\n            var series = this._componentsMap.get('series');\n            return filter(series, function (oneSeries) {\n                return oneSeries.subType === subType;\n            });\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeries: function () {\n            return this._componentsMap.get('series').slice();\n        },\n\n        /**\n         * After filtering, series may be different\n         * frome raw series.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.get('series')[rawSeriesIndex];\n                cb.call(context, series, rawSeriesIndex);\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeries: function (cb, context) {\n            each(this._componentsMap.get('series'), cb, context);\n        },\n\n        /**\n         * After filtering, series may be different.\n         * frome raw series.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeriesByType: function (subType, cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.get('series')[rawSeriesIndex];\n                if (series.subType === subType) {\n                    cb.call(context, series, rawSeriesIndex);\n                }\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered of given type.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeriesByType: function (subType, cb, context) {\n            return each(this.getSeriesByType(subType), cb, context);\n        },\n\n        /**\n         * @param {module:echarts/model/Series} seriesModel\n         */\n        isSeriesFiltered: function (seriesModel) {\n            assertSeriesInitialized(this);\n            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getCurrentSeriesIndices: function () {\n            return (this._seriesIndices || []).slice();\n        },\n\n        /**\n         * @param {Function} cb\n         * @param {*} context\n         */\n        filterSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            var filteredSeries = filter(\n                this._componentsMap.get('series'), cb, context\n            );\n            this._seriesIndices = createSeriesIndices(filteredSeries);\n        },\n\n        restoreData: function () {\n            var componentsMap = this._componentsMap;\n\n            this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n\n            var componentTypes = [];\n            componentsMap.each(function (components, componentType) {\n                componentTypes.push(componentType);\n            });\n\n            ComponentModel.topologicalTravel(\n                componentTypes,\n                ComponentModel.getAllClassMainTypes(),\n                function (componentType, dependencies) {\n                    each(componentsMap.get(componentType), function (component) {\n                        component.restoreData();\n                    });\n                }\n            );\n        }\n\n    });\n\n    /**\n     * @inner\n     */\n    function mergeTheme(option, theme) {\n        zrUtil.each(theme, function (themeItem, name) {\n            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n            if (!ComponentModel.hasClass(name)) {\n                if (typeof themeItem === 'object') {\n                    option[name] = !option[name]\n                        ? zrUtil.clone(themeItem)\n                        : zrUtil.merge(option[name], themeItem, false);\n                }\n                else {\n                    if (option[name] == null) {\n                        option[name] = themeItem;\n                    }\n                }\n            }\n        });\n    }\n\n    function initBase(baseOption) {\n        baseOption = baseOption;\n\n        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n        this.option = {};\n        this.option[OPTION_INNER_KEY] = 1;\n\n        /**\n         * Init with series: [], in case of calling findSeries method\n         * before series initialized.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @private\n         */\n        this._componentsMap = zrUtil.createHashMap({series: []});\n\n        /**\n         * Mapping between filtered series list and raw series list.\n         * key: filtered series indices, value: raw series indices.\n         * @type {Array.<nubmer>}\n         * @private\n         */\n        this._seriesIndices = null;\n\n        mergeTheme(baseOption, this._theme.option);\n\n        // TODO Needs clone when merging to the unexisted property\n        zrUtil.merge(baseOption, globalDefault, false);\n\n        this.mergeOption(baseOption);\n    }\n\n    /**\n     * @inner\n     * @param {Array.<string>|string} types model types\n     * @return {Object} key: {string} type, value: {Array.<Object>} models\n     */\n    function getComponentsByTypes(componentsMap, types) {\n        if (!zrUtil.isArray(types)) {\n            types = types ? [types] : [];\n        }\n\n        var ret = {};\n        each(types, function (type) {\n            ret[type] = (componentsMap.get(type) || []).slice();\n        });\n\n        return ret;\n    }\n\n    /**\n     * @inner\n     */\n    function determineSubType(mainType, newCptOption, existComponent) {\n        var subType = newCptOption.type\n            ? newCptOption.type\n            : existComponent\n            ? existComponent.subType\n            // Use determineSubType only when there is no existComponent.\n            : ComponentModel.determineSubType(mainType, newCptOption);\n\n        // tooltip, markline, markpoint may always has no subType\n        return subType;\n    }\n\n    /**\n     * @inner\n     */\n    function createSeriesIndices(seriesModels) {\n        return map(seriesModels, function (series) {\n            return series.componentIndex;\n        }) || [];\n    }\n\n    /**\n     * @inner\n     */\n    function filterBySubType(components, condition) {\n        // Using hasOwnProperty for restrict. Consider\n        // subType is undefined in user payload.\n        return condition.hasOwnProperty('subType')\n            ? filter(components, function (cpt) {\n                return cpt.subType === condition.subType;\n            })\n            : components;\n    }\n\n    /**\n     * @inner\n     */\n    function assertSeriesInitialized(ecModel) {\n        // Components that use _seriesIndices should depends on series component,\n        // which make sure that their initialization is after series.\n        if (__DEV__) {\n            if (!ecModel._seriesIndices) {\n                throw new Error('Option should contains series.');\n            }\n        }\n    }\n\n    zrUtil.mixin(GlobalModel, __webpack_require__(664));\n\n    module.exports = GlobalModel;\n\n\n/***/ }),\n\n/***/ 744:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var modelUtil = __webpack_require__(609);\n    var ComponentModel = __webpack_require__(618);\n    var each = zrUtil.each;\n    var clone = zrUtil.clone;\n    var map = zrUtil.map;\n    var merge = zrUtil.merge;\n\n    var QUERY_REG = /^(min|max)?(.+)$/;\n\n    /**\n     * TERM EXPLANATIONS:\n     *\n     * [option]:\n     *\n     *     An object that contains definitions of components. For example:\n     *     var option = {\n     *         title: {...},\n     *         legend: {...},\n     *         visualMap: {...},\n     *         series: [\n     *             {data: [...]},\n     *             {data: [...]},\n     *             ...\n     *         ]\n     *     };\n     *\n     * [rawOption]:\n     *\n     *     An object input to echarts.setOption. 'rawOption' may be an\n     *     'option', or may be an object contains multi-options. For example:\n     *     var option = {\n     *         baseOption: {\n     *             title: {...},\n     *             legend: {...},\n     *             series: [\n     *                 {data: [...]},\n     *                 {data: [...]},\n     *                 ...\n     *             ]\n     *         },\n     *         timeline: {...},\n     *         options: [\n     *             {title: {...}, series: {data: [...]}},\n     *             {title: {...}, series: {data: [...]}},\n     *             ...\n     *         ],\n     *         media: [\n     *             {\n     *                 query: {maxWidth: 320},\n     *                 option: {series: {x: 20}, visualMap: {show: false}}\n     *             },\n     *             {\n     *                 query: {minWidth: 320, maxWidth: 720},\n     *                 option: {series: {x: 500}, visualMap: {show: true}}\n     *             },\n     *             {\n     *                 option: {series: {x: 1200}, visualMap: {show: true}}\n     *             }\n     *         ]\n     *     };\n     *\n     * @alias module:echarts/model/OptionManager\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function OptionManager(api) {\n\n        /**\n         * @private\n         * @type {module:echarts/ExtensionAPI}\n         */\n        this._api = api;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._timelineOptions = [];\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._mediaList = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._mediaDefault;\n\n        /**\n         * -1, means default.\n         * empty means no media.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._currentMediaIndices = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._optionBackup;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._newBaseOption;\n    }\n\n    // timeline.notMerge is not supported in ec3. Firstly there is rearly\n    // case that notMerge is needed. Secondly supporting 'notMerge' requires\n    // rawOption cloned and backuped when timeline changed, which does no\n    // good to performance. What's more, that both timeline and setOption\n    // method supply 'notMerge' brings complex and some problems.\n    // Consider this case:\n    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n    OptionManager.prototype = {\n\n        constructor: OptionManager,\n\n        /**\n         * @public\n         * @param {Object} rawOption Raw option.\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Array.<Function>} optionPreprocessorFuncs\n         * @return {Object} Init option\n         */\n        setOption: function (rawOption, optionPreprocessorFuncs) {\n            rawOption = clone(rawOption, true);\n\n            // FIXME\n            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n            var oldOptionBackup = this._optionBackup;\n            var newParsedOption = parseRawOption.call(\n                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\n            );\n            this._newBaseOption = newParsedOption.baseOption;\n\n            // For setOption at second time (using merge mode);\n            if (oldOptionBackup) {\n                // Only baseOption can be merged.\n                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\n\n                // For simplicity, timeline options and media options do not support merge,\n                // that is, if you `setOption` twice and both has timeline options, the latter\n                // timeline opitons will not be merged to the formers, but just substitude them.\n                if (newParsedOption.timelineOptions.length) {\n                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n                }\n                if (newParsedOption.mediaList.length) {\n                    oldOptionBackup.mediaList = newParsedOption.mediaList;\n                }\n                if (newParsedOption.mediaDefault) {\n                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n                }\n            }\n            else {\n                this._optionBackup = newParsedOption;\n            }\n        },\n\n        /**\n         * @param {boolean} isRecreate\n         * @return {Object}\n         */\n        mountOption: function (isRecreate) {\n            var optionBackup = this._optionBackup;\n\n            // TODO\n            // 如果没有reset功能则不clone。\n\n            this._timelineOptions = map(optionBackup.timelineOptions, clone);\n            this._mediaList = map(optionBackup.mediaList, clone);\n            this._mediaDefault = clone(optionBackup.mediaDefault);\n            this._currentMediaIndices = [];\n\n            return clone(isRecreate\n                // this._optionBackup.baseOption, which is created at the first `setOption`\n                // called, and is merged into every new option by inner method `mergeOption`\n                // each time `setOption` called, can be only used in `isRecreate`, because\n                // its reliability is under suspicion. In other cases option merge is\n                // performed by `model.mergeOption`.\n                ? optionBackup.baseOption : this._newBaseOption\n            );\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object}\n         */\n        getTimelineOption: function (ecModel) {\n            var option;\n            var timelineOptions = this._timelineOptions;\n\n            if (timelineOptions.length) {\n                // getTimelineOption can only be called after ecModel inited,\n                // so we can get currentIndex from timelineModel.\n                var timelineModel = ecModel.getComponent('timeline');\n                if (timelineModel) {\n                    option = clone(\n                        timelineOptions[timelineModel.getCurrentIndex()],\n                        true\n                    );\n                }\n            }\n\n            return option;\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Array.<Object>}\n         */\n        getMediaOption: function (ecModel) {\n            var ecWidth = this._api.getWidth();\n            var ecHeight = this._api.getHeight();\n            var mediaList = this._mediaList;\n            var mediaDefault = this._mediaDefault;\n            var indices = [];\n            var result = [];\n\n            // No media defined.\n            if (!mediaList.length && !mediaDefault) {\n                return result;\n            }\n\n            // Multi media may be applied, the latter defined media has higher priority.\n            for (var i = 0, len = mediaList.length; i < len; i++) {\n                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n                    indices.push(i);\n                }\n            }\n\n            // FIXME\n            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n            if (!indices.length && mediaDefault) {\n                indices = [-1];\n            }\n\n            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n                result = map(indices, function (index) {\n                    return clone(\n                        index === -1 ? mediaDefault.option : mediaList[index].option\n                    );\n                });\n            }\n            // Otherwise return nothing.\n\n            this._currentMediaIndices = indices;\n\n            return result;\n        }\n    };\n\n    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n        var timelineOptions = [];\n        var mediaList = [];\n        var mediaDefault;\n        var baseOption;\n\n        // Compatible with ec2.\n        var timelineOpt = rawOption.timeline;\n\n        if (rawOption.baseOption) {\n            baseOption = rawOption.baseOption;\n        }\n\n        // For timeline\n        if (timelineOpt || rawOption.options) {\n            baseOption = baseOption || {};\n            timelineOptions = (rawOption.options || []).slice();\n        }\n\n        // For media query\n        if (rawOption.media) {\n            baseOption = baseOption || {};\n            var media = rawOption.media;\n            each(media, function (singleMedia) {\n                if (singleMedia && singleMedia.option) {\n                    if (singleMedia.query) {\n                        mediaList.push(singleMedia);\n                    }\n                    else if (!mediaDefault) {\n                        // Use the first media default.\n                        mediaDefault = singleMedia;\n                    }\n                }\n            });\n        }\n\n        // For normal option\n        if (!baseOption) {\n            baseOption = rawOption;\n        }\n\n        // Set timelineOpt to baseOption in ec3,\n        // which is convenient for merge option.\n        if (!baseOption.timeline) {\n            baseOption.timeline = timelineOpt;\n        }\n\n        // Preprocess.\n        each([baseOption].concat(timelineOptions)\n            .concat(zrUtil.map(mediaList, function (media) {\n                return media.option;\n            })),\n            function (option) {\n                each(optionPreprocessorFuncs, function (preProcess) {\n                    preProcess(option, isNew);\n                });\n            }\n        );\n\n        return {\n            baseOption: baseOption,\n            timelineOptions: timelineOptions,\n            mediaDefault: mediaDefault,\n            mediaList: mediaList\n        };\n    }\n\n    /**\n     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n     * Support: width, height, aspectRatio\n     * Can use max or min as prefix.\n     */\n    function applyMediaQuery(query, ecWidth, ecHeight) {\n        var realMap = {\n            width: ecWidth,\n            height: ecHeight,\n            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n        };\n\n        var applicatable = true;\n\n        zrUtil.each(query, function (value, attr) {\n            var matched = attr.match(QUERY_REG);\n\n            if (!matched || !matched[1] || !matched[2]) {\n                return;\n            }\n\n            var operator = matched[1];\n            var realAttr = matched[2].toLowerCase();\n\n            if (!compare(realMap[realAttr], value, operator)) {\n                applicatable = false;\n            }\n        });\n\n        return applicatable;\n    }\n\n    function compare(real, expect, operator) {\n        if (operator === 'min') {\n            return real >= expect;\n        }\n        else if (operator === 'max') {\n            return real <= expect;\n        }\n        else { // Equals\n            return real === expect;\n        }\n    }\n\n    function indicesEquals(indices1, indices2) {\n        // indices is always order by asc and has only finite number.\n        return indices1.join(',') === indices2.join(',');\n    }\n\n    /**\n     * Consider case:\n     * `chart.setOption(opt1);`\n     * Then user do some interaction like dataZoom, dataView changing.\n     * `chart.setOption(opt2);`\n     * Then user press 'reset button' in toolbox.\n     *\n     * After doing that all of the interaction effects should be reset, the\n     * chart should be the same as the result of invoke\n     * `chart.setOption(opt1); chart.setOption(opt2);`.\n     *\n     * Although it is not able ensure that\n     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n     * `chart.setOption(merge(opt1, opt2));` exactly,\n     * this might be the only simple way to implement that feature.\n     *\n     * MEMO: We've considered some other approaches:\n     * 1. Each model handle its self restoration but not uniform treatment.\n     *     (Too complex in logic and error-prone)\n     * 2. Use a shadow ecModel. (Performace expensive)\n     */\n    function mergeOption(oldOption, newOption) {\n        newOption = newOption || {};\n\n        each(newOption, function (newCptOpt, mainType) {\n            if (newCptOpt == null) {\n                return;\n            }\n\n            var oldCptOpt = oldOption[mainType];\n\n            if (!ComponentModel.hasClass(mainType)) {\n                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n            }\n            else {\n                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n\n                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n\n                oldOption[mainType] = map(mapResult, function (item) {\n                    return (item.option && item.exist)\n                        ? merge(item.exist, item.option, true)\n                        : (item.exist || item.option);\n                });\n            }\n        });\n    }\n\n    module.exports = OptionManager;\n\n\n/***/ }),\n\n/***/ 745:\n/***/ (function(module, exports) {\n\n\n    var platform = '';\n    // Navigator not exists in node\n    if (typeof navigator !== 'undefined') {\n        platform = navigator.platform || '';\n    }\n    module.exports = {\n        // 全图默认背景\n        // backgroundColor: 'rgba(0,0,0,0)',\n\n        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n        // 浅色\n        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n        // 深色\n        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\n\n        // 默认需要 Grid 配置项\n        // grid: {},\n        // 主题，主题\n        textStyle: {\n            // color: '#000',\n            // decoration: 'none',\n            // PENDING\n            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n            // fontFamily: 'Arial, Verdana, sans-serif',\n            fontSize: 12,\n            fontStyle: 'normal',\n            fontWeight: 'normal'\n        },\n\n        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n        // Default is source-over\n        blendMode: null,\n\n        animation: 'auto',\n        animationDuration: 1000,\n        animationDurationUpdate: 300,\n        animationEasing: 'exponentialOut',\n        animationEasingUpdate: 'cubicOut',\n\n        animationThreshold: 2000,\n        // Configuration for progressive/incremental rendering\n        progressiveThreshold: 3000,\n        progressive: 400,\n\n        // Threshold of if use single hover layer to optimize.\n        // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n        // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n        // which is unexpected.\n        // see example <echarts/test/heatmap-large.html>.\n        hoverLayerThreshold: 3000,\n\n        // See: module:echarts/scale/Time\n        useUTC: false\n    };\n\n\n/***/ }),\n\n/***/ 746:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    module.exports = {\n        getAreaStyle: __webpack_require__(637)(\n            [\n                ['fill', 'color'],\n                ['shadowBlur'],\n                ['shadowOffsetX'],\n                ['shadowOffsetY'],\n                ['opacity'],\n                ['shadowColor']\n            ]\n        )\n    };\n\n\n/***/ }),\n\n/***/ 747:\n/***/ (function(module, exports) {\n\n\n\n    module.exports = {\n        getBoxLayoutParams: function () {\n            return {\n                left: this.get('left'),\n                top: this.get('top'),\n                right: this.get('right'),\n                bottom: this.get('bottom'),\n                width: this.get('width'),\n                height: this.get('height')\n            };\n        }\n    };\n\n\n/***/ }),\n\n/***/ 748:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var getItemStyle = __webpack_require__(637)(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor'],\n            ['textPosition'],\n            ['textAlign']\n        ]\n    );\n    module.exports = {\n        getItemStyle: function (excludes, includes) {\n            var style = getItemStyle.call(this, excludes, includes);\n            var lineDash = this.getBorderLineDash();\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getBorderLineDash: function () {\n            var lineType = this.get('borderType');\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\n        }\n    };\n\n\n/***/ }),\n\n/***/ 749:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var getLineStyle = __webpack_require__(637)(\n        [\n            ['lineWidth', 'width'],\n            ['stroke', 'color'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getLineStyle: function (excludes) {\n            var style = getLineStyle.call(this, excludes);\n            var lineDash = this.getLineDash(style.lineWidth);\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getLineDash: function (lineWidth) {\n            if (lineWidth == null) {\n                lineWidth = 1;\n            }\n            var lineType = this.get('type');\n            var dotSize = Math.max(lineWidth, 2);\n            var dashSize = lineWidth * 4;\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize]);\n        }\n    };\n\n\n/***/ }),\n\n/***/ 750:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var textContain = __webpack_require__(621);\n    var graphicUtil = __webpack_require__(608);\n\n    var PATH_COLOR = ['textStyle', 'color'];\n\n    module.exports = {\n        /**\n         * Get color property or get color from option.textStyle.color\n         * @param {boolean} [noDefault]\n         * @return {string}\n         */\n        getTextColor: function (noDefault) {\n            var ecModel = this.ecModel;\n            return this.getShallow('color')\n                || (\n                    (!noDefault && ecModel) ? ecModel.get(PATH_COLOR) : null\n                );\n        },\n\n        /**\n         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n         * @return {string}\n         */\n        getFont: function () {\n            return graphicUtil.getFont({\n                fontStyle: this.getShallow('fontStyle'),\n                fontWeight: this.getShallow('fontWeight'),\n                fontSize: this.getShallow('fontSize'),\n                fontFamily: this.getShallow('fontFamily')\n            }, this.ecModel);\n        },\n\n        getTextRect: function (text) {\n            return textContain.getBoundingRect(\n                text,\n                this.getFont(),\n                this.getShallow('align'),\n                this.getShallow('verticalAlign') || this.getShallow('baseline'),\n                this.getShallow('padding'),\n                this.getShallow('rich'),\n                this.getShallow('truncateText')\n            );\n        }\n    };\n\n\n/***/ }),\n\n/***/ 751:\n/***/ (function(module, exports, __webpack_require__) {\n\n// Compatitable with 2.0\n\n\n    var zrUtil = __webpack_require__(606);\n    var compatStyle = __webpack_require__(752);\n\n    function get(opt, path) {\n        path = path.split(',');\n        var obj = opt;\n        for (var i = 0; i < path.length; i++) {\n            obj = obj && obj[path[i]];\n            if (obj == null) {\n                break;\n            }\n        }\n        return obj;\n    }\n\n    function set(opt, path, val, overwrite) {\n        path = path.split(',');\n        var obj = opt;\n        var key;\n        for (var i = 0; i < path.length - 1; i++) {\n            key = path[i];\n            if (obj[key] == null) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        }\n        if (overwrite || obj[path[i]] == null) {\n            obj[path[i]] = val;\n        }\n    }\n\n    function compatLayoutProperties(option) {\n        each(LAYOUT_PROPERTIES, function (prop) {\n            if (prop[0] in option && !(prop[1] in option)) {\n                option[prop[1]] = option[prop[0]];\n            }\n        });\n    }\n\n    var LAYOUT_PROPERTIES = [\n        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\n    ];\n\n    var COMPATITABLE_COMPONENTS = [\n        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\n    ];\n\n    var COMPATITABLE_SERIES = [\n        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\n        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\n        'pie', 'radar', 'sankey', 'scatter', 'treemap'\n    ];\n\n    var each = zrUtil.each;\n\n    module.exports = function (option) {\n        compatStyle(option);\n\n        var series = option.series;\n        each(zrUtil.isArray(series) ? series : [series], function (seriesOpt) {\n            if (!zrUtil.isObject(seriesOpt)) {\n                return;\n            }\n\n            var seriesType = seriesOpt.type;\n\n            if (seriesType === 'pie' || seriesType === 'gauge') {\n                if (seriesOpt.clockWise != null) {\n                    seriesOpt.clockwise = seriesOpt.clockWise;\n                }\n            }\n            if (seriesType === 'gauge') {\n                var pointerColor = get(seriesOpt, 'pointer.color');\n                pointerColor != null\n                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n            }\n\n            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n                    compatLayoutProperties(seriesOpt);\n                    break;\n                }\n            }\n        });\n\n        // dataRange has changed to visualMap\n        if (option.dataRange) {\n            option.visualMap = option.dataRange;\n        }\n\n        each(COMPATITABLE_COMPONENTS, function (componentName) {\n            var options = option[componentName];\n            if (options) {\n                if (!zrUtil.isArray(options)) {\n                    options = [options];\n                }\n                each(options, function (option) {\n                    compatLayoutProperties(option);\n                });\n            }\n        });\n    };\n\n\n/***/ }),\n\n/***/ 752:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(606);\n    var modelUtil = __webpack_require__(609);\n\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var POSSIBLE_STYLES = [\n        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\n        'chordStyle', 'label', 'labelLine'\n    ];\n\n    function compatItemStyle(opt) {\n        var itemStyleOpt = opt && opt.itemStyle;\n        if (!itemStyleOpt) {\n            return;\n        }\n        for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n            var styleName = POSSIBLE_STYLES[i];\n            var normalItemStyleOpt = itemStyleOpt.normal;\n            var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n            if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n                opt[styleName] = opt[styleName] || {};\n                if (!opt[styleName].normal) {\n                    opt[styleName].normal = normalItemStyleOpt[styleName];\n                }\n                else {\n                    zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n                }\n                normalItemStyleOpt[styleName] = null;\n            }\n            if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n                opt[styleName] = opt[styleName] || {};\n                if (!opt[styleName].emphasis) {\n                    opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n                }\n                else {\n                    zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n                }\n                emphasisItemStyleOpt[styleName] = null;\n            }\n        }\n    }\n\n    function compatTextStyle(opt, propName) {\n        var labelOptSingle = isObject(opt) && opt[propName];\n        var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n        if (textStyle) {\n            for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n                var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n                if (textStyle.hasOwnProperty(propName)) {\n                    labelOptSingle[propName] = textStyle[propName];\n                }\n            }\n        }\n    }\n\n    function compatLabelTextStyle(labelOpt) {\n        if (isObject(labelOpt)) {\n            compatTextStyle(labelOpt, 'normal');\n            compatTextStyle(labelOpt, 'emphasis');\n        }\n    }\n\n    function processSeries(seriesOpt) {\n        if (!isObject(seriesOpt)) {\n            return;\n        }\n\n        compatItemStyle(seriesOpt);\n        compatLabelTextStyle(seriesOpt.label);\n        // treemap\n        compatLabelTextStyle(seriesOpt.upperLabel);\n        // graph\n        compatLabelTextStyle(seriesOpt.edgeLabel);\n\n        var markPoint = seriesOpt.markPoint;\n        compatItemStyle(markPoint);\n        compatLabelTextStyle(markPoint && markPoint.label);\n\n        var markLine = seriesOpt.markLine;\n        compatItemStyle(seriesOpt.markLine);\n        compatLabelTextStyle(markLine && markLine.label);\n\n        var markArea = seriesOpt.markArea;\n        compatLabelTextStyle(markArea && markArea.label);\n\n        // For gauge\n        compatTextStyle(seriesOpt, 'axisLabel');\n        compatTextStyle(seriesOpt, 'title');\n        compatTextStyle(seriesOpt, 'detail');\n\n        var data = seriesOpt.data;\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                compatItemStyle(data[i]);\n                compatLabelTextStyle(data[i] && data[i].label);\n            }\n            // mark point data\n            var markPoint = seriesOpt.markPoint;\n            if (markPoint && markPoint.data) {\n                var mpData = markPoint.data;\n                for (var i = 0; i < mpData.length; i++) {\n                    compatItemStyle(mpData[i]);\n                    compatLabelTextStyle(mpData[i] && mpData[i].label);\n                }\n            }\n            // mark line data\n            var markLine = seriesOpt.markLine;\n            if (markLine && markLine.data) {\n                var mlData = markLine.data;\n                for (var i = 0; i < mlData.length; i++) {\n                    if (zrUtil.isArray(mlData[i])) {\n                        compatItemStyle(mlData[i][0]);\n                        compatLabelTextStyle(mlData[i][0] && mlData[i][0].label);\n                        compatItemStyle(mlData[i][1]);\n                        compatLabelTextStyle(mlData[i][1] && mlData[i][1].label);\n                    }\n                    else {\n                        compatItemStyle(mlData[i]);\n                        compatLabelTextStyle(mlData[i] && mlData[i].label);\n                    }\n                }\n            }\n        }\n    }\n\n    function toArr(o) {\n        return zrUtil.isArray(o) ? o : o ? [o] : [];\n    }\n\n    function toObj(o) {\n        return (zrUtil.isArray(o) ? o[0] : o) || {};\n    }\n\n    module.exports = function (option) {\n        each(toArr(option.series), function (seriesOpt) {\n            isObject(seriesOpt) && processSeries(seriesOpt);\n        });\n\n        each(\n            ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'],\n            function (axisName) {\n                each(toArr(option[axisName]), function (axisOpt) {\n                    if (axisOpt) {\n                        compatTextStyle(axisOpt, 'axisLabel');\n                        compatTextStyle(axisOpt.axisPointer, 'label');\n                    }\n                });\n            }\n        );\n\n        each(toArr(option.parallel), function (parallelOpt) {\n            var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n            compatTextStyle(parallelAxisDefault, 'axisLabel');\n            compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n        });\n\n        each(toArr(option.calendar), function (calendarOpt) {\n            compatTextStyle(calendarOpt, 'dayLabel');\n            compatTextStyle(calendarOpt, 'monthLabel');\n            compatTextStyle(calendarOpt, 'yearLabel');\n        });\n\n        // radar.name.textStyle\n        each(toArr(option.radar), function (radarOpt) {\n            compatTextStyle(radarOpt, 'name');\n        });\n\n        each(toArr(option.geo), function (geoOpt) {\n            isObject(geoOpt) && compatLabelTextStyle(geoOpt.label);\n        });\n\n        compatLabelTextStyle(toObj(option.timeline).label);\n        compatTextStyle(toObj(option.axisPointer), 'label');\n        compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n    };\n\n\n/***/ }),\n\n/***/ 753:\n/***/ (function(module, exports) {\n\n\n    var samplers = {\n        average: function (frame) {\n            var sum = 0;\n            var count = 0;\n            for (var i = 0; i < frame.length; i++) {\n                if (!isNaN(frame[i])) {\n                    sum += frame[i];\n                    count++;\n                }\n            }\n            // Return NaN if count is 0\n            return count === 0 ? NaN : sum / count;\n        },\n        sum: function (frame) {\n            var sum = 0;\n            for (var i = 0; i < frame.length; i++) {\n                // Ignore NaN\n                sum += frame[i] || 0;\n            }\n            return sum;\n        },\n        max: function (frame) {\n            var max = -Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] > max && (max = frame[i]);\n            }\n            return max;\n        },\n        min: function (frame) {\n            var min = Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] < min && (min = frame[i]);\n            }\n            return min;\n        },\n        // TODO\n        // Median\n        nearest: function (frame) {\n            return frame[0];\n        }\n    };\n\n    var indexSampler = function (frame, value) {\n        return Math.round(frame.length / 2);\n    };\n    module.exports = function (seriesType, ecModel, api) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var sampling = seriesModel.get('sampling');\n            var coordSys = seriesModel.coordinateSystem;\n            // Only cartesian2d support down sampling\n            if (coordSys.type === 'cartesian2d' && sampling) {\n                var baseAxis = coordSys.getBaseAxis();\n                var valueAxis = coordSys.getOtherAxis(baseAxis);\n                var extent = baseAxis.getExtent();\n                // Coordinste system has been resized\n                var size = extent[1] - extent[0];\n                var rate = Math.round(data.count() / size);\n                if (rate > 1) {\n                    var sampler;\n                    if (typeof sampling === 'string') {\n                        sampler = samplers[sampling];\n                    }\n                    else if (typeof sampling === 'function') {\n                        sampler = sampling;\n                    }\n                    if (sampler) {\n                        data = data.downSample(\n                            valueAxis.dim, 1 / rate, sampler, indexSampler\n                        );\n                        seriesModel.setData(data);\n                    }\n                }\n            }\n        }, this);\n    };\n\n\n/***/ }),\n\n/***/ 754:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n\n\n    var zrUtil = __webpack_require__(606);\n    var Scale = __webpack_require__(632);\n    var numberUtil = __webpack_require__(610);\n\n    // Use some method of IntervalScale\n    var IntervalScale = __webpack_require__(638);\n\n    var scaleProto = Scale.prototype;\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n    var mathPow = Math.pow;\n\n    var mathLog = Math.log;\n\n    var LogScale = Scale.extend({\n\n        type: 'log',\n\n        base: 10,\n\n        $constructor: function () {\n            Scale.apply(this, arguments);\n            this._originalScale = new IntervalScale();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            var originalScale = this._originalScale;\n            var extent = this._extent;\n            var originalExtent = originalScale.getExtent();\n\n            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n                var powVal = numberUtil.round(mathPow(this.base, val));\n\n                // Fix #4158\n                powVal = (val === extent[0] && originalScale.__fixMin)\n                    ? fixRoundingError(powVal, originalExtent[0])\n                    : powVal;\n                powVal = (val === extent[1] && originalScale.__fixMax)\n                    ? fixRoundingError(powVal, originalExtent[1])\n                    : powVal;\n\n                return powVal;\n            }, this);\n        },\n\n        /**\n         * @param {number} val\n         * @return {string}\n         */\n        getLabel: intervalScaleProto.getLabel,\n\n        /**\n         * @param  {number} val\n         * @return {number}\n         */\n        scale: function (val) {\n            val = scaleProto.scale.call(this, val);\n            return mathPow(this.base, val);\n        },\n\n        /**\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var base = this.base;\n            start = mathLog(start) / mathLog(base);\n            end = mathLog(end) / mathLog(base);\n            intervalScaleProto.setExtent.call(this, start, end);\n        },\n\n        /**\n         * @return {number} end\n         */\n        getExtent: function () {\n            var base = this.base;\n            var extent = scaleProto.getExtent.call(this);\n            extent[0] = mathPow(base, extent[0]);\n            extent[1] = mathPow(base, extent[1]);\n\n            // Fix #4158\n            var originalScale = this._originalScale;\n            var originalExtent = originalScale.getExtent();\n            originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n            originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n\n            return extent;\n        },\n\n        /**\n         * @param  {Array.<number>} extent\n         */\n        unionExtent: function (extent) {\n            this._originalScale.unionExtent(extent);\n\n            var base = this.base;\n            extent[0] = mathLog(extent[0]) / mathLog(base);\n            extent[1] = mathLog(extent[1]) / mathLog(base);\n            scaleProto.unionExtent.call(this, extent);\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, true, function (val) {\n                return val > 0;\n            }));\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         * @param  {number} [approxTickNum = 10] Given approx tick number\n         */\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (span === Infinity || span <= 0) {\n                return;\n            }\n\n            var interval = numberUtil.quantity(span);\n            var err = approxTickNum / span * interval;\n\n            // Filter ticks to get closer to the desired count.\n            if (err <= 0.5) {\n                interval *= 10;\n            }\n\n            // Interval should be integer\n            while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n                interval *= 10;\n            }\n\n            var niceExtent = [\n                numberUtil.round(mathCeil(extent[0] / interval) * interval),\n                numberUtil.round(mathFloor(extent[1] / interval) * interval)\n            ];\n\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @override\n         */\n        niceExtent: function (opt) {\n            intervalScaleProto.niceExtent.call(this, opt);\n\n            var originalScale = this._originalScale;\n            originalScale.__fixMin = opt.fixMin;\n            originalScale.__fixMax = opt.fixMax;\n        }\n\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        LogScale.prototype[methodName] = function (val) {\n            val = mathLog(val) / mathLog(this.base);\n            return scaleProto[methodName].call(this, val);\n        };\n    });\n\n    LogScale.create = function () {\n        return new LogScale();\n    };\n\n    function fixRoundingError(val, originalVal) {\n        return roundingErrorFix(val, getPrecisionSafe(originalVal));\n    }\n\n    module.exports = LogScale;\n\n\n/***/ }),\n\n/***/ 755:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n\n// FIXME only one data\n\n\n    var zrUtil = __webpack_require__(606);\n    var Scale = __webpack_require__(632);\n\n    var scaleProto = Scale.prototype;\n\n    var OrdinalScale = Scale.extend({\n\n        type: 'ordinal',\n\n        init: function (data, extent) {\n            this._data = data;\n            this._extent = extent || [0, data.length - 1];\n        },\n\n        parse: function (val) {\n            return typeof val === 'string'\n                ? zrUtil.indexOf(this._data, val)\n                // val might be float.\n                : Math.round(val);\n        },\n\n        contain: function (rank) {\n            rank = this.parse(rank);\n            return scaleProto.contain.call(this, rank)\n                && this._data[rank] != null;\n        },\n\n        /**\n         * Normalize given rank or name to linear [0, 1]\n         * @param {number|string} [val]\n         * @return {number}\n         */\n        normalize: function (val) {\n            return scaleProto.normalize.call(this, this.parse(val));\n        },\n\n        scale: function (val) {\n            return Math.round(scaleProto.scale.call(this, val));\n        },\n\n        /**\n         * @return {Array}\n         */\n        getTicks: function () {\n            var ticks = [];\n            var extent = this._extent;\n            var rank = extent[0];\n\n            while (rank <= extent[1]) {\n                ticks.push(rank);\n                rank++;\n            }\n\n            return ticks;\n        },\n\n        /**\n         * Get item on rank n\n         * @param {number} n\n         * @return {string}\n         */\n        getLabel: function (n) {\n            return this._data[n];\n        },\n\n        /**\n         * @return {number}\n         */\n        count: function () {\n            return this._extent[1] - this._extent[0] + 1;\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, false));\n        },\n\n        niceTicks: zrUtil.noop,\n        niceExtent: zrUtil.noop\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    OrdinalScale.create = function () {\n        return new OrdinalScale();\n    };\n\n    module.exports = OrdinalScale;\n\n\n/***/ }),\n\n/***/ 756:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Interval scale\n * @module echarts/coord/scale/Time\n */\n\n\n\n    // [About UTC and local time zone]:\n    // In most cases, `number.parseDate` will treat input data string as local time\n    // (except time zone is specified in time string). And `format.formateTime` returns\n    // local time by default. option.useUTC is false by default. This design have\n    // concidered these common case:\n    // (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n    // in local time by default.\n    // (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n    // as its original time, without any time difference.\n\n    var zrUtil = __webpack_require__(606);\n    var numberUtil = __webpack_require__(610);\n    var formatUtil = __webpack_require__(613);\n    var scaleHelper = __webpack_require__(665);\n\n    var IntervalScale = __webpack_require__(638);\n\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var mathCeil = Math.ceil;\n    var mathFloor = Math.floor;\n    var ONE_SECOND = 1000;\n    var ONE_MINUTE = ONE_SECOND * 60;\n    var ONE_HOUR = ONE_MINUTE * 60;\n    var ONE_DAY = ONE_HOUR * 24;\n\n    // FIXME 公用？\n    var bisect = function (a, x, lo, hi) {\n        while (lo < hi) {\n            var mid = lo + hi >>> 1;\n            if (a[mid][2] < x) {\n                lo = mid + 1;\n            }\n            else {\n                hi  = mid;\n            }\n        }\n        return lo;\n    };\n\n    /**\n     * @alias module:echarts/coord/scale/Time\n     * @constructor\n     */\n    var TimeScale = IntervalScale.extend({\n        type: 'time',\n\n        /**\n         * @override\n         */\n        getLabel: function (val) {\n            var stepLvl = this._stepLvl;\n\n            var date = new Date(val);\n\n            return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n        },\n\n        /**\n         * @override\n         */\n        niceExtent: function (opt) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                // Expand extent\n                extent[0] -= ONE_DAY;\n                extent[1] += ONE_DAY;\n            }\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (extent[1] === -Infinity && extent[0] === Infinity) {\n                var d = new Date();\n                extent[1] = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                extent[0] = extent[1] - ONE_DAY;\n            }\n\n            this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!opt.fixMin) {\n                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!opt.fixMax) {\n                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n            }\n        },\n\n        /**\n         * @override\n         */\n        niceTicks: function (approxTickNum, minInterval, maxInterval) {\n            var timezoneOffset = this.getSetting('useUTC')\n                ? 0 : numberUtil.getTimezoneOffset() * 60 * 1000;\n            approxTickNum = approxTickNum || 10;\n\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            var approxInterval = span / approxTickNum;\n\n            if (minInterval != null && approxInterval < minInterval) {\n                approxInterval = minInterval;\n            }\n            if (maxInterval != null && approxInterval > maxInterval) {\n                approxInterval = maxInterval;\n            }\n\n            var scaleLevelsLen = scaleLevels.length;\n            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n\n            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n            var interval = level[2];\n            // Same with interval scale if span is much larger than 1 year\n            if (level[0] === 'year') {\n                var yearSpan = span / interval;\n\n                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n                // var niceYearSpan = numberUtil.nice(yearSpan, false);\n                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n\n                interval *= yearStep;\n            }\n\n            var niceExtent = [\n                Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset),\n                Math.round(mathFloor((extent[1] - timezoneOffset)/ interval) * interval + timezoneOffset)\n            ];\n\n            scaleHelper.fixExtent(niceExtent, extent);\n\n            this._stepLvl = level;\n            // Interval will be used in getTicks\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        parse: function (val) {\n            // val might be float.\n            return +numberUtil.parseDate(val);\n        }\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        TimeScale.prototype[methodName] = function (val) {\n            return intervalScaleProto[methodName].call(this, this.parse(val));\n        };\n    });\n\n    // Steps from d3\n    var scaleLevels = [\n        // Format       step    interval\n        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\n        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\n        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\n        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\n        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\n        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\n        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\n        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\n        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\n        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\n        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\n        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\n        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\n        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\n        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\n        ['week',        7,      ONE_DAY * 7],        // 7d\n        ['month',       1,      ONE_DAY * 31],       // 1M\n        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\n        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\n        ['year',        1,      ONE_DAY * 380]       // 1Y\n    ];\n\n    /**\n     * @param {module:echarts/model/Model}\n     * @return {module:echarts/scale/Time}\n     */\n    TimeScale.create = function (model) {\n        return new TimeScale({useUTC: model.ecModel.get('useUTC')});\n    };\n\n    module.exports = TimeScale;\n\n\n/***/ }),\n\n/***/ 757:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Group = __webpack_require__(634);\n    var componentUtil = __webpack_require__(642);\n    var clazzUtil = __webpack_require__(616);\n\n    var Component = function () {\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewComponent');\n    };\n\n    Component.prototype = {\n\n        constructor: Component,\n\n        init: function (ecModel, api) {},\n\n        render: function (componentModel, ecModel, api, payload) {},\n\n        dispose: function () {}\n\n    };\n\n    var componentProto = Component.prototype;\n    componentProto.updateView\n        = componentProto.updateLayout\n        = componentProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            // Do nothing;\n        };\n    // Enable Component.extend.\n    clazzUtil.enableClassExtend(Component);\n\n    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\n\n    module.exports = Component;\n\n\n/***/ }),\n\n/***/ 758:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var Gradient = __webpack_require__(645);\n    module.exports = function (ecModel) {\n        function encodeColor(seriesModel) {\n            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n            var data = seriesModel.getData();\n            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\n\n            // FIXME Set color function or use the platte color\n            data.setVisual('color', color);\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof color === 'function' && !(color instanceof Gradient)) {\n                    data.each(function (idx) {\n                        data.setItemVisual(\n                            idx, 'color', color(seriesModel.getDataParams(idx))\n                        );\n                    });\n                }\n\n                // itemStyle in each data item\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var color = itemModel.get(colorAccessPath, true);\n                    if (color != null) {\n                        data.setItemVisual(idx, 'color', color);\n                    }\n                });\n            }\n        }\n        ecModel.eachRawSeries(encodeColor);\n    };\n\n\n/***/ }),\n\n/***/ 766:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\n\n\n    var util = __webpack_require__(606);\n    var Draggable = __webpack_require__(799);\n\n    var Eventful = __webpack_require__(626);\n\n    var SILENT = 'silent';\n\n    function makeEventPacket(eveType, targetInfo, event) {\n        return {\n            type: eveType,\n            event: event,\n            // target can only be an element that is not silent.\n            target: targetInfo.target,\n            // topTarget can be a silent element.\n            topTarget: targetInfo.topTarget,\n            cancelBubble: false,\n            offsetX: event.zrX,\n            offsetY: event.zrY,\n            gestureEvent: event.gestureEvent,\n            pinchX: event.pinchX,\n            pinchY: event.pinchY,\n            pinchScale: event.pinchScale,\n            wheelDelta: event.zrDelta,\n            zrByTouch: event.zrByTouch\n        };\n    }\n\n    function EmptyProxy () {}\n    EmptyProxy.prototype.dispose = function () {};\n\n    var handlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n    /**\n     * @alias module:zrender/Handler\n     * @constructor\n     * @extends module:zrender/mixin/Eventful\n     * @param {module:zrender/Storage} storage Storage instance.\n     * @param {module:zrender/Painter} painter Painter instance.\n     * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n     * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n     */\n    var Handler = function(storage, painter, proxy, painterRoot) {\n        Eventful.call(this);\n\n        this.storage = storage;\n\n        this.painter = painter;\n\n        this.painterRoot = painterRoot;\n\n        proxy = proxy || new EmptyProxy();\n\n        /**\n         * Proxy of event. can be Dom, WebGLSurface, etc.\n         */\n        this.proxy = proxy;\n\n        // Attach handler\n        proxy.handler = this;\n\n        /**\n         * {target, topTarget, x, y}\n         * @private\n         * @type {Object}\n         */\n        this._hovered = {};\n\n        /**\n         * @private\n         * @type {Date}\n         */\n        this._lastTouchMoment;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastX;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastY;\n\n\n        Draggable.call(this);\n\n        util.each(handlerNames, function (name) {\n            proxy.on && proxy.on(name, this[name], this);\n        }, this);\n    };\n\n    Handler.prototype = {\n\n        constructor: Handler,\n\n        mousemove: function (event) {\n            var x = event.zrX;\n            var y = event.zrY;\n\n            var lastHovered = this._hovered;\n            var lastHoveredTarget = lastHovered.target;\n\n            // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n            // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n            // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n            // See #6198.\n            if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n                lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n                lastHoveredTarget = lastHovered.target;\n            }\n\n            var hovered = this._hovered = this.findHover(x, y);\n            var hoveredTarget = hovered.target;\n\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default');\n\n            // Mouse out on previous hovered element\n            if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(lastHovered, 'mouseout', event);\n            }\n\n            // Mouse moving on one element\n            this.dispatchToElement(hovered, 'mousemove', event);\n\n            // Mouse over on a new element\n            if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(hovered, 'mouseover', event);\n            }\n        },\n\n        mouseout: function (event) {\n            this.dispatchToElement(this._hovered, 'mouseout', event);\n\n            // There might be some doms created by upper layer application\n            // at the same level of painter.getViewportRoot() (e.g., tooltip\n            // dom created by echarts), where 'globalout' event should not\n            // be triggered when mouse enters these doms. (But 'mouseout'\n            // should be triggered at the original hovered element as usual).\n            var element = event.toElement || event.relatedTarget;\n            var innerDom;\n            do {\n                element = element && element.parentNode;\n            }\n            while (element && element.nodeType != 9 && !(\n                innerDom = element === this.painterRoot\n            ));\n\n            !innerDom && this.trigger('globalout', {event: event});\n        },\n\n        /**\n         * Resize\n         */\n        resize: function (event) {\n            this._hovered = {};\n        },\n\n        /**\n         * Dispatch event\n         * @param {string} eventName\n         * @param {event=} eventArgs\n         */\n        dispatch: function (eventName, eventArgs) {\n            var handler = this[eventName];\n            handler && handler.call(this, eventArgs);\n        },\n\n        /**\n         * Dispose\n         */\n        dispose: function () {\n\n            this.proxy.dispose();\n\n            this.storage =\n            this.proxy =\n            this.painter = null;\n        },\n\n        /**\n         * 设置默认的cursor style\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(cursorStyle);\n        },\n\n        /**\n         * 事件分发代理\n         *\n         * @private\n         * @param {Object} targetInfo {target, topTarget} 目标图形元素\n         * @param {string} eventName 事件名称\n         * @param {Object} event 事件对象\n         */\n        dispatchToElement: function (targetInfo, eventName, event) {\n            targetInfo = targetInfo || {};\n            var el = targetInfo.target;\n            if (el && el.silent) {\n                return;\n            }\n            var eventHandler = 'on' + eventName;\n            var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n            while (el) {\n                el[eventHandler]\n                    && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n\n                el.trigger(eventName, eventPacket);\n\n                el = el.parent;\n\n                if (eventPacket.cancelBubble) {\n                    break;\n                }\n            }\n\n            if (!eventPacket.cancelBubble) {\n                // 冒泡到顶级 zrender 对象\n                this.trigger(eventName, eventPacket);\n                // 分发事件到用户自定义层\n                // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n                this.painter && this.painter.eachOtherLayer(function (layer) {\n                    if (typeof(layer[eventHandler]) == 'function') {\n                        layer[eventHandler].call(layer, eventPacket);\n                    }\n                    if (layer.trigger) {\n                        layer.trigger(eventName, eventPacket);\n                    }\n                });\n            }\n        },\n\n        /**\n         * @private\n         * @param {number} x\n         * @param {number} y\n         * @param {module:zrender/graphic/Displayable} exclude\n         * @return {model:zrender/Element}\n         * @method\n         */\n        findHover: function(x, y, exclude) {\n            var list = this.storage.getDisplayList();\n            var out = {x: x, y: y};\n\n            for (var i = list.length - 1; i >= 0 ; i--) {\n                var hoverCheckResult;\n                if (list[i] !== exclude\n                    // getDisplayList may include ignored item in VML mode\n                    && !list[i].ignore\n                    && (hoverCheckResult = isHover(list[i], x, y))\n                ) {\n                    !out.topTarget && (out.topTarget = list[i]);\n                    if (hoverCheckResult !== SILENT) {\n                        out.target = list[i];\n                        break;\n                    }\n                }\n            }\n\n            return out;\n        }\n    };\n\n    // Common handlers\n    util.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        Handler.prototype[name] = function (event) {\n            // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n            var hovered = this.findHover(event.zrX, event.zrY);\n            var hoveredTarget = hovered.target;\n\n            if (name === 'mousedown') {\n                this._downel = hoveredTarget;\n                // In case click triggered before mouseup\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'mosueup') {\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'click') {\n                if (this._downel !== this._upel) {\n                    return;\n                }\n            }\n\n            this.dispatchToElement(hovered, name, event);\n        };\n    });\n\n    function isHover(displayable, x, y) {\n        if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n            var el = displayable;\n            var isSilent;\n            while (el) {\n                // If clipped by ancestor.\n                // FIXME: If clipPath has neither stroke nor fill,\n                // el.clipPath.contain(x, y) will always return false.\n                if (el.clipPath && !el.clipPath.contain(x, y))  {\n                    return false;\n                }\n                if (el.silent) {\n                    isSilent = true;\n                }\n                el = el.parent;\n            }\n            return isSilent ? SILENT : true;\n        }\n\n        return false;\n    }\n\n    util.mixin(Handler, Eventful);\n    util.mixin(Handler, Draggable);\n\n    module.exports = Handler;\n\n\n\n/***/ }),\n\n/***/ 767:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var util = __webpack_require__(606);\n    var config = __webpack_require__(633);\n    var Style = __webpack_require__(676);\n    var Pattern = __webpack_require__(675);\n\n    function returnFalse() {\n        return false;\n    }\n\n    /**\n     * 创建dom\n     *\n     * @inner\n     * @param {string} id dom id 待用\n     * @param {string} type dom type，such as canvas, div etc.\n     * @param {Painter} painter painter instance\n     * @param {number} number\n     */\n    function createDom(id, type, painter, dpr) {\n        var newDom = document.createElement(type);\n        var width = painter.getWidth();\n        var height = painter.getHeight();\n\n        var newDomStyle = newDom.style;\n        // 没append呢，请原谅我这样写，清晰~\n        newDomStyle.position = 'absolute';\n        newDomStyle.left = 0;\n        newDomStyle.top = 0;\n        newDomStyle.width = width + 'px';\n        newDomStyle.height = height + 'px';\n        newDom.width = width * dpr;\n        newDom.height = height * dpr;\n\n        // id不作为索引用，避免可能造成的重名，定义为私有属性\n        newDom.setAttribute('data-zr-dom-id', id);\n        return newDom;\n    }\n\n    /**\n     * @alias module:zrender/Layer\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @param {string} id\n     * @param {module:zrender/Painter} painter\n     * @param {number} [dpr]\n     */\n    var Layer = function(id, painter, dpr) {\n        var dom;\n        dpr = dpr || config.devicePixelRatio;\n        if (typeof id === 'string') {\n            dom = createDom(id, 'canvas', painter, dpr);\n        }\n        // Not using isDom because in node it will return false\n        else if (util.isObject(id)) {\n            dom = id;\n            id = dom.id;\n        }\n        this.id = id;\n        this.dom = dom;\n\n        var domStyle = dom.style;\n        if (domStyle) { // Not in node\n            dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n            domStyle['-webkit-user-select'] = 'none';\n            domStyle['user-select'] = 'none';\n            domStyle['-webkit-touch-callout'] = 'none';\n            domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n            domStyle['padding'] = 0;\n            domStyle['margin'] = 0;\n            domStyle['border-width'] = 0;\n        }\n\n        this.domBack = null;\n        this.ctxBack = null;\n\n        this.painter = painter;\n\n        this.config = null;\n\n        // Configs\n        /**\n         * 每次清空画布的颜色\n         * @type {string}\n         * @default 0\n         */\n        this.clearColor = 0;\n        /**\n         * 是否开启动态模糊\n         * @type {boolean}\n         * @default false\n         */\n        this.motionBlur = false;\n        /**\n         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         * @type {number}\n         * @default 0.7\n         */\n        this.lastFrameAlpha = 0.7;\n\n        /**\n         * Layer dpr\n         * @type {number}\n         */\n        this.dpr = dpr;\n    };\n\n    Layer.prototype = {\n\n        constructor: Layer,\n\n        elCount: 0,\n\n        __dirty: true,\n\n        initContext: function () {\n            this.ctx = this.dom.getContext('2d');\n            this.ctx.__currentValues = {};\n            this.ctx.dpr = this.dpr;\n        },\n\n        createBackBuffer: function () {\n            var dpr = this.dpr;\n\n            this.domBack = createDom('back-' + this.id, 'canvas', this.painter, dpr);\n            this.ctxBack = this.domBack.getContext('2d');\n            this.ctxBack.__currentValues = {};\n\n            if (dpr != 1) {\n                this.ctxBack.scale(dpr, dpr);\n            }\n        },\n\n        /**\n         * @param  {number} width\n         * @param  {number} height\n         */\n        resize: function (width, height) {\n            var dpr = this.dpr;\n\n            var dom = this.dom;\n            var domStyle = dom.style;\n            var domBack = this.domBack;\n\n            domStyle.width = width + 'px';\n            domStyle.height = height + 'px';\n\n            dom.width = width * dpr;\n            dom.height = height * dpr;\n\n            if (domBack) {\n                domBack.width = width * dpr;\n                domBack.height = height * dpr;\n\n                if (dpr != 1) {\n                    this.ctxBack.scale(dpr, dpr);\n                }\n            }\n        },\n\n        /**\n         * 清空该层画布\n         * @param {boolean} clearAll Clear all with out motion blur\n         */\n        clear: function (clearAll) {\n            var dom = this.dom;\n            var ctx = this.ctx;\n            var width = dom.width;\n            var height = dom.height;\n\n            var clearColor = this.clearColor;\n            var haveMotionBLur = this.motionBlur && !clearAll;\n            var lastFrameAlpha = this.lastFrameAlpha;\n\n            var dpr = this.dpr;\n\n            if (haveMotionBLur) {\n                if (!this.domBack) {\n                    this.createBackBuffer();\n                }\n\n                this.ctxBack.globalCompositeOperation = 'copy';\n                this.ctxBack.drawImage(\n                    dom, 0, 0,\n                    width / dpr,\n                    height / dpr\n                );\n            }\n\n            ctx.clearRect(0, 0, width, height);\n            if (clearColor) {\n                var clearColorGradientOrPattern;\n                // Gradient\n                if (clearColor.colorStops) {\n                    // Cache canvas gradient\n                    clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n                        x: 0,\n                        y: 0,\n                        width: width,\n                        height: height\n                    });\n\n                    clearColor.__canvasGradient = clearColorGradientOrPattern;\n                }\n                // Pattern\n                else if (clearColor.image) {\n                    clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n                }\n                ctx.save();\n                ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n                ctx.fillRect(0, 0, width, height);\n                ctx.restore();\n            }\n\n            if (haveMotionBLur) {\n                var domBack = this.domBack;\n                ctx.save();\n                ctx.globalAlpha = lastFrameAlpha;\n                ctx.drawImage(domBack, 0, 0, width, height);\n                ctx.restore();\n            }\n        }\n    };\n\n    module.exports = Layer;\n\n\n/***/ }),\n\n/***/ 768:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n \n\n    var config = __webpack_require__(633);\n    var util = __webpack_require__(606);\n    var log = __webpack_require__(673);\n    var BoundingRect = __webpack_require__(617);\n    var timsort = __webpack_require__(643);\n\n    var Layer = __webpack_require__(767);\n\n    var requestAnimationFrame = __webpack_require__(669);\n\n    // PENDIGN\n    // Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n    //\n    // Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\n    var MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\n    function parseInt10(val) {\n        return parseInt(val, 10);\n    }\n\n    function isLayerValid(layer) {\n        if (!layer) {\n            return false;\n        }\n\n        if (layer.__builtin__) {\n            return true;\n        }\n\n        if (typeof(layer.resize) !== 'function'\n            || typeof(layer.refresh) !== 'function'\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function preProcessLayer(layer) {\n        layer.__unusedCount++;\n    }\n\n    function postProcessLayer(layer) {\n        if (layer.__unusedCount == 1) {\n            layer.clear();\n        }\n    }\n\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var viewRect = new BoundingRect(0, 0, 0, 0);\n    function isDisplayableCulled(el, width, height) {\n        tmpRect.copy(el.getBoundingRect());\n        if (el.transform) {\n            tmpRect.applyTransform(el.transform);\n        }\n        viewRect.width = width;\n        viewRect.height = height;\n        return !tmpRect.intersect(viewRect);\n    }\n\n    function isClipPathChanged(clipPaths, prevClipPaths) {\n        if (clipPaths == prevClipPaths) { // Can both be null or undefined\n            return false;\n        }\n\n        if (!clipPaths || !prevClipPaths || (clipPaths.length !== prevClipPaths.length)) {\n            return true;\n        }\n        for (var i = 0; i < clipPaths.length; i++) {\n            if (clipPaths[i] !== prevClipPaths[i]) {\n                return true;\n            }\n        }\n    }\n\n    function doClip(clipPaths, ctx) {\n        for (var i = 0; i < clipPaths.length; i++) {\n            var clipPath = clipPaths[i];\n\n            clipPath.setTransform(ctx);\n            ctx.beginPath();\n            clipPath.buildPath(ctx, clipPath.shape);\n            ctx.clip();\n            // Transform back\n            clipPath.restoreTransform(ctx);\n        }\n    }\n\n    function createRoot(width, height) {\n        var domRoot = document.createElement('div');\n\n        // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n        domRoot.style.cssText = [\n            'position:relative',\n            'overflow:hidden',\n            'width:' + width + 'px',\n            'height:' + height + 'px',\n            'padding:0',\n            'margin:0',\n            'border-width:0'\n        ].join(';') + ';';\n\n        return domRoot;\n    }\n\n    /**\n     * @alias module:zrender/Painter\n     * @constructor\n     * @param {HTMLElement} root 绘图容器\n     * @param {module:zrender/Storage} storage\n     * @param {Object} opts\n     */\n    var Painter = function (root, storage, opts) {\n        // In node environment using node-canvas\n        var singleCanvas = !root.nodeName // In node ?\n            || root.nodeName.toUpperCase() === 'CANVAS';\n\n        this._opts = opts = util.extend({}, opts || {});\n\n        /**\n         * @type {number}\n         */\n        this.dpr = opts.devicePixelRatio || config.devicePixelRatio;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._singleCanvas = singleCanvas;\n        /**\n         * 绘图容器\n         * @type {HTMLElement}\n         */\n        this.root = root;\n\n        var rootStyle = root.style;\n\n        if (rootStyle) {\n            rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n            rootStyle['-webkit-user-select'] =\n            rootStyle['user-select'] =\n            rootStyle['-webkit-touch-callout'] = 'none';\n\n            root.innerHTML = '';\n        }\n\n        /**\n         * @type {module:zrender/Storage}\n         */\n        this.storage = storage;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        var zlevelList = this._zlevelList = [];\n\n        /**\n         * @type {Object.<string, module:zrender/Layer>}\n         * @private\n         */\n        var layers = this._layers = {};\n\n        /**\n         * @type {Object.<string, Object>}\n         * @type {private}\n         */\n        this._layerConfig = {};\n\n        if (!singleCanvas) {\n            this._width = this._getSize(0);\n            this._height = this._getSize(1);\n\n            var domRoot = this._domRoot = createRoot(\n                this._width, this._height\n            );\n            root.appendChild(domRoot);\n        }\n        else {\n            if (opts.width != null) {\n                root.width = opts.width;\n            }\n            if (opts.height != null) {\n                root.height = opts.height;\n            }\n            // Use canvas width and height directly\n            var width = root.width;\n            var height = root.height;\n            this._width = width;\n            this._height = height;\n\n            // Create layer if only one given canvas\n            // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n            var mainLayer = new Layer(root, this, 1);\n            mainLayer.initContext();\n            // FIXME Use canvas width and height\n            // mainLayer.resize(width, height);\n            layers[0] = mainLayer;\n            zlevelList.push(0);\n\n            this._domRoot = root;\n        }\n\n        // Layers for progressive rendering\n        this._progressiveLayers = [];\n\n        /**\n         * @type {module:zrender/Layer}\n         * @private\n         */\n        this._hoverlayer;\n\n        this._hoverElements = [];\n    };\n\n    Painter.prototype = {\n\n        constructor: Painter,\n\n        /**\n         * If painter use a single canvas\n         * @return {boolean}\n         */\n        isSingleCanvas: function () {\n            return this._singleCanvas;\n        },\n        /**\n         * @return {HTMLDivElement}\n         */\n        getViewportRoot: function () {\n            return this._domRoot;\n        },\n\n        getViewportRootOffset: function () {\n            var viewportRoot = this.getViewportRoot();\n            if (viewportRoot) {\n                return {\n                    offsetLeft: viewportRoot.offsetLeft || 0,\n                    offsetTop: viewportRoot.offsetTop || 0\n                };\n            }\n        },\n\n        /**\n         * 刷新\n         * @param {boolean} [paintAll=false] 强制绘制所有displayable\n         */\n        refresh: function (paintAll) {\n\n            var list = this.storage.getDisplayList(true);\n\n            var zlevelList = this._zlevelList;\n\n            this._paintList(list, paintAll);\n\n            // Paint custum layers\n            for (var i = 0; i < zlevelList.length; i++) {\n                var z = zlevelList[i];\n                var layer = this._layers[z];\n                if (!layer.__builtin__ && layer.refresh) {\n                    layer.refresh();\n                }\n            }\n\n            this.refreshHover();\n\n            if (this._progressiveLayers.length) {\n                this._startProgessive();\n            }\n\n            return this;\n        },\n\n        addHover: function (el, hoverStyle) {\n            if (el.__hoverMir) {\n                return;\n            }\n            var elMirror = new el.constructor({\n                style: el.style,\n                shape: el.shape\n            });\n            elMirror.__from = el;\n            el.__hoverMir = elMirror;\n            elMirror.setStyle(hoverStyle);\n            this._hoverElements.push(elMirror);\n        },\n\n        removeHover: function (el) {\n            var elMirror = el.__hoverMir;\n            var hoverElements = this._hoverElements;\n            var idx = util.indexOf(hoverElements, elMirror);\n            if (idx >= 0) {\n                hoverElements.splice(idx, 1);\n            }\n            el.__hoverMir = null;\n        },\n\n        clearHover: function (el) {\n            var hoverElements = this._hoverElements;\n            for (var i = 0; i < hoverElements.length; i++) {\n                var from = hoverElements[i].__from;\n                if (from) {\n                    from.__hoverMir = null;\n                }\n            }\n            hoverElements.length = 0;\n        },\n\n        refreshHover: function () {\n            var hoverElements = this._hoverElements;\n            var len = hoverElements.length;\n            var hoverLayer = this._hoverlayer;\n            hoverLayer && hoverLayer.clear();\n\n            if (!len) {\n                return;\n            }\n            timsort(hoverElements, this.storage.displayableSortFunc);\n\n            // Use a extream large zlevel\n            // FIXME?\n            if (!hoverLayer) {\n                hoverLayer = this._hoverlayer = this.getLayer(1e5);\n            }\n\n            var scope = {};\n            hoverLayer.ctx.save();\n            for (var i = 0; i < len;) {\n                var el = hoverElements[i];\n                var originalEl = el.__from;\n                // Original el is removed\n                // PENDING\n                if (!(originalEl && originalEl.__zr)) {\n                    hoverElements.splice(i, 1);\n                    originalEl.__hoverMir = null;\n                    len--;\n                    continue;\n                }\n                i++;\n\n                // Use transform\n                // FIXME style and shape ?\n                if (!originalEl.invisible) {\n                    el.transform = originalEl.transform;\n                    el.invTransform = originalEl.invTransform;\n                    el.__clipPaths = originalEl.__clipPaths;\n                    // el.\n                    this._doPaintEl(el, hoverLayer, true, scope);\n                }\n            }\n            hoverLayer.ctx.restore();\n        },\n\n        _startProgessive: function () {\n            var self = this;\n\n            if (!self._furtherProgressive) {\n                return;\n            }\n\n            // Use a token to stop progress steps triggered by\n            // previous zr.refresh calling.\n            var token = self._progressiveToken = +new Date();\n\n            self._progress++;\n            requestAnimationFrame(step);\n\n            function step() {\n                // In case refreshed or disposed\n                if (token === self._progressiveToken && self.storage) {\n\n                    self._doPaintList(self.storage.getDisplayList());\n\n                    if (self._furtherProgressive) {\n                        self._progress++;\n                        requestAnimationFrame(step);\n                    }\n                    else {\n                        self._progressiveToken = -1;\n                    }\n                }\n            }\n        },\n\n        _clearProgressive: function () {\n            this._progressiveToken = -1;\n            this._progress = 0;\n            util.each(this._progressiveLayers, function (layer) {\n                layer.__dirty && layer.clear();\n            });\n        },\n\n        _paintList: function (list, paintAll) {\n\n            if (paintAll == null) {\n                paintAll = false;\n            }\n\n            this._updateLayerStatus(list);\n\n            this._clearProgressive();\n\n            this.eachBuiltinLayer(preProcessLayer);\n\n            this._doPaintList(list, paintAll);\n\n            this.eachBuiltinLayer(postProcessLayer);\n        },\n\n        _doPaintList: function (list, paintAll) {\n            var currentLayer;\n            var currentZLevel;\n            var ctx;\n\n            // var invTransform = [];\n            var scope;\n\n            var progressiveLayerIdx = 0;\n            var currentProgressiveLayer;\n\n            var width = this._width;\n            var height = this._height;\n            var layerProgress;\n            var frame = this._progress;\n            function flushProgressiveLayer(layer) {\n                var dpr = ctx.dpr || 1;\n                ctx.save();\n                ctx.globalAlpha = 1;\n                ctx.shadowBlur = 0;\n                // Avoid layer don't clear in next progressive frame\n                currentLayer.__dirty = true;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n                ctx.restore();\n            }\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n\n                var elFrame = el.__frame;\n\n                // Flush at current context\n                // PENDING\n                if (elFrame < 0 && currentProgressiveLayer) {\n                    flushProgressiveLayer(currentProgressiveLayer);\n                    currentProgressiveLayer = null;\n                }\n\n                // Change draw layer\n                if (currentZLevel !== elZLevel) {\n                    if (ctx) {\n                        ctx.restore();\n                    }\n\n                    // Reset scope\n                    scope = {};\n\n                    // Only 0 zlevel if only has one canvas\n                    currentZLevel = elZLevel;\n                    currentLayer = this.getLayer(currentZLevel);\n\n                    if (!currentLayer.__builtin__) {\n                        log(\n                            'ZLevel ' + currentZLevel\n                            + ' has been used by unkown layer ' + currentLayer.id\n                        );\n                    }\n\n                    ctx = currentLayer.ctx;\n                    ctx.save();\n\n                    // Reset the count\n                    currentLayer.__unusedCount = 0;\n\n                    if (currentLayer.__dirty || paintAll) {\n                        currentLayer.clear();\n                    }\n                }\n\n                if (!(currentLayer.__dirty || paintAll)) {\n                    continue;\n                }\n\n                if (elFrame >= 0) {\n                    // Progressive layer changed\n                    if (!currentProgressiveLayer) {\n                        currentProgressiveLayer = this._progressiveLayers[\n                            Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)\n                        ];\n\n                        currentProgressiveLayer.ctx.save();\n                        currentProgressiveLayer.renderScope = {};\n\n                        if (currentProgressiveLayer\n                            && (currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress)\n                        ) {\n                            // flushProgressiveLayer(currentProgressiveLayer);\n                            // Quick jump all progressive elements\n                            // All progressive element are not dirty, jump over and flush directly\n                            i = currentProgressiveLayer.__nextIdxNotProg - 1;\n                            // currentProgressiveLayer = null;\n                            continue;\n                        }\n\n                        layerProgress = currentProgressiveLayer.__progress;\n\n                        if (!currentProgressiveLayer.__dirty) {\n                            // Keep rendering\n                            frame = layerProgress;\n                        }\n\n                        currentProgressiveLayer.__progress = frame + 1;\n                    }\n\n                    if (elFrame === frame) {\n                        this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n                    }\n                }\n                else {\n                    this._doPaintEl(el, currentLayer, paintAll, scope);\n                }\n\n                el.__dirty = false;\n            }\n\n            if (currentProgressiveLayer) {\n                flushProgressiveLayer(currentProgressiveLayer);\n            }\n\n            // Restore the lastLayer ctx\n            ctx && ctx.restore();\n            // If still has clipping state\n            // if (scope.prevElClipPaths) {\n            //     ctx.restore();\n            // }\n\n            this._furtherProgressive = false;\n            util.each(this._progressiveLayers, function (layer) {\n                if (layer.__maxProgress >= layer.__progress) {\n                    this._furtherProgressive = true;\n                }\n            }, this);\n        },\n\n        _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n            var ctx = currentLayer.ctx;\n            var m = el.transform;\n            if (\n                (currentLayer.__dirty || forcePaint)\n                // Ignore invisible element\n                && !el.invisible\n                // Ignore transparent element\n                && el.style.opacity !== 0\n                // Ignore scale 0 element, in some environment like node-canvas\n                // Draw a scale 0 element can cause all following draw wrong\n                // And setTransform with scale 0 will cause set back transform failed.\n                && !(m && !m[0] && !m[3])\n                // Ignore culled element\n                && !(el.culling && isDisplayableCulled(el, this._width, this._height))\n            ) {\n\n                var clipPaths = el.__clipPaths;\n\n                // Optimize when clipping on group with several elements\n                if (scope.prevClipLayer !== currentLayer\n                    || isClipPathChanged(clipPaths, scope.prevElClipPaths)\n                ) {\n                    // If has previous clipping state, restore from it\n                    if (scope.prevElClipPaths) {\n                        scope.prevClipLayer.ctx.restore();\n                        scope.prevClipLayer = scope.prevElClipPaths = null;\n\n                        // Reset prevEl since context has been restored\n                        scope.prevEl = null;\n                    }\n                    // New clipping state\n                    if (clipPaths) {\n                        ctx.save();\n                        doClip(clipPaths, ctx);\n                        scope.prevClipLayer = currentLayer;\n                        scope.prevElClipPaths = clipPaths;\n                    }\n                }\n                el.beforeBrush && el.beforeBrush(ctx);\n\n                el.brush(ctx, scope.prevEl || null);\n                scope.prevEl = el;\n\n                el.afterBrush && el.afterBrush(ctx);\n            }\n        },\n\n        /**\n         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n         * @param {number} zlevel\n         * @return {module:zrender/Layer}\n         */\n        getLayer: function (zlevel) {\n            if (this._singleCanvas) {\n                return this._layers[0];\n            }\n\n            var layer = this._layers[zlevel];\n            if (!layer) {\n                // Create a new layer\n                layer = new Layer('zr_' + zlevel, this, this.dpr);\n                layer.__builtin__ = true;\n\n                if (this._layerConfig[zlevel]) {\n                    util.merge(layer, this._layerConfig[zlevel], true);\n                }\n\n                this.insertLayer(zlevel, layer);\n\n                // Context is created after dom inserted to document\n                // Or excanvas will get 0px clientWidth and clientHeight\n                layer.initContext();\n            }\n\n            return layer;\n        },\n\n        insertLayer: function (zlevel, layer) {\n\n            var layersMap = this._layers;\n            var zlevelList = this._zlevelList;\n            var len = zlevelList.length;\n            var prevLayer = null;\n            var i = -1;\n            var domRoot = this._domRoot;\n\n            if (layersMap[zlevel]) {\n                log('ZLevel ' + zlevel + ' has been used already');\n                return;\n            }\n            // Check if is a valid layer\n            if (!isLayerValid(layer)) {\n                log('Layer of zlevel ' + zlevel + ' is not valid');\n                return;\n            }\n\n            if (len > 0 && zlevel > zlevelList[0]) {\n                for (i = 0; i < len - 1; i++) {\n                    if (\n                        zlevelList[i] < zlevel\n                        && zlevelList[i + 1] > zlevel\n                    ) {\n                        break;\n                    }\n                }\n                prevLayer = layersMap[zlevelList[i]];\n            }\n            zlevelList.splice(i + 1, 0, zlevel);\n\n            layersMap[zlevel] = layer;\n\n            // Vitual layer will not directly show on the screen.\n            // (It can be a WebGL layer and assigned to a ZImage element)\n            // But it still under management of zrender.\n            if (!layer.virtual) {\n                if (prevLayer) {\n                    var prevDom = prevLayer.dom;\n                    if (prevDom.nextSibling) {\n                        domRoot.insertBefore(\n                            layer.dom,\n                            prevDom.nextSibling\n                        );\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n                else {\n                    if (domRoot.firstChild) {\n                        domRoot.insertBefore(layer.dom, domRoot.firstChild);\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n            }\n        },\n\n        // Iterate each layer\n        eachLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                cb.call(context, this._layers[z], z);\n            }\n        },\n\n        // Iterate each buildin layer\n        eachBuiltinLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        // Iterate each other layer except buildin layer\n        eachOtherLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (!layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        /**\n         * 获取所有已创建的层\n         * @param {Array.<module:zrender/Layer>} [prevLayer]\n         */\n        getLayers: function () {\n            return this._layers;\n        },\n\n        _updateLayerStatus: function (list) {\n\n            var layers = this._layers;\n            var progressiveLayers = this._progressiveLayers;\n\n            var elCountsLastFrame = {};\n            var progressiveElCountsLastFrame = {};\n\n            this.eachBuiltinLayer(function (layer, z) {\n                elCountsLastFrame[z] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            util.each(progressiveLayers, function (layer, idx) {\n                progressiveElCountsLastFrame[idx] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            var progressiveLayerCount = 0;\n            var currentProgressiveLayer;\n            var lastProgressiveKey;\n            var frameCount = 0;\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var zlevel = this._singleCanvas ? 0 : el.zlevel;\n                var layer = layers[zlevel];\n                var elProgress = el.progressive;\n                if (layer) {\n                    layer.elCount++;\n                    layer.__dirty = layer.__dirty || el.__dirty;\n                }\n\n                /////// Update progressive\n                if (elProgress >= 0) {\n                    // Fix wrong progressive sequence problem.\n                    if (lastProgressiveKey !== elProgress) {\n                        lastProgressiveKey = elProgress;\n                        frameCount++;\n                    }\n                    var elFrame = el.__frame = frameCount - 1;\n                    if (!currentProgressiveLayer) {\n                        var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n                        currentProgressiveLayer = progressiveLayers[idx];\n                        if (!currentProgressiveLayer) {\n                            currentProgressiveLayer = progressiveLayers[idx] = new Layer(\n                                'progressive', this, this.dpr\n                            );\n                            currentProgressiveLayer.initContext();\n                        }\n                        currentProgressiveLayer.__maxProgress = 0;\n                    }\n                    currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n                    currentProgressiveLayer.elCount++;\n\n                    currentProgressiveLayer.__maxProgress = Math.max(\n                        currentProgressiveLayer.__maxProgress, elFrame\n                    );\n\n                    if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n                        // Should keep rendering this  layer because progressive rendering is not finished yet\n                        layer.__dirty = true;\n                    }\n                }\n                else {\n                    el.__frame = -1;\n\n                    if (currentProgressiveLayer) {\n                        currentProgressiveLayer.__nextIdxNotProg = i;\n                        progressiveLayerCount++;\n                        currentProgressiveLayer = null;\n                    }\n                }\n            }\n\n            if (currentProgressiveLayer) {\n                progressiveLayerCount++;\n                currentProgressiveLayer.__nextIdxNotProg = i;\n            }\n\n            // 层中的元素数量有发生变化\n            this.eachBuiltinLayer(function (layer, z) {\n                if (elCountsLastFrame[z] !== layer.elCount) {\n                    layer.__dirty = true;\n                }\n            });\n\n            progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n            util.each(progressiveLayers, function (layer, idx) {\n                if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n                    el.__dirty = true;\n                }\n                if (layer.__dirty) {\n                    layer.__progress = 0;\n                }\n            });\n        },\n\n        /**\n         * 清除hover层外所有内容\n         */\n        clear: function () {\n            this.eachBuiltinLayer(this._clearLayer);\n            return this;\n        },\n\n        _clearLayer: function (layer) {\n            layer.clear();\n        },\n\n        /**\n         * 修改指定zlevel的绘制参数\n         *\n         * @param {string} zlevel\n         * @param {Object} config 配置对象\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\n         * @param {number} [config.lastFrameAlpha=0.7]\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         */\n        configLayer: function (zlevel, config) {\n            if (config) {\n                var layerConfig = this._layerConfig;\n                if (!layerConfig[zlevel]) {\n                    layerConfig[zlevel] = config;\n                }\n                else {\n                    util.merge(layerConfig[zlevel], config, true);\n                }\n\n                var layer = this._layers[zlevel];\n\n                if (layer) {\n                    util.merge(layer, layerConfig[zlevel], true);\n                }\n            }\n        },\n\n        /**\n         * 删除指定层\n         * @param {number} zlevel 层所在的zlevel\n         */\n        delLayer: function (zlevel) {\n            var layers = this._layers;\n            var zlevelList = this._zlevelList;\n            var layer = layers[zlevel];\n            if (!layer) {\n                return;\n            }\n            layer.dom.parentNode.removeChild(layer.dom);\n            delete layers[zlevel];\n\n            zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n        },\n\n        /**\n         * 区域大小变化后重绘\n         */\n        resize: function (width, height) {\n            var domRoot = this._domRoot;\n            // FIXME Why ?\n            domRoot.style.display = 'none';\n\n            // Save input w/h\n            var opts = this._opts;\n            width != null && (opts.width = width);\n            height != null && (opts.height = height);\n\n            width = this._getSize(0);\n            height = this._getSize(1);\n\n            domRoot.style.display = '';\n\n            // 优化没有实际改变的resize\n            if (this._width != width || height != this._height) {\n                domRoot.style.width = width + 'px';\n                domRoot.style.height = height + 'px';\n\n                for (var id in this._layers) {\n                    if (this._layers.hasOwnProperty(id)) {\n                        this._layers[id].resize(width, height);\n                    }\n                }\n                util.each(this._progressiveLayers, function (layer) {\n                    layer.resize(width, height);\n                });\n\n                this.refresh(true);\n            }\n\n            this._width = width;\n            this._height = height;\n\n            return this;\n        },\n\n        /**\n         * 清除单独的一个层\n         * @param {number} zlevel\n         */\n        clearLayer: function (zlevel) {\n            var layer = this._layers[zlevel];\n            if (layer) {\n                layer.clear();\n            }\n        },\n\n        /**\n         * 释放\n         */\n        dispose: function () {\n            this.root.innerHTML = '';\n\n            this.root =\n            this.storage =\n\n            this._domRoot =\n            this._layers = null;\n        },\n\n        /**\n         * Get canvas which has all thing rendered\n         * @param {Object} opts\n         * @param {string} [opts.backgroundColor]\n         */\n        getRenderedCanvas: function (opts) {\n            opts = opts || {};\n            if (this._singleCanvas) {\n                return this._layers[0].dom;\n            }\n\n            var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n            imageLayer.initContext();\n\n            imageLayer.clearColor = opts.backgroundColor;\n            imageLayer.clear();\n\n            var displayList = this.storage.getDisplayList(true);\n\n            var scope = {};\n            var zlevel;\n\n            var self = this;\n            function findAndDrawOtherLayer(smaller, larger) {\n                var zlevelList = self._zlevelList;\n                if (smaller == null) {\n                    smaller = -Infinity;\n                }\n                var intermediateLayer;\n                for (var i = 0; i < zlevelList.length; i++) {\n                    var z = zlevelList[i];\n                    var layer = self._layers[z];\n                    if (!layer.__builtin__ && z > smaller && z < larger) {\n                        intermediateLayer = layer;\n                        break;\n                    }\n                }\n                if (intermediateLayer && intermediateLayer.renderToCanvas) {\n                    imageLayer.ctx.save();\n                    intermediateLayer.renderToCanvas(imageLayer.ctx);\n                    imageLayer.ctx.restore();\n                }\n            }\n            for (var i = 0; i < displayList.length; i++) {\n                var el = displayList[i];\n\n                if (el.zlevel !== zlevel) {\n                    findAndDrawOtherLayer(zlevel, el.zlevel);\n                    zlevel = el.zlevel;\n                }\n                this._doPaintEl(el, imageLayer, true, scope);\n            }\n\n            findAndDrawOtherLayer(zlevel, Infinity);\n\n            return imageLayer.dom;\n        },\n        /**\n         * 获取绘图区域宽度\n         */\n        getWidth: function () {\n            return this._width;\n        },\n\n        /**\n         * 获取绘图区域高度\n         */\n        getHeight: function () {\n            return this._height;\n        },\n\n        _getSize: function (whIdx) {\n            var opts = this._opts;\n            var wh = ['width', 'height'][whIdx];\n            var cwh = ['clientWidth', 'clientHeight'][whIdx];\n            var plt = ['paddingLeft', 'paddingTop'][whIdx];\n            var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n            if (opts[wh] != null && opts[wh] !== 'auto') {\n                return parseFloat(opts[wh]);\n            }\n\n            var root = this.root;\n            // IE8 does not support getComputedStyle, but it use VML.\n            var stl = document.defaultView.getComputedStyle(root);\n\n            return (\n                (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n                - (parseInt10(stl[plt]) || 0)\n                - (parseInt10(stl[prb]) || 0)\n            ) | 0;\n        },\n\n        pathToImage: function (path, dpr) {\n            dpr = dpr || this.dpr;\n\n            var canvas = document.createElement('canvas');\n            var ctx = canvas.getContext('2d');\n            var rect = path.getBoundingRect();\n            var style = path.style;\n            var shadowBlurSize = style.shadowBlur;\n            var shadowOffsetX = style.shadowOffsetX;\n            var shadowOffsetY = style.shadowOffsetY;\n            var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n\n            var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n            var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n            var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n            var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n            var width = rect.width + leftMargin + rightMargin;\n            var height = rect.height + topMargin + bottomMargin;\n\n            canvas.width = width * dpr;\n            canvas.height = height * dpr;\n\n            ctx.scale(dpr, dpr);\n            ctx.clearRect(0, 0, width, height);\n            ctx.dpr = dpr;\n\n            var pathTransform = {\n                position: path.position,\n                rotation: path.rotation,\n                scale: path.scale\n            };\n            path.position = [leftMargin - rect.x, topMargin - rect.y];\n            path.rotation = 0;\n            path.scale = [1, 1];\n            path.updateTransform();\n            if (path) {\n                path.brush(ctx);\n            }\n\n            var ImageShape = __webpack_require__(674);\n            var imgShape = new ImageShape({\n                style: {\n                    x: 0,\n                    y: 0,\n                    image: canvas\n                }\n            });\n\n            if (pathTransform.position != null) {\n                imgShape.position = path.position = pathTransform.position;\n            }\n\n            if (pathTransform.rotation != null) {\n                imgShape.rotation = path.rotation = pathTransform.rotation;\n            }\n\n            if (pathTransform.scale != null) {\n                imgShape.scale = path.scale = pathTransform.scale;\n            }\n\n            return imgShape;\n        }\n    };\n\n    module.exports = Painter;\n\n\n\n/***/ }),\n\n/***/ 769:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n\n\n    var util = __webpack_require__(606);\n    var env = __webpack_require__(615);\n\n    var Group = __webpack_require__(634);\n\n    // Use timsort because in most case elements are partially sorted\n    // https://jsfiddle.net/pissang/jr4x7mdm/8/\n    var timsort = __webpack_require__(643);\n\n    function shapeCompareFunc(a, b) {\n        if (a.zlevel === b.zlevel) {\n            if (a.z === b.z) {\n                // if (a.z2 === b.z2) {\n                //     // FIXME Slow has renderidx compare\n                //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n                //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n                //     return a.__renderidx - b.__renderidx;\n                // }\n                return a.z2 - b.z2;\n            }\n            return a.z - b.z;\n        }\n        return a.zlevel - b.zlevel;\n    }\n    /**\n     * 内容仓库 (M)\n     * @alias module:zrender/Storage\n     * @constructor\n     */\n    var Storage = function () {\n        this._roots = [];\n\n        this._displayList = [];\n\n        this._displayListLen = 0;\n    };\n\n    Storage.prototype = {\n\n        constructor: Storage,\n\n        /**\n         * @param  {Function} cb\n         *\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._roots.length; i++) {\n                this._roots[i].traverse(cb, context);\n            }\n        },\n\n        /**\n         * 返回所有图形的绘制队列\n         * @param {boolean} [update=false] 是否在返回前更新该数组\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n         *\n         * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n         * @return {Array.<module:zrender/graphic/Displayable>}\n         */\n        getDisplayList: function (update, includeIgnore) {\n            includeIgnore = includeIgnore || false;\n            if (update) {\n                this.updateDisplayList(includeIgnore);\n            }\n            return this._displayList;\n        },\n\n        /**\n         * 更新图形的绘制队列。\n         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n         */\n        updateDisplayList: function (includeIgnore) {\n            this._displayListLen = 0;\n            var roots = this._roots;\n            var displayList = this._displayList;\n            for (var i = 0, len = roots.length; i < len; i++) {\n                this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n            }\n            displayList.length = this._displayListLen;\n\n            // for (var i = 0, len = displayList.length; i < len; i++) {\n            //     displayList[i].__renderidx = i;\n            // }\n\n            // displayList.sort(shapeCompareFunc);\n            env.canvasSupported && timsort(displayList, shapeCompareFunc);\n        },\n\n        _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n\n            if (el.ignore && !includeIgnore) {\n                return;\n            }\n\n            el.beforeUpdate();\n\n            if (el.__dirty) {\n\n                el.update();\n\n            }\n\n            el.afterUpdate();\n\n            var userSetClipPath = el.clipPath;\n            if (userSetClipPath) {\n\n                // FIXME 效率影响\n                if (clipPaths) {\n                    clipPaths = clipPaths.slice();\n                }\n                else {\n                    clipPaths = [];\n                }\n\n                var currentClipPath = userSetClipPath;\n                var parentClipPath = el;\n                // Recursively add clip path\n                while (currentClipPath) {\n                    // clipPath 的变换是基于使用这个 clipPath 的元素\n                    currentClipPath.parent = parentClipPath;\n                    currentClipPath.updateTransform();\n\n                    clipPaths.push(currentClipPath);\n\n                    parentClipPath = currentClipPath;\n                    currentClipPath = currentClipPath.clipPath;\n                }\n            }\n\n            if (el.isGroup) {\n                var children = el._children;\n\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n\n                    // Force to mark as dirty if group is dirty\n                    // FIXME __dirtyPath ?\n                    if (el.__dirty) {\n                        child.__dirty = true;\n                    }\n\n                    this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n                }\n\n                // Mark group clean here\n                el.__dirty = false;\n\n            }\n            else {\n                el.__clipPaths = clipPaths;\n\n                this._displayList[this._displayListLen++] = el;\n            }\n        },\n\n        /**\n         * 添加图形(Shape)或者组(Group)到根节点\n         * @param {module:zrender/Element} el\n         */\n        addRoot: function (el) {\n            if (el.__storage === this) {\n                return;\n            }\n\n            if (el instanceof Group) {\n                el.addChildrenToStorage(this);\n            }\n\n            this.addToStorage(el);\n            this._roots.push(el);\n        },\n\n        /**\n         * 删除指定的图形(Shape)或者组(Group)\n         * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n         */\n        delRoot: function (el) {\n            if (el == null) {\n                // 不指定el清空\n                for (var i = 0; i < this._roots.length; i++) {\n                    var root = this._roots[i];\n                    if (root instanceof Group) {\n                        root.delChildrenFromStorage(this);\n                    }\n                }\n\n                this._roots = [];\n                this._displayList = [];\n                this._displayListLen = 0;\n\n                return;\n            }\n\n            if (el instanceof Array) {\n                for (var i = 0, l = el.length; i < l; i++) {\n                    this.delRoot(el[i]);\n                }\n                return;\n            }\n\n\n            var idx = util.indexOf(this._roots, el);\n            if (idx >= 0) {\n                this.delFromStorage(el);\n                this._roots.splice(idx, 1);\n                if (el instanceof Group) {\n                    el.delChildrenFromStorage(this);\n                }\n            }\n        },\n\n        addToStorage: function (el) {\n            el.__storage = this;\n            el.dirty(false);\n\n            return this;\n        },\n\n        delFromStorage: function (el) {\n            if (el) {\n                el.__storage = null;\n            }\n\n            return this;\n        },\n\n        /**\n         * 清空并且释放Storage\n         */\n        dispose: function () {\n            this._renderList =\n            this._roots = null;\n        },\n\n        displayableSortFunc: shapeCompareFunc\n    };\n\n    module.exports = Storage;\n\n\n\n/***/ }),\n\n/***/ 770:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n\n    var util = __webpack_require__(606);\n    var Dispatcher = __webpack_require__(625).Dispatcher;\n\n    var requestAnimationFrame = __webpack_require__(669);\n\n    var Animator = __webpack_require__(668);\n    /**\n     * @typedef {Object} IZRenderStage\n     * @property {Function} update\n     */\n\n    /**\n     * @alias module:zrender/animation/Animation\n     * @constructor\n     * @param {Object} [options]\n     * @param {Function} [options.onframe]\n     * @param {IZRenderStage} [options.stage]\n     * @example\n     *     var animation = new Animation();\n     *     var obj = {\n     *         x: 100,\n     *         y: 100\n     *     };\n     *     animation.animate(node.position)\n     *         .when(1000, {\n     *             x: 500,\n     *             y: 500\n     *         })\n     *         .when(2000, {\n     *             x: 100,\n     *             y: 100\n     *         })\n     *         .start('spline');\n     */\n    var Animation = function (options) {\n\n        options = options || {};\n\n        this.stage = options.stage || {};\n\n        this.onframe = options.onframe || function() {};\n\n        // private properties\n        this._clips = [];\n\n        this._running = false;\n\n        this._time;\n\n        this._pausedTime;\n\n        this._pauseStart;\n\n        this._paused = false;\n\n        Dispatcher.call(this);\n    };\n\n    Animation.prototype = {\n\n        constructor: Animation,\n        /**\n         * 添加 clip\n         * @param {module:zrender/animation/Clip} clip\n         */\n        addClip: function (clip) {\n            this._clips.push(clip);\n        },\n        /**\n         * 添加 animator\n         * @param {module:zrender/animation/Animator} animator\n         */\n        addAnimator: function (animator) {\n            animator.animation = this;\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.addClip(clips[i]);\n            }\n        },\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Clip} clip\n         */\n        removeClip: function(clip) {\n            var idx = util.indexOf(this._clips, clip);\n            if (idx >= 0) {\n                this._clips.splice(idx, 1);\n            }\n        },\n\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Animator} animator\n         */\n        removeAnimator: function (animator) {\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.removeClip(clips[i]);\n            }\n            animator.animation = null;\n        },\n\n        _update: function() {\n\n            var time = new Date().getTime() - this._pausedTime;\n            var delta = time - this._time;\n            var clips = this._clips;\n            var len = clips.length;\n\n            var deferredEvents = [];\n            var deferredClips = [];\n            for (var i = 0; i < len; i++) {\n                var clip = clips[i];\n                var e = clip.step(time, delta);\n                // Throw out the events need to be called after\n                // stage.update, like destroy\n                if (e) {\n                    deferredEvents.push(e);\n                    deferredClips.push(clip);\n                }\n            }\n\n            // Remove the finished clip\n            for (var i = 0; i < len;) {\n                if (clips[i]._needsRemove) {\n                    clips[i] = clips[len - 1];\n                    clips.pop();\n                    len--;\n                }\n                else {\n                    i++;\n                }\n            }\n\n            len = deferredEvents.length;\n            for (var i = 0; i < len; i++) {\n                deferredClips[i].fire(deferredEvents[i]);\n            }\n\n            this._time = time;\n\n            this.onframe(delta);\n\n            this.trigger('frame', delta);\n\n            if (this.stage.update) {\n                this.stage.update();\n            }\n        },\n\n        _startLoop: function () {\n            var self = this;\n\n            this._running = true;\n\n            function step() {\n                if (self._running) {\n\n                    requestAnimationFrame(step);\n\n                    !self._paused && self._update();\n                }\n            }\n\n            requestAnimationFrame(step);\n        },\n\n        /**\n         * 开始运行动画\n         */\n        start: function () {\n\n            this._time = new Date().getTime();\n            this._pausedTime = 0;\n\n            this._startLoop();\n        },\n        /**\n         * 停止运行动画\n         */\n        stop: function () {\n            this._running = false;\n        },\n\n        /**\n         * Pause\n         */\n        pause: function () {\n            if (!this._paused) {\n                this._pauseStart = new Date().getTime();\n                this._paused = true;\n            }\n        },\n\n        /**\n         * Resume\n         */\n        resume: function () {\n            if (this._paused) {\n                this._pausedTime += (new Date().getTime()) - this._pauseStart;\n                this._paused = false;\n            }\n        },\n\n        /**\n         * 清除所有动画片段\n         */\n        clear: function () {\n            this._clips = [];\n        },\n        /**\n         * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n         * @param  {Object} target\n         * @param  {Object} options\n         * @param  {boolean} [options.loop=false] 是否循环播放动画\n         * @param  {Function} [options.getter=null]\n         *         如果指定getter函数，会通过getter函数取属性值\n         * @param  {Function} [options.setter=null]\n         *         如果指定setter函数，会通过setter函数设置属性值\n         * @return {module:zrender/animation/Animation~Animator}\n         */\n        // TODO Gap\n        animate: function (target, options) {\n            options = options || {};\n\n            var animator = new Animator(\n                target,\n                options.loop,\n                options.getter,\n                options.setter\n            );\n\n            this.addAnimator(animator);\n\n            return animator;\n        }\n    };\n\n    util.mixin(Animation, Dispatcher);\n\n    module.exports = Animation;\n\n\n\n/***/ }),\n\n/***/ 771:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\n\n\n    var easingFuncs = __webpack_require__(772);\n\n    function Clip(options) {\n\n        this._target = options.target;\n\n        // 生命周期\n        this._life = options.life || 1000;\n        // 延时\n        this._delay = options.delay || 0;\n        // 开始时间\n        // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n        this._initialized = false;\n\n        // 是否循环\n        this.loop = options.loop == null ? false : options.loop;\n\n        this.gap = options.gap || 0;\n\n        this.easing = options.easing || 'Linear';\n\n        this.onframe = options.onframe;\n        this.ondestroy = options.ondestroy;\n        this.onrestart = options.onrestart;\n\n        this._pausedTime = 0;\n        this._paused = false;\n    }\n\n    Clip.prototype = {\n\n        constructor: Clip,\n\n        step: function (globalTime, deltaTime) {\n            // Set startTime on first step, or _startTime may has milleseconds different between clips\n            // PENDING\n            if (!this._initialized) {\n                this._startTime = globalTime + this._delay;\n                this._initialized = true;\n            }\n\n            if (this._paused) {\n                this._pausedTime += deltaTime;\n                return;\n            }\n\n            var percent = (globalTime - this._startTime - this._pausedTime) / this._life;\n\n            // 还没开始\n            if (percent < 0) {\n                return;\n            }\n\n            percent = Math.min(percent, 1);\n\n            var easing = this.easing;\n            var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n            var schedule = typeof easingFunc === 'function'\n                ? easingFunc(percent)\n                : percent;\n\n            this.fire('frame', schedule);\n\n            // 结束\n            if (percent == 1) {\n                if (this.loop) {\n                    this.restart (globalTime);\n                    // 重新开始周期\n                    // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n                    return 'restart';\n                }\n\n                // 动画完成将这个控制器标识为待删除\n                // 在Animation.update中进行批量删除\n                this._needsRemove = true;\n                return 'destroy';\n            }\n\n            return null;\n        },\n\n        restart: function (globalTime) {\n            var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n            this._startTime = globalTime - remainder + this.gap;\n            this._pausedTime = 0;\n\n            this._needsRemove = false;\n        },\n\n        fire: function (eventType, arg) {\n            eventType = 'on' + eventType;\n            if (this[eventType]) {\n                this[eventType](this._target, arg);\n            }\n        },\n\n        pause: function () {\n            this._paused = true;\n        },\n\n        resume: function () {\n            this._paused = false;\n        }\n    };\n\n    module.exports = Clip;\n\n\n\n/***/ }),\n\n/***/ 772:\n/***/ (function(module, exports) {\n\n/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\n\n    var easing = {\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        linear: function (k) {\n            return k;\n        },\n\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticIn: function (k) {\n            return k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticOut: function (k) {\n            return k * (2 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k;\n            }\n            return -0.5 * (--k * (k - 2) - 1);\n        },\n\n        // 三次方的缓动（t^3）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicIn: function (k) {\n            return k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicOut: function (k) {\n            return --k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k + 2);\n        },\n\n        // 四次方的缓动（t^4）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticIn: function (k) {\n            return k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticOut: function (k) {\n            return 1 - (--k * k * k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k;\n            }\n            return -0.5 * ((k -= 2) * k * k * k - 2);\n        },\n\n        // 五次方的缓动（t^5）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticIn: function (k) {\n            return k * k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticOut: function (k) {\n            return --k * k * k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k * k * k + 2);\n        },\n\n        // 正弦曲线的缓动（sin(t)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalIn: function (k) {\n            return 1 - Math.cos(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalOut: function (k) {\n            return Math.sin(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalInOut: function (k) {\n            return 0.5 * (1 - Math.cos(Math.PI * k));\n        },\n\n        // 指数曲线的缓动（2^t）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialIn: function (k) {\n            return k === 0 ? 0 : Math.pow(1024, k - 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialOut: function (k) {\n            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialInOut: function (k) {\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if ((k *= 2) < 1) {\n                return 0.5 * Math.pow(1024, k - 1);\n            }\n            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n        },\n\n        // 圆形曲线的缓动（sqrt(1-t^2)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularIn: function (k) {\n            return 1 - Math.sqrt(1 - k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularOut: function (k) {\n            return Math.sqrt(1 - (--k * k));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - k * k) - 1);\n            }\n            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n        },\n\n        // 创建类似于弹簧在停止前来回振荡的动画\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticIn: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return -(a * Math.pow(2, 10 * (k -= 1)) *\n                        Math.sin((k - s) * (2 * Math.PI) / p));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return (a * Math.pow(2, -10 * k) *\n                    Math.sin((k - s) * (2 * Math.PI) / p) + 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticInOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            if ((k *= 2) < 1) {\n                return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p));\n            }\n            return a * Math.pow(2, -10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\n        },\n\n        // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backIn: function (k) {\n            var s = 1.70158;\n            return k * k * ((s + 1) * k - s);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backOut: function (k) {\n            var s = 1.70158;\n            return --k * k * ((s + 1) * k + s) + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backInOut: function (k) {\n            var s = 1.70158 * 1.525;\n            if ((k *= 2) < 1) {\n                return 0.5 * (k * k * ((s + 1) * k - s));\n            }\n            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n        },\n\n        // 创建弹跳效果\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceIn: function (k) {\n            return 1 - easing.bounceOut(1 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceOut: function (k) {\n            if (k < (1 / 2.75)) {\n                return 7.5625 * k * k;\n            }\n            else if (k < (2 / 2.75)) {\n                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n            }\n            else if (k < (2.5 / 2.75)) {\n                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n            }\n            else {\n                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n            }\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceInOut: function (k) {\n            if (k < 0.5) {\n                return easing.bounceIn(k * 2) * 0.5;\n            }\n            return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n        }\n    };\n\n    module.exports = easing;\n\n\n\n\n/***/ }),\n\n/***/ 773:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var normalizeRadian = __webpack_require__(670).normalizeRadian;\n    var PI2 = Math.PI * 2;\n\n    module.exports = {\n        /**\n         * 圆弧描边包含判断\n         * @param  {number}  cx\n         * @param  {number}  cy\n         * @param  {number}  r\n         * @param  {number}  startAngle\n         * @param  {number}  endAngle\n         * @param  {boolean}  anticlockwise\n         * @param  {number} lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {Boolean}\n         */\n        containStroke: function (\n            cx, cy, r, startAngle, endAngle, anticlockwise,\n            lineWidth, x, y\n        ) {\n\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n\n            x -= cx;\n            y -= cy;\n            var d = Math.sqrt(x * x + y * y);\n\n            if ((d - _l > r) || (d + _l < r)) {\n                return false;\n            }\n            if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n                // Is a circle\n                return true;\n            }\n            if (anticlockwise) {\n                var tmp = startAngle;\n                startAngle = normalizeRadian(endAngle);\n                endAngle = normalizeRadian(tmp);\n            } else {\n                startAngle = normalizeRadian(startAngle);\n                endAngle = normalizeRadian(endAngle);\n            }\n            if (startAngle > endAngle) {\n                endAngle += PI2;\n            }\n\n            var angle = Math.atan2(y, x);\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return (angle >= startAngle && angle <= endAngle)\n                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\n        }\n    };\n\n\n/***/ }),\n\n/***/ 774:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var curve = __webpack_require__(622);\n\n    module.exports = {\n        /**\n         * 三次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  x3\n         * @param  {number}  y3\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.cubicProjectPoint(\n                x0, y0, x1, y1, x2, y2, x3, y3,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 775:\n/***/ (function(module, exports) {\n\n\n    module.exports = {\n        /**\n         * 线段包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            var _a = 0;\n            var _b = x0;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l)\n                || (y < y0 - _l && y < y1 - _l)\n                || (x > x0 + _l && x > x1 + _l)\n                || (x < x0 - _l && x < x1 - _l)\n            ) {\n                return false;\n            }\n\n            if (x0 !== x1) {\n                _a = (y0 - y1) / (x0 - x1);\n                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\n            }\n            else {\n                return Math.abs(x - x0) <= _l / 2;\n            }\n            var tmp = _a * x - y + _b;\n            var _s = tmp * tmp / (_a * _a + 1);\n            return _s <= _l / 2 * _l / 2;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 776:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var CMD = __webpack_require__(635).CMD;\n    var line = __webpack_require__(775);\n    var cubic = __webpack_require__(774);\n    var quadratic = __webpack_require__(777);\n    var arc = __webpack_require__(773);\n    var normalizeRadian = __webpack_require__(670).normalizeRadian;\n    var curve = __webpack_require__(622);\n\n    var windingLine = __webpack_require__(778);\n\n    var containStroke = line.containStroke;\n\n    var PI2 = Math.PI * 2;\n\n    var EPSILON = 1e-4;\n\n    function isAroundEqual(a, b) {\n        return Math.abs(a - b) < EPSILON;\n    }\n\n    // 临时数组\n    var roots = [-1, -1, -1];\n    var extrema = [-1, -1];\n\n    function swapExtrema() {\n        var tmp = extrema[0];\n        extrema[0] = extrema[1];\n        extrema[1] = tmp;\n    }\n\n    function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2 && y > y3)\n            || (y < y0 && y < y1 && y < y2 && y < y3)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var w = 0;\n            var nExtrema = -1;\n            var y0_, y1_;\n            for (var i = 0; i < nRoots; i++) {\n                var t = roots[i];\n\n                // Avoid winding error when intersection point is the connect point of two line of polygon\n                var unit = (t === 0 || t === 1) ? 0.5 : 1;\n\n                var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n                if (x_ < x) { // Quick reject\n                    continue;\n                }\n                if (nExtrema < 0) {\n                    nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n                    if (extrema[1] < extrema[0] && nExtrema > 1) {\n                        swapExtrema();\n                    }\n                    y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n                    if (nExtrema > 1) {\n                        y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n                    }\n                }\n                if (nExtrema == 2) {\n                    // 分成三段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else if (t < extrema[1]) {\n                        w += y1_ < y0_ ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y1_ ? unit : -unit;\n                    }\n                }\n                else {\n                    // 分成两段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y0_ ? unit : -unit;\n                    }\n                }\n            }\n            return w;\n        }\n    }\n\n    function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2)\n            || (y < y0 && y < y1 && y < y2)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var t = curve.quadraticExtremum(y0, y1, y2);\n            if (t >= 0 && t <= 1) {\n                var w = 0;\n                var y_ = curve.quadraticAt(y0, y1, y2, t);\n                for (var i = 0; i < nRoots; i++) {\n                    // Remove one endpoint.\n                    var unit = (roots[i] === 0 || roots[i] === 1) ? 0.5 : 1;\n\n                    var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n                    if (x_ < x) {   // Quick reject\n                        continue;\n                    }\n                    if (roots[i] < t) {\n                        w += y_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y2 < y_ ? unit : -unit;\n                    }\n                }\n                return w;\n            }\n            else {\n                // Remove one endpoint.\n                var unit = (roots[0] === 0 || roots[0] === 1) ? 0.5 : 1;\n\n                var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n                if (x_ < x) {   // Quick reject\n                    return 0;\n                }\n                return y2 < y0 ? unit : -unit;\n            }\n        }\n    }\n\n    // TODO\n    // Arc 旋转\n    function windingArc(\n        cx, cy, r, startAngle, endAngle, anticlockwise, x, y\n    ) {\n        y -= cy;\n        if (y > r || y < -r) {\n            return 0;\n        }\n        var tmp = Math.sqrt(r * r - y * y);\n        roots[0] = -tmp;\n        roots[1] = tmp;\n\n        var diff = Math.abs(startAngle - endAngle);\n        if (diff < 1e-4) {\n            return 0;\n        }\n        if (diff % PI2 < 1e-4) {\n            // Is a circle\n            startAngle = 0;\n            endAngle = PI2;\n            var dir = anticlockwise ? 1 : -1;\n            if (x >= roots[0] + cx && x <= roots[1] + cx) {\n                return dir;\n            } else {\n                return 0;\n            }\n        }\n\n        if (anticlockwise) {\n            var tmp = startAngle;\n            startAngle = normalizeRadian(endAngle);\n            endAngle = normalizeRadian(tmp);\n        }\n        else {\n            startAngle = normalizeRadian(startAngle);\n            endAngle = normalizeRadian(endAngle);\n        }\n        if (startAngle > endAngle) {\n            endAngle += PI2;\n        }\n\n        var w = 0;\n        for (var i = 0; i < 2; i++) {\n            var x_ = roots[i];\n            if (x_ + cx > x) {\n                var angle = Math.atan2(y, x_);\n                var dir = anticlockwise ? 1 : -1;\n                if (angle < 0) {\n                    angle = PI2 + angle;\n                }\n                if (\n                    (angle >= startAngle && angle <= endAngle)\n                    || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\n                ) {\n                    if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n                        dir = -dir;\n                    }\n                    w += dir;\n                }\n            }\n        }\n        return w;\n    }\n\n    function containPath(data, lineWidth, isStroke, x, y) {\n        var w = 0;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n\n        for (var i = 0; i < data.length;) {\n            var cmd = data[i++];\n            // Begin a new subpath\n            if (cmd === CMD.M && i > 1) {\n                // Close previous subpath\n                if (!isStroke) {\n                    w += windingLine(xi, yi, x0, y0, x, y);\n                }\n                // 如果被任何一个 subpath 包含\n                // if (w !== 0) {\n                //     return true;\n                // }\n            }\n\n            if (i == 1) {\n                // 如果第一个命令是 L, C, Q\n                // 则 previous point 同绘制命令的第一个 point\n                //\n                // 第一个命令为 Arc 的情况下会在后面特殊处理\n                xi = data[i];\n                yi = data[i + 1];\n\n                x0 = xi;\n                y0 = yi;\n            }\n\n            switch (cmd) {\n                case CMD.M:\n                    // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                    // 在 closePath 的时候使用\n                    x0 = data[i++];\n                    y0 = data[i++];\n                    xi = x0;\n                    yi = y0;\n                    break;\n                case CMD.L:\n                    if (isStroke) {\n                        if (containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n                        w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.C:\n                    if (isStroke) {\n                        if (cubic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingCubic(\n                            xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.Q:\n                    if (isStroke) {\n                        if (quadratic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingQuadratic(\n                            xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.A:\n                    // TODO Arc 判断的开销比较大\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var theta = data[i++];\n                    var dTheta = data[i++];\n                    // TODO Arc 旋转\n                    var psi = data[i++];\n                    var anticlockwise = 1 - data[i++];\n                    var x1 = Math.cos(theta) * rx + cx;\n                    var y1 = Math.sin(theta) * ry + cy;\n                    // 不是直接使用 arc 命令\n                    if (i > 1) {\n                        w += windingLine(xi, yi, x1, y1, x, y);\n                    }\n                    else {\n                        // 第一个命令起点还未定义\n                        x0 = x1;\n                        y0 = y1;\n                    }\n                    // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n                    var _x = (x - cx) * ry / rx + cx;\n                    if (isStroke) {\n                        if (arc.containStroke(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            lineWidth, _x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingArc(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            _x, y\n                        );\n                    }\n                    xi = Math.cos(theta + dTheta) * rx + cx;\n                    yi = Math.sin(theta + dTheta) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    var x1 = x0 + width;\n                    var y1 = y0 + height;\n                    if (isStroke) {\n                        if (containStroke(x0, y0, x1, y0, lineWidth, x, y)\n                          || containStroke(x1, y0, x1, y1, lineWidth, x, y)\n                          || containStroke(x1, y1, x0, y1, lineWidth, x, y)\n                          || containStroke(x0, y1, x0, y0, lineWidth, x, y)\n                        ) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // FIXME Clockwise ?\n                        w += windingLine(x1, y0, x1, y1, x, y);\n                        w += windingLine(x0, y1, x0, y0, x, y);\n                    }\n                    break;\n                case CMD.Z:\n                    if (isStroke) {\n                        if (containStroke(\n                            xi, yi, x0, y0, lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // Close a subpath\n                        w += windingLine(xi, yi, x0, y0, x, y);\n                        // 如果被任何一个 subpath 包含\n                        // FIXME subpaths may overlap\n                        // if (w !== 0) {\n                        //     return true;\n                        // }\n                    }\n                    xi = x0;\n                    yi = y0;\n                    break;\n            }\n        }\n        if (!isStroke && !isAroundEqual(yi, y0)) {\n            w += windingLine(xi, yi, x0, y0, x, y) || 0;\n        }\n        return w !== 0;\n    }\n\n    module.exports = {\n        contain: function (pathData, x, y) {\n            return containPath(pathData, 0, false, x, y);\n        },\n\n        containStroke: function (pathData, lineWidth, x, y) {\n            return containPath(pathData, lineWidth, true, x, y);\n        }\n    };\n\n\n/***/ }),\n\n/***/ 777:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var curve = __webpack_require__(622);\n\n    module.exports = {\n        /**\n         * 二次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.quadraticProjectPoint(\n                x0, y0, x1, y1, x2, y2,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 778:\n/***/ (function(module, exports) {\n\n\n    module.exports = function windingLine(x0, y0, x1, y1, x, y) {\n        if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\n            return 0;\n        }\n        // Ignore horizontal line\n        if (y1 === y0) {\n            return 0;\n        }\n        var dir = y1 < y0 ? 1 : -1;\n        var t = (y - y0) / (y1 - y0);\n\n        // Avoid winding error when intersection point is the connect point of two line of polygon\n        if (t === 1 || t === 0) {\n            dir = y1 < y0 ? 0.5 : -0.5;\n        }\n\n        var x_ = t * (x1 - x0) + x0;\n\n        return x_ > x ? dir : 0;\n    };\n\n\n/***/ }),\n\n/***/ 779:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Only implements needed gestures for mobile.\n */\n\n\n    var eventUtil = __webpack_require__(625);\n\n    var GestureMgr = function () {\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._track = [];\n    };\n\n    GestureMgr.prototype = {\n\n        constructor: GestureMgr,\n\n        recognize: function (event, target, root) {\n            this._doTrack(event, target, root);\n            return this._recognize(event);\n        },\n\n        clear: function () {\n            this._track.length = 0;\n            return this;\n        },\n\n        _doTrack: function (event, target, root) {\n            var touches = event.touches;\n\n            if (!touches) {\n                return;\n            }\n\n            var trackItem = {\n                points: [],\n                touches: [],\n                target: target,\n                event: event\n            };\n\n            for (var i = 0, len = touches.length; i < len; i++) {\n                var touch = touches[i];\n                var pos = eventUtil.clientToLocal(root, touch, {});\n                trackItem.points.push([pos.zrX, pos.zrY]);\n                trackItem.touches.push(touch);\n            }\n\n            this._track.push(trackItem);\n        },\n\n        _recognize: function (event) {\n            for (var eventName in recognizers) {\n                if (recognizers.hasOwnProperty(eventName)) {\n                    var gestureInfo = recognizers[eventName](this._track, event);\n                    if (gestureInfo) {\n                        return gestureInfo;\n                    }\n                }\n            }\n        }\n    };\n\n    function dist(pointPair) {\n        var dx = pointPair[1][0] - pointPair[0][0];\n        var dy = pointPair[1][1] - pointPair[0][1];\n\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    function center(pointPair) {\n        return [\n            (pointPair[0][0] + pointPair[1][0]) / 2,\n            (pointPair[0][1] + pointPair[1][1]) / 2\n        ];\n    }\n\n    var recognizers = {\n\n        pinch: function (track, event) {\n            var trackLen = track.length;\n\n            if (!trackLen) {\n                return;\n            }\n\n            var pinchEnd = (track[trackLen - 1] || {}).points;\n            var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n            if (pinchPre\n                && pinchPre.length > 1\n                && pinchEnd\n                && pinchEnd.length > 1\n            ) {\n                var pinchScale = dist(pinchEnd) / dist(pinchPre);\n                !isFinite(pinchScale) && (pinchScale = 1);\n\n                event.pinchScale = pinchScale;\n\n                var pinchCenter = center(pinchEnd);\n                event.pinchX = pinchCenter[0];\n                event.pinchY = pinchCenter[1];\n\n                return {\n                    type: 'pinch',\n                    target: track[0].target,\n                    event: event\n                };\n            }\n        }\n\n        // Only pinch currently.\n    };\n\n    module.exports = GestureMgr;\n\n\n\n/***/ }),\n\n/***/ 780:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\n\n\n    var vec2 = __webpack_require__(611);\n    var curve = __webpack_require__(622);\n\n    var bbox = {};\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n\n    var start = vec2.create();\n    var end = vec2.create();\n    var extremity = vec2.create();\n\n    var PI2 = Math.PI * 2;\n    /**\n     * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n     * @module zrender/core/bbox\n     * @param {Array<Object>} points 顶点数组\n     * @param {number} min\n     * @param {number} max\n     */\n    bbox.fromPoints = function(points, min, max) {\n        if (points.length === 0) {\n            return;\n        }\n        var p = points[0];\n        var left = p[0];\n        var right = p[0];\n        var top = p[1];\n        var bottom = p[1];\n        var i;\n\n        for (i = 1; i < points.length; i++) {\n            p = points[i];\n            left = mathMin(left, p[0]);\n            right = mathMax(right, p[0]);\n            top = mathMin(top, p[1]);\n            bottom = mathMax(bottom, p[1]);\n        }\n\n        min[0] = left;\n        min[1] = top;\n        max[0] = right;\n        max[1] = bottom;\n    };\n\n    /**\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromLine = function (x0, y0, x1, y1, min, max) {\n        min[0] = mathMin(x0, x1);\n        min[1] = mathMin(y0, y1);\n        max[0] = mathMax(x0, x1);\n        max[1] = mathMax(y0, y1);\n    };\n\n    var xDim = [];\n    var yDim = [];\n    /**\n     * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromCubic = function(\n        x0, y0, x1, y1, x2, y2, x3, y3, min, max\n    ) {\n        var cubicExtrema = curve.cubicExtrema;\n        var cubicAt = curve.cubicAt;\n        var i;\n        var n = cubicExtrema(x0, x1, x2, x3, xDim);\n        min[0] = Infinity;\n        min[1] = Infinity;\n        max[0] = -Infinity;\n        max[1] = -Infinity;\n\n        for (i = 0; i < n; i++) {\n            var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n            min[0] = mathMin(x, min[0]);\n            max[0] = mathMax(x, max[0]);\n        }\n        n = cubicExtrema(y0, y1, y2, y3, yDim);\n        for (i = 0; i < n; i++) {\n            var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n            min[1] = mathMin(y, min[1]);\n            max[1] = mathMax(y, max[1]);\n        }\n\n        min[0] = mathMin(x0, min[0]);\n        max[0] = mathMax(x0, max[0]);\n        min[0] = mathMin(x3, min[0]);\n        max[0] = mathMax(x3, max[0]);\n\n        min[1] = mathMin(y0, min[1]);\n        max[1] = mathMax(y0, max[1]);\n        min[1] = mathMin(y3, min[1]);\n        max[1] = mathMax(y3, max[1]);\n    };\n\n    /**\n     * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromQuadratic = function(x0, y0, x1, y1, x2, y2, min, max) {\n        var quadraticExtremum = curve.quadraticExtremum;\n        var quadraticAt = curve.quadraticAt;\n        // Find extremities, where derivative in x dim or y dim is zero\n        var tx =\n            mathMax(\n                mathMin(quadraticExtremum(x0, x1, x2), 1), 0\n            );\n        var ty =\n            mathMax(\n                mathMin(quadraticExtremum(y0, y1, y2), 1), 0\n            );\n\n        var x = quadraticAt(x0, x1, x2, tx);\n        var y = quadraticAt(y0, y1, y2, ty);\n\n        min[0] = mathMin(x0, x2, x);\n        min[1] = mathMin(y0, y2, y);\n        max[0] = mathMax(x0, x2, x);\n        max[1] = mathMax(y0, y2, y);\n    };\n\n    /**\n     * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n     * @method\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x\n     * @param {number} y\n     * @param {number} rx\n     * @param {number} ry\n     * @param {number} startAngle\n     * @param {number} endAngle\n     * @param {number} anticlockwise\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromArc = function (\n        x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max\n    ) {\n        var vec2Min = vec2.min;\n        var vec2Max = vec2.max;\n\n        var diff = Math.abs(startAngle - endAngle);\n\n\n        if (diff % PI2 < 1e-4 && diff > 1e-4) {\n            // Is a circle\n            min[0] = x - rx;\n            min[1] = y - ry;\n            max[0] = x + rx;\n            max[1] = y + ry;\n            return;\n        }\n\n        start[0] = mathCos(startAngle) * rx + x;\n        start[1] = mathSin(startAngle) * ry + y;\n\n        end[0] = mathCos(endAngle) * rx + x;\n        end[1] = mathSin(endAngle) * ry + y;\n\n        vec2Min(min, start, end);\n        vec2Max(max, start, end);\n\n        // Thresh to [0, Math.PI * 2]\n        startAngle = startAngle % (PI2);\n        if (startAngle < 0) {\n            startAngle = startAngle + PI2;\n        }\n        endAngle = endAngle % (PI2);\n        if (endAngle < 0) {\n            endAngle = endAngle + PI2;\n        }\n\n        if (startAngle > endAngle && !anticlockwise) {\n            endAngle += PI2;\n        }\n        else if (startAngle < endAngle && anticlockwise) {\n            startAngle += PI2;\n        }\n        if (anticlockwise) {\n            var tmp = endAngle;\n            endAngle = startAngle;\n            startAngle = tmp;\n        }\n\n        // var number = 0;\n        // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n        for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n            if (angle > startAngle) {\n                extremity[0] = mathCos(angle) * rx + x;\n                extremity[1] = mathSin(angle) * ry + y;\n\n                vec2Min(min, extremity, min);\n                vec2Max(max, extremity, max);\n            }\n        }\n    };\n\n    module.exports = bbox;\n\n\n\n/***/ }),\n\n/***/ 781:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var eventTool = __webpack_require__(625);\n    var zrUtil = __webpack_require__(606);\n    var Eventful = __webpack_require__(626);\n    var env = __webpack_require__(615);\n    var GestureMgr = __webpack_require__(779);\n\n    var addEventListener = eventTool.addEventListener;\n    var removeEventListener = eventTool.removeEventListener;\n    var normalizeEvent = eventTool.normalizeEvent;\n\n    var TOUCH_CLICK_DELAY = 300;\n\n    var mouseHandlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n\n    var touchHandlerNames = [\n        'touchstart', 'touchend', 'touchmove'\n    ];\n\n    var pointerEventNames = {\n        pointerdown: 1, pointerup: 1, pointermove: 1, pointerout: 1\n    };\n\n    var pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n        var nm = name.replace('mouse', 'pointer');\n        return pointerEventNames[nm] ? nm : name;\n    });\n\n    function eventNameFix(name) {\n        return (name === 'mousewheel' && env.browser.firefox) ? 'DOMMouseScroll' : name;\n    }\n\n    function processGesture(proxy, event, stage) {\n        var gestureMgr = proxy._gestureMgr;\n\n        stage === 'start' && gestureMgr.clear();\n\n        var gestureInfo = gestureMgr.recognize(\n            event,\n            proxy.handler.findHover(event.zrX, event.zrY, null).target,\n            proxy.dom\n        );\n\n        stage === 'end' && gestureMgr.clear();\n\n        // Do not do any preventDefault here. Upper application do that if necessary.\n        if (gestureInfo) {\n            var type = gestureInfo.type;\n            event.gestureEvent = type;\n\n            proxy.handler.dispatchToElement({target: gestureInfo.target}, type, gestureInfo.event);\n        }\n    }\n\n    // function onMSGestureChange(proxy, event) {\n    //     if (event.translationX || event.translationY) {\n    //         // mousemove is carried by MSGesture to reduce the sensitivity.\n    //         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n    //     }\n    //     if (event.scale !== 1) {\n    //         event.pinchX = event.offsetX;\n    //         event.pinchY = event.offsetY;\n    //         event.pinchScale = event.scale;\n    //         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n    //     }\n    // }\n\n    /**\n     * Prevent mouse event from being dispatched after Touch Events action\n     * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n     * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n     * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n     * Result: Blocking Mouse Events for 700ms.\n     */\n    function setTouchTimer(instance) {\n        instance._touching = true;\n        clearTimeout(instance._touchTimer);\n        instance._touchTimer = setTimeout(function () {\n            instance._touching = false;\n        }, 700);\n    }\n\n\n    var domHandlers = {\n        /**\n         * Mouse move handler\n         * @inner\n         * @param {Event} event\n         */\n        mousemove: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            this.trigger('mousemove', event);\n        },\n\n        /**\n         * Mouse out handler\n         * @inner\n         * @param {Event} event\n         */\n        mouseout: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            var element = event.toElement || event.relatedTarget;\n            if (element != this.dom) {\n                while (element && element.nodeType != 9) {\n                    // 忽略包含在root中的dom引起的mouseOut\n                    if (element === this.dom) {\n                        return;\n                    }\n\n                    element = element.parentNode;\n                }\n            }\n\n            this.trigger('mouseout', event);\n        },\n\n        /**\n         * Touch开始响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchstart: function (event) {\n            // Default mouse behaviour should not be disabled here.\n            // For example, page may needs to be slided.\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            this._lastTouchMoment = new Date();\n\n            processGesture(this, event, 'start');\n\n            // In touch device, trigger `mousemove`(`mouseover`) should\n            // be triggered, and must before `mousedown` triggered.\n            domHandlers.mousemove.call(this, event);\n\n            domHandlers.mousedown.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch移动响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchmove: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'change');\n\n            // Mouse move should always be triggered no matter whether\n            // there is gestrue event, because mouse move and pinch may\n            // be used at the same time.\n            domHandlers.mousemove.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch结束响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchend: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'end');\n\n            domHandlers.mouseup.call(this, event);\n\n            // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n            // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n            // we can conveniently implement \"hover style\" in both PC and touch device just\n            // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n            // to remove \"hover style\" on an element, without any additional code for\n            // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n            // style\" will remain for user view)\n\n            // click event should always be triggered no matter whether\n            // there is gestrue event. System click can not be prevented.\n            if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n                domHandlers.click.call(this, event);\n            }\n\n            setTouchTimer(this);\n        },\n\n        pointerdown: function (event) {\n            domHandlers.mousedown.call(this, event);\n\n            // if (useMSGuesture(this, event)) {\n            //     this._msGesture.addPointer(event.pointerId);\n            // }\n        },\n\n        pointermove: function (event) {\n            // FIXME\n            // pointermove is so sensitive that it always triggered when\n            // tap(click) on touch screen, which affect some judgement in\n            // upper application. So, we dont support mousemove on MS touch\n            // device yet.\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mousemove.call(this, event);\n            }\n        },\n\n        pointerup: function (event) {\n            domHandlers.mouseup.call(this, event);\n        },\n\n        pointerout: function (event) {\n            // pointerout will be triggered when tap on touch screen\n            // (IE11+/Edge on MS Surface) after click event triggered,\n            // which is inconsistent with the mousout behavior we defined\n            // in touchend. So we unify them.\n            // (check domHandlers.touchend for detailed explanation)\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mouseout.call(this, event);\n            }\n        }\n    };\n\n    function isPointerFromTouch(event) {\n        var pointerType = event.pointerType;\n        return pointerType === 'pen' || pointerType === 'touch';\n    }\n\n    // function useMSGuesture(handlerProxy, event) {\n    //     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n    // }\n\n    // Common handlers\n    zrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        domHandlers[name] = function (event) {\n            event = normalizeEvent(this.dom, event);\n            this.trigger(name, event);\n        };\n    });\n\n    /**\n     * 为控制类实例初始化dom 事件处理函数\n     *\n     * @inner\n     * @param {module:zrender/Handler} instance 控制类实例\n     */\n    function initDomHandler(instance) {\n        zrUtil.each(touchHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(pointerHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(mouseHandlerNames, function (name) {\n            instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n        });\n\n        function makeMouseHandler(fn, instance) {\n            return function () {\n                if (instance._touching) {\n                    return;\n                }\n                return fn.apply(instance, arguments);\n            };\n        }\n    }\n\n\n    function HandlerDomProxy(dom) {\n        Eventful.call(this);\n\n        this.dom = dom;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._touching = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._touchTimer;\n\n        /**\n         * @private\n         * @type {module:zrender/core/GestureMgr}\n         */\n        this._gestureMgr = new GestureMgr();\n\n        this._handlers = {};\n\n        initDomHandler(this);\n\n        if (env.pointerEventsSupported) { // Only IE11+/Edge\n            // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n            // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n            // at the same time.\n            // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n            // screen, which do not occurs in pointer event.\n            // So we use pointer event to both detect touch gesture and mouse behavior.\n            mountHandlers(pointerHandlerNames, this);\n\n            // FIXME\n            // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n            // which does not prevent defuault behavior occasionally (which may cause view port\n            // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n            // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n            // touch screen. And we only support click behavior on MS touch screen now.\n\n            // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n            // We dont support touch on IE on win7.\n            // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n            // if (typeof MSGesture === 'function') {\n            //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n            //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n            // }\n        }\n        else {\n            if (env.touchEventsSupported) {\n                mountHandlers(touchHandlerNames, this);\n                // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n                // addEventListener(root, 'mouseout', this._mouseoutHandler);\n            }\n\n            // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n            // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n            // mouse event can not be handle in those devices.\n            // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n            // mouseevent after touch event triggered, see `setTouchTimer`.\n            mountHandlers(mouseHandlerNames, this);\n        }\n\n        function mountHandlers(handlerNames, instance) {\n            zrUtil.each(handlerNames, function (name) {\n                addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n            }, instance);\n        }\n    }\n\n    var handlerDomProxyProto = HandlerDomProxy.prototype;\n    handlerDomProxyProto.dispose = function () {\n        var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n        for (var i = 0; i < handlerNames.length; i++) {\n            var name = handlerNames[i];\n            removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n        }\n    };\n\n    handlerDomProxyProto.setCursor = function (cursorStyle) {\n        this.dom.style.cursor = cursorStyle || 'default';\n    };\n\n    zrUtil.mixin(HandlerDomProxy, Eventful);\n\n    module.exports = HandlerDomProxy;\n\n\n/***/ }),\n\n/***/ 782:\n/***/ (function(module, exports, __webpack_require__) {\n\n// CompoundPath to improve performance\n\n\n    var Path = __webpack_require__(612);\n\n    module.exports = Path.extend({\n\n        type: 'compound',\n\n        shape: {\n\n            paths: null\n        },\n\n        _updatePathDirty: function () {\n            var dirtyPath = this.__dirtyPath;\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                // Mark as dirty if any subpath is dirty\n                dirtyPath = dirtyPath || paths[i].__dirtyPath;\n            }\n            this.__dirtyPath = dirtyPath;\n            this.__dirty = this.__dirty || dirtyPath;\n        },\n\n        beforeBrush: function () {\n            this._updatePathDirty();\n            var paths = this.shape.paths || [];\n            var scale = this.getGlobalScale();\n            // Update path scale\n            for (var i = 0; i < paths.length; i++) {\n                if (!paths[i].path) {\n                    paths[i].createPathProxy();\n                }\n                paths[i].path.setScale(scale[0], scale[1]);\n            }\n        },\n\n        buildPath: function (ctx, shape) {\n            var paths = shape.paths || [];\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].buildPath(ctx, paths[i].shape, true);\n            }\n        },\n\n        afterBrush: function () {\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].__dirtyPath = false;\n            }\n        },\n\n        getBoundingRect: function () {\n            this._updatePathDirty();\n            return Path.prototype.getBoundingRect.call(this);\n        }\n    });\n\n\n/***/ }),\n\n/***/ 783:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(606);\n\n    var Gradient = __webpack_require__(645);\n\n    /**\n     * x, y, x2, y2 are all percent from 0 to 1\n     * @param {number} [x=0]\n     * @param {number} [y=0]\n     * @param {number} [x2=1]\n     * @param {number} [y2=0]\n     * @param {Array.<Object>} colorStops\n     * @param {boolean} [globalCoord=false]\n     */\n    var LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'linear', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0 : x;\n\n        this.y = y == null ? 0 : y;\n\n        this.x2 = x2 == null ? 1 : x2;\n\n        this.y2 = y2 == null ? 0 : y2;\n\n        // Can be cloned\n        this.type = 'linear';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    LinearGradient.prototype = {\n\n        constructor: LinearGradient\n    };\n\n    zrUtil.inherits(LinearGradient, Gradient);\n\n    module.exports = LinearGradient;\n\n\n/***/ }),\n\n/***/ 784:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(606);\n\n    var Gradient = __webpack_require__(645);\n\n    /**\n     * x, y, r are all percent from 0 to 1\n     * @param {number} [x=0.5]\n     * @param {number} [y=0.5]\n     * @param {number} [r=0.5]\n     * @param {Array.<Object>} [colorStops]\n     * @param {boolean} [globalCoord=false]\n     */\n    var RadialGradient = function (x, y, r, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'radial', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0.5 : x;\n\n        this.y = y == null ? 0.5 : y;\n\n        this.r = r == null ? 0.5 : r;\n\n        // Can be cloned\n        this.type = 'radial';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    RadialGradient.prototype = {\n\n        constructor: RadialGradient\n    };\n\n    zrUtil.inherits(RadialGradient, Gradient);\n\n    module.exports = RadialGradient;\n\n\n/***/ }),\n\n/***/ 785:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Text element\n * @module zrender/graphic/Text\n *\n * TODO Wrapping\n *\n * Text not support gradient\n */\n\n\n\n    var Displayable = __webpack_require__(644);\n    var zrUtil = __webpack_require__(606);\n    var textContain = __webpack_require__(621);\n    var textHelper = __webpack_require__(647);\n\n    /**\n     * @alias zrender/graphic/Text\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    var Text = function (opts) {\n        Displayable.call(this, opts);\n    };\n\n    Text.prototype = {\n\n        constructor: Text,\n\n        type: 'text',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n\n            // Optimize, avoid normalize every time.\n            this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n            // Use props with prefix 'text'.\n            style.fill = style.stroke = style.shadowBlur = style.shadowColor =\n                style.shadowOffsetX = style.shadowOffsetY = null;\n\n            var text = style.text;\n            // Convert to string\n            text != null && (text += '');\n\n            // Always bind style\n            style.bind(ctx, this, prevEl);\n\n            if (!textHelper.needDrawText(text, style)) {\n                return;\n            }\n\n            this.setTransform(ctx);\n\n            textHelper.renderText(this, ctx, text, style);\n\n            this.restoreTransform(ctx);\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n\n            // Optimize, avoid normalize every time.\n            this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n            if (!this._rect) {\n                var text = style.text;\n                text != null ? (text += '') : (text = '');\n\n                var rect = textContain.getBoundingRect(\n                    style.text + '',\n                    style.font,\n                    style.textAlign,\n                    style.textVerticalAlign,\n                    style.textPadding,\n                    style.rich\n                );\n\n                rect.x += style.x || 0;\n                rect.y += style.y || 0;\n\n                if (textHelper.getStroke(style.textStroke, style.textLineWidth)) {\n                    var w = style.textLineWidth;\n                    rect.x -= w / 2;\n                    rect.y -= w / 2;\n                    rect.width += w;\n                    rect.height += w;\n                }\n\n                this._rect = rect;\n            }\n\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(Text, Displayable);\n\n    module.exports = Text;\n\n\n/***/ }),\n\n/***/ 786:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n\n    var vec2 = __webpack_require__(611);\n    var v2Min = vec2.min;\n    var v2Max = vec2.max;\n    var v2Scale = vec2.scale;\n    var v2Distance = vec2.distance;\n    var v2Add = vec2.add;\n\n    /**\n     * 贝塞尔平滑曲线\n     * @alias module:zrender/shape/util/smoothBezier\n     * @param {Array} points 线段顶点数组\n     * @param {number} smooth 平滑等级, 0-1\n     * @param {boolean} isLoop\n     * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n     *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n     *                           整个折线的包围盒做一个并集用来约束控制点。\n     * @param {Array} 计算出来的控制点数组\n     */\n    module.exports = function (points, smooth, isLoop, constraint) {\n        var cps = [];\n\n        var v = [];\n        var v1 = [];\n        var v2 = [];\n        var prevPoint;\n        var nextPoint;\n\n        var min, max;\n        if (constraint) {\n            min = [Infinity, Infinity];\n            max = [-Infinity, -Infinity];\n            for (var i = 0, len = points.length; i < len; i++) {\n                v2Min(min, min, points[i]);\n                v2Max(max, max, points[i]);\n            }\n            // 与指定的包围盒做并集\n            v2Min(min, min, constraint[0]);\n            v2Max(max, max, constraint[1]);\n        }\n\n        for (var i = 0, len = points.length; i < len; i++) {\n            var point = points[i];\n\n            if (isLoop) {\n                prevPoint = points[i ? i - 1 : len - 1];\n                nextPoint = points[(i + 1) % len];\n            }\n            else {\n                if (i === 0 || i === len - 1) {\n                    cps.push(vec2.clone(points[i]));\n                    continue;\n                }\n                else {\n                    prevPoint = points[i - 1];\n                    nextPoint = points[i + 1];\n                }\n            }\n\n            vec2.sub(v, nextPoint, prevPoint);\n\n            // use degree to scale the handle length\n            v2Scale(v, v, smooth);\n\n            var d0 = v2Distance(point, prevPoint);\n            var d1 = v2Distance(point, nextPoint);\n            var sum = d0 + d1;\n            if (sum !== 0) {\n                d0 /= sum;\n                d1 /= sum;\n            }\n\n            v2Scale(v1, v, -d0);\n            v2Scale(v2, v, d1);\n            var cp0 = v2Add([], point, v1);\n            var cp1 = v2Add([], point, v2);\n            if (constraint) {\n                v2Max(cp0, cp0, min);\n                v2Min(cp0, cp0, max);\n                v2Max(cp1, cp1, min);\n                v2Min(cp1, cp1, max);\n            }\n            cps.push(cp0);\n            cps.push(cp1);\n        }\n\n        if (isLoop) {\n            cps.push(cps.shift());\n        }\n\n        return cps;\n    };\n\n\n\n/***/ }),\n\n/***/ 787:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n    var vec2 = __webpack_require__(611);\n\n    /**\n     * @inner\n     */\n    function interpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    /**\n     * @alias module:zrender/shape/util/smoothSpline\n     * @param {Array} points 线段顶点数组\n     * @param {boolean} isLoop\n     * @return {Array}\n     */\n    module.exports = function (points, isLoop) {\n        var len = points.length;\n        var ret = [];\n\n        var distance = 0;\n        for (var i = 1; i < len; i++) {\n            distance += vec2.distance(points[i - 1], points[i]);\n        }\n\n        var segs = distance / 2;\n        segs = segs < len ? len : segs;\n        for (var i = 0; i < segs; i++) {\n            var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n            var idx = Math.floor(pos);\n\n            var w = pos - idx;\n\n            var p0;\n            var p1 = points[idx % len];\n            var p2;\n            var p3;\n            if (!isLoop) {\n                p0 = points[idx === 0 ? idx : idx - 1];\n                p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n                p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n            }\n            else {\n                p0 = points[(idx - 1 + len) % len];\n                p2 = points[(idx + 1) % len];\n                p3 = points[(idx + 2) % len];\n            }\n\n            var w2 = w * w;\n            var w3 = w * w2;\n\n            ret.push([\n                interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\n                interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\n            ]);\n        }\n        return ret;\n    };\n\n\n\n/***/ }),\n\n/***/ 788:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\n\n\n\n    var textHelper = __webpack_require__(647);\n    var BoundingRect = __webpack_require__(617);\n\n    var tmpRect = new BoundingRect();\n\n    var RectText = function () {};\n\n    RectText.prototype = {\n\n        constructor: RectText,\n\n        /**\n         * Draw text in a rect with specified position.\n         * @param  {CanvasRenderingContext2D} ctx\n         * @param  {Object} rect Displayable rect\n         */\n        drawRectText: function (ctx, rect) {\n            var style = this.style;\n\n            rect = style.textRect || rect;\n\n            // Optimize, avoid normalize every time.\n            this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n            var text = style.text;\n\n            // Convert to string\n            text != null && (text += '');\n\n            if (!textHelper.needDrawText(text, style)) {\n                return;\n            }\n\n            // FIXME\n            ctx.save();\n\n            // Transform rect to view space\n            var transform = this.transform;\n            if (!style.transformText) {\n                if (transform) {\n                    tmpRect.copy(rect);\n                    tmpRect.applyTransform(transform);\n                    rect = tmpRect;\n                }\n            }\n            else {\n                this.setTransform(ctx);\n            }\n\n            // transformText and textRotation can not be used at the same time.\n            textHelper.renderText(this, ctx, text, style, rect);\n\n            ctx.restore();\n        }\n    };\n\n    module.exports = RectText;\n\n\n/***/ }),\n\n/***/ 789:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\n \n\n    module.exports = __webpack_require__(612).extend({\n\n        type: 'arc',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        style: {\n\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r + x, unitY * r + y);\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n        }\n    });\n\n\n/***/ }),\n\n/***/ 790:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\n\n\n    var curveTool = __webpack_require__(622);\n    var vec2 = __webpack_require__(611);\n    var quadraticSubdivide = curveTool.quadraticSubdivide;\n    var cubicSubdivide = curveTool.cubicSubdivide;\n    var quadraticAt = curveTool.quadraticAt;\n    var cubicAt = curveTool.cubicAt;\n    var quadraticDerivativeAt = curveTool.quadraticDerivativeAt;\n    var cubicDerivativeAt = curveTool.cubicDerivativeAt;\n\n    var out = [];\n\n    function someVectorAt(shape, t, isTangent) {\n        var cpx2 = shape.cpx2;\n        var cpy2 = shape.cpy2;\n        if (cpx2 === null || cpy2 === null) {\n            return [\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t),\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)\n            ];\n        }\n        else {\n            return [\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t),\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)\n            ];\n        }\n    }\n    module.exports = __webpack_require__(612).extend({\n\n        type: 'bezier-curve',\n\n        shape: {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n            cpx1: 0,\n            cpy1: 0,\n            // cpx2: 0,\n            // cpy2: 0\n\n            // Curve show percent, for animating\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var cpx1 = shape.cpx1;\n            var cpy1 = shape.cpy1;\n            var cpx2 = shape.cpx2;\n            var cpy2 = shape.cpy2;\n            var percent = shape.percent;\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (cpx2 == null || cpy2 == null) {\n                if (percent < 1) {\n                    quadraticSubdivide(\n                        x1, cpx1, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    x2 = out[2];\n                    quadraticSubdivide(\n                        y1, cpy1, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    y2 = out[2];\n                }\n\n                ctx.quadraticCurveTo(\n                    cpx1, cpy1,\n                    x2, y2\n                );\n            }\n            else {\n                if (percent < 1) {\n                    cubicSubdivide(\n                        x1, cpx1, cpx2, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    cpx2 = out[2];\n                    x2 = out[3];\n                    cubicSubdivide(\n                        y1, cpy1, cpy2, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    cpy2 = out[2];\n                    y2 = out[3];\n                }\n                ctx.bezierCurveTo(\n                    cpx1, cpy1,\n                    cpx2, cpy2,\n                    x2, y2\n                );\n            }\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        pointAt: function (t) {\n            return someVectorAt(this.shape, t, false);\n        },\n\n        /**\n         * Get tangent at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        tangentAt: function (t) {\n            var p = someVectorAt(this.shape, t, true);\n            return vec2.normalize(p, p);\n        }\n    });\n\n\n\n/***/ }),\n\n/***/ 791:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\n\n\n\n    module.exports = __webpack_require__(612).extend({\n\n        type: 'circle',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0\n        },\n\n\n        buildPath : function (ctx, shape, inBundle) {\n            // Better stroking in ShapeBundle\n            // Always do it may have performence issue ( fill may be 2x more cost)\n            if (inBundle) {\n                ctx.moveTo(shape.cx + shape.r, shape.cy);\n            }\n            // else {\n            //     if (ctx.allocate && !ctx.data.length) {\n            //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n            //     }\n            // }\n            // Better stroking in ShapeBundle\n            // ctx.moveTo(shape.cx + shape.r, shape.cy);\n            ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n        }\n    });\n\n\n\n/***/ }),\n\n/***/ 792:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\n\n    module.exports = __webpack_require__(612).extend({\n\n        type: 'line',\n\n        shape: {\n            // Start point\n            x1: 0,\n            y1: 0,\n            // End point\n            x2: 0,\n            y2: 0,\n\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var percent = shape.percent;\n\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (percent < 1) {\n                x2 = x1 * (1 - percent) + x2 * percent;\n                y2 = y1 * (1 - percent) + y2 * percent;\n            }\n            ctx.lineTo(x2, y2);\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} percent\n         * @return {Array.<number>}\n         */\n        pointAt: function (p) {\n            var shape = this.shape;\n            return [\n                shape.x1 * (1 - p) + shape.x2 * p,\n                shape.y1 * (1 - p) + shape.y2 * p\n            ];\n        }\n    });\n\n\n\n/***/ }),\n\n/***/ 793:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\n\n\n    var polyHelper = __webpack_require__(678);\n\n    module.exports = __webpack_require__(612).extend({\n        \n        type: 'polygon',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, true);\n        }\n    });\n\n\n/***/ }),\n\n/***/ 794:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\n\n\n    var polyHelper = __webpack_require__(678);\n\n    module.exports = __webpack_require__(612).extend({\n        \n        type: 'polyline',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        style: {\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, false);\n        }\n    });\n\n\n/***/ }),\n\n/***/ 795:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\n\n\n    var roundRectHelper = __webpack_require__(679);\n\n    module.exports = __webpack_require__(612).extend({\n\n        type: 'rect',\n\n        shape: {\n            // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n            // r缩写为1         相当于 [1, 1, 1, 1]\n            // r缩写为[1]       相当于 [1, 1, 1, 1]\n            // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n            // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n            r: 0,\n\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            if (!shape.r) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, shape);\n            }\n            ctx.closePath();\n            return;\n        }\n    });\n\n\n\n/***/ }),\n\n/***/ 796:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\n\n\n    module.exports = __webpack_require__(612).extend({\n\n        type: 'ring',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0,\n            r0: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.cx;\n            var y = shape.cy;\n            var PI2 = Math.PI * 2;\n            ctx.moveTo(x + shape.r, y);\n            ctx.arc(x, y, shape.r, 0, PI2, false);\n            ctx.moveTo(x + shape.r0, y);\n            ctx.arc(x, y, shape.r0, 0, PI2, true);\n        }\n    });\n\n\n\n/***/ }),\n\n/***/ 797:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\n\n\n\n    var Path = __webpack_require__(612);\n    var fixClipWithShadow = __webpack_require__(677);\n\n    module.exports = Path.extend({\n\n        type: 'sector',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r0: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        brush: fixClipWithShadow(Path.prototype.brush),\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r0 = Math.max(shape.r0 || 0, 0);\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n\n            ctx.lineTo(unitX * r + x, unitY * r + y);\n\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n\n            ctx.lineTo(\n                Math.cos(endAngle) * r0 + x,\n                Math.sin(endAngle) * r0 + y\n            );\n\n            if (r0 !== 0) {\n                ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n            }\n\n            ctx.closePath();\n        }\n    });\n\n\n\n/***/ }),\n\n/***/ 798:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module zrender/mixin/Animatable\n */\n\n\n    var Animator = __webpack_require__(668);\n    var util = __webpack_require__(606);\n    var isString = util.isString;\n    var isFunction = util.isFunction;\n    var isObject = util.isObject;\n    var log = __webpack_require__(673);\n\n    /**\n     * @alias modue:zrender/mixin/Animatable\n     * @constructor\n     */\n    var Animatable = function () {\n\n        /**\n         * @type {Array.<module:zrender/animation/Animator>}\n         * @readOnly\n         */\n        this.animators = [];\n    };\n\n    Animatable.prototype = {\n\n        constructor: Animatable,\n\n        /**\n         * 动画\n         *\n         * @param {string} path The path to fetch value from object, like 'a.b.c'.\n         * @param {boolean} [loop] Whether to loop animation.\n         * @return {module:zrender/animation/Animator}\n         * @example:\n         *     el.animate('style', false)\n         *         .when(1000, {x: 10} )\n         *         .done(function(){ // Animation done })\n         *         .start()\n         */\n        animate: function (path, loop) {\n            var target;\n            var animatingShape = false;\n            var el = this;\n            var zr = this.__zr;\n            if (path) {\n                var pathSplitted = path.split('.');\n                var prop = el;\n                // If animating shape\n                animatingShape = pathSplitted[0] === 'shape';\n                for (var i = 0, l = pathSplitted.length; i < l; i++) {\n                    if (!prop) {\n                        continue;\n                    }\n                    prop = prop[pathSplitted[i]];\n                }\n                if (prop) {\n                    target = prop;\n                }\n            }\n            else {\n                target = el;\n            }\n\n            if (!target) {\n                log(\n                    'Property \"'\n                    + path\n                    + '\" is not existed in element '\n                    + el.id\n                );\n                return;\n            }\n\n            var animators = el.animators;\n\n            var animator = new Animator(target, loop);\n\n            animator.during(function (target) {\n                el.dirty(animatingShape);\n            })\n            .done(function () {\n                // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n                animators.splice(util.indexOf(animators, animator), 1);\n            });\n\n            animators.push(animator);\n\n            // If animate after added to the zrender\n            if (zr) {\n                zr.animation.addAnimator(animator);\n            }\n\n            return animator;\n        },\n\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stopAnimation: function (forwardToLast) {\n            var animators = this.animators;\n            var len = animators.length;\n            for (var i = 0; i < len; i++) {\n                animators[i].stop(forwardToLast);\n            }\n            animators.length = 0;\n\n            return this;\n        },\n\n        /**\n         * @param {Object} target\n         * @param {number} [time=500] Time in ms\n         * @param {string} [easing='linear']\n         * @param {number} [delay=0]\n         * @param {Function} [callback]\n         * @param {Function} [forceAnimate] Prevent stop animation and callback\n         *        immediently when target values are the same as current values.\n         *\n         * @example\n         *  // Animate position\n         *  el.animateTo({\n         *      position: [10, 10]\n         *  }, function () { // done })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n         *  el.animateTo({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100, 'cubicOut', function () { // done })\n         */\n         // TODO Return animation key\n        animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n            // animateTo(target, time, easing, callback);\n            if (isString(delay)) {\n                callback = easing;\n                easing = delay;\n                delay = 0;\n            }\n            // animateTo(target, time, delay, callback);\n            else if (isFunction(easing)) {\n                callback = easing;\n                easing = 'linear';\n                delay = 0;\n            }\n            // animateTo(target, time, callback);\n            else if (isFunction(delay)) {\n                callback = delay;\n                delay = 0;\n            }\n            // animateTo(target, callback)\n            else if (isFunction(time)) {\n                callback = time;\n                time = 500;\n            }\n            // animateTo(target)\n            else if (!time) {\n                time = 500;\n            }\n            // Stop all previous animations\n            this.stopAnimation();\n            this._animateToShallow('', this, target, time, delay, easing, callback);\n\n            // Animators may be removed immediately after start\n            // if there is nothing to animate\n            var animators = this.animators.slice();\n            var count = animators.length;\n            function done() {\n                count--;\n                if (!count) {\n                    callback && callback();\n                }\n            }\n\n            // No animators. This should be checked before animators[i].start(),\n            // because 'done' may be executed immediately if no need to animate.\n            if (!count) {\n                callback && callback();\n            }\n            // Start after all animators created\n            // Incase any animator is done immediately when all animation properties are not changed\n            for (var i = 0; i < animators.length; i++) {\n                animators[i]\n                    .done(done)\n                    .start(easing, forceAnimate);\n            }\n        },\n\n        /**\n         * @private\n         * @param {string} path=''\n         * @param {Object} source=this\n         * @param {Object} target\n         * @param {number} [time=500]\n         * @param {number} [delay=0]\n         *\n         * @example\n         *  // Animate position\n         *  el._animateToShallow({\n         *      position: [10, 10]\n         *  })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms\n         *  el._animateToShallow({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100)\n         */\n        _animateToShallow: function (path, source, target, time, delay) {\n            var objShallow = {};\n            var propertyCount = 0;\n            for (var name in target) {\n                if (!target.hasOwnProperty(name)) {\n                    continue;\n                }\n\n                if (source[name] != null) {\n                    if (isObject(target[name]) && !util.isArrayLike(target[name])) {\n                        this._animateToShallow(\n                            path ? path + '.' + name : name,\n                            source[name],\n                            target[name],\n                            time,\n                            delay\n                        );\n                    }\n                    else {\n                        objShallow[name] = target[name];\n                        propertyCount++;\n                    }\n                }\n                else if (target[name] != null) {\n                    // Attr directly if not has property\n                    // FIXME, if some property not needed for element ?\n                    if (!path) {\n                        this.attr(name, target[name]);\n                    }\n                    else {  // Shape or style\n                        var props = {};\n                        props[path] = {};\n                        props[path][name] = target[name];\n                        this.attr(props);\n                    }\n                }\n            }\n\n            if (propertyCount > 0) {\n                this.animate(path, false)\n                    .when(time == null ? 500 : time, objShallow)\n                    .delay(delay || 0);\n            }\n\n            return this;\n        }\n    };\n\n    module.exports = Animatable;\n\n\n/***/ }),\n\n/***/ 799:\n/***/ (function(module, exports) {\n\n// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\n\n    function Draggable() {\n\n        this.on('mousedown', this._dragStart, this);\n        this.on('mousemove', this._drag, this);\n        this.on('mouseup', this._dragEnd, this);\n        this.on('globalout', this._dragEnd, this);\n        // this._dropTarget = null;\n        // this._draggingTarget = null;\n\n        // this._x = 0;\n        // this._y = 0;\n    }\n\n    Draggable.prototype = {\n\n        constructor: Draggable,\n\n        _dragStart: function (e) {\n            var draggingTarget = e.target;\n            if (draggingTarget && draggingTarget.draggable) {\n                this._draggingTarget = draggingTarget;\n                draggingTarget.dragging = true;\n                this._x = e.offsetX;\n                this._y = e.offsetY;\n\n                this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n            }\n        },\n\n        _drag: function (e) {\n            var draggingTarget = this._draggingTarget;\n            if (draggingTarget) {\n\n                var x = e.offsetX;\n                var y = e.offsetY;\n\n                var dx = x - this._x;\n                var dy = y - this._y;\n                this._x = x;\n                this._y = y;\n\n                draggingTarget.drift(dx, dy, e);\n                this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n\n                var dropTarget = this.findHover(x, y, draggingTarget).target;\n                var lastDropTarget = this._dropTarget;\n                this._dropTarget = dropTarget;\n\n                if (draggingTarget !== dropTarget) {\n                    if (lastDropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n                    }\n                    if (dropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n                    }\n                }\n            }\n        },\n\n        _dragEnd: function (e) {\n            var draggingTarget = this._draggingTarget;\n\n            if (draggingTarget) {\n                draggingTarget.dragging = false;\n            }\n\n            this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n            if (this._dropTarget) {\n                this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n            }\n\n            this._draggingTarget = null;\n            this._dropTarget = null;\n        }\n\n    };\n\n    function param(target, e) {\n        return {target: target, topTarget: e && e.topTarget};\n    }\n\n    module.exports = Draggable;\n\n\n/***/ }),\n\n/***/ 800:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Path = __webpack_require__(612);\n    var PathProxy = __webpack_require__(635);\n    var transformPath = __webpack_require__(801);\n\n    // command chars\n    var cc = [\n        'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\n        'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\n    ];\n\n    var mathSqrt = Math.sqrt;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n    var PI = Math.PI;\n\n    var vMag = function(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n    var vRatio = function(u, v) {\n        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n    var vAngle = function(u, v) {\n        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)\n                * Math.acos(vRatio(u, v));\n    };\n\n    function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n        var psi = psiDeg * (PI / 180.0);\n        var xp = mathCos(psi) * (x1 - x2) / 2.0\n                 + mathSin(psi) * (y1 - y2) / 2.0;\n        var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0\n                 + mathCos(psi) * (y1 - y2) / 2.0;\n\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n\n        if (lambda > 1) {\n            rx *= mathSqrt(lambda);\n            ry *= mathSqrt(lambda);\n        }\n\n        var f = (fa === fs ? -1 : 1)\n            * mathSqrt((((rx * rx) * (ry * ry))\n                    - ((rx * rx) * (yp * yp))\n                    - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)\n                    + (ry * ry) * (xp * xp))\n                ) || 0;\n\n        var cxp = f * rx * yp / ry;\n        var cyp = f * -ry * xp / rx;\n\n        var cx = (x1 + x2) / 2.0\n                 + mathCos(psi) * cxp\n                 - mathSin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0\n                + mathSin(psi) * cxp\n                + mathCos(psi) * cyp;\n\n        var theta = vAngle([ 1, 0 ], [ (xp - cxp) / rx, (yp - cyp) / ry ]);\n        var u = [ (xp - cxp) / rx, (yp - cyp) / ry ];\n        var v = [ (-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry ];\n        var dTheta = vAngle(u, v);\n\n        if (vRatio(u, v) <= -1) {\n            dTheta = PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * PI;\n        }\n\n        path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n    }\n\n    function createPathProxyFromString(data) {\n        if (!data) {\n            return [];\n        }\n\n        // command string\n        var cs = data.replace(/-/g, ' -')\n            .replace(/  /g, ' ')\n            .replace(/ /g, ',')\n            .replace(/,,/g, ',');\n\n        var n;\n        // create pipes so that we can split the data\n        for (n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n\n        // create array\n        var arr = cs.split('|');\n        // init context point\n        var cpx = 0;\n        var cpy = 0;\n\n        var path = new PathProxy();\n        var CMD = PathProxy.CMD;\n\n        var prevCmd;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            var off = 0;\n            var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n            var cmd;\n\n            if (p.length > 0 && p[0] === '') {\n                p.shift();\n            }\n\n            for (var i = 0; i < p.length; i++) {\n                p[i] = parseFloat(p[i]);\n            }\n            while (off < p.length && !isNaN(p[off])) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var ctlPtx;\n                var ctlPty;\n\n                var rx;\n                var ry;\n                var psi;\n                var fa;\n                var fs;\n\n                var x1 = cpx;\n                var y1 = cpy;\n\n                // convert l, H, h, V, and v to L\n                switch (c) {\n                    case 'l':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'm':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'C':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]\n                        );\n                        cpx = p[off - 2];\n                        cpy = p[off - 1];\n                        break;\n                    case 'c':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy\n                        );\n                        cpx += p[off - 2];\n                        cpy += p[off - 1];\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = cpx + p[off++];\n                        y1 = cpy + p[off++];\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 'Q':\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'q':\n                        x1 = p[off++] + cpx;\n                        y1 = p[off++] + cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                    case 'a':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                }\n            }\n\n            if (c === 'z' || c === 'Z') {\n                cmd = CMD.Z;\n                path.addData(cmd);\n            }\n\n            prevCmd = cmd;\n        }\n\n        path.toStatic();\n\n        return path;\n    }\n\n    // TODO Optimize double memory cost problem\n    function createPathOptions(str, opts) {\n        var pathProxy = createPathProxyFromString(str);\n        opts = opts || {};\n        opts.buildPath = function (path) {\n            if (path.setData) {\n                path.setData(pathProxy.data);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            }\n            else {\n                var ctx = path;\n                pathProxy.rebuildPath(ctx);\n            }\n        };\n\n        opts.applyTransform = function (m) {\n            transformPath(pathProxy, m);\n\n            this.dirty(true);\n        };\n\n        return opts;\n    }\n\n    module.exports = {\n        /**\n         * Create a Path object from path string data\n         * http://www.w3.org/TR/SVG/paths.html#PathData\n         * @param  {Object} opts Other options\n         */\n        createFromString: function (str, opts) {\n            return new Path(createPathOptions(str, opts));\n        },\n\n        /**\n         * Create a Path class from path string data\n         * @param  {string} str\n         * @param  {Object} opts Other options\n         */\n        extendFromString: function (str, opts) {\n            return Path.extend(createPathOptions(str, opts));\n        },\n\n        /**\n         * Merge multiple paths\n         */\n        // TODO Apply transform\n        // TODO stroke dash\n        // TODO Optimize double memory cost problem\n        mergePath: function (pathEls, opts) {\n            var pathList = [];\n            var len = pathEls.length;\n            for (var i = 0; i < len; i++) {\n                var pathEl = pathEls[i];\n                if (!pathEl.path) {\n                    pathEl.createPathProxy();\n                }\n                if (pathEl.__dirtyPath) {\n                    pathEl.buildPath(pathEl.path, pathEl.shape, true);\n                }\n                pathList.push(pathEl.path);\n            }\n\n            var pathBundle = new Path(opts);\n            // Need path proxy.\n            pathBundle.createPathProxy();\n            pathBundle.buildPath = function (path) {\n                path.appendPath(pathList);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            };\n\n            return pathBundle;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 801:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var CMD = __webpack_require__(635).CMD;\n    var vec2 = __webpack_require__(611);\n    var v2ApplyTransform = vec2.applyTransform;\n\n    var points = [[], [], []];\n    var mathSqrt = Math.sqrt;\n    var mathAtan2 = Math.atan2;\n    function transformPath(path, m) {\n        var data = path.data;\n        var cmd;\n        var nPoint;\n        var i;\n        var j;\n        var k;\n        var p;\n\n        var M = CMD.M;\n        var C = CMD.C;\n        var L = CMD.L;\n        var R = CMD.R;\n        var A = CMD.A;\n        var Q = CMD.Q;\n\n        for (i = 0, j = 0; i < data.length;) {\n            cmd = data[i++];\n            j = i;\n            nPoint = 0;\n\n            switch (cmd) {\n                case M:\n                    nPoint = 1;\n                    break;\n                case L:\n                    nPoint = 1;\n                    break;\n                case C:\n                    nPoint = 3;\n                    break;\n                case Q:\n                    nPoint = 2;\n                    break;\n                case A:\n                    var x = m[4];\n                    var y = m[5];\n                    var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n                    var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n                    var angle = mathAtan2(-m[1] / sy, m[0] / sx);\n                    // cx\n                    data[i] *= sx;\n                    data[i++] += x;\n                    // cy\n                    data[i] *= sy;\n                    data[i++] += y;\n                    // Scale rx and ry\n                    // FIXME Assume psi is 0 here\n                    data[i++] *= sx;\n                    data[i++] *= sy;\n\n                    // Start angle\n                    data[i++] += angle;\n                    // end angle\n                    data[i++] += angle;\n                    // FIXME psi\n                    i += 2;\n                    j = i;\n                    break;\n                case R:\n                    // x0, y0\n                    p[0] = data[i++];\n                    p[1] = data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n                    // x1, y1\n                    p[0] += data[i++];\n                    p[1] += data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n            }\n\n            for (k = 0; k < nPoint; k++) {\n                var p = points[k];\n                p[0] = data[i++];\n                p[1] = data[i++];\n\n                v2ApplyTransform(p, p, m);\n                // Write back\n                data[j++] = p[0];\n                data[j++] = p[1];\n            }\n        }\n    }\n\n    module.exports = transformPath;\n\n\n/***/ }),\n\n/***/ 802:\n/***/ (function(module, exports, __webpack_require__) {\n\n/*!\n * ZRender, a high performance 2d drawing library.\n *\n * Copyright (c) 2013, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n */\n// Global defines\n\n    var guid = __webpack_require__(672);\n    var env = __webpack_require__(615);\n    var zrUtil = __webpack_require__(606);\n\n    var Handler = __webpack_require__(766);\n    var Storage = __webpack_require__(769);\n    var Animation = __webpack_require__(770);\n    var HandlerProxy = __webpack_require__(781);\n\n    var useVML = !env.canvasSupported;\n\n    var painterCtors = {\n        canvas: __webpack_require__(768)\n    };\n\n    var instances = {};    // ZRender实例map索引\n\n    var zrender = {};\n\n    /**\n     * @type {string}\n     */\n    zrender.version = '3.6.0';\n\n    /**\n     * Initializing a zrender instance\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @return {module:zrender/ZRender}\n     */\n    zrender.init = function (dom, opts) {\n        var zr = new ZRender(guid(), dom, opts);\n        instances[zr.id] = zr;\n        return zr;\n    };\n\n    /**\n     * Dispose zrender instance\n     * @param {module:zrender/ZRender} zr\n     */\n    zrender.dispose = function (zr) {\n        if (zr) {\n            zr.dispose();\n        }\n        else {\n            for (var key in instances) {\n                if (instances.hasOwnProperty(key)) {\n                    instances[key].dispose();\n                }\n            }\n            instances = {};\n        }\n\n        return zrender;\n    };\n\n    /**\n     * Get zrender instance by id\n     * @param {string} id zrender instance id\n     * @return {module:zrender/ZRender}\n     */\n    zrender.getInstance = function (id) {\n        return instances[id];\n    };\n\n    zrender.registerPainter = function (name, Ctor) {\n        painterCtors[name] = Ctor;\n    };\n\n    function delInstance(id) {\n        delete instances[id];\n    }\n\n    /**\n     * @module zrender/ZRender\n     */\n    /**\n     * @constructor\n     * @alias module:zrender/ZRender\n     * @param {string} id\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     */\n    var ZRender = function (id, dom, opts) {\n\n        opts = opts || {};\n\n        /**\n         * @type {HTMLDomElement}\n         */\n        this.dom = dom;\n\n        /**\n         * @type {string}\n         */\n        this.id = id;\n\n        var self = this;\n        var storage = new Storage();\n\n        var rendererType = opts.renderer;\n        // TODO WebGL\n        if (useVML) {\n            if (!painterCtors.vml) {\n                throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n            }\n            rendererType = 'vml';\n        }\n        else if (!rendererType || !painterCtors[rendererType]) {\n            rendererType = 'canvas';\n        }\n        var painter = new painterCtors[rendererType](dom, storage, opts);\n\n        this.storage = storage;\n        this.painter = painter;\n\n        var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n        this.handler = new Handler(storage, painter, handerProxy, painter.root);\n\n        /**\n         * @type {module:zrender/animation/Animation}\n         */\n        this.animation = new Animation({\n            stage: {\n                update: zrUtil.bind(this.flush, this)\n            }\n        });\n        this.animation.start();\n\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._needsRefresh;\n\n        // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n        // FIXME 有点ugly\n        var oldDelFromStorage = storage.delFromStorage;\n        var oldAddToStorage = storage.addToStorage;\n\n        storage.delFromStorage = function (el) {\n            oldDelFromStorage.call(storage, el);\n\n            el && el.removeSelfFromZr(self);\n        };\n\n        storage.addToStorage = function (el) {\n            oldAddToStorage.call(storage, el);\n\n            el.addSelfToZr(self);\n        };\n    };\n\n    ZRender.prototype = {\n\n        constructor: ZRender,\n        /**\n         * 获取实例唯一标识\n         * @return {string}\n         */\n        getId: function () {\n            return this.id;\n        },\n\n        /**\n         * 添加元素\n         * @param  {module:zrender/Element} el\n         */\n        add: function (el) {\n            this.storage.addRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * 删除元素\n         * @param  {module:zrender/Element} el\n         */\n        remove: function (el) {\n            this.storage.delRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Change configuration of layer\n         * @param {string} zLevel\n         * @param {Object} config\n         * @param {string} [config.clearColor=0] Clear color\n         * @param {string} [config.motionBlur=false] If enable motion blur\n         * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n        */\n        configLayer: function (zLevel, config) {\n            this.painter.configLayer(zLevel, config);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Repaint the canvas immediately\n         */\n        refreshImmediately: function () {\n            // var start = new Date();\n            // Clear needsRefresh ahead to avoid something wrong happens in refresh\n            // Or it will cause zrender refreshes again and again.\n            this._needsRefresh = false;\n            this.painter.refresh();\n            /**\n             * Avoid trigger zr.refresh in Element#beforeUpdate hook\n             */\n            this._needsRefresh = false;\n            // var end = new Date();\n\n            // var log = document.getElementById('log');\n            // if (log) {\n            //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n            // }\n        },\n\n        /**\n         * Mark and repaint the canvas in the next frame of browser\n         */\n        refresh: function() {\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Perform all refresh\n         */\n        flush: function () {\n            if (this._needsRefresh) {\n                this.refreshImmediately();\n            }\n            if (this._needsRefreshHover) {\n                this.refreshHoverImmediately();\n            }\n        },\n\n        /**\n         * Add element to hover layer\n         * @param  {module:zrender/Element} el\n         * @param {Object} style\n         */\n        addHover: function (el, style) {\n            if (this.painter.addHover) {\n                this.painter.addHover(el, style);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Add element from hover layer\n         * @param  {module:zrender/Element} el\n         */\n        removeHover: function (el) {\n            if (this.painter.removeHover) {\n                this.painter.removeHover(el);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Clear all hover elements in hover layer\n         * @param  {module:zrender/Element} el\n         */\n        clearHover: function () {\n            if (this.painter.clearHover) {\n                this.painter.clearHover();\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Refresh hover in next frame\n         */\n        refreshHover: function () {\n            this._needsRefreshHover = true;\n        },\n\n        /**\n         * Refresh hover immediately\n         */\n        refreshHoverImmediately: function () {\n            this._needsRefreshHover = false;\n            this.painter.refreshHover && this.painter.refreshHover();\n        },\n\n        /**\n         * Resize the canvas.\n         * Should be invoked when container size is changed\n         * @param {Object} [opts]\n         * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n         * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n         */\n        resize: function(opts) {\n            opts = opts || {};\n            this.painter.resize(opts.width, opts.height);\n            this.handler.resize();\n        },\n\n        /**\n         * Stop and clear all animation immediately\n         */\n        clearAnimation: function () {\n            this.animation.clear();\n        },\n\n        /**\n         * Get container width\n         */\n        getWidth: function() {\n            return this.painter.getWidth();\n        },\n\n        /**\n         * Get container height\n         */\n        getHeight: function() {\n            return this.painter.getHeight();\n        },\n\n        /**\n         * Export the canvas as Base64 URL\n         * @param {string} type\n         * @param {string} [backgroundColor='#fff']\n         * @return {string} Base64 URL\n         */\n        // toDataURL: function(type, backgroundColor) {\n        //     return this.painter.getRenderedCanvas({\n        //         backgroundColor: backgroundColor\n        //     }).toDataURL(type);\n        // },\n\n        /**\n         * Converting a path to image.\n         * It has much better performance of drawing image rather than drawing a vector path.\n         * @param {module:zrender/graphic/Path} e\n         * @param {number} width\n         * @param {number} height\n         */\n        pathToImage: function(e, dpr) {\n            return this.painter.pathToImage(e, dpr);\n        },\n\n        /**\n         * Set default cursor\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            this.handler.setCursorStyle(cursorStyle);\n        },\n\n        /**\n         * Find hovered element\n         * @param {number} x\n         * @param {number} y\n         * @return {Object} {target, topTarget}\n         */\n        findHover: function (x, y) {\n            return this.handler.findHover(x, y);\n        },\n\n        /**\n         * Bind event\n         *\n         * @param {string} eventName Event name\n         * @param {Function} eventHandler Handler function\n         * @param {Object} [context] Context object\n         */\n        on: function(eventName, eventHandler, context) {\n            this.handler.on(eventName, eventHandler, context);\n        },\n\n        /**\n         * Unbind event\n         * @param {string} eventName Event name\n         * @param {Function} [eventHandler] Handler function\n         */\n        off: function(eventName, eventHandler) {\n            this.handler.off(eventName, eventHandler);\n        },\n\n        /**\n         * Trigger event manually\n         *\n         * @param {string} eventName Event name\n         * @param {event=} event Event object\n         */\n        trigger: function (eventName, event) {\n            this.handler.trigger(eventName, event);\n        },\n\n\n        /**\n         * Clear all objects and the canvas.\n         */\n        clear: function () {\n            this.storage.delRoot();\n            this.painter.clear();\n        },\n\n        /**\n         * Dispose self.\n         */\n        dispose: function () {\n            this.animation.stop();\n\n            this.clear();\n            this.storage.dispose();\n            this.painter.dispose();\n            this.handler.dispose();\n\n            this.animation =\n            this.storage =\n            this.painter =\n            this.handler = null;\n\n            delInstance(this.id);\n        }\n    };\n\n    module.exports = zrender;\n\n\n\n/***/ }),\n\n/***/ 877:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_v_charts_lib_line__ = __webpack_require__(1029);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_v_charts_lib_line___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_v_charts_lib_line__);\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: '',\n  mixins: [],\n  props: {},\n  data: function data() {\n    return {\n      chartData: null,\n      chartSettings: {\n        label: {\n          normal: { show: true }\n        }\n      }\n    };\n  },\n\n  computed: {},\n  components: {\n    VeLine: __WEBPACK_IMPORTED_MODULE_0_v_charts_lib_line___default.a\n  },\n  methods: {},\n  created: function created() {\n    var _this = this;\n\n    this.$nextTick(function () {\n      setTimeout(function () {\n        _this.chartData = {\n          columns: ['日期', '销售额-1季度'],\n          rows: [{ '日期': '1月1日', '销售额-1季度': 1523, '销售额-2季度': 1523, '占比': 0.12, '其他': 100 }, { '日期': '1月2日', '销售额-1季度': 1223, '销售额-2季度': 1523, '占比': 0.345, '其他': 100 }, { '日期': '1月3日', '销售额-1季度': 2123, '销售额-2季度': 1523, '占比': 0.7, '其他': 100 }, { '日期': '1月4日', '销售额-1季度': 4123, '销售额-2季度': 1523, '占比': 0.31, '其他': 100 }, { '日期': '1月5日', '销售额-1季度': 3123, '销售额-2季度': 1523, '占比': 0.12, '其他': 100 }, { '日期': '1月6日', '销售额-1季度': 7123, '销售额-2季度': 1523, '占比': 0.65, '其他': 100 }]\n        };\n      }, 3000);\n    });\n  },\n  mounted: function mounted() {}\n});\n\n/***/ }),\n\n/***/ 921:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(586)();\n// imports\n\n\n// module\nexports.push([module.i, \"\", \"\", {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"charts.vue\",\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ 959:\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(921);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(587)(\"1f37bbdb\", content, true);\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// industries/js/2.a0764b117731bc06f223.js","'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar echarts = _interopDefault(require('echarts/lib/echarts'));\nrequire('echarts/lib/component/tooltip');\nrequire('echarts/lib/component/legend');\nrequire('echarts/lib/chart/line');\n\nif (typeof Object.assign !== 'function') {\n  Object.assign = function (target) {\n    if (target == null) {\n      throw new TypeError('Cannot convert undefined or null to object');\n    }\n\n    target = Object(target);\n    for (var index = 1; index < arguments.length; index++) {\n      var source = arguments[index];\n      if (source != null) {\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n    }\n    return target;\n  };\n}\n\necharts.registerTheme('ve-chart', {\n  categoryAxis: {\n    axisLine: { show: false },\n    axisTick: { show: false },\n    splitLine: { show: false }\n  },\n  valueAxis: {\n    axisLine: { show: false }\n  },\n  line: {\n    smooth: true\n  },\n  grid: {\n    containLabel: true,\n    left: 10,\n    right: 10\n  }\n});\n\nvar itemPoint = function itemPoint(color) {\n  return ['<span style=\"', 'background-color:' + color + ';', 'display: inline-block;', 'width: 10px;', 'height: 10px;', 'border-radius: 50%;', 'margin-right:2px;', '\"></span>'].join('');\n};\n\nvar color = ['#19d4ae', '#5ab1ef', '#fa6e86', '#ffb980', '#0067a6', '#c4b4e4', '#d87a80', '#9cbbff', '#d9d0c7', '#87a997', '#d49ea2', '#5b4947', '#7ba3a8'];\n\nvar numberFormat = function numberFormat(val) {\n  var digits = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n\n  if (isNaN(+val)) return val;\n\n  var symbolMap = [{ value: 1E18, symbol: 'E' }, { value: 1E15, symbol: 'P' }, { value: 1E12, symbol: 'T' }, { value: 1E9, symbol: 'B' }, { value: 1E6, symbol: 'M' }, { value: 1E3, symbol: 'k' }];\n\n  for (var i = 0; i < symbolMap.length; i++) {\n    if (Math.abs(val) >= symbolMap[i].value) {\n      return (val / symbolMap[i].value).toFixed(digits) + symbolMap[i].symbol;\n    }\n  }\n\n  return val.toString();\n};\n\nvar formatTausends = function formatTausends(num) {\n  return String(num).replace(/^(\\s+|-)?\\d+(?=.?\\d*($|\\s))/g, function (m) {\n    return m.replace(/(?=(?!\\b)(\\d{3})+$)/g, ',');\n  });\n};\n\nvar getFormated = function getFormated(val, type) {\n  var digit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 2;\n  var defaultVal = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '-';\n\n  if (val == null || isNaN(val)) return defaultVal;\n  switch (type) {\n    case 'KMB':\n      return numberFormat(val);\n    case 'percent':\n      return parseFloat((val * 100).toFixed(digit)) + '%';\n    case 'normal':\n      return formatTausends(val);\n    default:\n      return val;\n  }\n};\n\n\n\nvar getStackMap = function getStackMap(stack) {\n  var stackMap = {};\n  Object.keys(stack).forEach(function (item) {\n    stack[item].forEach(function (name) {\n      stackMap[name] = item;\n    });\n  });\n  return stackMap;\n};\n\n\n\n\n\n\n\n\nvar getType = function getType(v) {\n  return Object.prototype.toString.call(v);\n};\n\nfunction getLineXAxis(args) {\n  var dimension = args.dimension,\n      rows = args.rows,\n      xAxisName = args.xAxisName,\n      axisVisible = args.axisVisible;\n\n  return dimension.map(function (item, index) {\n    return {\n      type: 'category',\n      nameLocation: 'middle',\n      nameGap: 22,\n      boundaryGap: false,\n      name: xAxisName[index] || '',\n      axisTick: { show: true, lineStyle: { color: '#eee' } },\n      data: rows.map(function (row) {\n        return row[item];\n      }),\n      axisLabel: {\n        formatter: function formatter(v) {\n          return String(v);\n        }\n      },\n      show: axisVisible\n    };\n  });\n}\n\nfunction getLineSeries(args) {\n  var rows = args.rows,\n      axisSite = args.axisSite,\n      metrics = args.metrics,\n      area = args.area,\n      stack = args.stack,\n      nullAddZero = args.nullAddZero,\n      labelMap = args.labelMap,\n      label = args.label,\n      itemStyle = args.itemStyle,\n      lineStyle = args.lineStyle,\n      areaStyle = args.areaStyle;\n\n  var series = [];\n  var dataTemp = {};\n  var stackMap = stack && getStackMap(stack);\n  metrics.forEach(function (item) {\n    dataTemp[item] = [];\n  });\n  rows.forEach(function (row) {\n    metrics.forEach(function (item) {\n      var value = null;\n      if (row[item] != null) {\n        value = row[item];\n      } else if (nullAddZero) {\n        value = 0;\n      }\n      dataTemp[item].push(value);\n    });\n  });\n  metrics.forEach(function (item) {\n    var seriesItem = {\n      name: labelMap && labelMap[item] || item,\n      type: 'line',\n      data: dataTemp[item]\n    };\n\n    if (area) seriesItem.areaStyle = { normal: {} };\n    seriesItem.yAxisIndex = ~axisSite.right.indexOf(item) ? 1 : 0;\n\n    if (stack && stackMap[item]) seriesItem.stack = stackMap[item];\n\n    if (label) seriesItem.label = label;\n    if (itemStyle) seriesItem.itemStyle = itemStyle;\n    if (lineStyle) seriesItem.lineStyle = lineStyle;\n    if (areaStyle) seriesItem.areaStyle = areaStyle;\n\n    series.push(seriesItem);\n  });\n  return series.length ? series : false;\n}\n\nfunction getLineYAxis(args) {\n  var yAxisName = args.yAxisName,\n      yAxisType = args.yAxisType,\n      axisVisible = args.axisVisible,\n      scale = args.scale,\n      min = args.min,\n      max = args.max,\n      digit = args.digit;\n\n  var yAxisBase = {\n    type: 'value',\n    axisTick: {\n      show: false\n    },\n    show: axisVisible\n  };\n  var yAxis = [];\n\n  var _loop = function _loop(i) {\n    if (yAxisType[i]) {\n      yAxis[i] = Object.assign({}, yAxisBase, {\n        axisLabel: {\n          formatter: function formatter(val) {\n            return getFormated(val, yAxisType[i], digit);\n          }\n        }\n      });\n    } else {\n      yAxis[i] = Object.assign({}, yAxisBase);\n    }\n    yAxis[i].name = yAxisName[i] || '';\n    yAxis[i].scale = scale[i] || false;\n    yAxis[i].min = min[i] || null;\n    yAxis[i].max = max[i] || null;\n  };\n\n  for (var i = 0; i < 2; i++) {\n    _loop(i);\n  }\n  return yAxis;\n}\n\nfunction getLineTooltip(args) {\n  var axisSite = args.axisSite,\n      yAxisType = args.yAxisType,\n      digit = args.digit,\n      labelMap = args.labelMap;\n\n  var rightList = labelMap ? axisSite.right.map(function (item) {\n    return labelMap[item] === undefined ? item : labelMap[item];\n  }) : axisSite.right;\n  return {\n    trigger: 'axis',\n    formatter: function formatter(items) {\n      var tpl = [];\n      tpl.push(items[0].name + '<br>');\n      items.forEach(function (item) {\n        var showData = null;\n        var type = ~rightList.indexOf(item.seriesName) ? yAxisType[1] : yAxisType[0];\n        showData = getFormated(item.data, type, digit);\n        tpl.push(itemPoint(item.color));\n        tpl.push(item.seriesName + ': ' + showData);\n        tpl.push('<br>');\n      });\n      return tpl.join('');\n    }\n  };\n}\n\nfunction getLegend(args) {\n  var metrics = args.metrics,\n      legendName = args.legendName,\n      labelMap = args.labelMap;\n\n  if (!legendName && !labelMap) return { data: metrics };\n  var data = labelMap ? metrics.map(function (item) {\n    return labelMap[item] == null ? item : labelMap[item];\n  }) : metrics;\n  return {\n    data: data,\n    formatter: function formatter(name) {\n      return legendName && legendName[name] || name;\n    }\n  };\n}\n\nvar line = function line(columns, rows, settings, extra) {\n  var _settings$axisSite = settings.axisSite,\n      axisSite = _settings$axisSite === undefined ? { right: [] } : _settings$axisSite,\n      _settings$yAxisType = settings.yAxisType,\n      yAxisType = _settings$yAxisType === undefined ? ['normal', 'normal'] : _settings$yAxisType,\n      _settings$yAxisName = settings.yAxisName,\n      yAxisName = _settings$yAxisName === undefined ? [] : _settings$yAxisName,\n      _settings$dimension = settings.dimension,\n      dimension = _settings$dimension === undefined ? [columns[0]] : _settings$dimension,\n      _settings$xAxisName = settings.xAxisName,\n      xAxisName = _settings$xAxisName === undefined ? [] : _settings$xAxisName,\n      _settings$axisVisible = settings.axisVisible,\n      axisVisible = _settings$axisVisible === undefined ? true : _settings$axisVisible,\n      area = settings.area,\n      stack = settings.stack,\n      _settings$scale = settings.scale,\n      scale = _settings$scale === undefined ? [false, false] : _settings$scale,\n      _settings$min = settings.min,\n      min = _settings$min === undefined ? [null, null] : _settings$min,\n      _settings$max = settings.max,\n      max = _settings$max === undefined ? [null, null] : _settings$max,\n      _settings$nullAddZero = settings.nullAddZero,\n      nullAddZero = _settings$nullAddZero === undefined ? false : _settings$nullAddZero,\n      _settings$digit = settings.digit,\n      digit = _settings$digit === undefined ? 2 : _settings$digit,\n      legendName = settings.legendName,\n      labelMap = settings.labelMap,\n      label = settings.label,\n      itemStyle = settings.itemStyle,\n      lineStyle = settings.lineStyle,\n      areaStyle = settings.areaStyle;\n  var tooltipVisible = extra.tooltipVisible,\n      legendVisible = extra.legendVisible;\n\n  var metrics = columns.slice();\n\n  if (settings.metrics) {\n    metrics = settings.metrics;\n  } else {\n    metrics.splice(columns.indexOf(dimension[0]), 1);\n  }\n\n  var legend = legendVisible && getLegend({ metrics: metrics, legendName: legendName, labelMap: labelMap });\n  var tooltip = tooltipVisible && getLineTooltip({\n    axisSite: axisSite,\n    yAxisType: yAxisType,\n    digit: digit,\n    labelMap: labelMap\n  });\n  var xAxis = getLineXAxis({ dimension: dimension, rows: rows, xAxisName: xAxisName, axisVisible: axisVisible });\n  var yAxisParams = {\n    yAxisName: yAxisName,\n    yAxisType: yAxisType,\n    axisVisible: axisVisible,\n    scale: scale,\n    min: min,\n    max: max,\n    digit: digit\n  };\n  var yAxis = getLineYAxis(yAxisParams);\n  var seriesParams = {\n    rows: rows,\n    axisSite: axisSite,\n    metrics: metrics,\n    area: area,\n    stack: stack,\n    nullAddZero: nullAddZero,\n    labelMap: labelMap,\n    label: label,\n    itemStyle: itemStyle,\n    lineStyle: lineStyle,\n    areaStyle: areaStyle\n  };\n  var series = getLineSeries(seriesParams);\n  if (!xAxis || !series) return false;\n\n  var options = { legend: legend, xAxis: xAxis, series: series, yAxis: yAxis, tooltip: tooltip };\n  return options;\n};\n\nvar chartMixin = {\n  props: {\n    data: { type: [Object, Array], default: function _default() {\n        return {};\n      }\n    },\n    settings: { type: Object, default: function _default() {\n        return {};\n      }\n    },\n    width: { type: String, default: 'auto' },\n    height: { type: String, default: '400px' },\n    beforeConfig: { type: Function },\n    afterConfig: { type: Function },\n    afterSetOption: { type: Function },\n    afterSetOptionOnce: { type: Function },\n    events: { type: Object },\n    grid: { type: Object },\n    colors: { type: Array },\n    tooltipVisible: { type: Boolean, default: true },\n    legendVisible: { type: Boolean, default: true },\n    legendPosition: { type: String },\n    markLine: { type: Object },\n    markArea: { type: Object },\n    markPoint: { type: Object },\n    visualMap: { type: [Object, Array] },\n    dataZoom: { type: [Object, Array] },\n    toolbox: { type: Object },\n    initOptions: { type: Object, default: function _default() {\n        return {};\n      }\n    },\n    title: Object,\n    legend: Object,\n    xAxis: Object,\n    yAxis: Object,\n    radar: Object,\n    tooltip: Object,\n    axisPointer: Object,\n    brush: Object,\n    geo: Object,\n    timeline: Object,\n    graphic: Object,\n    series: [Object, Array],\n    backgroundColor: [Object, String],\n    textStyle: Object,\n    animation: Object,\n    theme: Object,\n    themeName: String\n  },\n\n  watch: {\n    data: {\n      deep: true,\n      handler: function handler(v) {\n        if (v) {\n          this.dataHandler(v);\n        }\n      }\n    },\n\n    settings: {\n      deep: true,\n      handler: function handler(v) {\n        if (v.type && this.chartLib) this.chartHandler = this.chartLib[v.type];\n        this.dataHandler(this.data);\n      }\n    }\n  },\n\n  computed: {\n    canvasStyle: function canvasStyle() {\n      return {\n        width: this.width,\n        height: this.height,\n        position: 'relative'\n      };\n    },\n    chartColor: function chartColor() {\n      return this.colors || this.theme && this.theme.color || color;\n    }\n  },\n\n  methods: {\n    dataHandler: function dataHandler(data) {\n      if (!this.chartHandler) return;\n      var _data = data,\n          columns = _data.columns,\n          rows = _data.rows;\n\n      var extra = {\n        tooltipVisible: this.tooltipVisible,\n        legendVisible: this.legendVisible,\n        echarts: this.echarts,\n        color: this.chartColor\n      };\n      if (this.beforeConfig) data = this.beforeConfig(data);\n\n      var options = this.chartHandler(columns, rows, this.settings, extra);\n      if (options) {\n        if (typeof options.then === 'function') {\n          options.then(this.optionsHandler);\n        } else {\n          this.optionsHandler(options);\n        }\n      }\n    },\n    optionsHandler: function optionsHandler(options) {\n      var _this = this;\n\n      if (this.legendPosition && options.legend) {\n        options.legend[this.legendPosition] = 10;\n        if (~['left', 'right'].indexOf(this.legendPosition)) {\n          options.legend.top = 'middle';\n          options.legend.orient = 'vertical';\n        }\n      }\n      if (!this.themeName) options.color = this.chartColor;\n      var echartsSettings = ['grid', 'dataZoom', 'visualMap', 'toolbox', 'title', 'legend', 'xAxis', 'yAxis', 'radar', 'tooltip', 'axisPointer', 'brush', 'geo', 'timeline', 'graphic', 'series', 'backgroundColor', 'textStyle'];\n      echartsSettings.forEach(function (setting) {\n        if (_this[setting]) options[setting] = _this[setting];\n      });\n      if (this.animation) {\n        Object.keys(this.animation).forEach(function (key) {\n          options[key] = _this.animation[key];\n        });\n      }\n      if (this.markArea || this.markLine || this.markPoint) {\n        var marks = {\n          markArea: this.markArea,\n          markLine: this.markLine,\n          markPoint: this.markPoint\n        };\n        var series = options.series;\n        if (getType(series) === '[object Array]') {\n          series.forEach(function (item) {\n            _this.addMark(item, marks);\n          });\n        } else if (getType(series) === '[object Object]') {\n          this.addMark(series, marks);\n        }\n      }\n      if (this.afterConfig) options = this.afterConfig(options);\n      this.echarts.setOption(options, true);\n      if (this.afterSetOption) this.afterSetOption(this.echarts);\n      if (this.afterSetOptionOnce && !this._once['afterSetOptionOnce']) {\n        this._once['afterSetOptionOnce'] = this.afterSetOptionOnce(this.echarts);\n      }\n    },\n    addMark: function addMark(seriesItem, marks) {\n      Object.keys(marks).forEach(function (key) {\n        if (marks[key]) {\n          seriesItem[key] = marks[key];\n        }\n      });\n    },\n    init: function init() {\n      if (this.echarts) return;\n      var themeName = this.themeName || (this.theme ? 'outer-theme' : 've-chart');\n      this.echarts = this.echartsLib.init(this.$refs.canvas, themeName, this.initOptions);\n      if (this.data) this.dataHandler(this.data);\n      if (this.events) this.bindEvents();\n    },\n    bindEvents: function bindEvents() {\n      var _this2 = this;\n\n      Object.keys(this.events).forEach(function (event) {\n        _this2.echarts.on(event, _this2.events[event]);\n      });\n    },\n    addWatchToProps: function addWatchToProps() {\n      var _this3 = this;\n\n      var watchedVariable = this._watchers.map(function (watcher) {\n        return watcher.expression;\n      });\n      Object.keys(this.$props).forEach(function (prop) {\n        if (!~watchedVariable.indexOf(prop)) {\n          var opts = {};\n          if (getType(prop) === '[object Object]') {\n            opts.deep = true;\n          }\n          _this3.$watch(prop, function () {\n            _this3.dataHandler(_this3.data);\n          }, opts);\n        }\n      });\n    },\n    registerTheme: function registerTheme() {\n      echarts.registerTheme('outer-theme', this.theme);\n    }\n  },\n\n  created: function created() {\n    this.echarts = null;\n    this._once = {};\n    this.addWatchToProps();\n    if (this.theme) this.registerTheme();\n  },\n  mounted: function mounted() {\n    this.init();\n    window.addEventListener('resize', this.echarts.resize);\n  },\n  beforeDestory: function beforeDestory() {\n    window.removeEventListener('resize', this.echarts.resize);\n    this.echarts.dispose();\n  }\n};\n\nvar index = {\n  render: function render() {\n    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('div', { ref: \"canvas\", staticClass: \"ve-line\", style: _vm.canvasStyle });\n  },\n  staticRenderFns: [],\n  name: 'VeLine',\n  mixins: [chartMixin],\n  created: function created() {\n    this.chartHandler = line;\n    this.echartsLib = echarts;\n  }\n};\n\nmodule.exports = index;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/v-charts/lib/line.js\n// module id = 1029\n// module chunks = 2","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {}, [_c('div', {\n    staticClass: \"chart\"\n  }, [_c('ve-line', {\n    attrs: {\n      \"data\": _vm.chartData,\n      \"settings\": _vm.chartSettings\n    }\n  })], 1)])\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-578a9214\"}!./~/vux-loader/src/before-template-compiler-loader.js!./~/vux-loader/src/template-loader.js!./~/vue-loader/lib/selector.js?type=template&index=0!./src/base/test/charts.vue\n// module id = 1051\n// module chunks = 2","\n/* styles */\nrequire(\"!!../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-578a9214\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":true}!stylus-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vux-loader/src/style-loader.js!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./charts.vue\")\n\nvar Component = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../node_modules/vux-loader/src/script-loader.js!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./charts.vue\"),\n  /* template */\n  require(\"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-578a9214\\\"}!../../../node_modules/vux-loader/src/before-template-compiler-loader.js!../../../node_modules/vux-loader/src/template-loader.js!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./charts.vue\"),\n  /* scopeId */\n  \"data-v-578a9214\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/base/test/charts.vue\n// module id = 588\n// module chunks = 2","/**\n * @module zrender/core/util\n */\n\n\n    // 用于处理merge时无法遍历Date等对象的问题\n    var BUILTIN_OBJECT = {\n        '[object Function]': 1,\n        '[object RegExp]': 1,\n        '[object Date]': 1,\n        '[object Error]': 1,\n        '[object CanvasGradient]': 1,\n        '[object CanvasPattern]': 1,\n        // For node-canvas\n        '[object Image]': 1,\n        '[object Canvas]': 1\n    };\n\n    var TYPED_ARRAY = {\n        '[object Int8Array]': 1,\n        '[object Uint8Array]': 1,\n        '[object Uint8ClampedArray]': 1,\n        '[object Int16Array]': 1,\n        '[object Uint16Array]': 1,\n        '[object Int32Array]': 1,\n        '[object Uint32Array]': 1,\n        '[object Float32Array]': 1,\n        '[object Float64Array]': 1\n    };\n\n    var objToString = Object.prototype.toString;\n\n    var arrayProto = Array.prototype;\n    var nativeForEach = arrayProto.forEach;\n    var nativeFilter = arrayProto.filter;\n    var nativeSlice = arrayProto.slice;\n    var nativeMap = arrayProto.map;\n    var nativeReduce = arrayProto.reduce;\n\n    /**\n     * Those data types can be cloned:\n     *     Plain object, Array, TypedArray, number, string, null, undefined.\n     * Those data types will be assgined using the orginal data:\n     *     BUILTIN_OBJECT\n     * Instance of user defined class will be cloned to a plain object, without\n     * properties in prototype.\n     * Other data types is not supported (not sure what will happen).\n     *\n     * Caution: do not support clone Date, for performance consideration.\n     * (There might be a large number of date in `series.data`).\n     * So date should not be modified in and out of echarts.\n     *\n     * @param {*} source\n     * @return {*} new\n     */\n    function clone(source) {\n        if (source == null || typeof source != 'object') {\n            return source;\n        }\n\n        var result = source;\n        var typeStr = objToString.call(source);\n\n        if (typeStr === '[object Array]') {\n            result = [];\n            for (var i = 0, len = source.length; i < len; i++) {\n                result[i] = clone(source[i]);\n            }\n        }\n        else if (TYPED_ARRAY[typeStr]) {\n            var Ctor = source.constructor;\n            if (source.constructor.from) {\n                result = Ctor.from(source);\n            }\n            else {\n                result = new Ctor(source.length);\n                for (var i = 0, len = source.length; i < len; i++) {\n                    result[i] = clone(source[i]);\n                }\n            }\n        }\n        else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n            result = {};\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    result[key] = clone(source[key]);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overwrite=false]\n     */\n    function merge(target, source, overwrite) {\n        // We should escapse that source is string\n        // and enter for ... in ...\n        if (!isObject(source) || !isObject(target)) {\n            return overwrite ? clone(source) : target;\n        }\n\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                var targetProp = target[key];\n                var sourceProp = source[key];\n\n                if (isObject(sourceProp)\n                    && isObject(targetProp)\n                    && !isArray(sourceProp)\n                    && !isArray(targetProp)\n                    && !isDom(sourceProp)\n                    && !isDom(targetProp)\n                    && !isBuiltInObject(sourceProp)\n                    && !isBuiltInObject(targetProp)\n                    && !isPrimitive(sourceProp)\n                    && !isPrimitive(targetProp)\n                ) {\n                    // 如果需要递归覆盖，就递归调用merge\n                    merge(targetProp, sourceProp, overwrite);\n                }\n                else if (overwrite || !(key in target)) {\n                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n                    // NOTE，在 target[key] 不存在的时候也是直接覆盖\n                    target[key] = clone(source[key], true);\n                }\n            }\n        }\n\n        return target;\n    }\n\n    /**\n     * @param {Array} targetAndSources The first item is target, and the rests are source.\n     * @param {boolean} [overwrite=false]\n     * @return {*} target\n     */\n    function mergeAll(targetAndSources, overwrite) {\n        var result = targetAndSources[0];\n        for (var i = 1, len = targetAndSources.length; i < len; i++) {\n            result = merge(result, targetAndSources[i], overwrite);\n        }\n        return result;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @memberOf module:zrender/core/util\n     */\n    function extend(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overlay=false]\n     * @memberOf module:zrender/core/util\n     */\n    function defaults(target, source, overlay) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)\n                && (overlay ? source[key] != null : target[key] == null)\n            ) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    function createCanvas() {\n        return document.createElement('canvas');\n    }\n    // FIXME\n    var _ctx;\n    function getContext() {\n        if (!_ctx) {\n            // Use util.createCanvas instead of createCanvas\n            // because createCanvas may be overwritten in different environment\n            _ctx = util.createCanvas().getContext('2d');\n        }\n        return _ctx;\n    }\n\n    /**\n     * 查询数组中元素的index\n     * @memberOf module:zrender/core/util\n     */\n    function indexOf(array, value) {\n        if (array) {\n            if (array.indexOf) {\n                return array.indexOf(value);\n            }\n            for (var i = 0, len = array.length; i < len; i++) {\n                if (array[i] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * 构造类继承关系\n     *\n     * @memberOf module:zrender/core/util\n     * @param {Function} clazz 源类\n     * @param {Function} baseClazz 基类\n     */\n    function inherits(clazz, baseClazz) {\n        var clazzPrototype = clazz.prototype;\n        function F() {}\n        F.prototype = baseClazz.prototype;\n        clazz.prototype = new F();\n\n        for (var prop in clazzPrototype) {\n            clazz.prototype[prop] = clazzPrototype[prop];\n        }\n        clazz.prototype.constructor = clazz;\n        clazz.superClass = baseClazz;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Object|Function} target\n     * @param {Object|Function} sorce\n     * @param {boolean} overlay\n     */\n    function mixin(target, source, overlay) {\n        target = 'prototype' in target ? target.prototype : target;\n        source = 'prototype' in source ? source.prototype : source;\n\n        defaults(target, source, overlay);\n    }\n\n    /**\n     * Consider typed array.\n     * @param {Array|TypedArray} data\n     */\n    function isArrayLike(data) {\n        if (! data) {\n            return;\n        }\n        if (typeof data == 'string') {\n            return false;\n        }\n        return typeof data.length == 'number';\n    }\n\n    /**\n     * 数组或对象遍历\n     * @memberOf module:zrender/core/util\n     * @param {Object|Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     */\n    function each(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.forEach && obj.forEach === nativeForEach) {\n            obj.forEach(cb, context);\n        }\n        else if (obj.length === +obj.length) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                cb.call(context, obj[i], i, obj);\n            }\n        }\n        else {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    cb.call(context, obj[key], key, obj);\n                }\n            }\n        }\n    }\n\n    /**\n     * 数组映射\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function map(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.map && obj.map === nativeMap) {\n            return obj.map(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                result.push(cb.call(context, obj[i], i, obj));\n            }\n            return result;\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {Object} [memo]\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function reduce(obj, cb, memo, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.reduce && obj.reduce === nativeReduce) {\n            return obj.reduce(cb, memo, context);\n        }\n        else {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                memo = cb.call(context, memo, obj[i], i, obj);\n            }\n            return memo;\n        }\n    }\n\n    /**\n     * 数组过滤\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function filter(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.filter && obj.filter === nativeFilter) {\n            return obj.filter(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                if (cb.call(context, obj[i], i, obj)) {\n                    result.push(obj[i]);\n                }\n            }\n            return result;\n        }\n    }\n\n    /**\n     * 数组项查找\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function find(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        for (var i = 0, len = obj.length; i < len; i++) {\n            if (cb.call(context, obj[i], i, obj)) {\n                return obj[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @param {*} context\n     * @return {Function}\n     */\n    function bind(func, context) {\n        var args = nativeSlice.call(arguments, 2);\n        return function () {\n            return func.apply(context, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @return {Function}\n     */\n    function curry(func) {\n        var args = nativeSlice.call(arguments, 1);\n        return function () {\n            return func.apply(this, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isArray(value) {\n        return objToString.call(value) === '[object Array]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isString(value) {\n        return objToString.call(value) === '[object String]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isObject(value) {\n        // Avoid a V8 JIT bug in Chrome 19-20.\n        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n        var type = typeof value;\n        return type === 'function' || (!!value && type == 'object');\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isBuiltInObject(value) {\n        return !!BUILTIN_OBJECT[objToString.call(value)];\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isDom(value) {\n        return typeof value === 'object'\n            && typeof value.nodeType === 'number'\n            && typeof value.ownerDocument === 'object';\n    }\n\n    /**\n     * Whether is exactly NaN. Notice isNaN('a') returns true.\n     * @param {*} value\n     * @return {boolean}\n     */\n    function eqNaN(value) {\n        return value !== value;\n    }\n\n    /**\n     * If value1 is not null, then return value1, otherwise judget rest of values.\n     * Low performance.\n     * @memberOf module:zrender/core/util\n     * @return {*} Final value\n     */\n    function retrieve(values) {\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            if (arguments[i] != null) {\n                return arguments[i];\n            }\n        }\n    }\n\n    function retrieve2(value0, value1) {\n        return value0 != null\n            ? value0\n            : value1;\n    }\n\n    function retrieve3(value0, value1, value2) {\n        return value0 != null\n            ? value0\n            : value1 != null\n            ? value1\n            : value2;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} arr\n     * @param {number} startIndex\n     * @param {number} endIndex\n     * @return {Array}\n     */\n    function slice() {\n        return Function.call.apply(nativeSlice, arguments);\n    }\n\n    /**\n     * Normalize css liked array configuration\n     * e.g.\n     *  3 => [3, 3, 3, 3]\n     *  [4, 2] => [4, 2, 4, 2]\n     *  [4, 3, 2] => [4, 3, 2, 3]\n     * @param {number|Array.<number>} val\n     * @return {Array.<number>}\n     */\n    function normalizeCssArray(val) {\n        if (typeof (val) === 'number') {\n            return [val, val, val, val];\n        }\n        var len = val.length;\n        if (len === 2) {\n            // vertical | horizontal\n            return [val[0], val[1], val[0], val[1]];\n        }\n        else if (len === 3) {\n            // top | horizontal | bottom\n            return [val[0], val[1], val[2], val[1]];\n        }\n        return val;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {boolean} condition\n     * @param {string} message\n     */\n    function assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n\n    var primitiveKey = '__ec_primitive__';\n    /**\n     * Set an object as primitive to be ignored traversing children in clone or merge\n     */\n    function setAsPrimitive(obj) {\n        obj[primitiveKey] = true;\n    }\n\n    function isPrimitive(obj) {\n        return obj[primitiveKey];\n    }\n\n    /**\n     * @constructor\n     * @param {Object} obj Only apply `ownProperty`.\n     */\n    function HashMap(obj) {\n        obj && each(obj, function (value, key) {\n            this.set(key, value);\n        }, this);\n    }\n\n    // Add prefix to avoid conflict with Object.prototype.\n    var HASH_MAP_PREFIX = '_ec_';\n    var HASH_MAP_PREFIX_LENGTH = 4;\n\n    HashMap.prototype = {\n        constructor: HashMap,\n        // Do not provide `has` method to avoid defining what is `has`.\n        // (We usually treat `null` and `undefined` as the same, different\n        // from ES6 Map).\n        get: function (key) {\n            return this[HASH_MAP_PREFIX + key];\n        },\n        set: function (key, value) {\n            this[HASH_MAP_PREFIX + key] = value;\n            // Comparing with invocation chaining, `return value` is more commonly\n            // used in this case: `var someVal = map.set('a', genVal());`\n            return value;\n        },\n        // Although util.each can be performed on this hashMap directly, user\n        // should not use the exposed keys, who are prefixed.\n        each: function (cb, context) {\n            context !== void 0 && (cb = bind(cb, context));\n            for (var prefixedKey in this) {\n                this.hasOwnProperty(prefixedKey)\n                    && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n            }\n        },\n        // Do not use this method if performance sensitive.\n        removeKey: function (key) {\n            delete this[key];\n        }\n    };\n\n    function createHashMap(obj) {\n        return new HashMap(obj);\n    }\n\n    var util = {\n        inherits: inherits,\n        mixin: mixin,\n        clone: clone,\n        merge: merge,\n        mergeAll: mergeAll,\n        extend: extend,\n        defaults: defaults,\n        getContext: getContext,\n        createCanvas: createCanvas,\n        indexOf: indexOf,\n        slice: slice,\n        find: find,\n        isArrayLike: isArrayLike,\n        each: each,\n        map: map,\n        reduce: reduce,\n        filter: filter,\n        bind: bind,\n        curry: curry,\n        isArray: isArray,\n        isString: isString,\n        isObject: isObject,\n        isFunction: isFunction,\n        isBuiltInObject: isBuiltInObject,\n        isDom: isDom,\n        eqNaN: eqNaN,\n        retrieve: retrieve,\n        retrieve2: retrieve2,\n        retrieve3: retrieve3,\n        assert: assert,\n        setAsPrimitive: setAsPrimitive,\n        createHashMap: createHashMap,\n        normalizeCssArray: normalizeCssArray,\n        noop: function () {}\n    };\n    module.exports = util;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/util.js\n// module id = 606\n// module chunks = 0 1 2","// Enable DEV mode when using source code without build. which has no __DEV__ variable\n// In build process 'typeof __DEV__' will be replace with 'boolean'\n// So this code will be removed or disabled anyway after built.\nif (typeof __DEV__ === 'undefined') {\n    // In browser\n    if (typeof window !== 'undefined') {\n        window.__DEV__ = true;\n    }\n    // In node\n    else if (typeof global !== 'undefined') {\n        global.__DEV__ = true;\n    }\n}\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\n\n/**\n * @module echarts\n */\n\n\n    var env = require('zrender/lib/core/env');\n\n    var GlobalModel = require('./model/Global');\n    var ExtensionAPI = require('./ExtensionAPI');\n    var CoordinateSystemManager = require('./CoordinateSystem');\n    var OptionManager = require('./model/OptionManager');\n\n    var ComponentModel = require('./model/Component');\n    var SeriesModel = require('./model/Series');\n\n    var ComponentView = require('./view/Component');\n    var ChartView = require('./view/Chart');\n    var graphic = require('./util/graphic');\n    var modelUtil = require('./util/model');\n    var throttle = require('./util/throttle');\n\n    var zrender = require('zrender');\n    var zrUtil = require('zrender/lib/core/util');\n    var colorTool = require('zrender/lib/tool/color');\n    var Eventful = require('zrender/lib/mixin/Eventful');\n    var timsort = require('zrender/lib/core/timsort');\n\n    var each = zrUtil.each;\n    var parseClassType = ComponentModel.parseClassType;\n\n    var PRIORITY_PROCESSOR_FILTER = 1000;\n    var PRIORITY_PROCESSOR_STATISTIC = 5000;\n\n\n    var PRIORITY_VISUAL_LAYOUT = 1000;\n    var PRIORITY_VISUAL_GLOBAL = 2000;\n    var PRIORITY_VISUAL_CHART = 3000;\n    var PRIORITY_VISUAL_COMPONENT = 4000;\n    // FIXME\n    // necessary?\n    var PRIORITY_VISUAL_BRUSH = 5000;\n\n    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n    // where they must not be invoked nestedly, except the only case: invoke\n    // dispatchAction with updateMethod \"none\" in main process.\n    // This flag is used to carry out this rule.\n    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n    var IN_MAIN_PROCESS = '__flagInMainProcess';\n    var HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\n    var OPTION_UPDATED = '__optionUpdated';\n    var ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\n    function createRegisterEventWithLowercaseName(method) {\n        return function (eventName, handler, context) {\n            // Event name is all lowercase\n            eventName = eventName && eventName.toLowerCase();\n            Eventful.prototype[method].call(this, eventName, handler, context);\n        };\n    }\n\n    /**\n     * @module echarts~MessageCenter\n     */\n    function MessageCenter() {\n        Eventful.call(this);\n    }\n    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\n    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\n    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\n    zrUtil.mixin(MessageCenter, Eventful);\n\n    /**\n     * @module echarts~ECharts\n     */\n    function ECharts(dom, theme, opts) {\n        opts = opts || {};\n\n        // Get theme by name\n        if (typeof theme === 'string') {\n            theme = themeStorage[theme];\n        }\n\n        /**\n         * @type {string}\n         */\n        this.id;\n        /**\n         * Group id\n         * @type {string}\n         */\n        this.group;\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        this._dom = dom;\n        /**\n         * @type {module:zrender/ZRender}\n         * @private\n         */\n        var zr = this._zr = zrender.init(dom, {\n            renderer: opts.renderer || 'canvas',\n            devicePixelRatio: opts.devicePixelRatio,\n            width: opts.width,\n            height: opts.height\n        });\n\n        /**\n         * Expect 60 pfs.\n         * @type {Function}\n         * @private\n         */\n        this._throttledZrFlush = throttle.throttle(zrUtil.bind(zr.flush, zr), 17);\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._theme = zrUtil.clone(theme);\n\n        /**\n         * @type {Array.<module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * @type {module:echarts/CoordinateSystem}\n         * @private\n         */\n        this._coordSysMgr = new CoordinateSystemManager();\n\n        /**\n         * @type {module:echarts/ExtensionAPI}\n         * @private\n         */\n        this._api = createExtensionAPI(this);\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:echarts~MessageCenter}\n         * @private\n         */\n        this._messageCenter = new MessageCenter();\n\n        // Init mouse events\n        this._initEvents();\n\n        // In case some people write `window.onresize = chart.resize`\n        this.resize = zrUtil.bind(this.resize, this);\n\n        // Can't dispatch action during rendering procedure\n        this._pendingActions = [];\n        // Sort on demand\n        function prioritySortFunc(a, b) {\n            return a.prio - b.prio;\n        }\n        timsort(visualFuncs, prioritySortFunc);\n        timsort(dataProcessorFuncs, prioritySortFunc);\n\n        zr.animation.on('frame', this._onframe, this);\n\n        // ECharts instance can be used as value.\n        zrUtil.setAsPrimitive(this);\n    }\n\n    var echartsProto = ECharts.prototype;\n\n    echartsProto._onframe = function () {\n        // Lazy update\n        if (this[OPTION_UPDATED]) {\n            var silent = this[OPTION_UPDATED].silent;\n\n            this[IN_MAIN_PROCESS] = true;\n\n            updateMethods.prepareAndUpdate.call(this);\n\n            this[IN_MAIN_PROCESS] = false;\n\n            this[OPTION_UPDATED] = false;\n\n            flushPendingActions.call(this, silent);\n\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n    /**\n     * @return {HTMLElement}\n     */\n    echartsProto.getDom = function () {\n        return this._dom;\n    };\n\n    /**\n     * @return {module:zrender~ZRender}\n     */\n    echartsProto.getZr = function () {\n        return this._zr;\n    };\n\n    /**\n     * Usage:\n     * chart.setOption(option, notMerge, lazyUpdate);\n     * chart.setOption(option, {\n     *     notMerge: ...,\n     *     lazyUpdate: ...,\n     *     silent: ...\n     * });\n     *\n     * @param {Object} option\n     * @param {Object|boolean} [opts] opts or notMerge.\n     * @param {boolean} [opts.notMerge=false]\n     * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n     */\n    echartsProto.setOption = function (option, notMerge, lazyUpdate) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\n        }\n\n        var silent;\n        if (zrUtil.isObject(notMerge)) {\n            lazyUpdate = notMerge.lazyUpdate;\n            silent = notMerge.silent;\n            notMerge = notMerge.notMerge;\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        if (!this._model || notMerge) {\n            var optionManager = new OptionManager(this._api);\n            var theme = this._theme;\n            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n            ecModel.init(null, null, theme, optionManager);\n        }\n\n        this._model.setOption(option, optionPreprocessorFuncs);\n\n        if (lazyUpdate) {\n            this[OPTION_UPDATED] = {silent: silent};\n            this[IN_MAIN_PROCESS] = false;\n        }\n        else {\n            updateMethods.prepareAndUpdate.call(this);\n            // Ensure zr refresh sychronously, and then pixel in canvas can be\n            // fetched after `setOption`.\n            this._zr.flush();\n\n            this[OPTION_UPDATED] = false;\n            this[IN_MAIN_PROCESS] = false;\n\n            flushPendingActions.call(this, silent);\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n\n    /**\n     * @DEPRECATED\n     */\n    echartsProto.setTheme = function () {\n        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n    };\n\n    /**\n     * @return {module:echarts/model/Global}\n     */\n    echartsProto.getModel = function () {\n        return this._model;\n    };\n\n    /**\n     * @return {Object}\n     */\n    echartsProto.getOption = function () {\n        return this._model && this._model.getOption();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getWidth = function () {\n        return this._zr.getWidth();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getHeight = function () {\n        return this._zr.getHeight();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getDevicePixelRatio = function () {\n        return this._zr.painter.dpr || window.devicePixelRatio || 1;\n    };\n\n    /**\n     * Get canvas which has all thing rendered\n     * @param {Object} opts\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getRenderedCanvas = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        opts = opts || {};\n        opts.pixelRatio = opts.pixelRatio || 1;\n        opts.backgroundColor = opts.backgroundColor\n            || this._model.get('backgroundColor');\n        var zr = this._zr;\n        var list = zr.storage.getDisplayList();\n        // Stop animations\n        zrUtil.each(list, function (el) {\n            el.stopAnimation(true);\n        });\n        return zr.painter.getRenderedCanvas(opts);\n    };\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     * @param {string} [opts.excludeComponents]\n     */\n    echartsProto.getDataURL = function (opts) {\n        opts = opts || {};\n        var excludeComponents = opts.excludeComponents;\n        var ecModel = this._model;\n        var excludesComponentViews = [];\n        var self = this;\n\n        each(excludeComponents, function (componentType) {\n            ecModel.eachComponent({\n                mainType: componentType\n            }, function (component) {\n                var view = self._componentsMap[component.__viewId];\n                if (!view.group.ignore) {\n                    excludesComponentViews.push(view);\n                    view.group.ignore = true;\n                }\n            });\n        });\n\n        var url = this.getRenderedCanvas(opts).toDataURL(\n            'image/' + (opts && opts.type || 'png')\n        );\n\n        each(excludesComponentViews, function (view) {\n            view.group.ignore = false;\n        });\n        return url;\n    };\n\n\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getConnectedDataURL = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        var groupId = this.group;\n        var mathMin = Math.min;\n        var mathMax = Math.max;\n        var MAX_NUMBER = Infinity;\n        if (connectedGroups[groupId]) {\n            var left = MAX_NUMBER;\n            var top = MAX_NUMBER;\n            var right = -MAX_NUMBER;\n            var bottom = -MAX_NUMBER;\n            var canvasList = [];\n            var dpr = (opts && opts.pixelRatio) || 1;\n\n            zrUtil.each(instances, function (chart, id) {\n                if (chart.group === groupId) {\n                    var canvas = chart.getRenderedCanvas(\n                        zrUtil.clone(opts)\n                    );\n                    var boundingRect = chart.getDom().getBoundingClientRect();\n                    left = mathMin(boundingRect.left, left);\n                    top = mathMin(boundingRect.top, top);\n                    right = mathMax(boundingRect.right, right);\n                    bottom = mathMax(boundingRect.bottom, bottom);\n                    canvasList.push({\n                        dom: canvas,\n                        left: boundingRect.left,\n                        top: boundingRect.top\n                    });\n                }\n            });\n\n            left *= dpr;\n            top *= dpr;\n            right *= dpr;\n            bottom *= dpr;\n            var width = right - left;\n            var height = bottom - top;\n            var targetCanvas = zrUtil.createCanvas();\n            targetCanvas.width = width;\n            targetCanvas.height = height;\n            var zr = zrender.init(targetCanvas);\n\n            each(canvasList, function (item) {\n                var img = new graphic.Image({\n                    style: {\n                        x: item.left * dpr - left,\n                        y: item.top * dpr - top,\n                        image: item.dom\n                    }\n                });\n                zr.add(img);\n            });\n            zr.refreshImmediately();\n\n            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n        }\n        else {\n            return this.getDataURL(opts);\n        }\n    };\n\n    /**\n     * Convert from logical coordinate system to pixel coordinate system.\n     * See CoordinateSystem#convertToPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId, geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n\n    /**\n     * Convert from pixel coordinate system to logical coordinate system.\n     * See CoordinateSystem#convertFromPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\n    function doConvertPixel(methodName, finder, value) {\n        var ecModel = this._model;\n        var coordSysList = this._coordSysMgr.getCoordinateSystems();\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        for (var i = 0; i < coordSysList.length; i++) {\n            var coordSys = coordSysList[i];\n            if (coordSys[methodName]\n                && (result = coordSys[methodName](ecModel, finder, value)) != null\n            ) {\n                return result;\n            }\n        }\n\n        if (__DEV__) {\n            console.warn(\n                'No coordinate system that supports ' + methodName + ' found by the given finder.'\n            );\n        }\n    }\n\n    /**\n     * Is the specified coordinate systems or components contain the given pixel point.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {boolean} result\n     */\n    echartsProto.containPixel = function (finder, value) {\n        var ecModel = this._model;\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        zrUtil.each(finder, function (models, key) {\n            key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n                var coordSys = model.coordinateSystem;\n                if (coordSys && coordSys.containPoint) {\n                    result |= !!coordSys.containPoint(value);\n                }\n                else if (key === 'seriesModels') {\n                    var view = this._chartsMap[model.__viewId];\n                    if (view && view.containPoint) {\n                        result |= view.containPoint(value, model);\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.warn(key + ': ' + (view\n                                ? 'The found component do not support containPoint.'\n                                : 'No view mapping to the found component.'\n                            ));\n                        }\n                    }\n                }\n                else {\n                    if (__DEV__) {\n                        console.warn(key + ': containPoint is not supported');\n                    }\n                }\n            }, this);\n        }, this);\n\n        return !!result;\n    };\n\n    /**\n     * Get visual from series or data.\n     * @param {string|Object} finder\n     *        If string, e.g., 'series', means {seriesIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            dataIndex / dataIndexInside\n     *        }\n     *        If dataIndex is not specified, series visual will be fetched,\n     *        but not data item visual.\n     *        If all of seriesIndex, seriesId, seriesName are not specified,\n     *        visual will be fetched from first series.\n     * @param {string} visualType 'color', 'symbol', 'symbolSize'\n     */\n    echartsProto.getVisual = function (finder, visualType) {\n        var ecModel = this._model;\n\n        finder = modelUtil.parseFinder(ecModel, finder, {defaultMainType: 'series'});\n\n        var seriesModel = finder.seriesModel;\n\n        if (__DEV__) {\n            if (!seriesModel) {\n                console.warn('There is no specified seires model');\n            }\n        }\n\n        var data = seriesModel.getData();\n\n        var dataIndexInside = finder.hasOwnProperty('dataIndexInside')\n            ? finder.dataIndexInside\n            : finder.hasOwnProperty('dataIndex')\n            ? data.indexOfRawIndex(finder.dataIndex)\n            : null;\n\n        return dataIndexInside != null\n            ? data.getItemVisual(dataIndexInside, visualType)\n            : data.getVisual(visualType);\n    };\n\n    /**\n     * Get view of corresponding component model\n     * @param  {module:echarts/model/Component} componentModel\n     * @return {module:echarts/view/Component}\n     */\n    echartsProto.getViewOfComponentModel = function (componentModel) {\n        return this._componentsMap[componentModel.__viewId];\n    };\n\n    /**\n     * Get view of corresponding series model\n     * @param  {module:echarts/model/Series} seriesModel\n     * @return {module:echarts/view/Chart}\n     */\n    echartsProto.getViewOfSeriesModel = function (seriesModel) {\n        return this._chartsMap[seriesModel.__viewId];\n    };\n\n\n    var updateMethods = {\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        update: function (payload) {\n            // console.profile && console.profile('update');\n\n            var ecModel = this._model;\n            var api = this._api;\n            var coordSysMgr = this._coordSysMgr;\n            var zr = this._zr;\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            // Fixme First time update ?\n            ecModel.restoreData();\n\n            // TODO\n            // Save total ecModel here for undo/redo (after restoring data and before processing data).\n            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n\n            // Create new coordinate system each update\n            // In LineView may save the old coordinate system and use it to get the orignal point\n            coordSysMgr.create(this._model, this._api);\n\n            processData.call(this, ecModel, api);\n\n            stackSeriesData.call(this, ecModel);\n\n            coordSysMgr.update(ecModel, api);\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            doRender.call(this, ecModel, payload);\n\n            // Set background\n            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n\n            var painter = zr.painter;\n            // TODO all use clearColor ?\n            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n                zr.configLayer(0, {\n                    clearColor: backgroundColor\n                });\n            }\n            else {\n                // In IE8\n                if (!env.canvasSupported) {\n                    var colorArr = colorTool.parse(backgroundColor);\n                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\n                    if (colorArr[3] === 0) {\n                        backgroundColor = 'transparent';\n                    }\n                }\n                if (backgroundColor.colorStops || backgroundColor.image) {\n                    // Gradient background\n                    // FIXME Fixed layer？\n                    zr.configLayer(0, {\n                        clearColor: backgroundColor\n                    });\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n\n                    this._dom.style.background = 'transparent';\n                }\n                else {\n                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n                        zr.configLayer(0, {\n                            clearColor: null\n                        });\n                    }\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n\n                    this._dom.style.background = backgroundColor;\n                }\n            }\n\n            each(postUpdateFuncs, function (func) {\n                func(ecModel, api);\n            });\n\n            // console.profile && console.profileEnd('update');\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateView: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateVisual: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload, true);\n\n            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateLayout: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            doLayout.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        prepareAndUpdate: function (payload) {\n            var ecModel = this._model;\n\n            prepareView.call(this, 'component', ecModel);\n\n            prepareView.call(this, 'chart', ecModel);\n\n            updateMethods.update.call(this, payload);\n        }\n    };\n\n    /**\n     * @private\n     */\n    function updateDirectly(ecIns, method, payload, mainType, subType) {\n        var ecModel = ecIns._model;\n\n        // broadcast\n        if (!mainType) {\n            each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n            return;\n        }\n\n        var query = {};\n        query[mainType + 'Id'] = payload[mainType + 'Id'];\n        query[mainType + 'Index'] = payload[mainType + 'Index'];\n        query[mainType + 'Name'] = payload[mainType + 'Name'];\n\n        var condition = {mainType: mainType, query: query};\n        subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n        // If dispatchAction before setOption, do nothing.\n        ecModel && ecModel.eachComponent(condition, function (model, index) {\n            callView(ecIns[\n                mainType === 'series' ? '_chartsMap' : '_componentsMap'\n            ][model.__viewId]);\n        }, ecIns);\n\n        function callView(view) {\n            view && view.__alive && view[method] && view[method](\n                view.__model, ecModel, ecIns._api, payload\n            );\n        }\n    }\n\n    /**\n     * Resize the chart\n     * @param {Object} opts\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @param {boolean} [opts.silent=false]\n     */\n    echartsProto.resize = function (opts) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        this._zr.resize(opts);\n\n        var optionChanged = this._model && this._model.resetOption('media');\n        var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n\n        updateMethods[updateMethod].call(this);\n\n        // Resize loading effect\n        this._loadingFX && this._loadingFX.resize();\n\n        this[IN_MAIN_PROCESS] = false;\n\n        var silent = opts && opts.silent;\n\n        flushPendingActions.call(this, silent);\n\n        triggerUpdatedEvent.call(this, silent);\n    };\n\n    /**\n     * Show loading effect\n     * @param  {string} [name='default']\n     * @param  {Object} [cfg]\n     */\n    echartsProto.showLoading = function (name, cfg) {\n        if (zrUtil.isObject(name)) {\n            cfg = name;\n            name = '';\n        }\n        name = name || 'default';\n\n        this.hideLoading();\n        if (!loadingEffects[name]) {\n            if (__DEV__) {\n                console.warn('Loading effects ' + name + ' not exists.');\n            }\n            return;\n        }\n        var el = loadingEffects[name](this._api, cfg);\n        var zr = this._zr;\n        this._loadingFX = el;\n\n        zr.add(el);\n    };\n\n    /**\n     * Hide loading effect\n     */\n    echartsProto.hideLoading = function () {\n        this._loadingFX && this._zr.remove(this._loadingFX);\n        this._loadingFX = null;\n    };\n\n    /**\n     * @param {Object} eventObj\n     * @return {Object}\n     */\n    echartsProto.makeActionFromEvent = function (eventObj) {\n        var payload = zrUtil.extend({}, eventObj);\n        payload.type = eventActionMap[eventObj.type];\n        return payload;\n    };\n\n    /**\n     * @pubilc\n     * @param {Object} payload\n     * @param {string} [payload.type] Action type\n     * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n     * @param {boolean} [opt.silent=false] Whether trigger events.\n     * @param {boolean} [opt.flush=undefined]\n     *                  true: Flush immediately, and then pixel in canvas can be fetched\n     *                      immediately. Caution: it might affect performance.\n     *                  false: Not not flush.\n     *                  undefined: Auto decide whether perform flush.\n     */\n    echartsProto.dispatchAction = function (payload, opt) {\n        if (!zrUtil.isObject(opt)) {\n            opt = {silent: !!opt};\n        }\n\n        if (!actions[payload.type]) {\n            return;\n        }\n\n        // Avoid dispatch action before setOption. Especially in `connect`.\n        if (!this._model) {\n            return;\n        }\n\n        // May dispatchAction in rendering procedure\n        if (this[IN_MAIN_PROCESS]) {\n            this._pendingActions.push(payload);\n            return;\n        }\n\n        doDispatchAction.call(this, payload, opt.silent);\n\n        if (opt.flush) {\n            this._zr.flush(true);\n        }\n        else if (opt.flush !== false && env.browser.weChat) {\n            // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n            // hang when sliding page (on touch event), which cause that zr does not\n            // refresh util user interaction finished, which is not expected.\n            // But `dispatchAction` may be called too frequently when pan on touch\n            // screen, which impacts performance if do not throttle them.\n            this._throttledZrFlush();\n        }\n\n        flushPendingActions.call(this, opt.silent);\n\n        triggerUpdatedEvent.call(this, opt.silent);\n    };\n\n    function doDispatchAction(payload, silent) {\n        var payloadType = payload.type;\n        var escapeConnect = payload.escapeConnect;\n        var actionWrap = actions[payloadType];\n        var actionInfo = actionWrap.actionInfo;\n\n        var cptType = (actionInfo.update || 'update').split(':');\n        var updateMethod = cptType.pop();\n        cptType = cptType[0] != null && parseClassType(cptType[0]);\n\n        this[IN_MAIN_PROCESS] = true;\n\n        var payloads = [payload];\n        var batched = false;\n        // Batch action\n        if (payload.batch) {\n            batched = true;\n            payloads = zrUtil.map(payload.batch, function (item) {\n                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n                item.batch = null;\n                return item;\n            });\n        }\n\n        var eventObjBatch = [];\n        var eventObj;\n        var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n\n        each(payloads, function (batchItem) {\n            // Action can specify the event by return it.\n            eventObj = actionWrap.action(batchItem, this._model, this._api);\n            // Emit event outside\n            eventObj = eventObj || zrUtil.extend({}, batchItem);\n            // Convert type to eventType\n            eventObj.type = actionInfo.event || eventObj.type;\n            eventObjBatch.push(eventObj);\n\n            // light update does not perform data process, layout and visual.\n            if (isHighDown) {\n                // method, payload, mainType, subType\n                updateDirectly(this, updateMethod, batchItem, 'series');\n            }\n            else if (cptType) {\n                updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n            }\n        }, this);\n\n        if (updateMethod !== 'none' && !isHighDown && !cptType) {\n            // Still dirty\n            if (this[OPTION_UPDATED]) {\n                // FIXME Pass payload ?\n                updateMethods.prepareAndUpdate.call(this, payload);\n                this[OPTION_UPDATED] = false;\n            }\n            else {\n                updateMethods[updateMethod].call(this, payload);\n            }\n        }\n\n        // Follow the rule of action batch\n        if (batched) {\n            eventObj = {\n                type: actionInfo.event || payloadType,\n                escapeConnect: escapeConnect,\n                batch: eventObjBatch\n            };\n        }\n        else {\n            eventObj = eventObjBatch[0];\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n    }\n\n    function flushPendingActions(silent) {\n        var pendingActions = this._pendingActions;\n        while (pendingActions.length) {\n            var payload = pendingActions.shift();\n            doDispatchAction.call(this, payload, silent);\n        }\n    }\n\n    function triggerUpdatedEvent(silent) {\n        !silent && this.trigger('updated');\n    }\n\n    /**\n     * Register event\n     * @method\n     */\n    echartsProto.on = createRegisterEventWithLowercaseName('on');\n    echartsProto.off = createRegisterEventWithLowercaseName('off');\n    echartsProto.one = createRegisterEventWithLowercaseName('one');\n\n    /**\n     * @param {string} methodName\n     * @private\n     */\n    function invokeUpdateMethod(methodName, ecModel, payload) {\n        var api = this._api;\n\n        // Update all components\n        each(this._componentsViews, function (component) {\n            var componentModel = component.__model;\n            component[methodName](componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, component);\n        }, this);\n\n        // Upate all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chart = this._chartsMap[seriesModel.__viewId];\n            chart[methodName](seriesModel, ecModel, api, payload);\n\n            updateZ(seriesModel, chart);\n\n            updateProgressiveAndBlend(seriesModel, chart);\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Post render\n        each(postUpdateFuncs, function (func) {\n            func(ecModel, api);\n        });\n    }\n\n    /**\n     * Prepare view instances of charts and components\n     * @param  {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function prepareView(type, ecModel) {\n        var isComponent = type === 'component';\n        var viewList = isComponent ? this._componentsViews : this._chartsViews;\n        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n        var zr = this._zr;\n\n        for (var i = 0; i < viewList.length; i++) {\n            viewList[i].__alive = false;\n        }\n\n        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n            if (isComponent) {\n                if (componentType === 'series') {\n                    return;\n                }\n            }\n            else {\n                model = componentType;\n            }\n\n            // Consider: id same and type changed.\n            var viewId = '_ec_' + model.id + '_' + model.type;\n            var view = viewMap[viewId];\n            if (!view) {\n                var classType = parseClassType(model.type);\n                var Clazz = isComponent\n                    ? ComponentView.getClass(classType.main, classType.sub)\n                    : ChartView.getClass(classType.sub);\n                if (Clazz) {\n                    view = new Clazz();\n                    view.init(ecModel, this._api);\n                    viewMap[viewId] = view;\n                    viewList.push(view);\n                    zr.add(view.group);\n                }\n                else {\n                    // Error\n                    return;\n                }\n            }\n\n            model.__viewId = view.__id = viewId;\n            view.__alive = true;\n            view.__model = model;\n            view.group.__ecComponentInfo = {\n                mainType: model.mainType,\n                index: model.componentIndex\n            };\n        }, this);\n\n        for (var i = 0; i < viewList.length;) {\n            var view = viewList[i];\n            if (!view.__alive) {\n                zr.remove(view.group);\n                view.dispose(ecModel, this._api);\n                viewList.splice(i, 1);\n                delete viewMap[view.__id];\n                view.__id = view.group.__ecComponentInfo = null;\n            }\n            else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Processor data in each series\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function processData(ecModel, api) {\n        each(dataProcessorFuncs, function (process) {\n            process.func(ecModel, api);\n        });\n    }\n\n    /**\n     * @private\n     */\n    function stackSeriesData(ecModel) {\n        var stackedDataMap = {};\n        ecModel.eachSeries(function (series) {\n            var stack = series.get('stack');\n            var data = series.getData();\n            if (stack && data.type === 'list') {\n                var previousStack = stackedDataMap[stack];\n                // Avoid conflict with Object.prototype\n                if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n                    data.stackedOn = previousStack;\n                }\n                stackedDataMap[stack] = data;\n            }\n        });\n    }\n\n    /**\n     * Layout before each chart render there series, special visual encoding stage\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doLayout(ecModel, payload) {\n        var api = this._api;\n        each(visualFuncs, function (visual) {\n            if (visual.isLayout) {\n                visual.func(ecModel, api, payload);\n            }\n        });\n    }\n\n    /**\n     * Encode visual infomation from data after data processing\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @param {object} layout\n     * @param {boolean} [excludesLayout]\n     * @private\n     */\n    function doVisualEncoding(ecModel, payload, excludesLayout) {\n        var api = this._api;\n        ecModel.clearColorPalette();\n        ecModel.eachSeries(function (seriesModel) {\n            seriesModel.clearColorPalette();\n        });\n        each(visualFuncs, function (visual) {\n            (!excludesLayout || !visual.isLayout)\n                && visual.func(ecModel, api, payload);\n        });\n    }\n\n    /**\n     * Render each chart and component\n     * @private\n     */\n    function doRender(ecModel, payload) {\n        var api = this._api;\n        // Render all components\n        each(this._componentsViews, function (componentView) {\n            var componentModel = componentView.__model;\n            componentView.render(componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, componentView);\n        }, this);\n\n        each(this._chartsViews, function (chart) {\n            chart.__alive = false;\n        }, this);\n\n        // Render all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chartView = this._chartsMap[seriesModel.__viewId];\n            chartView.__alive = true;\n            chartView.render(seriesModel, ecModel, api, payload);\n\n            chartView.group.silent = !!seriesModel.get('silent');\n\n            updateZ(seriesModel, chartView);\n\n            updateProgressiveAndBlend(seriesModel, chartView);\n\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Remove groups of unrendered charts\n        each(this._chartsViews, function (chart) {\n            if (!chart.__alive) {\n                chart.remove(ecModel, api);\n            }\n        }, this);\n    }\n\n    var MOUSE_EVENT_NAMES = [\n        'click', 'dblclick', 'mouseover', 'mouseout', 'mousemove',\n        'mousedown', 'mouseup', 'globalout', 'contextmenu'\n    ];\n    /**\n     * @private\n     */\n    echartsProto._initEvents = function () {\n        each(MOUSE_EVENT_NAMES, function (eveName) {\n            this._zr.on(eveName, function (e) {\n                var ecModel = this.getModel();\n                var el = e.target;\n                var params;\n\n                // no e.target when 'globalout'.\n                if (eveName === 'globalout') {\n                    params = {};\n                }\n                else if (el && el.dataIndex != null) {\n                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                    params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n                }\n                // If element has custom eventData of components\n                else if (el && el.eventData) {\n                    params = zrUtil.extend({}, el.eventData);\n                }\n\n                if (params) {\n                    params.event = e;\n                    params.type = eveName;\n                    this.trigger(eveName, params);\n                }\n\n            }, this);\n        }, this);\n\n        each(eventActionMap, function (actionType, eventType) {\n            this._messageCenter.on(eventType, function (event) {\n                this.trigger(eventType, event);\n            }, this);\n        }, this);\n    };\n\n    /**\n     * @return {boolean}\n     */\n    echartsProto.isDisposed = function () {\n        return this._disposed;\n    };\n\n    /**\n     * Clear\n     */\n    echartsProto.clear = function () {\n        this.setOption({ series: [] }, true);\n    };\n\n    /**\n     * Dispose instance\n     */\n    echartsProto.dispose = function () {\n        if (this._disposed) {\n            if (__DEV__) {\n                console.warn('Instance ' + this.id + ' has been disposed');\n            }\n            return;\n        }\n        this._disposed = true;\n\n        var api = this._api;\n        var ecModel = this._model;\n\n        each(this._componentsViews, function (component) {\n            component.dispose(ecModel, api);\n        });\n        each(this._chartsViews, function (chart) {\n            chart.dispose(ecModel, api);\n        });\n\n        // Dispose after all views disposed\n        this._zr.dispose();\n\n        delete instances[this.id];\n    };\n\n    zrUtil.mixin(ECharts, Eventful);\n\n    function updateHoverLayerStatus(zr, ecModel) {\n        var storage = zr.storage;\n        var elCount = 0;\n        storage.traverse(function (el) {\n            if (!el.isGroup) {\n                elCount++;\n            }\n        });\n        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n            storage.traverse(function (el) {\n                if (!el.isGroup) {\n                    el.useHoverLayer = true;\n                }\n            });\n        }\n    }\n\n    /**\n     * Update chart progressive and blend.\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateProgressiveAndBlend(seriesModel, chartView) {\n        // Progressive configuration\n        var elCount = 0;\n        chartView.group.traverse(function (el) {\n            if (el.type !== 'group' && !el.ignore) {\n                elCount++;\n            }\n        });\n        var frameDrawNum = +seriesModel.get('progressive');\n        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n        if (needProgressive) {\n            chartView.group.traverse(function (el) {\n                // FIXME marker and other components\n                if (!el.isGroup) {\n                    el.progressive = needProgressive ?\n                        Math.floor(elCount++ / frameDrawNum) : -1;\n                    if (needProgressive) {\n                        el.stopAnimation(true);\n                    }\n                }\n            });\n        }\n\n        // Blend configration\n        var blendMode = seriesModel.get('blendMode') || null;\n        if (__DEV__) {\n            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n                console.warn('Only canvas support blendMode');\n            }\n        }\n        chartView.group.traverse(function (el) {\n            // FIXME marker and other components\n            if (!el.isGroup) {\n                el.setStyle('blend', blendMode);\n            }\n        });\n    }\n\n    /**\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateZ(model, view) {\n        var z = model.get('z');\n        var zlevel = model.get('zlevel');\n        // Set z and zlevel\n        view.group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n            }\n        });\n    }\n\n    function createExtensionAPI(ecInstance) {\n        var coordSysMgr = ecInstance._coordSysMgr;\n        return zrUtil.extend(new ExtensionAPI(ecInstance), {\n            // Inject methods\n            getCoordinateSystems: zrUtil.bind(\n                coordSysMgr.getCoordinateSystems, coordSysMgr\n            ),\n            getComponentByElement: function (el) {\n                while (el) {\n                    var modelInfo = el.__ecComponentInfo;\n                    if (modelInfo != null) {\n                        return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n                    }\n                    el = el.parent;\n                }\n            }\n        });\n    }\n\n    /**\n     * @type {Object} key: actionType.\n     * @inner\n     */\n    var actions = {};\n\n    /**\n     * Map eventType to actionType\n     * @type {Object}\n     */\n    var eventActionMap = {};\n\n    /**\n     * Data processor functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var dataProcessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var optionPreprocessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var postUpdateFuncs = [];\n\n    /**\n     * Visual encoding functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var visualFuncs = [];\n    /**\n     * Theme storage\n     * @type {Object.<key, Object>}\n     */\n    var themeStorage = {};\n    /**\n     * Loading effects\n     */\n    var loadingEffects = {};\n\n\n    var instances = {};\n    var connectedGroups = {};\n\n    var idBase = new Date() - 0;\n    var groupIdBase = new Date() - 0;\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n\n    /**\n     * @alias module:echarts\n     */\n    var echarts = {\n        /**\n         * @type {number}\n         */\n        version: '3.7.0',\n        dependencies: {\n            zrender: '3.6.0'\n        }\n    };\n\n    function enableConnect(chart) {\n        var STATUS_PENDING = 0;\n        var STATUS_UPDATING = 1;\n        var STATUS_UPDATED = 2;\n        var STATUS_KEY = '__connectUpdateStatus';\n\n        function updateConnectedChartsStatus(charts, status) {\n            for (var i = 0; i < charts.length; i++) {\n                var otherChart = charts[i];\n                otherChart[STATUS_KEY] = status;\n            }\n        }\n\n        zrUtil.each(eventActionMap, function (actionType, eventType) {\n            chart._messageCenter.on(eventType, function (event) {\n                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n                    if (event && event.escapeConnect) {\n                        return;\n                    }\n\n                    var action = chart.makeActionFromEvent(event);\n                    var otherCharts = [];\n\n                    zrUtil.each(instances, function (otherChart) {\n                        if (otherChart !== chart && otherChart.group === chart.group) {\n                            otherCharts.push(otherChart);\n                        }\n                    });\n\n                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n                    each(otherCharts, function (otherChart) {\n                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n                            otherChart.dispatchAction(action);\n                        }\n                    });\n                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n                }\n            });\n        });\n    }\n\n    /**\n     * @param {HTMLElement} dom\n     * @param {Object} [theme]\n     * @param {Object} opts\n     * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n     * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n     * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n     *                              Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n     *                               Can be 'auto' (the same as null/undefined)\n     */\n    echarts.init = function (dom, theme, opts) {\n        if (__DEV__) {\n            // Check version\n            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\n                throw new Error(\n                    'ZRender ' + zrender.version\n                    + ' is too old for ECharts ' + echarts.version\n                    + '. Current version need ZRender '\n                    + echarts.dependencies.zrender + '+'\n                );\n            }\n\n            if (!dom) {\n                throw new Error('Initialize failed: invalid dom.');\n            }\n        }\n\n        var existInstance = echarts.getInstanceByDom(dom);\n        if (existInstance) {\n            if (__DEV__) {\n                console.warn('There is a chart instance already initialized on the dom.');\n            }\n            return existInstance;\n        }\n\n        if (__DEV__) {\n            if (zrUtil.isDom(dom)\n                && dom.nodeName.toUpperCase() !== 'CANVAS'\n                && (\n                    (!dom.clientWidth && (!opts || opts.width == null))\n                    || (!dom.clientHeight && (!opts || opts.height == null))\n                )\n            ) {\n                console.warn('Can\\'t get dom width or height');\n            }\n        }\n\n        var chart = new ECharts(dom, theme, opts);\n        chart.id = 'ec_' + idBase++;\n        instances[chart.id] = chart;\n\n        if (dom.setAttribute) {\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n        }\n        else {\n            dom[DOM_ATTRIBUTE_KEY] = chart.id;\n        }\n\n        enableConnect(chart);\n\n        return chart;\n    };\n\n    /**\n     * @return {string|Array.<module:echarts~ECharts>} groupId\n     */\n    echarts.connect = function (groupId) {\n        // Is array of charts\n        if (zrUtil.isArray(groupId)) {\n            var charts = groupId;\n            groupId = null;\n            // If any chart has group\n            zrUtil.each(charts, function (chart) {\n                if (chart.group != null) {\n                    groupId = chart.group;\n                }\n            });\n            groupId = groupId || ('g_' + groupIdBase++);\n            zrUtil.each(charts, function (chart) {\n                chart.group = groupId;\n            });\n        }\n        connectedGroups[groupId] = true;\n        return groupId;\n    };\n\n    /**\n     * @DEPRECATED\n     * @return {string} groupId\n     */\n    echarts.disConnect = function (groupId) {\n        connectedGroups[groupId] = false;\n    };\n\n    /**\n     * @return {string} groupId\n     */\n    echarts.disconnect = echarts.disConnect;\n\n    /**\n     * Dispose a chart instance\n     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n     */\n    echarts.dispose = function (chart) {\n        if (typeof chart === 'string') {\n            chart = instances[chart];\n        }\n        else if (!(chart instanceof ECharts)){\n            // Try to treat as dom\n            chart = echarts.getInstanceByDom(chart);\n        }\n        if ((chart instanceof ECharts) && !chart.isDisposed()) {\n            chart.dispose();\n        }\n    };\n\n    /**\n     * @param  {HTMLElement} dom\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceByDom = function (dom) {\n        var key;\n        if (dom.getAttribute) {\n            key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n        }\n        else {\n            key = dom[DOM_ATTRIBUTE_KEY];\n        }\n        return instances[key];\n    };\n\n    /**\n     * @param {string} key\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceById = function (key) {\n        return instances[key];\n    };\n\n    /**\n     * Register theme\n     */\n    echarts.registerTheme = function (name, theme) {\n        themeStorage[name] = theme;\n    };\n\n    /**\n     * Register option preprocessor\n     * @param {Function} preprocessorFunc\n     */\n    echarts.registerPreprocessor = function (preprocessorFunc) {\n        optionPreprocessorFuncs.push(preprocessorFunc);\n    };\n\n    /**\n     * @param {number} [priority=1000]\n     * @param {Function} processorFunc\n     */\n    echarts.registerProcessor = function (priority, processorFunc) {\n        if (typeof priority === 'function') {\n            processorFunc = priority;\n            priority = PRIORITY_PROCESSOR_FILTER;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown processor priority');\n            }\n        }\n        dataProcessorFuncs.push({\n            prio: priority,\n            func: processorFunc\n        });\n    };\n\n    /**\n     * Register postUpdater\n     * @param {Function} postUpdateFunc\n     */\n    echarts.registerPostUpdate = function (postUpdateFunc) {\n        postUpdateFuncs.push(postUpdateFunc);\n    };\n\n    /**\n     * Usage:\n     * registerAction('someAction', 'someEvent', function () { ... });\n     * registerAction('someAction', function () { ... });\n     * registerAction(\n     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n     *     function () { ... }\n     * );\n     *\n     * @param {(string|Object)} actionInfo\n     * @param {string} actionInfo.type\n     * @param {string} [actionInfo.event]\n     * @param {string} [actionInfo.update]\n     * @param {string} [eventName]\n     * @param {Function} action\n     */\n    echarts.registerAction = function (actionInfo, eventName, action) {\n        if (typeof eventName === 'function') {\n            action = eventName;\n            eventName = '';\n        }\n        var actionType = zrUtil.isObject(actionInfo)\n            ? actionInfo.type\n            : ([actionInfo, actionInfo = {\n                event: eventName\n            }][0]);\n\n        // Event name is all lowercase\n        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n        eventName = actionInfo.event;\n\n        // Validate action type and event name.\n        zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n        if (!actions[actionType]) {\n            actions[actionType] = {action: action, actionInfo: actionInfo};\n        }\n        eventActionMap[eventName] = actionType;\n    };\n\n    /**\n     * @param {string} type\n     * @param {*} CoordinateSystem\n     */\n    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\n        CoordinateSystemManager.register(type, CoordinateSystem);\n    };\n\n    /**\n     * Get dimensions of specified coordinate system.\n     * @param {string} type\n     * @return {Array.<string|Object>}\n     */\n    echarts.getCoordinateSystemDimensions = function (type) {\n        var coordSysCreator = CoordinateSystemManager.get(type);\n        if (coordSysCreator) {\n            return coordSysCreator.getDimensionsInfo\n                    ? coordSysCreator.getDimensionsInfo()\n                    : coordSysCreator.dimensions.slice();\n        }\n    };\n\n    /**\n     * Layout is a special stage of visual encoding\n     * Most visual encoding like color are common for different chart\n     * But each chart has it's own layout algorithm\n     *\n     * @param {number} [priority=1000]\n     * @param {Function} layoutFunc\n     */\n    echarts.registerLayout = function (priority, layoutFunc) {\n        if (typeof priority === 'function') {\n            layoutFunc = priority;\n            priority = PRIORITY_VISUAL_LAYOUT;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown layout priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: layoutFunc,\n            isLayout: true\n        });\n    };\n\n    /**\n     * @param {number} [priority=3000]\n     * @param {Function} visualFunc\n     */\n    echarts.registerVisual = function (priority, visualFunc) {\n        if (typeof priority === 'function') {\n            visualFunc = priority;\n            priority = PRIORITY_VISUAL_CHART;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown visual priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: visualFunc\n        });\n    };\n\n    /**\n     * @param {string} name\n     */\n    echarts.registerLoading = function (name, loadingFx) {\n        loadingEffects[name] = loadingFx;\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentModel = function (opts/*, superClass*/) {\n        // var Clazz = ComponentModel;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentView = function (opts/*, superClass*/) {\n        // var Clazz = ComponentView;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentView.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendSeriesModel = function (opts/*, superClass*/) {\n        // var Clazz = SeriesModel;\n        // if (superClass) {\n        //     superClass = 'series.' + superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return SeriesModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendChartView = function (opts/*, superClass*/) {\n        // var Clazz = ChartView;\n        // if (superClass) {\n        //     superClass = superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ChartView.getClass(classType.main, true);\n        // }\n        return ChartView.extend(opts);\n    };\n\n    /**\n     * ZRender need a canvas context to do measureText.\n     * But in node environment canvas may be created by node-canvas.\n     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n     *\n     * Be careful of using it in the browser.\n     *\n     * @param {Function} creator\n     * @example\n     *     var Canvas = require('canvas');\n     *     var echarts = require('echarts');\n     *     echarts.setCanvasCreator(function () {\n     *         // Small size is enough.\n     *         return new Canvas(32, 32);\n     *     });\n     */\n    echarts.setCanvasCreator = function (creator) {\n        zrUtil.createCanvas = creator;\n    };\n\n    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, require('./visual/seriesColor'));\n    echarts.registerPreprocessor(require('./preprocessor/backwardCompat'));\n    echarts.registerLoading('default', require('./loading/default'));\n\n    // Default action\n    echarts.registerAction({\n        type: 'highlight',\n        event: 'highlight',\n        update: 'highlight'\n    }, zrUtil.noop);\n    echarts.registerAction({\n        type: 'downplay',\n        event: 'downplay',\n        update: 'downplay'\n    }, zrUtil.noop);\n\n\n    // --------\n    // Exports\n    // --------\n    echarts.zrender = zrender;\n\n    echarts.List = require('./data/List');\n    echarts.Model = require('./model/Model');\n\n    echarts.Axis = require('./coord/Axis');\n\n    echarts.graphic = require('./util/graphic');\n    echarts.number = require('./util/number');\n    echarts.format = require('./util/format');\n    echarts.throttle = throttle.throttle;\n    echarts.matrix = require('zrender/lib/core/matrix');\n    echarts.vector = require('zrender/lib/core/vector');\n    echarts.color = require('zrender/lib/tool/color');\n\n    echarts.util = {};\n    each([\n            'map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter',\n            'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction',\n            'extend', 'defaults', 'clone', 'merge'\n        ],\n        function (name) {\n            echarts.util[name] = zrUtil[name];\n        }\n    );\n\n    echarts.helper = require('./helper');\n\n\n    // PRIORITY\n    echarts.PRIORITY = {\n        PROCESSOR: {\n            FILTER: PRIORITY_PROCESSOR_FILTER,\n            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n        },\n        VISUAL: {\n            LAYOUT: PRIORITY_VISUAL_LAYOUT,\n            GLOBAL: PRIORITY_VISUAL_GLOBAL,\n            CHART: PRIORITY_VISUAL_CHART,\n            COMPONENT: PRIORITY_VISUAL_COMPONENT,\n            BRUSH: PRIORITY_VISUAL_BRUSH\n        }\n    };\n\n    module.exports = echarts;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/echarts.js\n// module id = 607\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var pathTool = require('zrender/lib/tool/path');\n    var Path = require('zrender/lib/graphic/Path');\n    var colorTool = require('zrender/lib/tool/color');\n    var matrix = require('zrender/lib/core/matrix');\n    var vector = require('zrender/lib/core/vector');\n    var Transformable = require('zrender/lib/mixin/Transformable');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n\n    var round = Math.round;\n    var mathMax = Math.max;\n    var mathMin = Math.min;\n\n    var EMPTY_OBJ = {};\n\n    var graphic = {};\n\n    graphic.Group = require('zrender/lib/container/Group');\n\n    graphic.Image = require('zrender/lib/graphic/Image');\n\n    graphic.Text = require('zrender/lib/graphic/Text');\n\n    graphic.Circle = require('zrender/lib/graphic/shape/Circle');\n\n    graphic.Sector = require('zrender/lib/graphic/shape/Sector');\n\n    graphic.Ring = require('zrender/lib/graphic/shape/Ring');\n\n    graphic.Polygon = require('zrender/lib/graphic/shape/Polygon');\n\n    graphic.Polyline = require('zrender/lib/graphic/shape/Polyline');\n\n    graphic.Rect = require('zrender/lib/graphic/shape/Rect');\n\n    graphic.Line = require('zrender/lib/graphic/shape/Line');\n\n    graphic.BezierCurve = require('zrender/lib/graphic/shape/BezierCurve');\n\n    graphic.Arc = require('zrender/lib/graphic/shape/Arc');\n\n    graphic.CompoundPath = require('zrender/lib/graphic/CompoundPath');\n\n    graphic.LinearGradient = require('zrender/lib/graphic/LinearGradient');\n\n    graphic.RadialGradient = require('zrender/lib/graphic/RadialGradient');\n\n    graphic.BoundingRect = BoundingRect;\n\n    /**\n     * Extend shape with parameters\n     */\n    graphic.extendShape = function (opts) {\n        return Path.extend(opts);\n    };\n\n    /**\n     * Extend path\n     */\n    graphic.extendPath = function (pathData, opts) {\n        return pathTool.extendFromString(pathData, opts);\n    };\n\n    /**\n     * Create a path element from path data string\n     * @param {string} pathData\n     * @param {Object} opts\n     * @param {module:zrender/core/BoundingRect} rect\n     * @param {string} [layout=cover] 'center' or 'cover'\n     */\n    graphic.makePath = function (pathData, opts, rect, layout) {\n        var path = pathTool.createFromString(pathData, opts);\n        var boundingRect = path.getBoundingRect();\n        if (rect) {\n            var aspect = boundingRect.width / boundingRect.height;\n\n            if (layout === 'center') {\n                // Set rect to center, keep width / height ratio.\n                var width = rect.height * aspect;\n                var height;\n                if (width <= rect.width) {\n                    height = rect.height;\n                }\n                else {\n                    width = rect.width;\n                    height = width / aspect;\n                }\n                var cx = rect.x + rect.width / 2;\n                var cy = rect.y + rect.height / 2;\n\n                rect.x = cx - width / 2;\n                rect.y = cy - height / 2;\n                rect.width = width;\n                rect.height = height;\n            }\n\n            graphic.resizePath(path, rect);\n        }\n        return path;\n    };\n\n    graphic.mergePath = pathTool.mergePath,\n\n    /**\n     * Resize a path to fit the rect\n     * @param {module:zrender/graphic/Path} path\n     * @param {Object} rect\n     */\n    graphic.resizePath = function (path, rect) {\n        if (!path.applyTransform) {\n            return;\n        }\n\n        var pathRect = path.getBoundingRect();\n\n        var m = pathRect.calculateTransform(rect);\n\n        path.applyTransform(m);\n    };\n\n    /**\n     * Sub pixel optimize line for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x1]\n     * @param {number} [param.shape.y1]\n     * @param {number} [param.shape.x2]\n     * @param {number} [param.shape.y2]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeLine = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n\n        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n        }\n        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n        }\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize rect for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x]\n     * @param {number} [param.shape.y]\n     * @param {number} [param.shape.width]\n     * @param {number} [param.shape.height]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeRect = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n        var originX = shape.x;\n        var originY = shape.y;\n        var originWidth = shape.width;\n        var originHeight = shape.height;\n        shape.x = subPixelOptimize(shape.x, lineWidth, true);\n        shape.y = subPixelOptimize(shape.y, lineWidth, true);\n        shape.width = Math.max(\n            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\n            originWidth === 0 ? 0 : 1\n        );\n        shape.height = Math.max(\n            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\n            originHeight === 0 ? 0 : 1\n        );\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize for canvas\n     *\n     * @param {number} position Coordinate, such as x, y\n     * @param {number} lineWidth Should be nonnegative integer.\n     * @param {boolean=} positiveOrNegative Default false (negative).\n     * @return {number} Optimized position.\n     */\n    graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\n        // Assure that (position + lineWidth / 2) is near integer edge,\n        // otherwise line will be fuzzy in canvas.\n        var doubledPosition = round(position * 2);\n        return (doubledPosition + round(lineWidth)) % 2 === 0\n            ? doubledPosition / 2\n            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n    };\n\n    function hasFillOrStroke(fillOrStroke) {\n        return fillOrStroke != null && fillOrStroke != 'none';\n    }\n\n    function liftColor(color) {\n        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n    }\n\n    /**\n     * @private\n     */\n    function cacheElementStl(el) {\n        if (el.__hoverStlDirty) {\n            var stroke = el.style.stroke;\n            var fill = el.style.fill;\n\n            // Create hoverStyle on mouseover\n            var hoverStyle = el.__hoverStl;\n            hoverStyle.fill = hoverStyle.fill\n                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n            hoverStyle.stroke = hoverStyle.stroke\n                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n\n            var normalStyle = {};\n            for (var name in hoverStyle) {\n                // See comment in `doSingleEnterHover`.\n                if (hoverStyle[name] != null) {\n                    normalStyle[name] = el.style[name];\n                }\n            }\n\n            el.__normalStl = normalStyle;\n\n            el.__hoverStlDirty = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    function doSingleEnterHover(el) {\n        if (el.__isHover) {\n            return;\n        }\n\n        cacheElementStl(el);\n\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.addHover(el, el.__hoverStl);\n        }\n        else {\n            // styles can be:\n            // {\n            //     label: {\n            //         normal: {\n            //             show: false,\n            //             position: 'outside',\n            //             fontSize: 18\n            //         },\n            //         emphasis: {\n            //             show: true\n            //         }\n            //     }\n            // },\n            // where properties of `emphasis` may not appear in `normal`. We previously use\n            // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n            // But consider rich text and setOption in merge mode, it is impossible to cover\n            // all properties in merge. So we use merge mode when setting style here, where\n            // only properties that is not `null/undefined` can be set. The disadventage:\n            // null/undefined can not be used to remove style any more in `emphasis`.\n            el.style.extendFrom(el.__hoverStl);\n            el.dirty(false);\n            el.z2 += 1;\n        }\n\n        el.__isHover = true;\n    }\n\n    /**\n     * @inner\n     */\n    function doSingleLeaveHover(el) {\n        if (!el.__isHover) {\n            return;\n        }\n\n        var normalStl = el.__normalStl;\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.removeHover(el);\n        }\n        else {\n            // Consider null/undefined value, should use\n            // `setStyle` but not `extendFrom(stl, true)`.\n            normalStl && el.setStyle(normalStl);\n            el.z2 -= 1;\n        }\n\n        el.__isHover = false;\n    }\n\n    /**\n     * @inner\n     */\n    function doEnterHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleEnterHover(child);\n                }\n            })\n            : doSingleEnterHover(el);\n    }\n\n    function doLeaveHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleLeaveHover(child);\n                }\n            })\n            : doSingleLeaveHover(el);\n    }\n\n    /**\n     * @inner\n     */\n    function setElementHoverStl(el, hoverStl) {\n        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n        // Often used when item group has a label element and it's hoverStyle is different\n        el.__hoverStl = el.hoverStyle || hoverStl || {};\n        el.__hoverStlDirty = true;\n\n        if (el.__isHover) {\n            cacheElementStl(el);\n        }\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOver(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOut(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doLeaveHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function enterEmphasis() {\n        this.__isEmphasis = true;\n        doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function leaveEmphasis() {\n        this.__isEmphasis = false;\n        doLeaveHover(this);\n    }\n\n    /**\n     * Set hover style of element.\n     * This method can be called repeatly without side-effects.\n     * @param {module:zrender/Element} el\n     * @param {Object} [hoverStyle]\n     * @param {Object} [opt]\n     * @param {boolean} [opt.hoverSilentOnTouch=false]\n     *        In touch device, mouseover event will be trigger on touchstart event\n     *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n     *        conviniently use hoverStyle when tap on touch screen without additional\n     *        code for compatibility.\n     *        But if the chart/component has select feature, which usually also use\n     *        hoverStyle, there might be conflict between 'select-highlight' and\n     *        'hover-highlight' especially when roam is enabled (see geo for example).\n     *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n     *        on touch device.\n     */\n    graphic.setHoverStyle = function (el, hoverStyle, opt) {\n        el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    setElementHoverStl(child, hoverStyle);\n                }\n            })\n            : setElementHoverStl(el, hoverStyle);\n\n        // Duplicated function will be auto-ignored, see Eventful.js.\n        el.on('mouseover', onElementMouseOver)\n          .on('mouseout', onElementMouseOut);\n\n        // Emphasis, normal can be triggered manually\n        el.on('emphasis', enterEmphasis)\n          .on('normal', leaveEmphasis);\n    };\n\n    /**\n     * Set basic textStyle properties.\n     * @param {Object|module:zrender/graphic/Style} textStyle\n     * @param {module:echarts/model/Model} model\n     * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n     * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n     */\n    graphic.setTextStyle = function (textStyle, textStyleModel, specifiedTextStyle, opt) {\n        setTextStyleCommon(textStyle, textStyleModel, opt);\n        specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n        textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n\n        return textStyle;\n    };\n\n    /**\n     * Set text option in the style\n     * @param {Object} textStyle\n     * @param {module:echarts/model/Model} labelModel\n     * @param {string|boolean} defaultColor Default text color.\n     *        If set as false, it will be processed as a emphasis style.\n     */\n    graphic.setText = function (textStyle, labelModel, defaultColor) {\n        var opt = {isRectText: true};\n        if (defaultColor === false) {\n            opt.forMerge = true;\n        }\n        else {\n            // Support setting color as 'auto' to get visual color.\n            opt.defaultTextColor = opt.autoColor = defaultColor;\n            opt.checkInside = checkInsideForSetText;\n        }\n        setTextStyleCommon(textStyle, labelModel, opt);\n        textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n    };\n\n    function checkInsideForSetText(labelModel, textPosition) {\n        return textPosition && textPosition.indexOf('inside') >= 0;\n    }\n\n    /**\n     * {\n     *      disableBox: boolean, Whether diable drawing box of block (outer most).\n     *      isRectText: boolean,\n     *      autoColor: string, specify a color when color is 'auto',\n     *                 for textFill, textStroke, textBackgroundColor, and textBorderColor,\n     *      defaultTextColor: string,\n     *      checkInside: function, higher priority than `defaultTextColor`.\n     *      forceRich: boolean,\n     *      forMerge: boolean\n     * }\n     */\n    function setTextStyleCommon(textStyle, textStyleModel, opt) {\n        // Consider there will be abnormal when merge hover style to normal style if given default value.\n        opt = opt || EMPTY_OBJ;\n\n        if (opt.isRectText) {\n            var textPosition = textStyleModel.getShallow('position')\n                || (opt.forMerge ? null : 'inside');\n            // 'outside' is not a valid zr textPostion value, but used\n            // in bar series, and magric type should be considered.\n            textPosition === 'outside' && (textPosition = 'top');\n            textStyle.textPosition = textPosition;\n            textStyle.textOffset = textStyleModel.getShallow('offset');\n            var labelRotate = textStyleModel.getShallow('rotate');\n            labelRotate != null && (labelRotate *= Math.PI / 180);\n            textStyle.textRotation = labelRotate;\n            textStyle.textDistance = zrUtil.retrieve2(\n                textStyleModel.getShallow('distance'), opt.forMerge ? null : 5\n            );\n        }\n\n        var ecModel = textStyleModel.ecModel;\n        var globalTextStyle = ecModel && ecModel.option.textStyle;\n\n        // Consider case:\n        // {\n        //     data: [{\n        //         value: 12,\n        //         label: {\n        //             normal: {\n        //                 rich: {\n        //                     // no 'a' here but using parent 'a'.\n        //                 }\n        //             }\n        //         }\n        //     }],\n        //     rich: {\n        //         a: { ... }\n        //     }\n        // }\n        var richItemNames = getRichItemNames(textStyleModel);\n        var richResult;\n        if (richItemNames) {\n            richResult = {};\n            for (var name in richItemNames) {\n                if (richItemNames.hasOwnProperty(name)) {\n                    // Cascade is supported in rich.\n                    var richTextStyle = textStyleModel.getModel(['rich', name]);\n                    // In rich, never `disableBox`.\n                    setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt);\n                }\n            }\n        }\n        textStyle.rich = richResult;\n\n        setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, true);\n\n        if (opt.forceRich && !opt.textStyle) {\n            opt.textStyle = {};\n        }\n\n        return textStyle;\n    }\n\n    // Consider case:\n    // {\n    //     data: [{\n    //         value: 12,\n    //         label: {\n    //             normal: {\n    //                 rich: {\n    //                     // no 'a' here but using parent 'a'.\n    //                 }\n    //             }\n    //         }\n    //     }],\n    //     rich: {\n    //         a: { ... }\n    //     }\n    // }\n    function getRichItemNames(textStyleModel) {\n        // Use object to remove duplicated names.\n        var richItemNameMap;\n        while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n            var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n            if (rich) {\n                richItemNameMap = richItemNameMap || {};\n                for (var name in rich) {\n                    if (rich.hasOwnProperty(name)) {\n                        richItemNameMap[name] = 1;\n                    }\n                }\n            }\n            textStyleModel = textStyleModel.parentModel;\n        }\n        return richItemNameMap;\n    }\n\n    function setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isBlock) {\n        var forMerge = opt.forMerge;\n\n        // In merge mode, default value should not be given.\n        globalTextStyle = !forMerge && globalTextStyle || EMPTY_OBJ;\n\n        var textFill = getAutoColor(textStyleModel.getShallow('color'));\n        var textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'));\n        var textLineWidth = textStyleModel.getShallow('textBorderWidth');\n\n        if (!forMerge) {\n            textFill == null && (textFill = globalTextStyle.color);\n            textStroke == null && (textStroke = globalTextStyle.textBorderColor);\n            textLineWidth == null && (textLineWidth = globalTextStyle.textBorderWidth);\n\n            if (textFill == null\n                && opt.checkInside\n                && opt.checkInside(textStyleModel, textStyle.textPosition)\n            ) {\n                textFill = '#fff';\n                // Consider text with #fff overflow its container.\n                if (textStroke == null) {\n                    textStroke = opt.defaultTextColor;\n                    textLineWidth == null && (textLineWidth = 2);\n                }\n            }\n\n            textFill == null && (textFill = opt.defaultTextColor);\n        }\n\n        textStyle.textFill = textFill;\n        textStyle.textStroke = textStroke;\n        textStyle.textLineWidth = textLineWidth;\n\n        // Do not use `getFont` here, because merge should be supported, where\n        // part of these properties may be changed in emphasis style, and the\n        // others should remain their original value got from normal style.\n        textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n        textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n        textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n        textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n\n        textStyle.textAlign = textStyleModel.getShallow('align');\n        textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign')\n            || textStyleModel.getShallow('baseline');\n\n        textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n        textStyle.textWidth = textStyleModel.getShallow('width');\n        textStyle.textHeight = textStyleModel.getShallow('height');\n        textStyle.textTag = textStyleModel.getShallow('tag');\n\n        if (!isBlock || !opt.disableBox) {\n            textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n            textStyle.textPadding = textStyleModel.getShallow('padding');\n            textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n            textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n            textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n\n            textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n            textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n            textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n            textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n        }\n\n        textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor')\n            || globalTextStyle.textShadowColor;\n        textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur')\n            || globalTextStyle.textShadowBlur;\n        textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX')\n            || globalTextStyle.textShadowOffsetX;\n        textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY')\n            || globalTextStyle.textShadowOffsetY;\n    }\n\n    function getAutoColor(color, opt) {\n        return color !== 'auto' ? color : (opt && opt.autoColor) ? opt.autoColor : null;\n    }\n\n    graphic.getFont = function (opt, ecModel) {\n        // ecModel or default text style model.\n        var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n        return [\n            // FIXME in node-canvas fontWeight is before fontStyle\n            opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '',\n            opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '',\n            (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px',\n            opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'\n        ].join(' ');\n    };\n\n    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n        if (typeof dataIndex === 'function') {\n            cb = dataIndex;\n            dataIndex = null;\n        }\n        // Do not check 'animation' property directly here. Consider this case:\n        // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n        // but its parent model (`seriesModel`) does.\n        var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n        if (animationEnabled) {\n            var postfix = isUpdate ? 'Update' : '';\n            var duration = animatableModel.getShallow('animationDuration' + postfix);\n            var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n            var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n            if (typeof animationDelay === 'function') {\n                animationDelay = animationDelay(\n                    dataIndex,\n                    animatableModel.getAnimationDelayParams\n                        ? animatableModel.getAnimationDelayParams(el, dataIndex)\n                        : null\n                );\n            }\n            if (typeof duration === 'function') {\n                duration = duration(dataIndex);\n            }\n\n            duration > 0\n                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb)\n                : (el.stopAnimation(), el.attr(props), cb && cb());\n        }\n        else {\n            el.stopAnimation();\n            el.attr(props);\n            cb && cb();\n        }\n    }\n\n    /**\n     * Update graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} [cb]\n     * @example\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n     *     // Or\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, function () { console.log('Animation done!'); });\n     */\n    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Init graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} cb\n     */\n    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Get transform matrix of target (param target),\n     * in coordinate of its ancestor (param ancestor)\n     *\n     * @param {module:zrender/mixin/Transformable} target\n     * @param {module:zrender/mixin/Transformable} [ancestor]\n     */\n    graphic.getTransform = function (target, ancestor) {\n        var mat = matrix.identity([]);\n\n        while (target && target !== ancestor) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n\n        return mat;\n    };\n\n    /**\n     * Apply transform to an vertex.\n     * @param {Array.<number>} target [x, y]\n     * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n     *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n     *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {Array.<number>} [x, y]\n     */\n    graphic.applyTransform = function (target, transform, invert) {\n        if (transform && !zrUtil.isArrayLike(transform)) {\n            transform = Transformable.getLocalTransform(transform);\n        }\n\n        if (invert) {\n            transform = matrix.invert([], transform);\n        }\n        return vector.applyTransform([], target, transform);\n    };\n\n    /**\n     * @param {string} direction 'left' 'right' 'top' 'bottom'\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n     */\n    graphic.transformDirection = function (direction, transform, invert) {\n\n        // Pick a base, ensure that transform result will not be (0, 0).\n        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[0]);\n        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[2]);\n\n        var vertex = [\n            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\n            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\n        ];\n\n        vertex = graphic.applyTransform(vertex, transform, invert);\n\n        return Math.abs(vertex[0]) > Math.abs(vertex[1])\n            ? (vertex[0] > 0 ? 'right' : 'left')\n            : (vertex[1] > 0 ? 'bottom' : 'top');\n    };\n\n    /**\n     * Apply group transition animation from g1 to g2.\n     * If no animatableModel, no animation.\n     */\n    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\n        if (!g1 || !g2) {\n            return;\n        }\n\n        function getElMap(g) {\n            var elMap = {};\n            g.traverse(function (el) {\n                if (!el.isGroup && el.anid) {\n                    elMap[el.anid] = el;\n                }\n            });\n            return elMap;\n        }\n        function getAnimatableProps(el) {\n            var obj = {\n                position: vector.clone(el.position),\n                rotation: el.rotation\n            };\n            if (el.shape) {\n                obj.shape = zrUtil.extend({}, el.shape);\n            }\n            return obj;\n        }\n        var elMap1 = getElMap(g1);\n\n        g2.traverse(function (el) {\n            if (!el.isGroup && el.anid) {\n                var oldEl = elMap1[el.anid];\n                if (oldEl) {\n                    var newProp = getAnimatableProps(el);\n                    el.attr(getAnimatableProps(oldEl));\n                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\n                }\n                // else {\n                //     if (el.previousProps) {\n                //         graphic.updateProps\n                //     }\n                // }\n            }\n        });\n    };\n\n    /**\n     * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n     * @param {Object} rect {x, y, width, height}\n     * @return {Array.<Array.<number>>} A new clipped points.\n     */\n    graphic.clipPointsByRect = function (points, rect) {\n        return zrUtil.map(points, function (point) {\n            var x = point[0];\n            x = mathMax(x, rect.x);\n            x = mathMin(x, rect.x + rect.width);\n            var y = point[1];\n            y = mathMax(y, rect.y);\n            y = mathMin(y, rect.y + rect.height);\n            return [x, y];\n        });\n    };\n\n    /**\n     * @param {Object} targetRect {x, y, width, height}\n     * @param {Object} rect {x, y, width, height}\n     * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n     */\n    graphic.clipRectByRect = function (targetRect, rect) {\n        var x = mathMax(targetRect.x, rect.x);\n        var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n        var y = mathMax(targetRect.y, rect.y);\n        var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n        if (x2 >= x && y2 >= y) {\n            return {\n                x: x,\n                y: y,\n                width: x2 - x,\n                height: y2 - y\n            };\n        }\n    };\n\n    /**\n     * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n     * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n     * @param {Object} [rect] {x, y, width, height}\n     * @return {module:zrender/Element} Icon path or image element.\n     */\n    graphic.createIcon = function (iconStr, opt, rect) {\n        opt = zrUtil.extend({rectHover: true}, opt);\n        var style = opt.style = {strokeNoScale: true};\n        rect = rect || {x: -1, y: -1, width: 2, height: 2};\n\n        if (iconStr) {\n            return iconStr.indexOf('image://') === 0\n                ? (\n                    style.image = iconStr.slice(8),\n                    zrUtil.defaults(style, rect),\n                    new graphic.Image(opt)\n                )\n                : (\n                    graphic.makePath(\n                        iconStr.replace('path://', ''),\n                        opt,\n                        rect,\n                        'center'\n                    )\n                );\n        }\n\n    };\n\n    module.exports = graphic;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/graphic.js\n// module id = 608\n// module chunks = 0 1 2","\n\n    var formatUtil = require('./format');\n    var nubmerUtil = require('./number');\n    var Model = require('../model/Model');\n    var zrUtil = require('zrender/lib/core/util');\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var modelUtil = {};\n\n    /**\n     * If value is not array, then translate it to array.\n     * @param  {*} value\n     * @return {Array} [value] or value\n     */\n    modelUtil.normalizeToArray = function (value) {\n        return value instanceof Array\n            ? value\n            : value == null\n            ? []\n            : [value];\n    };\n\n    /**\n     * Sync default option between normal and emphasis like `position` and `show`\n     * In case some one will write code like\n     *     label: {\n     *         normal: {\n     *             show: false,\n     *             position: 'outside',\n     *             fontSize: 18\n     *         },\n     *         emphasis: {\n     *             show: true\n     *         }\n     *     }\n     * @param {Object} opt\n     * @param {Array.<string>} subOpts\n     */\n     modelUtil.defaultEmphasis = function (opt, subOpts) {\n        if (opt) {\n            var emphasisOpt = opt.emphasis = opt.emphasis || {};\n            var normalOpt = opt.normal = opt.normal || {};\n\n            // Default emphasis option from normal\n            for (var i = 0, len = subOpts.length; i < len; i++) {\n                var subOptName = subOpts[i];\n                if (!emphasisOpt.hasOwnProperty(subOptName)\n                    && normalOpt.hasOwnProperty(subOptName)\n                ) {\n                    emphasisOpt[subOptName] = normalOpt[subOptName];\n                }\n            }\n        }\n    };\n\n    modelUtil.TEXT_STYLE_OPTIONS = [\n        'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n        'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth',\n        'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline',\n        'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY',\n        'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY',\n        'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding'\n    ];\n\n    // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n    //     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n    //     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n    //     // FIXME: deprecated, check and remove it.\n    //     'textStyle'\n    // ]);\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method retieves value from data.\n     * @param {string|number|Date|Array|Object} dataItem\n     * @return {number|string|Date|Array.<number|string|Date>}\n     */\n    modelUtil.getDataItemValue = function (dataItem) {\n        // Performance sensitive.\n        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n    };\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method determine if dataItem has extra option besides value\n     * @param {string|number|Date|Array|Object} dataItem\n     */\n    modelUtil.isDataItemOption = function (dataItem) {\n        return isObject(dataItem)\n            && !(dataItem instanceof Array);\n            // // markLine data can be array\n            // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n    };\n\n    /**\n     * This helper method convert value in data.\n     * @param {string|number|Date} value\n     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n     */\n    modelUtil.converDataValue = function (value, dimInfo) {\n        // Performance sensitive.\n        var dimType = dimInfo && dimInfo.type;\n        if (dimType === 'ordinal') {\n            return value;\n        }\n\n        if (dimType === 'time'\n            // spead up when using timestamp\n            && typeof value !== 'number'\n            && value != null\n            && value !== '-'\n        ) {\n            value = +nubmerUtil.parseDate(value);\n        }\n\n        // dimType defaults 'number'.\n        // If dimType is not ordinal and value is null or undefined or NaN or '-',\n        // parse to NaN.\n        return (value == null || value === '')\n            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n    };\n\n    /**\n     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n     * @param {module:echarts/data/List} data\n     * @param {Object} opt\n     * @param {string} [opt.seriesIndex]\n     * @param {Object} [opt.name]\n     * @param {Object} [opt.mainType]\n     * @param {Object} [opt.subType]\n     */\n    modelUtil.createDataFormatModel = function (data, opt) {\n        var model = new Model();\n        zrUtil.mixin(model, modelUtil.dataFormatMixin);\n        model.seriesIndex = opt.seriesIndex;\n        model.name = opt.name || '';\n        model.mainType = opt.mainType;\n        model.subType = opt.subType;\n\n        model.getData = function () {\n            return data;\n        };\n        return model;\n    };\n\n    // PENDING A little ugly\n    modelUtil.dataFormatMixin = {\n        /**\n         * Get params for formatter\n         * @param {number} dataIndex\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getDataParams: function (dataIndex, dataType) {\n            var data = this.getData(dataType);\n            var rawValue = this.getRawValue(dataIndex, dataType);\n            var rawDataIndex = data.getRawIndex(dataIndex);\n            var name = data.getName(dataIndex, true);\n            var itemOpt = data.getRawDataItem(dataIndex);\n            var color = data.getItemVisual(dataIndex, 'color');\n\n            return {\n                componentType: this.mainType,\n                componentSubType: this.subType,\n                seriesType: this.mainType === 'series' ? this.subType : null,\n                seriesIndex: this.seriesIndex,\n                seriesId: this.id,\n                seriesName: this.name,\n                name: name,\n                dataIndex: rawDataIndex,\n                data: itemOpt,\n                dataType: dataType,\n                value: rawValue,\n                color: color,\n                marker: formatUtil.getTooltipMarker(color),\n\n                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n                $vars: ['seriesName', 'name', 'value']\n            };\n        },\n\n        /**\n         * Format label\n         * @param {number} dataIndex\n         * @param {string} [status='normal'] 'normal' or 'emphasis'\n         * @param {string} [dataType]\n         * @param {number} [dimIndex]\n         * @param {string} [labelProp='label']\n         * @return {string}\n         */\n        getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n            status = status || 'normal';\n            var data = this.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var params = this.getDataParams(dataIndex, dataType);\n            if (dimIndex != null && (params.value instanceof Array)) {\n                params.value = params.value[dimIndex];\n            }\n\n            var formatter = itemModel.get([labelProp || 'label', status, 'formatter']);\n\n            if (typeof formatter === 'function') {\n                params.status = status;\n                return formatter(params);\n            }\n            else if (typeof formatter === 'string') {\n                return formatUtil.formatTpl(formatter, params);\n            }\n        },\n\n        /**\n         * Get raw value in option\n         * @param {number} idx\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getRawValue: function (idx, dataType) {\n            var data = this.getData(dataType);\n            var dataItem = data.getRawDataItem(idx);\n            if (dataItem != null) {\n                return (isObject(dataItem) && !(dataItem instanceof Array))\n                    ? dataItem.value : dataItem;\n            }\n        },\n\n        /**\n         * Should be implemented.\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         * @return {string} tooltip string\n         */\n        formatTooltip: zrUtil.noop\n    };\n\n    /**\n     * Mapping to exists for merge.\n     *\n     * @public\n     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n     * @param {Object|Array.<Object>} newCptOptions\n     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          index of which is the same as exists.\n     */\n    modelUtil.mappingToExists = function (exists, newCptOptions) {\n        // Mapping by the order by original option (but not order of\n        // new option) in merge mode. Because we should ensure\n        // some specified index (like xAxisIndex) is consistent with\n        // original option, which is easy to understand, espatially in\n        // media query. And in most case, merge option is used to\n        // update partial option but not be expected to change order.\n        newCptOptions = (newCptOptions || []).slice();\n\n        var result = zrUtil.map(exists || [], function (obj, index) {\n            return {exist: obj};\n        });\n\n        // Mapping by id or name if specified.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            // id has highest priority.\n            for (var i = 0; i < result.length; i++) {\n                if (!result[i].option // Consider name: two map to one.\n                    && cptOption.id != null\n                    && result[i].exist.id === cptOption.id + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n\n            for (var i = 0; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option // Consider name: two map to one.\n                    // Can not match when both ids exist but different.\n                    && (exist.id == null || cptOption.id == null)\n                    && cptOption.name != null\n                    && !modelUtil.isIdInner(cptOption)\n                    && !modelUtil.isIdInner(exist)\n                    && exist.name === cptOption.name + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n        });\n\n        // Otherwise mapping by index.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            var i = 0;\n            for (; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option\n                    // Existing model that already has id should be able to\n                    // mapped to (because after mapping performed model may\n                    // be assigned with a id, whish should not affect next\n                    // mapping), except those has inner id.\n                    && !modelUtil.isIdInner(exist)\n                    // Caution:\n                    // Do not overwrite id. But name can be overwritten,\n                    // because axis use name as 'show label text'.\n                    // 'exist' always has id and name and we dont\n                    // need to check it.\n                    && cptOption.id == null\n                ) {\n                    result[i].option = cptOption;\n                    break;\n                }\n            }\n\n            if (i >= result.length) {\n                result.push({option: cptOption});\n            }\n        });\n\n        return result;\n    };\n\n    /**\n     * Make id and name for mapping result (result of mappingToExists)\n     * into `keyInfo` field.\n     *\n     * @public\n     * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          which order is the same as exists.\n     * @return {Array.<Object>} The input.\n     */\n    modelUtil.makeIdAndName = function (mapResult) {\n        // We use this id to hash component models and view instances\n        // in echarts. id can be specified by user, or auto generated.\n\n        // The id generation rule ensures new view instance are able\n        // to mapped to old instance when setOption are called in\n        // no-merge mode. So we generate model id by name and plus\n        // type in view id.\n\n        // name can be duplicated among components, which is convenient\n        // to specify multi components (like series) by one name.\n\n        // Ensure that each id is distinct.\n        var idMap = zrUtil.createHashMap();\n\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            existCpt && idMap.set(existCpt.id, item);\n        });\n\n        each(mapResult, function (item, index) {\n            var opt = item.option;\n\n            zrUtil.assert(\n                !opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item,\n                'id duplicates: ' + (opt && opt.id)\n            );\n\n            opt && opt.id != null && idMap.set(opt.id, item);\n            !item.keyInfo && (item.keyInfo = {});\n        });\n\n        // Make name and id.\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            var opt = item.option;\n            var keyInfo = item.keyInfo;\n\n            if (!isObject(opt)) {\n                return;\n            }\n\n            // name can be overwitten. Consider case: axis.name = '20km'.\n            // But id generated by name will not be changed, which affect\n            // only in that case: setOption with 'not merge mode' and view\n            // instance will be recreated, which can be accepted.\n            keyInfo.name = opt.name != null\n                ? opt.name + ''\n                : existCpt\n                ? existCpt.name\n                : '\\0-'; // name may be displayed on screen, so use '-'.\n\n            if (existCpt) {\n                keyInfo.id = existCpt.id;\n            }\n            else if (opt.id != null) {\n                keyInfo.id = opt.id + '';\n            }\n            else {\n                // Consider this situatoin:\n                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n                // Series with the same name between optionA and optionB\n                // should be mapped.\n                var idNum = 0;\n                do {\n                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n                }\n                while (idMap.get(keyInfo.id));\n            }\n\n            idMap.set(keyInfo.id, item);\n        });\n    };\n\n    /**\n     * @public\n     * @param {Object} cptOption\n     * @return {boolean}\n     */\n    modelUtil.isIdInner = function (cptOption) {\n        return isObject(cptOption)\n            && cptOption.id\n            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n    };\n\n    /**\n     * A helper for removing duplicate items between batchA and batchB,\n     * and in themselves, and categorize by series.\n     *\n     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n     */\n    modelUtil.compressBatches = function (batchA, batchB) {\n        var mapA = {};\n        var mapB = {};\n\n        makeMap(batchA || [], mapA);\n        makeMap(batchB || [], mapB, mapA);\n\n        return [mapToArray(mapA), mapToArray(mapB)];\n\n        function makeMap(sourceBatch, map, otherMap) {\n            for (var i = 0, len = sourceBatch.length; i < len; i++) {\n                var seriesId = sourceBatch[i].seriesId;\n                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\n                var otherDataIndices = otherMap && otherMap[seriesId];\n\n                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n                    var dataIndex = dataIndices[j];\n\n                    if (otherDataIndices && otherDataIndices[dataIndex]) {\n                        otherDataIndices[dataIndex] = null;\n                    }\n                    else {\n                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n                    }\n                }\n            }\n        }\n\n        function mapToArray(map, isData) {\n            var result = [];\n            for (var i in map) {\n                if (map.hasOwnProperty(i) && map[i] != null) {\n                    if (isData) {\n                        result.push(+i);\n                    }\n                    else {\n                        var dataIndices = mapToArray(map[i], true);\n                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\n                    }\n                }\n            }\n            return result;\n        }\n    };\n\n    /**\n     * @param {module:echarts/data/List} data\n     * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n     *                         each of which can be Array or primary type.\n     * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n     */\n    modelUtil.queryDataIndex = function (data, payload) {\n        if (payload.dataIndexInside != null) {\n            return payload.dataIndexInside;\n        }\n        else if (payload.dataIndex != null) {\n            return zrUtil.isArray(payload.dataIndex)\n                ? zrUtil.map(payload.dataIndex, function (value) {\n                    return data.indexOfRawIndex(value);\n                })\n                : data.indexOfRawIndex(payload.dataIndex);\n        }\n        else if (payload.name != null) {\n            return zrUtil.isArray(payload.name)\n                ? zrUtil.map(payload.name, function (value) {\n                    return data.indexOfName(value);\n                })\n                : data.indexOfName(payload.name);\n        }\n    };\n\n    /**\n     * Enable property storage to any host object.\n     * Notice: Serialization is not supported.\n     *\n     * For example:\n     * var get = modelUitl.makeGetter();\n     *\n     * function some(hostObj) {\n     *      get(hostObj)._someProperty = 1212;\n     *      ...\n     * }\n     *\n     * @return {Function}\n     */\n    modelUtil.makeGetter = (function () {\n        var index = 0;\n        return function () {\n            var key = '\\0__ec_prop_getter_' + index++;\n            return function (hostObj) {\n                return hostObj[key] || (hostObj[key] = {});\n            };\n        };\n    })();\n\n    /**\n     * @param {module:echarts/model/Global} ecModel\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex, seriesId, seriesName,\n     *            geoIndex, geoId, geoName,\n     *            bmapIndex, bmapId, bmapName,\n     *            xAxisIndex, xAxisId, xAxisName,\n     *            yAxisIndex, yAxisId, yAxisName,\n     *            gridIndex, gridId, gridName,\n     *            ... (can be extended)\n     *        }\n     *        Each properties can be number|string|Array.<number>|Array.<string>\n     *        For example, a finder could be\n     *        {\n     *            seriesIndex: 3,\n     *            geoId: ['aa', 'cc'],\n     *            gridName: ['xx', 'rr']\n     *        }\n     *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n     *        If nothing or null/undefined specified, return nothing.\n     * @param {Object} [opt]\n     * @param {string} [opt.defaultMainType]\n     * @param {Array.<string>} [opt.includeMainTypes]\n     * @return {Object} result like:\n     *        {\n     *            seriesModels: [seriesModel1, seriesModel2],\n     *            seriesModel: seriesModel1, // The first model\n     *            geoModels: [geoModel1, geoModel2],\n     *            geoModel: geoModel1, // The first model\n     *            ...\n     *        }\n     */\n    modelUtil.parseFinder = function (ecModel, finder, opt) {\n        if (zrUtil.isString(finder)) {\n            var obj = {};\n            obj[finder + 'Index'] = 0;\n            finder = obj;\n        }\n\n        var defaultMainType = opt && opt.defaultMainType;\n        if (defaultMainType\n            && !has(finder, defaultMainType + 'Index')\n            && !has(finder, defaultMainType + 'Id')\n            && !has(finder, defaultMainType + 'Name')\n        ) {\n            finder[defaultMainType + 'Index'] = 0;\n        }\n\n        var result = {};\n\n        each(finder, function (value, key) {\n            var value = finder[key];\n\n            // Exclude 'dataIndex' and other illgal keys.\n            if (key === 'dataIndex' || key === 'dataIndexInside') {\n                result[key] = value;\n                return;\n            }\n\n            var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n            var mainType = parsedKey[1];\n            var queryType = (parsedKey[2] || '').toLowerCase();\n\n            if (!mainType\n                || !queryType\n                || value == null\n                || (queryType === 'index' && value === 'none')\n                || (opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0)\n            ) {\n                return;\n            }\n\n            var queryParam = {mainType: mainType};\n            if (queryType !== 'index' || value !== 'all') {\n                queryParam[queryType] = value;\n            }\n\n            var models = ecModel.queryComponents(queryParam);\n            result[mainType + 'Models'] = models;\n            result[mainType + 'Model'] = models[0];\n        });\n\n        return result;\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string|number} dataDim\n     * @return {string}\n     */\n    modelUtil.dataDimToCoordDim = function (data, dataDim) {\n        var dimensions = data.dimensions;\n        dataDim = data.getDimension(dataDim);\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimItem = data.getDimensionInfo(dimensions[i]);\n            if (dimItem.name === dataDim) {\n                return dimItem.coordDim;\n            }\n        }\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string} coordDim\n     * @return {Array.<string>} data dimensions on the coordDim.\n     */\n    modelUtil.coordDimToDataDim = function (data, coordDim) {\n        var dataDim = [];\n        each(data.dimensions, function (dimName) {\n            var dimItem = data.getDimensionInfo(dimName);\n            if (dimItem.coordDim === coordDim) {\n                dataDim[dimItem.coordDimIndex] = dimItem.name;\n            }\n        });\n        return dataDim;\n    };\n\n    /**\n     * @see {module:echarts/data/helper/completeDimensions}\n     * @param {module:echarts/data/List} data\n     * @param {string} otherDim Can be `otherDims`\n     *                        like 'label' or 'tooltip'.\n     * @return {Array.<string>} data dimensions on the otherDim.\n     */\n    modelUtil.otherDimToDataDim = function (data, otherDim) {\n        var dataDim = [];\n        each(data.dimensions, function (dimName) {\n            var dimItem = data.getDimensionInfo(dimName);\n            var otherDims = dimItem.otherDims;\n            var dimIndex = otherDims[otherDim];\n            if (dimIndex != null && dimIndex !== false) {\n                dataDim[dimIndex] = dimItem.name;\n            }\n        });\n        return dataDim;\n    };\n\n    function has(obj, prop) {\n        return obj && obj.hasOwnProperty(prop);\n    }\n\n    module.exports = modelUtil;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/model.js\n// module id = 609\n// module chunks = 0 1 2","/**\n * 数值处理模块\n * @module echarts/util/number\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var number = {};\n\n    var RADIAN_EPSILON = 1e-4;\n\n    function _trim(str) {\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n\n    /**\n     * Linear mapping a value from domain to range\n     * @memberOf module:echarts/util/number\n     * @param  {(number|Array.<number>)} val\n     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n     * @param  {boolean} clamp\n     * @return {(number|Array.<number>}\n     */\n    number.linearMap = function (val, domain, range, clamp) {\n        var subDomain = domain[1] - domain[0];\n        var subRange = range[1] - range[0];\n\n        if (subDomain === 0) {\n            return subRange === 0\n                ? range[0]\n                : (range[0] + range[1]) / 2;\n        }\n\n        // Avoid accuracy problem in edge, such as\n        // 146.39 - 62.83 === 83.55999999999999.\n        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n        // It is a little verbose for efficiency considering this method\n        // is a hotspot.\n        if (clamp) {\n            if (subDomain > 0) {\n                if (val <= domain[0]) {\n                    return range[0];\n                }\n                else if (val >= domain[1]) {\n                    return range[1];\n                }\n            }\n            else {\n                if (val >= domain[0]) {\n                    return range[0];\n                }\n                else if (val <= domain[1]) {\n                    return range[1];\n                }\n            }\n        }\n        else {\n            if (val === domain[0]) {\n                return range[0];\n            }\n            if (val === domain[1]) {\n                return range[1];\n            }\n        }\n\n        return (val - domain[0]) / subDomain * subRange + range[0];\n    };\n\n    /**\n     * Convert a percent string to absolute number.\n     * Returns NaN if percent is not a valid string or number\n     * @memberOf module:echarts/util/number\n     * @param {string|number} percent\n     * @param {number} all\n     * @return {number}\n     */\n    number.parsePercent = function(percent, all) {\n        switch (percent) {\n            case 'center':\n            case 'middle':\n                percent = '50%';\n                break;\n            case 'left':\n            case 'top':\n                percent = '0%';\n                break;\n            case 'right':\n            case 'bottom':\n                percent = '100%';\n                break;\n        }\n        if (typeof percent === 'string') {\n            if (_trim(percent).match(/%$/)) {\n                return parseFloat(percent) / 100 * all;\n            }\n\n            return parseFloat(percent);\n        }\n\n        return percent == null ? NaN : +percent;\n    };\n\n    /**\n     * (1) Fix rounding error of float numbers.\n     * (2) Support return string to avoid scientific notation like '3.5e-7'.\n     *\n     * @param {number} x\n     * @param {number} [precision]\n     * @param {boolean} [returnStr]\n     * @return {number|string}\n     */\n    number.round = function (x, precision, returnStr) {\n        if (precision == null) {\n            precision = 10;\n        }\n        // Avoid range error\n        precision = Math.min(Math.max(0, precision), 20);\n        x = (+x).toFixed(precision);\n        return returnStr ? x : +x;\n    };\n\n    number.asc = function (arr) {\n        arr.sort(function (a, b) {\n            return a - b;\n        });\n        return arr;\n    };\n\n    /**\n     * Get precision\n     * @param {number} val\n     */\n    number.getPrecision = function (val) {\n        val = +val;\n        if (isNaN(val)) {\n            return 0;\n        }\n        // It is much faster than methods converting number to string as follows\n        //      var tmp = val.toString();\n        //      return tmp.length - 1 - tmp.indexOf('.');\n        // especially when precision is low\n        var e = 1;\n        var count = 0;\n        while (Math.round(val * e) / e !== val) {\n            e *= 10;\n            count++;\n        }\n        return count;\n    };\n\n    /**\n     * @param {string|number} val\n     * @return {number}\n     */\n    number.getPrecisionSafe = function (val) {\n        var str = val.toString();\n\n        // Consider scientific notation: '3.4e-12' '3.4e+12'\n        var eIndex = str.indexOf('e');\n        if (eIndex > 0) {\n            var precision = +str.slice(eIndex + 1);\n            return precision < 0 ? -precision : 0;\n        }\n        else {\n            var dotIndex = str.indexOf('.');\n            return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n        }\n    };\n\n    /**\n     * Minimal dicernible data precisioin according to a single pixel.\n     *\n     * @param {Array.<number>} dataExtent\n     * @param {Array.<number>} pixelExtent\n     * @return {number} precision\n     */\n    number.getPixelPrecision = function (dataExtent, pixelExtent) {\n        var log = Math.log;\n        var LN10 = Math.LN10;\n        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n        // toFixed() digits argument must be between 0 and 20.\n        var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n        return !isFinite(precision) ? 20 : precision;\n    };\n\n    /**\n     * Get a data of given precision, assuring the sum of percentages\n     * in valueList is 1.\n     * The largest remainer method is used.\n     * https://en.wikipedia.org/wiki/Largest_remainder_method\n     *\n     * @param {Array.<number>} valueList a list of all data\n     * @param {number} idx index of the data to be processed in valueList\n     * @param {number} precision integer number showing digits of precision\n     * @return {number} percent ranging from 0 to 100\n     */\n    number.getPercentWithPrecision = function (valueList, idx, precision) {\n        if (!valueList[idx]) {\n            return 0;\n        }\n\n        var sum = zrUtil.reduce(valueList, function (acc, val) {\n            return acc + (isNaN(val) ? 0 : val);\n        }, 0);\n        if (sum === 0) {\n            return 0;\n        }\n\n        var digits = Math.pow(10, precision);\n        var votesPerQuota = zrUtil.map(valueList, function (val) {\n            return (isNaN(val) ? 0 : val) / sum * digits * 100;\n        });\n        var targetSeats = digits * 100;\n\n        var seats = zrUtil.map(votesPerQuota, function (votes) {\n            // Assign automatic seats.\n            return Math.floor(votes);\n        });\n        var currentSum = zrUtil.reduce(seats, function (acc, val) {\n            return acc + val;\n        }, 0);\n\n        var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n            return votes - seats[idx];\n        });\n\n        // Has remainding votes.\n        while (currentSum < targetSeats) {\n            // Find next largest remainder.\n            var max = Number.NEGATIVE_INFINITY;\n            var maxId = null;\n            for (var i = 0, len = remainder.length; i < len; ++i) {\n                if (remainder[i] > max) {\n                    max = remainder[i];\n                    maxId = i;\n                }\n            }\n\n            // Add a vote to max remainder.\n            ++seats[maxId];\n            remainder[maxId] = 0;\n            ++currentSum;\n        }\n\n        return seats[idx] / digits;\n    };\n\n    // Number.MAX_SAFE_INTEGER, ie do not support.\n    number.MAX_SAFE_INTEGER = 9007199254740991;\n\n    /**\n     * To 0 - 2 * PI, considering negative radian.\n     * @param {number} radian\n     * @return {number}\n     */\n    number.remRadian = function (radian) {\n        var pi2 = Math.PI * 2;\n        return (radian % pi2 + pi2) % pi2;\n    };\n\n    /**\n     * @param {type} radian\n     * @return {boolean}\n     */\n    number.isRadianAroundZero = function (val) {\n        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n    };\n\n    var TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n    /**\n     * @return {number} in minutes\n     */\n    number.getTimezoneOffset = function () {\n        return (new Date()).getTimezoneOffset();\n    };\n\n    /**\n     * @param {string|Date|number} value These values can be accepted:\n     *   + An instance of Date, represent a time in its own time zone.\n     *   + Or string in a subset of ISO 8601, only including:\n     *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n     *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n     *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n     *     all of which will be treated as local time if time zone is not specified\n     *     (see <https://momentjs.com/>).\n     *   + Or other string format, including (all of which will be treated as loacal time):\n     *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n     *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n     *   + a timestamp, which represent a time in UTC.\n     * @return {Date} date\n     */\n    number.parseDate = function (value) {\n        if (value instanceof Date) {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            // Different browsers parse date in different way, so we parse it manually.\n            // Some other issues:\n            // new Date('1970-01-01') is UTC,\n            // new Date('1970/01/01') and new Date('1970-1-01') is local.\n            // See issue #3623\n            var match = TIME_REG.exec(value);\n\n            if (!match) {\n                // return Invalid Date.\n                return new Date(NaN);\n            }\n\n            var timezoneOffset = number.getTimezoneOffset();\n            var timeOffset = !match[8]\n                ? 0\n                : match[8].toUpperCase() === 'Z'\n                ? timezoneOffset\n                : +match[8].slice(0, 3) * 60 + timezoneOffset;\n\n            // match[n] can only be string or undefined.\n            // But take care of '12' + 1 => '121'.\n            return new Date(\n                +match[1],\n                +(match[2] || 1) - 1,\n                +match[3] || 1,\n                +match[4] || 0,\n                +(match[5] || 0) - timeOffset,\n                +match[6] || 0,\n                +match[7] || 0\n            );\n        }\n        else if (value == null) {\n            return new Date(NaN);\n        }\n\n        return new Date(Math.round(value));\n    };\n\n    /**\n     * Quantity of a number. e.g. 0.1, 1, 10, 100\n     *\n     * @param  {number} val\n     * @return {number}\n     */\n    number.quantity = function (val) {\n        return Math.pow(10, quantityExponent(val));\n    };\n\n    function quantityExponent(val) {\n        return Math.floor(Math.log(val) / Math.LN10);\n    }\n\n    /**\n     * find a “nice” number approximately equal to x. Round the number if round = true,\n     * take ceiling if round = false. The primary observation is that the “nicest”\n     * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n     *\n     * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n     *\n     * @param  {number} val Non-negative value.\n     * @param  {boolean} round\n     * @return {number}\n     */\n    number.nice = function (val, round) {\n        var exponent = quantityExponent(val);\n        var exp10 = Math.pow(10, exponent);\n        var f = val / exp10; // 1 <= f < 10\n        var nf;\n        if (round) {\n            if (f < 1.5) { nf = 1; }\n            else if (f < 2.5) { nf = 2; }\n            else if (f < 4) { nf = 3; }\n            else if (f < 7) { nf = 5; }\n            else { nf = 10; }\n        }\n        else {\n            if (f < 1) { nf = 1; }\n            else if (f < 2) { nf = 2; }\n            else if (f < 3) { nf = 3; }\n            else if (f < 5) { nf = 5; }\n            else { nf = 10; }\n        }\n        val = nf * exp10;\n\n        // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n        // 20 is the uppper bound of toFixed.\n        return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n    };\n\n    /**\n     * Order intervals asc, and split them when overlap.\n     * expect(numberUtil.reformIntervals([\n     *     {interval: [18, 62], close: [1, 1]},\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [1, 1]},\n     *     {interval: [62, 150], close: [1, 1]},\n     *     {interval: [106, 150], close: [1, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ])).toEqual([\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [0, 1]},\n     *     {interval: [18, 62], close: [0, 1]},\n     *     {interval: [62, 150], close: [0, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ]);\n     * @param {Array.<Object>} list, where `close` mean open or close\n     *        of the interval, and Infinity can be used.\n     * @return {Array.<Object>} The origin list, which has been reformed.\n     */\n    number.reformIntervals = function (list) {\n        list.sort(function (a, b) {\n            return littleThan(a, b, 0) ? -1 : 1;\n        });\n\n        var curr = -Infinity;\n        var currClose = 1;\n        for (var i = 0; i < list.length;) {\n            var interval = list[i].interval;\n            var close = list[i].close;\n\n            for (var lg = 0; lg < 2; lg++) {\n                if (interval[lg] <= curr) {\n                    interval[lg] = curr;\n                    close[lg] = !lg ? 1 - currClose : 1;\n                }\n                curr = interval[lg];\n                currClose = close[lg];\n            }\n\n            if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n                list.splice(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n\n        return list;\n\n        function littleThan(a, b, lg) {\n            return a.interval[lg] < b.interval[lg]\n                || (\n                    a.interval[lg] === b.interval[lg]\n                    && (\n                        (a.close[lg] - b.close[lg] === (!lg ? 1 : -1))\n                        || (!lg && littleThan(a, b, 1))\n                    )\n                );\n        }\n    };\n\n    /**\n     * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n     * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n     * subtraction forces infinities to NaN\n     *\n     * @param {*} v\n     * @return {boolean}\n     */\n    number.isNumeric = function (v) {\n        return v - parseFloat(v) >= 0;\n    };\n\n    module.exports = number;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/number.js\n// module id = 610\n// module chunks = 0 1 2","\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n\n    /**\n     * @typedef {Float32Array|Array.<number>} Vector2\n     */\n    /**\n     * 二维向量类\n     * @exports zrender/tool/vector\n     */\n    var vector = {\n        /**\n         * 创建一个向量\n         * @param {number} [x=0]\n         * @param {number} [y=0]\n         * @return {Vector2}\n         */\n        create: function (x, y) {\n            var out = new ArrayCtor(2);\n            if (x == null) {\n                x = 0;\n            }\n            if (y == null) {\n                y = 0;\n            }\n            out[0] = x;\n            out[1] = y;\n            return out;\n        },\n\n        /**\n         * 复制向量数据\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        copy: function (out, v) {\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 克隆一个向量\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        clone: function (v) {\n            var out = new ArrayCtor(2);\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 设置向量的两个项\n         * @param {Vector2} out\n         * @param {number} a\n         * @param {number} b\n         * @return {Vector2} 结果\n         */\n        set: function (out, a, b) {\n            out[0] = a;\n            out[1] = b;\n            return out;\n        },\n\n        /**\n         * 向量相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        add: function (out, v1, v2) {\n            out[0] = v1[0] + v2[0];\n            out[1] = v1[1] + v2[1];\n            return out;\n        },\n\n        /**\n         * 向量缩放后相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} a\n         */\n        scaleAndAdd: function (out, v1, v2, a) {\n            out[0] = v1[0] + v2[0] * a;\n            out[1] = v1[1] + v2[1] * a;\n            return out;\n        },\n\n        /**\n         * 向量相减\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        sub: function (out, v1, v2) {\n            out[0] = v1[0] - v2[0];\n            out[1] = v1[1] - v2[1];\n            return out;\n        },\n\n        /**\n         * 向量长度\n         * @param {Vector2} v\n         * @return {number}\n         */\n        len: function (v) {\n            return Math.sqrt(this.lenSquare(v));\n        },\n\n        /**\n         * 向量长度平方\n         * @param {Vector2} v\n         * @return {number}\n         */\n        lenSquare: function (v) {\n            return v[0] * v[0] + v[1] * v[1];\n        },\n\n        /**\n         * 向量乘法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        mul: function (out, v1, v2) {\n            out[0] = v1[0] * v2[0];\n            out[1] = v1[1] * v2[1];\n            return out;\n        },\n\n        /**\n         * 向量除法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        div: function (out, v1, v2) {\n            out[0] = v1[0] / v2[0];\n            out[1] = v1[1] / v2[1];\n            return out;\n        },\n\n        /**\n         * 向量点乘\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        dot: function (v1, v2) {\n            return v1[0] * v2[0] + v1[1] * v2[1];\n        },\n\n        /**\n         * 向量缩放\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {number} s\n         */\n        scale: function (out, v, s) {\n            out[0] = v[0] * s;\n            out[1] = v[1] * s;\n            return out;\n        },\n\n        /**\n         * 向量归一化\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        normalize: function (out, v) {\n            var d = vector.len(v);\n            if (d === 0) {\n                out[0] = 0;\n                out[1] = 0;\n            }\n            else {\n                out[0] = v[0] / d;\n                out[1] = v[1] / d;\n            }\n            return out;\n        },\n\n        /**\n         * 计算向量间距离\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distance: function (v1, v2) {\n            return Math.sqrt(\n                (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1])\n            );\n        },\n\n        /**\n         * 向量距离平方\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distanceSquare: function (v1, v2) {\n            return (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n        },\n\n        /**\n         * 求负向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        negate: function (out, v) {\n            out[0] = -v[0];\n            out[1] = -v[1];\n            return out;\n        },\n\n        /**\n         * 插值两个点\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} t\n         */\n        lerp: function (out, v1, v2, t) {\n            out[0] = v1[0] + t * (v2[0] - v1[0]);\n            out[1] = v1[1] + t * (v2[1] - v1[1]);\n            return out;\n        },\n\n        /**\n         * 矩阵左乘向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {Vector2} m\n         */\n        applyTransform: function (out, v, m) {\n            var x = v[0];\n            var y = v[1];\n            out[0] = m[0] * x + m[2] * y + m[4];\n            out[1] = m[1] * x + m[3] * y + m[5];\n            return out;\n        },\n        /**\n         * 求两个向量最小值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        min: function (out, v1, v2) {\n            out[0] = Math.min(v1[0], v2[0]);\n            out[1] = Math.min(v1[1], v2[1]);\n            return out;\n        },\n        /**\n         * 求两个向量最大值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        max: function (out, v1, v2) {\n            out[0] = Math.max(v1[0], v2[0]);\n            out[1] = Math.max(v1[1], v2[1]);\n            return out;\n        }\n    };\n\n    vector.length = vector.len;\n    vector.lengthSquare = vector.lenSquare;\n    vector.dist = vector.distance;\n    vector.distSquare = vector.distanceSquare;\n\n    module.exports = vector;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/vector.js\n// module id = 611\n// module chunks = 0 1 2","/**\n * Path element\n * @module zrender/graphic/Path\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var zrUtil = require('../core/util');\n    var PathProxy = require('../core/PathProxy');\n    var pathContain = require('../contain/path');\n\n    var Pattern = require('./Pattern');\n    var getCanvasPattern = Pattern.prototype.getCanvasPattern;\n\n    var abs = Math.abs;\n\n    var pathProxyForDraw = new PathProxy(true);\n    /**\n     * @alias module:zrender/graphic/Path\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function Path(opts) {\n        Displayable.call(this, opts);\n\n        /**\n         * @type {module:zrender/core/PathProxy}\n         * @readOnly\n         */\n        this.path = null;\n    }\n\n    Path.prototype = {\n\n        constructor: Path,\n\n        type: 'path',\n\n        __dirtyPath: true,\n\n        strokeContainThreshold: 5,\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var path = this.path || pathProxyForDraw;\n            var hasStroke = style.hasStroke();\n            var hasFill = style.hasFill();\n            var fill = style.fill;\n            var stroke = style.stroke;\n            var hasFillGradient = hasFill && !!(fill.colorStops);\n            var hasStrokeGradient = hasStroke && !!(stroke.colorStops);\n            var hasFillPattern = hasFill && !!(fill.image);\n            var hasStrokePattern = hasStroke && !!(stroke.image);\n\n            style.bind(ctx, this, prevEl);\n            this.setTransform(ctx);\n\n            if (this.__dirty) {\n                var rect;\n                // Update gradient because bounding rect may changed\n                if (hasFillGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._fillGradient = style.getGradient(ctx, fill, rect);\n                }\n                if (hasStrokeGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._strokeGradient = style.getGradient(ctx, stroke, rect);\n                }\n            }\n            // Use the gradient or pattern\n            if (hasFillGradient) {\n                // PENDING If may have affect the state\n                ctx.fillStyle = this._fillGradient;\n            }\n            else if (hasFillPattern) {\n                ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n            }\n            if (hasStrokeGradient) {\n                ctx.strokeStyle = this._strokeGradient;\n            }\n            else if (hasStrokePattern) {\n                ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n            }\n\n            var lineDash = style.lineDash;\n            var lineDashOffset = style.lineDashOffset;\n\n            var ctxLineDash = !!ctx.setLineDash;\n\n            // Update path sx, sy\n            var scale = this.getGlobalScale();\n            path.setScale(scale[0], scale[1]);\n\n            // Proxy context\n            // Rebuild path in following 2 cases\n            // 1. Path is dirty\n            // 2. Path needs javascript implemented lineDash stroking.\n            //    In this case, lineDash information will not be saved in PathProxy\n            if (this.__dirtyPath\n                || (lineDash && !ctxLineDash && hasStroke)\n            ) {\n                path.beginPath(ctx);\n\n                // Setting line dash before build path\n                if (lineDash && !ctxLineDash) {\n                    path.setLineDash(lineDash);\n                    path.setLineDashOffset(lineDashOffset);\n                }\n\n                this.buildPath(path, this.shape, false);\n\n                // Clear path dirty flag\n                if (this.path) {\n                    this.__dirtyPath = false;\n                }\n            }\n            else {\n                // Replay path building\n                ctx.beginPath();\n                this.path.rebuildPath(ctx);\n            }\n\n            hasFill && path.fill(ctx);\n\n            if (lineDash && ctxLineDash) {\n                ctx.setLineDash(lineDash);\n                ctx.lineDashOffset = lineDashOffset;\n            }\n\n            hasStroke && path.stroke(ctx);\n\n            if (lineDash && ctxLineDash) {\n                // PENDING\n                // Remove lineDash\n                ctx.setLineDash([]);\n            }\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n        // Like in circle\n        buildPath: function (ctx, shapeCfg, inBundle) {},\n\n        createPathProxy: function () {\n            this.path = new PathProxy();\n        },\n\n        getBoundingRect: function () {\n            var rect = this._rect;\n            var style = this.style;\n            var needsUpdateRect = !rect;\n            if (needsUpdateRect) {\n                var path = this.path;\n                if (!path) {\n                    // Create path on demand.\n                    path = this.path = new PathProxy();\n                }\n                if (this.__dirtyPath) {\n                    path.beginPath();\n                    this.buildPath(path, this.shape, false);\n                }\n                rect = path.getBoundingRect();\n            }\n            this._rect = rect;\n\n            if (style.hasStroke()) {\n                // Needs update rect with stroke lineWidth when\n                // 1. Element changes scale or lineWidth\n                // 2. Shape is changed\n                var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n                if (this.__dirty || needsUpdateRect) {\n                    rectWithStroke.copy(rect);\n                    // FIXME Must after updateTransform\n                    var w = style.lineWidth;\n                    // PENDING, Min line width is needed when line is horizontal or vertical\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n\n                    // Only add extra hover lineWidth when there are no fill\n                    if (!style.hasFill()) {\n                        w = Math.max(w, this.strokeContainThreshold || 4);\n                    }\n                    // Consider line width\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        rectWithStroke.width += w / lineScale;\n                        rectWithStroke.height += w / lineScale;\n                        rectWithStroke.x -= w / lineScale / 2;\n                        rectWithStroke.y -= w / lineScale / 2;\n                    }\n                }\n\n                // Return rect with stroke\n                return rectWithStroke;\n            }\n\n            return rect;\n        },\n\n        contain: function (x, y) {\n            var localPos = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            var style = this.style;\n            x = localPos[0];\n            y = localPos[1];\n\n            if (rect.contain(x, y)) {\n                var pathData = this.path.data;\n                if (style.hasStroke()) {\n                    var lineWidth = style.lineWidth;\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        // Only add extra hover lineWidth when there are no fill\n                        if (!style.hasFill()) {\n                            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n                        }\n                        if (pathContain.containStroke(\n                            pathData, lineWidth / lineScale, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                }\n                if (style.hasFill()) {\n                    return pathContain.contain(pathData, x, y);\n                }\n            }\n            return false;\n        },\n\n        /**\n         * @param  {boolean} dirtyPath\n         */\n        dirty: function (dirtyPath) {\n            if (dirtyPath == null) {\n                dirtyPath = true;\n            }\n            // Only mark dirty, not mark clean\n            if (dirtyPath) {\n                this.__dirtyPath = dirtyPath;\n                this._rect = null;\n            }\n\n            this.__dirty = true;\n\n            this.__zr && this.__zr.refresh();\n\n            // Used as a clipping path\n            if (this.__clipTarget) {\n                this.__clipTarget.dirty();\n            }\n        },\n\n        /**\n         * Alias for animate('shape')\n         * @param {boolean} loop\n         */\n        animateShape: function (loop) {\n            return this.animate('shape', loop);\n        },\n\n        // Overwrite attrKV\n        attrKV: function (key, value) {\n            // FIXME\n            if (key === 'shape') {\n                this.setShape(value);\n                this.__dirtyPath = true;\n                this._rect = null;\n            }\n            else {\n                Displayable.prototype.attrKV.call(this, key, value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setShape: function (key, value) {\n            var shape = this.shape;\n            // Path from string may not have shape\n            if (shape) {\n                if (zrUtil.isObject(key)) {\n                    for (var name in key) {\n                        if (key.hasOwnProperty(name)) {\n                            shape[name] = key[name];\n                        }\n                    }\n                }\n                else {\n                    shape[key] = value;\n                }\n                this.dirty(true);\n            }\n            return this;\n        },\n\n        getLineScale: function () {\n            var m = this.transform;\n            // Get the line scale.\n            // Determinant of `m` means how much the area is enlarged by the\n            // transformation. So its square root can be used as a scale factor\n            // for width.\n            return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\n                ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\n                : 1;\n        }\n    };\n\n    /**\n     * 扩展一个 Path element, 比如星形，圆等。\n     * Extend a path element\n     * @param {Object} props\n     * @param {string} props.type Path type\n     * @param {Function} props.init Initialize\n     * @param {Function} props.buildPath Overwrite buildPath method\n     * @param {Object} [props.style] Extended default style config\n     * @param {Object} [props.shape] Extended default shape config\n     */\n    Path.extend = function (defaults) {\n        var Sub = function (opts) {\n            Path.call(this, opts);\n\n            if (defaults.style) {\n                // Extend default style\n                this.style.extendFrom(defaults.style, false);\n            }\n\n            // Extend default shape\n            var defaultShape = defaults.shape;\n            if (defaultShape) {\n                this.shape = this.shape || {};\n                var thisShape = this.shape;\n                for (var name in defaultShape) {\n                    if (\n                        ! thisShape.hasOwnProperty(name)\n                        && defaultShape.hasOwnProperty(name)\n                    ) {\n                        thisShape[name] = defaultShape[name];\n                    }\n                }\n            }\n\n            defaults.init && defaults.init.call(this, opts);\n        };\n\n        zrUtil.inherits(Sub, Path);\n\n        // FIXME 不能 extend position, rotation 等引用对象\n        for (var name in defaults) {\n            // Extending prototype values and methods\n            if (name !== 'style' && name !== 'shape') {\n                Sub.prototype[name] = defaults[name];\n            }\n        }\n\n        return Sub;\n    };\n\n    zrUtil.inherits(Path, Displayable);\n\n    module.exports = Path;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Path.js\n// module id = 612\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('./number');\n    var textContain = require('zrender/lib/contain/text');\n\n    var formatUtil = {};\n\n    /**\n     * 每三位默认加,格式化\n     * @param {string|number} x\n     * @return {string}\n     */\n    formatUtil.addCommas = function (x) {\n        if (isNaN(x)) {\n            return '-';\n        }\n        x = (x + '').split('.');\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\n               + (x.length > 1 ? ('.' + x[1]) : '');\n    };\n\n    /**\n     * @param {string} str\n     * @param {boolean} [upperCaseFirst=false]\n     * @return {string} str\n     */\n    formatUtil.toCamelCase = function (str, upperCaseFirst) {\n        str = (str || '').toLowerCase().replace(/-(.)/g, function(match, group1) {\n            return group1.toUpperCase();\n        });\n\n        if (upperCaseFirst && str) {\n            str = str.charAt(0).toUpperCase() + str.slice(1);\n        }\n\n        return str;\n    };\n\n    formatUtil.normalizeCssArray = zrUtil.normalizeCssArray;\n\n    var encodeHTML = formatUtil.encodeHTML = function (source) {\n        return String(source)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    };\n\n    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\n    var wrapVar = function (varName, seriesIdx) {\n        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n    };\n\n    /**\n     * Template formatter\n     * @param {string} tpl\n     * @param {Array.<Object>|Object} paramsList\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTpl = function (tpl, paramsList, encode) {\n        if (!zrUtil.isArray(paramsList)) {\n            paramsList = [paramsList];\n        }\n        var seriesLen = paramsList.length;\n        if (!seriesLen) {\n            return '';\n        }\n\n        var $vars = paramsList[0].$vars || [];\n        for (var i = 0; i < $vars.length; i++) {\n            var alias = TPL_VAR_ALIAS[i];\n            var val = wrapVar(alias, 0);\n            tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n        }\n        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n            for (var k = 0; k < $vars.length; k++) {\n                var val = paramsList[seriesIdx][$vars[k]];\n                tpl = tpl.replace(\n                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\n                    encode ? encodeHTML(val) : val\n                );\n            }\n        }\n\n        return tpl;\n    };\n\n    /**\n     * simple Template formatter\n     *\n     * @param {string} tpl\n     * @param {Object} param\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTplSimple = function (tpl, param, encode) {\n        zrUtil.each(param, function (value, key) {\n            tpl = tpl.replace(\n                '{' + key + '}',\n                encode ? encodeHTML(value) : value\n            );\n        });\n        return tpl;\n    };\n\n    /**\n     * @param {string} color\n     * @param {string} [extraCssText]\n     * @return {string}\n     */\n    formatUtil.getTooltipMarker = function (color, extraCssText) {\n        return color\n            ? '<span style=\"display:inline-block;margin-right:5px;'\n                + 'border-radius:10px;width:9px;height:9px;background-color:'\n                + formatUtil.encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>'\n            : '';\n    };\n\n    /**\n     * @param {string} str\n     * @return {string}\n     * @inner\n     */\n    var s2d = function (str) {\n        return str < 10 ? ('0' + str) : str;\n    };\n\n    /**\n     * ISO Date format\n     * @param {string} tpl\n     * @param {number} value\n     * @param {boolean} [isUTC=false] Default in local time.\n     *           see `module:echarts/scale/Time`\n     *           and `module:echarts/util/number#parseDate`.\n     * @inner\n     */\n    formatUtil.formatTime = function (tpl, value, isUTC) {\n        if (tpl === 'week'\n            || tpl === 'month'\n            || tpl === 'quarter'\n            || tpl === 'half-year'\n            || tpl === 'year'\n        ) {\n            tpl = 'MM-dd\\nyyyy';\n        }\n\n        var date = numberUtil.parseDate(value);\n        var utc = isUTC ? 'UTC' : '';\n        var y = date['get' + utc + 'FullYear']();\n        var M = date['get' + utc + 'Month']() + 1;\n        var d = date['get' + utc + 'Date']();\n        var h = date['get' + utc + 'Hours']();\n        var m = date['get' + utc + 'Minutes']();\n        var s = date['get' + utc + 'Seconds']();\n\n        tpl = tpl.replace('MM', s2d(M))\n            .replace('M', M)\n            .replace('yyyy', y)\n            .replace('yy', y % 100)\n            .replace('dd', s2d(d))\n            .replace('d', d)\n            .replace('hh', s2d(h))\n            .replace('h', h)\n            .replace('mm', s2d(m))\n            .replace('m', m)\n            .replace('ss', s2d(s))\n            .replace('s', s);\n\n        return tpl;\n    };\n\n    /**\n     * Capital first\n     * @param {string} str\n     * @return {string}\n     */\n    formatUtil.capitalFirst = function (str) {\n        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n    };\n\n    formatUtil.truncateText = textContain.truncateText;\n\n    formatUtil.getTextRect = textContain.getBoundingRect;\n\n    module.exports = formatUtil;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/format.js\n// module id = 613\n// module chunks = 0 1 2","/**\n * @module echarts/model/Model\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazzUtil = require('../util/clazz');\n    var env = require('zrender/lib/core/env');\n\n    /**\n     * @alias module:echarts/model/Model\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} [parentModel]\n     * @param {module:echarts/model/Global} [ecModel]\n     */\n    function Model(option, parentModel, ecModel) {\n        /**\n         * @type {module:echarts/model/Model}\n         * @readOnly\n         */\n        this.parentModel = parentModel;\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        this.option = option;\n\n        // Simple optimization\n        // if (this.init) {\n        //     if (arguments.length <= 4) {\n        //         this.init(option, parentModel, ecModel, extraOpt);\n        //     }\n        //     else {\n        //         this.init.apply(this, arguments);\n        //     }\n        // }\n    }\n\n    Model.prototype = {\n\n        constructor: Model,\n\n        /**\n         * Model 的初始化函数\n         * @param {Object} option\n         */\n        init: null,\n\n        /**\n         * 从新的 Option merge\n         */\n        mergeOption: function (option) {\n            zrUtil.merge(this.option, option, true);\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        get: function (path, ignoreParent) {\n            if (path == null) {\n                return this.option;\n            }\n\n            return doGet(\n                this.option,\n                this.parsePath(path),\n                !ignoreParent && getParent(this, path)\n            );\n        },\n\n        /**\n         * @param {string} key\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        getShallow: function (key, ignoreParent) {\n            var option = this.option;\n\n            var val = option == null ? option : option[key];\n            var parentModel = !ignoreParent && getParent(this, key);\n            if (val == null && parentModel) {\n                val = parentModel.getShallow(key);\n            }\n            return val;\n        },\n\n        /**\n         * @param {string|Array.<string>} [path]\n         * @param {module:echarts/model/Model} [parentModel]\n         * @return {module:echarts/model/Model}\n         */\n        getModel: function (path, parentModel) {\n            var obj = path == null\n                ? this.option\n                : doGet(this.option, path = this.parsePath(path));\n\n            var thisParentModel;\n            parentModel = parentModel || (\n                (thisParentModel = getParent(this, path))\n                    && thisParentModel.getModel(path)\n            );\n\n            return new Model(obj, parentModel, this.ecModel);\n        },\n\n        /**\n         * If model has option\n         */\n        isEmpty: function () {\n            return this.option == null;\n        },\n\n        restoreData: function () {},\n\n        // Pending\n        clone: function () {\n            var Ctor = this.constructor;\n            return new Ctor(zrUtil.clone(this.option));\n        },\n\n        setReadOnly: function (properties) {\n            clazzUtil.setReadOnly(this, properties);\n        },\n\n        // If path is null/undefined, return null/undefined.\n        parsePath: function(path) {\n            if (typeof path === 'string') {\n                path = path.split('.');\n            }\n            return path;\n        },\n\n        /**\n         * @param {Function} getParentMethod\n         *        param {Array.<string>|string} path\n         *        return {module:echarts/model/Model}\n         */\n        customizeGetParent: function (getParentMethod) {\n            clazzUtil.set(this, 'getParent', getParentMethod);\n        },\n\n        isAnimationEnabled: function () {\n            if (!env.node) {\n                if (this.option.animation != null) {\n                    return !!this.option.animation;\n                }\n                else if (this.parentModel) {\n                    return this.parentModel.isAnimationEnabled();\n                }\n            }\n        }\n    };\n\n    function doGet(obj, pathArr, parentModel) {\n        for (var i = 0; i < pathArr.length; i++) {\n            // Ignore empty\n            if (!pathArr[i]) {\n                continue;\n            }\n            // obj could be number/string/... (like 0)\n            obj = (obj && typeof obj === 'object') ? obj[pathArr[i]] : null;\n            if (obj == null) {\n                break;\n            }\n        }\n        if (obj == null && parentModel) {\n            obj = parentModel.get(pathArr);\n        }\n        return obj;\n    }\n\n    // `path` can be null/undefined\n    function getParent(model, path) {\n        var getParentMethod = clazzUtil.get(model, 'getParent');\n        return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n    }\n\n    // Enable Model.extend.\n    clazzUtil.enableClassExtend(Model);\n\n    var mixin = zrUtil.mixin;\n    mixin(Model, require('./mixin/lineStyle'));\n    mixin(Model, require('./mixin/areaStyle'));\n    mixin(Model, require('./mixin/textStyle'));\n    mixin(Model, require('./mixin/itemStyle'));\n\n    module.exports = Model;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Model.js\n// module id = 614\n// module chunks = 0 1 2","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\n\n    var env = {};\n    if (typeof navigator === 'undefined') {\n        // In node\n        env = {\n            browser: {},\n            os: {},\n            node: true,\n            // Assume canvas is supported\n            canvasSupported: true\n        };\n    }\n    else {\n        env = detect(navigator.userAgent);\n    }\n\n    module.exports = env;\n\n    // Zepto.js\n    // (c) 2010-2013 Thomas Fuchs\n    // Zepto.js may be freely distributed under the MIT license.\n\n    function detect(ua) {\n        var os = {};\n        var browser = {};\n        // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n        // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n        // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n        // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n        // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n        // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n        // var touchpad = webos && ua.match(/TouchPad/);\n        // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n        // var silk = ua.match(/Silk\\/([\\d._]+)/);\n        // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n        // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n        // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n        // var playbook = ua.match(/PlayBook/);\n        // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n        var firefox = ua.match(/Firefox\\/([\\d.]+)/);\n        // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n        // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n        var ie = ua.match(/MSIE\\s([\\d.]+)/)\n            // IE 11 Trident/7.0; rv:11.0\n            || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n        var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n        var weChat = (/micromessenger/i).test(ua);\n\n        // Todo: clean this up with a better OS/browser seperation:\n        // - discern (more) between multiple browsers on android\n        // - decide if kindle fire in silk mode is android or not\n        // - Firefox on Android doesn't specify the Android version\n        // - possibly devide in os, device and browser hashes\n\n        // if (browser.webkit = !!webkit) browser.version = webkit[1];\n\n        // if (android) os.android = true, os.version = android[2];\n        // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n        // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n        // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n        // if (webos) os.webos = true, os.version = webos[2];\n        // if (touchpad) os.touchpad = true;\n        // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n        // if (bb10) os.bb10 = true, os.version = bb10[2];\n        // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n        // if (playbook) browser.playbook = true;\n        // if (kindle) os.kindle = true, os.version = kindle[1];\n        // if (silk) browser.silk = true, browser.version = silk[1];\n        // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n        // if (chrome) browser.chrome = true, browser.version = chrome[1];\n        if (firefox) {\n            browser.firefox = true;\n            browser.version = firefox[1];\n        }\n        // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n        // if (webview) browser.webview = true;\n\n        if (ie) {\n            browser.ie = true;\n            browser.version = ie[1];\n        }\n\n        if (edge) {\n            browser.edge = true;\n            browser.version = edge[1];\n        }\n\n        // It is difficult to detect WeChat in Win Phone precisely, because ua can\n        // not be set on win phone. So we do not consider Win Phone.\n        if (weChat) {\n            browser.weChat = true;\n        }\n\n        // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n        //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n        // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n        //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n        //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n        return {\n            browser: browser,\n            os: os,\n            node: false,\n            // 原生canvas支持，改极端点了\n            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n            canvasSupported : document.createElement('canvas').getContext ? true : false,\n            // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n            // works on most browsers\n            // IE10/11 does not support touch event, and MS Edge supports them but not by\n            // default, so we dont check navigator.maxTouchPoints for them here.\n            touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n            // <http://caniuse.com/#search=pointer%20event>.\n            pointerEventsSupported: 'onpointerdown' in window\n                // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n                // events currently. So we dont use that on other browsers unless tested sufficiently.\n                // Although IE 10 supports pointer event, it use old style and is different from the\n                // standard. So we exclude that. (IE 10 is hardly used on touch device)\n                && (browser.edge || (browser.ie && browser.version >= 11))\n        };\n    }\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/env.js\n// module id = 615\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var clazz = {};\n\n    var TYPE_DELIMITER = '.';\n    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n    var MEMBER_PRIFIX = '\\0ec_\\0';\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name] = value;` (can be right-value)\n     * @public\n     */\n    clazz.set = function (host, name, value) {\n        return (host[MEMBER_PRIFIX + name] = value);\n    };\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name];`\n     * @public\n     */\n    clazz.get = function (host, name) {\n        return host[MEMBER_PRIFIX + name];\n    };\n\n    /**\n     * For hidden private class member.\n     * The same behavior as `host.hasOwnProperty(name);`\n     * @public\n     */\n    clazz.hasOwn = function (host, name) {\n        return host.hasOwnProperty(MEMBER_PRIFIX + name);\n    };\n\n    /**\n     * Notice, parseClassType('') should returns {main: '', sub: ''}\n     * @public\n     */\n    var parseClassType = clazz.parseClassType = function (componentType) {\n        var ret = {main: '', sub: ''};\n        if (componentType) {\n            componentType = componentType.split(TYPE_DELIMITER);\n            ret.main = componentType[0] || '';\n            ret.sub = componentType[1] || '';\n        }\n        return ret;\n    };\n\n    /**\n     * @public\n     */\n    function checkClassType(componentType) {\n        zrUtil.assert(\n            /^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType),\n            'componentType \"' + componentType + '\" illegal'\n        );\n    }\n\n    /**\n     * @public\n     */\n    clazz.enableClassExtend = function (RootClass, mandatoryMethods) {\n\n        RootClass.$constructor = RootClass;\n        RootClass.extend = function (proto) {\n\n            if (__DEV__) {\n                zrUtil.each(mandatoryMethods, function (method) {\n                    if (!proto[method]) {\n                        console.warn(\n                            'Method `' + method + '` should be implemented'\n                            + (proto.type ? ' in ' + proto.type : '') + '.'\n                        );\n                    }\n                });\n            }\n\n            var superClass = this;\n            var ExtendedClass = function () {\n                if (!proto.$constructor) {\n                    superClass.apply(this, arguments);\n                }\n                else {\n                    proto.$constructor.apply(this, arguments);\n                }\n            };\n\n            zrUtil.extend(ExtendedClass.prototype, proto);\n\n            ExtendedClass.extend = this.extend;\n            ExtendedClass.superCall = superCall;\n            ExtendedClass.superApply = superApply;\n            zrUtil.inherits(ExtendedClass, this);\n            ExtendedClass.superClass = superClass;\n\n            return ExtendedClass;\n        };\n    };\n\n    // superCall should have class info, which can not be fetch from 'this'.\n    // Consider this case:\n    // class A has method f,\n    // class B inherits class A, overrides method f, f call superApply('f'),\n    // class C inherits class B, do not overrides method f,\n    // then when method of class C is called, dead loop occured.\n    function superCall(context, methodName) {\n        var args = zrUtil.slice(arguments, 2);\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    function superApply(context, methodName, args) {\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    /**\n     * @param {Object} entity\n     * @param {Object} options\n     * @param {boolean} [options.registerWhenExtend]\n     * @public\n     */\n    clazz.enableClassManagement = function (entity, options) {\n        options = options || {};\n\n        /**\n         * Component model classes\n         * key: componentType,\n         * value:\n         *     componentClass, when componentType is 'xxx'\n         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n         * @type {Object}\n         */\n        var storage = {};\n\n        entity.registerClass = function (Clazz, componentType) {\n            if (componentType) {\n                checkClassType(componentType);\n                componentType = parseClassType(componentType);\n\n                if (!componentType.sub) {\n                    if (__DEV__) {\n                        if (storage[componentType.main]) {\n                            console.warn(componentType.main + ' exists.');\n                        }\n                    }\n                    storage[componentType.main] = Clazz;\n                }\n                else if (componentType.sub !== IS_CONTAINER) {\n                    var container = makeContainer(componentType);\n                    container[componentType.sub] = Clazz;\n                }\n            }\n            return Clazz;\n        };\n\n        entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n            var Clazz = storage[componentMainType];\n\n            if (Clazz && Clazz[IS_CONTAINER]) {\n                Clazz = subType ? Clazz[subType] : null;\n            }\n\n            if (throwWhenNotFound && !Clazz) {\n                throw new Error(\n                    !subType\n                        ? componentMainType + '.' + 'type should be specified.'\n                        : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.'\n                );\n            }\n\n            return Clazz;\n        };\n\n        entity.getClassesByMainType = function (componentType) {\n            componentType = parseClassType(componentType);\n\n            var result = [];\n            var obj = storage[componentType.main];\n\n            if (obj && obj[IS_CONTAINER]) {\n                zrUtil.each(obj, function (o, type) {\n                    type !== IS_CONTAINER && result.push(o);\n                });\n            }\n            else {\n                result.push(obj);\n            }\n\n            return result;\n        };\n\n        entity.hasClass = function (componentType) {\n            // Just consider componentType.main.\n            componentType = parseClassType(componentType);\n            return !!storage[componentType.main];\n        };\n\n        /**\n         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n         */\n        entity.getAllClassMainTypes = function () {\n            var types = [];\n            zrUtil.each(storage, function (obj, type) {\n                types.push(type);\n            });\n            return types;\n        };\n\n        /**\n         * If a main type is container and has sub types\n         * @param  {string}  mainType\n         * @return {boolean}\n         */\n        entity.hasSubTypes = function (componentType) {\n            componentType = parseClassType(componentType);\n            var obj = storage[componentType.main];\n            return obj && obj[IS_CONTAINER];\n        };\n\n        entity.parseClassType = parseClassType;\n\n        function makeContainer(componentType) {\n            var container = storage[componentType.main];\n            if (!container || !container[IS_CONTAINER]) {\n                container = storage[componentType.main] = {};\n                container[IS_CONTAINER] = true;\n            }\n            return container;\n        }\n\n        if (options.registerWhenExtend) {\n            var originalExtend = entity.extend;\n            if (originalExtend) {\n                entity.extend = function (proto) {\n                    var ExtendedClass = originalExtend.call(this, proto);\n                    return entity.registerClass(ExtendedClass, proto.type);\n                };\n            }\n        }\n\n        return entity;\n    };\n\n    /**\n     * @param {string|Array.<string>} properties\n     */\n    clazz.setReadOnly = function (obj, properties) {\n        // FIXME It seems broken in IE8 simulation of IE11\n        // if (!zrUtil.isArray(properties)) {\n        //     properties = properties != null ? [properties] : [];\n        // }\n        // zrUtil.each(properties, function (prop) {\n        //     var value = obj[prop];\n\n        //     Object.defineProperty\n        //         && Object.defineProperty(obj, prop, {\n        //             value: value, writable: false\n        //         });\n        //     zrUtil.isArray(obj[prop])\n        //         && Object.freeze\n        //         && Object.freeze(obj[prop]);\n        // });\n    };\n\n    module.exports = clazz;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/clazz.js\n// module id = 616\n// module chunks = 0 1 2","'use strict';\n/**\n * @module echarts/core/BoundingRect\n */\n\n\n    var vec2 = require('./vector');\n    var matrix = require('./matrix');\n\n    var v2ApplyTransform = vec2.applyTransform;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    /**\n     * @alias module:echarts/core/BoundingRect\n     */\n    function BoundingRect(x, y, width, height) {\n\n        if (width < 0) {\n            x = x + width;\n            width = -width;\n        }\n        if (height < 0) {\n            y = y + height;\n            height = -height;\n        }\n\n        /**\n         * @type {number}\n         */\n        this.x = x;\n        /**\n         * @type {number}\n         */\n        this.y = y;\n        /**\n         * @type {number}\n         */\n        this.width = width;\n        /**\n         * @type {number}\n         */\n        this.height = height;\n    }\n\n    BoundingRect.prototype = {\n\n        constructor: BoundingRect,\n\n        /**\n         * @param {module:echarts/core/BoundingRect} other\n         */\n        union: function (other) {\n            var x = mathMin(other.x, this.x);\n            var y = mathMin(other.y, this.y);\n\n            this.width = mathMax(\n                    other.x + other.width,\n                    this.x + this.width\n                ) - x;\n            this.height = mathMax(\n                    other.y + other.height,\n                    this.y + this.height\n                ) - y;\n            this.x = x;\n            this.y = y;\n        },\n\n        /**\n         * @param {Array.<number>} m\n         * @methods\n         */\n        applyTransform: (function () {\n            var lt = [];\n            var rb = [];\n            var lb = [];\n            var rt = [];\n            return function (m) {\n                // In case usage like this\n                // el.getBoundingRect().applyTransform(el.transform)\n                // And element has no transform\n                if (!m) {\n                    return;\n                }\n                lt[0] = lb[0] = this.x;\n                lt[1] = rt[1] = this.y;\n                rb[0] = rt[0] = this.x + this.width;\n                rb[1] = lb[1] = this.y + this.height;\n\n                v2ApplyTransform(lt, lt, m);\n                v2ApplyTransform(rb, rb, m);\n                v2ApplyTransform(lb, lb, m);\n                v2ApplyTransform(rt, rt, m);\n\n                this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n                this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n                var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n                var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n                this.width = maxX - this.x;\n                this.height = maxY - this.y;\n            };\n        })(),\n\n        /**\n         * Calculate matrix of transforming from self to target rect\n         * @param  {module:zrender/core/BoundingRect} b\n         * @return {Array.<number>}\n         */\n        calculateTransform: function (b) {\n            var a = this;\n            var sx = b.width / a.width;\n            var sy = b.height / a.height;\n\n            var m = matrix.create();\n\n            // 矩阵右乘\n            matrix.translate(m, m, [-a.x, -a.y]);\n            matrix.scale(m, m, [sx, sy]);\n            matrix.translate(m, m, [b.x, b.y]);\n\n            return m;\n        },\n\n        /**\n         * @param {(module:echarts/core/BoundingRect|Object)} b\n         * @return {boolean}\n         */\n        intersect: function (b) {\n            if (!b) {\n                return false;\n            }\n\n            if (!(b instanceof BoundingRect)) {\n                // Normalize negative width/height.\n                b = BoundingRect.create(b);\n            }\n\n            var a = this;\n            var ax0 = a.x;\n            var ax1 = a.x + a.width;\n            var ay0 = a.y;\n            var ay1 = a.y + a.height;\n\n            var bx0 = b.x;\n            var bx1 = b.x + b.width;\n            var by0 = b.y;\n            var by1 = b.y + b.height;\n\n            return ! (ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n        },\n\n        contain: function (x, y) {\n            var rect = this;\n            return x >= rect.x\n                && x <= (rect.x + rect.width)\n                && y >= rect.y\n                && y <= (rect.y + rect.height);\n        },\n\n        /**\n         * @return {module:echarts/core/BoundingRect}\n         */\n        clone: function () {\n            return new BoundingRect(this.x, this.y, this.width, this.height);\n        },\n\n        /**\n         * Copy from another rect\n         */\n        copy: function (other) {\n            this.x = other.x;\n            this.y = other.y;\n            this.width = other.width;\n            this.height = other.height;\n        },\n\n        plain: function () {\n            return {\n                x: this.x,\n                y: this.y,\n                width: this.width,\n                height: this.height\n            };\n        }\n    };\n\n    /**\n     * @param {Object|module:zrender/core/BoundingRect} rect\n     * @param {number} rect.x\n     * @param {number} rect.y\n     * @param {number} rect.width\n     * @param {number} rect.height\n     * @return {module:zrender/core/BoundingRect}\n     */\n    BoundingRect.create = function (rect) {\n        return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n    };\n\n    module.exports = BoundingRect;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/BoundingRect.js\n// module id = 617\n// module chunks = 0 1 2","/**\n * Component model\n *\n * @module echarts/model/Component\n */\n\n\n    var Model = require('./Model');\n    var zrUtil = require('zrender/lib/core/util');\n    var arrayPush = Array.prototype.push;\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n    var layout = require('../util/layout');\n\n    /**\n     * @alias module:echarts/model/Component\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {module:echarts/model/Model} ecModel\n     */\n    var ComponentModel = Model.extend({\n\n        type: 'component',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        id: '',\n\n        /**\n         * @readOnly\n         */\n        name: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        mainType: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        subType: '',\n\n        /**\n         * @readOnly\n         * @type {number}\n         */\n        componentIndex: 0,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        ecModel: null,\n\n        /**\n         * key: componentType\n         * value:  Component model list, can not be null.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @readOnly\n         */\n        dependentModels: [],\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        uid: null,\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        $constructor: function (option, parentModel, ecModel, extraOpt) {\n            Model.call(this, option, parentModel, ecModel, extraOpt);\n\n            this.uid = componentUtil.getUID('componentModel');\n        },\n\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n            this.mergeDefaultAndTheme(option, ecModel);\n        },\n\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            var themeModel = ecModel.getTheme();\n            zrUtil.merge(option, themeModel.get(this.mainType));\n            zrUtil.merge(option, this.getDefaultOption());\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (option, extraOpt) {\n            zrUtil.merge(this.option, option, true);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, option, layoutMode);\n            }\n        },\n\n        // Hooker after init or mergeOption\n        optionUpdated: function (newCptOption, isInit) {},\n\n        getDefaultOption: function () {\n            if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n                var optList = [];\n                var Class = this.constructor;\n                while (Class) {\n                    var opt = Class.prototype.defaultOption;\n                    opt && optList.push(opt);\n                    Class = Class.superClass;\n                }\n\n                var defaultOption = {};\n                for (var i = optList.length - 1; i >= 0; i--) {\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n                }\n                clazzUtil.set(this, '__defaultOption', defaultOption);\n            }\n            return clazzUtil.get(this, '__defaultOption');\n        },\n\n        getReferringComponents: function (mainType) {\n            return this.ecModel.queryComponents({\n                mainType: mainType,\n                index: this.get(mainType + 'Index', true),\n                id: this.get(mainType + 'Id', true)\n            });\n        }\n\n    });\n\n    // Reset ComponentModel.extend, add preConstruct.\n    // clazzUtil.enableClassExtend(\n    //     ComponentModel,\n    //     function (option, parentModel, ecModel, extraOpt) {\n    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\n    //         zrUtil.extend(this, extraOpt);\n\n    //         this.uid = componentUtil.getUID('componentModel');\n\n    //         // this.setReadOnly([\n    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n    //         //     'dependentModels', 'componentIndex'\n    //         // ]);\n    //     }\n    // );\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(\n        ComponentModel, {registerWhenExtend: true}\n    );\n    componentUtil.enableSubTypeDefaulter(ComponentModel);\n\n    // Add capability of ComponentModel.topologicalTravel.\n    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\n    function getDependencies(componentType) {\n        var deps = [];\n        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n        });\n        // Ensure main type\n        return zrUtil.map(deps, function (type) {\n            return clazzUtil.parseClassType(type).main;\n        });\n    }\n\n    zrUtil.mixin(ComponentModel, require('./mixin/boxLayout'));\n\n    module.exports = ComponentModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Component.js\n// module id = 618\n// module chunks = 0 1 2","'use strict';\n// Layout helpers for each component positioning\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n    var numberUtil = require('./number');\n    var formatUtil = require('./format');\n    var parsePercent = numberUtil.parsePercent;\n    var each = zrUtil.each;\n\n    var layout = {};\n\n    /**\n     * @public\n     */\n    var LOCATION_PARAMS = layout.LOCATION_PARAMS = [\n        'left', 'right', 'top', 'bottom', 'width', 'height'\n    ];\n\n    /**\n     * @public\n     */\n    var HV_NAMES = layout.HV_NAMES = [\n        ['width', 'left', 'right'],\n        ['height', 'top', 'bottom']\n    ];\n\n    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\n        var x = 0;\n        var y = 0;\n\n        if (maxWidth == null) {\n            maxWidth = Infinity;\n        }\n        if (maxHeight == null) {\n            maxHeight = Infinity;\n        }\n        var currentLineMaxSize = 0;\n\n        group.eachChild(function (child, idx) {\n            var position = child.position;\n            var rect = child.getBoundingRect();\n            var nextChild = group.childAt(idx + 1);\n            var nextChildRect = nextChild && nextChild.getBoundingRect();\n            var nextX;\n            var nextY;\n\n            if (orient === 'horizontal') {\n                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\n                nextX = x + moveX;\n                // Wrap when width exceeds maxWidth or meet a `newline` group\n                // FIXME compare before adding gap?\n                if (nextX > maxWidth || child.newline) {\n                    x = 0;\n                    nextX = moveX;\n                    y += currentLineMaxSize + gap;\n                    currentLineMaxSize = rect.height;\n                }\n                else {\n                    // FIXME: consider rect.y is not `0`?\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n                }\n            }\n            else {\n                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\n                nextY = y + moveY;\n                // Wrap when width exceeds maxHeight or meet a `newline` group\n                if (nextY > maxHeight || child.newline) {\n                    x += currentLineMaxSize + gap;\n                    y = 0;\n                    nextY = moveY;\n                    currentLineMaxSize = rect.width;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n                }\n            }\n\n            if (child.newline) {\n                return;\n            }\n\n            position[0] = x;\n            position[1] = y;\n\n            orient === 'horizontal'\n                ? (x = nextX + gap)\n                : (y = nextY + gap);\n        });\n    }\n\n    /**\n     * VBox or HBox layouting\n     * @param {string} orient\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.box = boxLayout;\n\n    /**\n     * VBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\n\n    /**\n     * HBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\n\n    /**\n     * If x or x2 is not specified or 'center' 'left' 'right',\n     * the width would be as long as possible.\n     * If y or y2 is not specified or 'middle' 'top' 'bottom',\n     * the height would be as long as possible.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.x]\n     * @param {number|string} [positionInfo.y]\n     * @param {number|string} [positionInfo.x2]\n     * @param {number|string} [positionInfo.y2]\n     * @param {Object} containerRect {width, height}\n     * @param {string|number} margin\n     * @return {Object} {width, height}\n     */\n    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var x = parsePercent(positionInfo.x, containerWidth);\n        var y = parsePercent(positionInfo.y, containerHeight);\n        var x2 = parsePercent(positionInfo.x2, containerWidth);\n        var y2 = parsePercent(positionInfo.y2, containerHeight);\n\n        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        return {\n            width: Math.max(x2 - x - margin[1] - margin[3], 0),\n            height: Math.max(y2 - y - margin[0] - margin[2], 0)\n        };\n    };\n\n    /**\n     * Parse position info.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width]\n     * @param {number|string} [positionInfo.height]\n     * @param {number|string} [positionInfo.aspect] Aspect is width / height\n     * @param {Object} containerRect\n     * @param {string|number} [margin]\n     *\n     * @return {module:zrender/core/BoundingRect}\n     */\n    layout.getLayoutRect = function (\n        positionInfo, containerRect, margin\n    ) {\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var left = parsePercent(positionInfo.left, containerWidth);\n        var top = parsePercent(positionInfo.top, containerHeight);\n        var right = parsePercent(positionInfo.right, containerWidth);\n        var bottom = parsePercent(positionInfo.bottom, containerHeight);\n        var width = parsePercent(positionInfo.width, containerWidth);\n        var height = parsePercent(positionInfo.height, containerHeight);\n\n        var verticalMargin = margin[2] + margin[0];\n        var horizontalMargin = margin[1] + margin[3];\n        var aspect = positionInfo.aspect;\n\n        // If width is not specified, calculate width from left and right\n        if (isNaN(width)) {\n            width = containerWidth - right - horizontalMargin - left;\n        }\n        if (isNaN(height)) {\n            height = containerHeight - bottom - verticalMargin - top;\n        }\n\n        if (aspect != null) {\n            // If width and height are not given\n            // 1. Graph should not exceeds the container\n            // 2. Aspect must be keeped\n            // 3. Graph should take the space as more as possible\n            // FIXME\n            // Margin is not considered, because there is no case that both\n            // using margin and aspect so far.\n            if (isNaN(width) && isNaN(height)) {\n                if (aspect > containerWidth / containerHeight) {\n                    width = containerWidth * 0.8;\n                }\n                else {\n                    height = containerHeight * 0.8;\n                }\n            }\n\n            // Calculate width or height with given aspect\n            if (isNaN(width)) {\n                width = aspect * height;\n            }\n            if (isNaN(height)) {\n                height = width / aspect;\n            }\n        }\n\n        // If left is not specified, calculate left from right and width\n        if (isNaN(left)) {\n            left = containerWidth - right - width - horizontalMargin;\n        }\n        if (isNaN(top)) {\n            top = containerHeight - bottom - height - verticalMargin;\n        }\n\n        // Align left and top\n        switch (positionInfo.left || positionInfo.right) {\n            case 'center':\n                left = containerWidth / 2 - width / 2 - margin[3];\n                break;\n            case 'right':\n                left = containerWidth - width - horizontalMargin;\n                break;\n        }\n        switch (positionInfo.top || positionInfo.bottom) {\n            case 'middle':\n            case 'center':\n                top = containerHeight / 2 - height / 2 - margin[0];\n                break;\n            case 'bottom':\n                top = containerHeight - height - verticalMargin;\n                break;\n        }\n        // If something is wrong and left, top, width, height are calculated as NaN\n        left = left || 0;\n        top = top || 0;\n        if (isNaN(width)) {\n            // Width may be NaN if only one value is given except width\n            width = containerWidth - horizontalMargin - left - (right || 0);\n        }\n        if (isNaN(height)) {\n            // Height may be NaN if only one value is given except height\n            height = containerHeight - verticalMargin - top - (bottom || 0);\n        }\n\n        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n        rect.margin = margin;\n        return rect;\n    };\n\n\n    /**\n     * Position a zr element in viewport\n     *  Group position is specified by either\n     *  {left, top}, {right, bottom}\n     *  If all properties exists, right and bottom will be igonred.\n     *\n     * Logic:\n     *     1. Scale (against origin point in parent coord)\n     *     2. Rotate (against origin point in parent coord)\n     *     3. Traslate (with el.position by this method)\n     * So this method only fixes the last step 'Traslate', which does not affect\n     * scaling and rotating.\n     *\n     * If be called repeatly with the same input el, the same result will be gotten.\n     *\n     * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n     * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @param {Object} [opt]\n     * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n     * @param {Array.<number>} [opt.boundingMode='all']\n     *        Specify how to calculate boundingRect when locating.\n     *        'all': Position the boundingRect that is transformed and uioned\n     *               both itself and its descendants.\n     *               This mode simplies confine the elements in the bounding\n     *               of their container (e.g., using 'right: 0').\n     *        'raw': Position the boundingRect that is not transformed and only itself.\n     *               This mode is useful when you want a element can overflow its\n     *               container. (Consider a rotated circle needs to be located in a corner.)\n     *               In this mode positionInfo.width/height can only be number.\n     */\n    layout.positionElement = function (el, positionInfo, containerRect, margin, opt) {\n        var h = !opt || !opt.hv || opt.hv[0];\n        var v = !opt || !opt.hv || opt.hv[1];\n        var boundingMode = opt && opt.boundingMode || 'all';\n\n        if (!h && !v) {\n            return;\n        }\n\n        var rect;\n        if (boundingMode === 'raw') {\n            rect = el.type === 'group'\n                ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0)\n                : el.getBoundingRect();\n        }\n        else {\n            rect = el.getBoundingRect();\n            if (el.needLocalTransform()) {\n                var transform = el.getLocalTransform();\n                // Notice: raw rect may be inner object of el,\n                // which should not be modified.\n                rect = rect.clone();\n                rect.applyTransform(transform);\n            }\n        }\n\n        // The real width and height can not be specified but calculated by the given el.\n        positionInfo = layout.getLayoutRect(\n            zrUtil.defaults(\n                {width: rect.width, height: rect.height},\n                positionInfo\n            ),\n            containerRect,\n            margin\n        );\n\n        // Because 'tranlate' is the last step in transform\n        // (see zrender/core/Transformable#getLocalTransfrom),\n        // we can just only modify el.position to get final result.\n        var elPos = el.position;\n        var dx = h ? positionInfo.x - rect.x : 0;\n        var dy = v ? positionInfo.y - rect.y : 0;\n\n        el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n    };\n\n    /**\n     * @param {Object} option Contains some of the properties in HV_NAMES.\n     * @param {number} hvIdx 0: horizontal; 1: vertical.\n     */\n    layout.sizeCalculable = function (option, hvIdx) {\n        return option[HV_NAMES[hvIdx][0]] != null\n            || (option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null);\n    };\n\n    /**\n     * Consider Case:\n     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n     * through setOption or media query, using normal zrUtil.merge will cause\n     * {right: 0} does not take effect.\n     *\n     * @example\n     * ComponentModel.extend({\n     *     init: function () {\n     *         ...\n     *         var inputPositionParams = layout.getLayoutParams(option);\n     *         this.mergeOption(inputPositionParams);\n     *     },\n     *     mergeOption: function (newOption) {\n     *         newOption && zrUtil.merge(thisOption, newOption, true);\n     *         layout.mergeLayoutParam(thisOption, newOption);\n     *     }\n     * });\n     *\n     * @param {Object} targetOption\n     * @param {Object} newOption\n     * @param {Object|string} [opt]\n     * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n     *  that width (or height) should not be calculated by left and right (or top and bottom).\n     */\n    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\n        !zrUtil.isObject(opt) && (opt = {});\n\n        var ignoreSize = opt.ignoreSize;\n        !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n\n        var hResult = merge(HV_NAMES[0], 0);\n        var vResult = merge(HV_NAMES[1], 1);\n\n        copy(HV_NAMES[0], targetOption, hResult);\n        copy(HV_NAMES[1], targetOption, vResult);\n\n        function merge(names, hvIdx) {\n            var newParams = {};\n            var newValueCount = 0;\n            var merged = {};\n            var mergedValueCount = 0;\n            var enoughParamNumber = 2;\n\n            each(names, function (name) {\n                merged[name] = targetOption[name];\n            });\n            each(names, function (name) {\n                // Consider case: newOption.width is null, which is\n                // set by user for removing width setting.\n                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n                hasValue(newParams, name) && newValueCount++;\n                hasValue(merged, name) && mergedValueCount++;\n            });\n\n            if (ignoreSize[hvIdx]) {\n                // Only one of left/right is premitted to exist.\n                if (hasValue(newOption, names[1])) {\n                    merged[names[2]] = null;\n                }\n                else if (hasValue(newOption, names[2])) {\n                    merged[names[1]] = null;\n                }\n                return merged;\n            }\n\n            // Case: newOption: {width: ..., right: ...},\n            // or targetOption: {right: ...} and newOption: {width: ...},\n            // There is no conflict when merged only has params count\n            // little than enoughParamNumber.\n            if (mergedValueCount === enoughParamNumber || !newValueCount) {\n                return merged;\n            }\n            // Case: newOption: {width: ..., right: ...},\n            // Than we can make sure user only want those two, and ignore\n            // all origin params in targetOption.\n            else if (newValueCount >= enoughParamNumber) {\n                return newParams;\n            }\n            else {\n                // Chose another param from targetOption by priority.\n                for (var i = 0; i < names.length; i++) {\n                    var name = names[i];\n                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n                        newParams[name] = targetOption[name];\n                        break;\n                    }\n                }\n                return newParams;\n            }\n        }\n\n        function hasProp(obj, name) {\n            return obj.hasOwnProperty(name);\n        }\n\n        function hasValue(obj, name) {\n            return obj[name] != null && obj[name] !== 'auto';\n        }\n\n        function copy(names, target, source) {\n            each(names, function (name) {\n                target[name] = source[name];\n            });\n        }\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.getLayoutParams = function (source) {\n        return layout.copyLayoutParams({}, source);\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.copyLayoutParams = function (target, source) {\n        source && target && each(LOCATION_PARAMS, function (name) {\n            source.hasOwnProperty(name) && (target[name] = source[name]);\n        });\n        return target;\n    };\n\n    module.exports = layout;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/layout.js\n// module id = 619\n// module chunks = 0 1 2","\n\n    var OrdinalScale = require('../scale/Ordinal');\n    var IntervalScale = require('../scale/Interval');\n    require('../scale/Time');\n    require('../scale/Log');\n    var Scale = require('../scale/Scale');\n\n    var numberUtil = require('../util/number');\n    var zrUtil = require('zrender/lib/core/util');\n    var textContain = require('zrender/lib/contain/text');\n    var axisHelper = {};\n\n    /**\n     * Get axis scale extent before niced.\n     * Item of returned array can only be number (including Infinity and NaN).\n     */\n    axisHelper.getScaleExtent = function (scale, model) {\n        var scaleType = scale.type;\n\n        var min = model.getMin();\n        var max = model.getMax();\n        var fixMin = min != null;\n        var fixMax = max != null;\n        var originalExtent = scale.getExtent();\n\n        var axisDataLen;\n        var boundaryGap;\n        var span;\n        if (scaleType === 'ordinal') {\n            axisDataLen = (model.get('data') || []).length;\n        }\n        else {\n            boundaryGap = model.get('boundaryGap');\n            if (!zrUtil.isArray(boundaryGap)) {\n                boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n            }\n            if (typeof boundaryGap[0] === 'boolean') {\n                if (__DEV__) {\n                    console.warn('Boolean type for boundaryGap is only '\n                        + 'allowed for ordinal axis. Please use string in '\n                        + 'percentage instead, e.g., \"20%\". Currently, '\n                        + 'boundaryGap is set to be 0.');\n                }\n                boundaryGap = [0, 0];\n            }\n            boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n            boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n            span = (originalExtent[1] - originalExtent[0])\n                || Math.abs(originalExtent[0]);\n        }\n\n        // Notice: When min/max is not set (that is, when there are null/undefined,\n        // which is the most common case), these cases should be ensured:\n        // (1) For 'ordinal', show all axis.data.\n        // (2) For others:\n        //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n        //      disabled).\n        //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n        //      be the result that originalExtent enlarged by boundaryGap.\n        // (3) If no data, it should be ensured that `scale.setBlank` is set.\n\n        // FIXME\n        // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n        // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n        // that the results processed by boundaryGap are positive/negative?\n\n        if (min == null) {\n            min = scaleType === 'ordinal'\n                ? (axisDataLen ? 0 : NaN)\n                : originalExtent[0] - boundaryGap[0] * span;\n        }\n        if (max == null) {\n            max = scaleType === 'ordinal'\n                ? (axisDataLen ? axisDataLen - 1 : NaN)\n                : originalExtent[1] + boundaryGap[1] * span;\n        }\n\n        if (min === 'dataMin') {\n            min = originalExtent[0];\n        }\n        if (max === 'dataMax') {\n            max = originalExtent[1];\n        }\n\n        (min == null || !isFinite(min)) && (min = NaN);\n        (max == null || !isFinite(max)) && (max = NaN);\n\n        scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max));\n\n        // Evaluate if axis needs cross zero\n        if (model.getNeedCrossZero()) {\n            // Axis is over zero and min is not set\n            if (min > 0 && max > 0 && !fixMin) {\n                min = 0;\n            }\n            // Axis is under zero and max is not set\n            if (min < 0 && max < 0 && !fixMax) {\n                max = 0;\n            }\n        }\n\n        return [min, max];\n    };\n\n    axisHelper.niceScaleExtent = function (scale, model) {\n        var extent = axisHelper.getScaleExtent(scale, model);\n        var fixMin = model.getMin() != null;\n        var fixMax = model.getMax() != null;\n        var splitNumber = model.get('splitNumber');\n\n        if (scale.type === 'log') {\n            scale.base = model.get('logBase');\n        }\n\n        var scaleType = scale.type;\n        scale.setExtent(extent[0], extent[1]);\n        scale.niceExtent({\n            splitNumber: splitNumber,\n            fixMin: fixMin,\n            fixMax: fixMax,\n            minInterval: (scaleType === 'interval' || scaleType === 'time')\n                ? model.get('minInterval') : null,\n            maxInterval: (scaleType === 'interval' || scaleType === 'time')\n                ? model.get('maxInterval') : null\n        });\n\n        // If some one specified the min, max. And the default calculated interval\n        // is not good enough. He can specify the interval. It is often appeared\n        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n        // to be 60.\n        // FIXME\n        var interval = model.get('interval');\n        if (interval != null) {\n            scale.setInterval && scale.setInterval(interval);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @param {string} [axisType] Default retrieve from model.type\n     * @return {module:echarts/scale/*}\n     */\n    axisHelper.createScaleByModel = function(model, axisType) {\n        axisType = axisType || model.get('type');\n        if (axisType) {\n            switch (axisType) {\n                // Buildin scale\n                case 'category':\n                    return new OrdinalScale(\n                        model.getCategories(), [Infinity, -Infinity]\n                    );\n                case 'value':\n                    return new IntervalScale();\n                // Extended scale, like time and log\n                default:\n                    return (Scale.getClass(axisType) || IntervalScale).create(model);\n            }\n        }\n    };\n\n    /**\n     * Check if the axis corss 0\n     */\n    axisHelper.ifAxisCrossZero = function (axis) {\n        var dataExtent = axis.scale.getExtent();\n        var min = dataExtent[0];\n        var max = dataExtent[1];\n        return !((min > 0 && max > 0) || (min < 0 && max < 0));\n    };\n\n    /**\n     * @param {Array.<number>} tickCoords In axis self coordinate.\n     * @param {Array.<string>} labels\n     * @param {string} font\n     * @param {boolean} isAxisHorizontal\n     * @return {number}\n     */\n    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\n        // FIXME\n        // 不同角的axis和label，不只是horizontal和vertical.\n\n        var textSpaceTakenRect;\n        var autoLabelInterval = 0;\n        var accumulatedLabelInterval = 0;\n\n        var step = 1;\n        if (labels.length > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.floor(labels.length / 40);\n        }\n\n        for (var i = 0; i < tickCoords.length; i += step) {\n            var tickCoord = tickCoords[i];\n            var rect = textContain.getBoundingRect(\n                labels[i], font, 'center', 'top'\n            );\n            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\n            // FIXME Magic number 1.5\n            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\n            if (!textSpaceTakenRect) {\n                textSpaceTakenRect = rect.clone();\n            }\n            // There is no space for current label;\n            else if (textSpaceTakenRect.intersect(rect)) {\n                accumulatedLabelInterval++;\n                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n            }\n            else {\n                textSpaceTakenRect.union(rect);\n                // Reset\n                accumulatedLabelInterval = 0;\n            }\n        }\n        if (autoLabelInterval === 0 && step > 1) {\n            return step;\n        }\n        return (autoLabelInterval + 1) * step - 1;\n    };\n\n    /**\n     * @param {Object} axis\n     * @param {Function} labelFormatter\n     * @return {Array.<string>}\n     */\n    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\n        var scale = axis.scale;\n        var labels = scale.getTicksLabels();\n        var ticks = scale.getTicks();\n        if (typeof labelFormatter === 'string') {\n            labelFormatter = (function (tpl) {\n                return function (val) {\n                    return tpl.replace('{value}', val != null ? val : '');\n                };\n            })(labelFormatter);\n            // Consider empty array\n            return zrUtil.map(labels, labelFormatter);\n        }\n        else if (typeof labelFormatter === 'function') {\n            return zrUtil.map(ticks, function (tick, idx) {\n                return labelFormatter(\n                    axisHelper.getAxisRawValue(axis, tick),\n                    idx\n                );\n            }, this);\n        }\n        else {\n            return labels;\n        }\n    };\n\n    axisHelper.getAxisRawValue = function (axis, value) {\n        // In category axis with data zoom, tick is not the original\n        // index of axis.data. So tick should not be exposed to user\n        // in category axis.\n        return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n    };\n\n    module.exports = axisHelper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisHelper.js\n// module id = 620\n// module chunks = 0 1 2","\n\n    var util = require('../core/util');\n    var BoundingRect = require('../core/BoundingRect');\n    var imageHelper = require('../graphic/helper/image');\n\n    var textWidthCache = {};\n    var textWidthCacheCounter = 0;\n\n    var TEXT_CACHE_MAX = 5000;\n    var STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\n    var DEFAULT_FONT = '12px sans-serif';\n\n    var retrieve2 = util.retrieve2;\n    var retrieve3 = util.retrieve3;\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @return {number} width\n     */\n    function getTextWidth(text, font) {\n        font = font || DEFAULT_FONT;\n        var key = text + ':' + font;\n        if (textWidthCache[key]) {\n            return textWidthCache[key];\n        }\n\n        var textLines = (text + '').split('\\n');\n        var width = 0;\n\n        for (var i = 0, l = textLines.length; i < l; i++) {\n            // textContain.measureText may be overrided in SVG or VML\n            width = Math.max(textContain.measureText(textLines[i], font).width, width);\n        }\n\n        if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n            textWidthCacheCounter = 0;\n            textWidthCache = {};\n        }\n        textWidthCacheCounter++;\n        textWidthCache[key] = width;\n\n        return width;\n    }\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @param {string} [textAlign='left']\n     * @param {string} [textVerticalAlign='top']\n     * @param {Array.<number>} [textPadding]\n     * @param {Object} [rich]\n     * @param {Object} [truncate]\n     * @return {Object} {x, y, width, height, lineHeight}\n     */\n    function getTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n        return rich\n            ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate)\n            : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n    }\n\n    function getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n        var contentBlock = parsePlainText(text, font, textPadding, truncate);\n        var outerWidth = getTextWidth(text, font);\n        if (textPadding) {\n            outerWidth += textPadding[1] + textPadding[3];\n        }\n        var outerHeight = contentBlock.outerHeight;\n\n        var x = adjustTextX(0, outerWidth, textAlign);\n        var y = adjustTextY(0, outerHeight, textVerticalAlign);\n\n        var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n        rect.lineHeight = contentBlock.lineHeight;\n\n        return rect;\n    }\n\n    function getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n        var contentBlock = parseRichText(text, {\n            rich: rich,\n            truncate: truncate,\n            font: font,\n            textAlign: textAlign,\n            textPadding: textPadding\n        });\n        var outerWidth = contentBlock.outerWidth;\n        var outerHeight = contentBlock.outerHeight;\n\n        var x = adjustTextX(0, outerWidth, textAlign);\n        var y = adjustTextY(0, outerHeight, textVerticalAlign);\n\n        return new BoundingRect(x, y, outerWidth, outerHeight);\n    }\n\n    /**\n     * @public\n     * @param {number} x\n     * @param {number} width\n     * @param {string} [textAlign='left']\n     * @return {number} Adjusted x.\n     */\n    function adjustTextX(x, width, textAlign) {\n        // FIXME Right to left language\n        if (textAlign === 'right') {\n            x -= width;\n        }\n        else if (textAlign === 'center') {\n            x -= width / 2;\n        }\n        return x;\n    }\n\n    /**\n     * @public\n     * @param {number} y\n     * @param {number} height\n     * @param {string} [textVerticalAlign='top']\n     * @return {number} Adjusted y.\n     */\n    function adjustTextY(y, height, textVerticalAlign) {\n        if (textVerticalAlign === 'middle') {\n            y -= height / 2;\n        }\n        else if (textVerticalAlign === 'bottom') {\n            y -= height;\n        }\n        return y;\n    }\n\n    /**\n     * @public\n     * @param {stirng} textPosition\n     * @param {Object} rect {x, y, width, height}\n     * @param {number} distance\n     * @return {Object} {x, y, textAlign, textVerticalAlign}\n     */\n    function adjustTextPositionOnRect(textPosition, rect, distance) {\n\n        var x = rect.x;\n        var y = rect.y;\n\n        var height = rect.height;\n        var width = rect.width;\n        var halfHeight = height / 2;\n\n        var textAlign = 'left';\n        var textVerticalAlign = 'top';\n\n        switch (textPosition) {\n            case 'left':\n                x -= distance;\n                y += halfHeight;\n                textAlign = 'right';\n                textVerticalAlign = 'middle';\n                break;\n            case 'right':\n                x += distance + width;\n                y += halfHeight;\n                textVerticalAlign = 'middle';\n                break;\n            case 'top':\n                x += width / 2;\n                y -= distance;\n                textAlign = 'center';\n                textVerticalAlign = 'bottom';\n                break;\n            case 'bottom':\n                x += width / 2;\n                y += height + distance;\n                textAlign = 'center';\n                break;\n            case 'inside':\n                x += width / 2;\n                y += halfHeight;\n                textAlign = 'center';\n                textVerticalAlign = 'middle';\n                break;\n            case 'insideLeft':\n                x += distance;\n                y += halfHeight;\n                textVerticalAlign = 'middle';\n                break;\n            case 'insideRight':\n                x += width - distance;\n                y += halfHeight;\n                textAlign = 'right';\n                textVerticalAlign = 'middle';\n                break;\n            case 'insideTop':\n                x += width / 2;\n                y += distance;\n                textAlign = 'center';\n                break;\n            case 'insideBottom':\n                x += width / 2;\n                y += height - distance;\n                textAlign = 'center';\n                textVerticalAlign = 'bottom';\n                break;\n            case 'insideTopLeft':\n                x += distance;\n                y += distance;\n                break;\n            case 'insideTopRight':\n                x += width - distance;\n                y += distance;\n                textAlign = 'right';\n                break;\n            case 'insideBottomLeft':\n                x += distance;\n                y += height - distance;\n                textVerticalAlign = 'bottom';\n                break;\n            case 'insideBottomRight':\n                x += width - distance;\n                y += height - distance;\n                textAlign = 'right';\n                textVerticalAlign = 'bottom';\n                break;\n        }\n\n        return {\n            x: x,\n            y: y,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    /**\n     * Show ellipsis if overflow.\n     *\n     * @public\n     * @param  {string} text\n     * @param  {string} containerWidth\n     * @param  {string} font\n     * @param  {number} [ellipsis='...']\n     * @param  {Object} [options]\n     * @param  {number} [options.maxIterations=3]\n     * @param  {number} [options.minChar=0] If truncate result are less\n     *                  then minChar, ellipsis will not show, which is\n     *                  better for user hint in some cases.\n     * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n     * @return {string}\n     */\n    function truncateText(text, containerWidth, font, ellipsis, options) {\n        if (!containerWidth) {\n            return '';\n        }\n\n        var textLines = (text + '').split('\\n');\n        options = prepareTruncateOptions(containerWidth, font, ellipsis, options);\n\n        // FIXME\n        // It is not appropriate that every line has '...' when truncate multiple lines.\n        for (var i = 0, len = textLines.length; i < len; i++) {\n            textLines[i] = truncateSingleLine(textLines[i], options);\n        }\n\n        return textLines.join('\\n');\n    }\n\n    function prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n        options = util.extend({}, options);\n\n        options.font = font;\n        var ellipsis = retrieve2(ellipsis, '...');\n        options.maxIterations = retrieve2(options.maxIterations, 2);\n        var minChar = options.minChar = retrieve2(options.minChar, 0);\n        // FIXME\n        // Other languages?\n        options.cnCharWidth = getTextWidth('国', font);\n        // FIXME\n        // Consider proportional font?\n        var ascCharWidth = options.ascCharWidth = getTextWidth('a', font);\n        options.placeholder = retrieve2(options.placeholder, '');\n\n        // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n        // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n        var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n        for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n            contentWidth -= ascCharWidth;\n        }\n\n        var ellipsisWidth = getTextWidth(ellipsis);\n        if (ellipsisWidth > contentWidth) {\n            ellipsis = '';\n            ellipsisWidth = 0;\n        }\n\n        contentWidth = containerWidth - ellipsisWidth;\n\n        options.ellipsis = ellipsis;\n        options.ellipsisWidth = ellipsisWidth;\n        options.contentWidth = contentWidth;\n        options.containerWidth = containerWidth;\n\n        return options;\n    }\n\n    function truncateSingleLine(textLine, options) {\n        var containerWidth = options.containerWidth;\n        var font = options.font;\n        var contentWidth = options.contentWidth;\n\n        if (!containerWidth) {\n            return '';\n        }\n\n        var lineWidth = getTextWidth(textLine, font);\n\n        if (lineWidth <= containerWidth) {\n            return textLine;\n        }\n\n        for (var j = 0;; j++) {\n            if (lineWidth <= contentWidth || j >= options.maxIterations) {\n                textLine += options.ellipsis;\n                break;\n            }\n\n            var subLength = j === 0\n                ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth)\n                : lineWidth > 0\n                ? Math.floor(textLine.length * contentWidth / lineWidth)\n                : 0;\n\n            textLine = textLine.substr(0, subLength);\n            lineWidth = getTextWidth(textLine, font);\n        }\n\n        if (textLine === '') {\n            textLine = options.placeholder;\n        }\n\n        return textLine;\n    }\n\n    function estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n        var width = 0;\n        var i = 0;\n        for (var len = text.length; i < len && width < contentWidth; i++) {\n            var charCode = text.charCodeAt(i);\n            width += (0 <= charCode && charCode <= 127) ? ascCharWidth : cnCharWidth;\n        }\n        return i;\n    }\n\n    /**\n     * @public\n     * @param {string} font\n     * @return {number} line height\n     */\n    function getLineHeight(font) {\n        // FIXME A rough approach.\n        return getTextWidth('国', font);\n    }\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @return {Object} width\n     */\n    function measureText(text, font) {\n        var ctx = util.getContext();\n        ctx.font = font || DEFAULT_FONT;\n        return ctx.measureText(text);\n    }\n\n    /**\n     * @public\n     * @param {string} text\n     * @param {string} font\n     * @param {Object} [truncate]\n     * @return {Object} block: {lineHeight, lines, height, outerHeight}\n     *  Notice: for performance, do not calculate outerWidth util needed.\n     */\n    function parsePlainText(text, font, padding, truncate) {\n        text != null && (text += '');\n\n        var lineHeight = getLineHeight(font);\n        var lines = text ? text.split('\\n') : [];\n        var height = lines.length * lineHeight;\n        var outerHeight = height;\n\n        if (padding) {\n            outerHeight += padding[0] + padding[2];\n        }\n\n        if (text && truncate) {\n            var truncOuterHeight = truncate.outerHeight;\n            var truncOuterWidth = truncate.outerWidth;\n            if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n                text = '';\n                lines = [];\n            }\n            else if (truncOuterWidth != null) {\n                var options = prepareTruncateOptions(\n                    truncOuterWidth - (padding ? padding[1] + padding[3] : 0),\n                    font,\n                    truncate.ellipsis,\n                    {minChar: truncate.minChar, placeholder: truncate.placeholder}\n                );\n\n                // FIXME\n                // It is not appropriate that every line has '...' when truncate multiple lines.\n                for (var i = 0, len = lines.length; i < len; i++) {\n                    lines[i] = truncateSingleLine(lines[i], options);\n                }\n            }\n        }\n\n        return {\n            lines: lines,\n            height: height,\n            outerHeight: outerHeight,\n            lineHeight: lineHeight\n        };\n    }\n\n    /**\n     * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n     * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n     *\n     * @public\n     * @param {string} text\n     * @param {Object} style\n     * @return {Object} block\n     * {\n     *      width,\n     *      height,\n     *      lines: [{\n     *          lineHeight,\n     *          width,\n     *          tokens: [[{\n     *              styleName,\n     *              text,\n     *              width,      // include textPadding\n     *              height,     // include textPadding\n     *              textWidth, // pure text width\n     *              textHeight, // pure text height\n     *              lineHeihgt,\n     *              font,\n     *              textAlign,\n     *              textVerticalAlign\n     *          }], [...], ...]\n     *      }, ...]\n     * }\n     * If styleName is undefined, it is plain text.\n     */\n    function parseRichText(text, style) {\n        var contentBlock = {lines: [], width: 0, height: 0};\n\n        text != null && (text += '');\n        if (!text) {\n            return contentBlock;\n        }\n\n        var lastIndex = STYLE_REG.lastIndex = 0;\n        var result;\n        while ((result = STYLE_REG.exec(text)) != null)  {\n            var matchedIndex = result.index;\n            if (matchedIndex > lastIndex) {\n                pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n            }\n            pushTokens(contentBlock, result[2], result[1]);\n            lastIndex = STYLE_REG.lastIndex;\n        }\n\n        if (lastIndex < text.length) {\n            pushTokens(contentBlock, text.substring(lastIndex, text.length));\n        }\n\n        var lines = contentBlock.lines;\n        var contentHeight = 0;\n        var contentWidth = 0;\n        // For `textWidth: 100%`\n        var pendingList = [];\n\n        var stlPadding = style.textPadding;\n\n        var truncate = style.truncate;\n        var truncateWidth = truncate && truncate.outerWidth;\n        var truncateHeight = truncate && truncate.outerHeight;\n        if (stlPadding) {\n            truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n            truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n        }\n\n        // Calculate layout info of tokens.\n        for (var i = 0; i < lines.length; i++) {\n            var line = lines[i];\n            var lineHeight = 0;\n            var lineWidth = 0;\n\n            for (var j = 0; j < line.tokens.length; j++) {\n                var token = line.tokens[j];\n                var tokenStyle = token.styleName && style.rich[token.styleName] || {};\n                // textPadding should not inherit from style.\n                var textPadding = token.textPadding = tokenStyle.textPadding;\n\n                // textFont has been asigned to font by `normalizeStyle`.\n                var font = token.font = tokenStyle.font || style.font;\n\n                // textHeight can be used when textVerticalAlign is specified in token.\n                var tokenHeight = token.textHeight = retrieve2(\n                    // textHeight should not be inherited, consider it can be specified\n                    // as box height of the block.\n                    tokenStyle.textHeight, textContain.getLineHeight(font)\n                );\n                textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n                token.height = tokenHeight;\n                token.lineHeight = retrieve3(\n                    tokenStyle.textLineHeight, style.textLineHeight, tokenHeight\n                );\n\n                token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n                token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n                if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n                    return {lines: [], width: 0, height: 0};\n                }\n\n                token.textWidth = textContain.getWidth(token.text, font);\n                var tokenWidth = tokenStyle.textWidth;\n                var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto';\n\n                // Percent width, can be `100%`, can be used in drawing separate\n                // line when box width is needed to be auto.\n                if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n                    token.percentWidth = tokenWidth;\n                    pendingList.push(token);\n                    tokenWidth = 0;\n                    // Do not truncate in this case, because there is no user case\n                    // and it is too complicated.\n                }\n                else {\n                    if (tokenWidthNotSpecified) {\n                        tokenWidth = token.textWidth;\n\n                        // FIXME: If image is not loaded and textWidth is not specified, calling\n                        // `getBoundingRect()` will not get correct result.\n                        var textBackgroundColor = tokenStyle.textBackgroundColor;\n                        var bgImg = textBackgroundColor && textBackgroundColor.image;\n\n                        // Use cases:\n                        // (1) If image is not loaded, it will be loaded at render phase and call\n                        // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n                        // image, and then the right size will be calculated here at the next tick.\n                        // See `graphic/helper/text.js`.\n                        // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n                        // use `imageHelper.findExistImage` to find cached image.\n                        // `imageHelper.findExistImage` will always be called here before\n                        // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n                        // which ensures that image will not be rendered before correct size calcualted.\n                        if (bgImg) {\n                            bgImg = imageHelper.findExistImage(bgImg);\n                            if (imageHelper.isImageReady(bgImg)) {\n                                tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n                            }\n                        }\n                    }\n\n                    var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n                    tokenWidth += paddingW;\n\n                    var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n                    if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n                        if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n                            token.text = '';\n                            token.textWidth = tokenWidth = 0;\n                        }\n                        else {\n                            token.text = truncateText(\n                                token.text, remianTruncWidth - paddingW, font, truncate.ellipsis,\n                                {minChar: truncate.minChar}\n                            );\n                            token.textWidth = textContain.getWidth(token.text, font);\n                            tokenWidth = token.textWidth + paddingW;\n                        }\n                    }\n                }\n\n                lineWidth += (token.width = tokenWidth);\n                tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n            }\n\n            line.width = lineWidth;\n            line.lineHeight = lineHeight;\n            contentHeight += lineHeight;\n            contentWidth = Math.max(contentWidth, lineWidth);\n        }\n\n        contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n        contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n        if (stlPadding) {\n            contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n            contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n        }\n\n        for (var i = 0; i < pendingList.length; i++) {\n            var token = pendingList[i];\n            var percentWidth = token.percentWidth;\n            // Should not base on outerWidth, because token can not be placed out of padding.\n            token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n        }\n\n        return contentBlock;\n    }\n\n    function pushTokens(block, str, styleName) {\n        var isEmptyStr = str === '';\n        var strs = str.split('\\n');\n        var lines = block.lines;\n\n        for (var i = 0; i < strs.length; i++) {\n            var text = strs[i];\n            var token = {\n                styleName: styleName,\n                text: text,\n                isLineHolder: !text && !isEmptyStr\n            };\n\n            // The first token should be appended to the last line.\n            if (!i) {\n                var tokens = (lines[lines.length - 1] || (lines[0] = {tokens: []})).tokens;\n\n                // Consider cases:\n                // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n                // (which is a placeholder) should be replaced by new token.\n                // (2) A image backage, where token likes {a|}.\n                // (3) A redundant '' will affect textAlign in line.\n                // (4) tokens with the same tplName should not be merged, because\n                // they should be displayed in different box (with border and padding).\n                var tokensLen = tokens.length;\n                (tokensLen === 1 && tokens[0].isLineHolder)\n                    ? (tokens[0] = token)\n                    // Consider text is '', only insert when it is the \"lineHolder\" or\n                    // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n                    : ((text || !tokensLen || isEmptyStr) && tokens.push(token));\n            }\n            // Other tokens always start a new line.\n            else {\n                // If there is '', insert it as a placeholder.\n                lines.push({tokens: [token]});\n            }\n        }\n    }\n\n    function makeFont(style) {\n        // FIXME in node-canvas fontWeight is before fontStyle\n        // Use `fontSize` `fontFamily` to check whether font properties are defined.\n        return (style.fontSize || style.fontFamily) && [\n            style.fontStyle,\n            style.fontWeight,\n            (style.fontSize || 12) + 'px',\n            // If font properties are defined, `fontFamily` should not be ignored.\n            style.fontFamily || 'sans-serif'\n        ].join(' ') || style.textFont || style.font;\n    }\n\n    var textContain = {\n\n        getWidth: getTextWidth,\n\n        getBoundingRect: getTextRect,\n\n        adjustTextPositionOnRect: adjustTextPositionOnRect,\n\n        truncateText: truncateText,\n\n        measureText: measureText,\n\n        getLineHeight: getLineHeight,\n\n        parsePlainText: parsePlainText,\n\n        parseRichText: parseRichText,\n\n        adjustTextX: adjustTextX,\n\n        adjustTextY: adjustTextY,\n\n        makeFont: makeFont,\n\n        DEFAULT_FONT: DEFAULT_FONT\n    };\n\n    module.exports = textContain;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/text.js\n// module id = 621\n// module chunks = 0 1 2","'use strict';\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var vec2 = require('./vector');\n    var v2Create = vec2.create;\n    var v2DistSquare = vec2.distSquare;\n    var mathPow = Math.pow;\n    var mathSqrt = Math.sqrt;\n\n    var EPSILON = 1e-8;\n    var EPSILON_NUMERIC = 1e-4;\n\n    var THREE_SQRT = mathSqrt(3);\n    var ONE_THIRD = 1 / 3;\n\n    // 临时变量\n    var _v0 = v2Create();\n    var _v1 = v2Create();\n    var _v2 = v2Create();\n    // var _v3 = vec2.create();\n\n    function isAroundZero(val) {\n        return val > -EPSILON && val < EPSILON;\n    }\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n    /**\n     * 计算三次贝塞尔值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return onet * onet * (onet * p0 + 3 * t * p1)\n             + t * t * (t * p3 + 3 * onet * p2);\n    }\n\n    /**\n     * 计算三次贝塞尔导数值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicDerivativeAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return 3 * (\n            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\n            + (p3 - p2) * t * t\n        );\n    }\n\n    /**\n     * 计算三次贝塞尔方程根，使用盛金公式\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} val\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function cubicRootAt(p0, p1, p2, p3, val, roots) {\n        // Evaluate roots of cubic functions\n        var a = p3 + 3 * (p1 - p2) - p0;\n        var b = 3 * (p2 - p1 * 2 + p0);\n        var c = 3 * (p1  - p0);\n        var d = p0 - val;\n\n        var A = b * b - 3 * a * c;\n        var B = b * c - 9 * a * d;\n        var C = c * c - 3 * b * d;\n\n        var n = 0;\n\n        if (isAroundZero(A) && isAroundZero(B)) {\n            if (isAroundZero(b)) {\n                roots[0] = 0;\n            }\n            else {\n                var t1 = -c / b;  //t1, t2, t3, b is not zero\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = B * B - 4 * A * C;\n\n            if (isAroundZero(disc)) {\n                var K = B / A;\n                var t1 = -b / a + K;  // t1, a is not zero\n                var t2 = -K / 2;  // t2, t3\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n                if (Y1 < 0) {\n                    Y1 = -mathPow(-Y1, ONE_THIRD);\n                }\n                else {\n                    Y1 = mathPow(Y1, ONE_THIRD);\n                }\n                if (Y2 < 0) {\n                    Y2 = -mathPow(-Y2, ONE_THIRD);\n                }\n                else {\n                    Y2 = mathPow(Y2, ONE_THIRD);\n                }\n                var t1 = (-b - (Y1 + Y2)) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else {\n                var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n                var theta = Math.acos(T) / 3;\n                var ASqrt = mathSqrt(A);\n                var tmp = Math.cos(theta);\n\n                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n                if (t3 >= 0 && t3 <= 1) {\n                    roots[n++] = t3;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算三次贝塞尔方程极限值的位置\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {Array.<number>} extrema\n     * @return {number} 有效数目\n     */\n    function cubicExtrema(p0, p1, p2, p3, extrema) {\n        var b = 6 * p2 - 12 * p1 + 6 * p0;\n        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n        var c = 3 * p1 - 3 * p0;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <=1) {\n                    extrema[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                extrema[0] = -b / (2 * a);\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    extrema[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    extrema[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 细分三次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function cubicSubdivide(p0, p1, p2, p3, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p23 = (p3 - p2) * t + p2;\n\n        var p012 = (p12 - p01) * t + p01;\n        var p123 = (p23 - p12) * t + p12;\n\n        var p0123 = (p123 - p012) * t + p012;\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n        out[3] = p0123;\n        // Seg1\n        out[4] = p0123;\n        out[5] = p123;\n        out[6] = p23;\n        out[7] = p3;\n    }\n\n    /**\n     * 投射点到三次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} [out] 投射点\n     * @return {number}\n     */\n    function cubicProjectPoint(\n        x0, y0, x1, y1, x2, y2, x3, y3,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n        var prev;\n        var next;\n        var d1;\n        var d2;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n            d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            prev = t - interval;\n            next = t + interval;\n            // t - interval\n            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n\n            d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = cubicAt(x0, x1, x2, x3, next);\n                _v2[1] = cubicAt(y0, y1, y2, y3, next);\n                d2 = v2DistSquare(_v2, _v0);\n\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = cubicAt(x0, x1, x2, x3, t);\n            out[1] = cubicAt(y0, y1, y2, y3, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    /**\n     * 计算二次方贝塞尔值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticAt(p0, p1, p2, t) {\n        var onet = 1 - t;\n        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n    }\n\n    /**\n     * 计算二次方贝塞尔导数值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticDerivativeAt(p0, p1, p2, t) {\n        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n    }\n\n    /**\n     * 计算二次方贝塞尔方程根\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function quadraticRootAt(p0, p1, p2, val, roots) {\n        var a = p0 - 2 * p1 + p2;\n        var b = 2 * (p1 - p0);\n        var c = p0 - val;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                var t1 = -b / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算二次贝塞尔方程极限值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @return {number}\n     */\n    function quadraticExtremum(p0, p1, p2) {\n        var divider = p0 + p2 - 2 * p1;\n        if (divider === 0) {\n            // p1 is center of p0 and p2\n            return 0.5;\n        }\n        else {\n            return (p0 - p1) / divider;\n        }\n    }\n\n    /**\n     * 细分二次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function quadraticSubdivide(p0, p1, p2, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p012 = (p12 - p01) * t + p01;\n\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n\n        // Seg1\n        out[3] = p012;\n        out[4] = p12;\n        out[5] = p2;\n    }\n\n    /**\n     * 投射点到二次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} out 投射点\n     * @return {number}\n     */\n    function quadraticProjectPoint(\n        x0, y0, x1, y1, x2, y2,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = quadraticAt(x0, x1, x2, _t);\n            _v1[1] = quadraticAt(y0, y1, y2, _t);\n            var d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            var prev = t - interval;\n            var next = t + interval;\n            // t - interval\n            _v1[0] = quadraticAt(x0, x1, x2, prev);\n            _v1[1] = quadraticAt(y0, y1, y2, prev);\n\n            var d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = quadraticAt(x0, x1, x2, next);\n                _v2[1] = quadraticAt(y0, y1, y2, next);\n                var d2 = v2DistSquare(_v2, _v0);\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = quadraticAt(x0, x1, x2, t);\n            out[1] = quadraticAt(y0, y1, y2, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    module.exports = {\n\n        cubicAt: cubicAt,\n\n        cubicDerivativeAt: cubicDerivativeAt,\n\n        cubicRootAt: cubicRootAt,\n\n        cubicExtrema: cubicExtrema,\n\n        cubicSubdivide: cubicSubdivide,\n\n        cubicProjectPoint: cubicProjectPoint,\n\n        quadraticAt: quadraticAt,\n\n        quadraticDerivativeAt: quadraticDerivativeAt,\n\n        quadraticRootAt: quadraticRootAt,\n\n        quadraticExtremum: quadraticExtremum,\n\n        quadraticSubdivide: quadraticSubdivide,\n\n        quadraticProjectPoint: quadraticProjectPoint\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/curve.js\n// module id = 622\n// module chunks = 0 1 2","\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n    /**\n     * 3x2矩阵操作类\n     * @exports zrender/tool/matrix\n     */\n    var matrix = {\n        /**\n         * 创建一个单位矩阵\n         * @return {Float32Array|Array.<number>}\n         */\n        create : function() {\n            var out = new ArrayCtor(6);\n            matrix.identity(out);\n\n            return out;\n        },\n        /**\n         * 设置矩阵为单位矩阵\n         * @param {Float32Array|Array.<number>} out\n         */\n        identity : function(out) {\n            out[0] = 1;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            out[4] = 0;\n            out[5] = 0;\n            return out;\n        },\n        /**\n         * 复制矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m\n         */\n        copy: function(out, m) {\n            out[0] = m[0];\n            out[1] = m[1];\n            out[2] = m[2];\n            out[3] = m[3];\n            out[4] = m[4];\n            out[5] = m[5];\n            return out;\n        },\n        /**\n         * 矩阵相乘\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m1\n         * @param {Float32Array|Array.<number>} m2\n         */\n        mul : function (out, m1, m2) {\n            // Consider matrix.mul(m, m2, m);\n            // where out is the same as m2.\n            // So use temp variable to escape error.\n            var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n            var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n            var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n            var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n            var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n            var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n            out[0] = out0;\n            out[1] = out1;\n            out[2] = out2;\n            out[3] = out3;\n            out[4] = out4;\n            out[5] = out5;\n            return out;\n        },\n        /**\n         * 平移变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        translate : function(out, a, v) {\n            out[0] = a[0];\n            out[1] = a[1];\n            out[2] = a[2];\n            out[3] = a[3];\n            out[4] = a[4] + v[0];\n            out[5] = a[5] + v[1];\n            return out;\n        },\n        /**\n         * 旋转变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {number} rad\n         */\n        rotate : function(out, a, rad) {\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n            var st = Math.sin(rad);\n            var ct = Math.cos(rad);\n\n            out[0] = aa * ct + ab * st;\n            out[1] = -aa * st + ab * ct;\n            out[2] = ac * ct + ad * st;\n            out[3] = -ac * st + ct * ad;\n            out[4] = ct * atx + st * aty;\n            out[5] = ct * aty - st * atx;\n            return out;\n        },\n        /**\n         * 缩放变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        scale : function(out, a, v) {\n            var vx = v[0];\n            var vy = v[1];\n            out[0] = a[0] * vx;\n            out[1] = a[1] * vy;\n            out[2] = a[2] * vx;\n            out[3] = a[3] * vy;\n            out[4] = a[4] * vx;\n            out[5] = a[5] * vy;\n            return out;\n        },\n        /**\n         * 求逆矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         */\n        invert : function(out, a) {\n\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n\n            var det = aa * ad - ab * ac;\n            if (!det) {\n                return null;\n            }\n            det = 1.0 / det;\n\n            out[0] = ad * det;\n            out[1] = -ab * det;\n            out[2] = -ac * det;\n            out[3] = aa * det;\n            out[4] = (ac * aty - ad * atx) * det;\n            out[5] = (ab * atx - aa * aty) * det;\n            return out;\n        }\n    };\n\n    module.exports = matrix;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/matrix.js\n// module id = 623\n// module chunks = 0 1 2","'use strict';\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n\n    var Eventful = require('../mixin/Eventful');\n    var env = require('./env');\n\n    var isDomLevel2 = (typeof window !== 'undefined') && !!window.addEventListener;\n\n    function getBoundingClientRect(el) {\n        // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n        return el.getBoundingClientRect ? el.getBoundingClientRect() : {left: 0, top: 0};\n    }\n\n    // `calculate` is optional, default false\n    function clientToLocal(el, e, out, calculate) {\n        out = out || {};\n\n        // According to the W3C Working Draft, offsetX and offsetY should be relative\n        // to the padding edge of the target element. The only browser using this convention\n        // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n        // not support the properties.\n        // (see http://www.jacklmoore.com/notes/mouse-position/)\n        // In zr painter.dom, padding edge equals to border edge.\n\n        // FIXME\n        // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n        // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n        // is too complex. So css-transfrom dont support in this case temporarily.\n        if (calculate || !env.canvasSupported) {\n            defaultGetZrXY(el, e, out);\n        }\n        // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n        // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n        // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n        // zoom-factor, overflow / opacity layers, transforms ...)\n        // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n        // <https://bugs.jquery.com/ticket/8523#comment:14>\n        // BTW3, In ff, offsetX/offsetY is always 0.\n        else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n            out.zrX = e.layerX;\n            out.zrY = e.layerY;\n        }\n        // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n        else if (e.offsetX != null) {\n            out.zrX = e.offsetX;\n            out.zrY = e.offsetY;\n        }\n        // For some other device, e.g., IOS safari.\n        else {\n            defaultGetZrXY(el, e, out);\n        }\n\n        return out;\n    }\n\n    function defaultGetZrXY(el, e, out) {\n        // This well-known method below does not support css transform.\n        var box = getBoundingClientRect(el);\n        out.zrX = e.clientX - box.left;\n        out.zrY = e.clientY - box.top;\n    }\n\n    /**\n     * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n     * `calculate` is optional, default false.\n     */\n    function normalizeEvent(el, e, calculate) {\n\n        e = e || window.event;\n\n        if (e.zrX != null) {\n            return e;\n        }\n\n        var eventType = e.type;\n        var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n        if (!isTouch) {\n            clientToLocal(el, e, e, calculate);\n            e.zrDelta = (e.wheelDelta) ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n        }\n        else {\n            var touch = eventType != 'touchend'\n                ? e.targetTouches[0]\n                : e.changedTouches[0];\n            touch && clientToLocal(el, touch, e, calculate);\n        }\n\n        return e;\n    }\n\n    function addEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.addEventListener(name, handler);\n        }\n        else {\n            el.attachEvent('on' + name, handler);\n        }\n    }\n\n    function removeEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.removeEventListener(name, handler);\n        }\n        else {\n            el.detachEvent('on' + name, handler);\n        }\n    }\n\n    /**\n     * preventDefault and stopPropagation.\n     * Notice: do not do that in zrender. Upper application\n     * do that if necessary.\n     *\n     * @memberOf module:zrender/core/event\n     * @method\n     * @param {Event} e : event对象\n     */\n    var stop = isDomLevel2\n        ? function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.cancelBubble = true;\n        }\n        : function (e) {\n            e.returnValue = false;\n            e.cancelBubble = true;\n        };\n\n    module.exports = {\n        clientToLocal: clientToLocal,\n        normalizeEvent: normalizeEvent,\n        addEventListener: addEventListener,\n        removeEventListener: removeEventListener,\n\n        stop: stop,\n        // 做向上兼容\n        Dispatcher: Eventful\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/event.js\n// module id = 625\n// module chunks = 0 1 2","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n\n\n    var arrySlice = Array.prototype.slice;\n\n    /**\n     * 事件分发器\n     * @alias module:zrender/mixin/Eventful\n     * @constructor\n     */\n    var Eventful = function () {\n        this._$handlers = {};\n    };\n\n    Eventful.prototype = {\n\n        constructor: Eventful,\n\n        /**\n         * 单次触发绑定，trigger后销毁\n         *\n         * @param {string} event 事件名\n         * @param {Function} handler 响应函数\n         * @param {Object} context\n         */\n        one: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: true,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 绑定事件\n         * @param {string} event 事件名\n         * @param {Function} handler 事件处理函数\n         * @param {Object} [context]\n         */\n        on: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: false,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 是否绑定了事件\n         * @param  {string}  event\n         * @return {boolean}\n         */\n        isSilent: function (event) {\n            var _h = this._$handlers;\n            return _h[event] && _h[event].length;\n        },\n\n        /**\n         * 解绑事件\n         * @param {string} event 事件名\n         * @param {Function} [handler] 事件处理函数\n         */\n        off: function (event, handler) {\n            var _h = this._$handlers;\n\n            if (!event) {\n                this._$handlers = {};\n                return this;\n            }\n\n            if (handler) {\n                if (_h[event]) {\n                    var newList = [];\n                    for (var i = 0, l = _h[event].length; i < l; i++) {\n                        if (_h[event][i]['h'] != handler) {\n                            newList.push(_h[event][i]);\n                        }\n                    }\n                    _h[event] = newList;\n                }\n\n                if (_h[event] && _h[event].length === 0) {\n                    delete _h[event];\n                }\n            }\n            else {\n                delete _h[event];\n            }\n\n            return this;\n        },\n\n        /**\n         * 事件分发\n         *\n         * @param {string} type 事件类型\n         */\n        trigger: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 3) {\n                    args = arrySlice.call(args, 1);\n                }\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(_h[i]['ctx']);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(_h[i]['ctx'], args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 带有context的事件分发, 最后一个参数是事件回调的context\n         * @param {string} type 事件类型\n         */\n        triggerWithContext: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 4) {\n                    args = arrySlice.call(args, 1, args.length - 1);\n                }\n                var ctx = args[args.length - 1];\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(ctx);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(ctx, args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(ctx, args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(ctx, args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        }\n    };\n\n    // 对象可以通过 onxxxx 绑定事件\n    /**\n     * @event module:zrender/mixin/Eventful#onclick\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseout\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousemove\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousewheel\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousedown\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseup\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrag\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragstart\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragend\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragenter\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragleave\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrop\n     * @type {Function}\n     * @default null\n     */\n\n    module.exports = Eventful;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Eventful.js\n// module id = 626\n// module chunks = 0 1 2","/**\n * @module zrender/tool/color\n */\n\n\n    var LRU = require('../core/LRU');\n\n    var kCSSColorTable = {\n        'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\n        'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\n        'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\n        'beige': [245,245,220,1], 'bisque': [255,228,196,1],\n        'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\n        'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\n        'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\n        'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\n        'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\n        'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\n        'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\n        'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\n        'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\n        'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\n        'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\n        'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\n        'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\n        'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\n        'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\n        'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\n        'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\n        'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\n        'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\n        'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\n        'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\n        'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\n        'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\n        'gray': [128,128,128,1], 'green': [0,128,0,1],\n        'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\n        'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\n        'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\n        'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\n        'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\n        'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\n        'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\n        'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\n        'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\n        'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\n        'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\n        'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\n        'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\n        'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\n        'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\n        'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\n        'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\n        'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\n        'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\n        'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\n        'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\n        'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\n        'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\n        'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\n        'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\n        'orange': [255,165,0,1], 'orangered': [255,69,0,1],\n        'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\n        'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\n        'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\n        'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\n        'pink': [255,192,203,1], 'plum': [221,160,221,1],\n        'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\n        'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\n        'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\n        'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\n        'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\n        'sienna': [160,82,45,1], 'silver': [192,192,192,1],\n        'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\n        'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\n        'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\n        'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\n        'teal': [0,128,128,1], 'thistle': [216,191,216,1],\n        'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\n        'violet': [238,130,238,1], 'wheat': [245,222,179,1],\n        'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\n        'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\n    };\n\n    function clampCssByte(i) {  // Clamp to integer 0 .. 255.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 255 ? 255 : i;\n    }\n\n    function clampCssAngle(i) {  // Clamp to integer 0 .. 360.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 360 ? 360 : i;\n    }\n\n    function clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\n        return f < 0 ? 0 : f > 1 ? 1 : f;\n    }\n\n    function parseCssInt(str) {  // int or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssByte(parseFloat(str) / 100 * 255);\n        }\n        return clampCssByte(parseInt(str, 10));\n    }\n\n    function parseCssFloat(str) {  // float or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssFloat(parseFloat(str) / 100);\n        }\n        return clampCssFloat(parseFloat(str));\n    }\n\n    function cssHueToRgb(m1, m2, h) {\n        if (h < 0) {\n            h += 1;\n        }\n        else if (h > 1) {\n            h -= 1;\n        }\n\n        if (h * 6 < 1) {\n            return m1 + (m2 - m1) * h * 6;\n        }\n        if (h * 2 < 1) {\n            return m2;\n        }\n        if (h * 3 < 2) {\n            return m1 + (m2 - m1) * (2/3 - h) * 6;\n        }\n        return m1;\n    }\n\n    function lerp(a, b, p) {\n        return a + (b - a) * p;\n    }\n\n    function setRgba(out, r, g, b, a) {\n        out[0] = r; out[1] = g; out[2] = b; out[3] = a;\n        return out;\n    }\n    function copyRgba(out, a) {\n        out[0] = a[0]; out[1] = a[1]; out[2] = a[2]; out[3] = a[3];\n        return out;\n    }\n    var colorCache = new LRU(20);\n    var lastRemovedArr = null;\n    function putToCache(colorStr, rgbaArr) {\n        // Reuse removed array\n        if (lastRemovedArr) {\n            copyRgba(lastRemovedArr, rgbaArr);\n        }\n        lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || (rgbaArr.slice()));\n    }\n    /**\n     * @param {string} colorStr\n     * @param {Array.<number>} out\n     * @return {Array.<number>}\n     * @memberOf module:zrender/util/color\n     */\n    function parse(colorStr, rgbaArr) {\n        if (!colorStr) {\n            return;\n        }\n        rgbaArr = rgbaArr || [];\n\n        var cached = colorCache.get(colorStr);\n        if (cached) {\n            return copyRgba(rgbaArr, cached);\n        }\n\n        // colorStr may be not string\n        colorStr = colorStr + '';\n        // Remove all whitespace, not compliant, but should just be more accepting.\n        var str = colorStr.replace(/ /g, '').toLowerCase();\n\n        // Color keywords (and transparent) lookup.\n        if (str in kCSSColorTable) {\n            copyRgba(rgbaArr, kCSSColorTable[str]);\n            putToCache(colorStr, rgbaArr);\n            return rgbaArr;\n        }\n\n        // #abc and #abc123 syntax.\n        if (str.charAt(0) === '#') {\n            if (str.length === 4) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xfff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n                    (iv & 0xf0) | ((iv & 0xf0) >> 4),\n                    (iv & 0xf) | ((iv & 0xf) << 4),\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n            else if (str.length === 7) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xffffff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    (iv & 0xff0000) >> 16,\n                    (iv & 0xff00) >> 8,\n                    iv & 0xff,\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n\n            return;\n        }\n        var op = str.indexOf('('), ep = str.indexOf(')');\n        if (op !== -1 && ep + 1 === str.length) {\n            var fname = str.substr(0, op);\n            var params = str.substr(op + 1, ep - (op + 1)).split(',');\n            var alpha = 1;  // To allow case fallthrough.\n            switch (fname) {\n                case 'rgba':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    alpha = parseCssFloat(params.pop()); // jshint ignore:line\n                // Fall through.\n                case 'rgb':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    setRgba(rgbaArr,\n                        parseCssInt(params[0]),\n                        parseCssInt(params[1]),\n                        parseCssInt(params[2]),\n                        alpha\n                    );\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsla':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    params[3] = parseCssFloat(params[3]);\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsl':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                default:\n                    return;\n            }\n        }\n\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return;\n    }\n\n    /**\n     * @param {Array.<number>} hsla\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} rgba\n     */\n    function hsla2rgba(hsla, rgba) {\n        var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parseCssFloat(hsla[1]);\n        var l = parseCssFloat(hsla[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n\n        rgba = rgba || [];\n        setRgba(rgba,\n            clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255),\n            1\n        );\n\n        if (hsla.length === 4) {\n            rgba[3] = hsla[3];\n        }\n\n        return rgba;\n    }\n\n    /**\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} hsla\n     */\n    function rgba2hsla(rgba) {\n        if (!rgba) {\n            return;\n        }\n\n        // RGB from 0 to 255\n        var R = rgba[0] / 255;\n        var G = rgba[1] / 255;\n        var B = rgba[2] / 255;\n\n        var vMin = Math.min(R, G, B); // Min. value of RGB\n        var vMax = Math.max(R, G, B); // Max. value of RGB\n        var delta = vMax - vMin; // Delta RGB value\n\n        var L = (vMax + vMin) / 2;\n        var H;\n        var S;\n        // HSL results from 0 to 1\n        if (delta === 0) {\n            H = 0;\n            S = 0;\n        }\n        else {\n            if (L < 0.5) {\n                S = delta / (vMax + vMin);\n            }\n            else {\n                S = delta / (2 - vMax - vMin);\n            }\n\n            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\n            if (R === vMax) {\n                H = deltaB - deltaG;\n            }\n            else if (G === vMax) {\n                H = (1 / 3) + deltaR - deltaB;\n            }\n            else if (B === vMax) {\n                H = (2 / 3) + deltaG - deltaR;\n            }\n\n            if (H < 0) {\n                H += 1;\n            }\n\n            if (H > 1) {\n                H -= 1;\n            }\n        }\n\n        var hsla = [H * 360, S, L];\n\n        if (rgba[3] != null) {\n            hsla.push(rgba[3]);\n        }\n\n        return hsla;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number} level\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function lift(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            for (var i = 0; i < 3; i++) {\n                if (level < 0) {\n                    colorArr[i] = colorArr[i] * (1 - level) | 0;\n                }\n                else {\n                    colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\n                }\n            }\n            return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function toHex(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\n        }\n    }\n\n    /**\n     * Map value to color. Faster than mapToColor methods because color is represented by rgba array.\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<Array.<number>>} colors List of rgba color array\n     * @param {Array.<number>} [out] Mapped gba color array\n     * @return {Array.<number>} will be null/undefined if input illegal.\n     */\n    function fastMapToColor(normalizedValue, colors, out) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        out = out || [];\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = colors[leftIndex];\n        var rightColor = colors[rightIndex];\n        var dv = value - leftIndex;\n        out[0] = clampCssByte(lerp(leftColor[0], rightColor[0], dv));\n        out[1] = clampCssByte(lerp(leftColor[1], rightColor[1], dv));\n        out[2] = clampCssByte(lerp(leftColor[2], rightColor[2], dv));\n        out[3] = clampCssFloat(lerp(leftColor[3], rightColor[3], dv));\n\n        return out;\n    }\n    /**\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<string>} colors Color list.\n     * @param {boolean=} fullOutput Default false.\n     * @return {(string|Object)} Result color. If fullOutput,\n     *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n     * @memberOf module:zrender/util/color\n     */\n    function mapToColor(normalizedValue, colors, fullOutput) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = parse(colors[leftIndex]);\n        var rightColor = parse(colors[rightIndex]);\n        var dv = value - leftIndex;\n\n        var color = stringify(\n            [\n                clampCssByte(lerp(leftColor[0], rightColor[0], dv)),\n                clampCssByte(lerp(leftColor[1], rightColor[1], dv)),\n                clampCssByte(lerp(leftColor[2], rightColor[2], dv)),\n                clampCssFloat(lerp(leftColor[3], rightColor[3], dv))\n            ],\n            'rgba'\n        );\n\n        return fullOutput\n            ? {\n                color: color,\n                leftIndex: leftIndex,\n                rightIndex: rightIndex,\n                value: value\n            }\n            : color;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} h 0 ~ 360, ignore when null.\n     * @param {number=} s 0 ~ 1, ignore when null.\n     * @param {number=} l 0 ~ 1, ignore when null.\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyHSL(color, h, s, l) {\n        color = parse(color);\n\n        if (color) {\n            color = rgba2hsla(color);\n            h != null && (color[0] = clampCssAngle(h));\n            s != null && (color[1] = parseCssFloat(s));\n            l != null && (color[2] = parseCssFloat(l));\n\n            return stringify(hsla2rgba(color), 'rgba');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} alpha 0 ~ 1\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyAlpha(color, alpha) {\n        color = parse(color);\n\n        if (color && alpha != null) {\n            color[3] = clampCssFloat(alpha);\n            return stringify(color, 'rgba');\n        }\n    }\n\n    /**\n     * @param {Array.<number>} arrColor like [12,33,44,0.4]\n     * @param {string} type 'rgba', 'hsva', ...\n     * @return {string} Result color. (If input illegal, return undefined).\n     */\n    function stringify(arrColor, type) {\n        if (!arrColor || !arrColor.length) {\n            return;\n        }\n        var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n        if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n            colorStr += ',' + arrColor[3];\n        }\n        return type + '(' + colorStr + ')';\n    }\n\n    module.exports = {\n        parse: parse,\n        lift: lift,\n        toHex: toHex,\n        fastMapToColor: fastMapToColor,\n        mapToColor: mapToColor,\n        modifyHSL: modifyHSL,\n        modifyAlpha: modifyAlpha,\n        stringify: stringify\n    };\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/color.js\n// module id = 627\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Model = require('../../model/Model');\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n\n    var helper = {};\n\n    // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n    // allAxesInfo should be updated when setOption performed.\n    helper.collect = function (ecModel, api) {\n        var result = {\n            /**\n             * key: makeKey(axis.model)\n             * value: {\n             *      axis,\n             *      coordSys,\n             *      axisPointerModel,\n             *      triggerTooltip,\n             *      involveSeries,\n             *      snap,\n             *      seriesModels,\n             *      seriesDataCount\n             * }\n             */\n            axesInfo: {},\n            seriesInvolved: false,\n            /**\n             * key: makeKey(coordSys.model)\n             * value: Object: key makeKey(axis.model), value: axisInfo\n             */\n            coordSysAxesInfo: {},\n            coordSysMap: {}\n        };\n\n        collectAxesInfo(result, ecModel, api);\n\n        // Check seriesInvolved for performance, in case too many series in some chart.\n        result.seriesInvolved && collectSeriesInfo(result, ecModel);\n\n        return result;\n    };\n\n    function collectAxesInfo(result, ecModel, api) {\n        var globalTooltipModel = ecModel.getComponent('tooltip');\n        var globalAxisPointerModel = ecModel.getComponent('axisPointer');\n        // links can only be set on global.\n        var linksOption = globalAxisPointerModel.get('link', true) || [];\n        var linkGroups = [];\n\n        // Collect axes info.\n        each(api.getCoordinateSystems(), function (coordSys) {\n            // Some coordinate system do not support axes, like geo.\n            if (!coordSys.axisPointerEnabled) {\n                return;\n            }\n\n            var coordSysKey = makeKey(coordSys.model);\n            var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n            result.coordSysMap[coordSysKey] = coordSys;\n\n            // Set tooltip (like 'cross') is a convienent way to show axisPointer\n            // for user. So we enable seting tooltip on coordSys model.\n            var coordSysModel = coordSys.model;\n            var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n\n            each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null));\n\n            // If axis tooltip used, choose tooltip axis for each coordSys.\n            // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n            if (coordSys.getTooltipAxes\n                && globalTooltipModel\n                // If tooltip.showContent is set as false, tooltip will not\n                // show but axisPointer will show as normal.\n                && baseTooltipModel.get('show')\n            ) {\n                // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n                // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n                var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n                var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n                var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n                if (triggerAxis || cross) {\n                    each(tooltipAxes.baseAxes, curry(\n                        saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis\n                    ));\n                }\n                if (cross) {\n                    each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n                }\n            }\n\n            // fromTooltip: true | false | 'cross'\n            // triggerTooltip: true | false | null\n            function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n                var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n\n                var axisPointerShow = axisPointerModel.get('show');\n                if (!axisPointerShow || (\n                    axisPointerShow === 'auto'\n                    && !fromTooltip\n                    && !isHandleTrigger(axisPointerModel)\n                )) {\n                    return;\n                }\n\n                if (triggerTooltip == null) {\n                    triggerTooltip = axisPointerModel.get('triggerTooltip');\n                }\n\n                axisPointerModel = fromTooltip\n                    ? makeAxisPointerModel(\n                        axis, baseTooltipModel, globalAxisPointerModel, ecModel,\n                        fromTooltip, triggerTooltip\n                    )\n                    : axisPointerModel;\n\n                var snap = axisPointerModel.get('snap');\n                var key = makeKey(axis.model);\n                var involveSeries = triggerTooltip || snap || axis.type === 'category';\n\n                // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n                var axisInfo = result.axesInfo[key] = {\n                    key: key,\n                    axis: axis,\n                    coordSys: coordSys,\n                    axisPointerModel: axisPointerModel,\n                    triggerTooltip: triggerTooltip,\n                    involveSeries: involveSeries,\n                    snap: snap,\n                    useHandle: isHandleTrigger(axisPointerModel),\n                    seriesModels: []\n                };\n                axesInfoInCoordSys[key] = axisInfo;\n                result.seriesInvolved |= involveSeries;\n\n                var groupIndex = getLinkGroupIndex(linksOption, axis);\n                if (groupIndex != null) {\n                    var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {axesInfo: {}});\n                    linkGroup.axesInfo[key] = axisInfo;\n                    linkGroup.mapper = linksOption[groupIndex].mapper;\n                    axisInfo.linkGroup = linkGroup;\n                }\n            }\n        });\n    }\n\n    function makeAxisPointerModel(\n        axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip\n    ) {\n        var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n        var volatileOption = {};\n\n        each(\n            [\n                'type', 'snap', 'lineStyle', 'shadowStyle', 'label',\n                'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'\n            ],\n            function (field) {\n                volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n            }\n        );\n\n        // category axis do not auto snap, otherwise some tick that do not\n        // has value can not be hovered. value/time/log axis default snap if\n        // triggered from tooltip and trigger tooltip.\n        volatileOption.snap = axis.type !== 'category' && !!triggerTooltip;\n\n        // Compatibel with previous behavior, tooltip axis do not show label by default.\n        // Only these properties can be overrided from tooltip to axisPointer.\n        if (tooltipAxisPointerModel.get('type') === 'cross') {\n            volatileOption.type = 'line';\n        }\n        var labelOption = volatileOption.label || (volatileOption.label = {});\n        // Follow the convention, do not show label when triggered by tooltip by default.\n        labelOption.show == null && (labelOption.show = false);\n\n        if (fromTooltip === 'cross') {\n            // When 'cross', both axes show labels.\n            labelOption.show = true;\n            // If triggerTooltip, this is a base axis, which should better not use cross style\n            // (cross style is dashed by default)\n            if (!triggerTooltip) {\n                var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n                crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n            }\n        }\n\n        return axis.model.getModel(\n            'axisPointer',\n            new Model(volatileOption, globalAxisPointerModel, ecModel)\n        );\n    }\n\n    function collectSeriesInfo(result, ecModel) {\n        // Prepare data for axis trigger\n        ecModel.eachSeries(function (seriesModel) {\n\n            // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n            var coordSys = seriesModel.coordinateSystem;\n            var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n            var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n            if (!coordSys\n                || seriesTooltipTrigger === 'none'\n                || seriesTooltipTrigger === false\n                || seriesTooltipTrigger === 'item'\n                || seriesTooltipShow === false\n                || seriesModel.get('axisPointer.show', true) === false\n            ) {\n                return;\n            }\n\n            each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n                var axis = axisInfo.axis;\n                if (coordSys.getAxis(axis.dim) === axis) {\n                    axisInfo.seriesModels.push(seriesModel);\n                    axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n                    axisInfo.seriesDataCount += seriesModel.getData().count();\n                }\n            });\n\n        }, this);\n    }\n\n    /**\n     * For example:\n     * {\n     *     axisPointer: {\n     *         links: [{\n     *             xAxisIndex: [2, 4],\n     *             yAxisIndex: 'all'\n     *         }, {\n     *             xAxisId: ['a5', 'a7'],\n     *             xAxisName: 'xxx'\n     *         }]\n     *     }\n     * }\n     */\n    function getLinkGroupIndex(linksOption, axis) {\n        var axisModel = axis.model;\n        var dim = axis.dim;\n        for (var i = 0; i < linksOption.length; i++) {\n            var linkOption = linksOption[i] || {};\n            if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id)\n                || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex)\n                || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)\n            ) {\n                return i;\n            }\n        }\n    }\n\n    function checkPropInLink(linkPropValue, axisPropValue) {\n        return linkPropValue === 'all'\n            || (zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0)\n            || linkPropValue === axisPropValue;\n    }\n\n    helper.fixValue = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        if (!axisInfo) {\n            return;\n        }\n\n        var axisPointerModel = axisInfo.axisPointerModel;\n        var scale = axisInfo.axis.scale;\n        var option = axisPointerModel.option;\n        var status = axisPointerModel.get('status');\n        var value = axisPointerModel.get('value');\n\n        // Parse init value for category and time axis.\n        if (value != null) {\n            value = scale.parse(value);\n        }\n\n        var useHandle = isHandleTrigger(axisPointerModel);\n        // If `handle` used, `axisPointer` will always be displayed, so value\n        // and status should be initialized.\n        if (status == null) {\n            option.status = useHandle ? 'show' : 'hide';\n        }\n\n        var extent = scale.getExtent().slice();\n        extent[0] > extent[1] && extent.reverse();\n\n        if (// Pick a value on axis when initializing.\n            value == null\n            // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n            // where we should re-pick a value to keep `handle` displaying normally.\n            || value > extent[1]\n        ) {\n            // Make handle displayed on the end of the axis when init, which looks better.\n            value = extent[1];\n        }\n        if (value < extent[0]) {\n            value = extent[0];\n        }\n\n        option.value = value;\n\n        if (useHandle) {\n            option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n        }\n    };\n\n    helper.getAxisInfo = function (axisModel) {\n        var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n        return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n    };\n\n    helper.getAxisPointerModel = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        return axisInfo && axisInfo.axisPointerModel;\n    };\n\n    function isHandleTrigger(axisPointerModel) {\n        return !!axisPointerModel.get('handle.show');\n    }\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @return {string} unique key\n     */\n    var makeKey = helper.makeKey = function (model) {\n        return model.type + '||' + model.id;\n    };\n\n    module.exports = helper;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/modelHelper.js\n// module id = 629\n// module chunks = 0 1 2","/**\n * List for data storage\n * @module echarts/data/List\n */\n\n\n    var UNDEFINED = 'undefined';\n    var globalObj = typeof window === 'undefined' ? global : window;\n    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\n        ? Array : globalObj.Float64Array;\n    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\n        ? Array : globalObj.Int32Array;\n\n    var dataCtors = {\n        'float': Float64Array,\n        'int': Int32Array,\n        // Ordinal data type can be string or int\n        'ordinal': Array,\n        'number': Array,\n        'time': Array\n    };\n\n    var Model = require('../model/Model');\n    var DataDiffer = require('./DataDiffer');\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var isObject = zrUtil.isObject;\n\n    var TRANSFERABLE_PROPERTIES = [\n        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\n    ];\n\n    function transferProperties(a, b) {\n        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n            if (b.hasOwnProperty(propName)) {\n                a[propName] = b[propName];\n            }\n        });\n\n        a.__wrappedMethods = b.__wrappedMethods;\n    }\n\n    function DefaultDataProvider(dataArray) {\n        this._array = dataArray || [];\n    }\n\n    DefaultDataProvider.prototype.pure = false;\n\n    DefaultDataProvider.prototype.count = function () {\n        return this._array.length;\n    };\n    DefaultDataProvider.prototype.getItem = function (idx) {\n        return this._array[idx];\n    };\n\n    /**\n     * @constructor\n     * @alias module:echarts/data/List\n     *\n     * @param {Array.<string|Object>} dimensions\n     *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n     *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n     * @param {module:echarts/model/Model} hostModel\n     */\n    var List = function (dimensions, hostModel) {\n\n        dimensions = dimensions || ['x', 'y'];\n\n        var dimensionInfos = {};\n        var dimensionNames = [];\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimensionName;\n            var dimensionInfo = {};\n            if (typeof dimensions[i] === 'string') {\n                dimensionName = dimensions[i];\n                dimensionInfo = {\n                    name: dimensionName,\n                    coordDim: dimensionName,\n                    coordDimIndex: 0,\n                    stackable: false,\n                    // Type can be 'float', 'int', 'number'\n                    // Default is number, Precision of float may not enough\n                    type: 'number'\n                };\n            }\n            else {\n                dimensionInfo = dimensions[i];\n                dimensionName = dimensionInfo.name;\n                dimensionInfo.type = dimensionInfo.type || 'number';\n                if (!dimensionInfo.coordDim) {\n                    dimensionInfo.coordDim = dimensionName;\n                    dimensionInfo.coordDimIndex = 0;\n                }\n            }\n            dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n            dimensionNames.push(dimensionName);\n            dimensionInfos[dimensionName] = dimensionInfo;\n        }\n\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        this.dimensions = dimensionNames;\n\n        /**\n         * Infomation of each data dimension, like data type.\n         * @type {Object}\n         */\n        this._dimensionInfos = dimensionInfos;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.hostModel = hostModel;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.dataType;\n\n        /**\n         * Indices stores the indices of data subset after filtered.\n         * This data subset will be used in chart.\n         * @type {Array.<number>}\n         * @readOnly\n         */\n        this.indices = [];\n\n        /**\n         * Data storage\n         * @type {Object.<key, TypedArray|Array>}\n         * @private\n         */\n        this._storage = {};\n\n        /**\n         * @type {Array.<string>}\n         */\n        this._nameList = [];\n        /**\n         * @type {Array.<string>}\n         */\n        this._idList = [];\n\n        /**\n         * Models of data option is stored sparse for optimizing memory cost\n         * @type {Array.<module:echarts/model/Model>}\n         * @private\n         */\n        this._optionModels = [];\n\n        /**\n         * @param {module:echarts/data/List}\n         */\n        this.stackedOn = null;\n\n        /**\n         * Global visual properties after visual coding\n         * @type {Object}\n         * @private\n         */\n        this._visual = {};\n\n        /**\n         * Globel layout properties.\n         * @type {Object}\n         * @private\n         */\n        this._layout = {};\n\n        /**\n         * Item visual properties after visual coding\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemVisuals = [];\n\n        /**\n         * Item layout properties after layout\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemLayouts = [];\n\n        /**\n         * Graphic elemnents\n         * @type {Array.<module:zrender/Element>}\n         * @private\n         */\n        this._graphicEls = [];\n\n        /**\n         * @type {Array.<Array|Object>}\n         * @private\n         */\n        this._rawData;\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._extent;\n    };\n\n    var listProto = List.prototype;\n\n    listProto.type = 'list';\n\n    /**\n     * If each data item has it's own option\n     * @type {boolean}\n     */\n    listProto.hasItemOption = true;\n\n    /**\n     * Get dimension name\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     * @return {string} Concrete dim name.\n     */\n    listProto.getDimension = function (dim) {\n        if (!isNaN(dim)) {\n            dim = this.dimensions[dim] || dim;\n        }\n        return dim;\n    };\n\n    /**\n     * Get type and stackable info of particular dimension\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     */\n    listProto.getDimensionInfo = function (dim) {\n        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n    };\n\n    /**\n     * Initialize from data\n     * @param {Array.<Object|number|Array>} data\n     * @param {Array.<string>} [nameList]\n     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n     */\n    listProto.initData = function (data, nameList, dimValueGetter) {\n        data = data || [];\n\n        var isDataArray = zrUtil.isArray(data);\n        if (isDataArray) {\n            data = new DefaultDataProvider(data);\n        }\n        if (__DEV__) {\n            if (!isDataArray && (typeof data.getItem != 'function' || typeof data.count != 'function')) {\n                throw new Error('Inavlid data provider.');\n            }\n        }\n\n        this._rawData = data;\n\n        // Clear\n        var storage = this._storage = {};\n        var indices = this.indices = [];\n\n        var dimensions = this.dimensions;\n        var dimensionInfoMap = this._dimensionInfos;\n\n        var size = data.count();\n\n        var idList = [];\n        var nameRepeatCount = {};\n        var nameDimIdx;\n\n        nameList = nameList || [];\n\n        // Init storage\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimInfo = dimensionInfoMap[dimensions[i]];\n            dimInfo.otherDims.itemName === 0 && (nameDimIdx = i);\n            var DataCtor = dataCtors[dimInfo.type];\n            storage[dimensions[i]] = new DataCtor(size);\n        }\n\n        var self = this;\n        if (!dimValueGetter) {\n            self.hasItemOption = false;\n        }\n        // Default dim value getter\n        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n            var value = modelUtil.getDataItemValue(dataItem);\n            // If any dataItem is like { value: 10 }\n            if (modelUtil.isDataItemOption(dataItem)) {\n                self.hasItemOption = true;\n            }\n            return modelUtil.converDataValue(\n                (value instanceof Array)\n                    ? value[dimIndex]\n                    // If value is a single number or something else not array.\n                    : value,\n                dimensionInfoMap[dimName]\n            );\n        };\n\n        for (var i = 0; i < size; i++) {\n            // NOTICE: Try not to write things into dataItem\n            var dataItem = data.getItem(i);\n            // Each data item is value\n            // [1, 2]\n            // 2\n            // Bar chart, line chart which uses category axis\n            // only gives the 'y' value. 'x' value is the indices of cateogry\n            // Use a tempValue to normalize the value to be a (x, y) value\n\n            // Store the data by dimensions\n            for (var k = 0; k < dimensions.length; k++) {\n                var dim = dimensions[k];\n                var dimStorage = storage[dim];\n                // PENDING NULL is empty or zero\n                dimStorage[i] = dimValueGetter(dataItem, dim, i, k);\n            }\n\n            indices.push(i);\n        }\n\n        // Use the name in option and create id\n        for (var i = 0; i < size; i++) {\n            var dataItem = data.getItem(i);\n            if (!nameList[i] && dataItem) {\n                if (dataItem.name != null) {\n                    nameList[i] = dataItem.name;\n                }\n                else if (nameDimIdx != null) {\n                    nameList[i] = storage[dimensions[nameDimIdx]][i];\n                }\n            }\n            var name = nameList[i] || '';\n            // Try using the id in option\n            var id = dataItem && dataItem.id;\n\n            if (!id && name) {\n                // Use name as id and add counter to avoid same name\n                nameRepeatCount[name] = nameRepeatCount[name] || 0;\n                id = name;\n                if (nameRepeatCount[name] > 0) {\n                    id += '__ec__' + nameRepeatCount[name];\n                }\n                nameRepeatCount[name]++;\n            }\n            id && (idList[i] = id);\n        }\n\n        this._nameList = nameList;\n        this._idList = idList;\n    };\n\n    /**\n     * @return {number}\n     */\n    listProto.count = function () {\n        return this.indices.length;\n    };\n\n    /**\n     * Get value. Return NaN if idx is out of range.\n     * @param {string} dim Dim must be concrete name.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.get = function (dim, idx, stack) {\n        var storage = this._storage;\n        var dataIndex = this.indices[idx];\n\n        // If value not exists\n        if (dataIndex == null || !storage[dim]) {\n            return NaN;\n        }\n\n        var value = storage[dim][dataIndex];\n        // FIXME ordinal data type is not stackable\n        if (stack) {\n            var dimensionInfo = this._dimensionInfos[dim];\n            if (dimensionInfo && dimensionInfo.stackable) {\n                var stackedOn = this.stackedOn;\n                while (stackedOn) {\n                    // Get no stacked data of stacked on\n                    var stackedValue = stackedOn.get(dim, idx);\n                    // Considering positive stack, negative stack and empty data\n                    if ((value >= 0 && stackedValue > 0)  // Positive stack\n                        || (value <= 0 && stackedValue < 0) // Negative stack\n                    ) {\n                        value += stackedValue;\n                    }\n                    stackedOn = stackedOn.stackedOn;\n                }\n            }\n        }\n        return value;\n    };\n\n    /**\n     * Get value for multi dimensions.\n     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.getValues = function (dimensions, idx, stack) {\n        var values = [];\n\n        if (!zrUtil.isArray(dimensions)) {\n            stack = idx;\n            idx = dimensions;\n            dimensions = this.dimensions;\n        }\n\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            values.push(this.get(dimensions[i], idx, stack));\n        }\n\n        return values;\n    };\n\n    /**\n     * If value is NaN. Inlcuding '-'\n     * @param {string} dim\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.hasValue = function (idx) {\n        var dimensions = this.dimensions;\n        var dimensionInfos = this._dimensionInfos;\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            if (\n                // Ordinal type can be string or number\n                dimensionInfos[dimensions[i]].type !== 'ordinal'\n                && isNaN(this.get(dimensions[i], idx))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * Get extent of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     * @param {Function} filter\n     */\n    listProto.getDataExtent = function (dim, stack, filter) {\n        dim = this.getDimension(dim);\n        var dimData = this._storage[dim];\n        var dimInfo = this.getDimensionInfo(dim);\n        stack = (dimInfo && dimInfo.stackable) && stack;\n        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\n        var value;\n        if (dimExtent) {\n            return dimExtent;\n        }\n        // var dimInfo = this._dimensionInfos[dim];\n        if (dimData) {\n            var min = Infinity;\n            var max = -Infinity;\n            // var isOrdinal = dimInfo.type === 'ordinal';\n            for (var i = 0, len = this.count(); i < len; i++) {\n                value = this.get(dim, i, stack);\n                // FIXME\n                // if (isOrdinal && typeof value === 'string') {\n                //     value = zrUtil.indexOf(dimData, value);\n                // }\n                if (!filter || filter(value, dim, i)) {\n                    value < min && (min = value);\n                    value > max && (max = value);\n                }\n            }\n            return (this._extent[dim + !!stack] = [min, max]);\n        }\n        else {\n            return [Infinity, -Infinity];\n        }\n    };\n\n    /**\n     * Get sum of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getSum = function (dim, stack) {\n        var dimData = this._storage[dim];\n        var sum = 0;\n        if (dimData) {\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var value = this.get(dim, i, stack);\n                if (!isNaN(value)) {\n                    sum += value;\n                }\n            }\n        }\n        return sum;\n    };\n\n    /**\n     * Retreive the index with given value\n     * @param {number} idx\n     * @param {number} value\n     * @return {number}\n     */\n    // FIXME Precision of float value\n    listProto.indexOf = function (dim, value) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var indices = this.indices;\n\n        if (dimData) {\n            for (var i = 0, len = indices.length; i < len; i++) {\n                var rawIndex = indices[i];\n                if (dimData[rawIndex] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given name\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfName = function (name) {\n        var indices = this.indices;\n        var nameList = this._nameList;\n\n        for (var i = 0, len = indices.length; i < len; i++) {\n            var rawIndex = indices[i];\n            if (nameList[rawIndex] === name) {\n                return i;\n            }\n        }\n\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given raw data index\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfRawIndex = function (rawIndex) {\n        // Indices are ascending\n        var indices = this.indices;\n\n        // If rawIndex === dataIndex\n        var rawDataIndex = indices[rawIndex];\n        if (rawDataIndex != null && rawDataIndex === rawIndex) {\n            return rawIndex;\n        }\n\n        var left = 0;\n        var right = indices.length - 1;\n        while (left <= right) {\n            var mid = (left + right) / 2 | 0;\n            if (indices[mid] < rawIndex) {\n                left = mid + 1;\n            }\n            else if (indices[mid] > rawIndex) {\n                right = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index of nearest value\n     * @param {string} dim\n     * @param {number} value\n     * @param {boolean} stack If given value is after stacked\n     * @param {number} [maxDistance=Infinity]\n     * @return {Array.<number>} Considere multiple points has the same value.\n     */\n    listProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var nearestIndices = [];\n\n        if (!dimData) {\n            return nearestIndices;\n        }\n\n        if (maxDistance == null) {\n            maxDistance = Infinity;\n        }\n\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n        for (var i = 0, len = this.count(); i < len; i++) {\n            var diff = value - this.get(dim, i, stack);\n            var dist = Math.abs(diff);\n            if (diff <= maxDistance && dist <= minDist) {\n                // For the case of two data are same on xAxis, which has sequence data.\n                // Show the nearest index\n                // https://github.com/ecomfe/echarts/issues/2869\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    nearestIndices.length = 0;\n                }\n                nearestIndices.push(i);\n            }\n        }\n        return nearestIndices;\n    };\n\n    /**\n     * Get raw data index\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawIndex = function (idx) {\n        var rawIdx = this.indices[idx];\n        return rawIdx == null ? -1 : rawIdx;\n    };\n\n    /**\n     * Get raw data item\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawDataItem = function (idx) {\n        return this._rawData.getItem(this.getRawIndex(idx));\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getName = function (idx) {\n        return this._nameList[this.indices[idx]] || '';\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getId = function (idx) {\n        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\n    };\n\n\n    function normalizeDimensions(dimensions) {\n        if (!zrUtil.isArray(dimensions)) {\n            dimensions = [dimensions];\n        }\n        return dimensions;\n    }\n\n    /**\n     * Data iteration\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     *\n     * @example\n     *  list.each('x', function (x, idx) {});\n     *  list.each(['x', 'y'], function (x, y, idx) {});\n     *  list.each(function (idx) {})\n     */\n    listProto.each = function (dims, cb, stack, context) {\n        if (typeof dims === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dims;\n            dims = [];\n        }\n\n        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n\n        var value = [];\n        var dimSize = dims.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            // Simple optimization\n            switch (dimSize) {\n                case 0:\n                    cb.call(context, i);\n                    break;\n                case 1:\n                    cb.call(context, this.get(dims[0], i, stack), i);\n                    break;\n                case 2:\n                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n                    break;\n                default:\n                    for (var k = 0; k < dimSize; k++) {\n                        value[k] = this.get(dims[k], i, stack);\n                    }\n                    // Index\n                    value[k] = i;\n                    cb.apply(context, value);\n            }\n        }\n    };\n\n    /**\n     * Data filter\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     */\n    listProto.filterSelf = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var newIndices = [];\n        var value = [];\n        var dimSize = dimensions.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            var keep;\n            // Simple optimization\n            if (!dimSize) {\n                keep = cb.call(context, i);\n            }\n            else if (dimSize === 1) {\n                keep = cb.call(\n                    context, this.get(dimensions[0], i, stack), i\n                );\n            }\n            else {\n                for (var k = 0; k < dimSize; k++) {\n                    value[k] = this.get(dimensions[k], i, stack);\n                }\n                value[k] = i;\n                keep = cb.apply(context, value);\n            }\n            if (keep) {\n                newIndices.push(indices[i]);\n            }\n        }\n\n        this.indices = newIndices;\n\n        // Reset data extent\n        this._extent = {};\n\n        return this;\n    };\n\n    /**\n     * Data mapping to a plain array\n     * @param {string|Array.<string>} [dimensions]\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.mapArray = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        var result = [];\n        this.each(dimensions, function () {\n            result.push(cb && cb.apply(this, arguments));\n        }, stack, context);\n        return result;\n    };\n\n    function cloneListForMapAndSample(original, excludeDimensions) {\n        var allDimensions = original.dimensions;\n        var list = new List(\n            zrUtil.map(allDimensions, original.getDimensionInfo, original),\n            original.hostModel\n        );\n        // FIXME If needs stackedOn, value may already been stacked\n        transferProperties(list, original);\n\n        var storage = list._storage = {};\n        var originalStorage = original._storage;\n        // Init storage\n        for (var i = 0; i < allDimensions.length; i++) {\n            var dim = allDimensions[i];\n            var dimStore = originalStorage[dim];\n            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n                storage[dim] = new dimStore.constructor(\n                    originalStorage[dim].length\n                );\n            }\n            else {\n                // Direct reference for other dimensions\n                storage[dim] = originalStorage[dim];\n            }\n        }\n        return list;\n    }\n\n    /**\n     * Data mapping to a new List with given dimensions\n     * @param {string|Array.<string>} dimensions\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.map = function (dimensions, cb, stack, context) {\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var list = cloneListForMapAndSample(this, dimensions);\n        // Following properties are all immutable.\n        // So we can reference to the same value\n        var indices = list.indices = this.indices;\n\n        var storage = list._storage;\n\n        var tmpRetValue = [];\n        this.each(dimensions, function () {\n            var idx = arguments[arguments.length - 1];\n            var retValue = cb && cb.apply(this, arguments);\n            if (retValue != null) {\n                // a number\n                if (typeof retValue === 'number') {\n                    tmpRetValue[0] = retValue;\n                    retValue = tmpRetValue;\n                }\n                for (var i = 0; i < retValue.length; i++) {\n                    var dim = dimensions[i];\n                    var dimStore = storage[dim];\n                    var rawIdx = indices[idx];\n                    if (dimStore) {\n                        dimStore[rawIdx] = retValue[i];\n                    }\n                }\n            }\n        }, stack, context);\n\n        return list;\n    };\n\n    /**\n     * Large data down sampling on given dimension\n     * @param {string} dimension\n     * @param {number} rate\n     * @param {Function} sampleValue\n     * @param {Function} sampleIndex Sample index for name and id\n     */\n    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n        var list = cloneListForMapAndSample(this, [dimension]);\n        var storage = this._storage;\n        var targetStorage = list._storage;\n\n        var originalIndices = this.indices;\n        var indices = list.indices = [];\n\n        var frameValues = [];\n        var frameIndices = [];\n        var frameSize = Math.floor(1 / rate);\n\n        var dimStore = targetStorage[dimension];\n        var len = this.count();\n        // Copy data from original data\n        for (var i = 0; i < storage[dimension].length; i++) {\n            targetStorage[dimension][i] = storage[dimension][i];\n        }\n        for (var i = 0; i < len; i += frameSize) {\n            // Last frame\n            if (frameSize > len - i) {\n                frameSize = len - i;\n                frameValues.length = frameSize;\n            }\n            for (var k = 0; k < frameSize; k++) {\n                var idx = originalIndices[i + k];\n                frameValues[k] = dimStore[idx];\n                frameIndices[k] = idx;\n            }\n            var value = sampleValue(frameValues);\n            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\n            // Only write value on the filtered data\n            dimStore[idx] = value;\n            indices.push(idx);\n        }\n\n        return list;\n    };\n\n    /**\n     * Get model of one data item.\n     *\n     * @param {number} idx\n     */\n    // FIXME Model proxy ?\n    listProto.getItemModel = function (idx) {\n        var hostModel = this.hostModel;\n        idx = this.indices[idx];\n        return new Model(this._rawData.getItem(idx), hostModel, hostModel && hostModel.ecModel);\n    };\n\n    /**\n     * Create a data differ\n     * @param {module:echarts/data/List} otherList\n     * @return {module:echarts/data/DataDiffer}\n     */\n    listProto.diff = function (otherList) {\n        var idList = this._idList;\n        var otherIdList = otherList && otherList._idList;\n        var val;\n        // Use prefix to avoid index to be the same as otherIdList[idx],\n        // which will cause weird udpate animation.\n        var prefix = 'e\\0\\0';\n\n        return new DataDiffer(\n            otherList ? otherList.indices : [],\n            this.indices,\n            function (idx) {\n                return (val = otherIdList[idx]) != null ? val : prefix + idx;\n            },\n            function (idx) {\n                return (val = idList[idx]) != null ? val : prefix + idx;\n            }\n        );\n    };\n    /**\n     * Get visual property.\n     * @param {string} key\n     */\n    listProto.getVisual = function (key) {\n        var visual = this._visual;\n        return visual && visual[key];\n    };\n\n    /**\n     * Set visual property\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setVisual('color', color);\n     *  setVisual({\n     *      'color': color\n     *  });\n     */\n    listProto.setVisual = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setVisual(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._visual = this._visual || {};\n        this._visual[key] = val;\n    };\n\n    /**\n     * Set layout property.\n     * @param {string|Object} key\n     * @param {*} [val]\n     */\n    listProto.setLayout = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setLayout(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._layout[key] = val;\n    };\n\n    /**\n     * Get layout property.\n     * @param  {string} key.\n     * @return {*}\n     */\n    listProto.getLayout = function (key) {\n        return this._layout[key];\n    };\n\n    /**\n     * Get layout of single data item\n     * @param {number} idx\n     */\n    listProto.getItemLayout = function (idx) {\n        return this._itemLayouts[idx];\n    };\n\n    /**\n     * Set layout of single data item\n     * @param {number} idx\n     * @param {Object} layout\n     * @param {boolean=} [merge=false]\n     */\n    listProto.setItemLayout = function (idx, layout, merge) {\n        this._itemLayouts[idx] = merge\n            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\n            : layout;\n    };\n\n    /**\n     * Clear all layout of single data item\n     */\n    listProto.clearItemLayouts = function () {\n        this._itemLayouts.length = 0;\n    };\n\n    /**\n     * Get visual property of single data item\n     * @param {number} idx\n     * @param {string} key\n     * @param {boolean} [ignoreParent=false]\n     */\n    listProto.getItemVisual = function (idx, key, ignoreParent) {\n        var itemVisual = this._itemVisuals[idx];\n        var val = itemVisual && itemVisual[key];\n        if (val == null && !ignoreParent) {\n            // Use global visual property\n            return this.getVisual(key);\n        }\n        return val;\n    };\n\n    /**\n     * Set visual property of single data item\n     *\n     * @param {number} idx\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setItemVisual(0, 'color', color);\n     *  setItemVisual(0, {\n     *      'color': color\n     *  });\n     */\n    listProto.setItemVisual = function (idx, key, value) {\n        var itemVisual = this._itemVisuals[idx] || {};\n        this._itemVisuals[idx] = itemVisual;\n\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    itemVisual[name] = key[name];\n                }\n            }\n            return;\n        }\n        itemVisual[key] = value;\n    };\n\n    /**\n     * Clear itemVisuals and list visual.\n     */\n    listProto.clearAllVisual = function () {\n        this._visual = {};\n        this._itemVisuals = [];\n    };\n\n    var setItemDataAndSeriesIndex = function (child) {\n        child.seriesIndex = this.seriesIndex;\n        child.dataIndex = this.dataIndex;\n        child.dataType = this.dataType;\n    };\n    /**\n     * Set graphic element relative to data. It can be set as null\n     * @param {number} idx\n     * @param {module:zrender/Element} [el]\n     */\n    listProto.setItemGraphicEl = function (idx, el) {\n        var hostModel = this.hostModel;\n\n        if (el) {\n            // Add data index and series index for indexing the data by element\n            // Useful in tooltip\n            el.dataIndex = idx;\n            el.dataType = this.dataType;\n            el.seriesIndex = hostModel && hostModel.seriesIndex;\n            if (el.type === 'group') {\n                el.traverse(setItemDataAndSeriesIndex, el);\n            }\n        }\n\n        this._graphicEls[idx] = el;\n    };\n\n    /**\n     * @param {number} idx\n     * @return {module:zrender/Element}\n     */\n    listProto.getItemGraphicEl = function (idx) {\n        return this._graphicEls[idx];\n    };\n\n    /**\n     * @param {Function} cb\n     * @param {*} context\n     */\n    listProto.eachItemGraphicEl = function (cb, context) {\n        zrUtil.each(this._graphicEls, function (el, idx) {\n            if (el) {\n                cb && cb.call(context, el, idx);\n            }\n        });\n    };\n\n    /**\n     * Shallow clone a new list except visual and layout properties, and graph elements.\n     * New list only change the indices.\n     */\n    listProto.cloneShallow = function () {\n        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n        var list = new List(dimensionInfoList, this.hostModel);\n\n        // FIXME\n        list._storage = this._storage;\n\n        transferProperties(list, this);\n\n\n        // Clone will not change the data extent and indices\n        list.indices = this.indices.slice();\n\n        if (this._extent) {\n            list._extent = zrUtil.extend({}, this._extent);\n        }\n\n        return list;\n    };\n\n    /**\n     * Wrap some method to add more feature\n     * @param {string} methodName\n     * @param {Function} injectFunction\n     */\n    listProto.wrapMethod = function (methodName, injectFunction) {\n        var originalMethod = this[methodName];\n        if (typeof originalMethod !== 'function') {\n            return;\n        }\n        this.__wrappedMethods = this.__wrappedMethods || [];\n        this.__wrappedMethods.push(methodName);\n        this[methodName] = function () {\n            var res = originalMethod.apply(this, arguments);\n            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n        };\n    };\n\n    // Methods that create a new list based on this list should be listed here.\n    // Notice that those method should `RETURN` the new list.\n    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\n    // Methods that change indices of this list should be listed here.\n    listProto.CHANGABLE_METHODS = ['filterSelf'];\n\n    module.exports = List;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/List.js\n// module id = 630\n// module chunks = 0 1 2","/**\n * Complete dimensions by data (guess dimension).\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var each = zrUtil.each;\n    var isString = zrUtil.isString;\n    var defaults = zrUtil.defaults;\n    var normalizeToArray = modelUtil.normalizeToArray;\n\n    var OTHER_DIMS = {tooltip: 1, label: 1, itemName: 1};\n\n    /**\n     * Complete the dimensions array, by user defined `dimension` and `encode`,\n     * and guessing from the data structure.\n     * If no 'value' dimension specified, the first no-named dimension will be\n     * named as 'value'.\n     *\n     * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n     *      provides not only dim template, but also default order.\n     *      `name` of each item provides default coord name.\n     *      [{dimsDef: []}, ...] can be specified to give names.\n     * @param {Array} data Data list. [[1, 2, 3], [2, 3, 4]].\n     * @param {Object} [opt]\n     * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n     *      For example: ['asdf', {name, type}, ...].\n     * @param {Object} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n     * @param {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n     * @param {string} [opt.extraFromZero] If specified, extra dim names will be:\n     *                      extraPrefix + 0, extraPrefix + extraBaseIndex + 1 ...\n     *                      If not specified, extra dim names will be:\n     *                      extraPrefix, extraPrefix + 0, extraPrefix + 1 ...\n     * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n     * @return {Array.<Object>} [{\n     *      name: string mandatory,\n     *      coordDim: string mandatory,\n     *      coordDimIndex: number mandatory,\n     *      type: string optional,\n     *      tooltipName: string optional,\n     *      otherDims: {\n     *          tooltip: number optional,\n     *          label: number optional\n     *      },\n     *      isExtraCoord: boolean true or undefined.\n     *      other props ...\n     * }]\n     */\n    function completeDimensions(sysDims, data, opt) {\n        data = data || [];\n        opt = opt || {};\n        sysDims = (sysDims || []).slice();\n        var dimsDef = (opt.dimsDef || []).slice();\n        var encodeDef = zrUtil.createHashMap(opt.encodeDef);\n        var dataDimNameMap = zrUtil.createHashMap();\n        var coordDimNameMap = zrUtil.createHashMap();\n        // var valueCandidate;\n        var result = [];\n\n        var dimCount = opt.dimCount;\n        if (dimCount == null) {\n            var value0 = retrieveValue(data[0]);\n            dimCount = Math.max(\n                zrUtil.isArray(value0) && value0.length || 1,\n                sysDims.length,\n                dimsDef.length\n            );\n            each(sysDims, function (sysDimItem) {\n                var sysDimItemDimsDef = sysDimItem.dimsDef;\n                sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n            });\n        }\n\n        // Apply user defined dims (`name` and `type`) and init result.\n        for (var i = 0; i < dimCount; i++) {\n            var dimDefItem = isString(dimsDef[i]) ? {name: dimsDef[i]} : (dimsDef[i] || {});\n            var userDimName = dimDefItem.name;\n            var resultItem = result[i] = {otherDims: {}};\n            // Name will be applied later for avoiding duplication.\n            if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n                // Only if `series.dimensions` is defined in option, tooltipName\n                // will be set, and dimension will be diplayed vertically in\n                // tooltip by default.\n                resultItem.name = resultItem.tooltipName = userDimName;\n                dataDimNameMap.set(userDimName, i);\n            }\n            dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n        }\n\n        // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n        encodeDef.each(function (dataDims, coordDim) {\n            dataDims = encodeDef.set(coordDim, normalizeToArray(dataDims).slice());\n            each(dataDims, function (resultDimIdx, coordDimIndex) {\n                // The input resultDimIdx can be dim name or index.\n                isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n                if (resultDimIdx != null && resultDimIdx < dimCount) {\n                    dataDims[coordDimIndex] = resultDimIdx;\n                    applyDim(result[resultDimIdx], coordDim, coordDimIndex);\n                }\n            });\n        });\n\n        // Apply templetes and default order from `sysDims`.\n        var availDimIdx = 0;\n        each(sysDims, function (sysDimItem, sysDimIndex) {\n            var coordDim;\n            var sysDimItem;\n            var sysDimItemDimsDef;\n            var sysDimItemOtherDims;\n            if (isString(sysDimItem)) {\n                coordDim = sysDimItem;\n                sysDimItem = {};\n            }\n            else {\n                coordDim = sysDimItem.name;\n                sysDimItem = zrUtil.clone(sysDimItem);\n                // `coordDimIndex` should not be set directly.\n                sysDimItemDimsDef = sysDimItem.dimsDef;\n                sysDimItemOtherDims = sysDimItem.otherDims;\n                sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex\n                    = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n            }\n\n            var dataDims = normalizeToArray(encodeDef.get(coordDim));\n            // dimensions provides default dim sequences.\n            if (!dataDims.length) {\n                for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n                    while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n                        availDimIdx++;\n                    }\n                    availDimIdx < result.length && dataDims.push(availDimIdx++);\n                }\n            }\n            // Apply templates.\n            each(dataDims, function (resultDimIdx, coordDimIndex) {\n                var resultItem = result[resultDimIdx];\n                applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n                if (resultItem.name == null && sysDimItemDimsDef) {\n                    resultItem.name = resultItem.tooltipName = sysDimItemDimsDef[coordDimIndex];\n                }\n                sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n            });\n        });\n\n        // Make sure the first extra dim is 'value'.\n        var extra = opt.extraPrefix || 'value';\n\n        // Set dim `name` and other `coordDim` and other props.\n        for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n            var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n            var coordDim = resultItem.coordDim;\n\n            coordDim == null && (\n                resultItem.coordDim = genName(extra, coordDimNameMap, opt.extraFromZero),\n                resultItem.coordDimIndex = 0,\n                resultItem.isExtraCoord = true\n            );\n\n            resultItem.name == null && (resultItem.name = genName(\n                resultItem.coordDim,\n                dataDimNameMap\n            ));\n\n            resultItem.type == null && guessOrdinal(data, resultDimIdx)\n                && (resultItem.type = 'ordinal');\n        }\n\n        return result;\n\n        function applyDim(resultItem, coordDim, coordDimIndex) {\n            if (OTHER_DIMS[coordDim]) {\n                resultItem.otherDims[coordDim] = coordDimIndex;\n            }\n            else {\n                resultItem.coordDim = coordDim;\n                resultItem.coordDimIndex = coordDimIndex;\n                coordDimNameMap.set(coordDim, true);\n            }\n        }\n\n        function genName(name, map, fromZero) {\n            if (fromZero || map.get(name) != null) {\n                var i = 0;\n                while (map.get(name + i) != null) {\n                    i++;\n                }\n                name += i;\n            }\n            map.set(name, true);\n            return name;\n        }\n    }\n\n    // The rule should not be complex, otherwise user might not\n    // be able to known where the data is wrong.\n    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n        for (var i = 0, len = data.length; i < len; i++) {\n            var value = retrieveValue(data[i]);\n\n            if (!zrUtil.isArray(value)) {\n                return false;\n            }\n\n            var value = value[dimIndex];\n            // Consider usage convenience, '1', '2' will be treated as \"number\".\n            // `isFinit('')` get `true`.\n            if (value != null && isFinite(value) && value !== '') {\n                return false;\n            }\n            else if (isString(value) && value !== '-') {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    function retrieveValue(o) {\n        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\n    }\n\n    module.exports = completeDimensions;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/helper/completeDimensions.js\n// module id = 631\n// module chunks = 0 1 2","/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n\n    var clazzUtil = require('../util/clazz');\n\n    /**\n     * @param {Object} [setting]\n     */\n    function Scale(setting) {\n        this._setting = setting || {};\n\n        /**\n         * Extent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._extent = [Infinity, -Infinity];\n\n        /**\n         * Step is calculated in adjustExtent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._interval = 0;\n\n        this.init && this.init.apply(this, arguments);\n    }\n\n    var scaleProto = Scale.prototype;\n\n    /**\n     * Parse input val to valid inner number.\n     * @param {*} val\n     * @return {number}\n     */\n    scaleProto.parse = function (val) {\n        // Notice: This would be a trap here, If the implementation\n        // of this method depends on extent, and this method is used\n        // before extent set (like in dataZoom), it would be wrong.\n        // Nevertheless, parse does not depend on extent generally.\n        return val;\n    };\n\n    scaleProto.getSetting = function (name) {\n        return this._setting[name];\n    };\n\n    scaleProto.contain = function (val) {\n        var extent = this._extent;\n        return val >= extent[0] && val <= extent[1];\n    };\n\n    /**\n     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.normalize = function (val) {\n        var extent = this._extent;\n        if (extent[1] === extent[0]) {\n            return 0.5;\n        }\n        return (val - extent[0]) / (extent[1] - extent[0]);\n    };\n\n    /**\n     * Scale normalized value\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.scale = function (val) {\n        var extent = this._extent;\n        return val * (extent[1] - extent[0]) + extent[0];\n    };\n\n    /**\n     * Set extent from data\n     * @param {Array.<number>} other\n     */\n    scaleProto.unionExtent = function (other) {\n        var extent = this._extent;\n        other[0] < extent[0] && (extent[0] = other[0]);\n        other[1] > extent[1] && (extent[1] = other[1]);\n        // not setExtent because in log axis it may transformed to power\n        // this.setExtent(extent[0], extent[1]);\n    };\n\n    /**\n     * Set extent from data\n     * @param {module:echarts/data/List} data\n     * @param {string} dim\n     */\n    scaleProto.unionExtentFromData = function (data, dim) {\n        this.unionExtent(data.getDataExtent(dim, true));\n    };\n\n    /**\n     * Get extent\n     * @return {Array.<number>}\n     */\n    scaleProto.getExtent = function () {\n        return this._extent.slice();\n    };\n\n    /**\n     * Set extent\n     * @param {number} start\n     * @param {number} end\n     */\n    scaleProto.setExtent = function (start, end) {\n        var thisExtent = this._extent;\n        if (!isNaN(start)) {\n            thisExtent[0] = start;\n        }\n        if (!isNaN(end)) {\n            thisExtent[1] = end;\n        }\n    };\n\n    /**\n     * @return {Array.<string>}\n     */\n    scaleProto.getTicksLabels = function () {\n        var labels = [];\n        var ticks = this.getTicks();\n        for (var i = 0; i < ticks.length; i++) {\n            labels.push(this.getLabel(ticks[i]));\n        }\n        return labels;\n    };\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.isBlank = function () {\n        return this._isBlank;\n    },\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.setBlank = function (isBlank) {\n        this._isBlank = isBlank;\n    };\n\n\n    clazzUtil.enableClassExtend(Scale);\n    clazzUtil.enableClassManagement(Scale, {\n        registerWhenExtend: true\n    });\n\n    module.exports = Scale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Scale.js\n// module id = 632\n// module chunks = 0 1 2","\n    var dpr = 1;\n    // If in browser environment\n    if (typeof window !== 'undefined') {\n        dpr = Math.max(window.devicePixelRatio || 1, 1);\n    }\n    /**\n     * config默认配置项\n     * @exports zrender/config\n     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n     */\n    var config = {\n        /**\n         * debug日志选项：catchBrushException为true下有效\n         * 0 : 不生成debug数据，发布用\n         * 1 : 异常抛出，调试用\n         * 2 : 控制台输出，调试用\n         */\n        debugMode: 0,\n\n        // retina 屏幕优化\n        devicePixelRatio: dpr\n    };\n    module.exports = config;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/config.js\n// module id = 633\n// module chunks = 0 1 2","/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/lib/container/Group');\n *     var Circle = require('zrender/lib/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n\n    var zrUtil = require('../core/util');\n    var Element = require('../Element');\n    var BoundingRect = require('../core/BoundingRect');\n\n    /**\n     * @alias module:zrender/graphic/Group\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @extends module:zrender/mixin/Eventful\n     */\n    var Group = function (opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        for (var key in opts) {\n            if (opts.hasOwnProperty(key)) {\n                this[key] = opts[key];\n            }\n        }\n\n        this._children = [];\n\n        this.__storage = null;\n\n        this.__dirty = true;\n    };\n\n    Group.prototype = {\n\n        constructor: Group,\n\n        isGroup: true,\n\n        /**\n         * @type {string}\n         */\n        type: 'group',\n\n        /**\n         * 所有子孙元素是否响应鼠标事件\n         * @name module:/zrender/container/Group#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * @return {Array.<module:zrender/Element>}\n         */\n        children: function () {\n            return this._children.slice();\n        },\n\n        /**\n         * 获取指定 index 的儿子节点\n         * @param  {number} idx\n         * @return {module:zrender/Element}\n         */\n        childAt: function (idx) {\n            return this._children[idx];\n        },\n\n        /**\n         * 获取指定名字的儿子节点\n         * @param  {string} name\n         * @return {module:zrender/Element}\n         */\n        childOfName: function (name) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i].name === name) {\n                    return children[i];\n                }\n             }\n        },\n\n        /**\n         * @return {number}\n         */\n        childCount: function () {\n            return this._children.length;\n        },\n\n        /**\n         * 添加子节点到最后\n         * @param {module:zrender/Element} child\n         */\n        add: function (child) {\n            if (child && child !== this && child.parent !== this) {\n\n                this._children.push(child);\n\n                this._doAdd(child);\n            }\n\n            return this;\n        },\n\n        /**\n         * 添加子节点在 nextSibling 之前\n         * @param {module:zrender/Element} child\n         * @param {module:zrender/Element} nextSibling\n         */\n        addBefore: function (child, nextSibling) {\n            if (child && child !== this && child.parent !== this\n                && nextSibling && nextSibling.parent === this) {\n\n                var children = this._children;\n                var idx = children.indexOf(nextSibling);\n\n                if (idx >= 0) {\n                    children.splice(idx, 0, child);\n                    this._doAdd(child);\n                }\n            }\n\n            return this;\n        },\n\n        _doAdd: function (child) {\n            if (child.parent) {\n                child.parent.remove(child);\n            }\n\n            child.parent = this;\n\n            var storage = this.__storage;\n            var zr = this.__zr;\n            if (storage && storage !== child.__storage) {\n\n                storage.addToStorage(child);\n\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n        },\n\n        /**\n         * 移除子节点\n         * @param {module:zrender/Element} child\n         */\n        remove: function (child) {\n            var zr = this.__zr;\n            var storage = this.__storage;\n            var children = this._children;\n\n            var idx = zrUtil.indexOf(children, child);\n            if (idx < 0) {\n                return this;\n            }\n            children.splice(idx, 1);\n\n            child.parent = null;\n\n            if (storage) {\n\n                storage.delFromStorage(child);\n\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n\n            return this;\n        },\n\n        /**\n         * 移除所有子节点\n         */\n        removeAll: function () {\n            var children = this._children;\n            var storage = this.__storage;\n            var child;\n            var i;\n            for (i = 0; i < children.length; i++) {\n                child = children[i];\n                if (storage) {\n                    storage.delFromStorage(child);\n                    if (child instanceof Group) {\n                        child.delChildrenFromStorage(storage);\n                    }\n                }\n                child.parent = null;\n            }\n            children.length = 0;\n\n            return this;\n        },\n\n        /**\n         * 遍历所有子节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        eachChild: function (cb, context) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                cb.call(context, child, i);\n            }\n            return this;\n        },\n\n        /**\n         * 深度优先遍历所有子孙节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                cb.call(context, child);\n\n                if (child.type === 'group') {\n                    child.traverse(cb, context);\n                }\n            }\n            return this;\n        },\n\n        addChildrenToStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.addToStorage(child);\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n        },\n\n        delChildrenFromStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.delFromStorage(child);\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n        },\n\n        dirty: function () {\n            this.__dirty = true;\n            this.__zr && this.__zr.refresh();\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function (includeChildren) {\n            // TODO Caching\n            var rect = null;\n            var tmpRect = new BoundingRect(0, 0, 0, 0);\n            var children = includeChildren || this._children;\n            var tmpMat = [];\n\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                if (child.ignore || child.invisible) {\n                    continue;\n                }\n\n                var childRect = child.getBoundingRect();\n                var transform = child.getLocalTransform(tmpMat);\n                // TODO\n                // The boundingRect cacluated by transforming original\n                // rect may be bigger than the actual bundingRect when rotation\n                // is used. (Consider a circle rotated aginst its center, where\n                // the actual boundingRect should be the same as that not be\n                // rotated.) But we can not find better approach to calculate\n                // actual boundingRect yet, considering performance.\n                if (transform) {\n                    tmpRect.copy(childRect);\n                    tmpRect.applyTransform(transform);\n                    rect = rect || tmpRect.clone();\n                    rect.union(tmpRect);\n                }\n                else {\n                    rect = rect || childRect.clone();\n                    rect.union(childRect);\n                }\n            }\n            return rect || tmpRect;\n        }\n    };\n\n    zrUtil.inherits(Group, Element);\n\n    module.exports = Group;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/container/Group.js\n// module id = 634\n// module chunks = 0 1 2","'use strict';\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n\n // TODO getTotalLength, getPointAtLength\n\n\n    var curve = require('./curve');\n    var vec2 = require('./vector');\n    var bbox = require('./bbox');\n    var BoundingRect = require('./BoundingRect');\n    var dpr = require('../config').devicePixelRatio;\n\n    var CMD = {\n        M: 1,\n        L: 2,\n        C: 3,\n        Q: 4,\n        A: 5,\n        Z: 6,\n        // Rect\n        R: 7\n    };\n\n    // var CMD_MEM_SIZE = {\n    //     M: 3,\n    //     L: 3,\n    //     C: 7,\n    //     Q: 5,\n    //     A: 9,\n    //     R: 5,\n    //     Z: 1\n    // };\n\n    var min = [];\n    var max = [];\n    var min2 = [];\n    var max2 = [];\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var mathSqrt = Math.sqrt;\n    var mathAbs = Math.abs;\n\n    var hasTypedArray = typeof Float32Array != 'undefined';\n\n    /**\n     * @alias module:zrender/core/PathProxy\n     * @constructor\n     */\n    var PathProxy = function (notSaveData) {\n\n        this._saveData = !(notSaveData || false);\n\n        if (this._saveData) {\n            /**\n             * Path data. Stored as flat array\n             * @type {Array.<Object>}\n             */\n            this.data = [];\n        }\n\n        this._ctx = null;\n    };\n\n    /**\n     * 快速计算Path包围盒（并不是最小包围盒）\n     * @return {Object}\n     */\n    PathProxy.prototype = {\n\n        constructor: PathProxy,\n\n        _xi: 0,\n        _yi: 0,\n\n        _x0: 0,\n        _y0: 0,\n        // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n        _ux: 0,\n        _uy: 0,\n\n        _len: 0,\n\n        _lineDash: null,\n\n        _dashOffset: 0,\n\n        _dashIdx: 0,\n\n        _dashSum: 0,\n\n        /**\n         * @readOnly\n         */\n        setScale: function (sx, sy) {\n            this._ux = mathAbs(1 / dpr / sx) || 0;\n            this._uy = mathAbs(1 / dpr / sy) || 0;\n        },\n\n        getContext: function () {\n            return this._ctx;\n        },\n\n        /**\n         * @param  {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        beginPath: function (ctx) {\n\n            this._ctx = ctx;\n\n            ctx && ctx.beginPath();\n\n            ctx && (this.dpr = ctx.dpr);\n\n            // Reset\n            if (this._saveData) {\n                this._len = 0;\n            }\n\n            if (this._lineDash) {\n                this._lineDash = null;\n\n                this._dashOffset = 0;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        moveTo: function (x, y) {\n            this.addData(CMD.M, x, y);\n            this._ctx && this._ctx.moveTo(x, y);\n\n            // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n            // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n            // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n            // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n            this._x0 = x;\n            this._y0 = y;\n\n            this._xi = x;\n            this._yi = y;\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        lineTo: function (x, y) {\n            var exceedUnit = mathAbs(x - this._xi) > this._ux\n                || mathAbs(y - this._yi) > this._uy\n                // Force draw the first segment\n                || this._len < 5;\n\n            this.addData(CMD.L, x, y);\n\n            if (this._ctx && exceedUnit) {\n                this._needsDash() ? this._dashedLineTo(x, y)\n                    : this._ctx.lineTo(x, y);\n            }\n            if (exceedUnit) {\n                this._xi = x;\n                this._yi = y;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @param  {number} x3\n         * @param  {number} y3\n         * @return {module:zrender/core/PathProxy}\n         */\n        bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n            this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)\n                    : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n            }\n            this._xi = x3;\n            this._yi = y3;\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @return {module:zrender/core/PathProxy}\n         */\n        quadraticCurveTo: function (x1, y1, x2, y2) {\n            this.addData(CMD.Q, x1, y1, x2, y2);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2)\n                    : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n            }\n            this._xi = x2;\n            this._yi = y2;\n            return this;\n        },\n\n        /**\n         * @param  {number} cx\n         * @param  {number} cy\n         * @param  {number} r\n         * @param  {number} startAngle\n         * @param  {number} endAngle\n         * @param  {boolean} anticlockwise\n         * @return {module:zrender/core/PathProxy}\n         */\n        arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n            this.addData(\n                CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1\n            );\n            this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n\n            this._xi = mathCos(endAngle) * r + cx;\n            this._yi = mathSin(endAngle) * r + cx;\n            return this;\n        },\n\n        // TODO\n        arcTo: function (x1, y1, x2, y2, radius) {\n            if (this._ctx) {\n                this._ctx.arcTo(x1, y1, x2, y2, radius);\n            }\n            return this;\n        },\n\n        // TODO\n        rect: function (x, y, w, h) {\n            this._ctx && this._ctx.rect(x, y, w, h);\n            this.addData(CMD.R, x, y, w, h);\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/PathProxy}\n         */\n        closePath: function () {\n            this.addData(CMD.Z);\n\n            var ctx = this._ctx;\n            var x0 = this._x0;\n            var y0 = this._y0;\n            if (ctx) {\n                this._needsDash() && this._dashedLineTo(x0, y0);\n                ctx.closePath();\n            }\n\n            this._xi = x0;\n            this._yi = y0;\n            return this;\n        },\n\n        /**\n         * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n         * stroke 同样\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        fill: function (ctx) {\n            ctx && ctx.fill();\n            this.toStatic();\n        },\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        stroke: function (ctx) {\n            ctx && ctx.stroke();\n            this.toStatic();\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDash: function (lineDash) {\n            if (lineDash instanceof Array) {\n                this._lineDash = lineDash;\n\n                this._dashIdx = 0;\n\n                var lineDashSum = 0;\n                for (var i = 0; i < lineDash.length; i++) {\n                    lineDashSum += lineDash[i];\n                }\n                this._dashSum = lineDashSum;\n            }\n            return this;\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDashOffset: function (offset) {\n            this._dashOffset = offset;\n            return this;\n        },\n\n        /**\n         *\n         * @return {boolean}\n         */\n        len: function () {\n            return this._len;\n        },\n\n        /**\n         * 直接设置 Path 数据\n         */\n        setData: function (data) {\n\n            var len = data.length;\n\n            if (! (this.data && this.data.length == len) && hasTypedArray) {\n                this.data = new Float32Array(len);\n            }\n\n            for (var i = 0; i < len; i++) {\n                this.data[i] = data[i];\n            }\n\n            this._len = len;\n        },\n\n        /**\n         * 添加子路径\n         * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n         */\n        appendPath: function (path) {\n            if (!(path instanceof Array)) {\n                path = [path];\n            }\n            var len = path.length;\n            var appendSize = 0;\n            var offset = this._len;\n            for (var i = 0; i < len; i++) {\n                appendSize += path[i].len();\n            }\n            if (hasTypedArray && (this.data instanceof Float32Array)) {\n                this.data = new Float32Array(offset + appendSize);\n            }\n            for (var i = 0; i < len; i++) {\n                var appendPathData = path[i].data;\n                for (var k = 0; k < appendPathData.length; k++) {\n                    this.data[offset++] = appendPathData[k];\n                }\n            }\n            this._len = offset;\n        },\n\n        /**\n         * 填充 Path 数据。\n         * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n         */\n        addData: function (cmd) {\n            if (!this._saveData) {\n                return;\n            }\n\n            var data = this.data;\n            if (this._len + arguments.length > data.length) {\n                // 因为之前的数组已经转换成静态的 Float32Array\n                // 所以不够用时需要扩展一个新的动态数组\n                this._expandData();\n                data = this.data;\n            }\n            for (var i = 0; i < arguments.length; i++) {\n                data[this._len++] = arguments[i];\n            }\n\n            this._prevCmd = cmd;\n        },\n\n        _expandData: function () {\n            // Only if data is Float32Array\n            if (!(this.data instanceof Array)) {\n                var newData = [];\n                for (var i = 0; i < this._len; i++) {\n                    newData[i] = this.data[i];\n                }\n                this.data = newData;\n            }\n        },\n\n        /**\n         * If needs js implemented dashed line\n         * @return {boolean}\n         * @private\n         */\n        _needsDash: function () {\n            return this._lineDash;\n        },\n\n        _dashedLineTo: function (x1, y1) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var dx = x1 - x0;\n            var dy = y1 - y0;\n            var dist = mathSqrt(dx * dx + dy * dy);\n            var x = x0;\n            var y = y0;\n            var dash;\n            var nDash = lineDash.length;\n            var idx;\n            dx /= dist;\n            dy /= dist;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            x -= offset * dx;\n            y -= offset * dy;\n\n            while ((dx > 0 && x <= x1) || (dx < 0 && x >= x1)\n            || (dx == 0 && ((dy > 0 && y <= y1) || (dy < 0 && y >= y1)))) {\n                idx = this._dashIdx;\n                dash = lineDash[idx];\n                x += dx * dash;\n                y += dy * dash;\n                this._dashIdx = (idx + 1) % nDash;\n                // Skip positive offset\n                if ((dx > 0 && x < x0) || (dx < 0 && x > x0) || (dy > 0 && y < y0) || (dy < 0 && y > y0)) {\n                    continue;\n                }\n                ctx[idx % 2 ? 'moveTo' : 'lineTo'](\n                    dx >= 0 ? mathMin(x, x1) : mathMax(x, x1),\n                    dy >= 0 ? mathMin(y, y1) : mathMax(y, y1)\n                );\n            }\n            // Offset for next lineTo\n            dx = x - x1;\n            dy = y - y1;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        // Not accurate dashed line to\n        _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var t;\n            var dx;\n            var dy;\n            var cubicAt = curve.cubicAt;\n            var bezierLen = 0;\n            var idx = this._dashIdx;\n            var nDash = lineDash.length;\n\n            var x;\n            var y;\n\n            var tmpLen = 0;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            // Bezier approx length\n            for (t = 0; t < 1; t += 0.1) {\n                dx = cubicAt(x0, x1, x2, x3, t + 0.1)\n                    - cubicAt(x0, x1, x2, x3, t);\n                dy = cubicAt(y0, y1, y2, y3, t + 0.1)\n                    - cubicAt(y0, y1, y2, y3, t);\n                bezierLen += mathSqrt(dx * dx + dy * dy);\n            }\n\n            // Find idx after add offset\n            for (; idx < nDash; idx++) {\n                tmpLen += lineDash[idx];\n                if (tmpLen > offset) {\n                    break;\n                }\n            }\n            t = (tmpLen - offset) / bezierLen;\n\n            while (t <= 1) {\n\n                x = cubicAt(x0, x1, x2, x3, t);\n                y = cubicAt(y0, y1, y2, y3, t);\n\n                // Use line to approximate dashed bezier\n                // Bad result if dash is long\n                idx % 2 ? ctx.moveTo(x, y)\n                    : ctx.lineTo(x, y);\n\n                t += lineDash[idx] / bezierLen;\n\n                idx = (idx + 1) % nDash;\n            }\n\n            // Finish the last segment and calculate the new offset\n            (idx % 2 !== 0) && ctx.lineTo(x3, y3);\n            dx = x3 - x;\n            dy = y3 - y;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        _dashedQuadraticTo: function (x1, y1, x2, y2) {\n            // Convert quadratic to cubic using degree elevation\n            var x3 = x2;\n            var y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (this._xi + 2 * x1) / 3;\n            y1 = (this._yi + 2 * y1) / 3;\n\n            this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n        },\n\n        /**\n         * 转成静态的 Float32Array 减少堆内存占用\n         * Convert dynamic array to static Float32Array\n         */\n        toStatic: function () {\n            var data = this.data;\n            if (data instanceof Array) {\n                data.length = this._len;\n                if (hasTypedArray) {\n                    this.data = new Float32Array(data);\n                }\n            }\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function () {\n            min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n            max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n\n            var data = this.data;\n            var xi = 0;\n            var yi = 0;\n            var x0 = 0;\n            var y0 = 0;\n\n            for (var i = 0; i < data.length;) {\n                var cmd = data[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = data[i];\n                    yi = data[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n\n                switch (cmd) {\n                    case CMD.M:\n                        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                        // 在 closePath 的时候使用\n                        x0 = data[i++];\n                        y0 = data[i++];\n                        xi = x0;\n                        yi = y0;\n                        min2[0] = x0;\n                        min2[1] = y0;\n                        max2[0] = x0;\n                        max2[1] = y0;\n                        break;\n                    case CMD.L:\n                        bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.C:\n                        bbox.fromCubic(\n                            xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.Q:\n                        bbox.fromQuadratic(\n                            xi, yi, data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.A:\n                        // TODO Arc 判断的开销比较大\n                        var cx = data[i++];\n                        var cy = data[i++];\n                        var rx = data[i++];\n                        var ry = data[i++];\n                        var startAngle = data[i++];\n                        var endAngle = data[i++] + startAngle;\n                        // TODO Arc 旋转\n                        var psi = data[i++];\n                        var anticlockwise = 1 - data[i++];\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(startAngle) * rx + cx;\n                            y0 = mathSin(startAngle) * ry + cy;\n                        }\n\n                        bbox.fromArc(\n                            cx, cy, rx, ry, startAngle, endAngle,\n                            anticlockwise, min2, max2\n                        );\n\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = data[i++];\n                        y0 = yi = data[i++];\n                        var width = data[i++];\n                        var height = data[i++];\n                        // Use fromLine\n                        bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n                        break;\n                    case CMD.Z:\n                        xi = x0;\n                        yi = y0;\n                        break;\n                }\n\n                // Union\n                vec2.min(min, min, min2);\n                vec2.max(max, max, max2);\n            }\n\n            // No data\n            if (i === 0) {\n                min[0] = min[1] = max[0] = max[1] = 0;\n            }\n\n            return new BoundingRect(\n                min[0], min[1], max[0] - min[0], max[1] - min[1]\n            );\n        },\n\n        /**\n         * Rebuild path from current data\n         * Rebuild path will not consider javascript implemented line dash.\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        rebuildPath: function (ctx) {\n            var d = this.data;\n            var x0, y0;\n            var xi, yi;\n            var x, y;\n            var ux = this._ux;\n            var uy = this._uy;\n            var len = this._len;\n            for (var i = 0; i < len;) {\n                var cmd = d[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = d[i];\n                    yi = d[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n                switch (cmd) {\n                    case CMD.M:\n                        x0 = xi = d[i++];\n                        y0 = yi = d[i++];\n                        ctx.moveTo(xi, yi);\n                        break;\n                    case CMD.L:\n                        x = d[i++];\n                        y = d[i++];\n                        // Not draw too small seg between\n                        if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n                            ctx.lineTo(x, y);\n                            xi = x;\n                            yi = y;\n                        }\n                        break;\n                    case CMD.C:\n                        ctx.bezierCurveTo(\n                            d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]\n                        );\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.Q:\n                        ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.A:\n                        var cx = d[i++];\n                        var cy = d[i++];\n                        var rx = d[i++];\n                        var ry = d[i++];\n                        var theta = d[i++];\n                        var dTheta = d[i++];\n                        var psi = d[i++];\n                        var fs = d[i++];\n                        var r = (rx > ry) ? rx : ry;\n                        var scaleX = (rx > ry) ? 1 : rx / ry;\n                        var scaleY = (rx > ry) ? ry / rx : 1;\n                        var isEllipse = Math.abs(rx - ry) > 1e-3;\n                        var endAngle = theta + dTheta;\n                        if (isEllipse) {\n                            ctx.translate(cx, cy);\n                            ctx.rotate(psi);\n                            ctx.scale(scaleX, scaleY);\n                            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n                            ctx.scale(1 / scaleX, 1 / scaleY);\n                            ctx.rotate(-psi);\n                            ctx.translate(-cx, -cy);\n                        }\n                        else {\n                            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n                        }\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(theta) * rx + cx;\n                            y0 = mathSin(theta) * ry + cy;\n                        }\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = d[i];\n                        y0 = yi = d[i + 1];\n                        ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n                        break;\n                    case CMD.Z:\n                        ctx.closePath();\n                        xi = x0;\n                        yi = y0;\n                }\n            }\n        }\n    };\n\n    PathProxy.CMD = CMD;\n\n    module.exports = PathProxy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/PathProxy.js\n// module id = 635\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var coordinateSystemCreators = {};\n\n    function CoordinateSystemManager() {\n\n        this._coordinateSystems = [];\n    }\n\n    CoordinateSystemManager.prototype = {\n\n        constructor: CoordinateSystemManager,\n\n        create: function (ecModel, api) {\n            var coordinateSystems = [];\n            zrUtil.each(coordinateSystemCreators, function (creater, type) {\n                var list = creater.create(ecModel, api);\n                coordinateSystems = coordinateSystems.concat(list || []);\n            });\n\n            this._coordinateSystems = coordinateSystems;\n        },\n\n        update: function (ecModel, api) {\n            zrUtil.each(this._coordinateSystems, function (coordSys) {\n                // FIXME MUST have\n                coordSys.update && coordSys.update(ecModel, api);\n            });\n        },\n\n        getCoordinateSystems: function () {\n            return this._coordinateSystems.slice();\n        }\n    };\n\n    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n        coordinateSystemCreators[type] = coordinateSystemCreator;\n    };\n\n    CoordinateSystemManager.get = function (type) {\n        return coordinateSystemCreators[type];\n    };\n\n    module.exports = CoordinateSystemManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/CoordinateSystem.js\n// module id = 636\n// module chunks = 0 1 2","// TODO Parse shadow style\n// TODO Only shallow path support\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    module.exports = function (properties) {\n        // Normalize\n        for (var i = 0; i < properties.length; i++) {\n            if (!properties[i][1]) {\n               properties[i][1] = properties[i][0];\n            }\n        }\n        return function (excludes, includes) {\n            var style = {};\n            for (var i = 0; i < properties.length; i++) {\n                var propName = properties[i][1];\n                if ((excludes && zrUtil.indexOf(excludes, propName) >= 0)\n                    || (includes && zrUtil.indexOf(includes, propName) < 0)\n                ) {\n                    continue;\n                }\n                var val = this.getShallow(propName);\n                if (val != null) {\n                    style[properties[i][0]] = val;\n                }\n            }\n            return style;\n        };\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/makeStyleMapper.js\n// module id = 637\n// module chunks = 0 1 2","/**\n * Interval scale\n * @module echarts/scale/Interval\n */\n\n\n\n    var numberUtil = require('../util/number');\n    var formatUtil = require('../util/format');\n    var Scale = require('./Scale');\n    var helper = require('./helper');\n\n    var roundNumber = numberUtil.round;\n\n    /**\n     * @alias module:echarts/coord/scale/Interval\n     * @constructor\n     */\n    var IntervalScale = Scale.extend({\n\n        type: 'interval',\n\n        _interval: 0,\n\n        _intervalPrecision: 2,\n\n        setExtent: function (start, end) {\n            var thisExtent = this._extent;\n            //start,end may be a Number like '25',so...\n            if (!isNaN(start)) {\n                thisExtent[0] = parseFloat(start);\n            }\n            if (!isNaN(end)) {\n                thisExtent[1] = parseFloat(end);\n            }\n        },\n\n        unionExtent: function (other) {\n            var extent = this._extent;\n            other[0] < extent[0] && (extent[0] = other[0]);\n            other[1] > extent[1] && (extent[1] = other[1]);\n\n            // unionExtent may called by it's sub classes\n            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n        },\n        /**\n         * Get interval\n         */\n        getInterval: function () {\n            return this._interval;\n        },\n\n        /**\n         * Set interval\n         */\n        setInterval: function (interval) {\n            this._interval = interval;\n            // Dropped auto calculated niceExtent and use user setted extent\n            // We assume user wan't to set both interval, min, max to get a better result\n            this._niceExtent = this._extent.slice();\n\n            this._intervalPrecision = helper.getIntervalPrecision(interval);\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            return helper.intervalScaleGetTicks(\n                this._interval, this._extent, this._niceExtent, this._intervalPrecision\n            );\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getTicksLabels: function () {\n            var labels = [];\n            var ticks = this.getTicks();\n            for (var i = 0; i < ticks.length; i++) {\n                labels.push(this.getLabel(ticks[i]));\n            }\n            return labels;\n        },\n\n        /**\n         * @param {number} data\n         * @param {Object} [opt]\n         * @param {number|string} [opt.precision] If 'auto', use nice presision.\n         * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n         * @return {string}\n         */\n        getLabel: function (data, opt) {\n            if (data == null) {\n                return '';\n            }\n\n            var precision = opt && opt.precision;\n\n            if (precision == null) {\n                precision = numberUtil.getPrecisionSafe(data) || 0;\n            }\n            else if (precision === 'auto') {\n                // Should be more precise then tick.\n                precision = this._intervalPrecision;\n            }\n\n            // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n            // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n            data = roundNumber(data, precision, true);\n\n            return formatUtil.addCommas(data);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         *\n         * @param {number} [splitNumber = 5] Desired number of ticks\n         * @param {number} [minInterval]\n         * @param {number} [maxInterval]\n         */\n        niceTicks: function (splitNumber, minInterval, maxInterval) {\n            splitNumber = splitNumber || 5;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (!isFinite(span)) {\n                return;\n            }\n            // User may set axis min 0 and data are all negative\n            // FIXME If it needs to reverse ?\n            if (span < 0) {\n                span = -span;\n                extent.reverse();\n            }\n\n            var result = helper.intervalScaleNiceTicks(\n                extent, splitNumber, minInterval, maxInterval\n            );\n\n            this._intervalPrecision = result.intervalPrecision;\n            this._interval = result.interval;\n            this._niceExtent = result.niceTickExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {Object} opt\n         * @param {number} [opt.splitNumber = 5] Given approx tick number\n         * @param {boolean} [opt.fixMin=false]\n         * @param {boolean} [opt.fixMax=false]\n         * @param {boolean} [opt.minInterval]\n         * @param {boolean} [opt.maxInterval]\n         */\n        niceExtent: function (opt) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                if (extent[0] !== 0) {\n                    // Expand extent\n                    var expandSize = extent[0];\n                    // In the fowllowing case\n                    //      Axis has been fixed max 100\n                    //      Plus data are all 100 and axis extent are [100, 100].\n                    // Extend to the both side will cause expanded max is larger than fixed max.\n                    // So only expand to the smaller side.\n                    if (!opt.fixMax) {\n                        extent[1] += expandSize / 2;\n                        extent[0] -= expandSize / 2;\n                    }\n                    else {\n                        extent[0] -= expandSize / 2;\n                    }\n                }\n                else {\n                    extent[1] = 1;\n                }\n            }\n            var span = extent[1] - extent[0];\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (!isFinite(span)) {\n                extent[0] = 0;\n                extent[1] = 1;\n            }\n\n            this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!opt.fixMin) {\n                extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n            }\n            if (!opt.fixMax) {\n                extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n            }\n        }\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    IntervalScale.create = function () {\n        return new IntervalScale();\n    };\n\n    module.exports = IntervalScale;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Interval.js\n// module id = 638\n// module chunks = 0 1 2","'use strict';\n// Symbol factory\n\n\n    var graphic = require('./graphic');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n\n    /**\n     * Triangle shape\n     * @inner\n     */\n    var Triangle = graphic.extendShape({\n        type: 'triangle',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy + height);\n            path.lineTo(cx - width, cy + height);\n            path.closePath();\n        }\n    });\n    /**\n     * Diamond shape\n     * @inner\n     */\n    var Diamond = graphic.extendShape({\n        type: 'diamond',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy);\n            path.lineTo(cx, cy + height);\n            path.lineTo(cx - width, cy);\n            path.closePath();\n        }\n    });\n\n    /**\n     * Pin shape\n     * @inner\n     */\n    var Pin = graphic.extendShape({\n        type: 'pin',\n        shape: {\n            // x, y on the cusp\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (path, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var w = shape.width / 5 * 3;\n            // Height must be larger than width\n            var h = Math.max(w, shape.height);\n            var r = w / 2;\n\n            // Dist on y with tangent point and circle center\n            var dy = r * r / (h - r);\n            var cy = y - h + r + dy;\n            var angle = Math.asin(dy / r);\n            // Dist on x with tangent point and circle center\n            var dx = Math.cos(angle) * r;\n\n            var tanX = Math.sin(angle);\n            var tanY = Math.cos(angle);\n\n            path.arc(\n                x, cy, r,\n                Math.PI - angle,\n                Math.PI * 2 + angle\n            );\n\n            var cpLen = r * 0.6;\n            var cpLen2 = r * 0.7;\n            path.bezierCurveTo(\n                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\n                x, y - cpLen2,\n                x, y\n            );\n            path.bezierCurveTo(\n                x, y - cpLen2,\n                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\n                x - dx, cy + dy\n            );\n            path.closePath();\n        }\n    });\n\n    /**\n     * Arrow shape\n     * @inner\n     */\n    var Arrow = graphic.extendShape({\n\n        type: 'arrow',\n\n        shape: {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var height = shape.height;\n            var width = shape.width;\n            var x = shape.x;\n            var y = shape.y;\n            var dx = width / 3 * 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + dx, y + height);\n            ctx.lineTo(x, y + height / 4 * 3);\n            ctx.lineTo(x - dx, y + height);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n        }\n    });\n\n    /**\n     * Map of path contructors\n     * @type {Object.<string, module:zrender/graphic/Path>}\n     */\n    var symbolCtors = {\n        line: graphic.Line,\n\n        rect: graphic.Rect,\n\n        roundRect: graphic.Rect,\n\n        square: graphic.Rect,\n\n        circle: graphic.Circle,\n\n        diamond: Diamond,\n\n        pin: Pin,\n\n        arrow: Arrow,\n\n        triangle: Triangle\n    };\n\n    var symbolShapeMakers = {\n\n        line: function (x, y, w, h, shape) {\n            // FIXME\n            shape.x1 = x;\n            shape.y1 = y + h / 2;\n            shape.x2 = x + w;\n            shape.y2 = y + h / 2;\n        },\n\n        rect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        roundRect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n            shape.r = Math.min(w, h) / 4;\n        },\n\n        square: function (x, y, w, h, shape) {\n            var size = Math.min(w, h);\n            shape.x = x;\n            shape.y = y;\n            shape.width = size;\n            shape.height = size;\n        },\n\n        circle: function (x, y, w, h, shape) {\n            // Put circle in the center of square\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.r = Math.min(w, h) / 2;\n        },\n\n        diamond: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        pin: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        arrow: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        triangle: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        }\n    };\n\n    var symbolBuildProxies = {};\n    for (var name in symbolCtors) {\n        if (symbolCtors.hasOwnProperty(name)) {\n            symbolBuildProxies[name] = new symbolCtors[name]();\n        }\n    }\n\n    var Symbol = graphic.extendShape({\n\n        type: 'symbol',\n\n        shape: {\n            symbolType: '',\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        beforeBrush: function () {\n            var style = this.style;\n            var shape = this.shape;\n            // FIXME\n            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n                style.textPosition = ['50%', '40%'];\n                style.textAlign = 'center';\n                style.textVerticalAlign = 'middle';\n            }\n        },\n\n        buildPath: function (ctx, shape, inBundle) {\n            var symbolType = shape.symbolType;\n            var proxySymbol = symbolBuildProxies[symbolType];\n            if (shape.symbolType !== 'none') {\n                if (!proxySymbol) {\n                    // Default rect\n                    symbolType = 'rect';\n                    proxySymbol = symbolBuildProxies[symbolType];\n                }\n                symbolShapeMakers[symbolType](\n                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\n                );\n                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n            }\n        }\n    });\n\n    // Provide setColor helper method to avoid determine if set the fill or stroke outside\n    var symbolPathSetColor = function (color) {\n        if (this.type !== 'image') {\n            var symbolStyle = this.style;\n            var symbolShape = this.shape;\n            if (symbolShape && symbolShape.symbolType === 'line') {\n                symbolStyle.stroke = color;\n            }\n            else if (this.__isEmptyBrush) {\n                symbolStyle.stroke = color;\n                symbolStyle.fill = '#fff';\n            }\n            else {\n                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n                symbolStyle.fill && (symbolStyle.fill = color);\n                symbolStyle.stroke && (symbolStyle.stroke = color);\n            }\n            this.dirty(false);\n        }\n    };\n\n    var symbolUtil = {\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @param {string} symbolType\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: function (symbolType, x, y, w, h, color) {\n            // TODO Support image object, DynamicImage.\n\n            var isEmpty = symbolType.indexOf('empty') === 0;\n            if (isEmpty) {\n                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n            }\n            var symbolPath;\n\n            if (symbolType.indexOf('image://') === 0) {\n                symbolPath = new graphic.Image({\n                    style: {\n                        image: symbolType.slice(8),\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n            else if (symbolType.indexOf('path://') === 0) {\n                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\n            }\n            else {\n                symbolPath = new Symbol({\n                    shape: {\n                        symbolType: symbolType,\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n\n            symbolPath.__isEmptyBrush = isEmpty;\n\n            symbolPath.setColor = symbolPathSetColor;\n\n            symbolPath.setColor(color);\n\n            return symbolPath;\n        }\n    };\n\n    module.exports = symbolUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/symbol.js\n// module id = 639\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../util/format');\n    var classUtil = require('../util/clazz');\n    var modelUtil = require('../util/model');\n    var ComponentModel = require('./Component');\n    var colorPaletteMixin = require('./mixin/colorPalette');\n    var env = require('zrender/lib/core/env');\n    var layout = require('../util/layout');\n\n    var set = classUtil.set;\n    var get = classUtil.get;\n    var encodeHTML = formatUtil.encodeHTML;\n    var addCommas = formatUtil.addCommas;\n\n    var SeriesModel = ComponentModel.extend({\n\n        type: 'series.__base__',\n\n        /**\n         * @readOnly\n         */\n        seriesIndex: 0,\n\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\n        coordinateSystem: null,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * Data provided for legend\n         * @type {Function}\n         */\n        // PENDING\n        legendDataProvider: null,\n\n        /**\n         * Access path of color for visual\n         */\n        visualColorAccessPath: 'itemStyle.normal.color',\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            /**\n             * @type {number}\n             * @readOnly\n             */\n            this.seriesIndex = this.componentIndex;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            var data = this.getInitialData(option, ecModel);\n            if (__DEV__) {\n                zrUtil.assert(data, 'getInitialData returned invalid data.');\n            }\n            /**\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n             * @private\n             */\n            set(this, 'dataBeforeProcessed', data);\n\n            // If we reverse the order (make data firstly, and then make\n            // dataBeforeProcessed by cloneShallow), cloneShallow will\n            // cause data.graph.data !== data when using\n            // module:echarts/data/Graph or module:echarts/data/Tree.\n            // See module:echarts/data/helper/linkList\n            this.restoreData();\n        },\n\n        /**\n         * Util for merge default and theme to option\n         * @param  {Object} option\n         * @param  {module:echarts/model/Global} ecModel\n         */\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            zrUtil.merge(\n                option,\n                ecModel.getTheme().get(this.subType)\n            );\n            zrUtil.merge(option, this.getDefaultOption());\n\n            // Default label emphasis `show`\n            modelUtil.defaultEmphasis(option.label, ['show']);\n\n            this.fillDataTextStyle(option.data);\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (newSeriesOption, ecModel) {\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n            this.fillDataTextStyle(newSeriesOption.data);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n            }\n\n            var data = this.getInitialData(newSeriesOption, ecModel);\n            // TODO Merge data?\n            if (data) {\n                set(this, 'data', data);\n                set(this, 'dataBeforeProcessed', data.cloneShallow());\n            }\n        },\n\n        fillDataTextStyle: function (data) {\n            // Default data label emphasis `show`\n            // FIXME Tree structure data ?\n            // FIXME Performance ?\n            if (data) {\n                var props = ['show'];\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] && data[i].label) {\n                        modelUtil.defaultEmphasis(data[i].label, props);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Init a data structure from data related option in series\n         * Must be overwritten\n         */\n        getInitialData: function () {},\n\n        /**\n         * @param {string} [dataType]\n         * @return {module:echarts/data/List}\n         */\n        getData: function (dataType) {\n            var data = get(this, 'data');\n            return dataType == null ? data : data.getLinkedData(dataType);\n        },\n\n        /**\n         * @param {module:echarts/data/List} data\n         */\n        setData: function (data) {\n            set(this, 'data', data);\n        },\n\n        /**\n         * Get data before processed\n         * @return {module:echarts/data/List}\n         */\n        getRawData: function () {\n            return get(this, 'dataBeforeProcessed');\n        },\n\n        /**\n         * Coord dimension to data dimension.\n         *\n         * By default the result is the same as dimensions of series data.\n         * But in some series data dimensions are different from coord dimensions (i.e.\n         * candlestick and boxplot). Override this method to handle those cases.\n         *\n         * Coord dimension to data dimension can be one-to-many\n         *\n         * @param {string} coordDim\n         * @return {Array.<string>} dimensions on the axis.\n         */\n        coordDimToDataDim: function (coordDim) {\n            return modelUtil.coordDimToDataDim(this.getData(), coordDim);\n        },\n\n        /**\n         * Convert data dimension to coord dimension.\n         *\n         * @param {string|number} dataDim\n         * @return {string}\n         */\n        dataDimToCoordDim: function (dataDim) {\n            return modelUtil.dataDimToCoordDim(this.getData(), dataDim);\n        },\n\n        /**\n         * Get base axis if has coordinate system and has axis.\n         * By default use coordSys.getBaseAxis();\n         * Can be overrided for some chart.\n         * @return {type} description\n         */\n        getBaseAxis: function () {\n            var coordSys = this.coordinateSystem;\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n        },\n\n        // FIXME\n        /**\n         * Default tooltip formatter\n         *\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         */\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n            function formatArrayValue(value) {\n                var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n                    var dimItem = data.getDimensionInfo(idx);\n                    return vertially |= dimItem && dimItem.tooltip !== false && dimItem.tooltipName != null;\n                }, 0);\n\n                var result = [];\n                var tooltipDims = modelUtil.otherDimToDataDim(data, 'tooltip');\n\n                tooltipDims.length\n                    ? zrUtil.each(tooltipDims, function (dimIdx) {\n                        setEachItem(data.get(dimIdx, dataIndex), dimIdx);\n                    })\n                    // By default, all dims is used on tooltip.\n                    : zrUtil.each(value, setEachItem);\n\n                function setEachItem(val, dimIdx) {\n                    var dimInfo = data.getDimensionInfo(dimIdx);\n                    // If `dimInfo.tooltip` is not set, show tooltip.\n                    if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n                        return;\n                    }\n                    var dimType = dimInfo.type;\n                    var valStr = (vertially ? '- ' + (dimInfo.tooltipName || dimInfo.name) + ': ' : '')\n                        + (dimType === 'ordinal'\n                            ? val + ''\n                            : dimType === 'time'\n                            ? (multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val))\n                            : addCommas(val)\n                        );\n                    valStr && result.push(encodeHTML(valStr));\n                }\n\n                return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n            }\n\n            var data = get(this, 'data');\n\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = zrUtil.isArray(value)\n                ? formatArrayValue(value) : encodeHTML(addCommas(value));\n            var name = data.getName(dataIndex);\n\n            var color = data.getItemVisual(dataIndex, 'color');\n            if (zrUtil.isObject(color) && color.colorStops) {\n                color = (color.colorStops[0] || {}).color;\n            }\n            color = color || 'transparent';\n\n            var colorEl = formatUtil.getTooltipMarker(color);\n\n            var seriesName = this.name;\n            // FIXME\n            if (seriesName === '\\0-') {\n                // Not show '-'\n                seriesName = '';\n            }\n            seriesName = seriesName\n                ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ')\n                : '';\n            return !multipleSeries\n                ? seriesName + colorEl\n                    + (name\n                        ? encodeHTML(name) + ': ' + formattedValue\n                        : formattedValue\n                    )\n                : colorEl + seriesName + formattedValue;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var animationEnabled = this.getShallow('animation');\n            if (animationEnabled) {\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\n                    animationEnabled = false;\n                }\n            }\n            return animationEnabled;\n        },\n\n        restoreData: function () {\n            set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n        },\n\n        getColorFromPalette: function (name, scope) {\n            var ecModel = this.ecModel;\n            // PENDING\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n            if (!color) {\n                color = ecModel.getColorFromPalette(name, scope);\n            }\n            return color;\n        },\n\n        /**\n         * Get data indices for show tooltip content. See tooltip.\n         * @abstract\n         * @param {Array.<string>|string} dim\n         * @param {Array.<number>} value\n         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n         * @return {Object} {dataIndices, nestestValue}.\n         */\n        getAxisTooltipData: null,\n\n        /**\n         * See tooltip.\n         * @abstract\n         * @param {number} dataIndex\n         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n         */\n        getTooltipPosition: null\n    });\n\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\n    module.exports = SeriesModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Series.js\n// module id = 640\n// module chunks = 0 1 2","\n\n    var Group = require('zrender/lib/container/Group');\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n    var modelUtil = require('../util/model');\n    var zrUtil = require('zrender/lib/core/util');\n\n    function Chart() {\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewChart');\n    }\n\n    Chart.prototype = {\n\n        type: 'chart',\n\n        /**\n         * Init the chart\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        init: function (ecModel, api) {},\n\n        /**\n         * Render the chart\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        render: function (seriesModel, ecModel, api, payload) {},\n\n        /**\n         * Highlight series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        highlight: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n        },\n\n        /**\n         * Downplay series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        downplay: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'normal');\n        },\n\n        /**\n         * Remove self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        remove: function (ecModel, api) {\n            this.group.removeAll();\n        },\n\n        /**\n         * Dispose self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        dispose: function () {}\n\n        /**\n         * The view contains the given point.\n         * @interface\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        // containPoint: function () {}\n\n    };\n\n    var chartProto = Chart.prototype;\n    chartProto.updateView\n        = chartProto.updateLayout\n        = chartProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            this.render(seriesModel, ecModel, api, payload);\n        };\n\n    /**\n     * Set state of single element\n     * @param  {module:zrender/Element} el\n     * @param  {string} state\n     */\n    function elSetState(el, state) {\n        if (el) {\n            el.trigger(state);\n            if (el.type === 'group') {\n                for (var i = 0; i < el.childCount(); i++) {\n                    elSetState(el.childAt(i), state);\n                }\n            }\n        }\n    }\n    /**\n     * @param  {module:echarts/data/List} data\n     * @param  {Object} payload\n     * @param  {string} state 'normal'|'emphasis'\n     * @inner\n     */\n    function toggleHighlight(data, payload, state) {\n        var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n        if (dataIndex != null) {\n            zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n                elSetState(data.getItemGraphicEl(dataIdx), state);\n            });\n        }\n        else {\n            data.eachItemGraphicEl(function (el) {\n                elSetState(el, state);\n            });\n        }\n    }\n\n    // Enable Chart.extend.\n    clazzUtil.enableClassExtend(Chart, ['dispose']);\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\n\n    module.exports = Chart;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/view/Chart.js\n// module id = 641\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazz = require('./clazz');\n\n    var parseClassType = clazz.parseClassType;\n\n    var base = 0;\n\n    var componentUtil = {};\n\n    var DELIMITER = '_';\n\n    /**\n     * @public\n     * @param {string} type\n     * @return {string}\n     */\n    componentUtil.getUID = function (type) {\n        // Considering the case of crossing js context,\n        // use Math.random to make id as unique as possible.\n        return [(type || ''), base++, Math.random()].join(DELIMITER);\n    };\n\n    /**\n     * @inner\n     */\n    componentUtil.enableSubTypeDefaulter = function (entity) {\n\n        var subTypeDefaulters = {};\n\n        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n            componentType = parseClassType(componentType);\n            subTypeDefaulters[componentType.main] = defaulter;\n        };\n\n        entity.determineSubType = function (componentType, option) {\n            var type = option.type;\n            if (!type) {\n                var componentTypeMain = parseClassType(componentType).main;\n                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n                    type = subTypeDefaulters[componentTypeMain](option);\n                }\n            }\n            return type;\n        };\n\n        return entity;\n    };\n\n    /**\n     * Topological travel on Activity Network (Activity On Vertices).\n     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n     *\n     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n     *\n     * If there is circle dependencey, Error will be thrown.\n     *\n     */\n    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\n\n        /**\n         * @public\n         * @param {Array.<string>} targetNameList Target Component type list.\n         *                                           Can be ['aa', 'bb', 'aa.xx']\n         * @param {Array.<string>} fullNameList By which we can build dependency graph.\n         * @param {Function} callback Params: componentType, dependencies.\n         * @param {Object} context Scope of callback.\n         */\n        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n            if (!targetNameList.length) {\n                return;\n            }\n\n            var result = makeDepndencyGraph(fullNameList);\n            var graph = result.graph;\n            var stack = result.noEntryList;\n\n            var targetNameSet = {};\n            zrUtil.each(targetNameList, function (name) {\n                targetNameSet[name] = true;\n            });\n\n            while (stack.length) {\n                var currComponentType = stack.pop();\n                var currVertex = graph[currComponentType];\n                var isInTargetNameSet = !!targetNameSet[currComponentType];\n                if (isInTargetNameSet) {\n                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\n                    delete targetNameSet[currComponentType];\n                }\n                zrUtil.each(\n                    currVertex.successor,\n                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\n                );\n            }\n\n            zrUtil.each(targetNameSet, function () {\n                throw new Error('Circle dependency may exists');\n            });\n\n            function removeEdge(succComponentType) {\n                graph[succComponentType].entryCount--;\n                if (graph[succComponentType].entryCount === 0) {\n                    stack.push(succComponentType);\n                }\n            }\n\n            // Consider this case: legend depends on series, and we call\n            // chart.setOption({series: [...]}), where only series is in option.\n            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n            // not be called, but only sereis.mergeOption is called. Thus legend\n            // have no chance to update its local record about series (like which\n            // name of series is available in legend).\n            function removeEdgeAndAdd(succComponentType) {\n                targetNameSet[succComponentType] = true;\n                removeEdge(succComponentType);\n            }\n        };\n\n        /**\n         * DepndencyGraph: {Object}\n         * key: conponentType,\n         * value: {\n         *     successor: [conponentTypes...],\n         *     originalDeps: [conponentTypes...],\n         *     entryCount: {number}\n         * }\n         */\n        function makeDepndencyGraph(fullNameList) {\n            var graph = {};\n            var noEntryList = [];\n\n            zrUtil.each(fullNameList, function (name) {\n\n                var thisItem = createDependencyGraphItem(graph, name);\n                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n\n                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n                thisItem.entryCount = availableDeps.length;\n                if (thisItem.entryCount === 0) {\n                    noEntryList.push(name);\n                }\n\n                zrUtil.each(availableDeps, function (dependentName) {\n                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n                        thisItem.predecessor.push(dependentName);\n                    }\n                    var thatItem = createDependencyGraphItem(graph, dependentName);\n                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n                        thatItem.successor.push(name);\n                    }\n                });\n            });\n\n            return {graph: graph, noEntryList: noEntryList};\n        }\n\n        function createDependencyGraphItem(graph, name) {\n            if (!graph[name]) {\n                graph[name] = {predecessor: [], successor: []};\n            }\n            return graph[name];\n        }\n\n        function getAvailableDependencies(originalDeps, fullNameList) {\n            var availableDeps = [];\n            zrUtil.each(originalDeps, function (dep) {\n                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n            });\n            return availableDeps;\n        }\n    };\n\n    module.exports = componentUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/component.js\n// module id = 642\n// module chunks = 0 1 2","// https://github.com/mziccard/node-timsort\n\n    var DEFAULT_MIN_MERGE = 32;\n\n    var DEFAULT_MIN_GALLOPING = 7;\n\n    var DEFAULT_TMP_STORAGE_LENGTH = 256;\n\n    function minRunLength(n) {\n        var r = 0;\n\n        while (n >= DEFAULT_MIN_MERGE) {\n            r |= n & 1;\n            n >>= 1;\n        }\n\n        return n + r;\n    }\n\n    function makeAscendingRun(array, lo, hi, compare) {\n        var runHi = lo + 1;\n\n        if (runHi === hi) {\n            return 1;\n        }\n\n        if (compare(array[runHi++], array[lo]) < 0) {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n                runHi++;\n            }\n\n            reverseRun(array, lo, runHi);\n        }\n        else {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n                runHi++;\n            }\n        }\n\n        return runHi - lo;\n    }\n\n    function reverseRun(array, lo, hi) {\n        hi--;\n\n        while (lo < hi) {\n            var t = array[lo];\n            array[lo++] = array[hi];\n            array[hi--] = t;\n        }\n    }\n\n    function binaryInsertionSort(array, lo, hi, start, compare) {\n        if (start === lo) {\n            start++;\n        }\n\n        for (; start < hi; start++) {\n            var pivot = array[start];\n\n            var left = lo;\n            var right = start;\n            var mid;\n\n            while (left < right) {\n                mid = left + right >>> 1;\n\n                if (compare(pivot, array[mid]) < 0) {\n                    right = mid;\n                }\n                else {\n                    left = mid + 1;\n                }\n            }\n\n            var n = start - left;\n\n            switch (n) {\n                case 3:\n                    array[left + 3] = array[left + 2];\n\n                case 2:\n                    array[left + 2] = array[left + 1];\n\n                case 1:\n                    array[left + 1] = array[left];\n                    break;\n                default:\n                    while (n > 0) {\n                        array[left + n] = array[left + n - 1];\n                        n--;\n                    }\n            }\n\n            array[left] = pivot;\n        }\n    }\n\n    function gallopLeft(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) > 0) {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n        else {\n            maxOffset = hint + 1;\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n\n        lastOffset++;\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) > 0) {\n                lastOffset = m + 1;\n            }\n            else {\n                offset = m;\n            }\n        }\n        return offset;\n    }\n\n    function gallopRight(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) < 0) {\n            maxOffset = hint + 1;\n\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n        else {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n\n        lastOffset++;\n\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) < 0) {\n                offset = m;\n            }\n            else {\n                lastOffset = m + 1;\n            }\n        }\n\n        return offset;\n    }\n\n    function TimSort(array, compare) {\n        var minGallop = DEFAULT_MIN_GALLOPING;\n        var length = 0;\n        var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n        var stackLength = 0;\n        var runStart;\n        var runLength;\n        var stackSize = 0;\n\n        length = array.length;\n\n        if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n            tmpStorageLength = length >>> 1;\n        }\n\n        var tmp = [];\n\n        stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n\n        runStart = [];\n        runLength = [];\n\n        function pushRun(_runStart, _runLength) {\n            runStart[stackSize] = _runStart;\n            runLength[stackSize] = _runLength;\n            stackSize += 1;\n        }\n\n        function mergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n                    if (runLength[n - 1] < runLength[n + 1]) {\n                        n--;\n                    }\n                }\n                else if (runLength[n] > runLength[n + 1]) {\n                    break;\n                }\n                mergeAt(n);\n            }\n        }\n\n        function forceMergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n                    n--;\n                }\n\n                mergeAt(n);\n            }\n        }\n\n        function mergeAt(i) {\n            var start1 = runStart[i];\n            var length1 = runLength[i];\n            var start2 = runStart[i + 1];\n            var length2 = runLength[i + 1];\n\n            runLength[i] = length1 + length2;\n\n            if (i === stackSize - 3) {\n                runStart[i + 1] = runStart[i + 2];\n                runLength[i + 1] = runLength[i + 2];\n            }\n\n            stackSize--;\n\n            var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n            start1 += k;\n            length1 -= k;\n\n            if (length1 === 0) {\n                return;\n            }\n\n            length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n            if (length2 === 0) {\n                return;\n            }\n\n            if (length1 <= length2) {\n                mergeLow(start1, length1, start2, length2);\n            }\n            else {\n                mergeHigh(start1, length1, start2, length2);\n            }\n        }\n\n        function mergeLow(start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length1; i++) {\n                tmp[i] = array[start1 + i];\n            }\n\n            var cursor1 = 0;\n            var cursor2 = start2;\n            var dest = start1;\n\n            array[dest++] = array[cursor2++];\n\n            if (--length2 === 0) {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n                return;\n            }\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n                return;\n            }\n\n            var _minGallop = minGallop;\n            var count1, count2, exit;\n\n            while (1) {\n                count1 = 0;\n                count2 = 0;\n                exit = false;\n\n                do {\n                    if (compare(array[cursor2], tmp[cursor1]) < 0) {\n                        array[dest++] = array[cursor2++];\n                        count2++;\n                        count1 = 0;\n\n                        if (--length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest++] = tmp[cursor1++];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n                    if (count1 !== 0) {\n                        for (i = 0; i < count1; i++) {\n                            array[dest + i] = tmp[cursor1 + i];\n                        }\n\n                        dest += count1;\n                        cursor1 += count1;\n                        length1 -= count1;\n                        if (length1 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest++] = array[cursor2++];\n\n                    if (--length2 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n                    if (count2 !== 0) {\n                        for (i = 0; i < count2; i++) {\n                            array[dest + i] = array[cursor2 + i];\n                        }\n\n                        dest += count2;\n                        cursor2 += count2;\n                        length2 -= count2;\n\n                        if (length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    array[dest++] = tmp[cursor1++];\n\n                    if (--length1 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            minGallop < 1 && (minGallop = 1);\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n            }\n            else if (length1 === 0) {\n                throw new Error();\n                // throw new Error('mergeLow preconditions were not respected');\n            }\n            else {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n            }\n        }\n\n        function mergeHigh (start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length2; i++) {\n                tmp[i] = array[start2 + i];\n            }\n\n            var cursor1 = start1 + length1 - 1;\n            var cursor2 = length2 - 1;\n            var dest = start2 + length2 - 1;\n            var customCursor = 0;\n            var customDest = 0;\n\n            array[dest--] = array[cursor1--];\n\n            if (--length1 === 0) {\n                customCursor = dest - (length2 - 1);\n\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n\n                return;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n                return;\n            }\n\n            var _minGallop = minGallop;\n\n            while (true) {\n                var count1 = 0;\n                var count2 = 0;\n                var exit = false;\n\n                do {\n                    if (compare(tmp[cursor2], array[cursor1]) < 0) {\n                        array[dest--] = array[cursor1--];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest--] = tmp[cursor2--];\n                        count2++;\n                        count1 = 0;\n                        if (--length2 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n                    if (count1 !== 0) {\n                        dest -= count1;\n                        cursor1 -= count1;\n                        length1 -= count1;\n                        customDest = dest + 1;\n                        customCursor = cursor1 + 1;\n\n                        for (i = count1 - 1; i >= 0; i--) {\n                            array[customDest + i] = array[customCursor + i];\n                        }\n\n                        if (length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = tmp[cursor2--];\n\n                    if (--length2 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n                    if (count2 !== 0) {\n                        dest -= count2;\n                        cursor2 -= count2;\n                        length2 -= count2;\n                        customDest = dest + 1;\n                        customCursor = cursor2 + 1;\n\n                        for (i = 0; i < count2; i++) {\n                            array[customDest + i] = tmp[customCursor + i];\n                        }\n\n                        if (length2 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = array[cursor1--];\n\n                    if (--length1 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            if (minGallop < 1) {\n                minGallop = 1;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n            }\n            else if (length2 === 0) {\n                throw new Error();\n                // throw new Error('mergeHigh preconditions were not respected');\n            }\n            else {\n                customCursor = dest - (length2 - 1);\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n            }\n        }\n\n        this.mergeRuns = mergeRuns;\n        this.forceMergeRuns = forceMergeRuns;\n        this.pushRun = pushRun;\n    }\n\n    function sort(array, compare, lo, hi) {\n        if (!lo) {\n            lo = 0;\n        }\n        if (!hi) {\n            hi = array.length;\n        }\n\n        var remaining = hi - lo;\n\n        if (remaining < 2) {\n            return;\n        }\n\n        var runLength = 0;\n\n        if (remaining < DEFAULT_MIN_MERGE) {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n            return;\n        }\n\n        var ts = new TimSort(array, compare);\n\n        var minRun = minRunLength(remaining);\n\n        do {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            if (runLength < minRun) {\n                var force = remaining;\n                if (force > minRun) {\n                    force = minRun;\n                }\n\n                binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n                runLength = force;\n            }\n\n            ts.pushRun(lo, runLength);\n            ts.mergeRuns();\n\n            remaining -= runLength;\n            lo += runLength;\n        } while (remaining !== 0);\n\n        ts.forceMergeRuns();\n    }\n\n    module.exports = sort;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/timsort.js\n// module id = 643\n// module chunks = 0 1 2","/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n\n\n    var zrUtil = require('../core/util');\n\n    var Style = require('./Style');\n\n    var Element = require('../Element');\n    var RectText = require('./mixin/RectText');\n    // var Stateful = require('./mixin/Stateful');\n\n    /**\n     * @alias module:zrender/graphic/Displayable\n     * @extends module:zrender/Element\n     * @extends module:zrender/graphic/mixin/RectText\n     */\n    function Displayable(opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        // Extend properties\n        for (var name in opts) {\n            if (\n                opts.hasOwnProperty(name) &&\n                name !== 'style'\n            ) {\n                this[name] = opts[name];\n            }\n        }\n\n        /**\n         * @type {module:zrender/graphic/Style}\n         */\n        this.style = new Style(opts.style, this);\n\n        this._rect = null;\n        // Shapes for cascade clipping.\n        this.__clipPaths = [];\n\n        // FIXME Stateful must be mixined after style is setted\n        // Stateful.call(this, opts);\n    }\n\n    Displayable.prototype = {\n\n        constructor: Displayable,\n\n        type: 'displayable',\n\n        /**\n         * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n         * Dirty flag. From which painter will determine if this displayable object needs brush\n         * @name module:zrender/graphic/Displayable#__dirty\n         * @type {boolean}\n         */\n        __dirty: true,\n\n        /**\n         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n         * If ignore drawing of the displayable object. Mouse event will still be triggered\n         * @name module:/zrender/graphic/Displayable#invisible\n         * @type {boolean}\n         * @default false\n         */\n        invisible: false,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z: 0,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z2: 0,\n\n        /**\n         * z层level，决定绘画在哪层canvas中\n         * @name module:/zrender/graphic/Displayable#zlevel\n         * @type {number}\n         * @default 0\n         */\n        zlevel: 0,\n\n        /**\n         * 是否可拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        draggable: false,\n\n        /**\n         * 是否正在拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        dragging: false,\n\n        /**\n         * 是否相应鼠标事件\n         * @name module:/zrender/graphic/Displayable#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * If enable culling\n         * @type {boolean}\n         * @default false\n         */\n        culling: false,\n\n        /**\n         * Mouse cursor when hovered\n         * @name module:/zrender/graphic/Displayable#cursor\n         * @type {string}\n         */\n        cursor: 'pointer',\n\n        /**\n         * If hover area is bounding rect\n         * @name module:/zrender/graphic/Displayable#rectHover\n         * @type {string}\n         */\n        rectHover: false,\n\n        /**\n         * Render the element progressively when the value >= 0,\n         * usefull for large data.\n         * @type {number}\n         */\n        progressive: -1,\n\n        beforeBrush: function (ctx) {},\n\n        afterBrush: function (ctx) {},\n\n        /**\n         * 图形绘制方法\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        // Interface\n        brush: function (ctx, prevEl) {},\n\n        /**\n         * 获取最小包围盒\n         * @return {module:zrender/core/BoundingRect}\n         */\n        // Interface\n        getBoundingRect: function () {},\n\n        /**\n         * 判断坐标 x, y 是否在图形上\n         * If displayable element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        contain: function (x, y) {\n            return this.rectContain(x, y);\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            cb.call(context, this);\n        },\n\n        /**\n         * 判断坐标 x, y 是否在图形的包围盒上\n         * If bounding rect of element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        rectContain: function (x, y) {\n            var coord = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            return rect.contain(coord[0], coord[1]);\n        },\n\n        /**\n         * 标记图形元素为脏，并且在下一帧重绘\n         * Mark displayable element dirty and refresh next frame\n         */\n        dirty: function () {\n            this.__dirty = true;\n\n            this._rect = null;\n\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * 图形是否会触发事件\n         * If displayable object binded any event\n         * @return {boolean}\n         */\n        // TODO, 通过 bind 绑定的事件\n        // isSilent: function () {\n        //     return !(\n        //         this.hoverable || this.draggable\n        //         || this.onmousemove || this.onmouseover || this.onmouseout\n        //         || this.onmousedown || this.onmouseup || this.onclick\n        //         || this.ondragenter || this.ondragover || this.ondragleave\n        //         || this.ondrop\n        //     );\n        // },\n        /**\n         * Alias for animate('style')\n         * @param {boolean} loop\n         */\n        animateStyle: function (loop) {\n            return this.animate('style', loop);\n        },\n\n        attrKV: function (key, value) {\n            if (key !== 'style') {\n                Element.prototype.attrKV.call(this, key, value);\n            }\n            else {\n                this.style.set(value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setStyle: function (key, value) {\n            this.style.set(key, value);\n            this.dirty(false);\n            return this;\n        },\n\n        /**\n         * Use given style object\n         * @param  {Object} obj\n         */\n        useStyle: function (obj) {\n            this.style = new Style(obj, this);\n            this.dirty(false);\n            return this;\n        }\n    };\n\n    zrUtil.inherits(Displayable, Element);\n\n    zrUtil.mixin(Displayable, RectText);\n    // zrUtil.mixin(Displayable, Stateful);\n\n    module.exports = Displayable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Displayable.js\n// module id = 644\n// module chunks = 0 1 2","\n\n    /**\n     * @param {Array.<Object>} colorStops\n     */\n    var Gradient = function (colorStops) {\n\n        this.colorStops = colorStops || [];\n\n    };\n\n    Gradient.prototype = {\n\n        constructor: Gradient,\n\n        addColorStop: function (offset, color) {\n            this.colorStops.push({\n\n                offset: offset,\n\n                color: color\n            });\n        }\n\n    };\n\n    module.exports = Gradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Gradient.js\n// module id = 645\n// module chunks = 0 1 2","\n\n    var LRU = require('../../core/LRU');\n    var globalImageCache = new LRU(50);\n\n    var helper = {};\n\n    /**\n     * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n     * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n     */\n    helper.findExistImage = function (newImageOrSrc) {\n        if (typeof newImageOrSrc === 'string') {\n            var cachedImgObj = globalImageCache.get(newImageOrSrc);\n            return cachedImgObj && cachedImgObj.image;\n        }\n        else {\n            return newImageOrSrc;\n        }\n    };\n\n    /**\n     * Caution: User should cache loaded images, but not just count on LRU.\n     * Consider if required images more than LRU size, will dead loop occur?\n     *\n     * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n     * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n     * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n     * @param {Function} [cb] params: (image, cbPayload)\n     * @param {Object} [cbPayload] Payload on cb calling.\n     * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n     */\n    helper.createOrUpdateImage = function (newImageOrSrc, image, hostEl, cb, cbPayload) {\n        if (!newImageOrSrc) {\n            return image;\n        }\n        else if (typeof newImageOrSrc === 'string') {\n\n            // Image should not be loaded repeatly.\n            if ((image && image.__zrImageSrc === newImageOrSrc) || !hostEl) {\n                return image;\n            }\n\n            // Only when there is no existent image or existent image src\n            // is different, this method is responsible for load.\n            var cachedImgObj = globalImageCache.get(newImageOrSrc);\n\n            var pendingWrap = {hostEl: hostEl, cb: cb, cbPayload: cbPayload};\n\n            if (cachedImgObj) {\n                image = cachedImgObj.image;\n                !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n            }\n            else {\n                !image && (image = new Image());\n                image.onload = imageOnLoad;\n\n                globalImageCache.put(\n                    newImageOrSrc,\n                    image.__cachedImgObj = {\n                        image: image,\n                        pending: [pendingWrap]\n                    }\n                );\n\n                image.src = image.__zrImageSrc = newImageOrSrc;\n            }\n\n            return image;\n        }\n        // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n        else {\n            return newImageOrSrc;\n        }\n    };\n\n    function imageOnLoad() {\n        var cachedImgObj = this.__cachedImgObj;\n        this.onload = this.__cachedImgObj = null;\n\n        for (var i = 0; i < cachedImgObj.pending.length; i++) {\n            var pendingWrap = cachedImgObj.pending[i];\n            var cb = pendingWrap.cb;\n            cb && cb(this, pendingWrap.cbPayload);\n            pendingWrap.hostEl.dirty();\n        }\n        cachedImgObj.pending.length = 0;\n    }\n\n    var isImageReady = helper.isImageReady = function (image) {\n        return image && image.width && image.height;\n    };\n\n    module.exports = helper;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/image.js\n// module id = 646\n// module chunks = 0 1 2","\n\n    var textContain = require('../../contain/text');\n    var util = require('../../core/util');\n    var roundRectHelper = require('./roundRect');\n    var imageHelper = require('./image');\n\n    var retrieve3 = util.retrieve3;\n    var retrieve2 = util.retrieve2;\n\n    // TODO: Have not support 'start', 'end' yet.\n    var VALID_TEXT_ALIGN = {left: 1, right: 1, center: 1};\n    var VALID_TEXT_VERTICAL_ALIGN = {top: 1, bottom: 1, middle: 1};\n\n    var helper = {};\n\n    /**\n     * @param {module:zrender/graphic/Style} style\n     * @return {module:zrender/graphic/Style} The input style.\n     */\n    helper.normalizeTextStyle = function (style) {\n        normalizeStyle(style);\n        util.each(style.rich, normalizeStyle);\n        return style;\n    };\n\n    function normalizeStyle(style) {\n        if (style) {\n\n            style.font = textContain.makeFont(style);\n\n            var textAlign = style.textAlign;\n            textAlign === 'middle' && (textAlign = 'center');\n            style.textAlign = (\n                textAlign == null || VALID_TEXT_ALIGN[textAlign]\n            ) ? textAlign : 'left';\n\n            // Compatible with textBaseline.\n            var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n            textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n            style.textVerticalAlign = (\n                textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign]\n            ) ? textVerticalAlign : 'top';\n\n            var textPadding = style.textPadding;\n            if (textPadding) {\n                style.textPadding = util.normalizeCssArray(style.textPadding);\n            }\n        }\n    }\n\n    /**\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {string} text\n     * @param {module:zrender/graphic/Style} style\n     * @param {Object|boolean} [rect] {x, y, width, height}\n     *                  If set false, rect text is not used.\n     */\n    helper.renderText = function (hostEl, ctx, text, style, rect) {\n        style.rich\n            ? renderRichText(hostEl, ctx, text, style, rect)\n            : renderPlainText(hostEl, ctx, text, style, rect);\n    };\n\n    function renderPlainText(hostEl, ctx, text, style, rect) {\n        var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n\n        var textPadding = style.textPadding;\n\n        var contentBlock = hostEl.__textCotentBlock;\n        if (!contentBlock || hostEl.__dirty) {\n            contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(\n                text, font, textPadding, style.truncate\n            );\n        }\n\n        var outerHeight = contentBlock.outerHeight;\n\n        var textLines = contentBlock.lines;\n        var lineHeight = contentBlock.lineHeight;\n\n        var boxPos = getBoxPosition(outerHeight, style, rect);\n        var baseX = boxPos.baseX;\n        var baseY = boxPos.baseY;\n        var textAlign = boxPos.textAlign;\n        var textVerticalAlign = boxPos.textVerticalAlign;\n\n        // Origin of textRotation should be the base point of text drawing.\n        applyTextRotation(ctx, style, rect, baseX, baseY);\n\n        var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n        var textX = baseX;\n        var textY = boxY;\n\n        var needDrawBg = needDrawBackground(style);\n        if (needDrawBg || textPadding) {\n            // Consider performance, do not call getTextWidth util necessary.\n            var textWidth = textContain.getWidth(text, font);\n            var outerWidth = textWidth;\n            textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n            var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n\n            needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n            if (textPadding) {\n                textX = getTextXForPadding(baseX, textAlign, textPadding);\n                textY += textPadding[0];\n            }\n        }\n\n        setCtx(ctx, 'textAlign', textAlign || 'left');\n        // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n        // text will offset downward a little bit in font \"Microsoft YaHei\".\n        setCtx(ctx, 'textBaseline', 'middle');\n\n        // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n        setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n        setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n        setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n        setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0);\n\n        // `textBaseline` is set as 'middle'.\n        textY += lineHeight / 2;\n\n        var textLineWidth = style.textLineWidth;\n        var textStroke = getStroke(style.textStroke, textLineWidth);\n        var textFill = getFill(style.textFill);\n\n        if (textStroke) {\n            setCtx(ctx, 'lineWidth', textLineWidth);\n            setCtx(ctx, 'strokeStyle', textStroke);\n        }\n        if (textFill) {\n            setCtx(ctx, 'fillStyle', textFill);\n        }\n\n        for (var i = 0; i < textLines.length; i++) {\n            // Fill after stroke so the outline will not cover the main part.\n            textStroke && ctx.strokeText(textLines[i], textX, textY);\n            textFill && ctx.fillText(textLines[i], textX, textY);\n            textY += lineHeight;\n        }\n    }\n\n    function renderRichText(hostEl, ctx, text, style, rect) {\n        var contentBlock = hostEl.__textCotentBlock;\n\n        if (!contentBlock || hostEl.__dirty) {\n            contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n        }\n\n        drawRichText(hostEl, ctx, contentBlock, style, rect);\n    }\n\n    function drawRichText(hostEl, ctx, contentBlock, style, rect) {\n        var contentWidth = contentBlock.width;\n        var outerWidth = contentBlock.outerWidth;\n        var outerHeight = contentBlock.outerHeight;\n        var textPadding = style.textPadding;\n\n        var boxPos = getBoxPosition(outerHeight, style, rect);\n        var baseX = boxPos.baseX;\n        var baseY = boxPos.baseY;\n        var textAlign = boxPos.textAlign;\n        var textVerticalAlign = boxPos.textVerticalAlign;\n\n        // Origin of textRotation should be the base point of text drawing.\n        applyTextRotation(ctx, style, rect, baseX, baseY);\n\n        var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n        var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n        var xLeft = boxX;\n        var lineTop = boxY;\n        if (textPadding) {\n            xLeft += textPadding[3];\n            lineTop += textPadding[0];\n        }\n        var xRight = xLeft + contentWidth;\n\n        needDrawBackground(style) && drawBackground(\n            hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight\n        );\n\n        for (var i = 0; i < contentBlock.lines.length; i++) {\n            var line = contentBlock.lines[i];\n            var tokens = line.tokens;\n            var tokenCount = tokens.length;\n            var lineHeight = line.lineHeight;\n            var usedWidth = line.width;\n\n            var leftIndex = 0;\n            var lineXLeft = xLeft;\n            var lineXRight = xRight;\n            var rightIndex = tokenCount - 1;\n            var token;\n\n            while (\n                leftIndex < tokenCount\n                && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')\n            ) {\n                placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n                usedWidth -= token.width;\n                lineXLeft += token.width;\n                leftIndex++;\n            }\n\n            while (\n                rightIndex >= 0\n                && (token = tokens[rightIndex], token.textAlign === 'right')\n            ) {\n                placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n                usedWidth -= token.width;\n                lineXRight -= token.width;\n                rightIndex--;\n            }\n\n            // The other tokens are placed as textAlign 'center' if there is enough space.\n            lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n            while (leftIndex <= rightIndex) {\n                token = tokens[leftIndex];\n                // Consider width specified by user, use 'center' rather than 'left'.\n                placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n                lineXLeft += token.width;\n                leftIndex++;\n            }\n\n            lineTop += lineHeight;\n        }\n    }\n\n    function applyTextRotation(ctx, style, rect, x, y) {\n        // textRotation only apply in RectText.\n        if (rect && style.textRotation) {\n            var origin = style.textOrigin;\n            if (origin === 'center') {\n                x = rect.width / 2 + rect.x;\n                y = rect.height / 2 + rect.y;\n            }\n            else if (origin) {\n                x = origin[0] + rect.x;\n                y = origin[1] + rect.y;\n            }\n\n            ctx.translate(x, y);\n            // Positive: anticlockwise\n            ctx.rotate(-style.textRotation);\n            ctx.translate(-x, -y);\n        }\n    }\n\n    function placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n        var tokenStyle = style.rich[token.styleName] || {};\n\n        // 'ctx.textBaseline' is always set as 'middle', for sake of\n        // the bias of \"Microsoft YaHei\".\n        var textVerticalAlign = token.textVerticalAlign;\n        var y = lineTop + lineHeight / 2;\n        if (textVerticalAlign === 'top') {\n            y = lineTop + token.height / 2;\n        }\n        else if (textVerticalAlign === 'bottom') {\n            y = lineTop + lineHeight - token.height / 2;\n        }\n\n        !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(\n            hostEl,\n            ctx,\n            tokenStyle,\n            textAlign === 'right'\n                ? x - token.width\n                : textAlign === 'center'\n                ? x - token.width / 2\n                : x,\n            y - token.height / 2,\n            token.width,\n            token.height\n        );\n\n        var textPadding = token.textPadding;\n        if (textPadding) {\n            x = getTextXForPadding(x, textAlign, textPadding);\n            y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n        }\n\n        setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n        setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n        setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n        setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n\n        setCtx(ctx, 'textAlign', textAlign);\n        // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n        // text will offset downward a little bit in font \"Microsoft YaHei\".\n        setCtx(ctx, 'textBaseline', 'middle');\n\n        setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n\n        var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textLineWidth);\n        var textFill = getFill(tokenStyle.textFill || style.textFill);\n        var textLineWidth = retrieve2(tokenStyle.textLineWidth, style.textLineWidth);\n\n        // Fill after stroke so the outline will not cover the main part.\n        if (textStroke) {\n            setCtx(ctx, 'lineWidth', textLineWidth);\n            setCtx(ctx, 'strokeStyle', textStroke);\n            ctx.strokeText(token.text, x, y);\n        }\n        if (textFill) {\n            setCtx(ctx, 'fillStyle', textFill);\n            ctx.fillText(token.text, x, y);\n        }\n    }\n\n    function needDrawBackground(style) {\n        return style.textBackgroundColor\n            || (style.textBorderWidth && style.textBorderColor);\n    }\n\n    // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n    // shape: {x, y, width, height}\n    function drawBackground(hostEl, ctx, style, x, y, width, height) {\n        var textBackgroundColor = style.textBackgroundColor;\n        var textBorderWidth = style.textBorderWidth;\n        var textBorderColor = style.textBorderColor;\n        var isPlainBg = util.isString(textBackgroundColor);\n\n        setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n        setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n        setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n        setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n        if (isPlainBg || (textBorderWidth && textBorderColor)) {\n            ctx.beginPath();\n            var textBorderRadius = style.textBorderRadius;\n            if (!textBorderRadius) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, {\n                    x: x, y: y, width: width, height: height, r: textBorderRadius\n                });\n            }\n            ctx.closePath();\n        }\n\n        if (isPlainBg) {\n            setCtx(ctx, 'fillStyle', textBackgroundColor);\n            ctx.fill();\n        }\n        else if (util.isObject(textBackgroundColor)) {\n            var image = textBackgroundColor.image;\n\n            image = imageHelper.createOrUpdateImage(\n                image, null, hostEl, onBgImageLoaded, textBackgroundColor\n            );\n            if (image && imageHelper.isImageReady(image)) {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n\n        if (textBorderWidth && textBorderColor) {\n            setCtx(ctx, 'lineWidth', textBorderWidth);\n            setCtx(ctx, 'strokeStyle', textBorderColor);\n            ctx.stroke();\n        }\n    }\n\n    function onBgImageLoaded(image, textBackgroundColor) {\n        // Replace image, so that `contain/text.js#parseRichText`\n        // will get correct result in next tick.\n        textBackgroundColor.image = image;\n    }\n\n    function getBoxPosition(blockHeiht, style, rect) {\n        var baseX = style.x || 0;\n        var baseY = style.y || 0;\n        var textAlign = style.textAlign;\n        var textVerticalAlign = style.textVerticalAlign;\n\n        // Text position represented by coord\n        if (rect) {\n            var textPosition = style.textPosition;\n            if (textPosition instanceof Array) {\n                // Percent\n                baseX = rect.x + parsePercent(textPosition[0], rect.width);\n                baseY = rect.y + parsePercent(textPosition[1], rect.height);\n            }\n            else {\n                var res = textContain.adjustTextPositionOnRect(\n                    textPosition, rect, style.textDistance\n                );\n                baseX = res.x;\n                baseY = res.y;\n                // Default align and baseline when has textPosition\n                textAlign = textAlign || res.textAlign;\n                textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n            }\n\n            // textOffset is only support in RectText, otherwise\n            // we have to adjust boundingRect for textOffset.\n            var textOffset = style.textOffset;\n            if (textOffset) {\n                baseX += textOffset[0];\n                baseY += textOffset[1];\n            }\n        }\n\n        return {\n            baseX: baseX,\n            baseY: baseY,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    function setCtx(ctx, prop, value) {\n        // FIXME ??? performance try\n        // if (ctx.__currentValues[prop] !== value) {\n            ctx[prop] = ctx.__currentValues[prop] = value;\n        // }\n        return ctx[prop];\n    }\n\n    /**\n     * @param {string} [stroke] If specified, do not check style.textStroke.\n     * @param {string} [lineWidth] If specified, do not check style.textStroke.\n     * @param {number} style\n     */\n    var getStroke = helper.getStroke = function (stroke, lineWidth) {\n        return (stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none')\n            ? null\n            // TODO pattern and gradient?\n            : (stroke.image || stroke.colorStops)\n            ? '#000'\n            : stroke;\n    };\n\n    var getFill = helper.getFill = function (fill) {\n        return (fill == null || fill === 'none')\n            ? null\n            // TODO pattern and gradient?\n            : (fill.image || fill.colorStops)\n            ? '#000'\n            : fill;\n    };\n\n    function parsePercent(value, maxValue) {\n        if (typeof value === 'string') {\n            if (value.lastIndexOf('%') >= 0) {\n                return parseFloat(value) / 100 * maxValue;\n            }\n            return parseFloat(value);\n        }\n        return value;\n    }\n\n    function getTextXForPadding(x, textAlign, textPadding) {\n        return textAlign === 'right'\n            ? (x - textPadding[1])\n            : textAlign === 'center'\n            ? (x + textPadding[3] / 2 - textPadding[1] / 2)\n            : (x + textPadding[3]);\n    }\n\n    /**\n     * @param {string} text\n     * @param {module:zrender/Style} style\n     * @return {boolean}\n     */\n    helper.needDrawText = function (text, style) {\n        return text != null\n            && (text\n                || style.textBackgroundColor\n                || (style.textBorderWidth && style.textBorderColor)\n                || style.textPadding\n            );\n    };\n\n    module.exports = helper;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/text.js\n// module id = 647\n// module chunks = 0 1 2","'use strict';\n\n\n    var List = require('../../data/List');\n    var completeDimensions = require('../../data/helper/completeDimensions');\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var CoordinateSystem = require('../../CoordinateSystem');\n    var getDataItemValue = modelUtil.getDataItemValue;\n    var converDataValue = modelUtil.converDataValue;\n\n    function firstDataNotNull(data) {\n        var i = 0;\n        while (i < data.length && data[i] == null) {\n            i++;\n        }\n        return data[i];\n    }\n    function ifNeedCompleteOrdinalData(data) {\n        var sampleItem = firstDataNotNull(data);\n        return sampleItem != null\n            && !zrUtil.isArray(getDataItemValue(sampleItem));\n    }\n\n    /**\n     * Helper function to create a list from option data\n     */\n    function createListFromArray(data, seriesModel, ecModel) {\n        // If data is undefined\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        var coordSysName = seriesModel.get('coordinateSystem');\n        var creator = creators[coordSysName];\n        var registeredCoordSys = CoordinateSystem.get(coordSysName);\n        var completeDimOpt = {\n            encodeDef: seriesModel.get('encode'),\n            dimsDef: seriesModel.get('dimensions')\n        };\n\n        // FIXME\n        var axesInfo = creator && creator(data, seriesModel, ecModel, completeDimOpt);\n        var dimensions = axesInfo && axesInfo.dimensions;\n        if (!dimensions) {\n            // Get dimensions from registered coordinate system\n            dimensions = (registeredCoordSys && (\n                registeredCoordSys.getDimensionsInfo\n                    ? registeredCoordSys.getDimensionsInfo()\n                    : registeredCoordSys.dimensions.slice()\n            )) || ['x', 'y'];\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n        }\n\n        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n\n        var list = new List(dimensions, seriesModel);\n\n        var nameList = createNameList(axesInfo, data);\n\n        var categories = {};\n        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\n            ? function (itemOpt, dimName, dataIndex, dimIndex) {\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                // Use dataIndex as ordinal value in categoryAxis\n                return dimIndex === categoryIndex\n                    ? dataIndex\n                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n            }\n            : function (itemOpt, dimName, dataIndex, dimIndex) {\n                var value = getDataItemValue(itemOpt);\n                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n                if (categoryAxesModels && categoryAxesModels[dimName]) {\n                    // If given value is a category string\n                    if (typeof val === 'string') {\n                        // Lazy get categories\n                        categories[dimName] = categories[dimName]\n                            || categoryAxesModels[dimName].getCategories();\n                        val = zrUtil.indexOf(categories[dimName], val);\n                        if (val < 0 && !isNaN(val)) {\n                            // In case some one write '1', '2' istead of 1, 2\n                            val = +val;\n                        }\n                    }\n                }\n                return val;\n            };\n\n        list.hasItemOption = false;\n        list.initData(data, nameList, dimValueGetter);\n\n        return list;\n    }\n\n    function isStackable(axisType) {\n        return axisType !== 'category' && axisType !== 'time';\n    }\n\n    function getDimTypeByAxis(axisType) {\n        return axisType === 'category'\n            ? 'ordinal'\n            : axisType === 'time'\n            ? 'time'\n            : 'float';\n    }\n\n    /**\n     * Creaters for each coord system.\n     */\n    var creators = {\n\n        cartesian2d: function (data, seriesModel, ecModel, completeDimOpt) {\n\n            var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n                return ecModel.queryComponents({\n                    mainType: name,\n                    index: seriesModel.get(name + 'Index'),\n                    id: seriesModel.get(name + 'Id')\n                })[0];\n            });\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            if (__DEV__) {\n                if (!xAxisModel) {\n                    throw new Error('xAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('xAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n                if (!yAxisModel) {\n                    throw new Error('yAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('yAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'x',\n                    type: getDimTypeByAxis(xAxisType),\n                    stackable: isStackable(xAxisType)\n                },\n                {\n                    name: 'y',\n                    // If two category axes\n                    type: getDimTypeByAxis(yAxisType),\n                    stackable: isStackable(yAxisType)\n                }\n            ];\n\n            var isXAxisCateogry = xAxisType === 'category';\n            var isYAxisCategory = yAxisType === 'category';\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isXAxisCateogry) {\n                categoryAxesModels.x = xAxisModel;\n            }\n            if (isYAxisCategory) {\n                categoryAxesModels.y = yAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        singleAxis: function (data, seriesModel, ecModel, completeDimOpt) {\n\n            var singleAxisModel = ecModel.queryComponents({\n                mainType: 'singleAxis',\n                index: seriesModel.get('singleAxisIndex'),\n                id: seriesModel.get('singleAxisId')\n            })[0];\n\n            if (__DEV__) {\n                if (!singleAxisModel) {\n                    throw new Error('singleAxis should be specified.');\n                }\n            }\n\n            var singleAxisType = singleAxisModel.get('type');\n            var isCategory = singleAxisType === 'category';\n\n            var dimensions = [{\n                name: 'single',\n                type: getDimTypeByAxis(singleAxisType),\n                stackable: isStackable(singleAxisType)\n            }];\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isCategory) {\n                categoryAxesModels.single = singleAxisModel;\n            }\n\n            return {\n                dimensions: dimensions,\n                categoryIndex: isCategory ? 0 : -1,\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        polar: function (data, seriesModel, ecModel, completeDimOpt) {\n            var polarModel = ecModel.queryComponents({\n                mainType: 'polar',\n                index: seriesModel.get('polarIndex'),\n                id: seriesModel.get('polarId')\n            })[0];\n\n            var angleAxisModel = polarModel.findAxisModel('angleAxis');\n            var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n\n            if (__DEV__) {\n                if (!angleAxisModel) {\n                    throw new Error('angleAxis option not found');\n                }\n                if (!radiusAxisModel) {\n                    throw new Error('radiusAxis option not found');\n                }\n            }\n\n            var radiusAxisType = radiusAxisModel.get('type');\n            var angleAxisType = angleAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'radius',\n                    type: getDimTypeByAxis(radiusAxisType),\n                    stackable: isStackable(radiusAxisType)\n                },\n                {\n                    name: 'angle',\n                    type: getDimTypeByAxis(angleAxisType),\n                    stackable: isStackable(angleAxisType)\n                }\n            ];\n            var isAngleAxisCateogry = angleAxisType === 'category';\n            var isRadiusAxisCateogry = radiusAxisType === 'category';\n\n            dimensions = completeDimensions(dimensions, data, completeDimOpt);\n\n            var categoryAxesModels = {};\n            if (isRadiusAxisCateogry) {\n                categoryAxesModels.radius = radiusAxisModel;\n            }\n            if (isAngleAxisCateogry) {\n                categoryAxesModels.angle = angleAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        geo: function (data, seriesModel, ecModel, completeDimOpt) {\n            // TODO Region\n            // 多个散点图系列在同一个地区的时候\n            return {\n                dimensions: completeDimensions([\n                    {name: 'lng'},\n                    {name: 'lat'}\n                ], data, completeDimOpt)\n            };\n        }\n    };\n\n    function createNameList(result, data) {\n        var nameList = [];\n\n        var categoryDim = result && result.dimensions[result.categoryIndex];\n        var categoryAxisModel;\n        if (categoryDim) {\n            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n        }\n\n        if (categoryAxisModel) {\n            // FIXME Two category axis\n            var categories = categoryAxisModel.getCategories();\n            if (categories) {\n                var dataLen = data.length;\n                // Ordered data is given explicitly like\n                // [[3, 0.2], [1, 0.3], [2, 0.15]]\n                // or given scatter data,\n                // pick the category\n                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n                    nameList = [];\n                    for (var i = 0; i < dataLen; i++) {\n                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\n                    }\n                }\n                else {\n                    nameList = categories.slice(0);\n                }\n            }\n        }\n\n        return nameList;\n    }\n\n    module.exports = createListFromArray;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/createListFromArray.js\n// module id = 648\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../../util/format');\n    var graphic = require('../../util/graphic');\n    var Model = require('../../model/Model');\n    var numberUtil = require('../../util/number');\n    var remRadian = numberUtil.remRadian;\n    var isRadianAroundZero = numberUtil.isRadianAroundZero;\n    var vec2 = require('zrender/lib/core/vector');\n    var matrix = require('zrender/lib/core/matrix');\n    var v2ApplyTransform = vec2.applyTransform;\n    var retrieve = zrUtil.retrieve;\n\n    var PI = Math.PI;\n\n    function makeAxisEventDataBase(axisModel) {\n        var eventData = {\n            componentType: axisModel.mainType\n        };\n        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n        return eventData;\n    }\n\n    /**\n     * A final axis is translated and rotated from a \"standard axis\".\n     * So opt.position and opt.rotation is required.\n     *\n     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n     * for example: (0, 0) ------------> (0, 50)\n     *\n     * nameDirection or tickDirection or labelDirection is 1 means tick\n     * or label is below the standard axis, whereas is -1 means above\n     * the standard axis. labelOffset means offset between label and axis,\n     * which is useful when 'onZero', where axisLabel is in the grid and\n     * label in outside grid.\n     *\n     * Tips: like always,\n     * positive rotation represents anticlockwise, and negative rotation\n     * represents clockwise.\n     * The direction of position coordinate is the same as the direction\n     * of screen coordinate.\n     *\n     * Do not need to consider axis 'inverse', which is auto processed by\n     * axis extent.\n     *\n     * @param {module:zrender/container/Group} group\n     * @param {Object} axisModel\n     * @param {Object} opt Standard axis parameters.\n     * @param {Array.<number>} opt.position [x, y]\n     * @param {number} opt.rotation by radian\n     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle'.\n     * @param {number} [opt.tickDirection=1] 1 or -1\n     * @param {number} [opt.labelDirection=1] 1 or -1\n     * @param {number} [opt.labelOffset=0] Usefull when onZero.\n     * @param {string} [opt.axisLabelShow] default get from axisModel.\n     * @param {string} [opt.axisName] default get from axisModel.\n     * @param {number} [opt.axisNameAvailableWidth]\n     * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n     * @param {number} [opt.labelInterval] Default label interval when label\n     *                                     interval from model is null or 'auto'.\n     * @param {number} [opt.strokeContainThreshold] Default label interval when label\n     * @param {number} [opt.nameTruncateMaxWidth]\n     */\n    var AxisBuilder = function (axisModel, opt) {\n\n        /**\n         * @readOnly\n         */\n        this.opt = opt;\n\n        /**\n         * @readOnly\n         */\n        this.axisModel = axisModel;\n\n        // Default value\n        zrUtil.defaults(\n            opt,\n            {\n                labelOffset: 0,\n                nameDirection: 1,\n                tickDirection: 1,\n                labelDirection: 1,\n                silent: true\n            }\n        );\n\n        /**\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        // FIXME Not use a seperate text group?\n        var dumbGroup = new graphic.Group({\n            position: opt.position.slice(),\n            rotation: opt.rotation\n        });\n\n        // this.group.add(dumbGroup);\n        // this._dumbGroup = dumbGroup;\n\n        dumbGroup.updateTransform();\n        this._transform = dumbGroup.transform;\n\n        this._dumbGroup = dumbGroup;\n    };\n\n    AxisBuilder.prototype = {\n\n        constructor: AxisBuilder,\n\n        hasBuilder: function (name) {\n            return !!builders[name];\n        },\n\n        add: function (name) {\n            builders[name].call(this);\n        },\n\n        getGroup: function () {\n            return this.group;\n        }\n\n    };\n\n    var builders = {\n\n        /**\n         * @private\n         */\n        axisLine: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisLine.show')) {\n                return;\n            }\n\n            var extent = this.axisModel.axis.getExtent();\n\n            var matrix = this._transform;\n            var pt1 = [extent[0], 0];\n            var pt2 = [extent[1], 0];\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n\n            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                // Id for animation\n                anid: 'line',\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.extend(\n                    {lineCap: 'round'},\n                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\n                ),\n                strokeContainThreshold: opt.strokeContainThreshold || 5,\n                silent: true,\n                z2: 1\n            })));\n        },\n\n        /**\n         * @private\n         */\n        axisTick: function () {\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n\n            if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n                return;\n            }\n\n            var tickModel = axisModel.getModel('axisTick');\n            var opt = this.opt;\n\n            var lineStyleModel = tickModel.getModel('lineStyle');\n            var tickLen = tickModel.get('length');\n\n            var tickInterval = getInterval(tickModel, opt.labelInterval);\n            var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\n            var ticks = axis.scale.getTicks();\n\n            var pt1 = [];\n            var pt2 = [];\n            var matrix = this._transform;\n\n            for (var i = 0; i < ticksCoords.length; i++) {\n                // Only ordinal scale support tick interval\n                if (ifIgnoreOnTick(axis, i, tickInterval)) {\n                     continue;\n                }\n\n                var tickCoord = ticksCoords[i];\n\n                pt1[0] = tickCoord;\n                pt1[1] = 0;\n                pt2[0] = tickCoord;\n                pt2[1] = opt.tickDirection * tickLen;\n\n                if (matrix) {\n                    v2ApplyTransform(pt1, pt1, matrix);\n                    v2ApplyTransform(pt2, pt2, matrix);\n                }\n                // Tick line, Not use group transform to have better line draw\n                this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                    // Id for animation\n                    anid: 'tick_' + ticks[i],\n\n                    shape: {\n                        x1: pt1[0],\n                        y1: pt1[1],\n                        x2: pt2[0],\n                        y2: pt2[1]\n                    },\n                    style: zrUtil.defaults(\n                        lineStyleModel.getLineStyle(),\n                        {\n                            stroke: axisModel.get('axisLine.lineStyle.color')\n                        }\n                    ),\n                    z2: 2,\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @private\n         */\n        axisLabel: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n            var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n            if (!show || axis.scale.isBlank()) {\n                return;\n            }\n\n            var labelModel = axisModel.getModel('axisLabel');\n            var labelMargin = labelModel.get('margin');\n            var ticks = axis.scale.getTicks();\n            var labels = axisModel.getFormattedLabels();\n\n            // Special label rotate.\n            var labelRotation = (\n                retrieve(opt.labelRotate, labelModel.get('rotate')) || 0\n            ) * PI / 180;\n\n            var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n            var categoryData = axisModel.get('data');\n\n            var textEls = [];\n            var silent = isSilent(axisModel);\n            var triggerEvent = axisModel.get('triggerEvent');\n\n            zrUtil.each(ticks, function (tickVal, index) {\n                if (ifIgnoreOnTick(axis, index, opt.labelInterval)) {\n                     return;\n                }\n\n                var itemLabelModel = labelModel;\n                if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n                    itemLabelModel = new Model(\n                        categoryData[tickVal].textStyle, labelModel, axisModel.ecModel\n                    );\n                }\n\n                var textColor = itemLabelModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color');\n\n                var tickCoord = axis.dataToCoord(tickVal);\n                var pos = [\n                    tickCoord,\n                    opt.labelOffset + opt.labelDirection * labelMargin\n                ];\n                var labelStr = axis.scale.getLabel(tickVal);\n\n                var textEl = new graphic.Text({\n                    // Id for animation\n                    anid: 'label_' + tickVal,\n                    position: pos,\n                    rotation: labelLayout.rotation,\n                    silent: silent,\n                    z2: 10\n                });\n\n                graphic.setTextStyle(textEl.style, itemLabelModel, {\n                    text: labels[index],\n                    textAlign: itemLabelModel.getShallow('align', true)\n                        || labelLayout.textAlign,\n                    textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true)\n                        || itemLabelModel.getShallow('baseline', true)\n                        || labelLayout.textVerticalAlign,\n                    textFill: typeof textColor === 'function'\n                        ? textColor(\n                            // (1) In category axis with data zoom, tick is not the original\n                            // index of axis.data. So tick should not be exposed to user\n                            // in category axis.\n                            // (2) Compatible with previous version, which always returns labelStr.\n                            // But in interval scale labelStr is like '223,445', which maked\n                            // user repalce ','. So we modify it to return original val but remain\n                            // it as 'string' to avoid error in replacing.\n                            axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal,\n                            index\n                        )\n                        : textColor\n                });\n\n                // Pack data for mouse event\n                if (triggerEvent) {\n                    textEl.eventData = makeAxisEventDataBase(axisModel);\n                    textEl.eventData.targetType = 'axisLabel';\n                    textEl.eventData.value = labelStr;\n                }\n\n                // FIXME\n                this._dumbGroup.add(textEl);\n                textEl.updateTransform();\n\n                textEls.push(textEl);\n                this.group.add(textEl);\n\n                textEl.decomposeTransform();\n\n            }, this);\n\n            fixMinMaxLabelShow(axisModel, textEls);\n        },\n\n        /**\n         * @private\n         */\n        axisName: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var name = retrieve(opt.axisName, axisModel.get('name'));\n\n            if (!name) {\n                return;\n            }\n\n            var nameLocation = axisModel.get('nameLocation');\n            var nameDirection = opt.nameDirection;\n            var textStyleModel = axisModel.getModel('nameTextStyle');\n            var gap = axisModel.get('nameGap') || 0;\n\n            var extent = this.axisModel.axis.getExtent();\n            var gapSignal = extent[0] > extent[1] ? -1 : 1;\n            var pos = [\n                nameLocation === 'start'\n                    ? extent[0] - gapSignal * gap\n                    : nameLocation === 'end'\n                    ? extent[1] + gapSignal * gap\n                    : (extent[0] + extent[1]) / 2, // 'middle'\n                // Reuse labelOffset.\n                nameLocation === 'middle' ? opt.labelOffset + nameDirection * gap : 0\n            ];\n\n            var labelLayout;\n\n            var nameRotation = axisModel.get('nameRotate');\n            if (nameRotation != null) {\n                nameRotation = nameRotation * PI / 180; // To radian.\n            }\n\n            var axisNameAvailableWidth;\n\n            if (nameLocation === 'middle') {\n                labelLayout = innerTextLayout(\n                    opt.rotation,\n                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n                    nameDirection\n                );\n            }\n            else {\n                labelLayout = endTextLayout(\n                    opt, nameLocation, nameRotation || 0, extent\n                );\n\n                axisNameAvailableWidth = opt.axisNameAvailableWidth;\n                if (axisNameAvailableWidth != null) {\n                    axisNameAvailableWidth = Math.abs(\n                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\n                    );\n                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n                }\n            }\n\n            var textFont = textStyleModel.getFont();\n\n            var truncateOpt = axisModel.get('nameTruncate', true) || {};\n            var ellipsis = truncateOpt.ellipsis;\n            var maxWidth = retrieve(\n                opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth\n            );\n            // FIXME\n            // truncate rich text? (consider performance)\n            var truncatedText = (ellipsis != null && maxWidth != null)\n                ? formatUtil.truncateText(\n                    name, maxWidth, textFont, ellipsis,\n                    {minChar: 2, placeholder: truncateOpt.placeholder}\n                )\n                : name;\n\n            var tooltipOpt = axisModel.get('tooltip', true);\n\n            var mainType = axisModel.mainType;\n            var formatterParams = {\n                componentType: mainType,\n                name: name,\n                $vars: ['name']\n            };\n            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n\n            var textEl = new graphic.Text({\n                // Id for animation\n                anid: 'name',\n\n                __fullText: name,\n                __truncatedText: truncatedText,\n\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: isSilent(axisModel),\n                z2: 1,\n                tooltip: (tooltipOpt && tooltipOpt.show)\n                    ? zrUtil.extend({\n                        content: name,\n                        formatter: function () {\n                            return name;\n                        },\n                        formatterParams: formatterParams\n                    }, tooltipOpt)\n                    : null\n            });\n\n            graphic.setTextStyle(textEl.style, textStyleModel, {\n                text: truncatedText,\n                textFont: textFont,\n                textFill: textStyleModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color'),\n                textAlign: labelLayout.textAlign,\n                textVerticalAlign: labelLayout.textVerticalAlign\n            });\n\n            if (axisModel.get('triggerEvent')) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisName';\n                textEl.eventData.name = name;\n            }\n\n            // FIXME\n            this._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            this.group.add(textEl);\n\n            textEl.decomposeTransform();\n        }\n\n    };\n\n    /**\n     * @public\n     * @static\n     * @param {Object} opt\n     * @param {number} axisRotation in radian\n     * @param {number} textRotation in radian\n     * @param {number} direction\n     * @return {Object} {\n     *  rotation, // according to axis\n     *  textAlign,\n     *  textVerticalAlign\n     * }\n     */\n    var innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n        var rotationDiff = remRadian(textRotation - axisRotation);\n        var textAlign;\n        var textVerticalAlign;\n\n        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n\n            if (rotationDiff > 0 && rotationDiff < PI) {\n                textAlign = direction > 0 ? 'right' : 'left';\n            }\n            else {\n                textAlign = direction > 0 ? 'left' : 'right';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    };\n\n    function endTextLayout(opt, textPosition, textRotate, extent) {\n        var rotationDiff = remRadian(textRotate - opt.rotation);\n        var textAlign;\n        var textVerticalAlign;\n        var inverse = extent[0] > extent[1];\n        var onLeft = (textPosition === 'start' && !inverse)\n            || (textPosition !== 'start' && inverse);\n\n        if (isRadianAroundZero(rotationDiff - PI / 2)) {\n            textVerticalAlign = onLeft ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n            textVerticalAlign = onLeft ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n                textAlign = onLeft ? 'left' : 'right';\n            }\n            else {\n                textAlign = onLeft ? 'right' : 'left';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    function isSilent(axisModel) {\n        var tooltipOpt = axisModel.get('tooltip');\n        return axisModel.get('silent')\n            // Consider mouse cursor, add these restrictions.\n            || !(\n                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\n            );\n    }\n\n    function fixMinMaxLabelShow(axisModel, textEls) {\n        // If min or max are user set, we need to check\n        // If the tick on min(max) are overlap on their neighbour tick\n        // If they are overlapped, we need to hide the min(max) tick label\n        var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n        var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n        var firstLabel = textEls[0];\n        var nextLabel = textEls[1];\n        var lastLabel = textEls[textEls.length - 1];\n        var prevLabel = textEls[textEls.length - 2];\n\n        if (showMinLabel === false) {\n            firstLabel.ignore = true;\n        }\n        else if (axisModel.getMin() != null && isTwoLabelOverlapped(firstLabel, nextLabel)) {\n            showMinLabel ? (nextLabel.ignore = true) : (firstLabel.ignore = true);\n        }\n\n        if (showMaxLabel === false) {\n            lastLabel.ignore = true;\n        }\n        else if (axisModel.getMax() != null && isTwoLabelOverlapped(prevLabel, lastLabel)) {\n            showMaxLabel ? (prevLabel.ignore = true) : (lastLabel.ignore = true);\n        }\n    }\n\n    function isTwoLabelOverlapped(current, next, labelLayout) {\n        // current and next has the same rotation.\n        var firstRect = current && current.getBoundingRect().clone();\n        var nextRect = next && next.getBoundingRect().clone();\n\n        if (!firstRect || !nextRect) {\n            return;\n        }\n\n        // When checking intersect of two rotated labels, we use mRotationBack\n        // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n        var mRotationBack = matrix.identity([]);\n        matrix.rotate(mRotationBack, mRotationBack, -current.rotation);\n\n        firstRect.applyTransform(matrix.mul([], mRotationBack, current.getLocalTransform()));\n        nextRect.applyTransform(matrix.mul([], mRotationBack, next.getLocalTransform()));\n\n        return firstRect.intersect(nextRect);\n    }\n\n\n    /**\n     * @static\n     */\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval) {\n        var rawTick;\n        var scale = axis.scale;\n        return scale.type === 'ordinal'\n            && (\n                typeof interval === 'function'\n                    ? (\n                        rawTick = scale.getTicks()[i],\n                        !interval(rawTick, scale.getLabel(rawTick))\n                    )\n                    : i % (interval + 1)\n            );\n    };\n\n    /**\n     * @static\n     */\n    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n        var interval = model.get('interval');\n        if (interval == null || interval == 'auto') {\n            interval = labelInterval;\n        }\n        return interval;\n    };\n\n    module.exports = AxisBuilder;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/AxisBuilder.js\n// module id = 649\n// module chunks = 0 1 2","\n\n    var numberUtil = require('../util/number');\n    var linearMap = numberUtil.linearMap;\n    var zrUtil = require('zrender/lib/core/util');\n    var axisHelper = require('./axisHelper');\n\n    function fixExtentWithBands(extent, nTick) {\n        var size = extent[1] - extent[0];\n        var len = nTick;\n        var margin = size / len / 2;\n        extent[0] += margin;\n        extent[1] -= margin;\n    }\n\n    var normalizedExtent = [0, 1];\n    /**\n     * @name module:echarts/coord/CartesianAxis\n     * @constructor\n     */\n    var Axis = function (dim, scale, extent) {\n\n        /**\n         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n         * @type {string}\n         */\n        this.dim = dim;\n\n        /**\n         * Axis scale\n         * @type {module:echarts/coord/scale/*}\n         */\n        this.scale = scale;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        this._extent = extent || [0, 0];\n\n        /**\n         * @type {boolean}\n         */\n        this.inverse = false;\n\n        /**\n         * Usually true when axis has a ordinal scale\n         * @type {boolean}\n         */\n        this.onBand = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._labelInterval;\n    };\n\n    Axis.prototype = {\n\n        constructor: Axis,\n\n        /**\n         * If axis extent contain given coord\n         * @param {number} coord\n         * @return {boolean}\n         */\n        contain: function (coord) {\n            var extent = this._extent;\n            var min = Math.min(extent[0], extent[1]);\n            var max = Math.max(extent[0], extent[1]);\n            return coord >= min && coord <= max;\n        },\n\n        /**\n         * If axis extent contain given data\n         * @param {number} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.contain(this.dataToCoord(data));\n        },\n\n        /**\n         * Get coord extent.\n         * @return {Array.<number>}\n         */\n        getExtent: function () {\n            return this._extent.slice();\n        },\n\n        /**\n         * Get precision used for formatting\n         * @param {Array.<number>} [dataExtent]\n         * @return {number}\n         */\n        getPixelPrecision: function (dataExtent) {\n            return numberUtil.getPixelPrecision(\n                dataExtent || this.scale.getExtent(),\n                this._extent\n            );\n        },\n\n        /**\n         * Set coord extent\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var extent = this._extent;\n            extent[0] = start;\n            extent[1] = end;\n        },\n\n        /**\n         * Convert data to coord. Data is the rank if it has a ordinal scale\n         * @param {number} data\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        dataToCoord: function (data, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n            data = scale.normalize(data);\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            return linearMap(data, normalizedExtent, extent, clamp);\n        },\n\n        /**\n         * Convert coord to data. Data is the rank if it has a ordinal scale\n         * @param {number} coord\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        coordToData: function (coord, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            var t = linearMap(coord, extent, normalizedExtent, clamp);\n\n            return this.scale.scale(t);\n        },\n\n        /**\n         * Convert pixel point to data in axis\n         * @param {Array.<number>} point\n         * @param  {boolean} clamp\n         * @return {number} data\n         */\n        pointToData: function (point, clamp) {\n            // Should be implemented in derived class if necessary.\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicksCoords: function (alignWithLabel) {\n            if (this.onBand && !alignWithLabel) {\n                var bands = this.getBands();\n                var coords = [];\n                for (var i = 0; i < bands.length; i++) {\n                    coords.push(bands[i][0]);\n                }\n                if (bands[i - 1]) {\n                    coords.push(bands[i - 1][1]);\n                }\n                return coords;\n            }\n            else {\n                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n            }\n        },\n\n        /**\n         * Coords of labels are on the ticks or on the middle of bands\n         * @return {Array.<number>}\n         */\n        getLabelsCoords: function () {\n            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n        },\n\n        /**\n         * Get bands.\n         *\n         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n         * |---1---|---2---|---3---|---4---|.\n         *\n         * @return {Array}\n         */\n         // FIXME Situation when labels is on ticks\n        getBands: function () {\n            var extent = this.getExtent();\n            var bands = [];\n            var len = this.scale.count();\n            var start = extent[0];\n            var end = extent[1];\n            var span = end - start;\n\n            for (var i = 0; i < len; i++) {\n                bands.push([\n                    span * i / len + start,\n                    span * (i + 1) / len + start\n                ]);\n            }\n            return bands;\n        },\n\n        /**\n         * Get width of band\n         * @return {number}\n         */\n        getBandWidth: function () {\n            var axisExtent = this._extent;\n            var dataExtent = this.scale.getExtent();\n\n            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\n            // Fix #2728, avoid NaN when only one data.\n            len === 0 && (len = 1);\n\n            var size = Math.abs(axisExtent[1] - axisExtent[0]);\n\n            return Math.abs(size) / len;\n        },\n\n        /**\n         * Get interval of the axis label.\n         * @return {number}\n         */\n        getLabelInterval: function () {\n            var labelInterval = this._labelInterval;\n            if (!labelInterval) {\n                var axisModel = this.model;\n                var labelModel = axisModel.getModel('axisLabel');\n                var interval = labelModel.get('interval');\n                if (!(this.type === 'category' && interval === 'auto')) {\n                    labelInterval = interval === 'auto' ? 0 : interval;\n                }\n                else if (this.isHorizontal){\n                    labelInterval = axisHelper.getAxisLabelInterval(\n                        zrUtil.map(this.scale.getTicks(), this.dataToCoord, this),\n                        axisModel.getFormattedLabels(),\n                        labelModel.getFont(),\n                        this.isHorizontal()\n                    );\n                }\n                this._labelInterval = labelInterval;\n            }\n            return labelInterval;\n        }\n\n    };\n\n    module.exports = Axis;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/Axis.js\n// module id = 650\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var axisHelper = require('./axisHelper');\n\n    function getName(obj) {\n        if (zrUtil.isObject(obj) && obj.value != null) {\n            return obj.value;\n        }\n        else {\n            return obj + '';\n        }\n    }\n\n    module.exports = {\n\n        /**\n         * Format labels\n         * @return {Array.<string>}\n         */\n        getFormattedLabels: function () {\n            return axisHelper.getFormattedLabels(\n                this.axis,\n                this.get('axisLabel.formatter')\n            );\n        },\n\n        /**\n         * Get categories\n         */\n        getCategories: function () {\n            return this.get('type') === 'category'\n                && zrUtil.map(this.get('data'), getName);\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n         */\n        getMin: function (origin) {\n            var option = this.option;\n            var min = (!origin && option.rangeStart != null)\n                ? option.rangeStart : option.min;\n\n            if (this.axis && min != null && min !== 'dataMin' && !zrUtil.eqNaN(min)) {\n                min = this.axis.scale.parse(min);\n            }\n            return min;\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n         */\n        getMax: function (origin) {\n            var option = this.option;\n            var max = (!origin && option.rangeEnd != null)\n                ? option.rangeEnd : option.max;\n\n            if (this.axis && max != null && max !== 'dataMax' && !zrUtil.eqNaN(max)) {\n                max = this.axis.scale.parse(max);\n            }\n            return max;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        getNeedCrossZero: function () {\n            var option = this.option;\n            return (option.rangeStart != null || option.rangeEnd != null)\n                ? false : !option.scale;\n        },\n\n        /**\n         * Should be implemented by each axis model if necessary.\n         * @return {module:echarts/model/Component} coordinate system model\n         */\n        getCoordSysModel: zrUtil.noop,\n\n        /**\n         * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n         * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n         */\n        setRange: function (rangeStart, rangeEnd) {\n            this.option.rangeStart = rangeStart;\n            this.option.rangeEnd = rangeEnd;\n        },\n\n        /**\n         * Reset range\n         */\n        resetRange: function () {\n            // rangeStart and rangeEnd is readonly.\n            this.option.rangeStart = this.option.rangeEnd = null;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisModelCommonMixin.js\n// module id = 651\n// module chunks = 0 1 2","/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var symbolUtil = require('../../util/symbol');\n    var graphic = require('../../util/graphic');\n    var numberUtil = require('../../util/number');\n    var labelHelper = require('./labelHelper');\n\n    function getSymbolSize(data, idx) {\n        var symbolSize = data.getItemVisual(idx, 'symbolSize');\n        return symbolSize instanceof Array\n            ? symbolSize.slice()\n            : [+symbolSize, +symbolSize];\n    }\n\n    function getScale(symbolSize) {\n        return [symbolSize[0] / 2, symbolSize[1] / 2];\n    }\n\n    /**\n     * @constructor\n     * @alias {module:echarts/chart/helper/Symbol}\n     * @param {module:echarts/data/List} data\n     * @param {number} idx\n     * @extends {module:zrender/graphic/Group}\n     */\n    function Symbol(data, idx, seriesScope) {\n        graphic.Group.call(this);\n\n        this.updateData(data, idx, seriesScope);\n    }\n\n    var symbolProto = Symbol.prototype;\n\n    function driftSymbol(dx, dy) {\n        this.parent.drift(dx, dy);\n    }\n\n    symbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n        // Remove paths created before\n        this.removeAll();\n\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // var symbolPath = symbolUtil.createSymbol(\n        //     symbolType, -0.5, -0.5, 1, 1, color\n        // );\n        // If width/height are set too small (e.g., set to 1) on ios10\n        // and macOS Sierra, a circle stroke become a rect, no matter what\n        // the scale is set. So we set width/height as 2. See #4150.\n        var symbolPath = symbolUtil.createSymbol(\n            symbolType, -1, -1, 2, 2, color\n        );\n\n        symbolPath.attr({\n            z2: 100,\n            culling: true,\n            scale: [0, 0]\n        });\n        // Rewrite drift method\n        symbolPath.drift = driftSymbol;\n\n        graphic.initProps(symbolPath, {\n            scale: getScale(symbolSize)\n        }, seriesModel, idx);\n        this._symbolType = symbolType;\n\n        this.add(symbolPath);\n    };\n\n    /**\n     * Stop animation\n     * @param {boolean} toLastFrame\n     */\n    symbolProto.stopSymbolAnimation = function (toLastFrame) {\n        this.childAt(0).stopAnimation(toLastFrame);\n    };\n\n    /**\n     * Get symbol path element\n     */\n    symbolProto.getSymbolPath = function () {\n        return this.childAt(0);\n    };\n\n    /**\n     * Get scale(aka, current symbol size).\n     * Including the change caused by animation\n     */\n    symbolProto.getScale = function () {\n        return this.childAt(0).scale;\n    };\n\n    /**\n     * Highlight symbol\n     */\n    symbolProto.highlight = function () {\n        this.childAt(0).trigger('emphasis');\n    };\n\n    /**\n     * Downplay symbol\n     */\n    symbolProto.downplay = function () {\n        this.childAt(0).trigger('normal');\n    };\n\n    /**\n     * @param {number} zlevel\n     * @param {number} z\n     */\n    symbolProto.setZ = function (zlevel, z) {\n        var symbolPath = this.childAt(0);\n        symbolPath.zlevel = zlevel;\n        symbolPath.z = z;\n    };\n\n    symbolProto.setDraggable = function (draggable) {\n        var symbolPath = this.childAt(0);\n        symbolPath.draggable = draggable;\n        symbolPath.cursor = draggable ? 'move' : 'pointer';\n    };\n\n    /**\n     * Update symbol properties\n     * @param  {module:echarts/data/List} data\n     * @param  {number} idx\n     */\n    symbolProto.updateData = function (data, idx, seriesScope) {\n        this.silent = false;\n\n        var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n        var seriesModel = data.hostModel;\n        var symbolSize = getSymbolSize(data, idx);\n\n        if (symbolType !== this._symbolType) {\n            this._createSymbol(symbolType, data, idx, symbolSize);\n        }\n        else {\n            var symbolPath = this.childAt(0);\n            symbolPath.silent = false;\n            graphic.updateProps(symbolPath, {\n                scale: getScale(symbolSize)\n            }, seriesModel, idx);\n        }\n        this._updateCommon(data, idx, symbolSize, seriesScope);\n        this._seriesModel = seriesModel;\n    };\n\n    // Update common properties\n    var normalStyleAccessPath = ['itemStyle', 'normal'];\n    var emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n    var normalLabelAccessPath = ['label', 'normal'];\n    var emphasisLabelAccessPath = ['label', 'emphasis'];\n\n    symbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n        var symbolPath = this.childAt(0);\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // Reset style\n        if (symbolPath.type !== 'image') {\n            symbolPath.useStyle({\n                strokeNoScale: true\n            });\n        }\n\n        seriesScope = seriesScope || null;\n\n        var itemStyle = seriesScope && seriesScope.itemStyle;\n        var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n        var symbolRotate = seriesScope && seriesScope.symbolRotate;\n        var symbolOffset = seriesScope && seriesScope.symbolOffset;\n        var labelModel = seriesScope && seriesScope.labelModel;\n        var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n        var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n        var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n        if (!seriesScope || data.hasItemOption) {\n            var itemModel = data.getItemModel(idx);\n\n            // Color must be excluded.\n            // Because symbol provide setColor individually to set fill and stroke\n            itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n            hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n\n            symbolRotate = itemModel.getShallow('symbolRotate');\n            symbolOffset = itemModel.getShallow('symbolOffset');\n\n            labelModel = itemModel.getModel(normalLabelAccessPath);\n            hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n            hoverAnimation = itemModel.getShallow('hoverAnimation');\n            cursorStyle = itemModel.getShallow('cursor');\n        }\n        else {\n            hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n        }\n\n        var elStyle = symbolPath.style;\n\n        symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n        if (symbolOffset) {\n            symbolPath.attr('position', [\n                numberUtil.parsePercent(symbolOffset[0], symbolSize[0]),\n                numberUtil.parsePercent(symbolOffset[1], symbolSize[1])\n            ]);\n        }\n\n        cursorStyle && symbolPath.attr('cursor', cursorStyle);\n\n        // PENDING setColor before setStyle!!!\n        symbolPath.setColor(color);\n\n        symbolPath.setStyle(itemStyle);\n\n        var opacity = data.getItemVisual(idx, 'opacity');\n        if (opacity != null) {\n            elStyle.opacity = opacity;\n        }\n\n        var valueDim = labelHelper.findLabelValueDim(data);\n\n        if (valueDim != null) {\n            graphic.setText(elStyle, labelModel, color);\n            var normalText = seriesModel.getFormattedLabel(idx, 'normal');\n            var value = data.get(valueDim, idx);\n            elStyle.text = labelModel.getShallow('show')\n                ? zrUtil.retrieve2(\n                    normalText,\n                    value\n                )\n                : null;\n\n            graphic.setText(hoverItemStyle, hoverLabelModel, false);\n            hoverItemStyle.text = hoverLabelModel.getShallow('show')\n                ? zrUtil.retrieve3(\n                    seriesModel.getFormattedLabel(idx, 'emphasis'),\n                    normalText,\n                    value\n                )\n                : null;\n        }\n\n        symbolPath.off('mouseover')\n            .off('mouseout')\n            .off('emphasis')\n            .off('normal');\n\n        symbolPath.hoverStyle = hoverItemStyle;\n\n        graphic.setHoverStyle(symbolPath);\n\n        var scale = getScale(symbolSize);\n\n        if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n            var onEmphasis = function() {\n                var ratio = scale[1] / scale[0];\n                this.animateTo({\n                    scale: [\n                        Math.max(scale[0] * 1.1, scale[0] + 3),\n                        Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)\n                    ]\n                }, 400, 'elasticOut');\n            };\n            var onNormal = function() {\n                this.animateTo({\n                    scale: scale\n                }, 400, 'elasticOut');\n            };\n            symbolPath.on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n    };\n\n    symbolProto.fadeOut = function (cb) {\n        var symbolPath = this.childAt(0);\n        // Avoid mistaken hover when fading out\n        this.silent = symbolPath.silent = true;\n        // Not show text when animating\n        symbolPath.style.text = null;\n        graphic.updateProps(symbolPath, {\n            scale: [0, 0]\n        }, this._seriesModel, this.dataIndex, cb);\n    };\n\n    zrUtil.inherits(Symbol, graphic.Group);\n\n    module.exports = Symbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/Symbol.js\n// module id = 657\n// module chunks = 0 1 2","\n\n    var axisPointerModelHelper = require('../axisPointer/modelHelper');\n\n    /**\n     * Base class of AxisView.\n     */\n    var AxisView = require('../../echarts').extendComponentView({\n\n        type: 'axis',\n\n        /**\n         * @private\n         */\n        _axisPointer: null,\n\n        /**\n         * @protected\n         * @type {string}\n         */\n        axisPointerClass: null,\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n            // FIXME\n            // This process should proformed after coordinate systems updated\n            // (axis scale updated), and should be performed each time update.\n            // So put it here temporarily, although it is not appropriate to\n            // put a model-writing procedure in `view`.\n            this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n\n            AxisView.superApply(this, 'render', arguments);\n\n            updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n        },\n\n        /**\n         * Action handler.\n         * @public\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/model/Global} ecModel\n         * @param {module:echarts/ExtensionAPI} api\n         * @param {Object} payload\n         */\n        updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n            updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            var axisPointer = this._axisPointer;\n            axisPointer && axisPointer.remove(api);\n            AxisView.superApply(this, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            disposeAxisPointer(this, api);\n            AxisView.superApply(this, 'dispose', arguments);\n        }\n\n    });\n\n    function updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n        var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n        if (!Clazz) {\n            return;\n        }\n        var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n        axisPointerModel\n            ? (axisView._axisPointer || (axisView._axisPointer = new Clazz()))\n                .render(axisModel, axisPointerModel, api, forceRender)\n            : disposeAxisPointer(axisView, api);\n    }\n\n    function disposeAxisPointer(axisView, ecModel, api) {\n        var axisPointer = axisView._axisPointer;\n        axisPointer && axisPointer.dispose(ecModel, api);\n        axisView._axisPointer = null;\n    }\n\n    var axisPointerClazz = [];\n\n    AxisView.registerAxisPointerClass = function (type, clazz) {\n        if (__DEV__) {\n            if (axisPointerClazz[type]) {\n                throw new Error('axisPointer ' + type + ' exists');\n            }\n        }\n        axisPointerClazz[type] = clazz;\n    };\n\n    AxisView.getAxisPointerClass = function (type) {\n        return type && axisPointerClazz[type];\n    };\n\n    module.exports = AxisView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/AxisView.js\n// module id = 658\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var helper = {};\n\n    /**\n     * @param {Object} opt {labelInside}\n     * @return {Object} {\n     *  position, rotation, labelDirection, labelOffset,\n     *  tickDirection, labelRotate, labelInterval, z2\n     * }\n     */\n    helper.layout = function (gridModel, axisModel, opt) {\n        opt = opt || {};\n        var grid = gridModel.coordinateSystem;\n        var axis = axisModel.axis;\n        var layout = {};\n\n        var rawAxisPosition = axis.position;\n        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n        var axisDim = axis.dim;\n\n        var rect = grid.getRect();\n        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n        var idx = {left: 0, right: 1, top: 0, bottom: 1, onZero: 2};\n        var axisOffset = axisModel.get('offset') || 0;\n\n        var posBound = axisDim === 'x'\n            ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset]\n            : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n        if (axis.onZero) {\n            var otherAxis = grid.getAxis(axisDim === 'x' ? 'y' : 'x', axis.onZeroAxisIndex);\n            var onZeroCoord = otherAxis.toGlobalCoord(otherAxis.dataToCoord(0));\n            posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n        }\n\n        // Axis position\n        layout.position = [\n            axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0],\n            axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]\n        ];\n\n        // Axis rotation\n        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\n\n        // Tick and label direction, x y is axisDim\n        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\n\n        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n        layout.labelOffset = axis.onZero ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n        if (axisModel.get('axisTick.inside')) {\n            layout.tickDirection = -layout.tickDirection;\n        }\n        if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n            layout.labelDirection = -layout.labelDirection;\n        }\n\n        // Special label rotation\n        var labelRotate = axisModel.get('axisLabel.rotate');\n        layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate;\n\n        // label interval when auto mode.\n        layout.labelInterval = axis.getLabelInterval();\n\n        // Over splitLine and splitArea\n        layout.z2 = 1;\n\n        return layout;\n    };\n\n    module.exports = helper;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/cartesianAxisHelper.js\n// module id = 659\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n\n    /**\n     * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n     * @param {module:echarts/model/Global} ecModel\n     * @return {Object} {point: [x, y], el: ...} point Will not be null.\n     */\n    module.exports = function (finder, ecModel) {\n        var point = [];\n        var seriesIndex = finder.seriesIndex;\n        var seriesModel;\n        if (seriesIndex == null || !(\n            seriesModel = ecModel.getSeriesByIndex(seriesIndex)\n        )) {\n            return {point: []};\n        }\n\n        var data = seriesModel.getData();\n        var dataIndex = modelUtil.queryDataIndex(data, finder);\n        if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n            return {point: []};\n        }\n\n        var el = data.getItemGraphicEl(dataIndex);\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (seriesModel.getTooltipPosition) {\n            point = seriesModel.getTooltipPosition(dataIndex) || [];\n        }\n        else if (coordSys && coordSys.dataToPoint) {\n            point = coordSys.dataToPoint(\n                data.getValues(\n                    zrUtil.map(coordSys.dimensions, function (dim) {\n                        return seriesModel.coordDimToDataDim(dim)[0];\n                    }), dataIndex, true\n                )\n            ) || [];\n        }\n        else if (el) {\n            // Use graphic bounding rect\n            var rect = el.getBoundingRect().clone();\n            rect.applyTransform(el.transform);\n            point = [\n                rect.x + rect.width / 2,\n                rect.y + rect.height / 2\n            ];\n        }\n\n        return {point: point, el: el};\n    };\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/findPointFromSeries.js\n// module id = 660\n// module chunks = 0 1 2","\n\n    var env = require('zrender/lib/core/env');\n    var zrUtil = require('zrender/lib/core/util');\n    var get = require('../../util/model').makeGetter();\n\n    var each = zrUtil.each;\n\n    var globalListener = {};\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Function} handler\n     *      param: {string} currTrigger\n     *      param: {Array.<number>} point\n     */\n    globalListener.register = function (key, api, handler) {\n        if (env.node) {\n            return;\n        }\n\n        var zr = api.getZr();\n        get(zr).records || (get(zr).records = {});\n\n        initGlobalListeners(zr, api);\n\n        var record = get(zr).records[key] || (get(zr).records[key] = {});\n        record.handler = handler;\n    };\n\n    function initGlobalListeners(zr, api) {\n        if (get(zr).initialized) {\n            return;\n        }\n\n        get(zr).initialized = true;\n\n        useHandler('click', zrUtil.curry(doEnter, 'click'));\n        useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove'));\n        // useHandler('mouseout', onLeave);\n        useHandler('globalout', onLeave);\n\n        function useHandler(eventType, cb) {\n            zr.on(eventType, function (e) {\n                var dis = makeDispatchAction(api);\n\n                each(get(zr).records, function (record) {\n                    record && cb(record, e, dis.dispatchAction);\n                });\n\n                dispatchTooltipFinally(dis.pendings, api);\n            });\n        }\n    }\n\n    function dispatchTooltipFinally(pendings, api) {\n        var showLen = pendings.showTip.length;\n        var hideLen = pendings.hideTip.length;\n\n        var actuallyPayload;\n        if (showLen) {\n            actuallyPayload = pendings.showTip[showLen - 1];\n        }\n        else if (hideLen) {\n            actuallyPayload = pendings.hideTip[hideLen - 1];\n        }\n        if (actuallyPayload) {\n            actuallyPayload.dispatchAction = null;\n            api.dispatchAction(actuallyPayload);\n        }\n    }\n\n    function onLeave(record, e, dispatchAction) {\n        record.handler('leave', null, dispatchAction);\n    }\n\n    function doEnter(currTrigger, record, e, dispatchAction) {\n        record.handler(currTrigger, e, dispatchAction);\n    }\n\n    function makeDispatchAction(api) {\n        var pendings = {\n            showTip: [],\n            hideTip: []\n        };\n        // FIXME\n        // better approach?\n        // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n        // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n        // So we have to add \"final stage\" to merge those dispatched actions.\n        var dispatchAction = function (payload) {\n            var pendingList = pendings[payload.type];\n            if (pendingList) {\n                pendingList.push(payload);\n            }\n            else {\n                payload.dispatchAction = dispatchAction;\n                api.dispatchAction(payload);\n            }\n        };\n\n        return {\n            dispatchAction: dispatchAction,\n            pendings: pendings\n        };\n    }\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    globalListener.unregister = function (key, api) {\n        if (env.node) {\n            return;\n        }\n        var zr = api.getZr();\n        var record = (get(zr).records || {})[key];\n        if (record) {\n            get(zr).records[key] = null;\n        }\n    };\n\n    module.exports = globalListener;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/globalListener.js\n// module id = 661\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var textContain = require('zrender/lib/contain/text');\n    var formatUtil = require('../../util/format');\n    var matrix = require('zrender/lib/core/matrix');\n    var axisHelper = require('../../coord/axisHelper');\n    var AxisBuilder = require('../axis/AxisBuilder');\n\n    var helper = {};\n\n    /**\n     * @param {module:echarts/model/Model} axisPointerModel\n     */\n    helper.buildElStyle = function (axisPointerModel) {\n        var axisPointerType = axisPointerModel.get('type');\n        var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n        var style;\n        if (axisPointerType === 'line') {\n            style = styleModel.getLineStyle();\n            style.fill = null;\n        }\n        else if (axisPointerType === 'shadow') {\n            style = styleModel.getAreaStyle();\n            style.stroke = null;\n        }\n        return style;\n    };\n\n    /**\n     * @param {Function} labelPos {align, verticalAlign, position}\n     */\n    helper.buildLabelElOption = function (\n        elOption, axisModel, axisPointerModel, api, labelPos\n    ) {\n        var value = axisPointerModel.get('value');\n        var text = helper.getValueLabel(\n            value, axisModel.axis, axisModel.ecModel,\n            axisPointerModel.get('seriesDataIndices'),\n            {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            }\n        );\n        var labelModel = axisPointerModel.getModel('label');\n        var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n\n        var font = labelModel.getFont();\n        var textRect = textContain.getBoundingRect(text, font);\n\n        var position = labelPos.position;\n        var width = textRect.width + paddings[1] + paddings[3];\n        var height = textRect.height + paddings[0] + paddings[2];\n\n        // Adjust by align.\n        var align = labelPos.align;\n        align === 'right' && (position[0] -= width);\n        align === 'center' && (position[0] -= width / 2);\n        var verticalAlign = labelPos.verticalAlign;\n        verticalAlign === 'bottom' && (position[1] -= height);\n        verticalAlign === 'middle' && (position[1] -= height / 2);\n\n        // Not overflow ec container\n        confineInContainer(position, width, height, api);\n\n        var bgColor = labelModel.get('backgroundColor');\n        if (!bgColor || bgColor === 'auto') {\n            bgColor = axisModel.get('axisLine.lineStyle.color');\n        }\n\n        elOption.label = {\n            shape: {x: 0, y: 0, width: width, height: height, r: labelModel.get('borderRadius')},\n            position: position.slice(),\n            // TODO: rich\n            style: {\n                text: text,\n                textFont: font,\n                textFill: labelModel.getTextColor(),\n                textPosition: 'inside',\n                fill: bgColor,\n                stroke: labelModel.get('borderColor') || 'transparent',\n                lineWidth: labelModel.get('borderWidth') || 0,\n                shadowBlur: labelModel.get('shadowBlur'),\n                shadowColor: labelModel.get('shadowColor'),\n                shadowOffsetX: labelModel.get('shadowOffsetX'),\n                shadowOffsetY: labelModel.get('shadowOffsetY')\n            },\n            // Lable should be over axisPointer.\n            z2: 10\n        };\n    };\n\n    // Do not overflow ec container\n    function confineInContainer(position, width, height, api) {\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n        position[0] = Math.min(position[0] + width, viewWidth) - width;\n        position[1] = Math.min(position[1] + height, viewHeight) - height;\n        position[0] = Math.max(position[0], 0);\n        position[1] = Math.max(position[1], 0);\n    }\n\n    /**\n     * @param {number} value\n     * @param {module:echarts/coord/Axis} axis\n     * @param {module:echarts/model/Global} ecModel\n     * @param {Object} opt\n     * @param {Array.<Object>} seriesDataIndices\n     * @param {number|string} opt.precision 'auto' or a number\n     * @param {string|Function} opt.formatter label formatter\n     */\n    helper.getValueLabel = function (value, axis, ecModel, seriesDataIndices, opt) {\n        var text = axis.scale.getLabel(\n            // If `precision` is set, width can be fixed (like '12.00500'), which\n            // helps to debounce when when moving label.\n            value, {precision: opt.precision}\n        );\n        var formatter = opt.formatter;\n\n        if (formatter) {\n            var params = {\n                value: axisHelper.getAxisRawValue(axis, value),\n                seriesData: []\n            };\n            zrUtil.each(seriesDataIndices, function (idxItem) {\n                var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                var dataIndex = idxItem.dataIndexInside;\n                var dataParams = series && series.getDataParams(dataIndex);\n                dataParams && params.seriesData.push(dataParams);\n            });\n\n            if (zrUtil.isString(formatter)) {\n                text = formatter.replace('{value}', text);\n            }\n            else if (zrUtil.isFunction(formatter)) {\n                text = formatter(params);\n            }\n        }\n\n        return text;\n    };\n\n    /**\n     * @param {module:echarts/coord/Axis} axis\n     * @param {number} value\n     * @param {Object} layoutInfo {\n     *  rotation, position, labelOffset, labelDirection, labelMargin\n     * }\n     */\n    helper.getTransformedPosition = function (axis, value, layoutInfo) {\n        var transform = matrix.create();\n        matrix.rotate(transform, transform, layoutInfo.rotation);\n        matrix.translate(transform, transform, layoutInfo.position);\n\n        return graphic.applyTransform([\n            axis.dataToCoord(value),\n            (layoutInfo.labelOffset || 0)\n                + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)\n        ], transform);\n    };\n\n    helper.buildCartesianSingleLabelElOption = function (\n        value, elOption, layoutInfo, axisModel, axisPointerModel, api\n    ) {\n        var textLayout = AxisBuilder.innerTextLayout(\n            layoutInfo.rotation, 0, layoutInfo.labelDirection\n        );\n        layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n        helper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n            position: helper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n            align: textLayout.textAlign,\n            verticalAlign: textLayout.textVerticalAlign\n        });\n    };\n\n    /**\n     * @param {Array.<number>} p1\n     * @param {Array.<number>} p2\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeLineShape = function (p1, p2, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x1: p1[xDimIndex],\n            y1: p1[1 - xDimIndex],\n            x2: p2[xDimIndex],\n            y2: p2[1 - xDimIndex]\n        };\n    };\n\n    /**\n     * @param {Array.<number>} xy\n     * @param {Array.<number>} wh\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeRectShape = function (xy, wh, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x: xy[xDimIndex],\n            y: xy[1 - xDimIndex],\n            width: wh[xDimIndex],\n            height: wh[1 - xDimIndex]\n        };\n    };\n\n    helper.makeSectorShape = function (cx, cy, r0, r, startAngle, endAngle) {\n        return {\n            cx: cx,\n            cy: cy,\n            r0: r0,\n            r: r,\n            startAngle: startAngle,\n            endAngle: endAngle,\n            clockwise: true\n        };\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/viewHelper.js\n// module id = 662\n// module chunks = 0 1 2","'use strict';\n\n\n    var ComponentModel = require('../../model/Component');\n    var zrUtil = require('zrender/lib/core/util');\n    var axisModelCreator = require('../axisModelCreator');\n\n    var AxisModel = ComponentModel.extend({\n\n        type: 'cartesian2dAxis',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Axis2D}\n         */\n        axis: null,\n\n        /**\n         * @override\n         */\n        init: function () {\n            AxisModel.superApply(this, 'init', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function () {\n            AxisModel.superApply(this, 'mergeOption', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        restoreData: function () {\n            AxisModel.superApply(this, 'restoreData', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         * @return {module:echarts/model/Component}\n         */\n        getCoordSysModel: function () {\n            return this.ecModel.queryComponents({\n                mainType: 'grid',\n                index: this.option.gridIndex,\n                id: this.option.gridId\n            })[0];\n        }\n\n    });\n\n    function getAxisType(axisDim, option) {\n        // Default axis with data is category axis\n        return option.type || (option.data ? 'category' : 'value');\n    }\n\n    zrUtil.merge(AxisModel.prototype, require('../axisModelCommonMixin'));\n\n    var extraOption = {\n        // gridIndex: 0,\n        // gridId: '',\n\n        // Offset is for multiple axis on the same position\n        offset: 0\n    };\n\n    axisModelCreator('x', AxisModel, getAxisType, extraOption);\n    axisModelCreator('y', AxisModel, getAxisType, extraOption);\n\n    module.exports = AxisModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/AxisModel.js\n// module id = 663\n// module chunks = 0 1 2","\n\n    var classUtil = require('../../util/clazz');\n    var set = classUtil.set;\n    var get = classUtil.get;\n\n    module.exports = {\n        clearColorPalette: function () {\n            set(this, 'colorIdx', 0);\n            set(this, 'colorNameMap', {});\n        },\n\n        getColorFromPalette: function (name, scope) {\n            scope = scope || this;\n            var colorIdx = get(scope, 'colorIdx') || 0;\n            var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {});\n            // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n            if (colorNameMap.hasOwnProperty(name)) {\n                return colorNameMap[name];\n            }\n            var colorPalette = this.get('color', true) || [];\n            if (!colorPalette.length) {\n                return;\n            }\n\n            var color = colorPalette[colorIdx];\n            if (name) {\n                colorNameMap[name] = color;\n            }\n            set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n\n            return color;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/colorPalette.js\n// module id = 664\n// module chunks = 0 1 2","/**\n * For testable.\n */\n\n\n    var numberUtil = require('../util/number');\n\n    var roundNumber = numberUtil.round;\n\n    var helper = {};\n\n    /**\n     * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n     *                                Should be extent[0] < extent[1].\n     * @param {number} splitNumber splitNumber should be >= 1.\n     * @param {number} [minInterval]\n     * @param {number} [maxInterval]\n     * @return {Object} {interval, intervalPrecision, niceTickExtent}\n     */\n    helper.intervalScaleNiceTicks = function (extent, splitNumber, minInterval, maxInterval) {\n        var result = {};\n        var span = extent[1] - extent[0];\n\n        var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n        if (minInterval != null && interval < minInterval) {\n            interval = result.interval = minInterval;\n        }\n        if (maxInterval != null && interval > maxInterval) {\n            interval = result.interval = maxInterval;\n        }\n        // Tow more digital for tick.\n        var precision = result.intervalPrecision = helper.getIntervalPrecision(interval);\n        // Niced extent inside original extent\n        var niceTickExtent = result.niceTickExtent = [\n            roundNumber(Math.ceil(extent[0] / interval) * interval, precision),\n            roundNumber(Math.floor(extent[1] / interval) * interval, precision)\n        ];\n\n        helper.fixExtent(niceTickExtent, extent);\n\n        return result;\n    };\n\n    /**\n     * @param {number} interval\n     * @return {number} interval precision\n     */\n    helper.getIntervalPrecision = function (interval) {\n        // Tow more digital for tick.\n        return numberUtil.getPrecisionSafe(interval) + 2;\n    };\n\n    function clamp(niceTickExtent, idx, extent) {\n        niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n    }\n\n    // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n    helper.fixExtent = function (niceTickExtent, extent) {\n        !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n        !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n        clamp(niceTickExtent, 0, extent);\n        clamp(niceTickExtent, 1, extent);\n        if (niceTickExtent[0] > niceTickExtent[1]) {\n            niceTickExtent[0] = niceTickExtent[1];\n        }\n    };\n\n    helper.intervalScaleGetTicks = function (interval, extent, niceTickExtent, intervalPrecision) {\n        var ticks = [];\n\n        // If interval is 0, return [];\n        if (!interval) {\n            return ticks;\n        }\n\n        // Consider this case: using dataZoom toolbox, zoom and zoom.\n        var safeLimit = 10000;\n\n        if (extent[0] < niceTickExtent[0]) {\n            ticks.push(extent[0]);\n        }\n        var tick = niceTickExtent[0];\n\n        while (tick <= niceTickExtent[1]) {\n            ticks.push(tick);\n            // Avoid rounding error\n            tick = roundNumber(tick + interval, intervalPrecision);\n            if (tick === ticks[ticks.length - 1]) {\n                // Consider out of safe float point, e.g.,\n                // -3711126.9907707 + 2e-10 === -3711126.9907707\n                break;\n            }\n            if (ticks.length > safeLimit) {\n                return [];\n            }\n        }\n        // Consider this case: the last item of ticks is smaller\n        // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n        if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n            ticks.push(extent[1]);\n        }\n\n        return ticks;\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/helper.js\n// module id = 665\n// module chunks = 0 1 2","\n\n    var lib = {};\n\n    var ORIGIN_METHOD = '\\0__throttleOriginMethod';\n    var RATE = '\\0__throttleRate';\n    var THROTTLE_TYPE = '\\0__throttleType';\n\n    /**\n     * @public\n     * @param {(Function)} fn\n     * @param {number} [delay=0] Unit: ms.\n     * @param {boolean} [debounce=false]\n     *        true: If call interval less than `delay`, only the last call works.\n     *        false: If call interval less than `delay, call works on fixed rate.\n     * @return {(Function)} throttled fn.\n     */\n    lib.throttle = function (fn, delay, debounce) {\n\n        var currCall;\n        var lastCall = 0;\n        var lastExec = 0;\n        var timer = null;\n        var diff;\n        var scope;\n        var args;\n        var debounceNextCall;\n\n        delay = delay || 0;\n\n        function exec() {\n            lastExec = (new Date()).getTime();\n            timer = null;\n            fn.apply(scope, args || []);\n        }\n\n        var cb = function () {\n            currCall = (new Date()).getTime();\n            scope = this;\n            args = arguments;\n            var thisDelay = debounceNextCall || delay;\n            var thisDebounce = debounceNextCall || debounce;\n            debounceNextCall = null;\n            diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n\n            clearTimeout(timer);\n\n            if (thisDebounce) {\n                timer = setTimeout(exec, thisDelay);\n            }\n            else {\n                if (diff >= 0) {\n                    exec();\n                }\n                else {\n                    timer = setTimeout(exec, -diff);\n                }\n            }\n\n            lastCall = currCall;\n        };\n\n        /**\n         * Clear throttle.\n         * @public\n         */\n        cb.clear = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n\n        /**\n         * Enable debounce once.\n         */\n        cb.debounceNextCall = function (debounceDelay) {\n            debounceNextCall = debounceDelay;\n        };\n\n        return cb;\n    };\n\n    /**\n     * Create throttle method or update throttle rate.\n     *\n     * @example\n     * ComponentView.prototype.render = function () {\n     *     ...\n     *     throttle.createOrUpdate(\n     *         this,\n     *         '_dispatchAction',\n     *         this.model.get('throttle'),\n     *         'fixRate'\n     *     );\n     * };\n     * ComponentView.prototype.remove = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     * ComponentView.prototype.dispose = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     * @param {number} [rate]\n     * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n     * @return {Function} throttled function.\n     */\n    lib.createOrUpdate = function (obj, fnAttr, rate, throttleType) {\n        var fn = obj[fnAttr];\n\n        if (!fn) {\n            return;\n        }\n\n        var originFn = fn[ORIGIN_METHOD] || fn;\n        var lastThrottleType = fn[THROTTLE_TYPE];\n        var lastRate = fn[RATE];\n\n        if (lastRate !== rate || lastThrottleType !== throttleType) {\n            if (rate == null || !throttleType) {\n                return (obj[fnAttr] = originFn);\n            }\n\n            fn = obj[fnAttr] = lib.throttle(\n                originFn, rate, throttleType === 'debounce'\n            );\n            fn[ORIGIN_METHOD] = originFn;\n            fn[THROTTLE_TYPE] = throttleType;\n            fn[RATE] = rate;\n        }\n\n        return fn;\n    };\n\n    /**\n     * Clear throttle. Example see throttle.createOrUpdate.\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     */\n    lib.clear = function (obj, fnAttr) {\n        var fn = obj[fnAttr];\n        if (fn && fn[ORIGIN_METHOD]) {\n            obj[fnAttr] = fn[ORIGIN_METHOD];\n        }\n    };\n\n    module.exports = lib;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/throttle.js\n// module id = 666\n// module chunks = 0 1 2","'use strict';\n/**\n * @module zrender/Element\n */\n\n\n    var guid = require('./core/guid');\n    var Eventful = require('./mixin/Eventful');\n    var Transformable = require('./mixin/Transformable');\n    var Animatable = require('./mixin/Animatable');\n    var zrUtil = require('./core/util');\n\n    /**\n     * @alias module:zrender/Element\n     * @constructor\n     * @extends {module:zrender/mixin/Animatable}\n     * @extends {module:zrender/mixin/Transformable}\n     * @extends {module:zrender/mixin/Eventful}\n     */\n    var Element = function (opts) {\n\n        Transformable.call(this, opts);\n        Eventful.call(this, opts);\n        Animatable.call(this, opts);\n\n        /**\n         * 画布元素ID\n         * @type {string}\n         */\n        this.id = opts.id || guid();\n    };\n\n    Element.prototype = {\n\n        /**\n         * 元素类型\n         * Element type\n         * @type {string}\n         */\n        type: 'element',\n\n        /**\n         * 元素名字\n         * Element name\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n         * ZRender instance will be assigned when element is associated with zrender\n         * @name module:/zrender/Element#__zr\n         * @type {module:zrender/ZRender}\n         */\n        __zr: null,\n\n        /**\n         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n         * If ignore drawing and events of the element object\n         * @name module:/zrender/Element#ignore\n         * @type {boolean}\n         * @default false\n         */\n        ignore: false,\n\n        /**\n         * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n         * 该路径会继承被裁减对象的变换\n         * @type {module:zrender/graphic/Path}\n         * @see http://www.w3.org/TR/2dcontext/#clipping-region\n         * @readOnly\n         */\n        clipPath: null,\n\n        /**\n         * Drift element\n         * @param  {number} dx dx on the global space\n         * @param  {number} dy dy on the global space\n         */\n        drift: function (dx, dy) {\n            switch (this.draggable) {\n                case 'horizontal':\n                    dy = 0;\n                    break;\n                case 'vertical':\n                    dx = 0;\n                    break;\n            }\n\n            var m = this.transform;\n            if (!m) {\n                m = this.transform = [1, 0, 0, 1, 0, 0];\n            }\n            m[4] += dx;\n            m[5] += dy;\n\n            this.decomposeTransform();\n            this.dirty(false);\n        },\n\n        /**\n         * Hook before update\n         */\n        beforeUpdate: function () {},\n        /**\n         * Hook after update\n         */\n        afterUpdate: function () {},\n        /**\n         * Update each frame\n         */\n        update: function () {\n            this.updateTransform();\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {},\n\n        /**\n         * @protected\n         */\n        attrKV: function (key, value) {\n            if (key === 'position' || key === 'scale' || key === 'origin') {\n                // Copy the array\n                if (value) {\n                    var target = this[key];\n                    if (!target) {\n                        target = this[key] = [];\n                    }\n                    target[0] = value[0];\n                    target[1] = value[1];\n                }\n            }\n            else {\n                this[key] = value;\n            }\n        },\n\n        /**\n         * Hide the element\n         */\n        hide: function () {\n            this.ignore = true;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * Show the element\n         */\n        show: function () {\n            this.ignore = false;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * @param {string|Object} key\n         * @param {*} value\n         */\n        attr: function (key, value) {\n            if (typeof key === 'string') {\n                this.attrKV(key, value);\n            }\n            else if (zrUtil.isObject(key)) {\n                for (var name in key) {\n                    if (key.hasOwnProperty(name)) {\n                        this.attrKV(name, key[name]);\n                    }\n                }\n            }\n\n            this.dirty(false);\n\n            return this;\n        },\n\n        /**\n         * @param {module:zrender/graphic/Path} clipPath\n         */\n        setClipPath: function (clipPath) {\n            var zr = this.__zr;\n            if (zr) {\n                clipPath.addSelfToZr(zr);\n            }\n\n            // Remove previous clip path\n            if (this.clipPath && this.clipPath !== clipPath) {\n                this.removeClipPath();\n            }\n\n            this.clipPath = clipPath;\n            clipPath.__zr = zr;\n            clipPath.__clipTarget = this;\n\n            this.dirty(false);\n        },\n\n        /**\n         */\n        removeClipPath: function () {\n            var clipPath = this.clipPath;\n            if (clipPath) {\n                if (clipPath.__zr) {\n                    clipPath.removeSelfFromZr(clipPath.__zr);\n                }\n\n                clipPath.__zr = null;\n                clipPath.__clipTarget = null;\n                this.clipPath = null;\n\n                this.dirty(false);\n            }\n        },\n\n        /**\n         * Add self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        addSelfToZr: function (zr) {\n            this.__zr = zr;\n            // 添加动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.addAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.addSelfToZr(zr);\n            }\n        },\n\n        /**\n         * Remove self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        removeSelfFromZr: function (zr) {\n            this.__zr = null;\n            // 移除动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.removeAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.removeSelfFromZr(zr);\n            }\n        }\n    };\n\n    zrUtil.mixin(Element, Animatable);\n    zrUtil.mixin(Element, Transformable);\n    zrUtil.mixin(Element, Eventful);\n\n    module.exports = Element;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Element.js\n// module id = 667\n// module chunks = 0 1 2","/**\n * @module echarts/animation/Animator\n */\n\n\n    var Clip = require('./Clip');\n    var color = require('../tool/color');\n    var util = require('../core/util');\n    var isArrayLike = util.isArrayLike;\n\n    var arraySlice = Array.prototype.slice;\n\n    function defaultGetter(target, key) {\n        return target[key];\n    }\n\n    function defaultSetter(target, key, value) {\n        target[key] = value;\n    }\n\n    /**\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} percent\n     * @return {number}\n     */\n    function interpolateNumber(p0, p1, percent) {\n        return (p1 - p0) * percent + p0;\n    }\n\n    /**\n     * @param  {string} p0\n     * @param  {string} p1\n     * @param  {number} percent\n     * @return {string}\n     */\n    function interpolateString(p0, p1, percent) {\n        return percent > 0.5 ? p1 : p0;\n    }\n\n    /**\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {number} percent\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function interpolateArray(p0, p1, percent, out, arrDim) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = interpolateNumber(p0[i], p1[i], percent);\n            }\n        }\n        else {\n            var len2 = len && p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = interpolateNumber(\n                        p0[i][j], p1[i][j], percent\n                    );\n                }\n            }\n        }\n    }\n\n    // arr0 is source array, arr1 is target array.\n    // Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n    function fillArr(arr0, arr1, arrDim) {\n        var arr0Len = arr0.length;\n        var arr1Len = arr1.length;\n        if (arr0Len !== arr1Len) {\n            // FIXME Not work for TypedArray\n            var isPreviousLarger = arr0Len > arr1Len;\n            if (isPreviousLarger) {\n                // Cut the previous\n                arr0.length = arr1Len;\n            }\n            else {\n                // Fill the previous\n                for (var i = arr0Len; i < arr1Len; i++) {\n                    arr0.push(\n                        arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i])\n                    );\n                }\n            }\n        }\n        // Handling NaN value\n        var len2 = arr0[0] && arr0[0].length;\n        for (var i = 0; i < arr0.length; i++) {\n            if (arrDim === 1) {\n                if (isNaN(arr0[i])) {\n                    arr0[i] = arr1[i];\n                }\n            }\n            else {\n                for (var j = 0; j < len2; j++) {\n                    if (isNaN(arr0[i][j])) {\n                        arr0[i][j] = arr1[i][j];\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @param  {Array} arr0\n     * @param  {Array} arr1\n     * @param  {number} arrDim\n     * @return {boolean}\n     */\n    function isArraySame(arr0, arr1, arrDim) {\n        if (arr0 === arr1) {\n            return true;\n        }\n        var len = arr0.length;\n        if (len !== arr1.length) {\n            return false;\n        }\n        if (arrDim === 1) {\n            for (var i = 0; i < len; i++) {\n                if (arr0[i] !== arr1[i]) {\n                    return false;\n                }\n            }\n        }\n        else {\n            var len2 = arr0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    if (arr0[i][j] !== arr1[i][j]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Catmull Rom interpolate array\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {Array} p2\n     * @param  {Array} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function catmullRomInterpolateArray(\n        p0, p1, p2, p3, t, t2, t3, out, arrDim\n    ) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = catmullRomInterpolate(\n                    p0[i], p1[i], p2[i], p3[i], t, t2, t3\n                );\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = catmullRomInterpolate(\n                        p0[i][j], p1[i][j], p2[i][j], p3[i][j],\n                        t, t2, t3\n                    );\n                }\n            }\n        }\n    }\n\n    /**\n     * Catmull Rom interpolate number\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @return {number}\n     */\n    function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    function cloneValue(value) {\n        if (isArrayLike(value)) {\n            var len = value.length;\n            if (isArrayLike(value[0])) {\n                var ret = [];\n                for (var i = 0; i < len; i++) {\n                    ret.push(arraySlice.call(value[i]));\n                }\n                return ret;\n            }\n\n            return arraySlice.call(value);\n        }\n\n        return value;\n    }\n\n    function rgba2String(rgba) {\n        rgba[0] = Math.floor(rgba[0]);\n        rgba[1] = Math.floor(rgba[1]);\n        rgba[2] = Math.floor(rgba[2]);\n\n        return 'rgba(' + rgba.join(',') + ')';\n    }\n\n    function getArrayDim(keyframes) {\n        var lastValue = keyframes[keyframes.length - 1].value;\n        return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n    }\n\n    function createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n        var getter = animator._getter;\n        var setter = animator._setter;\n        var useSpline = easing === 'spline';\n\n        var trackLen = keyframes.length;\n        if (!trackLen) {\n            return;\n        }\n        // Guess data type\n        var firstVal = keyframes[0].value;\n        var isValueArray = isArrayLike(firstVal);\n        var isValueColor = false;\n        var isValueString = false;\n\n        // For vertices morphing\n        var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n\n        var trackMaxTime;\n        // Sort keyframe as ascending\n        keyframes.sort(function(a, b) {\n            return a.time - b.time;\n        });\n\n        trackMaxTime = keyframes[trackLen - 1].time;\n        // Percents of each keyframe\n        var kfPercents = [];\n        // Value of each keyframe\n        var kfValues = [];\n        var prevValue = keyframes[0].value;\n        var isAllValueEqual = true;\n        for (var i = 0; i < trackLen; i++) {\n            kfPercents.push(keyframes[i].time / trackMaxTime);\n            // Assume value is a color when it is a string\n            var value = keyframes[i].value;\n\n            // Check if value is equal, deep check if value is array\n            if (!((isValueArray && isArraySame(value, prevValue, arrDim))\n                || (!isValueArray && value === prevValue))) {\n                isAllValueEqual = false;\n            }\n            prevValue = value;\n\n            // Try converting a string to a color array\n            if (typeof value == 'string') {\n                var colorArray = color.parse(value);\n                if (colorArray) {\n                    value = colorArray;\n                    isValueColor = true;\n                }\n                else {\n                    isValueString = true;\n                }\n            }\n            kfValues.push(value);\n        }\n        if (!forceAnimate && isAllValueEqual) {\n            return;\n        }\n\n        var lastValue = kfValues[trackLen - 1];\n        // Polyfill array and NaN value\n        for (var i = 0; i < trackLen - 1; i++) {\n            if (isValueArray) {\n                fillArr(kfValues[i], lastValue, arrDim);\n            }\n            else {\n                if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n                    kfValues[i] = lastValue;\n                }\n            }\n        }\n        isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim);\n\n        // Cache the key of last frame to speed up when\n        // animation playback is sequency\n        var lastFrame = 0;\n        var lastFramePercent = 0;\n        var start;\n        var w;\n        var p0;\n        var p1;\n        var p2;\n        var p3;\n\n        if (isValueColor) {\n            var rgba = [0, 0, 0, 0];\n        }\n\n        var onframe = function (target, percent) {\n            // Find the range keyframes\n            // kf1-----kf2---------current--------kf3\n            // find kf2 and kf3 and do interpolation\n            var frame;\n            // In the easing function like elasticOut, percent may less than 0\n            if (percent < 0) {\n                frame = 0;\n            }\n            else if (percent < lastFramePercent) {\n                // Start from next key\n                // PENDING start from lastFrame ?\n                start = Math.min(lastFrame + 1, trackLen - 1);\n                for (frame = start; frame >= 0; frame--) {\n                    if (kfPercents[frame] <= percent) {\n                        break;\n                    }\n                }\n                // PENDING really need to do this ?\n                frame = Math.min(frame, trackLen - 2);\n            }\n            else {\n                for (frame = lastFrame; frame < trackLen; frame++) {\n                    if (kfPercents[frame] > percent) {\n                        break;\n                    }\n                }\n                frame = Math.min(frame - 1, trackLen - 2);\n            }\n            lastFrame = frame;\n            lastFramePercent = percent;\n\n            var range = (kfPercents[frame + 1] - kfPercents[frame]);\n            if (range === 0) {\n                return;\n            }\n            else {\n                w = (percent - kfPercents[frame]) / range;\n            }\n            if (useSpline) {\n                p1 = kfValues[frame];\n                p0 = kfValues[frame === 0 ? frame : frame - 1];\n                p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n                p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n                if (isValueArray) {\n                    catmullRomInterpolateArray(\n                        p0, p1, p2, p3, w, w * w, w * w * w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        value = catmullRomInterpolateArray(\n                            p0, p1, p2, p3, w, w * w, w * w * w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(p1, p2, w);\n                    }\n                    else {\n                        value = catmullRomInterpolate(\n                            p0, p1, p2, p3, w, w * w, w * w * w\n                        );\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n            else {\n                if (isValueArray) {\n                    interpolateArray(\n                        kfValues[frame], kfValues[frame + 1], w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        interpolateArray(\n                            kfValues[frame], kfValues[frame + 1], w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    else {\n                        value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n        };\n\n        var clip = new Clip({\n            target: animator._target,\n            life: trackMaxTime,\n            loop: animator._loop,\n            delay: animator._delay,\n            onframe: onframe,\n            ondestroy: oneTrackDone\n        });\n\n        if (easing && easing !== 'spline') {\n            clip.easing = easing;\n        }\n\n        return clip;\n    }\n\n    /**\n     * @alias module:zrender/animation/Animator\n     * @constructor\n     * @param {Object} target\n     * @param {boolean} loop\n     * @param {Function} getter\n     * @param {Function} setter\n     */\n    var Animator = function(target, loop, getter, setter) {\n        this._tracks = {};\n        this._target = target;\n\n        this._loop = loop || false;\n\n        this._getter = getter || defaultGetter;\n        this._setter = setter || defaultSetter;\n\n        this._clipCount = 0;\n\n        this._delay = 0;\n\n        this._doneList = [];\n\n        this._onframeList = [];\n\n        this._clipList = [];\n    };\n\n    Animator.prototype = {\n        /**\n         * 设置动画关键帧\n         * @param  {number} time 关键帧时间，单位是ms\n         * @param  {Object} props 关键帧的属性值，key-value表示\n         * @return {module:zrender/animation/Animator}\n         */\n        when: function(time /* ms */, props) {\n            var tracks = this._tracks;\n            for (var propName in props) {\n                if (!props.hasOwnProperty(propName)) {\n                    continue;\n                }\n\n                if (!tracks[propName]) {\n                    tracks[propName] = [];\n                    // Invalid value\n                    var value = this._getter(this._target, propName);\n                    if (value == null) {\n                        // zrLog('Invalid property ' + propName);\n                        continue;\n                    }\n                    // If time is 0\n                    //  Then props is given initialize value\n                    // Else\n                    //  Initialize value from current prop value\n                    if (time !== 0) {\n                        tracks[propName].push({\n                            time: 0,\n                            value: cloneValue(value)\n                        });\n                    }\n                }\n                tracks[propName].push({\n                    time: time,\n                    value: props[propName]\n                });\n            }\n            return this;\n        },\n        /**\n         * 添加动画每一帧的回调函数\n         * @param  {Function} callback\n         * @return {module:zrender/animation/Animator}\n         */\n        during: function (callback) {\n            this._onframeList.push(callback);\n            return this;\n        },\n\n        pause: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].pause();\n            }\n            this._paused = true;\n        },\n\n        resume: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].resume();\n            }\n            this._paused = false;\n        },\n\n        isPaused: function () {\n            return !!this._paused;\n        },\n\n        _doneCallback: function () {\n            // Clear all tracks\n            this._tracks = {};\n            // Clear all clips\n            this._clipList.length = 0;\n\n            var doneList = this._doneList;\n            var len = doneList.length;\n            for (var i = 0; i < len; i++) {\n                doneList[i].call(this);\n            }\n        },\n        /**\n         * 开始执行动画\n         * @param  {string|Function} [easing]\n         *         动画缓动函数，详见{@link module:zrender/animation/easing}\n         * @param  {boolean} forceAnimate\n         * @return {module:zrender/animation/Animator}\n         */\n        start: function (easing, forceAnimate) {\n\n            var self = this;\n            var clipCount = 0;\n\n            var oneTrackDone = function() {\n                clipCount--;\n                if (!clipCount) {\n                    self._doneCallback();\n                }\n            };\n\n            var lastClip;\n            for (var propName in this._tracks) {\n                if (!this._tracks.hasOwnProperty(propName)) {\n                    continue;\n                }\n                var clip = createTrackClip(\n                    this, easing, oneTrackDone,\n                    this._tracks[propName], propName, forceAnimate\n                );\n                if (clip) {\n                    this._clipList.push(clip);\n                    clipCount++;\n\n                    // If start after added to animation\n                    if (this.animation) {\n                        this.animation.addClip(clip);\n                    }\n\n                    lastClip = clip;\n                }\n            }\n\n            // Add during callback on the last clip\n            if (lastClip) {\n                var oldOnFrame = lastClip.onframe;\n                lastClip.onframe = function (target, percent) {\n                    oldOnFrame(target, percent);\n\n                    for (var i = 0; i < self._onframeList.length; i++) {\n                        self._onframeList[i](target, percent);\n                    }\n                };\n            }\n\n            // This optimization will help the case that in the upper application\n            // the view may be refreshed frequently, where animation will be\n            // called repeatly but nothing changed.\n            if (!clipCount) {\n                this._doneCallback();\n            }\n            return this;\n        },\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stop: function (forwardToLast) {\n            var clipList = this._clipList;\n            var animation = this.animation;\n            for (var i = 0; i < clipList.length; i++) {\n                var clip = clipList[i];\n                if (forwardToLast) {\n                    // Move to last frame before stop\n                    clip.onframe(this._target, 1);\n                }\n                animation && animation.removeClip(clip);\n            }\n            clipList.length = 0;\n        },\n        /**\n         * 设置动画延迟开始的时间\n         * @param  {number} time 单位ms\n         * @return {module:zrender/animation/Animator}\n         */\n        delay: function (time) {\n            this._delay = time;\n            return this;\n        },\n        /**\n         * 添加动画结束的回调\n         * @param  {Function} cb\n         * @return {module:zrender/animation/Animator}\n         */\n        done: function(cb) {\n            if (cb) {\n                this._doneList.push(cb);\n            }\n            return this;\n        },\n\n        /**\n         * @return {Array.<module:zrender/animation/Clip>}\n         */\n        getClips: function () {\n            return this._clipList;\n        }\n    };\n\n    module.exports = Animator;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Animator.js\n// module id = 668\n// module chunks = 0 1 2","\n\n    module.exports = (typeof window !== 'undefined' &&\n                ((window.requestAnimationFrame && window.requestAnimationFrame.bind(window))\n                // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\n                || (window.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window))\n                || window.mozRequestAnimationFrame\n                || window.webkitRequestAnimationFrame)\n            )\n            || function (func) {\n                setTimeout(func, 16);\n            };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/requestAnimationFrame.js\n// module id = 669\n// module chunks = 0 1 2","\n\n    var PI2 = Math.PI * 2;\n    module.exports = {\n        normalizeRadian: function(angle) {\n            angle %= PI2;\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return angle;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/util.js\n// module id = 670\n// module chunks = 0 1 2","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n\n    /**\n     * Simple double linked list. Compared with array, it has O(1) remove operation.\n     * @constructor\n     */\n    var LinkedList = function () {\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.head = null;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.tail = null;\n\n        this._len = 0;\n    };\n\n    var linkedListProto = LinkedList.prototype;\n    /**\n     * Insert a new value at the tail\n     * @param  {} val\n     * @return {module:zrender/core/LRU~Entry}\n     */\n    linkedListProto.insert = function (val) {\n        var entry = new Entry(val);\n        this.insertEntry(entry);\n        return entry;\n    };\n\n    /**\n     * Insert an entry at the tail\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.insertEntry = function (entry) {\n        if (!this.head) {\n            this.head = this.tail = entry;\n        }\n        else {\n            this.tail.next = entry;\n            entry.prev = this.tail;\n            entry.next = null;\n            this.tail = entry;\n        }\n        this._len++;\n    };\n\n    /**\n     * Remove entry.\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.remove = function (entry) {\n        var prev = entry.prev;\n        var next = entry.next;\n        if (prev) {\n            prev.next = next;\n        }\n        else {\n            // Is head\n            this.head = next;\n        }\n        if (next) {\n            next.prev = prev;\n        }\n        else {\n            // Is tail\n            this.tail = prev;\n        }\n        entry.next = entry.prev = null;\n        this._len--;\n    };\n\n    /**\n     * @return {number}\n     */\n    linkedListProto.len = function () {\n        return this._len;\n    };\n\n    /**\n     * Clear list\n     */\n    linkedListProto.clear = function () {\n        this.head = this.tail = null;\n        this._len = 0;\n    };\n\n    /**\n     * @constructor\n     * @param {} val\n     */\n    var Entry = function (val) {\n        /**\n         * @type {}\n         */\n        this.value = val;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.next;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.prev;\n    };\n\n    /**\n     * LRU Cache\n     * @constructor\n     * @alias module:zrender/core/LRU\n     */\n    var LRU = function (maxSize) {\n\n        this._list = new LinkedList();\n\n        this._map = {};\n\n        this._maxSize = maxSize || 10;\n\n        this._lastRemovedEntry = null;\n    };\n\n    var LRUProto = LRU.prototype;\n\n    /**\n     * @param  {string} key\n     * @param  {} value\n     * @return {} Removed value\n     */\n    LRUProto.put = function (key, value) {\n        var list = this._list;\n        var map = this._map;\n        var removed = null;\n        if (map[key] == null) {\n            var len = list.len();\n            // Reuse last removed entry\n            var entry = this._lastRemovedEntry;\n\n            if (len >= this._maxSize && len > 0) {\n                // Remove the least recently used\n                var leastUsedEntry = list.head;\n                list.remove(leastUsedEntry);\n                delete map[leastUsedEntry.key];\n\n                removed = leastUsedEntry.value;\n                this._lastRemovedEntry = leastUsedEntry;\n            }\n\n            if (entry) {\n                entry.value = value;\n            }\n            else {\n                entry = new Entry(value);\n            }\n            entry.key = key;\n            list.insertEntry(entry);\n            map[key] = entry;\n        }\n\n        return removed;\n    };\n\n    /**\n     * @param  {string} key\n     * @return {}\n     */\n    LRUProto.get = function (key) {\n        var entry = this._map[key];\n        var list = this._list;\n        if (entry != null) {\n            // Put the latest used entry in the tail\n            if (entry !== list.tail) {\n                list.remove(entry);\n                list.insertEntry(entry);\n            }\n\n            return entry.value;\n        }\n    };\n\n    /**\n     * Clear the cache\n     */\n    LRUProto.clear = function () {\n        this._list.clear();\n        this._map = {};\n    };\n\n    module.exports = LRU;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/LRU.js\n// module id = 671\n// module chunks = 0 1 2","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\n\n\n    var idStart = 0x0907;\n\n    module.exports = function () {\n        return idStart++;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/guid.js\n// module id = 672\n// module chunks = 0 1 2","\n        var config = require('../config');\n\n        /**\n         * @exports zrender/tool/log\n         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n         */\n        module.exports = function() {\n            if (config.debugMode === 0) {\n                return;\n            }\n            else if (config.debugMode == 1) {\n                for (var k in arguments) {\n                    throw new Error(arguments[k]);\n                }\n            }\n            else if (config.debugMode > 1) {\n                for (var k in arguments) {\n                    console.log(arguments[k]);\n                }\n            }\n        };\n\n        /* for debug\n        return function(mes) {\n            document.getElementById('wrong-message').innerHTML =\n                mes + ' ' + (new Date() - 0)\n                + '<br/>'\n                + document.getElementById('wrong-message').innerHTML;\n        };\n        */\n    \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/log.js\n// module id = 673\n// module chunks = 0 1 2","/**\n * Image element\n * @module zrender/graphic/Image\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var BoundingRect = require('../core/BoundingRect');\n    var zrUtil = require('../core/util');\n    var imageHelper = require('./helper/image');\n\n    /**\n     * @alias zrender/graphic/Image\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function ZImage(opts) {\n        Displayable.call(this, opts);\n    }\n\n    ZImage.prototype = {\n\n        constructor: ZImage,\n\n        type: 'image',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var src = style.image;\n\n            // Must bind each time\n            style.bind(ctx, this, prevEl);\n\n            var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this);\n\n            if (!image || !imageHelper.isImageReady(image)) {\n                return;\n            }\n\n            // 图片已经加载完成\n            // if (image.nodeName.toUpperCase() == 'IMG') {\n            //     if (!image.complete) {\n            //         return;\n            //     }\n            // }\n            // Else is canvas\n\n            var x = style.x || 0;\n            var y = style.y || 0;\n            var width = style.width;\n            var height = style.height;\n            var aspect = image.width / image.height;\n            if (width == null && height != null) {\n                // Keep image/height ratio\n                width = height * aspect;\n            }\n            else if (height == null && width != null) {\n                height = width / aspect;\n            }\n            else if (width == null && height == null) {\n                width = image.width;\n                height = image.height;\n            }\n\n            // 设置transform\n            this.setTransform(ctx);\n\n            if (style.sWidth && style.sHeight) {\n                var sx = style.sx || 0;\n                var sy = style.sy || 0;\n                ctx.drawImage(\n                    image,\n                    sx, sy, style.sWidth, style.sHeight,\n                    x, y, width, height\n                );\n            }\n            else if (style.sx && style.sy) {\n                var sx = style.sx;\n                var sy = style.sy;\n                var sWidth = width - sx;\n                var sHeight = height - sy;\n                ctx.drawImage(\n                    image,\n                    sx, sy, sWidth, sHeight,\n                    x, y, width, height\n                );\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (! this._rect) {\n                this._rect = new BoundingRect(\n                    style.x || 0, style.y || 0, style.width || 0, style.height || 0\n                );\n            }\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(ZImage, Displayable);\n\n    module.exports = ZImage;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Image.js\n// module id = 674\n// module chunks = 0 1 2","\n\n    var Pattern = function (image, repeat) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {image: ...}`, where this constructor will not be called.\n\n        this.image = image;\n        this.repeat = repeat;\n\n        // Can be cloned\n        this.type = 'pattern';\n    };\n\n    Pattern.prototype.getCanvasPattern = function (ctx) {\n        return ctx.createPattern(this.image, this.repeat || 'repeat');\n    };\n\n    module.exports = Pattern;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Pattern.js\n// module id = 675\n// module chunks = 0 1 2","/**\n * @module zrender/graphic/Style\n */\n\n\n    var textHelper = require('./helper/text');\n\n    var STYLE_COMMON_PROPS = [\n        ['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'],\n        ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]\n    ];\n\n    // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n    // var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\n    var Style = function (opts, host) {\n        this.extendFrom(opts, false);\n        this.host = host;\n    };\n\n    function createLinearGradient(ctx, obj, rect) {\n        var x = obj.x == null ? 0 : obj.x;\n        var x2 = obj.x2 == null ? 1 : obj.x2;\n        var y = obj.y == null ? 0 : obj.y;\n        var y2 = obj.y2 == null ? 0 : obj.y2;\n\n        if (!obj.global) {\n            x = x * rect.width + rect.x;\n            x2 = x2 * rect.width + rect.x;\n            y = y * rect.height + rect.y;\n            y2 = y2 * rect.height + rect.y;\n        }\n\n        var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n\n        return canvasGradient;\n    }\n\n    function createRadialGradient(ctx, obj, rect) {\n        var width = rect.width;\n        var height = rect.height;\n        var min = Math.min(width, height);\n\n        var x = obj.x == null ? 0.5 : obj.x;\n        var y = obj.y == null ? 0.5 : obj.y;\n        var r = obj.r == null ? 0.5 : obj.r;\n        if (!obj.global) {\n            x = x * width + rect.x;\n            y = y * height + rect.y;\n            r = r * min;\n        }\n\n        var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n\n        return canvasGradient;\n    }\n\n\n    Style.prototype = {\n\n        constructor: Style,\n\n        /**\n         * @type {module:zrender/graphic/Displayable}\n         */\n        host: null,\n\n        /**\n         * @type {string}\n         */\n        fill: '#000000',\n\n        /**\n         * @type {string}\n         */\n        stroke: null,\n\n        /**\n         * @type {number}\n         */\n        opacity: 1,\n\n        /**\n         * @type {Array.<number>}\n         */\n        lineDash: null,\n\n        /**\n         * @type {number}\n         */\n        lineDashOffset: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetY: 0,\n\n        /**\n         * @type {number}\n         */\n        lineWidth: 1,\n\n        /**\n         * If stroke ignore scale\n         * @type {Boolean}\n         */\n        strokeNoScale: false,\n\n        // Bounding rect text configuration\n        // Not affected by element transform\n        /**\n         * @type {string}\n         */\n        text: null,\n\n        /**\n         * If `fontSize` or `fontFamily` exists, `font` will be reset by\n         * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n         * So do not visit it directly in upper application (like echarts),\n         * but use `contain/text#makeFont` instead.\n         * @type {string}\n         */\n        font: null,\n\n        /**\n         * The same as font. Use font please.\n         * @deprecated\n         * @type {string}\n         */\n        textFont: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * @type {string}\n         */\n        fontStyle: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * @type {string}\n         */\n        fontWeight: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * Should be 12 but not '12px'.\n         * @type {number}\n         */\n        fontSize: null,\n\n        /**\n         * It helps merging respectively, rather than parsing an entire font string.\n         * @type {string}\n         */\n        fontFamily: null,\n\n        /**\n         * Reserved for special functinality, like 'hr'.\n         * @type {string}\n         */\n        textTag: null,\n\n        /**\n         * @type {string}\n         */\n        textFill: '#000',\n\n        /**\n         * @type {string}\n         */\n        textStroke: null,\n\n        /**\n         * @type {number}\n         */\n        textWidth: null,\n\n        /**\n         * Only for textBackground.\n         * @type {number}\n         */\n        textHeight: null,\n\n        /**\n         * textStroke may be set as some color as a default\n         * value in upper applicaion, where the default value\n         * of textLineWidth should be 0 to make sure that\n         * user can choose to do not use text stroke.\n         * @type {number}\n         */\n        textLineWidth: 0,\n\n        /**\n         * @type {number}\n         */\n        textLineHeight: null,\n\n        /**\n         * 'inside', 'left', 'right', 'top', 'bottom'\n         * [x, y]\n         * Based on x, y of rect.\n         * @type {string|Array.<number>}\n         * @default 'inside'\n         */\n        textPosition: 'inside',\n\n        /**\n         * If not specified, use the boundingRect of a `displayable`.\n         * @type {Object}\n         */\n        textRect: null,\n\n        /**\n         * [x, y]\n         * @type {Array.<number>}\n         */\n        textOffset: null,\n\n        /**\n         * @type {string}\n         */\n        textAlign: null,\n\n        /**\n         * @type {string}\n         */\n        textVerticalAlign: null,\n\n        /**\n         * @type {number}\n         */\n        textDistance: 5,\n\n        /**\n         * @type {string}\n         */\n        textShadowColor: 'transparent',\n\n        /**\n         * @type {number}\n         */\n        textShadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        textShadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        textShadowOffsetY: 0,\n\n        /**\n         * @type {string}\n         */\n        textBoxShadowColor: 'transparent',\n\n        /**\n         * @type {number}\n         */\n        textBoxShadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        textBoxShadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        textBoxShadowOffsetY: 0,\n\n        /**\n         * Whether transform text.\n         * Only useful in Path and Image element\n         * @type {boolean}\n         */\n        transformText: false,\n\n        /**\n         * Text rotate around position of Path or Image\n         * Only useful in Path and Image element and transformText is false.\n         */\n        textRotation: 0,\n\n        /**\n         * Text origin of text rotation, like [10, 40].\n         * Based on x, y of rect.\n         * Useful in label rotation of circular symbol.\n         * By default, this origin is textPosition.\n         * Can be 'center'.\n         * @type {string|Array.<number>}\n         */\n        textOrigin: null,\n\n        /**\n         * @type {string}\n         */\n        textBackgroundColor: null,\n\n        /**\n         * @type {string}\n         */\n        textBorderColor: null,\n\n        /**\n         * @type {number}\n         */\n        textBorderWidth: 0,\n\n        /**\n         * @type {number}\n         */\n        textBorderRadius: 0,\n\n        /**\n         * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n         * @type {number|Array.<number>}\n         */\n        textPadding: null,\n\n        /**\n         * Text styles for rich text.\n         * @type {Object}\n         */\n        rich: null,\n\n        /**\n         * {outerWidth, outerHeight, ellipsis, placeholder}\n         * @type {Object}\n         */\n        truncate: null,\n\n        /**\n         * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n         * @type {string}\n         */\n        blend: null,\n\n        normalize: function () {\n            textHelper.normalizeTextStyle(this);\n        },\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        bind: function (ctx, el, prevEl) {\n            var style = this;\n            var prevStyle = prevEl && prevEl.style;\n            var firstDraw = !prevStyle;\n\n            for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n                var prop = STYLE_COMMON_PROPS[i];\n                var styleName = prop[0];\n\n                if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n                    // FIXME Invalid property value will cause style leak from previous element.\n                    ctx[styleName] = style[styleName] || prop[1];\n                }\n            }\n\n            if ((firstDraw || style.fill !== prevStyle.fill)) {\n                ctx.fillStyle = style.fill;\n            }\n            if ((firstDraw || style.stroke !== prevStyle.stroke)) {\n                ctx.strokeStyle = style.stroke;\n            }\n            if ((firstDraw || style.opacity !== prevStyle.opacity)) {\n                ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n            }\n\n            if ((firstDraw || style.blend !== prevStyle.blend)) {\n                ctx.globalCompositeOperation = style.blend || 'source-over';\n            }\n            if (this.hasStroke()) {\n                var lineWidth = style.lineWidth;\n                ctx.lineWidth = lineWidth / (\n                    (this.strokeNoScale && el && el.getLineScale) ? el.getLineScale() : 1\n                );\n            }\n        },\n\n        hasFill: function () {\n            var fill = this.fill;\n            return fill != null && fill !== 'none';\n        },\n\n        hasStroke: function () {\n            var stroke = this.stroke;\n            return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n        },\n\n        /**\n         * Extend from other style\n         * @param {zrender/graphic/Style} otherStyle\n         * @param {boolean} overwrite true: overwrirte any way.\n         *                            false: overwrite only when !target.hasOwnProperty\n         *                            others: overwrite when property is not null/undefined.\n         */\n        extendFrom: function (otherStyle, overwrite) {\n            if (otherStyle) {\n                for (var name in otherStyle) {\n                    if (otherStyle.hasOwnProperty(name)\n                        && (overwrite === true\n                            || (\n                                overwrite === false\n                                    ? !this.hasOwnProperty(name)\n                                    : otherStyle[name] != null\n                            )\n                        )\n                    ) {\n                        this[name] = otherStyle[name];\n                    }\n                }\n            }\n        },\n\n        /**\n         * Batch setting style with a given object\n         * @param {Object|string} obj\n         * @param {*} [obj]\n         */\n        set: function (obj, value) {\n            if (typeof obj === 'string') {\n                this[obj] = value;\n            }\n            else {\n                this.extendFrom(obj, true);\n            }\n        },\n\n        /**\n         * Clone\n         * @return {zrender/graphic/Style} [description]\n         */\n        clone: function () {\n            var newStyle = new this.constructor();\n            newStyle.extendFrom(this, true);\n            return newStyle;\n        },\n\n        getGradient: function (ctx, obj, rect) {\n            var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n            var canvasGradient = method(ctx, obj, rect);\n            var colorStops = obj.colorStops;\n            for (var i = 0; i < colorStops.length; i++) {\n                canvasGradient.addColorStop(\n                    colorStops[i].offset, colorStops[i].color\n                );\n            }\n            return canvasGradient;\n        }\n\n    };\n\n    var styleProto = Style.prototype;\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n        var prop = STYLE_COMMON_PROPS[i];\n        if (!(prop[0] in styleProto)) {\n            styleProto[prop[0]] = prop[1];\n        }\n    }\n\n    // Provide for others\n    Style.getGradient = styleProto.getGradient;\n\n    module.exports = Style;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Style.js\n// module id = 676\n// module chunks = 0 1 2","\n\n    var env = require('../../core/env');\n\n    // Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n    // where exception \"unexpected call to method or property access\"\n    // might be thrown when calling ctx.fill or ctx.stroke after a path\n    // whose area size is zero is drawn and ctx.clip() is called and\n    // shadowBlur is set. See #4572, #3112, #5777.\n    // (e.g.,\n    //  ctx.moveTo(10, 10);\n    //  ctx.lineTo(20, 10);\n    //  ctx.closePath();\n    //  ctx.clip();\n    //  ctx.shadowBlur = 10;\n    //  ...\n    //  ctx.fill();\n    // )\n\n    var shadowTemp = [\n        ['shadowBlur', 0],\n        ['shadowColor', '#000'],\n        ['shadowOffsetX', 0],\n        ['shadowOffsetY', 0]\n    ];\n\n    module.exports = function (orignalBrush) {\n\n        // version string can be: '11.0'\n        return (env.browser.ie && env.browser.version >= 11)\n\n            ? function () {\n                var clipPaths = this.__clipPaths;\n                var style = this.style;\n                var modified;\n\n                if (clipPaths) {\n                    for (var i = 0; i < clipPaths.length; i++) {\n                        var clipPath = clipPaths[i];\n                        var shape = clipPath && clipPath.shape;\n                        var type = clipPath && clipPath.type;\n\n                        if (shape && (\n                            (type === 'sector' && shape.startAngle === shape.endAngle)\n                            || (type === 'rect' && (!shape.width || !shape.height))\n                        )) {\n                            for (var j = 0; j < shadowTemp.length; j++) {\n                                // It is save to put shadowTemp static, because shadowTemp\n                                // will be all modified each item brush called.\n                                shadowTemp[j][2] = style[shadowTemp[j][0]];\n                                style[shadowTemp[j][0]] = shadowTemp[j][1];\n                            }\n                            modified = true;\n                            break;\n                        }\n                    }\n                }\n\n                orignalBrush.apply(this, arguments);\n\n                if (modified) {\n                    for (var j = 0; j < shadowTemp.length; j++) {\n                        style[shadowTemp[j][0]] = shadowTemp[j][2];\n                    }\n                }\n            }\n\n            : orignalBrush;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/fixClipWithShadow.js\n// module id = 677\n// module chunks = 0 1 2","\n\n    var smoothSpline = require('./smoothSpline');\n    var smoothBezier = require('./smoothBezier');\n\n    module.exports = {\n        buildPath: function (ctx, shape, closePath) {\n            var points = shape.points;\n            var smooth = shape.smooth;\n            if (points && points.length >= 2) {\n                if (smooth && smooth !== 'spline') {\n                    var controlPoints = smoothBezier(\n                        points, smooth, closePath, shape.smoothConstraint\n                    );\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    var len = points.length;\n                    for (var i = 0; i < (closePath ? len : len - 1); i++) {\n                        var cp1 = controlPoints[i * 2];\n                        var cp2 = controlPoints[i * 2 + 1];\n                        var p = points[(i + 1) % len];\n                        ctx.bezierCurveTo(\n                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\n                        );\n                    }\n                }\n                else {\n                    if (smooth === 'spline') {\n                        points = smoothSpline(points, closePath);\n                    }\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    for (var i = 1, l = points.length; i < l; i++) {\n                        ctx.lineTo(points[i][0], points[i][1]);\n                    }\n                }\n\n                closePath && ctx.closePath();\n            }\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/poly.js\n// module id = 678\n// module chunks = 0 1 2","\n\n    module.exports = {\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            var r = shape.r;\n            var r1;\n            var r2;\n            var r3;\n            var r4;\n\n            // Convert width and height to positive for better borderRadius\n            if (width < 0) {\n                x = x + width;\n                width = -width;\n            }\n            if (height < 0) {\n                y = y + height;\n                height = -height;\n            }\n\n            if (typeof r === 'number') {\n                r1 = r2 = r3 = r4 = r;\n            }\n            else if (r instanceof Array) {\n                if (r.length === 1) {\n                    r1 = r2 = r3 = r4 = r[0];\n                }\n                else if (r.length === 2) {\n                    r1 = r3 = r[0];\n                    r2 = r4 = r[1];\n                }\n                else if (r.length === 3) {\n                    r1 = r[0];\n                    r2 = r4 = r[1];\n                    r3 = r[2];\n                }\n                else {\n                    r1 = r[0];\n                    r2 = r[1];\n                    r3 = r[2];\n                    r4 = r[3];\n                }\n            }\n            else {\n                r1 = r2 = r3 = r4 = 0;\n            }\n\n            var total;\n            if (r1 + r2 > width) {\n                total = r1 + r2;\n                r1 *= width / total;\n                r2 *= width / total;\n            }\n            if (r3 + r4 > width) {\n                total = r3 + r4;\n                r3 *= width / total;\n                r4 *= width / total;\n            }\n            if (r2 + r3 > height) {\n                total = r2 + r3;\n                r2 *= height / total;\n                r3 *= height / total;\n            }\n            if (r1 + r4 > height) {\n                total = r1 + r4;\n                r1 *= height / total;\n                r4 *= height / total;\n            }\n            ctx.moveTo(x + r1, y);\n            ctx.lineTo(x + width - r2, y);\n            r2 !== 0 && ctx.quadraticCurveTo(\n                x + width, y, x + width, y + r2\n            );\n            ctx.lineTo(x + width, y + height - r3);\n            r3 !== 0 && ctx.quadraticCurveTo(\n                x + width, y + height, x + width - r3, y + height\n            );\n            ctx.lineTo(x + r4, y + height);\n            r4 !== 0 && ctx.quadraticCurveTo(\n                x, y + height, x, y + height - r4\n            );\n            ctx.lineTo(x, y + r1);\n            r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/roundRect.js\n// module id = 679\n// module chunks = 0 1 2","'use strict';\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\n\n\n    var matrix = require('../core/matrix');\n    var vector = require('../core/vector');\n    var mIdentity = matrix.identity;\n\n    var EPSILON = 5e-5;\n\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n\n    /**\n     * @alias module:zrender/mixin/Transformable\n     * @constructor\n     */\n    var Transformable = function (opts) {\n        opts = opts || {};\n        // If there are no given position, rotation, scale\n        if (!opts.position) {\n            /**\n             * 平移\n             * @type {Array.<number>}\n             * @default [0, 0]\n             */\n            this.position = [0, 0];\n        }\n        if (opts.rotation == null) {\n            /**\n             * 旋转\n             * @type {Array.<number>}\n             * @default 0\n             */\n            this.rotation = 0;\n        }\n        if (!opts.scale) {\n            /**\n             * 缩放\n             * @type {Array.<number>}\n             * @default [1, 1]\n             */\n            this.scale = [1, 1];\n        }\n        /**\n         * 旋转和缩放的原点\n         * @type {Array.<number>}\n         * @default null\n         */\n        this.origin = this.origin || null;\n    };\n\n    var transformableProto = Transformable.prototype;\n    transformableProto.transform = null;\n\n    /**\n     * 判断是否需要有坐标变换\n     * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n     */\n    transformableProto.needLocalTransform = function () {\n        return isNotAroundZero(this.rotation)\n            || isNotAroundZero(this.position[0])\n            || isNotAroundZero(this.position[1])\n            || isNotAroundZero(this.scale[0] - 1)\n            || isNotAroundZero(this.scale[1] - 1);\n    };\n\n    transformableProto.updateTransform = function () {\n        var parent = this.parent;\n        var parentHasTransform = parent && parent.transform;\n        var needLocalTransform = this.needLocalTransform();\n\n        var m = this.transform;\n        if (!(needLocalTransform || parentHasTransform)) {\n            m && mIdentity(m);\n            return;\n        }\n\n        m = m || matrix.create();\n\n        if (needLocalTransform) {\n            this.getLocalTransform(m);\n        }\n        else {\n            mIdentity(m);\n        }\n\n        // 应用父节点变换\n        if (parentHasTransform) {\n            if (needLocalTransform) {\n                matrix.mul(m, parent.transform, m);\n            }\n            else {\n                matrix.copy(m, parent.transform);\n            }\n        }\n        // 保存这个变换矩阵\n        this.transform = m;\n\n        this.invTransform = this.invTransform || matrix.create();\n        matrix.invert(this.invTransform, m);\n    };\n\n    transformableProto.getLocalTransform = function (m) {\n        return Transformable.getLocalTransform(this, m);\n    };\n\n    /**\n     * 将自己的transform应用到context上\n     * @param {CanvasRenderingContext2D} ctx\n     */\n    transformableProto.setTransform = function (ctx) {        \n        var m = this.transform;\n        var dpr = ctx.dpr || 1;\n        if (m) {\n            ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n        }\n        else {\n            ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n        }\n    };\n\n    transformableProto.restoreTransform = function (ctx) {\n        var dpr = ctx.dpr || 1;\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n    };\n\n    var tmpTransform = [];\n\n    /**\n     * 分解`transform`矩阵到`position`, `rotation`, `scale`\n     */\n    transformableProto.decomposeTransform = function () {\n        if (!this.transform) {\n            return;\n        }\n        var parent = this.parent;\n        var m = this.transform;\n        if (parent && parent.transform) {\n            // Get local transform and decompose them to position, scale, rotation\n            matrix.mul(tmpTransform, parent.invTransform, m);\n            m = tmpTransform;\n        }\n        var sx = m[0] * m[0] + m[1] * m[1];\n        var sy = m[2] * m[2] + m[3] * m[3];\n        var position = this.position;\n        var scale = this.scale;\n        if (isNotAroundZero(sx - 1)) {\n            sx = Math.sqrt(sx);\n        }\n        if (isNotAroundZero(sy - 1)) {\n            sy = Math.sqrt(sy);\n        }\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        position[0] = m[4];\n        position[1] = m[5];\n        scale[0] = sx;\n        scale[1] = sy;\n        this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n    };\n\n    /**\n     * Get global scale\n     * @return {Array.<number>}\n     */\n    transformableProto.getGlobalScale = function () {\n        var m = this.transform;\n        if (!m) {\n            return [1, 1];\n        }\n        var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        return [sx, sy];\n    };\n    /**\n     * 变换坐标位置到 shape 的局部坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToLocal = function (x, y) {\n        var v2 = [x, y];\n        var invTransform = this.invTransform;\n        if (invTransform) {\n            vector.applyTransform(v2, v2, invTransform);\n        }\n        return v2;\n    };\n\n    /**\n     * 变换局部坐标位置到全局坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToGlobal = function (x, y) {\n        var v2 = [x, y];\n        var transform = this.transform;\n        if (transform) {\n            vector.applyTransform(v2, v2, transform);\n        }\n        return v2;\n    };\n\n    /**\n     * @static\n     * @param {Object} target\n     * @param {Array.<number>} target.origin\n     * @param {number} target.rotation\n     * @param {Array.<number>} target.position\n     * @param {Array.<number>} [m]\n     */\n    Transformable.getLocalTransform = function (target, m) {\n        m = m || [];\n        mIdentity(m);\n\n        var origin = target.origin;\n        var scale = target.scale || [1, 1];\n        var rotation = target.rotation || 0;\n        var position = target.position || [0, 0];\n\n        if (origin) {\n            // Translate to origin\n            m[4] -= origin[0];\n            m[5] -= origin[1];\n        }\n        matrix.scale(m, m, scale);\n        if (rotation) {\n            matrix.rotate(m, m, rotation);\n        }\n        if (origin) {\n            // Translate back from origin\n            m[4] += origin[0];\n            m[5] += origin[1];\n        }\n\n        m[4] += position[0];\n        m[5] += position[1];\n\n        return m;\n    };\n\n    module.exports = Transformable;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Transformable.js\n// module id = 680\n// module chunks = 0 1 2","'use strict';\n\n\n    var graphic = require('../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n\n    require('../coord/cartesian/Grid');\n\n    require('./axis');\n\n    // Grid view\n    echarts.extendComponentView({\n\n        type: 'grid',\n\n        render: function (gridModel, ecModel) {\n            this.group.removeAll();\n            if (gridModel.get('show')) {\n                this.group.add(new graphic.Rect({\n                    shape: gridModel.coordinateSystem.getRect(),\n                    style: zrUtil.defaults({\n                        fill: gridModel.get('backgroundColor')\n                    }, gridModel.getItemStyle()),\n                    silent: true,\n                    z2: -1\n                }));\n            }\n        }\n\n    });\n\n    echarts.registerPreprocessor(function (option) {\n        // Only create grid when need\n        if (option.xAxis && option.yAxis && !option.grid) {\n            option.grid = {};\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/gridSimple.js\n// module id = 683\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var defaultOption = {\n        show: true,\n        zlevel: 0,                  // 一级层叠\n        z: 0,                       // 二级层叠\n        // 反向坐标轴\n        inverse: false,\n\n        // 坐标轴名字，默认为空\n        name: '',\n        // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n        nameLocation: 'end',\n        // 坐标轴名字旋转，degree。\n        nameRotate: null, // Adapt to axis rotate, when nameLocation is 'middle'.\n        nameTruncate: {\n            maxWidth: null,\n            ellipsis: '...',\n            placeholder: '.'\n        },\n        // 坐标轴文字样式，默认取全局样式\n        nameTextStyle: {},\n        // 文字与轴线距离\n        nameGap: 15,\n\n        silent: false, // Default false to support tooltip.\n        triggerEvent: false, // Default false to avoid legacy user event listener fail.\n\n        tooltip: {\n            show: false\n        },\n\n        axisPointer: {},\n\n        // 坐标轴线\n        axisLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            onZero: true,\n            onZeroAxisIndex: null,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                color: '#333',\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // 属性show控制显示与否，默认显示\n            show: true,\n            // 控制小标记是否在grid里\n            inside: false,\n            // 属性length控制线长\n            length: 5,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                width: 1\n            }\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            show: true,\n            // 控制文本标签是否在grid里\n            inside: false,\n            rotate: 0,\n            showMinLabel: null, // true | false | null (auto)\n            showMaxLabel: null, // true | false | null (auto)\n            margin: 8,\n            // formatter: null,\n            // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n            fontSize: 12\n        },\n        // 分隔线\n        splitLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            // 属性lineStyle（详见lineStyle）控制线条样式\n            lineStyle: {\n                color: ['#ccc'],\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 分隔区域\n        splitArea: {\n            // 默认不显示，属性show控制显示与否\n            show: false,\n            // 属性areaStyle（详见areaStyle）控制区域样式\n            areaStyle: {\n                color: ['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']\n            }\n        }\n    };\n\n    var categoryAxis = zrUtil.merge({\n        // 类目起始和结束两端空白策略\n        boundaryGap: true,\n        // splitArea: {\n            // show: false\n        // },\n        splitLine: {\n            show: false\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // If tick is align with label when boundaryGap is true\n            alignWithLabel: false,\n            interval: 'auto'\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            interval: 'auto'\n        }\n    }, defaultOption);\n\n    var valueAxis = zrUtil.merge({\n        // 数值起始和结束两端空白策略\n        boundaryGap: [0, 0],\n        // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n        // min: null,\n        // 最大值，设置成 'dataMax' 则从数据中计算最大值\n        // max: null,\n        // Readonly prop, specifies start value of the range when using data zoom.\n        // rangeStart: null\n        // Readonly prop, specifies end value of the range when using data zoom.\n        // rangeEnd: null\n        // 脱离0值比例，放大聚焦到最终_min，_max区间\n        // scale: false,\n        // 分割段数，默认为5\n        splitNumber: 5\n        // Minimum interval\n        // minInterval: null\n        // maxInterval: null\n    }, defaultOption);\n\n    // FIXME\n    var timeAxis = zrUtil.defaults({\n        scale: true,\n        min: 'dataMin',\n        max: 'dataMax'\n    }, valueAxis);\n\n    var logAxis = zrUtil.defaults({\n        scale: true,\n        logBase: 10\n    }, valueAxis);\n\n    module.exports = {\n        categoryAxis: categoryAxis,\n        valueAxis: valueAxis,\n        timeAxis: timeAxis,\n        logAxis: logAxis\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisDefault.js\n// module id = 684\n// module chunks = 0 1 2","/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\nvar factory = exports;\n\n    var layout = require('../../util/layout');\n    var axisHelper = require('../../coord/axisHelper');\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Cartesian2D = require('./Cartesian2D');\n    var Axis2D = require('./Axis2D');\n\n    var each = zrUtil.each;\n\n    var ifAxisCrossZero = axisHelper.ifAxisCrossZero;\n    var niceScaleExtent = axisHelper.niceScaleExtent;\n\n    // 依赖 GridModel, AxisModel 做预处理\n    require('./GridModel');\n\n    /**\n     * Check if the axis is used in the specified grid\n     * @inner\n     */\n    function isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n        return axisModel.getCoordSysModel() === gridModel;\n    }\n\n    function getLabelUnionRect(axis) {\n        var axisModel = axis.model;\n        var labels = axisModel.getFormattedLabels();\n        var axisLabelModel = axisModel.getModel('axisLabel');\n        var rect;\n        var step = 1;\n        var labelCount = labels.length;\n        if (labelCount > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.ceil(labelCount / 40);\n        }\n        for (var i = 0; i < labelCount; i += step) {\n            if (!axis.isLabelIgnored(i)) {\n                var singleRect = axisLabelModel.getTextRect(labels[i]);\n                // FIXME consider label rotate\n                rect ? rect.union(singleRect) : (rect = singleRect);\n            }\n        }\n        return rect;\n    }\n\n    function Grid(gridModel, ecModel, api) {\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n         * @private\n         */\n        this._coordsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n         * @private\n         */\n        this._coordsList = [];\n\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesList = [];\n\n        this._initCartesian(gridModel, ecModel, api);\n\n        this.model = gridModel;\n    }\n\n    var gridProto = Grid.prototype;\n\n    gridProto.type = 'grid';\n\n    gridProto.axisPointerEnabled = true;\n\n    gridProto.getRect = function () {\n        return this._rect;\n    };\n\n    gridProto.update = function (ecModel, api) {\n\n        var axesMap = this._axesMap;\n\n        this._updateScale(ecModel, this.model);\n\n        each(axesMap.x, function (xAxis) {\n            niceScaleExtent(xAxis.scale, xAxis.model);\n        });\n        each(axesMap.y, function (yAxis) {\n            niceScaleExtent(yAxis.scale, yAxis.model);\n        });\n        each(axesMap.x, function (xAxis) {\n            fixAxisOnZero(axesMap, 'y', xAxis);\n        });\n        each(axesMap.y, function (yAxis) {\n            fixAxisOnZero(axesMap, 'x', yAxis);\n        });\n\n        // Resize again if containLabel is enabled\n        // FIXME It may cause getting wrong grid size in data processing stage\n        this.resize(this.model, api);\n    };\n\n    function fixAxisOnZero(axesMap, otherAxisDim, axis) {\n        // onZero can not be enabled in these two situations:\n        // 1. When any other axis is a category axis.\n        // 2. When no axis is cross 0 point.\n        var axes = axesMap[otherAxisDim];\n\n        if (!axis.onZero) {\n            return;\n        }\n\n        var onZeroAxisIndex = axis.onZeroAxisIndex;\n\n        // If target axis is specified.\n        if (onZeroAxisIndex != null) {\n            var otherAxis = axes[onZeroAxisIndex];\n            if (otherAxis && canNotOnZeroToAxis(otherAxis)) {\n                axis.onZero = false;\n            }\n            return;\n        }\n\n        for (var idx in axes) {\n            if (axes.hasOwnProperty(idx)) {\n                var otherAxis = axes[idx];\n                if (otherAxis && !canNotOnZeroToAxis(otherAxis)) {\n                    onZeroAxisIndex = +idx;\n                    break;\n                }\n            }\n        }\n\n        if (onZeroAxisIndex == null) {\n            axis.onZero = false;\n        }\n        axis.onZeroAxisIndex = onZeroAxisIndex;\n    }\n\n    function canNotOnZeroToAxis(axis) {\n        return axis.type === 'category' || axis.type === 'time' || !ifAxisCrossZero(axis);\n    }\n\n    /**\n     * Resize the grid\n     * @param {module:echarts/coord/cartesian/GridModel} gridModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    gridProto.resize = function (gridModel, api, ignoreContainLabel) {\n\n        var gridRect = layout.getLayoutRect(\n            gridModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n\n        this._rect = gridRect;\n\n        var axesList = this._axesList;\n\n        adjustAxes();\n\n        // Minus label size\n        if (!ignoreContainLabel && gridModel.get('containLabel')) {\n            each(axesList, function (axis) {\n                if (!axis.model.get('axisLabel.inside')) {\n                    var labelUnionRect = getLabelUnionRect(axis);\n                    if (labelUnionRect) {\n                        var dim = axis.isHorizontal() ? 'height' : 'width';\n                        var margin = axis.model.get('axisLabel.margin');\n                        gridRect[dim] -= labelUnionRect[dim] + margin;\n                        if (axis.position === 'top') {\n                            gridRect.y += labelUnionRect.height + margin;\n                        }\n                        else if (axis.position === 'left')  {\n                            gridRect.x += labelUnionRect.width + margin;\n                        }\n                    }\n                }\n            });\n\n            adjustAxes();\n        }\n\n        function adjustAxes() {\n            each(axesList, function (axis) {\n                var isHorizontal = axis.isHorizontal();\n                var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n                var idx = axis.inverse ? 1 : 0;\n                axis.setExtent(extent[idx], extent[1 - idx]);\n                updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n            });\n        }\n    };\n\n    /**\n     * @param {string} axisType\n     * @param {number} [axisIndex]\n     */\n    gridProto.getAxis = function (axisType, axisIndex) {\n        var axesMapOnDim = this._axesMap[axisType];\n        if (axesMapOnDim != null) {\n            if (axisIndex == null) {\n                // Find first axis\n                for (var name in axesMapOnDim) {\n                    if (axesMapOnDim.hasOwnProperty(name)) {\n                        return axesMapOnDim[name];\n                    }\n                }\n            }\n            return axesMapOnDim[axisIndex];\n        }\n    };\n\n    /**\n     * @return {Array.<module:echarts/coord/Axis>}\n     */\n    gridProto.getAxes = function () {\n        return this._axesList.slice();\n    };\n\n    /**\n     * Usage:\n     *      grid.getCartesian(xAxisIndex, yAxisIndex);\n     *      grid.getCartesian(xAxisIndex);\n     *      grid.getCartesian(null, yAxisIndex);\n     *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n     *\n     * @param {number|Object} [xAxisIndex]\n     * @param {number} [yAxisIndex]\n     */\n    gridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n        if (xAxisIndex != null && yAxisIndex != null) {\n            var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n            return this._coordsMap[key];\n        }\n\n        if (zrUtil.isObject(xAxisIndex)) {\n            yAxisIndex = xAxisIndex.yAxisIndex;\n            xAxisIndex = xAxisIndex.xAxisIndex;\n        }\n        // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n        for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n            if (coordList[i].getAxis('x').index === xAxisIndex\n                || coordList[i].getAxis('y').index === yAxisIndex\n            ) {\n                return coordList[i];\n            }\n        }\n    };\n\n    gridProto.getCartesians = function () {\n        return this._coordsList.slice();\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertToPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.dataToPoint(value)\n            : target.axis\n            ? target.axis.toGlobalCoord(target.axis.dataToCoord(value))\n            : null;\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertFromPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.pointToData(value)\n            : target.axis\n            ? target.axis.coordToData(target.axis.toLocalCoord(value))\n            : null;\n    };\n\n    /**\n     * @inner\n     */\n    gridProto._findConvertTarget = function (ecModel, finder) {\n        var seriesModel = finder.seriesModel;\n        var xAxisModel = finder.xAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('xAxis')[0]);\n        var yAxisModel = finder.yAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('yAxis')[0]);\n        var gridModel = finder.gridModel;\n        var coordsList = this._coordsList;\n        var cartesian;\n        var axis;\n\n        if (seriesModel) {\n            cartesian = seriesModel.coordinateSystem;\n            zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n        }\n        else if (xAxisModel && yAxisModel) {\n            cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n        }\n        else if (xAxisModel) {\n            axis = this.getAxis('x', xAxisModel.componentIndex);\n        }\n        else if (yAxisModel) {\n            axis = this.getAxis('y', yAxisModel.componentIndex);\n        }\n        // Lowest priority.\n        else if (gridModel) {\n            var grid = gridModel.coordinateSystem;\n            if (grid === this) {\n                cartesian = this._coordsList[0];\n            }\n        }\n\n        return {cartesian: cartesian, axis: axis};\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.containPoint = function (point) {\n        var coord = this._coordsList[0];\n        if (coord) {\n            return coord.containPoint(point);\n        }\n    };\n\n    /**\n     * Initialize cartesian coordinate systems\n     * @private\n     */\n    gridProto._initCartesian = function (gridModel, ecModel, api) {\n        var axisPositionUsed = {\n            left: false,\n            right: false,\n            top: false,\n            bottom: false\n        };\n\n        var axesMap = {\n            x: {},\n            y: {}\n        };\n        var axesCount = {\n            x: 0,\n            y: 0\n        };\n\n        /// Create axis\n        ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n        ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n        if (!axesCount.x || !axesCount.y) {\n            // Roll back when there no either x or y axis\n            this._axesMap = {};\n            this._axesList = [];\n            return;\n        }\n\n        this._axesMap = axesMap;\n\n        /// Create cartesian2d\n        each(axesMap.x, function (xAxis, xAxisIndex) {\n            each(axesMap.y, function (yAxis, yAxisIndex) {\n                var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n                var cartesian = new Cartesian2D(key);\n\n                cartesian.grid = this;\n                cartesian.model = gridModel;\n\n                this._coordsMap[key] = cartesian;\n                this._coordsList.push(cartesian);\n\n                cartesian.addAxis(xAxis);\n                cartesian.addAxis(yAxis);\n            }, this);\n        }, this);\n\n        function createAxisCreator(axisType) {\n            return function (axisModel, idx) {\n                if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n                    return;\n                }\n\n                var axisPosition = axisModel.get('position');\n                if (axisType === 'x') {\n                    // Fix position\n                    if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n                        // Default bottom of X\n                        axisPosition = 'bottom';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n                        }\n                    }\n                }\n                else {\n                    // Fix position\n                    if (axisPosition !== 'left' && axisPosition !== 'right') {\n                        // Default left of Y\n                        axisPosition = 'left';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n                        }\n                    }\n                }\n                axisPositionUsed[axisPosition] = true;\n\n                var axis = new Axis2D(\n                    axisType, axisHelper.createScaleByModel(axisModel),\n                    [0, 0],\n                    axisModel.get('type'),\n                    axisPosition\n                );\n\n                var isCategory = axis.type === 'category';\n                axis.onBand = isCategory && axisModel.get('boundaryGap');\n                axis.inverse = axisModel.get('inverse');\n\n                axis.onZero = axisModel.get('axisLine.onZero');\n                axis.onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex');\n\n                // Inject axis into axisModel\n                axisModel.axis = axis;\n\n                // Inject axisModel into axis\n                axis.model = axisModel;\n\n                // Inject grid info axis\n                axis.grid = this;\n\n                // Index of axis, can be used as key\n                axis.index = idx;\n\n                this._axesList.push(axis);\n\n                axesMap[axisType][idx] = axis;\n                axesCount[axisType]++;\n            };\n        }\n    };\n\n    /**\n     * Update cartesian properties from series\n     * @param  {module:echarts/model/Option} option\n     * @private\n     */\n    gridProto._updateScale = function (ecModel, gridModel) {\n        // Reset scale\n        zrUtil.each(this._axesList, function (axis) {\n            axis.scale.setExtent(Infinity, -Infinity);\n        });\n        ecModel.eachSeries(function (seriesModel) {\n            if (isCartesian2D(seriesModel)) {\n                var axesModels = findAxesModels(seriesModel, ecModel);\n                var xAxisModel = axesModels[0];\n                var yAxisModel = axesModels[1];\n\n                if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel)\n                    || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)\n                 ) {\n                    return;\n                }\n\n                var cartesian = this.getCartesian(\n                    xAxisModel.componentIndex, yAxisModel.componentIndex\n                );\n                var data = seriesModel.getData();\n                var xAxis = cartesian.getAxis('x');\n                var yAxis = cartesian.getAxis('y');\n\n                if (data.type === 'list') {\n                    unionExtent(data, xAxis, seriesModel);\n                    unionExtent(data, yAxis, seriesModel);\n                }\n            }\n        }, this);\n\n        function unionExtent(data, axis, seriesModel) {\n            each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n                axis.scale.unionExtentFromData(data, dim);\n            });\n        }\n    };\n\n    /**\n     * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n     * @return {Object} {baseAxes: [], otherAxes: []}\n     */\n    gridProto.getTooltipAxes = function (dim) {\n        var baseAxes = [];\n        var otherAxes = [];\n\n        each(this.getCartesians(), function (cartesian) {\n            var baseAxis = (dim != null && dim !== 'auto')\n                ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n            var otherAxis = cartesian.getOtherAxis(baseAxis);\n            zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n            zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n        });\n\n        return {baseAxes: baseAxes, otherAxes: otherAxes};\n    };\n\n    /**\n     * @inner\n     */\n    function updateAxisTransfrom(axis, coordBase) {\n        var axisExtent = axis.getExtent();\n        var axisExtentSum = axisExtent[0] + axisExtent[1];\n\n        // Fast transform\n        axis.toGlobalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord + coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n        axis.toLocalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord - coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n    }\n\n    var axesTypes = ['xAxis', 'yAxis'];\n    /**\n     * @inner\n     */\n    function findAxesModels(seriesModel, ecModel) {\n        return zrUtil.map(axesTypes, function (axisType) {\n            var axisModel = seriesModel.getReferringComponents(axisType)[0];\n\n            if (__DEV__) {\n                if (!axisModel) {\n                    throw new Error(axisType + ' \"' + zrUtil.retrieve(\n                        seriesModel.get(axisType + 'Index'),\n                        seriesModel.get(axisType + 'Id'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n            return axisModel;\n        });\n    }\n\n    /**\n     * @inner\n     */\n    function isCartesian2D(seriesModel) {\n        return seriesModel.get('coordinateSystem') === 'cartesian2d';\n    }\n\n    Grid.create = function (ecModel, api) {\n        var grids = [];\n        ecModel.eachComponent('grid', function (gridModel, idx) {\n            var grid = new Grid(gridModel, ecModel, api);\n            grid.name = 'grid_' + idx;\n            // dataSampling requires axis extent, so resize\n            // should be performed in create stage.\n            grid.resize(gridModel, api, true);\n\n            gridModel.coordinateSystem = grid;\n\n            grids.push(grid);\n        });\n\n        // Inject the coordinateSystems into seriesModel\n        ecModel.eachSeries(function (seriesModel) {\n            if (!isCartesian2D(seriesModel)) {\n                return;\n            }\n\n            var axesModels = findAxesModels(seriesModel, ecModel);\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            var gridModel = xAxisModel.getCoordSysModel();\n\n            if (__DEV__) {\n                if (!gridModel) {\n                    throw new Error(\n                        'Grid \"' + zrUtil.retrieve(\n                            xAxisModel.get('gridIndex'),\n                            xAxisModel.get('gridId'),\n                            0\n                        ) + '\" not found'\n                    );\n                }\n                if (xAxisModel.getCoordSysModel() !== yAxisModel.getCoordSysModel()) {\n                    throw new Error('xAxis and yAxis must use the same grid');\n                }\n            }\n\n            var grid = gridModel.coordinateSystem;\n\n            seriesModel.coordinateSystem = grid.getCartesian(\n                xAxisModel.componentIndex, yAxisModel.componentIndex\n            );\n        });\n\n        return grids;\n    };\n\n    // For deciding which dimensions to use when creating list data\n    Grid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\n\n    require('../../CoordinateSystem').register('cartesian2d', Grid);\n\n    module.exports = Grid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Grid.js\n// module id = 685\n// module chunks = 0 1 2","\n\n    module.exports = function (seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n\n        // Encoding visual for all series include which is filtered for legend drawing\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n\n            var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n            var symbolSize = seriesModel.get('symbolSize');\n\n            data.setVisual({\n                legendSymbol: legendSymbol || symbolType,\n                symbol: symbolType,\n                symbolSize: symbolSize\n            });\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof symbolSize === 'function') {\n                    data.each(function (idx) {\n                        var rawValue = seriesModel.getRawValue(idx);\n                        // FIXME\n                        var params = seriesModel.getDataParams(idx);\n                        data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n                    });\n                }\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var itemSymbolType = itemModel.getShallow('symbol', true);\n                    var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n                    // If has item symbol\n                    if (itemSymbolType != null) {\n                        data.setItemVisual(idx, 'symbol', itemSymbolType);\n                    }\n                    if (itemSymbolSize != null) {\n                        // PENDING Transform symbolSize ?\n                        data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n                    }\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/visual/symbol.js\n// module id = 688\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var echartsAPIList = [\n        'getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed',\n        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption',\n        'getViewOfComponentModel', 'getViewOfSeriesModel'\n    ];\n    // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\n    function ExtensionAPI(chartInstance) {\n        zrUtil.each(echartsAPIList, function (name) {\n            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n        }, this);\n    }\n\n    module.exports = ExtensionAPI;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/ExtensionAPI.js\n// module id = 708\n// module chunks = 0 1 2","/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n\n    var graphic = require('../../util/graphic');\n    var Symbol = require('./Symbol');\n\n    /**\n     * @constructor\n     * @alias module:echarts/chart/helper/SymbolDraw\n     * @param {module:zrender/graphic/Group} [symbolCtor]\n     */\n    function SymbolDraw(symbolCtor) {\n        this.group = new graphic.Group();\n\n        this._symbolCtor = symbolCtor || Symbol;\n    }\n\n    var symbolDrawProto = SymbolDraw.prototype;\n\n    function symbolNeedsDraw(data, idx, isIgnore) {\n        var point = data.getItemLayout(idx);\n        // Is an object\n        // if (point && point.hasOwnProperty('point')) {\n        //     point = point.point;\n        // }\n        return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx))\n                    && data.getItemVisual(idx, 'symbol') !== 'none';\n    }\n    /**\n     * Update symbols draw by new data\n     * @param {module:echarts/data/List} data\n     * @param {Array.<boolean>} [isIgnore]\n     */\n    symbolDrawProto.updateData = function (data, isIgnore) {\n        var group = this.group;\n        var seriesModel = data.hostModel;\n        var oldData = this._data;\n\n        var SymbolCtor = this._symbolCtor;\n\n        var seriesScope = {\n            itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n            hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n            symbolRotate: seriesModel.get('symbolRotate'),\n            symbolOffset: seriesModel.get('symbolOffset'),\n            hoverAnimation: seriesModel.get('hoverAnimation'),\n\n            labelModel: seriesModel.getModel('label.normal'),\n            hoverLabelModel: seriesModel.getModel('label.emphasis'),\n            cursorStyle: seriesModel.get('cursor')\n        };\n\n        data.diff(oldData)\n            .add(function (newIdx) {\n                var point = data.getItemLayout(newIdx);\n                if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n                    symbolEl.attr('position', point);\n                    data.setItemGraphicEl(newIdx, symbolEl);\n                    group.add(symbolEl);\n                }\n            })\n            .update(function (newIdx, oldIdx) {\n                var symbolEl = oldData.getItemGraphicEl(oldIdx);\n                var point = data.getItemLayout(newIdx);\n                if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    group.remove(symbolEl);\n                    return;\n                }\n                if (!symbolEl) {\n                    symbolEl = new SymbolCtor(data, newIdx);\n                    symbolEl.attr('position', point);\n                }\n                else {\n                    symbolEl.updateData(data, newIdx, seriesScope);\n                    graphic.updateProps(symbolEl, {\n                        position: point\n                    }, seriesModel);\n                }\n\n                // Add back\n                group.add(symbolEl);\n\n                data.setItemGraphicEl(newIdx, symbolEl);\n            })\n            .remove(function (oldIdx) {\n                var el = oldData.getItemGraphicEl(oldIdx);\n                el && el.fadeOut(function () {\n                    group.remove(el);\n                });\n            })\n            .execute();\n\n        this._data = data;\n    };\n\n    symbolDrawProto.updateLayout = function () {\n        var data = this._data;\n        if (data) {\n            // Not use animation\n            data.eachItemGraphicEl(function (el, idx) {\n                var point = data.getItemLayout(idx);\n                el.attr('position', point);\n            });\n        }\n    };\n\n    symbolDrawProto.remove = function (enableAnimation) {\n        var group = this.group;\n        var data = this._data;\n        if (data) {\n            if (enableAnimation) {\n                data.eachItemGraphicEl(function (el) {\n                    el.fadeOut(function () {\n                        group.remove(el);\n                    });\n                });\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    };\n\n    module.exports = SymbolDraw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/SymbolDraw.js\n// module id = 709\n// module chunks = 0 1 2","/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var graphic = require('../../util/graphic');\n    var modelUtil = require('../../util/model');\n\n    var helper = {};\n\n    helper.findLabelValueDim = function (data) {\n        var valueDim;\n        var labelDims = modelUtil.otherDimToDataDim(data, 'label');\n\n        if (labelDims.length) {\n            valueDim = labelDims[0];\n        }\n        else {\n            // Get last value dim\n            var dimensions = data.dimensions.slice();\n            var dataType;\n            while (dimensions.length && (\n                valueDim = dimensions.pop(),\n                dataType = data.getDimensionInfo(valueDim).type,\n                dataType === 'ordinal' || dataType === 'time'\n            )) {} // jshint ignore:line\n        }\n\n        return valueDim;\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/labelHelper.js\n// module id = 710\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n    var PRIORITY = echarts.PRIORITY;\n\n    require('./line/LineSeries');\n    require('./line/LineView');\n\n    echarts.registerVisual(zrUtil.curry(\n        require('../visual/symbol'), 'line', 'circle', 'line'\n    ));\n    echarts.registerLayout(zrUtil.curry(\n        require('../layout/points'), 'line'\n    ));\n\n    // Down sample after filter\n    echarts.registerProcessor(PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(\n        require('../processor/dataSample'), 'line'\n    ));\n\n    // In case developer forget to include grid component\n    require('../component/gridSimple');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line.js\n// module id = 711\n// module chunks = 0 1 2","'use strict';\n\n\n    var createListFromArray = require('../helper/createListFromArray');\n    var SeriesModel = require('../../model/Series');\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.line',\n\n        dependencies: ['grid', 'polar'],\n\n        getInitialData: function (option, ecModel) {\n            if (__DEV__) {\n                var coordSys = option.coordinateSystem;\n                if (coordSys !== 'polar' && coordSys !== 'cartesian2d') {\n                    throw new Error('Line not support coordinateSystem besides cartesian and polar');\n                }\n            }\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // stack: null\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // polarIndex: 0,\n\n            // If clip the overflow value\n            clipOverflow: true,\n            // cursor: null,\n\n            label: {\n                normal: {\n                    position: 'top'\n                }\n            },\n            // itemStyle: {\n            //     normal: {},\n            //     emphasis: {}\n            // },\n            lineStyle: {\n                normal: {\n                    width: 2,\n                    type: 'solid'\n                }\n            },\n            // areaStyle: {},\n            // false, 'start', 'end', 'middle'\n            step: false,\n\n            // Disabled if step is true\n            smooth: false,\n            smoothMonotone: null,\n            // 拐点图形类型\n            symbol: 'emptyCircle',\n            // 拐点图形大小\n            symbolSize: 4,\n            // 拐点图形旋转控制\n            symbolRotate: null,\n\n            // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n            showSymbol: true,\n            // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n            showAllSymbol: false,\n\n            // 是否连接断点\n            connectNulls: false,\n\n            // 数据过滤，'average', 'max', 'min', 'sum'\n            sampling: 'none',\n\n            animationEasing: 'linear',\n\n            // Disable progressive\n            progressive: 0,\n            hoverLayerThreshold: Infinity\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/LineSeries.js\n// module id = 712\n// module chunks = 0 1 2","'use strict';\n// FIXME step not support polar\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var SymbolDraw = require('../helper/SymbolDraw');\n    var Symbol = require('../helper/Symbol');\n    var lineAnimationDiff = require('./lineAnimationDiff');\n    var graphic = require('../../util/graphic');\n    var modelUtil = require('../../util/model');\n    var polyHelper = require('./poly');\n    var ChartView = require('../../view/Chart');\n\n    function isPointsSame(points1, points2) {\n        if (points1.length !== points2.length) {\n            return;\n        }\n        for (var i = 0; i < points1.length; i++) {\n            var p1 = points1[i];\n            var p2 = points2[i];\n            if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n                return;\n            }\n        }\n        return true;\n    }\n\n    function getSmooth(smooth) {\n        return typeof (smooth) === 'number' ? smooth : (smooth ? 0.3 : 0);\n    }\n\n    function getAxisExtentWithGap(axis) {\n        var extent = axis.getGlobalExtent();\n        if (axis.onBand) {\n            // Remove extra 1px to avoid line miter in clipped edge\n            var halfBandWidth = axis.getBandWidth() / 2 - 1;\n            var dir = extent[1] > extent[0] ? 1 : -1;\n            extent[0] += dir * halfBandWidth;\n            extent[1] -= dir * halfBandWidth;\n        }\n        return extent;\n    }\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n    /**\n     * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n     * @param {module:echarts/data/List} data\n     * @param {Array.<Array.<number>>} points\n     * @private\n     */\n    function getStackedOnPoints(coordSys, data) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        return data.mapArray([valueDim], function (val, idx) {\n            var stackedOnSameSign;\n            var stackedOn = data.stackedOn;\n            // Find first stacked value with same sign\n            while (stackedOn &&\n                sign(stackedOn.get(valueDim, idx)) === sign(val)\n            ) {\n                stackedOnSameSign = stackedOn;\n                break;\n            }\n            var stackedData = [];\n            stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n            stackedData[1 - baseDataOffset] = stackedOnSameSign\n                ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n            return coordSys.dataToPoint(stackedData);\n        }, true);\n    }\n\n    function createGridClipShape(cartesian, hasAnimation, seriesModel) {\n        var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n        var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n        var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n\n        var x = Math.min(xExtent[0], xExtent[1]);\n        var y = Math.min(yExtent[0], yExtent[1]);\n        var width = Math.max(xExtent[0], xExtent[1]) - x;\n        var height = Math.max(yExtent[0], yExtent[1]) - y;\n        var lineWidth = seriesModel.get('lineStyle.normal.width') || 2;\n        // Expand clip shape to avoid clipping when line value exceeds axis\n        var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n        if (isHorizontal) {\n            y -= expandSize;\n            height += expandSize * 2;\n        }\n        else {\n            x -= expandSize;\n            width += expandSize * 2;\n        }\n\n        var clipPath = new graphic.Rect({\n            shape: {\n                x: x,\n                y: y,\n                width: width,\n                height: height\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n            graphic.initProps(clipPath, {\n                shape: {\n                    width: width,\n                    height: height\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createPolarClipShape(polar, hasAnimation, seriesModel) {\n        var angleAxis = polar.getAngleAxis();\n        var radiusAxis = polar.getRadiusAxis();\n\n        var radiusExtent = radiusAxis.getExtent();\n        var angleExtent = angleAxis.getExtent();\n\n        var RADIAN = Math.PI / 180;\n\n        var clipPath = new graphic.Sector({\n            shape: {\n                cx: polar.cx,\n                cy: polar.cy,\n                r0: radiusExtent[0],\n                r: radiusExtent[1],\n                startAngle: -angleExtent[0] * RADIAN,\n                endAngle: -angleExtent[1] * RADIAN,\n                clockwise: angleAxis.inverse\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: -angleExtent[1] * RADIAN\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createClipShape(coordSys, hasAnimation, seriesModel) {\n        return coordSys.type === 'polar'\n            ? createPolarClipShape(coordSys, hasAnimation, seriesModel)\n            : createGridClipShape(coordSys, hasAnimation, seriesModel);\n    }\n\n    function turnPointsIntoStep(points, coordSys, stepTurnAt) {\n        var baseAxis = coordSys.getBaseAxis();\n        var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n\n        var stepPoints = [];\n        for (var i = 0; i < points.length - 1; i++) {\n            var nextPt = points[i + 1];\n            var pt = points[i];\n            stepPoints.push(pt);\n\n            var stepPt = [];\n            switch (stepTurnAt) {\n                case 'end':\n                    stepPt[baseIndex] = nextPt[baseIndex];\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n                    break;\n                case 'middle':\n                    // default is start\n                    var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n                    var stepPt2 = [];\n                    stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n                    stepPoints.push(stepPt);\n                    stepPoints.push(stepPt2);\n                    break;\n                default:\n                    stepPt[baseIndex] = pt[baseIndex];\n                    stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n            }\n        }\n        // Last points\n        points[i] && stepPoints.push(points[i]);\n        return stepPoints;\n    }\n\n    function getVisualGradient(data, coordSys) {\n        var visualMetaList = data.getVisual('visualMeta');\n        if (!visualMetaList || !visualMetaList.length || !data.count()) {\n            // When data.count() is 0, gradient range can not be calculated.\n            return;\n        }\n\n        var visualMeta;\n        for (var i = visualMetaList.length - 1; i >= 0; i--) {\n            // Can only be x or y\n            if (visualMetaList[i].dimension < 2) {\n                visualMeta = visualMetaList[i];\n                break;\n            }\n        }\n        if (!visualMeta || coordSys.type !== 'cartesian2d') {\n            if (__DEV__) {\n                console.warn('Visual map on line style only support x or y dimension.');\n            }\n            return;\n        }\n\n        // If the area to be rendered is bigger than area defined by LinearGradient,\n        // the canvas spec prescribes that the color of the first stop and the last\n        // stop should be used. But if two stops are added at offset 0, in effect\n        // browsers use the color of the second stop to render area outside\n        // LinearGradient. So we can only infinitesimally extend area defined in\n        // LinearGradient to render `outerColors`.\n\n        var dimension = visualMeta.dimension;\n        var dimName = data.dimensions[dimension];\n        var axis = coordSys.getAxis(dimName);\n\n        // dataToCoor mapping may not be linear, but must be monotonic.\n        var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n            return {\n                coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n                color: stop.color\n            };\n        });\n        var stopLen = colorStops.length;\n        var outerColors = visualMeta.outerColors.slice();\n\n        if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n            colorStops.reverse();\n            outerColors.reverse();\n        }\n\n        var tinyExtent = 10; // Arbitrary value: 10px\n        var minCoord = colorStops[0].coord - tinyExtent;\n        var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n        var coordSpan = maxCoord - minCoord;\n\n        if (coordSpan < 1e-3) {\n            return 'transparent';\n        }\n\n        zrUtil.each(colorStops, function (stop) {\n            stop.offset = (stop.coord - minCoord) / coordSpan;\n        });\n        colorStops.push({\n            offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n            color: outerColors[1] || 'transparent'\n        });\n        colorStops.unshift({ // notice colorStops.length have been changed.\n            offset: stopLen ? colorStops[0].offset : 0.5,\n            color: outerColors[0] || 'transparent'\n        });\n\n        // zrUtil.each(colorStops, function (colorStop) {\n        //     // Make sure each offset has rounded px to avoid not sharp edge\n        //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n        // });\n\n        var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n        gradient[dimName] = minCoord;\n        gradient[dimName + '2'] = maxCoord;\n\n        return gradient;\n    }\n\n    module.exports = ChartView.extend({\n\n        type: 'line',\n\n        init: function () {\n            var lineGroup = new graphic.Group();\n\n            var symbolDraw = new SymbolDraw();\n            this.group.add(symbolDraw.group);\n\n            this._symbolDraw = symbolDraw;\n            this._lineGroup = lineGroup;\n        },\n\n        render: function (seriesModel, ecModel, api) {\n            var coordSys = seriesModel.coordinateSystem;\n            var group = this.group;\n            var data = seriesModel.getData();\n            var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n            var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n\n            var points = data.mapArray(data.getItemLayout, true);\n\n            var isCoordSysPolar = coordSys.type === 'polar';\n            var prevCoordSys = this._coordSys;\n\n            var symbolDraw = this._symbolDraw;\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n\n            var lineGroup = this._lineGroup;\n\n            var hasAnimation = seriesModel.get('animation');\n\n            var isAreaChart = !areaStyleModel.isEmpty();\n            var stackedOnPoints = getStackedOnPoints(coordSys, data);\n\n            var showSymbol = seriesModel.get('showSymbol');\n\n            var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol')\n                && this._getSymbolIgnoreFunc(data, coordSys);\n\n            // Remove temporary symbols\n            var oldData = this._data;\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            // Remove previous created symbols if showSymbol changed to false\n            if (!showSymbol) {\n                symbolDraw.remove();\n            }\n\n            group.add(lineGroup);\n\n            // FIXME step not support polar\n            var step = !isCoordSysPolar && seriesModel.get('step');\n            // Initialization animation or coordinate system changed\n            if (\n                !(polyline && prevCoordSys.type === coordSys.type && step === this._step)\n            ) {\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                if (step) {\n                    // TODO If stacked series is not step\n                    points = turnPointsIntoStep(points, coordSys, step);\n                    stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                }\n\n                polyline = this._newPolyline(points, coordSys, hasAnimation);\n                if (isAreaChart) {\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n            }\n            else {\n                if (isAreaChart && !polygon) {\n                    // If areaStyle is added\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                else if (polygon && !isAreaChart) {\n                    // If areaStyle is removed\n                    lineGroup.remove(polygon);\n                    polygon = this._polygon = null;\n                }\n\n                // Update clipPath\n                lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel));\n\n                // Always update, or it is wrong in the case turning on legend\n                // because points are not changed\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                // Stop symbol animation and sync with line points\n                // FIXME performance?\n                data.eachItemGraphicEl(function (el) {\n                    el.stopAnimation(true);\n                });\n\n                // In the case data zoom triggerred refreshing frequently\n                // Data may not change if line has a category axis. So it should animate nothing\n                if (!isPointsSame(this._stackedOnPoints, stackedOnPoints)\n                    || !isPointsSame(this._points, points)\n                ) {\n                    if (hasAnimation) {\n                        this._updateAnimation(\n                            data, stackedOnPoints, coordSys, api, step\n                        );\n                    }\n                    else {\n                        // Not do it in update with animation\n                        if (step) {\n                            // TODO If stacked series is not step\n                            points = turnPointsIntoStep(points, coordSys, step);\n                            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                        }\n\n                        polyline.setShape({\n                            points: points\n                        });\n                        polygon && polygon.setShape({\n                            points: points,\n                            stackedOnPoints: stackedOnPoints\n                        });\n                    }\n                }\n            }\n\n            var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n\n            polyline.useStyle(zrUtil.defaults(\n                // Use color in lineStyle first\n                lineStyleModel.getLineStyle(),\n                {\n                    fill: 'none',\n                    stroke: visualColor,\n                    lineJoin: 'bevel'\n                }\n            ));\n\n            var smooth = seriesModel.get('smooth');\n            smooth = getSmooth(seriesModel.get('smooth'));\n            polyline.setShape({\n                smooth: smooth,\n                smoothMonotone: seriesModel.get('smoothMonotone'),\n                connectNulls: seriesModel.get('connectNulls')\n            });\n\n            if (polygon) {\n                var stackedOn = data.stackedOn;\n                var stackedOnSmooth = 0;\n\n                polygon.useStyle(zrUtil.defaults(\n                    areaStyleModel.getAreaStyle(),\n                    {\n                        fill: visualColor,\n                        opacity: 0.7,\n                        lineJoin: 'bevel'\n                    }\n                ));\n\n                if (stackedOn) {\n                    var stackedOnSeries = stackedOn.hostModel;\n                    stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n                }\n\n                polygon.setShape({\n                    smooth: smooth,\n                    stackedOnSmooth: stackedOnSmooth,\n                    smoothMonotone: seriesModel.get('smoothMonotone'),\n                    connectNulls: seriesModel.get('connectNulls')\n                });\n            }\n\n            this._data = data;\n            // Save the coordinate system for transition animation when data changed\n            this._coordSys = coordSys;\n            this._stackedOnPoints = stackedOnPoints;\n            this._points = points;\n            this._step = step;\n        },\n\n        dispose: function () {},\n\n        highlight: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n            if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (!symbol) {\n                    // Create a temporary symbol if it is not exists\n                    var pt = data.getItemLayout(dataIndex);\n                    if (!pt) {\n                        // Null data\n                        return;\n                    }\n                    symbol = new Symbol(data, dataIndex);\n                    symbol.position = pt;\n                    symbol.setZ(\n                        seriesModel.get('zlevel'),\n                        seriesModel.get('z')\n                    );\n                    symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n                    symbol.__temp = true;\n                    data.setItemGraphicEl(dataIndex, symbol);\n\n                    // Stop scale animation\n                    symbol.stopSymbolAnimation(true);\n\n                    this.group.add(symbol);\n                }\n                symbol.highlight();\n            }\n            else {\n                // Highlight whole series\n                ChartView.prototype.highlight.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        downplay: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n            if (dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (symbol) {\n                    if (symbol.__temp) {\n                        data.setItemGraphicEl(dataIndex, null);\n                        this.group.remove(symbol);\n                    }\n                    else {\n                        symbol.downplay();\n                    }\n                }\n            }\n            else {\n                // FIXME\n                // can not downplay completely.\n                // Downplay whole series\n                ChartView.prototype.downplay.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolyline: function (points) {\n            var polyline = this._polyline;\n            // Remove previous created polyline\n            if (polyline) {\n                this._lineGroup.remove(polyline);\n            }\n\n            polyline = new polyHelper.Polyline({\n                shape: {\n                    points: points\n                },\n                silent: true,\n                z2: 10\n            });\n\n            this._lineGroup.add(polyline);\n\n            this._polyline = polyline;\n\n            return polyline;\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} stackedOnPoints\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolygon: function (points, stackedOnPoints) {\n            var polygon = this._polygon;\n            // Remove previous created polygon\n            if (polygon) {\n                this._lineGroup.remove(polygon);\n            }\n\n            polygon = new polyHelper.Polygon({\n                shape: {\n                    points: points,\n                    stackedOnPoints: stackedOnPoints\n                },\n                silent: true\n            });\n\n            this._lineGroup.add(polygon);\n\n            this._polygon = polygon;\n            return polygon;\n        },\n        /**\n         * @private\n         */\n        _getSymbolIgnoreFunc: function (data, coordSys) {\n            var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n            // `getLabelInterval` is provided by echarts/component/axis\n            if (categoryAxis && categoryAxis.isLabelIgnored) {\n                return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n            }\n        },\n\n        /**\n         * @private\n         */\n        // FIXME Two value axis\n        _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n            var seriesModel = data.hostModel;\n\n            var diff = lineAnimationDiff(\n                this._data, data,\n                this._stackedOnPoints, stackedOnPoints,\n                this._coordSys, coordSys\n            );\n\n            var current = diff.current;\n            var stackedOnCurrent = diff.stackedOnCurrent;\n            var next = diff.next;\n            var stackedOnNext = diff.stackedOnNext;\n            if (step) {\n                // TODO If stacked series is not step\n                current = turnPointsIntoStep(diff.current, coordSys, step);\n                stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n                next = turnPointsIntoStep(diff.next, coordSys, step);\n                stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n            }\n            // `diff.current` is subset of `current` (which should be ensured by\n            // turnPointsIntoStep), so points in `__points` can be updated when\n            // points in `current` are update during animation.\n            polyline.shape.__points = diff.current;\n            polyline.shape.points = current;\n\n            graphic.updateProps(polyline, {\n                shape: {\n                    points: next\n                }\n            }, seriesModel);\n\n            if (polygon) {\n                polygon.setShape({\n                    points: current,\n                    stackedOnPoints: stackedOnCurrent\n                });\n                graphic.updateProps(polygon, {\n                    shape: {\n                        points: next,\n                        stackedOnPoints: stackedOnNext\n                    }\n                }, seriesModel);\n            }\n\n            var updatedDataInfo = [];\n            var diffStatus = diff.status;\n\n            for (var i = 0; i < diffStatus.length; i++) {\n                var cmd = diffStatus[i].cmd;\n                if (cmd === '=') {\n                    var el = data.getItemGraphicEl(diffStatus[i].idx1);\n                    if (el) {\n                        updatedDataInfo.push({\n                            el: el,\n                            ptIdx: i    // Index of points\n                        });\n                    }\n                }\n            }\n\n            if (polyline.animators && polyline.animators.length) {\n                polyline.animators[0].during(function () {\n                    for (var i = 0; i < updatedDataInfo.length; i++) {\n                        var el = updatedDataInfo[i].el;\n                        el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n                    }\n                });\n            }\n        },\n\n        remove: function (ecModel) {\n            var group = this.group;\n            var oldData = this._data;\n            this._lineGroup.removeAll();\n            this._symbolDraw.remove(true);\n            // Remove temporary created elements when highlighting\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            this._polyline =\n            this._polygon =\n            this._coordSys =\n            this._points =\n            this._stackedOnPoints =\n            this._data = null;\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/LineView.js\n// module id = 713\n// module chunks = 0 1 2","\n\n    // var arrayDiff = require('zrender/lib/core/arrayDiff');\n    // 'zrender/core/arrayDiff' has been used before, but it did\n    // not do well in performance when roam with fixed dataZoom window.\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n\n    function getStackedOnPoint(coordSys, data, idx) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        var stackedOnSameSign;\n        var stackedOn = data.stackedOn;\n        var val = data.get(valueDim, idx);\n        // Find first stacked value with same sign\n        while (stackedOn &&\n            sign(stackedOn.get(valueDim, idx)) === sign(val)\n        ) {\n            stackedOnSameSign = stackedOn;\n            break;\n        }\n        var stackedData = [];\n        stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n        stackedData[1 - baseDataOffset] = stackedOnSameSign\n            ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n        return coordSys.dataToPoint(stackedData);\n    }\n\n    // function convertToIntId(newIdList, oldIdList) {\n    //     // Generate int id instead of string id.\n    //     // Compare string maybe slow in score function of arrDiff\n\n    //     // Assume id in idList are all unique\n    //     var idIndicesMap = {};\n    //     var idx = 0;\n    //     for (var i = 0; i < newIdList.length; i++) {\n    //         idIndicesMap[newIdList[i]] = idx;\n    //         newIdList[i] = idx++;\n    //     }\n    //     for (var i = 0; i < oldIdList.length; i++) {\n    //         var oldId = oldIdList[i];\n    //         // Same with newIdList\n    //         if (idIndicesMap[oldId]) {\n    //             oldIdList[i] = idIndicesMap[oldId];\n    //         }\n    //         else {\n    //             oldIdList[i] = idx++;\n    //         }\n    //     }\n    // }\n\n    function diffData(oldData, newData) {\n        var diffResult = [];\n\n        newData.diff(oldData)\n            .add(function (idx) {\n                diffResult.push({cmd: '+', idx: idx});\n            })\n            .update(function (newIdx, oldIdx) {\n                diffResult.push({cmd: '=', idx: oldIdx, idx1: newIdx});\n            })\n            .remove(function (idx) {\n                diffResult.push({cmd: '-', idx: idx});\n            })\n            .execute();\n\n        return diffResult;\n    }\n\n    module.exports = function (\n        oldData, newData,\n        oldStackedOnPoints, newStackedOnPoints,\n        oldCoordSys, newCoordSys\n    ) {\n        var diff = diffData(oldData, newData);\n\n        // var newIdList = newData.mapArray(newData.getId);\n        // var oldIdList = oldData.mapArray(oldData.getId);\n\n        // convertToIntId(newIdList, oldIdList);\n\n        // // FIXME One data ?\n        // diff = arrayDiff(oldIdList, newIdList);\n\n        var currPoints = [];\n        var nextPoints = [];\n        // Points for stacking base line\n        var currStackedPoints = [];\n        var nextStackedPoints = [];\n\n        var status = [];\n        var sortedIndices = [];\n        var rawIndices = [];\n        var dims = newCoordSys.dimensions;\n        for (var i = 0; i < diff.length; i++) {\n            var diffItem = diff[i];\n            var pointAdded = true;\n\n            // FIXME, animation is not so perfect when dataZoom window moves fast\n            // Which is in case remvoing or add more than one data in the tail or head\n            switch (diffItem.cmd) {\n                case '=':\n                    var currentPt = oldData.getItemLayout(diffItem.idx);\n                    var nextPt = newData.getItemLayout(diffItem.idx1);\n                    // If previous data is NaN, use next point directly\n                    if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n                        currentPt = nextPt.slice();\n                    }\n                    currPoints.push(currentPt);\n                    nextPoints.push(nextPt);\n\n                    currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n                    nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n\n                    rawIndices.push(newData.getRawIndex(diffItem.idx1));\n                    break;\n                case '+':\n                    var idx = diffItem.idx;\n                    currPoints.push(\n                        oldCoordSys.dataToPoint([\n                            newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)\n                        ])\n                    );\n\n                    nextPoints.push(newData.getItemLayout(idx).slice());\n\n                    currStackedPoints.push(\n                        getStackedOnPoint(oldCoordSys, newData, idx)\n                    );\n                    nextStackedPoints.push(newStackedOnPoints[idx]);\n\n                    rawIndices.push(newData.getRawIndex(idx));\n                    break;\n                case '-':\n                    var idx = diffItem.idx;\n                    var rawIndex = oldData.getRawIndex(idx);\n                    // Data is replaced. In the case of dynamic data queue\n                    // FIXME FIXME FIXME\n                    if (rawIndex !== idx) {\n                        currPoints.push(oldData.getItemLayout(idx));\n                        nextPoints.push(newCoordSys.dataToPoint([\n                            oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)\n                        ]));\n\n                        currStackedPoints.push(oldStackedOnPoints[idx]);\n                        nextStackedPoints.push(\n                            getStackedOnPoint(\n                                newCoordSys, oldData, idx\n                            )\n                        );\n\n                        rawIndices.push(rawIndex);\n                    }\n                    else {\n                        pointAdded = false;\n                    }\n            }\n\n            // Original indices\n            if (pointAdded) {\n                status.push(diffItem);\n                sortedIndices.push(sortedIndices.length);\n            }\n        }\n\n        // Diff result may be crossed if all items are changed\n        // Sort by data index\n        sortedIndices.sort(function (a, b) {\n            return rawIndices[a] - rawIndices[b];\n        });\n\n        var sortedCurrPoints = [];\n        var sortedNextPoints = [];\n\n        var sortedCurrStackedPoints = [];\n        var sortedNextStackedPoints = [];\n\n        var sortedStatus = [];\n        for (var i = 0; i < sortedIndices.length; i++) {\n            var idx = sortedIndices[i];\n            sortedCurrPoints[i] = currPoints[idx];\n            sortedNextPoints[i] = nextPoints[idx];\n\n            sortedCurrStackedPoints[i] = currStackedPoints[idx];\n            sortedNextStackedPoints[i] = nextStackedPoints[idx];\n\n            sortedStatus[i] = status[idx];\n        }\n\n        return {\n            current: sortedCurrPoints,\n            next: sortedNextPoints,\n\n            stackedOnCurrent: sortedCurrStackedPoints,\n            stackedOnNext: sortedNextStackedPoints,\n\n            status: sortedStatus\n        };\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/lineAnimationDiff.js\n// module id = 714\n// module chunks = 0 1 2","// Poly path support NaN point\n\n\n    var Path = require('zrender/lib/graphic/Path');\n    var vec2 = require('zrender/lib/core/vector');\n    var fixClipWithShadow = require('zrender/lib/graphic/helper/fixClipWithShadow');\n\n    var vec2Min = vec2.min;\n    var vec2Max = vec2.max;\n\n    var scaleAndAdd = vec2.scaleAndAdd;\n    var v2Copy = vec2.copy;\n\n    // Temporary variable\n    var v = [];\n    var cp0 = [];\n    var cp1 = [];\n\n    function isPointNull(p) {\n        return isNaN(p[0]) || isNaN(p[1]);\n    }\n\n    function drawSegment(\n        ctx, points, start, segLen, allLen,\n        dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls\n    ) {\n        var prevIdx = 0;\n        var idx = start;\n        for (var k = 0; k < segLen; k++) {\n            var p = points[idx];\n            if (idx >= allLen || idx < 0) {\n                break;\n            }\n            if (isPointNull(p)) {\n                if (connectNulls) {\n                    idx += dir;\n                    continue;\n                }\n                break;\n            }\n\n            if (idx === start) {\n                ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n                v2Copy(cp0, p);\n            }\n            else {\n                if (smooth > 0) {\n                    var nextIdx = idx + dir;\n                    var nextP = points[nextIdx];\n                    if (connectNulls) {\n                        // Find next point not null\n                        while (nextP && isPointNull(points[nextIdx])) {\n                            nextIdx += dir;\n                            nextP = points[nextIdx];\n                        }\n                    }\n\n                    var ratioNextSeg = 0.5;\n                    var prevP = points[prevIdx];\n                    var nextP = points[nextIdx];\n                    // Last point\n                    if (!nextP || isPointNull(nextP)) {\n                        v2Copy(cp1, p);\n                    }\n                    else {\n                        // If next data is null in not connect case\n                        if (isPointNull(nextP) && !connectNulls) {\n                            nextP = p;\n                        }\n\n                        vec2.sub(v, nextP, prevP);\n\n                        var lenPrevSeg;\n                        var lenNextSeg;\n                        if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n                            var dim = smoothMonotone === 'x' ? 0 : 1;\n                            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n                            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n                        }\n                        else {\n                            lenPrevSeg = vec2.dist(p, prevP);\n                            lenNextSeg = vec2.dist(p, nextP);\n                        }\n\n                        // Use ratio of seg length\n                        ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n\n                        scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n                    }\n                    // Smooth constraint\n                    vec2Min(cp0, cp0, smoothMax);\n                    vec2Max(cp0, cp0, smoothMin);\n                    vec2Min(cp1, cp1, smoothMax);\n                    vec2Max(cp1, cp1, smoothMin);\n\n                    ctx.bezierCurveTo(\n                        cp0[0], cp0[1],\n                        cp1[0], cp1[1],\n                        p[0], p[1]\n                    );\n                    // cp0 of next segment\n                    scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n                }\n                else {\n                    ctx.lineTo(p[0], p[1]);\n                }\n            }\n\n            prevIdx = idx;\n            idx += dir;\n        }\n\n        return k;\n    }\n\n    function getBoundingBox(points, smoothConstraint) {\n        var ptMin = [Infinity, Infinity];\n        var ptMax = [-Infinity, -Infinity];\n        if (smoothConstraint) {\n            for (var i = 0; i < points.length; i++) {\n                var pt = points[i];\n                if (pt[0] < ptMin[0]) { ptMin[0] = pt[0]; }\n                if (pt[1] < ptMin[1]) { ptMin[1] = pt[1]; }\n                if (pt[0] > ptMax[0]) { ptMax[0] = pt[0]; }\n                if (pt[1] > ptMax[1]) { ptMax[1] = pt[1]; }\n            }\n        }\n        return {\n            min: smoothConstraint ? ptMin : ptMax,\n            max: smoothConstraint ? ptMax : ptMin\n        };\n    }\n\n    module.exports = {\n\n        Polyline: Path.extend({\n\n            type: 'ec-polyline',\n\n            shape: {\n                points: [],\n\n                smooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            style: {\n                fill: null,\n\n                stroke: '#000'\n            },\n\n            brush: fixClipWithShadow(Path.prototype.brush),\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n\n                var i = 0;\n                var len = points.length;\n\n                var result = getBoundingBox(points, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    i += drawSegment(\n                        ctx, points, i, len, len,\n                        1, result.min, result.max, shape.smooth,\n                        shape.smoothMonotone, shape.connectNulls\n                    ) + 1;\n                }\n            }\n        }),\n\n        Polygon: Path.extend({\n\n            type: 'ec-polygon',\n\n            shape: {\n                points: [],\n\n                // Offset between stacked base points and points\n                stackedOnPoints: [],\n\n                smooth: 0,\n\n                stackedOnSmooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            brush: fixClipWithShadow(Path.prototype.brush),\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n                var stackedOnPoints = shape.stackedOnPoints;\n\n                var i = 0;\n                var len = points.length;\n                var smoothMonotone = shape.smoothMonotone;\n                var bbox = getBoundingBox(points, shape.smoothConstraint);\n                var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    var k = drawSegment(\n                        ctx, points, i, len, len,\n                        1, bbox.min, bbox.max, shape.smooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    drawSegment(\n                        ctx, stackedOnPoints, i + k - 1, k, len,\n                        -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    i += k + 1;\n\n                    ctx.closePath();\n                }\n            }\n        })\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/poly.js\n// module id = 715\n// module chunks = 0 1 2","'use strict';\n// TODO boundaryGap\n\n\n    require('../coord/cartesian/AxisModel');\n\n    require('./axis/CartesianAxisView');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis.js\n// module id = 716\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var AxisBuilder = require('./AxisBuilder');\n    var AxisView = require('./AxisView');\n    var cartesianAxisHelper = require('./cartesianAxisHelper');\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\n    var getInterval = AxisBuilder.getInterval;\n\n    var axisBuilderAttrs = [\n        'axisLine', 'axisLabel', 'axisTick', 'axisName'\n    ];\n    var selfBuilderAttrs = [\n        'splitArea', 'splitLine'\n    ];\n\n    // function getAlignWithLabel(model, axisModel) {\n    //     var alignWithLabel = model.get('alignWithLabel');\n    //     if (alignWithLabel === 'auto') {\n    //         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n    //     }\n    //     return alignWithLabel;\n    // }\n\n    var CartesianAxisView = AxisView.extend({\n\n        type: 'cartesianAxis',\n\n        axisPointerClass: 'CartesianAxisPointer',\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n\n            this.group.removeAll();\n\n            var oldAxisGroup = this._axisGroup;\n            this._axisGroup = new graphic.Group();\n\n            this.group.add(this._axisGroup);\n\n            if (!axisModel.get('show')) {\n                return;\n            }\n\n            var gridModel = axisModel.getCoordSysModel();\n\n            var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n\n            var axisBuilder = new AxisBuilder(axisModel, layout);\n\n            zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n            this._axisGroup.add(axisBuilder.getGroup());\n\n            zrUtil.each(selfBuilderAttrs, function (name) {\n                if (axisModel.get(name + '.show')) {\n                    this['_' + name](axisModel, gridModel, layout.labelInterval);\n                }\n            }, this);\n\n            graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n\n            CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitLine: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.scale.isBlank()) {\n                return;\n            }\n\n            var splitLineModel = axisModel.getModel('splitLine');\n            var lineStyleModel = splitLineModel.getModel('lineStyle');\n            var lineColors = lineStyleModel.get('color');\n\n            var lineInterval = getInterval(splitLineModel, labelInterval);\n\n            lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n            var isHorizontal = axis.isHorizontal();\n\n            var lineCount = 0;\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitLineModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var p1 = [];\n            var p2 = [];\n            // Simple optimization\n            // Batching the lines if color are the same\n            var lineStyle = lineStyleModel.getLineStyle();\n            for (var i = 0; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, lineInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                if (isHorizontal) {\n                    p1[0] = tickCoord;\n                    p1[1] = gridRect.y;\n                    p2[0] = tickCoord;\n                    p2[1] = gridRect.y + gridRect.height;\n                }\n                else {\n                    p1[0] = gridRect.x;\n                    p1[1] = tickCoord;\n                    p2[0] = gridRect.x + gridRect.width;\n                    p2[1] = tickCoord;\n                }\n\n                var colorIndex = (lineCount++) % lineColors.length;\n                this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n                    anid: 'line_' + ticks[i],\n\n                    shape: {\n                        x1: p1[0],\n                        y1: p1[1],\n                        x2: p2[0],\n                        y2: p2[1]\n                    },\n                    style: zrUtil.defaults({\n                        stroke: lineColors[colorIndex]\n                    }, lineStyle),\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitArea: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.scale.isBlank()) {\n                return;\n            }\n\n            var splitAreaModel = axisModel.getModel('splitArea');\n            var areaStyleModel = splitAreaModel.getModel('areaStyle');\n            var areaColors = areaStyleModel.get('color');\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitAreaModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var prevX = axis.toGlobalCoord(ticksCoords[0]);\n            var prevY = axis.toGlobalCoord(ticksCoords[0]);\n\n            var count = 0;\n\n            var areaInterval = getInterval(splitAreaModel, labelInterval);\n\n            var areaStyle = areaStyleModel.getAreaStyle();\n            areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n            for (var i = 1; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, areaInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                var x;\n                var y;\n                var width;\n                var height;\n                if (axis.isHorizontal()) {\n                    x = prevX;\n                    y = gridRect.y;\n                    width = tickCoord - x;\n                    height = gridRect.height;\n                }\n                else {\n                    x = gridRect.x;\n                    y = prevY;\n                    width = gridRect.width;\n                    height = tickCoord - y;\n                }\n\n                var colorIndex = (count++) % areaColors.length;\n                this._axisGroup.add(new graphic.Rect({\n                    anid: 'area_' + ticks[i],\n\n                    shape: {\n                        x: x,\n                        y: y,\n                        width: width,\n                        height: height\n                    },\n                    style: zrUtil.defaults({\n                        fill: areaColors[colorIndex]\n                    }, areaStyle),\n                    silent: true\n                }));\n\n                prevX = x + width;\n                prevY = y + height;\n            }\n        }\n    });\n\n    CartesianAxisView.extend({\n        type: 'xAxis'\n    });\n    CartesianAxisView.extend({\n        type: 'yAxis'\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/CartesianAxisView.js\n// module id = 717\n// module chunks = 0 1 2","\n\n    var echarts = require('../echarts');\n    var axisPointerModelHelper = require('./axisPointer/modelHelper');\n    var axisTrigger = require('./axisPointer/axisTrigger');\n    var zrUtil = require('zrender/lib/core/util');\n\n    require('./axisPointer/AxisPointerModel');\n    require('./axisPointer/AxisPointerView');\n\n    // CartesianAxisPointer is not supposed to be required here. But consider\n    // echarts.simple.js and online build tooltip, which only require gridSimple,\n    // CartesianAxisPointer should be able to required somewhere.\n    require('./axisPointer/CartesianAxisPointer');\n\n    echarts.registerPreprocessor(function (option) {\n        // Always has a global axisPointerModel for default setting.\n        if (option) {\n            (!option.axisPointer || option.axisPointer.length === 0)\n                && (option.axisPointer = {});\n\n            var link = option.axisPointer.link;\n            // Normalize to array to avoid object mergin. But if link\n            // is not set, remain null/undefined, otherwise it will\n            // override existent link setting.\n            if (link && !zrUtil.isArray(link)) {\n                option.axisPointer.link = [link];\n            }\n        }\n    });\n\n    // This process should proformed after coordinate systems created\n    // and series data processed. So put it on statistic processing stage.\n    echarts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n        // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n        // allAxesInfo should be updated when setOption performed.\n        ecModel.getComponent('axisPointer').coordSysAxesInfo\n            = axisPointerModelHelper.collect(ecModel, api);\n    });\n\n    // Broadcast to all views.\n    echarts.registerAction({\n        type: 'updateAxisPointer',\n        event: 'updateAxisPointer',\n        update: ':updateAxisPointer'\n    }, axisTrigger);\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer.js\n// module id = 718\n// module chunks = 0 1 2","\n\n    var echarts = require('../../echarts');\n\n    var AxisPointerModel = echarts.extendComponentModel({\n\n        type: 'axisPointer',\n\n        coordSysAxesInfo: null,\n\n        defaultOption: {\n            // 'auto' means that show when triggered by tooltip or handle.\n            show: 'auto',\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: null, // set default in AxisPonterView.js\n\n            zlevel: 0,\n            z: 50,\n\n            type: 'line',\n            // axispointer triggered by tootip determine snap automatically,\n            // see `modelHelper`.\n            snap: false,\n            triggerTooltip: true,\n\n            value: null,\n            status: null, // Init value depends on whether handle is used.\n\n            // [group0, group1, ...]\n            // Each group can be: {\n            //      mapper: function () {},\n            //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n            //      xAxisId: ...,\n            //      yAxisName: ...,\n            //      angleAxisIndex: ...\n            // }\n            // mapper: can be ignored.\n            //      input: {axisInfo, value}\n            //      output: {axisInfo, value}\n            link: [],\n\n            // Do not set 'auto' here, otherwise global animation: false\n            // will not effect at this axispointer.\n            animation: null,\n            animationDurationUpdate: 200,\n\n            lineStyle: {\n                color: '#aaa',\n                width: 1,\n                type: 'solid'\n            },\n\n            shadowStyle: {\n                color: 'rgba(150,150,150,0.3)'\n            },\n\n            label: {\n                show: true,\n                formatter: null, // string | Function\n                precision: 'auto', // Or a number like 0, 1, 2 ...\n                margin: 3,\n                color: '#fff',\n                padding: [5, 7, 5, 7],\n                backgroundColor: 'auto', // default: axis line color\n                borderColor: null,\n                borderWidth: 0,\n                shadowBlur: 3,\n                shadowColor: '#aaa'\n                // Considering applicability, common style should\n                // better not have shadowOffset.\n                // shadowOffsetX: 0,\n                // shadowOffsetY: 2\n            },\n\n            handle: {\n                show: false,\n                icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z', // jshint ignore:line\n                size: 45,\n                // handle margin is from symbol center to axis, which is stable when circular move.\n                margin: 50,\n                // color: '#1b8bbd'\n                // color: '#2f4554'\n                color: '#333',\n                shadowBlur: 3,\n                shadowColor: '#aaa',\n                shadowOffsetX: 0,\n                shadowOffsetY: 2,\n\n                // For mobile performance\n                throttle: 40\n            }\n        }\n\n    });\n\n    module.exports = AxisPointerModel;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/AxisPointerModel.js\n// module id = 719\n// module chunks = 0 1 2","\n\n    var globalListener = require('./globalListener');\n\n    var AxisPonterView = require('../../echarts').extendComponentView({\n\n        type: 'axisPointer',\n\n        render: function (globalAxisPointerModel, ecModel, api) {\n            var globalTooltipModel = ecModel.getComponent('tooltip');\n            var triggerOn = globalAxisPointerModel.get('triggerOn')\n                || (globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click');\n\n            // Register global listener in AxisPointerView to enable\n            // AxisPointerView to be independent to Tooltip.\n            globalListener.register(\n                'axisPointer',\n                api,\n                function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none'\n                        && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)\n                    ) {\n                        dispatchAction({\n                            type: 'updateAxisPointer',\n                            currTrigger: currTrigger,\n                            x: e && e.offsetX,\n                            y: e && e.offsetY\n                        });\n                    }\n                }\n            );\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            globalListener.disopse(api.getZr(), 'axisPointer');\n            AxisPonterView.superApply(this._model, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            globalListener.unregister('axisPointer', api);\n            AxisPonterView.superApply(this._model, 'dispose', arguments);\n        }\n\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/AxisPointerView.js\n// module id = 720\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazzUtil = require('../../util/clazz');\n    var graphic = require('../../util/graphic');\n    var get = require('../../util/model').makeGetter();\n    var axisPointerModelHelper = require('./modelHelper');\n    var eventTool = require('zrender/lib/core/event');\n    var throttle = require('../../util/throttle');\n\n    var clone = zrUtil.clone;\n    var bind = zrUtil.bind;\n\n    /**\n     * Base axis pointer class in 2D.\n     * Implemenents {module:echarts/component/axis/IAxisPointer}.\n     */\n    function BaseAxisPointer () {\n    }\n\n    BaseAxisPointer.prototype = {\n\n        /**\n         * @private\n         */\n        _group: null,\n\n        /**\n         * @private\n         */\n        _lastGraphicKey: null,\n\n        /**\n         * @private\n         */\n        _handle: null,\n\n        /**\n         * @private\n         */\n        _dragging: false,\n\n        /**\n         * @private\n         */\n        _lastValue: null,\n\n        /**\n         * @private\n         */\n        _lastStatus: null,\n\n        /**\n         * @private\n         */\n        _payloadInfo: null,\n\n        /**\n         * In px, arbitrary value. Do not set too small,\n         * no animation is ok for most cases.\n         * @protected\n         */\n        animationThreshold: 15,\n\n        /**\n         * @implement\n         */\n        render: function (axisModel, axisPointerModel, api, forceRender) {\n            var value = axisPointerModel.get('value');\n            var status = axisPointerModel.get('status');\n\n            // Bind them to `this`, not in closure, otherwise they will not\n            // be replaced when user calling setOption in not merge mode.\n            this._axisModel = axisModel;\n            this._axisPointerModel = axisPointerModel;\n            this._api = api;\n\n            // Optimize: `render` will be called repeatly during mouse move.\n            // So it is power consuming if performing `render` each time,\n            // especially on mobile device.\n            if (!forceRender\n                && this._lastValue === value\n                && this._lastStatus === status\n            ) {\n                return;\n            }\n            this._lastValue = value;\n            this._lastStatus = status;\n\n            var group = this._group;\n            var handle = this._handle;\n\n            if (!status || status === 'hide') {\n                // Do not clear here, for animation better.\n                group && group.hide();\n                handle && handle.hide();\n                return;\n            }\n            group && group.show();\n            handle && handle.show();\n\n            // Otherwise status is 'show'\n            var elOption = {};\n            this.makeElOption(elOption, value, axisModel, axisPointerModel, api);\n\n            // Enable change axis pointer type.\n            var graphicKey = elOption.graphicKey;\n            if (graphicKey !== this._lastGraphicKey) {\n                this.clear(api);\n            }\n            this._lastGraphicKey = graphicKey;\n\n            var moveAnimation = this._moveAnimation =\n                this.determineAnimation(axisModel, axisPointerModel);\n\n            if (!group) {\n                group = this._group = new graphic.Group();\n                this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n                this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n                api.getZr().add(group);\n            }\n            else {\n                var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n                this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n                this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n            }\n\n            updateMandatoryProps(group, axisPointerModel, true);\n\n            this._renderHandle(value);\n        },\n\n        /**\n         * @implement\n         */\n        remove: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @implement\n         */\n        dispose: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @protected\n         */\n        determineAnimation: function (axisModel, axisPointerModel) {\n            var animation = axisPointerModel.get('animation');\n            var axis = axisModel.axis;\n            var isCategoryAxis = axis.type === 'category';\n            var useSnap = axisPointerModel.get('snap');\n\n            // Value axis without snap always do not snap.\n            if (!useSnap && !isCategoryAxis) {\n                return false;\n            }\n\n            if (animation === 'auto' || animation == null) {\n                var animationThreshold = this.animationThreshold;\n                if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n                    return true;\n                }\n\n                // It is important to auto animation when snap used. Consider if there is\n                // a dataZoom, animation will be disabled when too many points exist, while\n                // it will be enabled for better visual effect when little points exist.\n                if (useSnap) {\n                    var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n                    var axisExtent = axis.getExtent();\n                    // Approximate band width\n                    return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n                }\n\n                return false;\n            }\n\n            return animation === true;\n        },\n\n        /**\n         * add {pointer, label, graphicKey} to elOption\n         * @protected\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            // Shoule be implemenented by sub-class.\n        },\n\n        /**\n         * @protected\n         */\n        createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n            var pointerOption = elOption.pointer;\n            if (pointerOption) {\n                var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](\n                    clone(elOption.pointer)\n                );\n                group.add(pointerEl);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n            if (elOption.label) {\n                var labelEl = get(group).labelEl = new graphic.Rect(\n                    clone(elOption.label)\n                );\n\n                group.add(labelEl);\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updatePointerEl: function (group, elOption, updateProps) {\n            var pointerEl = get(group).pointerEl;\n            if (pointerEl) {\n                pointerEl.setStyle(elOption.pointer.style);\n                updateProps(pointerEl, {shape: elOption.pointer.shape});\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n            var labelEl = get(group).labelEl;\n            if (labelEl) {\n                labelEl.setStyle(elOption.label.style);\n                updateProps(labelEl, {\n                    // Consider text length change in vertical axis, animation should\n                    // be used on shape, otherwise the effect will be weird.\n                    shape: elOption.label.shape,\n                    position: elOption.label.position\n                });\n\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _renderHandle: function (value) {\n            if (this._dragging || !this.updateHandleTransform) {\n                return;\n            }\n\n            var axisPointerModel = this._axisPointerModel;\n            var zr = this._api.getZr();\n            var handle = this._handle;\n            var handleModel = axisPointerModel.getModel('handle');\n\n            var status = axisPointerModel.get('status');\n            if (!handleModel.get('show') || !status || status === 'hide') {\n                handle && zr.remove(handle);\n                this._handle = null;\n                return;\n            }\n\n            var isInit;\n            if (!this._handle) {\n                isInit = true;\n                handle = this._handle = graphic.createIcon(\n                    handleModel.get('icon'), \n                    {\n                        cursor: 'move',\n                        draggable: true,\n                        onmousemove: function (e) {\n                            // Fot mobile devicem, prevent screen slider on the button.\n                            eventTool.stop(e.event);\n                        },\n                        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n                        drift: bind(this._onHandleDragMove, this),\n                        ondragend: bind(this._onHandleDragEnd, this)\n                    }\n                );\n                zr.add(handle);\n            }\n\n            updateMandatoryProps(handle, axisPointerModel, false);\n\n            // update style\n            var includeStyles = [\n                'color', 'borderColor', 'borderWidth', 'opacity',\n                'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'\n            ];\n            handle.setStyle(handleModel.getItemStyle(null, includeStyles));\n\n            // update position\n            var handleSize = handleModel.get('size');\n            if (!zrUtil.isArray(handleSize)) {\n                handleSize = [handleSize, handleSize];\n            }\n            handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n\n            throttle.createOrUpdate(\n                this,\n                '_doDispatchAxisPointer',\n                handleModel.get('throttle') || 0,\n                'fixRate'\n            );\n\n            this._moveHandleToValue(value, isInit);\n        },\n\n        /**\n         * @private\n         */\n        _moveHandleToValue: function (value, isInit) {\n            updateProps(\n                this._axisPointerModel,\n                !isInit && this._moveAnimation,\n                this._handle,\n                getHandleTransProps(this.getHandleTransform(\n                    value, this._axisModel, this._axisPointerModel\n                ))\n            );\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragMove: function (dx, dy) {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            this._dragging = true;\n\n            // Persistent for throttle.\n            var trans = this.updateHandleTransform(\n                getHandleTransProps(handle),\n                [dx, dy],\n                this._axisModel,\n                this._axisPointerModel\n            );\n            this._payloadInfo = trans;\n\n            handle.stopAnimation();\n            handle.attr(getHandleTransProps(trans));\n            get(handle).lastProp = null;\n\n            this._doDispatchAxisPointer();\n        },\n\n        /**\n         * Throttled method.\n         * @private\n         */\n        _doDispatchAxisPointer: function () {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var payloadInfo = this._payloadInfo;\n            var axisModel = this._axisModel;\n            this._api.dispatchAction({\n                type: 'updateAxisPointer',\n                x: payloadInfo.cursorPoint[0],\n                y: payloadInfo.cursorPoint[1],\n                tooltipOption: payloadInfo.tooltipOption,\n                axesInfo: [{\n                    axisDim: axisModel.axis.dim,\n                    axisIndex: axisModel.componentIndex\n                }]\n            });\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragEnd: function (moveAnimation) {\n            this._dragging = false;\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var value = this._axisPointerModel.get('value');\n            // Consider snap or categroy axis, handle may be not consistent with\n            // axisPointer. So move handle to align the exact value position when\n            // drag ended.\n            this._moveHandleToValue(value);\n\n            // For the effect: tooltip will be shown when finger holding on handle\n            // button, and will be hidden after finger left handle button.\n            this._api.dispatchAction({\n                type: 'hideTip'\n            });\n        },\n\n        /**\n         * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {number} value\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0}\n         */\n        getHandleTransform: null,\n\n        /**\n         * * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {Object} transform {position, rotation}\n         * @param {Array.<number>} delta [dx, dy]\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n         */\n        updateHandleTransform: null,\n\n        /**\n         * @private\n         */\n        clear: function (api) {\n            this._lastValue = null;\n            this._lastStatus = null;\n\n            var zr = api.getZr();\n            var group = this._group;\n            var handle = this._handle;\n            if (zr && group) {\n                this._lastGraphicKey = null;\n                group && zr.remove(group);\n                handle && zr.remove(handle);\n                this._group = null;\n                this._handle = null;\n                this._payloadInfo = null;\n            }\n        },\n\n        /**\n         * @protected\n         */\n        doClear: function () {\n            // Implemented by sub-class if necessary.\n        },\n\n        /**\n         * @protected\n         * @param {Array.<number>} xy\n         * @param {Array.<number>} wh\n         * @param {number} [xDimIndex=0] or 1\n         */\n        buildLabel: function (xy, wh, xDimIndex) {\n            xDimIndex = xDimIndex || 0;\n            return {\n                x: xy[xDimIndex],\n                y: xy[1 - xDimIndex],\n                width: wh[xDimIndex],\n                height: wh[1 - xDimIndex]\n            };\n        }\n    };\n\n    BaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\n\n    function updateProps(animationModel, moveAnimation, el, props) {\n        // Animation optimize.\n        if (!propsEqual(get(el).lastProp, props)) {\n            get(el).lastProp = props;\n            moveAnimation\n                ? graphic.updateProps(el, props, animationModel)\n                : (el.stopAnimation(), el.attr(props));\n        }\n    }\n\n    function propsEqual(lastProps, newProps) {\n        if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n            var equals = true;\n            zrUtil.each(newProps, function (item, key) {\n                equals = equals && propsEqual(lastProps[key], item);\n            });\n            return !!equals;\n        }\n        else {\n            return lastProps === newProps;\n        }\n    }\n\n    function updateLabelShowHide(labelEl, axisPointerModel) {\n        labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n    }\n\n    function getHandleTransProps(trans) {\n        return {\n            position: trans.position.slice(),\n            rotation: trans.rotation || 0\n        };\n    }\n\n    function updateMandatoryProps(group, axisPointerModel, silent) {\n        var z = axisPointerModel.get('z');\n        var zlevel = axisPointerModel.get('zlevel');\n\n        group && group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n                el.silent = silent;\n            }\n        });\n    }\n\n    clazzUtil.enableClassExtend(BaseAxisPointer);\n\n    module.exports = BaseAxisPointer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/BaseAxisPointer.js\n// module id = 721\n// module chunks = 0 1 2","'use strict';\n\n\n    var graphic = require('../../util/graphic');\n    var BaseAxisPointer = require('./BaseAxisPointer');\n    var viewHelper = require('./viewHelper');\n    var cartesianAxisHelper = require('../axis/cartesianAxisHelper');\n    var AxisView = require('../axis/AxisView');\n\n    var CartesianAxisPointer = BaseAxisPointer.extend({\n\n        /**\n         * @override\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisPointerType = axisPointerModel.get('type');\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n            if (axisPointerType && axisPointerType !== 'none') {\n                var elStyle = viewHelper.buildElStyle(axisPointerModel);\n                var pointerOption = pointerShapeBuilder[axisPointerType](\n                    axis, pixelValue, otherExtent, elStyle\n                );\n                pointerOption.style = elStyle;\n                elOption.graphicKey = pointerOption.type;\n                elOption.pointer = pointerOption;\n            }\n\n            var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n            viewHelper.buildCartesianSingleLabelElOption(\n                value, elOption, layoutInfo, axisModel, axisPointerModel, api\n            );\n        },\n\n        /**\n         * @override\n         */\n        getHandleTransform: function (value, axisModel, axisPointerModel) {\n            var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n                labelInside: false\n            });\n            layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n            return {\n                position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n                rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n            };\n        },\n\n        /**\n         * @override\n         */\n        updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisExtent = axis.getGlobalExtent(true);\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var dimIndex = axis.dim === 'x' ? 0 : 1;\n\n            var currPosition = transform.position;\n            currPosition[dimIndex] += delta[dimIndex];\n            currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n            currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n\n            var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n            var cursorPoint = [cursorOtherValue, cursorOtherValue];\n            cursorPoint[dimIndex] = currPosition[dimIndex];\n\n            // Make tooltip do not overlap axisPointer and in the middle of the grid.\n            var tooltipOptions = [{verticalAlign: 'middle'}, {align: 'center'}];\n\n            return {\n                position: currPosition,\n                rotation: transform.rotation,\n                cursorPoint: cursorPoint,\n                tooltipOption: tooltipOptions[dimIndex]\n            };\n        }\n\n    });\n\n    function getCartesian(grid, axis) {\n        var opt = {};\n        opt[axis.dim + 'AxisIndex'] = axis.index;\n        return grid.getCartesian(opt);\n    }\n\n    var pointerShapeBuilder = {\n\n        line: function (axis, pixelValue, otherExtent, elStyle) {\n            var targetShape = viewHelper.makeLineShape(\n                [pixelValue, otherExtent[0]],\n                [pixelValue, otherExtent[1]],\n                getAxisDimIndex(axis)\n            );\n            graphic.subPixelOptimizeLine({\n                shape: targetShape,\n                style: elStyle\n            });\n            return {\n                type: 'Line',\n                shape: targetShape\n            };\n        },\n\n        shadow: function (axis, pixelValue, otherExtent, elStyle) {\n            var bandWidth = axis.getBandWidth();\n            var span = otherExtent[1] - otherExtent[0];\n            return {\n                type: 'Rect',\n                shape: viewHelper.makeRectShape(\n                    [pixelValue - bandWidth / 2, otherExtent[0]],\n                    [bandWidth, span],\n                    getAxisDimIndex(axis)\n                )\n            };\n        }\n    };\n\n    function getAxisDimIndex(axis) {\n        return axis.dim === 'x' ? 0 : 1;\n    }\n\n    AxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\n\n    module.exports = CartesianAxisPointer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/CartesianAxisPointer.js\n// module id = 722\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var modelHelper = require('./modelHelper');\n    var findPointFromSeries = require('./findPointFromSeries');\n\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n    var get = modelUtil.makeGetter();\n\n    /**\n     * Basic logic: check all axis, if they do not demand show/highlight,\n     * then hide/downplay them.\n     *\n     * @param {Object} coordSysAxesInfo\n     * @param {Object} payload\n     * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n     * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n     *              trigger axisPointer and tooltip.\n     * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n     *              trigger axisPointer and tooltip.\n     * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n     * @param {Object} [payload.dataIndex] finder, restrict target axes.\n     * @param {Object} [payload.axesInfo] finder, restrict target axes.\n     *        [{\n     *          axisDim: 'x'|'y'|'angle'|...,\n     *          axisIndex: ...,\n     *          value: ...\n     *        }, ...]\n     * @param {Function} [payload.dispatchAction]\n     * @param {Object} [payload.tooltipOption]\n     * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n     *        which can be specified in dispatchAction\n     * @param {module:echarts/model/Global} ecModel\n     * @param {module:echarts/ExtensionAPI} api\n     * @return {Object} content of event obj for echarts.connect.\n     */\n    function axisTrigger(payload, ecModel, api) {\n        var currTrigger = payload.currTrigger;\n        var point = [payload.x, payload.y];\n        var finder = payload;\n        var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n        var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n        // Pending\n        // See #6121. But we are not able to reproduce it yet.\n        if (!coordSysAxesInfo) {\n            return;\n        }\n\n        if (illegalPoint(point)) {\n            // Used in the default behavior of `connection`: use the sample seriesIndex\n            // and dataIndex. And also used in the tooltipView trigger.\n            point = findPointFromSeries({\n                seriesIndex: finder.seriesIndex,\n                // Do not use dataIndexInside from other ec instance.\n                // FIXME: auto detect it?\n                dataIndex: finder.dataIndex\n            }, ecModel).point;\n        }\n        var isIllegalPoint = illegalPoint(point);\n\n        // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n        // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n        // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n        // and dataIndex.\n        var inputAxesInfo = finder.axesInfo;\n\n        var axesInfo = coordSysAxesInfo.axesInfo;\n        var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n        var outputFinder = {};\n\n        var showValueMap = {};\n        var dataByCoordSys = {list: [], map: {}};\n        var updaters = {\n            showPointer: curry(showPointer, showValueMap),\n            showTooltip: curry(showTooltip, dataByCoordSys)\n        };\n\n        // Process for triggered axes.\n        each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n            // If a point given, it must be contained by the coordinate system.\n            var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n\n            each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n                var axis = axisInfo.axis;\n                var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo);\n                // If no inputAxesInfo, no axis is restricted.\n                if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n                    var val = inputAxisInfo && inputAxisInfo.value;\n                    if (val == null && !isIllegalPoint) {\n                        val = axis.pointToData(point);\n                    }\n                    val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n                }\n            });\n        });\n\n        // Process for linked axes.\n        var linkTriggers = {};\n        each(axesInfo, function (tarAxisInfo, tarKey) {\n            var linkGroup = tarAxisInfo.linkGroup;\n\n            // If axis has been triggered in the previous stage, it should not be triggered by link.\n            if (linkGroup && !showValueMap[tarKey]) {\n                each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n                    var srcValItem = showValueMap[srcKey];\n                    // If srcValItem exist, source axis is triggered, so link to target axis.\n                    if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n                        var val = srcValItem.value;\n                        linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(\n                            val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo)\n                        )));\n                        linkTriggers[tarAxisInfo.key] = val;\n                    }\n                });\n            }\n        });\n        each(linkTriggers, function (val, tarKey) {\n            processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n        });\n\n        updateModelActually(showValueMap, axesInfo, outputFinder);\n        dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n        dispatchHighDownActually(axesInfo, dispatchAction, api);\n\n        return outputFinder;\n    }\n\n    function processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n        var axis = axisInfo.axis;\n\n        if (axis.scale.isBlank() || !axis.containData(newValue)) {\n            return;\n        }\n\n        if (!axisInfo.involveSeries) {\n            updaters.showPointer(axisInfo, newValue);\n            return;\n        }\n\n        // Heavy calculation. So put it after axis.containData checking.\n        var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n        var payloadBatch = payloadInfo.payloadBatch;\n        var snapToValue = payloadInfo.snapToValue;\n\n        // Fill content of event obj for echarts.connect.\n        // By defualt use the first involved series data as a sample to connect.\n        if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n            zrUtil.extend(outputFinder, payloadBatch[0]);\n        }\n\n        // If no linkSource input, this process is for collecting link\n        // target, where snap should not be accepted.\n        if (!dontSnap && axisInfo.snap) {\n            if (axis.containData(snapToValue) && snapToValue != null) {\n                newValue = snapToValue;\n            }\n        }\n\n        updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder);\n        // Tooltip should always be snapToValue, otherwise there will be\n        // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n        updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n    }\n\n    function buildPayloadsBySeries(value, axisInfo) {\n        var axis = axisInfo.axis;\n        var dim = axis.dim;\n        var snapToValue = value;\n        var payloadBatch = [];\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n\n        each(axisInfo.seriesModels, function (series, idx) {\n            var dataDim = series.coordDimToDataDim(dim);\n            var seriesNestestValue;\n            var dataIndices;\n\n            if (series.getAxisTooltipData) {\n                var result = series.getAxisTooltipData(dataDim, value, axis);\n                dataIndices = result.dataIndices;\n                seriesNestestValue = result.nestestValue;\n            }\n            else {\n                dataIndices = series.getData().indicesOfNearest(\n                    dataDim[0],\n                    value,\n                    // Add a threshold to avoid find the wrong dataIndex\n                    // when data length is not same.\n                    false, axis.type === 'category' ? 0.5 : null\n                );\n                if (!dataIndices.length) {\n                    return;\n                }\n                seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n            }\n\n            if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n                return;\n            }\n\n            var diff = value - seriesNestestValue;\n            var dist = Math.abs(diff);\n            // Consider category case\n            if (dist <= minDist) {\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    snapToValue = seriesNestestValue;\n                    payloadBatch.length = 0;\n                }\n                each(dataIndices, function (dataIndex) {\n                    payloadBatch.push({\n                        seriesIndex: series.seriesIndex,\n                        dataIndexInside: dataIndex,\n                        dataIndex: series.getData().getRawIndex(dataIndex)\n                    });\n                });\n            }\n        });\n\n        return {\n            payloadBatch: payloadBatch,\n            snapToValue: snapToValue\n        };\n    }\n\n    function showPointer(showValueMap, axisInfo, value, payloadBatch) {\n        showValueMap[axisInfo.key] = {value: value, payloadBatch: payloadBatch};\n    }\n\n    function showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n        var payloadBatch = payloadInfo.payloadBatch;\n        var axis = axisInfo.axis;\n        var axisModel = axis.model;\n        var axisPointerModel = axisInfo.axisPointerModel;\n\n        // If no data, do not create anything in dataByCoordSys,\n        // whose length will be used to judge whether dispatch action.\n        if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n            return;\n        }\n\n        var coordSysModel = axisInfo.coordSys.model;\n        var coordSysKey = modelHelper.makeKey(coordSysModel);\n        var coordSysItem = dataByCoordSys.map[coordSysKey];\n        if (!coordSysItem) {\n            coordSysItem = dataByCoordSys.map[coordSysKey] = {\n                coordSysId: coordSysModel.id,\n                coordSysIndex: coordSysModel.componentIndex,\n                coordSysType: coordSysModel.type,\n                coordSysMainType: coordSysModel.mainType,\n                dataByAxis: []\n            };\n            dataByCoordSys.list.push(coordSysItem);\n        }\n\n        coordSysItem.dataByAxis.push({\n            axisDim: axis.dim,\n            axisIndex: axisModel.componentIndex,\n            axisType: axisModel.type,\n            axisId: axisModel.id,\n            value: value,\n            // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n            // depends that all models have been updated. So it should not be performed\n            // here. Considering axisPointerModel used here is volatile, which is hard\n            // to be retrieve in TooltipView, we prepare parameters here.\n            valueLabelOpt: {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            },\n            seriesDataIndices: payloadBatch.slice()\n        });\n    }\n\n    function updateModelActually(showValueMap, axesInfo, outputFinder) {\n        var outputAxesInfo = outputFinder.axesInfo = [];\n        // Basic logic: If no 'show' required, 'hide' this axisPointer.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            var valItem = showValueMap[key];\n\n            if (valItem) {\n                !axisInfo.useHandle && (option.status = 'show');\n                option.value = valItem.value;\n                // For label formatter param and highlight.\n                option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n            }\n            // When always show (e.g., handle used), remain\n            // original value and status.\n            else {\n                // If hide, value still need to be set, consider\n                // click legend to toggle axis blank.\n                !axisInfo.useHandle && (option.status = 'hide');\n            }\n\n            // If status is 'hide', should be no info in payload.\n            option.status === 'show' && outputAxesInfo.push({\n                axisDim: axisInfo.axis.dim,\n                axisIndex: axisInfo.axis.model.componentIndex,\n                value: option.value\n            });\n        });\n    }\n\n    function dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n        // Basic logic: If no showTip required, hideTip will be dispatched.\n        if (illegalPoint(point) || !dataByCoordSys.list.length) {\n            dispatchAction({type: 'hideTip'});\n            return;\n        }\n\n        // In most case only one axis (or event one series is used). It is\n        // convinient to fetch payload.seriesIndex and payload.dataIndex\n        // dirtectly. So put the first seriesIndex and dataIndex of the first\n        // axis on the payload.\n        var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n\n        dispatchAction({\n            type: 'showTip',\n            escapeConnect: true,\n            x: point[0],\n            y: point[1],\n            tooltipOption: payload.tooltipOption,\n            position: payload.position,\n            dataIndexInside: sampleItem.dataIndexInside,\n            dataIndex: sampleItem.dataIndex,\n            seriesIndex: sampleItem.seriesIndex,\n            dataByCoordSys: dataByCoordSys.list\n        });\n    }\n\n    function dispatchHighDownActually(axesInfo, dispatchAction, api) {\n        // FIXME\n        // highlight status modification shoule be a stage of main process?\n        // (Consider confilct (e.g., legend and axisPointer) and setOption)\n\n        var zr = api.getZr();\n        var highDownKey = 'axisPointerLastHighlights';\n        var lastHighlights = get(zr)[highDownKey] || {};\n        var newHighlights = get(zr)[highDownKey] = {};\n\n        // Update highlight/downplay status according to axisPointer model.\n        // Build hash map and remove duplicate incidentally.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n                var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n                newHighlights[key] = batchItem;\n            });\n        });\n\n        // Diff.\n        var toHighlight = [];\n        var toDownplay = [];\n        zrUtil.each(lastHighlights, function (batchItem, key) {\n            !newHighlights[key] && toDownplay.push(batchItem);\n        });\n        zrUtil.each(newHighlights, function (batchItem, key) {\n            !lastHighlights[key] && toHighlight.push(batchItem);\n        });\n\n        toDownplay.length && api.dispatchAction({\n            type: 'downplay', escapeConnect: true, batch: toDownplay\n        });\n        toHighlight.length && api.dispatchAction({\n            type: 'highlight', escapeConnect: true, batch: toHighlight\n        });\n    }\n\n    function findInputAxisInfo(inputAxesInfo, axisInfo) {\n        for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n            var inputAxisInfo = inputAxesInfo[i];\n            if (axisInfo.axis.dim === inputAxisInfo.axisDim\n                && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex\n            ) {\n                return inputAxisInfo;\n            }\n        }\n    }\n\n    function makeMapperParam(axisInfo) {\n        var axisModel = axisInfo.axis.model;\n        var item = {};\n        var dim = item.axisDim = axisInfo.axis.dim;\n        item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n        item.axisName = item[dim + 'AxisName'] = axisModel.name;\n        item.axisId = item[dim + 'AxisId'] = axisModel.id;\n        return item;\n    }\n\n    function illegalPoint(point) {\n        return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n    }\n\n    module.exports = axisTrigger;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/axisTrigger.js\n// module id = 723\n// module chunks = 0 1 2","\n    // List layout\n    var layout = require('../../util/layout');\n    var formatUtil = require('../../util/format');\n    var graphic = require('../../util/graphic');\n\n    module.exports = {\n        /**\n         * Layout list like component.\n         * It will box layout each items in group of component and then position the whole group in the viewport\n         * @param {module:zrender/group/Group} group\n         * @param {module:echarts/model/Component} componentModel\n         * @param {module:echarts/ExtensionAPI}\n         */\n        layout: function (group, componentModel, api) {\n            var boxLayoutParams = componentModel.getBoxLayoutParams();\n            var padding = componentModel.get('padding');\n            var viewportSize = {width: api.getWidth(), height: api.getHeight()};\n\n            var rect = layout.getLayoutRect(\n                boxLayoutParams,\n                viewportSize,\n                padding\n            );\n\n            layout.box(\n                componentModel.get('orient'),\n                group,\n                componentModel.get('itemGap'),\n                rect.width,\n                rect.height\n            );\n\n            layout.positionElement(\n                group,\n                boxLayoutParams,\n                viewportSize,\n                padding\n            );\n        },\n\n        makeBackground: function (rect, componentModel) {\n            var padding = formatUtil.normalizeCssArray(\n                componentModel.get('padding')\n            );\n            var style = componentModel.getItemStyle(['color', 'opacity']);\n            style.fill = componentModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: rect.x - padding[3],\n                    y: rect.y - padding[0],\n                    width: rect.width + padding[1] + padding[3],\n                    height: rect.height + padding[0] + padding[2],\n                    r: componentModel.get('borderRadius')\n                },\n                style: style,\n                silent: true,\n                z2: -1\n            });\n            // FIXME\n            // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n            // and background rect when setting like `left: 0`, `top: 0`.\n            // graphic.subPixelOptimizeRect(rect);\n\n            return rect;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/helper/listComponent.js\n// module id = 724\n// module chunks = 0 1 2","\n\n    // Do not contain scrollable legend, for sake of file size.\n\n    require('./legend/LegendModel');\n    require('./legend/legendAction');\n    require('./legend/LegendView');\n\n    var echarts = require('../echarts');\n    // Series Filter\n    echarts.registerProcessor(require('./legend/legendFilter'));\n\n    require('../model/Component').registerSubTypeDefaulter('legend', function () {\n        // Default 'plain' when no type specified.\n        return 'plain';\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend.js\n// module id = 725\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Model = require('../../model/Model');\n\n    var LegendModel = require('../../echarts').extendComponentModel({\n\n        type: 'legend.plain',\n\n        dependencies: ['series'],\n\n        layoutMode: {\n            type: 'box',\n            // legend.width/height are maxWidth/maxHeight actually,\n            // whereas realy width/height is calculated by its content.\n            // (Setting {left: 10, right: 10} does not make sense).\n            // So consider the case:\n            // `setOption({legend: {left: 10});`\n            // then `setOption({legend: {right: 10});`\n            // The previous `left` should be cleared by setting `ignoreSize`.\n            ignoreSize: true\n        },\n\n        init: function (option, parentModel, ecModel) {\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            option.selected = option.selected || {};\n        },\n\n        mergeOption: function (option) {\n            LegendModel.superCall(this, 'mergeOption', option);\n        },\n\n        optionUpdated: function () {\n            this._updateData(this.ecModel);\n\n            var legendData = this._data;\n\n            // If selectedMode is single, try to select one\n            if (legendData[0] && this.get('selectedMode') === 'single') {\n                var hasSelected = false;\n                // If has any selected in option.selected\n                for (var i = 0; i < legendData.length; i++) {\n                    var name = legendData[i].get('name');\n                    if (this.isSelected(name)) {\n                        // Force to unselect others\n                        this.select(name);\n                        hasSelected = true;\n                        break;\n                    }\n                }\n                // Try select the first if selectedMode is single\n                !hasSelected && this.select(legendData[0].get('name'));\n            }\n        },\n\n        _updateData: function (ecModel) {\n            var legendData = zrUtil.map(this.get('data') || [], function (dataItem) {\n                // Can be string or number\n                if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n                    dataItem = {\n                        name: dataItem\n                    };\n                }\n                return new Model(dataItem, this, this.ecModel);\n            }, this);\n            this._data = legendData;\n\n            var availableNames = zrUtil.map(ecModel.getSeries(), function (series) {\n                return series.name;\n            });\n            ecModel.eachSeries(function (seriesModel) {\n                if (seriesModel.legendDataProvider) {\n                    var data = seriesModel.legendDataProvider();\n                    availableNames = availableNames.concat(data.mapArray(data.getName));\n                }\n            });\n            /**\n             * @type {Array.<string>}\n             * @private\n             */\n            this._availableNames = availableNames;\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Model>}\n         */\n        getData: function () {\n            return this._data;\n        },\n\n        /**\n         * @param {string} name\n         */\n        select: function (name) {\n            var selected = this.option.selected;\n            var selectedMode = this.get('selectedMode');\n            if (selectedMode === 'single') {\n                var data = this._data;\n                zrUtil.each(data, function (dataItem) {\n                    selected[dataItem.get('name')] = false;\n                });\n            }\n            selected[name] = true;\n        },\n\n        /**\n         * @param {string} name\n         */\n        unSelect: function (name) {\n            if (this.get('selectedMode') !== 'single') {\n                this.option.selected[name] = false;\n            }\n        },\n\n        /**\n         * @param {string} name\n         */\n        toggleSelected: function (name) {\n            var selected = this.option.selected;\n            // Default is true\n            if (!selected.hasOwnProperty(name)) {\n                selected[name] = true;\n            }\n            this[selected[name] ? 'unSelect' : 'select'](name);\n        },\n\n        /**\n         * @param {string} name\n         */\n        isSelected: function (name) {\n            var selected = this.option.selected;\n            return !(selected.hasOwnProperty(name) && !selected[name])\n                && zrUtil.indexOf(this._availableNames, name) >= 0;\n        },\n\n        defaultOption: {\n            // 一级层叠\n            zlevel: 0,\n            // 二级层叠\n            z: 4,\n            show: true,\n\n            // 布局方式，默认为水平布局，可选为：\n            // 'horizontal' | 'vertical'\n            orient: 'horizontal',\n\n            left: 'center',\n            // right: 'center',\n\n            top: 0,\n            // bottom: null,\n\n            // 水平对齐\n            // 'auto' | 'left' | 'right'\n            // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n            align: 'auto',\n\n            backgroundColor: 'rgba(0,0,0,0)',\n            // 图例边框颜色\n            borderColor: '#ccc',\n            borderRadius: 0,\n            // 图例边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n            // 图例内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n            // 各个item之间的间隔，单位px，默认为10，\n            // 横向布局时为水平间隔，纵向布局时为纵向间隔\n            itemGap: 10,\n            // 图例图形宽度\n            itemWidth: 25,\n            // 图例图形高度\n            itemHeight: 14,\n\n            // 图例关闭时候的颜色\n            inactiveColor: '#ccc',\n\n            textStyle: {\n                // 图例文字颜色\n                color: '#333'\n            },\n            // formatter: '',\n            // 选择模式，默认开启图例开关\n            selectedMode: true,\n            // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n            // selected: null,\n            // 图例内容（详见legend.data，数组中每一项代表一个item\n            // data: [],\n\n            // Tooltip 相关配置\n            tooltip: {\n                show: false\n            }\n        }\n    });\n\n    module.exports = LegendModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend/LegendModel.js\n// module id = 726\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var symbolCreator = require('../../util/symbol');\n    var graphic = require('../../util/graphic');\n    var listComponentHelper = require('../helper/listComponent');\n    var layoutUtil = require('../../util/layout');\n\n    var curry = zrUtil.curry;\n    var each = zrUtil.each;\n    var Group = graphic.Group;\n\n    module.exports = require('../../echarts').extendComponentView({\n\n        type: 'legend.plain',\n\n        newlineDisabled: false,\n\n        /**\n         * @override\n         */\n        init: function () {\n\n            /**\n             * @private\n             * @type {module:zrender/container/Group}\n             */\n            this.group.add(this._contentGroup = new Group());\n\n            /**\n             * @private\n             * @type {module:zrender/Element}\n             */\n            this._backgroundEl;\n        },\n\n        /**\n         * @protected\n         */\n        getContentGroup: function () {\n            return this._contentGroup;\n        },\n\n        /**\n         * @override\n         */\n        render: function (legendModel, ecModel, api) {\n\n            this.resetInner();\n\n            if (!legendModel.get('show', true)) {\n                return;\n            }\n\n            var itemAlign = legendModel.get('align');\n            if (!itemAlign || itemAlign === 'auto') {\n                itemAlign = (\n                    legendModel.get('left') === 'right'\n                    && legendModel.get('orient') === 'vertical'\n                ) ? 'right' : 'left';\n            }\n\n            this.renderInner(itemAlign, legendModel, ecModel, api);\n\n            // Perform layout.\n            var positionInfo = legendModel.getBoxLayoutParams();\n            var viewportSize = {width: api.getWidth(), height: api.getHeight()};\n            var padding = legendModel.get('padding');\n\n            var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n            var mainRect = this.layoutInner(legendModel, itemAlign, maxSize);\n\n            // Place mainGroup, based on the calculated `mainRect`.\n            var layoutRect = layoutUtil.getLayoutRect(\n                zrUtil.defaults({width: mainRect.width, height: mainRect.height}, positionInfo),\n                viewportSize,\n                padding\n            );\n            this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]);\n\n            // Render background after group is layout.\n            this.group.add(\n                this._backgroundEl = listComponentHelper.makeBackground(mainRect, legendModel)\n            );\n        },\n\n        /**\n         * @protected\n         */\n        resetInner: function () {\n            this.getContentGroup().removeAll();\n            this._backgroundEl && this.group.remove(this._backgroundEl);\n        },\n\n        /**\n         * @protected\n         */\n        renderInner: function (itemAlign, legendModel, ecModel, api) {\n            var contentGroup = this.getContentGroup();\n            var legendDrawnMap = zrUtil.createHashMap();\n            var selectMode = legendModel.get('selectedMode');\n\n            each(legendModel.getData(), function (itemModel, dataIndex) {\n                var name = itemModel.get('name');\n\n                // Use empty string or \\n as a newline string\n                if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n                    contentGroup.add(new Group({\n                        newline: true\n                    }));\n                    return;\n                }\n\n                var seriesModel = ecModel.getSeriesByName(name)[0];\n\n                if (legendDrawnMap.get(name)) {\n                    // Have been drawed\n                    return;\n                }\n\n                // Series legend\n                if (seriesModel) {\n                    var data = seriesModel.getData();\n                    var color = data.getVisual('color');\n\n                    // If color is a callback function\n                    if (typeof color === 'function') {\n                        // Use the first data\n                        color = color(seriesModel.getDataParams(0));\n                    }\n\n                    // Using rect symbol defaultly\n                    var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n                    var symbolType = data.getVisual('symbol');\n\n                    var itemGroup = this._createItem(\n                        name, dataIndex, itemModel, legendModel,\n                        legendSymbolType, symbolType,\n                        itemAlign, color,\n                        selectMode\n                    );\n\n                    itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                        .on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api))\n                        .on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n\n                    legendDrawnMap.set(name, true);\n                }\n                else {\n                    // Data legend of pie, funnel\n                    ecModel.eachRawSeries(function (seriesModel) {\n                        // In case multiple series has same data name\n                        if (legendDrawnMap.get(name)) {\n                            return;\n                        }\n                        if (seriesModel.legendDataProvider) {\n                            var data = seriesModel.legendDataProvider();\n                            var idx = data.indexOfName(name);\n                            if (idx < 0) {\n                                return;\n                            }\n\n                            var color = data.getItemVisual(idx, 'color');\n\n                            var legendSymbolType = 'roundRect';\n\n                            var itemGroup = this._createItem(\n                                name, dataIndex, itemModel, legendModel,\n                                legendSymbolType, null,\n                                itemAlign, color,\n                                selectMode\n                            );\n\n                            itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                                // FIXME Should not specify the series name\n                                .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api))\n                                .on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n\n                            legendDrawnMap.set(name, true);\n                        }\n                    }, this);\n                }\n\n                if (__DEV__) {\n                    if (!legendDrawnMap.get(name)) {\n                        console.warn(name + ' series not exists. Legend data should be same with series name or data name.');\n                    }\n                }\n            }, this);\n        },\n\n        _createItem: function (\n            name, dataIndex, itemModel, legendModel,\n            legendSymbolType, symbolType,\n            itemAlign, color, selectMode\n        ) {\n            var itemWidth = legendModel.get('itemWidth');\n            var itemHeight = legendModel.get('itemHeight');\n            var inactiveColor = legendModel.get('inactiveColor');\n\n            var isSelected = legendModel.isSelected(name);\n            var itemGroup = new Group();\n\n            var textStyleModel = itemModel.getModel('textStyle');\n\n            var itemIcon = itemModel.get('icon');\n\n            var tooltipModel = itemModel.getModel('tooltip');\n            var legendGlobalTooltipModel = tooltipModel.parentModel;\n\n            // Use user given icon first\n            legendSymbolType = itemIcon || legendSymbolType;\n            itemGroup.add(symbolCreator.createSymbol(\n                legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor\n            ));\n\n            // Compose symbols\n            // PENDING\n            if (!itemIcon && symbolType\n                // At least show one symbol, can't be all none\n                && ((symbolType !== legendSymbolType) || symbolType == 'none')\n            ) {\n                var size = itemHeight * 0.8;\n                if (symbolType === 'none') {\n                    symbolType = 'circle';\n                }\n                // Put symbol in the center\n                itemGroup.add(symbolCreator.createSymbol(\n                    symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size,\n                    isSelected ? color : inactiveColor\n                ));\n            }\n\n            var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n            var textAlign = itemAlign;\n\n            var formatter = legendModel.get('formatter');\n            var content = name;\n            if (typeof formatter === 'string' && formatter) {\n                content = formatter.replace('{name}', name != null ? name : '');\n            }\n            else if (typeof formatter === 'function') {\n                content = formatter(name);\n            }\n\n            itemGroup.add(new graphic.Text({\n                style: graphic.setTextStyle({}, textStyleModel, {\n                    text: content,\n                    x: textX,\n                    y: itemHeight / 2,\n                    textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n                    textAlign: textAlign,\n                    textVerticalAlign: 'middle'\n                })\n            }));\n\n            // Add a invisible rect to increase the area of mouse hover\n            var hitRect = new graphic.Rect({\n                shape: itemGroup.getBoundingRect(),\n                invisible: true,\n                tooltip: tooltipModel.get('show') ? zrUtil.extend({\n                    content: name,\n                    // Defaul formatter\n                    formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n                        return name;\n                    },\n                    formatterParams: {\n                        componentType: 'legend',\n                        legendIndex: legendModel.componentIndex,\n                        name: name,\n                        $vars: ['name']\n                    }\n                }, tooltipModel.option) : null\n            });\n            itemGroup.add(hitRect);\n\n            itemGroup.eachChild(function (child) {\n                child.silent = true;\n            });\n\n            hitRect.silent = !selectMode;\n\n            this.getContentGroup().add(itemGroup);\n\n            graphic.setHoverStyle(itemGroup);\n\n            itemGroup.__legendDataIndex = dataIndex;\n\n            return itemGroup;\n        },\n\n        /**\n         * @protected\n         */\n        layoutInner: function (legendModel, itemAlign, maxSize) {\n            var contentGroup = this.getContentGroup();\n\n            // Place items in contentGroup.\n            layoutUtil.box(\n                legendModel.get('orient'),\n                contentGroup,\n                legendModel.get('itemGap'),\n                maxSize.width,\n                maxSize.height\n            );\n\n            var contentRect = contentGroup.getBoundingRect();\n            contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n\n            return this.group.getBoundingRect();\n        }\n\n    });\n\n    function dispatchSelectAction(name, api) {\n        api.dispatchAction({\n            type: 'legendToggleSelect',\n            name: name\n        });\n    }\n\n    function dispatchHighlightAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'highlight',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n    function dispatchDownplayAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'downplay',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend/LegendView.js\n// module id = 727\n// module chunks = 0 1 2","/**\n * @file Legend action\n */\n\n\n    var echarts = require('../../echarts');\n    var zrUtil = require('zrender/lib/core/util');\n\n    function legendSelectActionHandler(methodName, payload, ecModel) {\n        var selectedMap = {};\n        var isToggleSelect = methodName === 'toggleSelected';\n        var isSelected;\n        // Update all legend components\n        ecModel.eachComponent('legend', function (legendModel) {\n            if (isToggleSelect && isSelected != null) {\n                // Force other legend has same selected status\n                // Or the first is toggled to true and other are toggled to false\n                // In the case one legend has some item unSelected in option. And if other legend\n                // doesn't has the item, they will assume it is selected.\n                legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n            }\n            else {\n                legendModel[methodName](payload.name);\n                isSelected = legendModel.isSelected(payload.name);\n            }\n            var legendData = legendModel.getData();\n            zrUtil.each(legendData, function (model) {\n                var name = model.get('name');\n                // Wrap element\n                if (name === '\\n' || name === '') {\n                    return;\n                }\n                var isItemSelected = legendModel.isSelected(name);\n                if (selectedMap.hasOwnProperty(name)) {\n                    // Unselected if any legend is unselected\n                    selectedMap[name] = selectedMap[name] && isItemSelected;\n                }\n                else {\n                    selectedMap[name] = isItemSelected;\n                }\n            });\n        });\n        // Return the event explicitly\n        return {\n            name: payload.name,\n            selected: selectedMap\n        };\n    }\n    /**\n     * @event legendToggleSelect\n     * @type {Object}\n     * @property {string} type 'legendToggleSelect'\n     * @property {string} [from]\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendToggleSelect', 'legendselectchanged',\n        zrUtil.curry(legendSelectActionHandler, 'toggleSelected')\n    );\n\n    /**\n     * @event legendSelect\n     * @type {Object}\n     * @property {string} type 'legendSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendSelect', 'legendselected',\n        zrUtil.curry(legendSelectActionHandler, 'select')\n    );\n\n    /**\n     * @event legendUnSelect\n     * @type {Object}\n     * @property {string} type 'legendUnSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendUnSelect', 'legendunselected',\n        zrUtil.curry(legendSelectActionHandler, 'unSelect')\n    );\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend/legendAction.js\n// module id = 728\n// module chunks = 0 1 2","\n   module.exports = function (ecModel) {\n        var legendModels = ecModel.findComponents({\n            mainType: 'legend'\n        });\n        if (legendModels && legendModels.length) {\n            ecModel.filterSeries(function (series) {\n                // If in any legend component the status is not selected.\n                // Because in legend series is assumed selected when it is not in the legend data.\n                for (var i = 0; i < legendModels.length; i++) {\n                    if (!legendModels[i].isSelected(series.name)) {\n                        return false;\n                    }\n                }\n                return true;\n            });\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend/legendFilter.js\n// module id = 729\n// module chunks = 0 1 2","// FIXME Better way to pack data in graphic element\n\n\n    require('./axisPointer');\n\n    require('./tooltip/TooltipModel');\n\n    require('./tooltip/TooltipView');\n\n\n    // Show tip action\n    /**\n     * @action\n     * @property {string} type\n     * @property {number} seriesIndex\n     * @property {number} dataIndex\n     * @property {number} [x]\n     * @property {number} [y]\n     */\n    require('../echarts').registerAction(\n        {\n            type: 'showTip',\n            event: 'showTip',\n            update: 'tooltip:manuallyShowTip'\n        },\n        // noop\n        function () {}\n    );\n    // Hide tip action\n    require('../echarts').registerAction(\n        {\n            type: 'hideTip',\n            event: 'hideTip',\n            update: 'tooltip:manuallyHideTip'\n        },\n        // noop\n        function () {}\n    );\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip.js\n// module id = 730\n// module chunks = 0 1 2","/**\n * @module echarts/component/tooltip/TooltipContent\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var zrColor = require('zrender/lib/tool/color');\n    var eventUtil = require('zrender/lib/core/event');\n    var formatUtil = require('../../util/format');\n    var each = zrUtil.each;\n    var toCamelCase = formatUtil.toCamelCase;\n    var env = require('zrender/lib/core/env');\n\n    var vendors = ['', '-webkit-', '-moz-', '-o-'];\n\n    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n\n    /**\n     * @param {number} duration\n     * @return {string}\n     * @inner\n     */\n    function assembleTransition(duration) {\n        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\n                            + 'top ' + duration + 's ' + transitionCurve;\n        return zrUtil.map(vendors, function (vendorPrefix) {\n            return vendorPrefix + 'transition:' + transitionText;\n        }).join(';');\n    }\n\n    /**\n     * @param {Object} textStyle\n     * @return {string}\n     * @inner\n     */\n    function assembleFont(textStyleModel) {\n        var cssText = [];\n\n        var fontSize = textStyleModel.get('fontSize');\n        var color = textStyleModel.getTextColor();\n\n        color && cssText.push('color:' + color);\n\n        cssText.push('font:' + textStyleModel.getFont());\n\n        fontSize &&\n            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n\n        each(['decoration', 'align'], function (name) {\n            var val = textStyleModel.get(name);\n            val && cssText.push('text-' + name + ':' + val);\n        });\n\n        return cssText.join(';');\n    }\n\n    /**\n     * @param {Object} tooltipModel\n     * @return {string}\n     * @inner\n     */\n    function assembleCssText(tooltipModel) {\n\n        var cssText = [];\n\n        var transitionDuration = tooltipModel.get('transitionDuration');\n        var backgroundColor = tooltipModel.get('backgroundColor');\n        var textStyleModel = tooltipModel.getModel('textStyle');\n        var padding = tooltipModel.get('padding');\n\n        // Animation transition. Do not animate when transitionDuration is 0.\n        transitionDuration &&\n            cssText.push(assembleTransition(transitionDuration));\n\n        if (backgroundColor) {\n            if (env.canvasSupported) {\n                cssText.push('background-Color:' + backgroundColor);\n            }\n            else {\n                // for ie\n                cssText.push(\n                    'background-Color:#' + zrColor.toHex(backgroundColor)\n                );\n                cssText.push('filter:alpha(opacity=70)');\n            }\n        }\n\n        // Border style\n        each(['width', 'color', 'radius'], function (name) {\n            var borderName = 'border-' + name;\n            var camelCase = toCamelCase(borderName);\n            var val = tooltipModel.get(camelCase);\n            val != null &&\n                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n        });\n\n        // Text style\n        cssText.push(assembleFont(textStyleModel));\n\n        // Padding\n        if (padding != null) {\n            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n        }\n\n        return cssText.join(';') + ';';\n    }\n\n    /**\n     * @alias module:echarts/component/tooltip/TooltipContent\n     * @constructor\n     */\n    function TooltipContent(container, api) {\n        var el = document.createElement('div');\n        var zr = this._zr = api.getZr();\n\n        this.el = el;\n\n        this._x = api.getWidth() / 2;\n        this._y = api.getHeight() / 2;\n\n        container.appendChild(el);\n\n        this._container = container;\n\n        this._show = false;\n\n        /**\n         * @private\n         */\n        this._hideTimeout;\n\n        var self = this;\n        el.onmouseenter = function () {\n            // clear the timeout in hideLater and keep showing tooltip\n            if (self._enterable) {\n                clearTimeout(self._hideTimeout);\n                self._show = true;\n            }\n            self._inContent = true;\n        };\n        el.onmousemove = function (e) {\n            e = e || window.event;\n            if (!self._enterable) {\n                // Try trigger zrender event to avoid mouse\n                // in and out shape too frequently\n                var handler = zr.handler;\n                eventUtil.normalizeEvent(container, e, true);\n                handler.dispatch('mousemove', e);\n            }\n        };\n        el.onmouseleave = function () {\n            if (self._enterable) {\n                if (self._show) {\n                    self.hideLater(self._hideDelay);\n                }\n            }\n            self._inContent = false;\n        };\n    }\n\n    TooltipContent.prototype = {\n\n        constructor: TooltipContent,\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _enterable: true,\n\n        /**\n         * Update when tooltip is rendered\n         */\n        update: function () {\n            // FIXME\n            // Move this logic to ec main?\n            var container = this._container;\n            var stl = container.currentStyle\n                || document.defaultView.getComputedStyle(container);\n            var domStyle = container.style;\n            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n                domStyle.position = 'relative';\n            }\n            // Hide the tooltip\n            // PENDING\n            // this.hide();\n        },\n\n        show: function (tooltipModel) {\n            clearTimeout(this._hideTimeout);\n            var el = this.el;\n\n            el.style.cssText = gCssText + assembleCssText(tooltipModel)\n                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\n                + (tooltipModel.get('extraCssText') || '');\n\n            el.style.display = el.innerHTML ?  'block' : 'none';\n\n            this._show = true;\n        },\n\n        setContent: function (content) {\n            this.el.innerHTML = content == null ? '' : content;\n        },\n\n        setEnterable: function (enterable) {\n            this._enterable = enterable;\n        },\n\n        getSize: function () {\n            var el = this.el;\n            return [el.clientWidth, el.clientHeight];\n        },\n\n        moveTo: function (x, y) {\n            // xy should be based on canvas root. But tooltipContent is\n            // the sibling of canvas root. So padding of ec container\n            // should be considered here.\n            var zr = this._zr;\n            var viewportRootOffset;\n            if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n                x += viewportRootOffset.offsetLeft;\n                y += viewportRootOffset.offsetTop;\n            }\n\n            var style = this.el.style;\n            style.left = x + 'px';\n            style.top = y + 'px';\n\n            this._x = x;\n            this._y = y;\n        },\n\n        hide: function () {\n            this.el.style.display = 'none';\n            this._show = false;\n        },\n\n        hideLater: function (time) {\n            if (this._show && !(this._inContent && this._enterable)) {\n                if (time) {\n                    this._hideDelay = time;\n                    // Set show false to avoid invoke hideLater mutiple times\n                    this._show = false;\n                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n                }\n                else {\n                    this.hide();\n                }\n            }\n        },\n\n        isShow: function () {\n            return this._show;\n        }\n    };\n\n    module.exports = TooltipContent;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipContent.js\n// module id = 731\n// module chunks = 0 1 2","\n\n    require('../../echarts').extendComponentModel({\n\n        type: 'tooltip',\n\n        dependencies: ['axisPointer'],\n\n        defaultOption: {\n            zlevel: 0,\n\n            z: 8,\n\n            show: true,\n\n            // tooltip主体内容\n            showContent: true,\n\n            // 'trigger' only works on coordinate system.\n            // 'item' | 'axis' | 'none'\n            trigger: 'item',\n\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: 'mousemove|click',\n\n            alwaysShowContent: false,\n\n            displayMode: 'single', // 'single' | 'multipleByCoordSys'\n\n            // 位置 {Array} | {Function}\n            // position: null\n            // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n            // align: null,\n            // verticalAlign: null,\n\n            // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n            confine: false,\n\n            // 内容格式器：{string}（Template） ¦ {Function}\n            // formatter: null\n\n            showDelay: 0,\n\n            // 隐藏延迟，单位ms\n            hideDelay: 100,\n\n            // 动画变换时间，单位s\n            transitionDuration: 0.4,\n\n            enterable: false,\n\n            // 提示背景颜色，默认为透明度为0.7的黑色\n            backgroundColor: 'rgba(50,50,50,0.7)',\n\n            // 提示边框颜色\n            borderColor: '#333',\n\n            // 提示边框圆角，单位px，默认为4\n            borderRadius: 4,\n\n            // 提示边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 提示内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // Extra css text\n            extraCssText: '',\n\n            // 坐标轴指示器，坐标轴触发有效\n            axisPointer: {\n                // 默认为直线\n                // 可选为：'line' | 'shadow' | 'cross'\n                type: 'line',\n\n                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n                // 极坐标系会默认选择 angle 轴\n                axis: 'auto',\n\n                animation: 'auto',\n                animationDurationUpdate: 200,\n                animationEasingUpdate: 'exponentialOut',\n\n                crossStyle: {\n                    color: '#999',\n                    width: 1,\n                    type: 'dashed',\n\n                    // TODO formatter\n                    textStyle: {}\n                }\n\n                // lineStyle and shadowStyle should not be specified here,\n                // otherwise it will always override those styles on option.axisPointer.\n            },\n            textStyle: {\n                color: '#fff',\n                fontSize: 14\n            }\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipModel.js\n// module id = 732\n// module chunks = 0 1 2","\n\n    var TooltipContent = require('./TooltipContent');\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../../util/format');\n    var numberUtil = require('../../util/number');\n    var graphic = require('../../util/graphic');\n    var findPointFromSeries = require('../axisPointer/findPointFromSeries');\n    var layoutUtil = require('../../util/layout');\n    var env = require('zrender/lib/core/env');\n    var Model = require('../../model/Model');\n    var globalListener = require('../axisPointer/globalListener');\n    var axisHelper = require('../../coord/axisHelper');\n    var axisPointerViewHelper = require('../axisPointer/viewHelper');\n\n    var bind = zrUtil.bind;\n    var each = zrUtil.each;\n    var parsePercent = numberUtil.parsePercent;\n\n\n    var proxyRect = new graphic.Rect({\n        shape: {x: -1, y: -1, width: 2, height: 2}\n    });\n\n    require('../../echarts').extendComponentView({\n\n        type: 'tooltip',\n\n        init: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var tooltipContent = new TooltipContent(api.getDom(), api);\n            this._tooltipContent = tooltipContent;\n        },\n\n        render: function (tooltipModel, ecModel, api) {\n            if (env.node) {\n                return;\n            }\n\n            // Reset\n            this.group.removeAll();\n\n            /**\n             * @private\n             * @type {module:echarts/component/tooltip/TooltipModel}\n             */\n            this._tooltipModel = tooltipModel;\n\n            /**\n             * @private\n             * @type {module:echarts/model/Global}\n             */\n            this._ecModel = ecModel;\n\n            /**\n             * @private\n             * @type {module:echarts/ExtensionAPI}\n             */\n            this._api = api;\n\n            /**\n             * Should be cleaned when render.\n             * @private\n             * @type {Array.<Array.<Object>>}\n             */\n            this._lastDataByCoordSys = null;\n\n            /**\n             * @private\n             * @type {boolean}\n             */\n            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n\n            var tooltipContent = this._tooltipContent;\n            tooltipContent.update();\n            tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n            this._initGlobalListener();\n\n            this._keepShow();\n        },\n\n        _initGlobalListener: function () {\n            var tooltipModel = this._tooltipModel;\n            var triggerOn = tooltipModel.get('triggerOn');\n\n            globalListener.register(\n                'itemTooltip',\n                this._api,\n                bind(function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none') {\n                        if (triggerOn.indexOf(currTrigger) >= 0) {\n                            this._tryShow(e, dispatchAction);\n                        }\n                        else if (currTrigger === 'leave') {\n                            this._hide(dispatchAction);\n                        }\n                    }\n                }, this)\n            );\n        },\n\n        _keepShow: function () {\n            var tooltipModel = this._tooltipModel;\n            var ecModel = this._ecModel;\n            var api = this._api;\n\n            // Try to keep the tooltip show when refreshing\n            if (this._lastX != null\n                && this._lastY != null\n                // When user is willing to control tooltip totally using API,\n                // self.manuallyShowTip({x, y}) might cause tooltip hide,\n                // which is not expected.\n                && tooltipModel.get('triggerOn') !== 'none'\n            ) {\n                var self = this;\n                clearTimeout(this._refreshUpdateTimeout);\n                this._refreshUpdateTimeout = setTimeout(function () {\n                    // Show tip next tick after other charts are rendered\n                    // In case highlight action has wrong result\n                    // FIXME\n                    self.manuallyShowTip(tooltipModel, ecModel, api, {\n                        x: self._lastX,\n                        y: self._lastY\n                    });\n                });\n            }\n        },\n\n        /**\n         * Show tip manually by\n         * dispatchAction({\n         *     type: 'showTip',\n         *     x: 10,\n         *     y: 10\n         * });\n         * Or\n         * dispatchAction({\n         *      type: 'showTip',\n         *      seriesIndex: 0,\n         *      dataIndex or dataIndexInside or name\n         * });\n         *\n         *  TODO Batch\n         */\n        manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n            if (payload.from === this.uid || env.node) {\n                return;\n            }\n\n            var dispatchAction = makeDispatchAction(payload, api);\n\n            // Reset ticket\n            this._ticket = '';\n\n            // When triggered from axisPointer.\n            var dataByCoordSys = payload.dataByCoordSys;\n\n            if (payload.tooltip && payload.x != null && payload.y != null) {\n                var el = proxyRect;\n                el.position = [payload.x, payload.y];\n                el.update();\n                el.tooltip = payload.tooltip;\n                // Manually show tooltip while view is not using zrender elements.\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    target: el\n                }, dispatchAction);\n            }\n            else if (dataByCoordSys) {\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    event: {},\n                    dataByCoordSys: payload.dataByCoordSys,\n                    tooltipOption: payload.tooltipOption\n                }, dispatchAction);\n            }\n            else if (payload.seriesIndex != null) {\n\n                if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n                    return;\n                }\n\n                var pointInfo = findPointFromSeries(payload, ecModel);\n                var cx = pointInfo.point[0];\n                var cy = pointInfo.point[1];\n                if (cx != null && cy != null) {\n                    this._tryShow({\n                        offsetX: cx,\n                        offsetY: cy,\n                        position: payload.position,\n                        target: pointInfo.el,\n                        event: {}\n                    }, dispatchAction);\n                }\n            }\n            else if (payload.x != null && payload.y != null) {\n                // FIXME\n                // should wrap dispatchAction like `axisPointer/globalListener` ?\n                api.dispatchAction({\n                    type: 'updateAxisPointer',\n                    x: payload.x,\n                    y: payload.y\n                });\n\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    target: api.getZr().findHover(payload.x, payload.y).target,\n                    event: {}\n                }, dispatchAction);\n            }\n        },\n\n        manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n            var tooltipContent = this._tooltipContent;\n\n            if (!this._alwaysShowContent) {\n                tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n            }\n\n            this._lastX = this._lastY = null;\n\n            if (payload.from !== this.uid) {\n                this._hide(makeDispatchAction(payload, api));\n            }\n        },\n\n        // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n        // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n        // and tooltip.\n        _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n            var seriesIndex = payload.seriesIndex;\n            var dataIndex = payload.dataIndex;\n            var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n            if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n                return;\n            }\n\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n            if (!seriesModel) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                seriesModel,\n                (seriesModel.coordinateSystem || {}).model,\n                tooltipModel\n            ]);\n\n            if (tooltipModel.get('trigger') !== 'axis') {\n                return;\n            }\n\n            api.dispatchAction({\n                type: 'updateAxisPointer',\n                seriesIndex: seriesIndex,\n                dataIndex: dataIndex,\n                position: payload.position\n            });\n\n            return true;\n        },\n\n        _tryShow: function (e, dispatchAction) {\n            var el = e.target;\n            var tooltipModel = this._tooltipModel;\n\n            if (!tooltipModel) {\n                return;\n            }\n\n            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n            this._lastX = e.offsetX;\n            this._lastY = e.offsetY;\n\n            var dataByCoordSys = e.dataByCoordSys;\n            if (dataByCoordSys && dataByCoordSys.length) {\n                this._showAxisTooltip(dataByCoordSys, e);\n            }\n            // Always show item tooltip if mouse is on the element with dataIndex\n            else if (el && el.dataIndex != null) {\n                this._lastDataByCoordSys = null;\n                this._showSeriesItemTooltip(e, el, dispatchAction);\n            }\n            // Tooltip provided directly. Like legend.\n            else if (el && el.tooltip) {\n                this._lastDataByCoordSys = null;\n                this._showComponentItemTooltip(e, el, dispatchAction);\n            }\n            else {\n                this._lastDataByCoordSys = null;\n                this._hide(dispatchAction);\n            }\n        },\n\n        _showOrMove: function (tooltipModel, cb) {\n            // showDelay is used in this case: tooltip.enterable is set\n            // as true. User intent to move mouse into tooltip and click\n            // something. `showDelay` makes it easyer to enter the content\n            // but tooltip do not move immediately.\n            var delay = tooltipModel.get('showDelay');\n            cb = zrUtil.bind(cb, this);\n            clearTimeout(this._showTimout);\n            delay > 0\n                ? (this._showTimout = setTimeout(cb, delay))\n                : cb();\n        },\n\n        _showAxisTooltip: function (dataByCoordSys, e) {\n            var ecModel = this._ecModel;\n            var globalTooltipModel = this._tooltipModel;\n            var point = [e.offsetX, e.offsetY];\n            var singleDefaultHTML = [];\n            var singleParamsList = [];\n            var singleTooltipModel = buildTooltipModel([\n                e.tooltipOption,\n                globalTooltipModel\n            ]);\n\n            each(dataByCoordSys, function (itemCoordSys) {\n                // var coordParamList = [];\n                // var coordDefaultHTML = [];\n                // var coordTooltipModel = buildTooltipModel([\n                //     e.tooltipOption,\n                //     itemCoordSys.tooltipOption,\n                //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n                //     globalTooltipModel\n                // ]);\n                // var displayMode = coordTooltipModel.get('displayMode');\n                // var paramsList = displayMode === 'single' ? singleParamsList : [];\n\n                each(itemCoordSys.dataByAxis, function (item) {\n                    var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n                    var axisValue = item.value;\n                    var seriesDefaultHTML = [];\n\n                    if (!axisModel || axisValue == null) {\n                        return;\n                    }\n\n                    var valueLabel = axisPointerViewHelper.getValueLabel(\n                        axisValue, axisModel.axis, ecModel,\n                        item.seriesDataIndices,\n                        item.valueLabelOpt\n                    );\n\n                    zrUtil.each(item.seriesDataIndices, function (idxItem) {\n                        var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                        var dataIndex = idxItem.dataIndexInside;\n                        var dataParams = series && series.getDataParams(dataIndex);\n                        dataParams.axisDim = item.axisDim;\n                        dataParams.axisIndex = item.axisIndex;\n                        dataParams.axisType = item.axisType;\n                        dataParams.axisId = item.axisId;\n                        dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n                        dataParams.axisValueLabel = valueLabel;\n\n                        if (dataParams) {\n                            singleParamsList.push(dataParams);\n                            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n                        }\n                    });\n\n                    // Default tooltip content\n                    // FIXME\n                    // (1) shold be the first data which has name?\n                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n                    var firstLine = valueLabel;\n                    singleDefaultHTML.push(\n                        (firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '')\n                        + seriesDefaultHTML.join('<br />')\n                    );\n                });\n            }, this);\n\n            // In most case, the second axis is shown upper than the first one.\n            singleDefaultHTML.reverse();\n            singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n\n            var positionExpr = e.position;\n            this._showOrMove(singleTooltipModel, function () {\n                if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n                    this._updatePosition(\n                        singleTooltipModel,\n                        positionExpr,\n                        point[0], point[1],\n                        this._tooltipContent,\n                        singleParamsList\n                    );\n                }\n                else {\n                    this._showTooltipContent(\n                        singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(),\n                        point[0], point[1], positionExpr\n                    );\n                }\n            });\n\n            // Do not trigger events here, because this branch only be entered\n            // from dispatchAction.\n        },\n\n        _showSeriesItemTooltip: function (e, el, dispatchAction) {\n            var ecModel = this._ecModel;\n            // Use dataModel in element if possible\n            // Used when mouseover on a element like markPoint or edge\n            // In which case, the data is not main data in series.\n            var seriesIndex = el.seriesIndex;\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n            // For example, graph link.\n            var dataModel = el.dataModel || seriesModel;\n            var dataIndex = el.dataIndex;\n            var dataType = el.dataType;\n            var data = dataModel.getData();\n\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                dataModel,\n                seriesModel && (seriesModel.coordinateSystem || {}).model,\n                this._tooltipModel\n            ]);\n\n            var tooltipTrigger = tooltipModel.get('trigger');\n            if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n                return;\n            }\n\n            var params = dataModel.getDataParams(dataIndex, dataType);\n            var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n            var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n            this._showOrMove(tooltipModel, function () {\n                this._showTooltipContent(\n                    tooltipModel, defaultHtml, params, asyncTicket,\n                    e.offsetX, e.offsetY, e.position, e.target\n                );\n            });\n\n            // FIXME\n            // duplicated showtip if manuallyShowTip is called from dispatchAction.\n            dispatchAction({\n                type: 'showTip',\n                dataIndexInside: dataIndex,\n                dataIndex: data.getRawIndex(dataIndex),\n                seriesIndex: seriesIndex,\n                from: this.uid\n            });\n        },\n\n        _showComponentItemTooltip: function (e, el, dispatchAction) {\n            var tooltipOpt = el.tooltip;\n            if (typeof tooltipOpt === 'string') {\n                var content = tooltipOpt;\n                tooltipOpt = {\n                    content: content,\n                    // Fixed formatter\n                    formatter: content\n                };\n            }\n            var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n            var defaultHtml = subTooltipModel.get('content');\n            var asyncTicket = Math.random();\n\n            // Do not check whether `trigger` is 'none' here, because `trigger`\n            // only works on cooridinate system. In fact, we have not found case\n            // that requires setting `trigger` nothing on component yet.\n\n            this._showOrMove(subTooltipModel, function () {\n                this._showTooltipContent(\n                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\n                    asyncTicket, e.offsetX, e.offsetY, e.position, el\n                );\n            });\n\n            // If not dispatch showTip, tip may be hide triggered by axis.\n            dispatchAction({\n                type: 'showTip',\n                from: this.uid\n            });\n        },\n\n        _showTooltipContent: function (\n            tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el\n        ) {\n            // Reset ticket\n            this._ticket = '';\n\n            if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n                return;\n            }\n\n            var tooltipContent = this._tooltipContent;\n\n            var formatter = tooltipModel.get('formatter');\n            positionExpr = positionExpr || tooltipModel.get('position');\n            var html = defaultHtml;\n\n            if (formatter && typeof formatter === 'string') {\n                html = formatUtil.formatTpl(formatter, params, true);\n            }\n            else if (typeof formatter === 'function') {\n                var callback = bind(function (cbTicket, html) {\n                    if (cbTicket === this._ticket) {\n                        tooltipContent.setContent(html);\n                        this._updatePosition(\n                            tooltipModel, positionExpr, x, y, tooltipContent, params, el\n                        );\n                    }\n                }, this);\n                this._ticket = asyncTicket;\n                html = formatter(params, asyncTicket, callback);\n            }\n\n            tooltipContent.setContent(html);\n            tooltipContent.show(tooltipModel);\n\n            this._updatePosition(\n                tooltipModel, positionExpr, x, y, tooltipContent, params, el\n            );\n        },\n\n        /**\n         * @param  {string|Function|Array.<number>|Object} positionExpr\n         * @param  {number} x Mouse x\n         * @param  {number} y Mouse y\n         * @param  {boolean} confine Whether confine tooltip content in view rect.\n         * @param  {Object|<Array.<Object>} params\n         * @param  {module:zrender/Element} el target element\n         * @param  {module:echarts/ExtensionAPI} api\n         * @return {Array.<number>}\n         */\n        _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n            var viewWidth = this._api.getWidth();\n            var viewHeight = this._api.getHeight();\n            positionExpr = positionExpr || tooltipModel.get('position');\n\n            var contentSize = content.getSize();\n            var align = tooltipModel.get('align');\n            var vAlign = tooltipModel.get('verticalAlign');\n            var rect = el && el.getBoundingRect().clone();\n            el && rect.applyTransform(el.transform);\n\n            if (typeof positionExpr === 'function') {\n                // Callback of position can be an array or a string specify the position\n                positionExpr = positionExpr([x, y], params, content.el, rect, {\n                    viewSize: [viewWidth, viewHeight],\n                    contentSize: contentSize.slice()\n                });\n            }\n\n            if (zrUtil.isArray(positionExpr)) {\n                x = parsePercent(positionExpr[0], viewWidth);\n                y = parsePercent(positionExpr[1], viewHeight);\n            }\n            else if (zrUtil.isObject(positionExpr)) {\n                positionExpr.width = contentSize[0];\n                positionExpr.height = contentSize[1];\n                var layoutRect = layoutUtil.getLayoutRect(\n                    positionExpr, {width: viewWidth, height: viewHeight}\n                );\n                x = layoutRect.x;\n                y = layoutRect.y;\n                align = null;\n                // When positionExpr is left/top/right/bottom,\n                // align and verticalAlign will not work.\n                vAlign = null;\n            }\n            // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n            else if (typeof positionExpr === 'string' && el) {\n                var pos = calcTooltipPosition(\n                    positionExpr, rect, contentSize\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n            else {\n                var pos = refixTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n            vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n            if (tooltipModel.get('confine')) {\n                var pos = confineTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            content.moveTo(x, y);\n        },\n\n        // FIXME\n        // Should we remove this but leave this to user?\n        _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n            var lastCoordSys = this._lastDataByCoordSys;\n            var contentNotChanged = !!lastCoordSys\n                && lastCoordSys.length === dataByCoordSys.length;\n\n            contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n                var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n                var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n                var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n                contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n\n                contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n                    var thisItem = thisDataByAxis[indexAxis] || {};\n                    var lastIndices = lastItem.seriesDataIndices || [];\n                    var newIndices = thisItem.seriesDataIndices || [];\n\n                    contentNotChanged &=\n                        lastItem.value === thisItem.value\n                        && lastItem.axisType === thisItem.axisType\n                        && lastItem.axisId === thisItem.axisId\n                        && lastIndices.length === newIndices.length;\n\n                    contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n                        var newIdxItem = newIndices[j];\n                        contentNotChanged &=\n                            lastIdxItem.seriesIndex === newIdxItem.seriesIndex\n                            && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n                    });\n                });\n            });\n\n            this._lastDataByCoordSys = dataByCoordSys;\n\n            return !!contentNotChanged;\n        },\n\n        _hide: function (dispatchAction) {\n            // Do not directly hideLater here, because this behavior may be prevented\n            // in dispatchAction when showTip is dispatched.\n\n            // FIXME\n            // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n            this._lastDataByCoordSys = null;\n            dispatchAction({\n                type: 'hideTip',\n                from: this.uid\n            });\n        },\n\n        dispose: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            this._tooltipContent.hide();\n            globalListener.unregister('itemTooltip', api);\n        }\n    });\n\n\n    /**\n     * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n     * From top to bottom. (the last one should be globalTooltipModel);\n     */\n    function buildTooltipModel(modelCascade) {\n        var resultModel = modelCascade.pop();\n        while (modelCascade.length) {\n            var tooltipOpt = modelCascade.pop();\n            if (tooltipOpt) {\n                if (tooltipOpt instanceof Model) {\n                    tooltipOpt = tooltipOpt.get('tooltip', true);\n                }\n                // In each data item tooltip can be simply write:\n                // {\n                //  value: 10,\n                //  tooltip: 'Something you need to know'\n                // }\n                if (typeof tooltipOpt === 'string') {\n                    tooltipOpt = {formatter: tooltipOpt};\n                }\n                resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n            }\n        }\n        return resultModel;\n    }\n\n    function makeDispatchAction(payload, api) {\n        return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n    }\n\n    function refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n        var size = getOuterSize(el);\n        var width = size.width;\n        var height = size.height;\n\n        if (gapH != null) {\n            if (x + width + gapH > viewWidth) {\n                x -= width + gapH;\n            }\n            else {\n                x += gapH;\n            }\n        }\n        if (gapV != null) {\n            if (y + height + gapV > viewHeight) {\n                y -= height + gapV;\n            }\n            else {\n                y += gapV;\n            }\n        }\n        return [x, y];\n    }\n\n    function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var size = getOuterSize(el);\n        var width = size.width;\n        var height = size.height;\n\n        x = Math.min(x + width, viewWidth) - width;\n        y = Math.min(y + height, viewHeight) - height;\n        x = Math.max(x, 0);\n        y = Math.max(y, 0);\n\n        return [x, y];\n    }\n\n    function getOuterSize(el) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        // Consider browser compatibility.\n        // IE8 does not support getComputedStyle.\n        if (document.defaultView && document.defaultView.getComputedStyle) {\n            var stl = document.defaultView.getComputedStyle(el);\n            if (stl) {\n                width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10)\n                    + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n                height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10)\n                    + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n            }\n        }\n\n        return {width: width, height: height};\n    }\n\n    function calcTooltipPosition(position, rect, contentSize) {\n        var domWidth = contentSize[0];\n        var domHeight = contentSize[1];\n        var gap = 5;\n        var x = 0;\n        var y = 0;\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n        switch (position) {\n            case 'inside':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'top':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y - domHeight - gap;\n                break;\n            case 'bottom':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight + gap;\n                break;\n            case 'left':\n                x = rect.x - domWidth - gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'right':\n                x = rect.x + rectWidth + gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n        }\n        return [x, y];\n    }\n\n    function isCenterAlign(align) {\n        return align === 'center' || align === 'middle';\n    }\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipView.js\n// module id = 733\n// module chunks = 0 1 2","\n\n    var axisDefault = require('./axisDefault');\n    var zrUtil = require('zrender/lib/core/util');\n    var ComponentModel = require('../model/Component');\n    var layout = require('../util/layout');\n\n    // FIXME axisType is fixed ?\n    var AXIS_TYPES = ['value', 'category', 'time', 'log'];\n\n    /**\n     * Generate sub axis model class\n     * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n     * @param {module:echarts/model/Component} BaseAxisModelClass\n     * @param {Function} axisTypeDefaulter\n     * @param {Object} [extraDefaultOption]\n     */\n    module.exports = function (axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n\n        zrUtil.each(AXIS_TYPES, function (axisType) {\n\n            BaseAxisModelClass.extend({\n\n                type: axisName + 'Axis.' + axisType,\n\n                mergeDefaultAndTheme: function (option, ecModel) {\n                    var layoutMode = this.layoutMode;\n                    var inputPositionParams = layoutMode\n                        ? layout.getLayoutParams(option) : {};\n\n                    var themeModel = ecModel.getTheme();\n                    zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n                    zrUtil.merge(option, this.getDefaultOption());\n\n                    option.type = axisTypeDefaulter(axisName, option);\n\n                    if (layoutMode) {\n                        layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n                    }\n                },\n\n                defaultOption: zrUtil.mergeAll(\n                    [\n                        {},\n                        axisDefault[axisType + 'Axis'],\n                        extraDefaultOption\n                    ],\n                    true\n                )\n            });\n        });\n\n        ComponentModel.registerSubTypeDefaulter(\n            axisName + 'Axis',\n            zrUtil.curry(axisTypeDefaulter, axisName)\n        );\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisModelCreator.js\n// module id = 734\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Axis = require('../Axis');\n\n    /**\n     * Extend axis 2d\n     * @constructor module:echarts/coord/cartesian/Axis2D\n     * @extends {module:echarts/coord/cartesian/Axis}\n     * @param {string} dim\n     * @param {*} scale\n     * @param {Array.<number>} coordExtent\n     * @param {string} axisType\n     * @param {string} position\n     */\n    var Axis2D = function (dim, scale, coordExtent, axisType, position) {\n        Axis.call(this, dim, scale, coordExtent);\n        /**\n         * Axis type\n         *  - 'category'\n         *  - 'value'\n         *  - 'time'\n         *  - 'log'\n         * @type {string}\n         */\n        this.type = axisType || 'value';\n\n        /**\n         * Axis position\n         *  - 'top'\n         *  - 'bottom'\n         *  - 'left'\n         *  - 'right'\n         */\n        this.position = position || 'bottom';\n    };\n\n    Axis2D.prototype = {\n\n        constructor: Axis2D,\n\n        /**\n         * Index of axis, can be used as key\n         */\n        index: 0,\n        /**\n         * If axis is on the zero position of the other axis\n         * @type {boolean}\n         */\n        onZero: false,\n\n        /**\n         * Axis model\n         * @param {module:echarts/coord/cartesian/AxisModel}\n         */\n        model: null,\n\n        isHorizontal: function () {\n            var position = this.position;\n            return position === 'top' || position === 'bottom';\n        },\n\n        /**\n         * Each item cooresponds to this.getExtent(), which\n         * means globalExtent[0] may greater than globalExtent[1],\n         * unless `asc` is input.\n         *\n         * @param {boolean} [asc]\n         * @return {Array.<number>}\n         */\n        getGlobalExtent: function (asc) {\n            var ret = this.getExtent();\n            ret[0] = this.toGlobalCoord(ret[0]);\n            ret[1] = this.toGlobalCoord(ret[1]);\n            asc && ret[0] > ret[1] && ret.reverse();\n            return ret;\n        },\n\n        getOtherAxis: function () {\n            this.grid.getOtherAxis();\n        },\n\n        /**\n         * If label is ignored.\n         * Automatically used when axis is category and label can not be all shown\n         * @param  {number}  idx\n         * @return {boolean}\n         */\n        isLabelIgnored: function (idx) {\n            if (this.type === 'category') {\n                var labelInterval = this.getLabelInterval();\n                return ((typeof labelInterval === 'function')\n                    && !labelInterval(idx, this.scale.getLabel(idx)))\n                    || idx % (labelInterval + 1);\n            }\n        },\n\n        /**\n         * @override\n         */\n        pointToData: function (point, clamp) {\n            return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n        },\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var localCoord = axis.toLocalCoord(80);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toLocalCoord: null,\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var globalCoord = axis.toLocalCoord(40);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toGlobalCoord: null\n\n    };\n    zrUtil.inherits(Axis2D, Axis);\n\n    module.exports = Axis2D;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Axis2D.js\n// module id = 735\n// module chunks = 0 1 2","'use strict';\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    function dimAxisMapper(dim) {\n        return this._axes[dim];\n    }\n\n    /**\n     * @alias module:echarts/coord/Cartesian\n     * @constructor\n     */\n    var Cartesian = function (name) {\n        this._axes = {};\n\n        this._dimList = [];\n\n        /**\n         * @type {string}\n         */\n        this.name = name || '';\n    };\n\n    Cartesian.prototype = {\n\n        constructor: Cartesian,\n\n        type: 'cartesian',\n\n        /**\n         * Get axis\n         * @param  {number|string} dim\n         * @return {module:echarts/coord/Cartesian~Axis}\n         */\n        getAxis: function (dim) {\n            return this._axes[dim];\n        },\n\n        /**\n         * Get axes list\n         * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n         */\n        getAxes: function () {\n            return zrUtil.map(this._dimList, dimAxisMapper, this);\n        },\n\n        /**\n         * Get axes list by given scale type\n         */\n        getAxesByScale: function (scaleType) {\n            scaleType = scaleType.toLowerCase();\n            return zrUtil.filter(\n                this.getAxes(),\n                function (axis) {\n                    return axis.scale.type === scaleType;\n                }\n            );\n        },\n\n        /**\n         * Add axis\n         * @param {module:echarts/coord/Cartesian.Axis}\n         */\n        addAxis: function (axis) {\n            var dim = axis.dim;\n\n            this._axes[dim] = axis;\n\n            this._dimList.push(dim);\n        },\n\n        /**\n         * Convert data to coord in nd space\n         * @param {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        dataToCoord: function (val) {\n            return this._dataCoordConvert(val, 'dataToCoord');\n        },\n\n        /**\n         * Convert coord in nd space to data\n         * @param  {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        coordToData: function (val) {\n            return this._dataCoordConvert(val, 'coordToData');\n        },\n\n        _dataCoordConvert: function (input, method) {\n            var dimList = this._dimList;\n\n            var output = input instanceof Array ? [] : {};\n\n            for (var i = 0; i < dimList.length; i++) {\n                var dim = dimList[i];\n                var axis = this._axes[dim];\n\n                output[dim] = axis[method](input[dim]);\n            }\n\n            return output;\n        }\n    };\n\n    module.exports = Cartesian;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Cartesian.js\n// module id = 736\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Cartesian = require('./Cartesian');\n\n    function Cartesian2D(name) {\n\n        Cartesian.call(this, name);\n    }\n\n    Cartesian2D.prototype = {\n\n        constructor: Cartesian2D,\n\n        type: 'cartesian2d',\n\n        /**\n         * @type {Array.<string>}\n         * @readOnly\n         */\n        dimensions: ['x', 'y'],\n\n        /**\n         * Base axis will be used on stacking.\n         *\n         * @return {module:echarts/coord/cartesian/Axis2D}\n         */\n        getBaseAxis: function () {\n            return this.getAxesByScale('ordinal')[0]\n                || this.getAxesByScale('time')[0]\n                || this.getAxis('x');\n        },\n\n        /**\n         * If contain point\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        containPoint: function (point) {\n            var axisX = this.getAxis('x');\n            var axisY = this.getAxis('y');\n            return axisX.contain(axisX.toLocalCoord(point[0]))\n                && axisY.contain(axisY.toLocalCoord(point[1]));\n        },\n\n        /**\n         * If contain data\n         * @param {Array.<number>} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.getAxis('x').containData(data[0])\n                && this.getAxis('y').containData(data[1]);\n        },\n\n        /**\n         * @param {Array.<number>} data\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        dataToPoint: function (data, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)),\n                yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))\n            ];\n        },\n\n        /**\n         * @param {Array.<number>} point\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        pointToData: function (point, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp),\n                yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)\n            ];\n        },\n\n        /**\n         * Get other axis\n         * @param {module:echarts/coord/cartesian/Axis2D} axis\n         */\n        getOtherAxis: function (axis) {\n            return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n        }\n\n    };\n\n    zrUtil.inherits(Cartesian2D, Cartesian);\n\n    module.exports = Cartesian2D;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Cartesian2D.js\n// module id = 737\n// module chunks = 0 1 2","'use strict';\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\n\n\n    require('./AxisModel');\n\n    var ComponentModel = require('../../model/Component');\n\n    module.exports = ComponentModel.extend({\n\n        type: 'grid',\n\n        dependencies: ['xAxis', 'yAxis'],\n\n        layoutMode: 'box',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Grid}\n         */\n        coordinateSystem: null,\n\n        defaultOption: {\n            show: false,\n            zlevel: 0,\n            z: 0,\n            left: '10%',\n            top: 60,\n            right: '10%',\n            bottom: 60,\n            // If grid size contain label\n            containLabel: false,\n            // width: {totalWidth} - left - right,\n            // height: {totalHeight} - top - bottom,\n            backgroundColor: 'rgba(0,0,0,0)',\n            borderWidth: 1,\n            borderColor: '#ccc'\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/GridModel.js\n// module id = 738\n// module chunks = 0 1 2","'use strict';\n\n\n    function defaultKeyGetter(item) {\n        return item;\n    }\n\n    /**\n     * @param {Array} oldArr\n     * @param {Array} newArr\n     * @param {Function} oldKeyGetter\n     * @param {Function} newKeyGetter\n     * @param {Object} [context] Can be visited by this.context in callback.\n     */\n    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n        this._old = oldArr;\n        this._new = newArr;\n\n        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n\n        this.context = context;\n    }\n\n    DataDiffer.prototype = {\n\n        constructor: DataDiffer,\n\n        /**\n         * Callback function when add a data\n         */\n        add: function (func) {\n            this._add = func;\n            return this;\n        },\n\n        /**\n         * Callback function when update a data\n         */\n        update: function (func) {\n            this._update = func;\n            return this;\n        },\n\n        /**\n         * Callback function when remove a data\n         */\n        remove: function (func) {\n            this._remove = func;\n            return this;\n        },\n\n        execute: function () {\n            var oldArr = this._old;\n            var newArr = this._new;\n\n            var oldDataIndexMap = {};\n            var newDataIndexMap = {};\n            var oldDataKeyArr = [];\n            var newDataKeyArr = [];\n            var i;\n\n            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this);\n\n            // Travel by inverted order to make sure order consistency\n            // when duplicate keys exists (consider newDataIndex.pop() below).\n            // For performance consideration, these code below do not look neat.\n            for (i = 0; i < oldArr.length; i++) {\n                var key = oldDataKeyArr[i];\n                var idx = newDataIndexMap[key];\n\n                // idx can never be empty array here. see 'set null' logic below.\n                if (idx != null) {\n                    // Consider there is duplicate key (for example, use dataItem.name as key).\n                    // We should make sure every item in newArr and oldArr can be visited.\n                    var len = idx.length;\n                    if (len) {\n                        len === 1 && (newDataIndexMap[key] = null);\n                        idx = idx.unshift();\n                    }\n                    else {\n                        newDataIndexMap[key] = null;\n                    }\n                    this._update && this._update(idx, i);\n                }\n                else {\n                    this._remove && this._remove(i);\n                }\n            }\n\n            for (var i = 0; i < newDataKeyArr.length; i++) {\n                var key = newDataKeyArr[i];\n                if (newDataIndexMap.hasOwnProperty(key)) {\n                    var idx = newDataIndexMap[key];\n                    if (idx == null) {\n                        continue;\n                    }\n                    // idx can never be empty array here. see 'set null' logic above.\n                    if (!idx.length) {\n                        this._add && this._add(idx);\n                    }\n                    else {\n                        for (var j = 0, len = idx.length; j < len; j++) {\n                            this._add && this._add(idx[j]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    function initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n        for (var i = 0; i < arr.length; i++) {\n            // Add prefix to avoid conflict with Object.prototype.\n            var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n            var existence = map[key];\n            if (existence == null) {\n                keyArr.push(key);\n                map[key] = i;\n            }\n            else {\n                if (!existence.length) {\n                    map[key] = existence = [existence];\n                }\n                existence.push(i);\n            }\n        }\n    }\n\n    module.exports = DataDiffer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/DataDiffer.js\n// module id = 739\n// module chunks = 0 1 2","\n\n    var createListFromArray = require('./chart/helper/createListFromArray');\n    var symbolUtil = require('./util/symbol');\n    var axisHelper = require('./coord/axisHelper');\n    var axisModelCommonMixin = require('./coord/axisModelCommonMixin');\n    var Model = require('./model/Model');\n    var util = require('zrender/lib/core/util');\n\n    module.exports = {\n        /**\n         * Create a muti dimension List structure from seriesModel.\n         * @param  {module:echarts/model/Model} seriesModel\n         * @return {module:echarts/data/List} list\n         */\n        createList: function (seriesModel) {\n            var data = seriesModel.get('data');\n            return createListFromArray(data, seriesModel, seriesModel.ecModel);\n        },\n\n        /**\n         * @see {module:echarts/data/helper/completeDimensions}\n         */\n        completeDimensions: require('./data/helper/completeDimensions'),\n\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @see http://echarts.baidu.com/option.html#series-scatter.symbol\n         * @param {string} symbolDesc\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: symbolUtil.createSymbol,\n\n        /**\n         * Create scale\n         * @param {Array.<number>} dataExtent\n         * @param {Object|module:echarts/Model} option\n         */\n        createScale: function (dataExtent, option) {\n            var axisModel = option;\n            if (!(option instanceof Model)) {\n                axisModel = new Model(option);\n                util.mixin(axisModel, axisModelCommonMixin);\n            }\n\n            var scale = axisHelper.createScaleByModel(axisModel);\n            scale.setExtent(dataExtent[0], dataExtent[1]);\n\n            axisHelper.niceScaleExtent(scale, axisModel);\n            return scale;\n        },\n\n        /**\n         * Mixin common methods to axis model,\n         *\n         * Inlcude methods\n         * `getFormattedLabels() => Array.<string>`\n         * `getCategories() => Array.<string>`\n         * `getMin(origin: boolean) => number`\n         * `getMax(origin: boolean) => number`\n         * `getNeedCrossZero() => boolean`\n         * `setRange(start: number, end: number)`\n         * `resetRange()`\n         */\n        mixinAxisModelCommonMethods: function (Model) {\n            util.mixin(Model, axisModelCommonMixin);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/helper.js\n// module id = 740\n// module chunks = 0 1 2","\n\n    module.exports = function (seriesType, ecModel) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var coordSys = seriesModel.coordinateSystem;\n\n            if (!coordSys) {\n                return;\n            }\n\n            var dims = [];\n            var coordDims = coordSys.dimensions;\n            for (var i = 0; i < coordDims.length; i++) {\n                dims.push(seriesModel.coordDimToDataDim(coordSys.dimensions[i])[0]);\n            }\n\n            if (dims.length === 1) {\n                data.each(dims[0], function (x, idx) {\n                    // Also {Array.<number>}, not undefined to avoid if...else... statement\n                    data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n                });\n            }\n            else if (dims.length === 2) {\n                data.each(dims, function (x, y, idx) {\n                    // Also {Array.<number>}, not undefined to avoid if...else... statement\n                    data.setItemLayout(\n                        idx, (isNaN(x) || isNaN(y)) ? [NaN, NaN] : coordSys.dataToPoint([x, y])\n                    );\n                }, true);\n            }\n        });\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/layout/points.js\n// module id = 741\n// module chunks = 0 1 2","\n\n    var graphic = require('../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var PI = Math.PI;\n    /**\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [opts]\n     * @param {string} [opts.text]\n     * @param {string} [opts.color]\n     * @param {string} [opts.textColor]\n     * @return {module:zrender/Element}\n     */\n    module.exports = function (api, opts) {\n        opts = opts || {};\n        zrUtil.defaults(opts, {\n            text: 'loading',\n            color: '#c23531',\n            textColor: '#000',\n            maskColor: 'rgba(255, 255, 255, 0.8)',\n            zlevel: 0\n        });\n        var mask = new graphic.Rect({\n            style: {\n                fill: opts.maskColor\n            },\n            zlevel: opts.zlevel,\n            z: 10000\n        });\n        var arc = new graphic.Arc({\n            shape: {\n                startAngle: -PI / 2,\n                endAngle: -PI / 2 + 0.1,\n                r: 10\n            },\n            style: {\n                stroke: opts.color,\n                lineCap: 'round',\n                lineWidth: 5\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n        var labelRect = new graphic.Rect({\n            style: {\n                fill: 'none',\n                text: opts.text,\n                textPosition: 'right',\n                textDistance: 10,\n                textFill: opts.textColor\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n\n        arc.animateShape(true)\n            .when(1000, {\n                endAngle: PI * 3 / 2\n            })\n            .start('circularInOut');\n        arc.animateShape(true)\n            .when(1000, {\n                startAngle: PI * 3 / 2\n            })\n            .delay(300)\n            .start('circularInOut');\n\n        var group = new graphic.Group();\n        group.add(arc);\n        group.add(labelRect);\n        group.add(mask);\n        // Inject resize\n        group.resize = function () {\n            var cx = api.getWidth() / 2;\n            var cy = api.getHeight() / 2;\n            arc.setShape({\n                cx: cx,\n                cy: cy\n            });\n            var r = arc.shape.r;\n            labelRect.setShape({\n                x: cx - r,\n                y: cy - r,\n                width: r * 2,\n                height: r * 2\n            });\n\n            mask.setShape({\n                x: 0,\n                y: 0,\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n        };\n        group.resize();\n        return group;\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/loading/default.js\n// module id = 742\n// module chunks = 0 1 2","/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n\n\n    /**\n     * Caution: If the mechanism should be changed some day, these cases\n     * should be considered:\n     *\n     * (1) In `merge option` mode, if using the same option to call `setOption`\n     * many times, the result should be the same (try our best to ensure that).\n     * (2) In `merge option` mode, if a component has no id/name specified, it\n     * will be merged by index, and the result sequence of the components is\n     * consistent to the original sequence.\n     * (3) `reset` feature (in toolbox). Find detailed info in comments about\n     * `mergeOption` in module:echarts/model/OptionManager.\n     */\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var Model = require('./Model');\n    var each = zrUtil.each;\n    var filter = zrUtil.filter;\n    var map = zrUtil.map;\n    var isArray = zrUtil.isArray;\n    var indexOf = zrUtil.indexOf;\n    var isObject = zrUtil.isObject;\n\n    var ComponentModel = require('./Component');\n\n    var globalDefault = require('./globalDefault');\n\n    var OPTION_INNER_KEY = '\\0_ec_inner';\n\n    /**\n     * @alias module:echarts/model/Global\n     *\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {Object} theme\n     */\n    var GlobalModel = Model.extend({\n\n        constructor: GlobalModel,\n\n        init: function (option, parentModel, theme, optionManager) {\n            theme = theme || {};\n\n            this.option = null; // Mark as not initialized.\n\n            /**\n             * @type {module:echarts/model/Model}\n             * @private\n             */\n            this._theme = new Model(theme);\n\n            /**\n             * @type {module:echarts/model/OptionManager}\n             */\n            this._optionManager = optionManager;\n        },\n\n        setOption: function (option, optionPreprocessorFuncs) {\n            zrUtil.assert(\n                !(OPTION_INNER_KEY in option),\n                'please use chart.getOption()'\n            );\n\n            this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n            this.resetOption(null);\n        },\n\n        /**\n         * @param {string} type null/undefined: reset all.\n         *                      'recreate': force recreate all.\n         *                      'timeline': only reset timeline option\n         *                      'media': only reset media query option\n         * @return {boolean} Whether option changed.\n         */\n        resetOption: function (type) {\n            var optionChanged = false;\n            var optionManager = this._optionManager;\n\n            if (!type || type === 'recreate') {\n                var baseOption = optionManager.mountOption(type === 'recreate');\n\n                if (!this.option || type === 'recreate') {\n                    initBase.call(this, baseOption);\n                }\n                else {\n                    this.restoreData();\n                    this.mergeOption(baseOption);\n                }\n                optionChanged = true;\n            }\n\n            if (type === 'timeline' || type === 'media') {\n                this.restoreData();\n            }\n\n            if (!type || type === 'recreate' || type === 'timeline') {\n                var timelineOption = optionManager.getTimelineOption(this);\n                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n            }\n\n            if (!type || type === 'recreate' || type === 'media') {\n                var mediaOptions = optionManager.getMediaOption(this, this._api);\n                if (mediaOptions.length) {\n                    each(mediaOptions, function (mediaOption) {\n                        this.mergeOption(mediaOption, optionChanged = true);\n                    }, this);\n                }\n            }\n\n            return optionChanged;\n        },\n\n        /**\n         * @protected\n         */\n        mergeOption: function (newOption) {\n            var option = this.option;\n            var componentsMap = this._componentsMap;\n            var newCptTypes = [];\n\n            // 如果不存在对应的 component model 则直接 merge\n            each(newOption, function (componentOption, mainType) {\n                if (componentOption == null) {\n                    return;\n                }\n\n                if (!ComponentModel.hasClass(mainType)) {\n                    option[mainType] = option[mainType] == null\n                        ? zrUtil.clone(componentOption)\n                        : zrUtil.merge(option[mainType], componentOption, true);\n                }\n                else {\n                    newCptTypes.push(mainType);\n                }\n            });\n\n            // FIXME OPTION 同步是否要改回原来的\n            ComponentModel.topologicalTravel(\n                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\n            );\n\n            this._seriesIndices = this._seriesIndices || [];\n\n            function visitComponent(mainType, dependencies) {\n                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n\n                var mapResult = modelUtil.mappingToExists(\n                    componentsMap.get(mainType), newCptOptionList\n                );\n\n                modelUtil.makeIdAndName(mapResult);\n\n                // Set mainType and complete subType.\n                each(mapResult, function (item, index) {\n                    var opt = item.option;\n                    if (isObject(opt)) {\n                        item.keyInfo.mainType = mainType;\n                        item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n                    }\n                });\n\n                var dependentModels = getComponentsByTypes(\n                    componentsMap, dependencies\n                );\n\n                option[mainType] = [];\n                componentsMap.set(mainType, []);\n\n                each(mapResult, function (resultItem, index) {\n                    var componentModel = resultItem.exist;\n                    var newCptOption = resultItem.option;\n\n                    zrUtil.assert(\n                        isObject(newCptOption) || componentModel,\n                        'Empty component definition'\n                    );\n\n                    // Consider where is no new option and should be merged using {},\n                    // see removeEdgeAndAdd in topologicalTravel and\n                    // ComponentModel.getAllClassMainTypes.\n                    if (!newCptOption) {\n                        componentModel.mergeOption({}, this);\n                        componentModel.optionUpdated({}, false);\n                    }\n                    else {\n                        var ComponentModelClass = ComponentModel.getClass(\n                            mainType, resultItem.keyInfo.subType, true\n                        );\n\n                        if (componentModel && componentModel instanceof ComponentModelClass) {\n                            componentModel.name = resultItem.keyInfo.name;\n                            componentModel.mergeOption(newCptOption, this);\n                            componentModel.optionUpdated(newCptOption, false);\n                        }\n                        else {\n                            // PENDING Global as parent ?\n                            var extraOpt = zrUtil.extend(\n                                {\n                                    dependentModels: dependentModels,\n                                    componentIndex: index\n                                },\n                                resultItem.keyInfo\n                            );\n                            componentModel = new ComponentModelClass(\n                                newCptOption, this, this, extraOpt\n                            );\n                            zrUtil.extend(componentModel, extraOpt);\n                            componentModel.init(newCptOption, this, this, extraOpt);\n                            // Call optionUpdated after init.\n                            // newCptOption has been used as componentModel.option\n                            // and may be merged with theme and default, so pass null\n                            // to avoid confusion.\n                            componentModel.optionUpdated(null, true);\n                        }\n                    }\n\n                    componentsMap.get(mainType)[index] = componentModel;\n                    option[mainType][index] = componentModel.option;\n                }, this);\n\n                // Backup series for filtering.\n                if (mainType === 'series') {\n                    this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n                }\n            }\n        },\n\n        /**\n         * Get option for output (cloned option and inner info removed)\n         * @public\n         * @return {Object}\n         */\n        getOption: function () {\n            var option = zrUtil.clone(this.option);\n\n            each(option, function (opts, mainType) {\n                if (ComponentModel.hasClass(mainType)) {\n                    var opts = modelUtil.normalizeToArray(opts);\n                    for (var i = opts.length - 1; i >= 0; i--) {\n                        // Remove options with inner id.\n                        if (modelUtil.isIdInner(opts[i])) {\n                            opts.splice(i, 1);\n                        }\n                    }\n                    option[mainType] = opts;\n                }\n            });\n\n            delete option[OPTION_INNER_KEY];\n\n            return option;\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        getTheme: function () {\n            return this._theme;\n        },\n\n        /**\n         * @param {string} mainType\n         * @param {number} [idx=0]\n         * @return {module:echarts/model/Component}\n         */\n        getComponent: function (mainType, idx) {\n            var list = this._componentsMap.get(mainType);\n            if (list) {\n                return list[idx || 0];\n            }\n        },\n\n        /**\n         * If none of index and id and name used, return all components with mainType.\n         * @param {Object} condition\n         * @param {string} condition.mainType\n         * @param {string} [condition.subType] If ignore, only query by mainType\n         * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        queryComponents: function (condition) {\n            var mainType = condition.mainType;\n            if (!mainType) {\n                return [];\n            }\n\n            var index = condition.index;\n            var id = condition.id;\n            var name = condition.name;\n\n            var cpts = this._componentsMap.get(mainType);\n\n            if (!cpts || !cpts.length) {\n                return [];\n            }\n\n            var result;\n\n            if (index != null) {\n                if (!isArray(index)) {\n                    index = [index];\n                }\n                result = filter(map(index, function (idx) {\n                    return cpts[idx];\n                }), function (val) {\n                    return !!val;\n                });\n            }\n            else if (id != null) {\n                var isIdArray = isArray(id);\n                result = filter(cpts, function (cpt) {\n                    return (isIdArray && indexOf(id, cpt.id) >= 0)\n                        || (!isIdArray && cpt.id === id);\n                });\n            }\n            else if (name != null) {\n                var isNameArray = isArray(name);\n                result = filter(cpts, function (cpt) {\n                    return (isNameArray && indexOf(name, cpt.name) >= 0)\n                        || (!isNameArray && cpt.name === name);\n                });\n            }\n            else {\n                // Return all components with mainType\n                result = cpts.slice();\n            }\n\n            return filterBySubType(result, condition);\n        },\n\n        /**\n         * The interface is different from queryComponents,\n         * which is convenient for inner usage.\n         *\n         * @usage\n         * var result = findComponents(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series'},\n         *     function (model, index) {...}\n         * );\n         * // result like [component0, componnet1, ...]\n         *\n         * @param {Object} condition\n         * @param {string} condition.mainType Mandatory.\n         * @param {string} [condition.subType] Optional.\n         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n         *        where xxx is mainType.\n         *        If query attribute is null/undefined or has no index/id/name,\n         *        do not filtering by query conditions, which is convenient for\n         *        no-payload situations or when target of action is global.\n         * @param {Function} [condition.filter] parameter: component, return boolean.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        findComponents: function (condition) {\n            var query = condition.query;\n            var mainType = condition.mainType;\n\n            var queryCond = getQueryCond(query);\n            var result = queryCond\n                ? this.queryComponents(queryCond)\n                : this._componentsMap.get(mainType);\n\n            return doFilter(filterBySubType(result, condition));\n\n            function getQueryCond(q) {\n                var indexAttr = mainType + 'Index';\n                var idAttr = mainType + 'Id';\n                var nameAttr = mainType + 'Name';\n                return q && (\n                        q[indexAttr] != null\n                        || q[idAttr] != null\n                        || q[nameAttr] != null\n                    )\n                    ? {\n                        mainType: mainType,\n                        // subType will be filtered finally.\n                        index: q[indexAttr],\n                        id: q[idAttr],\n                        name: q[nameAttr]\n                    }\n                    : null;\n            }\n\n            function doFilter(res) {\n                return condition.filter\n                     ? filter(res, condition.filter)\n                     : res;\n            }\n        },\n\n        /**\n         * @usage\n         * eachComponent('legend', function (legendModel, index) {\n         *     ...\n         * });\n         * eachComponent(function (componentType, model, index) {\n         *     // componentType does not include subType\n         *     // (componentType is 'xxx' but not 'xxx.aa')\n         * });\n         * eachComponent(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n         *     function (model, index) {...}\n         * );\n         * eachComponent(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n         *     function (model, index) {...}\n         * );\n         *\n         * @param {string|Object=} mainType When mainType is object, the definition\n         *                                  is the same as the method 'findComponents'.\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachComponent: function (mainType, cb, context) {\n            var componentsMap = this._componentsMap;\n\n            if (typeof mainType === 'function') {\n                context = cb;\n                cb = mainType;\n                componentsMap.each(function (components, componentType) {\n                    each(components, function (component, index) {\n                        cb.call(context, componentType, component, index);\n                    });\n                });\n            }\n            else if (zrUtil.isString(mainType)) {\n                each(componentsMap.get(mainType), cb, context);\n            }\n            else if (isObject(mainType)) {\n                var queryResult = this.findComponents(mainType);\n                each(queryResult, cb, context);\n            }\n        },\n\n        /**\n         * @param {string} name\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByName: function (name) {\n            var series = this._componentsMap.get('series');\n            return filter(series, function (oneSeries) {\n                return oneSeries.name === name;\n            });\n        },\n\n        /**\n         * @param {number} seriesIndex\n         * @return {module:echarts/model/Series}\n         */\n        getSeriesByIndex: function (seriesIndex) {\n            return this._componentsMap.get('series')[seriesIndex];\n        },\n\n        /**\n         * @param {string} subType\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByType: function (subType) {\n            var series = this._componentsMap.get('series');\n            return filter(series, function (oneSeries) {\n                return oneSeries.subType === subType;\n            });\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeries: function () {\n            return this._componentsMap.get('series').slice();\n        },\n\n        /**\n         * After filtering, series may be different\n         * frome raw series.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.get('series')[rawSeriesIndex];\n                cb.call(context, series, rawSeriesIndex);\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeries: function (cb, context) {\n            each(this._componentsMap.get('series'), cb, context);\n        },\n\n        /**\n         * After filtering, series may be different.\n         * frome raw series.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeriesByType: function (subType, cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.get('series')[rawSeriesIndex];\n                if (series.subType === subType) {\n                    cb.call(context, series, rawSeriesIndex);\n                }\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered of given type.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeriesByType: function (subType, cb, context) {\n            return each(this.getSeriesByType(subType), cb, context);\n        },\n\n        /**\n         * @param {module:echarts/model/Series} seriesModel\n         */\n        isSeriesFiltered: function (seriesModel) {\n            assertSeriesInitialized(this);\n            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getCurrentSeriesIndices: function () {\n            return (this._seriesIndices || []).slice();\n        },\n\n        /**\n         * @param {Function} cb\n         * @param {*} context\n         */\n        filterSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            var filteredSeries = filter(\n                this._componentsMap.get('series'), cb, context\n            );\n            this._seriesIndices = createSeriesIndices(filteredSeries);\n        },\n\n        restoreData: function () {\n            var componentsMap = this._componentsMap;\n\n            this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n\n            var componentTypes = [];\n            componentsMap.each(function (components, componentType) {\n                componentTypes.push(componentType);\n            });\n\n            ComponentModel.topologicalTravel(\n                componentTypes,\n                ComponentModel.getAllClassMainTypes(),\n                function (componentType, dependencies) {\n                    each(componentsMap.get(componentType), function (component) {\n                        component.restoreData();\n                    });\n                }\n            );\n        }\n\n    });\n\n    /**\n     * @inner\n     */\n    function mergeTheme(option, theme) {\n        zrUtil.each(theme, function (themeItem, name) {\n            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n            if (!ComponentModel.hasClass(name)) {\n                if (typeof themeItem === 'object') {\n                    option[name] = !option[name]\n                        ? zrUtil.clone(themeItem)\n                        : zrUtil.merge(option[name], themeItem, false);\n                }\n                else {\n                    if (option[name] == null) {\n                        option[name] = themeItem;\n                    }\n                }\n            }\n        });\n    }\n\n    function initBase(baseOption) {\n        baseOption = baseOption;\n\n        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n        this.option = {};\n        this.option[OPTION_INNER_KEY] = 1;\n\n        /**\n         * Init with series: [], in case of calling findSeries method\n         * before series initialized.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @private\n         */\n        this._componentsMap = zrUtil.createHashMap({series: []});\n\n        /**\n         * Mapping between filtered series list and raw series list.\n         * key: filtered series indices, value: raw series indices.\n         * @type {Array.<nubmer>}\n         * @private\n         */\n        this._seriesIndices = null;\n\n        mergeTheme(baseOption, this._theme.option);\n\n        // TODO Needs clone when merging to the unexisted property\n        zrUtil.merge(baseOption, globalDefault, false);\n\n        this.mergeOption(baseOption);\n    }\n\n    /**\n     * @inner\n     * @param {Array.<string>|string} types model types\n     * @return {Object} key: {string} type, value: {Array.<Object>} models\n     */\n    function getComponentsByTypes(componentsMap, types) {\n        if (!zrUtil.isArray(types)) {\n            types = types ? [types] : [];\n        }\n\n        var ret = {};\n        each(types, function (type) {\n            ret[type] = (componentsMap.get(type) || []).slice();\n        });\n\n        return ret;\n    }\n\n    /**\n     * @inner\n     */\n    function determineSubType(mainType, newCptOption, existComponent) {\n        var subType = newCptOption.type\n            ? newCptOption.type\n            : existComponent\n            ? existComponent.subType\n            // Use determineSubType only when there is no existComponent.\n            : ComponentModel.determineSubType(mainType, newCptOption);\n\n        // tooltip, markline, markpoint may always has no subType\n        return subType;\n    }\n\n    /**\n     * @inner\n     */\n    function createSeriesIndices(seriesModels) {\n        return map(seriesModels, function (series) {\n            return series.componentIndex;\n        }) || [];\n    }\n\n    /**\n     * @inner\n     */\n    function filterBySubType(components, condition) {\n        // Using hasOwnProperty for restrict. Consider\n        // subType is undefined in user payload.\n        return condition.hasOwnProperty('subType')\n            ? filter(components, function (cpt) {\n                return cpt.subType === condition.subType;\n            })\n            : components;\n    }\n\n    /**\n     * @inner\n     */\n    function assertSeriesInitialized(ecModel) {\n        // Components that use _seriesIndices should depends on series component,\n        // which make sure that their initialization is after series.\n        if (__DEV__) {\n            if (!ecModel._seriesIndices) {\n                throw new Error('Option should contains series.');\n            }\n        }\n    }\n\n    zrUtil.mixin(GlobalModel, require('./mixin/colorPalette'));\n\n    module.exports = GlobalModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Global.js\n// module id = 743\n// module chunks = 0 1 2","/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var ComponentModel = require('./Component');\n    var each = zrUtil.each;\n    var clone = zrUtil.clone;\n    var map = zrUtil.map;\n    var merge = zrUtil.merge;\n\n    var QUERY_REG = /^(min|max)?(.+)$/;\n\n    /**\n     * TERM EXPLANATIONS:\n     *\n     * [option]:\n     *\n     *     An object that contains definitions of components. For example:\n     *     var option = {\n     *         title: {...},\n     *         legend: {...},\n     *         visualMap: {...},\n     *         series: [\n     *             {data: [...]},\n     *             {data: [...]},\n     *             ...\n     *         ]\n     *     };\n     *\n     * [rawOption]:\n     *\n     *     An object input to echarts.setOption. 'rawOption' may be an\n     *     'option', or may be an object contains multi-options. For example:\n     *     var option = {\n     *         baseOption: {\n     *             title: {...},\n     *             legend: {...},\n     *             series: [\n     *                 {data: [...]},\n     *                 {data: [...]},\n     *                 ...\n     *             ]\n     *         },\n     *         timeline: {...},\n     *         options: [\n     *             {title: {...}, series: {data: [...]}},\n     *             {title: {...}, series: {data: [...]}},\n     *             ...\n     *         ],\n     *         media: [\n     *             {\n     *                 query: {maxWidth: 320},\n     *                 option: {series: {x: 20}, visualMap: {show: false}}\n     *             },\n     *             {\n     *                 query: {minWidth: 320, maxWidth: 720},\n     *                 option: {series: {x: 500}, visualMap: {show: true}}\n     *             },\n     *             {\n     *                 option: {series: {x: 1200}, visualMap: {show: true}}\n     *             }\n     *         ]\n     *     };\n     *\n     * @alias module:echarts/model/OptionManager\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function OptionManager(api) {\n\n        /**\n         * @private\n         * @type {module:echarts/ExtensionAPI}\n         */\n        this._api = api;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._timelineOptions = [];\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._mediaList = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._mediaDefault;\n\n        /**\n         * -1, means default.\n         * empty means no media.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._currentMediaIndices = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._optionBackup;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._newBaseOption;\n    }\n\n    // timeline.notMerge is not supported in ec3. Firstly there is rearly\n    // case that notMerge is needed. Secondly supporting 'notMerge' requires\n    // rawOption cloned and backuped when timeline changed, which does no\n    // good to performance. What's more, that both timeline and setOption\n    // method supply 'notMerge' brings complex and some problems.\n    // Consider this case:\n    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n    OptionManager.prototype = {\n\n        constructor: OptionManager,\n\n        /**\n         * @public\n         * @param {Object} rawOption Raw option.\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Array.<Function>} optionPreprocessorFuncs\n         * @return {Object} Init option\n         */\n        setOption: function (rawOption, optionPreprocessorFuncs) {\n            rawOption = clone(rawOption, true);\n\n            // FIXME\n            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n            var oldOptionBackup = this._optionBackup;\n            var newParsedOption = parseRawOption.call(\n                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\n            );\n            this._newBaseOption = newParsedOption.baseOption;\n\n            // For setOption at second time (using merge mode);\n            if (oldOptionBackup) {\n                // Only baseOption can be merged.\n                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\n\n                // For simplicity, timeline options and media options do not support merge,\n                // that is, if you `setOption` twice and both has timeline options, the latter\n                // timeline opitons will not be merged to the formers, but just substitude them.\n                if (newParsedOption.timelineOptions.length) {\n                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n                }\n                if (newParsedOption.mediaList.length) {\n                    oldOptionBackup.mediaList = newParsedOption.mediaList;\n                }\n                if (newParsedOption.mediaDefault) {\n                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n                }\n            }\n            else {\n                this._optionBackup = newParsedOption;\n            }\n        },\n\n        /**\n         * @param {boolean} isRecreate\n         * @return {Object}\n         */\n        mountOption: function (isRecreate) {\n            var optionBackup = this._optionBackup;\n\n            // TODO\n            // 如果没有reset功能则不clone。\n\n            this._timelineOptions = map(optionBackup.timelineOptions, clone);\n            this._mediaList = map(optionBackup.mediaList, clone);\n            this._mediaDefault = clone(optionBackup.mediaDefault);\n            this._currentMediaIndices = [];\n\n            return clone(isRecreate\n                // this._optionBackup.baseOption, which is created at the first `setOption`\n                // called, and is merged into every new option by inner method `mergeOption`\n                // each time `setOption` called, can be only used in `isRecreate`, because\n                // its reliability is under suspicion. In other cases option merge is\n                // performed by `model.mergeOption`.\n                ? optionBackup.baseOption : this._newBaseOption\n            );\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object}\n         */\n        getTimelineOption: function (ecModel) {\n            var option;\n            var timelineOptions = this._timelineOptions;\n\n            if (timelineOptions.length) {\n                // getTimelineOption can only be called after ecModel inited,\n                // so we can get currentIndex from timelineModel.\n                var timelineModel = ecModel.getComponent('timeline');\n                if (timelineModel) {\n                    option = clone(\n                        timelineOptions[timelineModel.getCurrentIndex()],\n                        true\n                    );\n                }\n            }\n\n            return option;\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Array.<Object>}\n         */\n        getMediaOption: function (ecModel) {\n            var ecWidth = this._api.getWidth();\n            var ecHeight = this._api.getHeight();\n            var mediaList = this._mediaList;\n            var mediaDefault = this._mediaDefault;\n            var indices = [];\n            var result = [];\n\n            // No media defined.\n            if (!mediaList.length && !mediaDefault) {\n                return result;\n            }\n\n            // Multi media may be applied, the latter defined media has higher priority.\n            for (var i = 0, len = mediaList.length; i < len; i++) {\n                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n                    indices.push(i);\n                }\n            }\n\n            // FIXME\n            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n            if (!indices.length && mediaDefault) {\n                indices = [-1];\n            }\n\n            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n                result = map(indices, function (index) {\n                    return clone(\n                        index === -1 ? mediaDefault.option : mediaList[index].option\n                    );\n                });\n            }\n            // Otherwise return nothing.\n\n            this._currentMediaIndices = indices;\n\n            return result;\n        }\n    };\n\n    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n        var timelineOptions = [];\n        var mediaList = [];\n        var mediaDefault;\n        var baseOption;\n\n        // Compatible with ec2.\n        var timelineOpt = rawOption.timeline;\n\n        if (rawOption.baseOption) {\n            baseOption = rawOption.baseOption;\n        }\n\n        // For timeline\n        if (timelineOpt || rawOption.options) {\n            baseOption = baseOption || {};\n            timelineOptions = (rawOption.options || []).slice();\n        }\n\n        // For media query\n        if (rawOption.media) {\n            baseOption = baseOption || {};\n            var media = rawOption.media;\n            each(media, function (singleMedia) {\n                if (singleMedia && singleMedia.option) {\n                    if (singleMedia.query) {\n                        mediaList.push(singleMedia);\n                    }\n                    else if (!mediaDefault) {\n                        // Use the first media default.\n                        mediaDefault = singleMedia;\n                    }\n                }\n            });\n        }\n\n        // For normal option\n        if (!baseOption) {\n            baseOption = rawOption;\n        }\n\n        // Set timelineOpt to baseOption in ec3,\n        // which is convenient for merge option.\n        if (!baseOption.timeline) {\n            baseOption.timeline = timelineOpt;\n        }\n\n        // Preprocess.\n        each([baseOption].concat(timelineOptions)\n            .concat(zrUtil.map(mediaList, function (media) {\n                return media.option;\n            })),\n            function (option) {\n                each(optionPreprocessorFuncs, function (preProcess) {\n                    preProcess(option, isNew);\n                });\n            }\n        );\n\n        return {\n            baseOption: baseOption,\n            timelineOptions: timelineOptions,\n            mediaDefault: mediaDefault,\n            mediaList: mediaList\n        };\n    }\n\n    /**\n     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n     * Support: width, height, aspectRatio\n     * Can use max or min as prefix.\n     */\n    function applyMediaQuery(query, ecWidth, ecHeight) {\n        var realMap = {\n            width: ecWidth,\n            height: ecHeight,\n            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n        };\n\n        var applicatable = true;\n\n        zrUtil.each(query, function (value, attr) {\n            var matched = attr.match(QUERY_REG);\n\n            if (!matched || !matched[1] || !matched[2]) {\n                return;\n            }\n\n            var operator = matched[1];\n            var realAttr = matched[2].toLowerCase();\n\n            if (!compare(realMap[realAttr], value, operator)) {\n                applicatable = false;\n            }\n        });\n\n        return applicatable;\n    }\n\n    function compare(real, expect, operator) {\n        if (operator === 'min') {\n            return real >= expect;\n        }\n        else if (operator === 'max') {\n            return real <= expect;\n        }\n        else { // Equals\n            return real === expect;\n        }\n    }\n\n    function indicesEquals(indices1, indices2) {\n        // indices is always order by asc and has only finite number.\n        return indices1.join(',') === indices2.join(',');\n    }\n\n    /**\n     * Consider case:\n     * `chart.setOption(opt1);`\n     * Then user do some interaction like dataZoom, dataView changing.\n     * `chart.setOption(opt2);`\n     * Then user press 'reset button' in toolbox.\n     *\n     * After doing that all of the interaction effects should be reset, the\n     * chart should be the same as the result of invoke\n     * `chart.setOption(opt1); chart.setOption(opt2);`.\n     *\n     * Although it is not able ensure that\n     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n     * `chart.setOption(merge(opt1, opt2));` exactly,\n     * this might be the only simple way to implement that feature.\n     *\n     * MEMO: We've considered some other approaches:\n     * 1. Each model handle its self restoration but not uniform treatment.\n     *     (Too complex in logic and error-prone)\n     * 2. Use a shadow ecModel. (Performace expensive)\n     */\n    function mergeOption(oldOption, newOption) {\n        newOption = newOption || {};\n\n        each(newOption, function (newCptOpt, mainType) {\n            if (newCptOpt == null) {\n                return;\n            }\n\n            var oldCptOpt = oldOption[mainType];\n\n            if (!ComponentModel.hasClass(mainType)) {\n                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n            }\n            else {\n                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n\n                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n\n                oldOption[mainType] = map(mapResult, function (item) {\n                    return (item.option && item.exist)\n                        ? merge(item.exist, item.option, true)\n                        : (item.exist || item.option);\n                });\n            }\n        });\n    }\n\n    module.exports = OptionManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/OptionManager.js\n// module id = 744\n// module chunks = 0 1 2","\n    var platform = '';\n    // Navigator not exists in node\n    if (typeof navigator !== 'undefined') {\n        platform = navigator.platform || '';\n    }\n    module.exports = {\n        // 全图默认背景\n        // backgroundColor: 'rgba(0,0,0,0)',\n\n        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n        // 浅色\n        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n        // 深色\n        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\n\n        // 默认需要 Grid 配置项\n        // grid: {},\n        // 主题，主题\n        textStyle: {\n            // color: '#000',\n            // decoration: 'none',\n            // PENDING\n            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n            // fontFamily: 'Arial, Verdana, sans-serif',\n            fontSize: 12,\n            fontStyle: 'normal',\n            fontWeight: 'normal'\n        },\n\n        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n        // Default is source-over\n        blendMode: null,\n\n        animation: 'auto',\n        animationDuration: 1000,\n        animationDurationUpdate: 300,\n        animationEasing: 'exponentialOut',\n        animationEasingUpdate: 'cubicOut',\n\n        animationThreshold: 2000,\n        // Configuration for progressive/incremental rendering\n        progressiveThreshold: 3000,\n        progressive: 400,\n\n        // Threshold of if use single hover layer to optimize.\n        // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n        // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n        // which is unexpected.\n        // see example <echarts/test/heatmap-large.html>.\n        hoverLayerThreshold: 3000,\n\n        // See: module:echarts/scale/Time\n        useUTC: false\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/globalDefault.js\n// module id = 745\n// module chunks = 0 1 2","\n    module.exports = {\n        getAreaStyle: require('./makeStyleMapper')(\n            [\n                ['fill', 'color'],\n                ['shadowBlur'],\n                ['shadowOffsetX'],\n                ['shadowOffsetY'],\n                ['opacity'],\n                ['shadowColor']\n            ]\n        )\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/areaStyle.js\n// module id = 746\n// module chunks = 0 1 2","\n\n    module.exports = {\n        getBoxLayoutParams: function () {\n            return {\n                left: this.get('left'),\n                top: this.get('top'),\n                right: this.get('right'),\n                bottom: this.get('bottom'),\n                width: this.get('width'),\n                height: this.get('height')\n            };\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/boxLayout.js\n// module id = 747\n// module chunks = 0 1 2","\n    var getItemStyle = require('./makeStyleMapper')(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor'],\n            ['textPosition'],\n            ['textAlign']\n        ]\n    );\n    module.exports = {\n        getItemStyle: function (excludes, includes) {\n            var style = getItemStyle.call(this, excludes, includes);\n            var lineDash = this.getBorderLineDash();\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getBorderLineDash: function () {\n            var lineType = this.get('borderType');\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/itemStyle.js\n// module id = 748\n// module chunks = 0 1 2","\n    var getLineStyle = require('./makeStyleMapper')(\n        [\n            ['lineWidth', 'width'],\n            ['stroke', 'color'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getLineStyle: function (excludes) {\n            var style = getLineStyle.call(this, excludes);\n            var lineDash = this.getLineDash(style.lineWidth);\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getLineDash: function (lineWidth) {\n            if (lineWidth == null) {\n                lineWidth = 1;\n            }\n            var lineType = this.get('type');\n            var dotSize = Math.max(lineWidth, 2);\n            var dashSize = lineWidth * 4;\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize]);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/lineStyle.js\n// module id = 749\n// module chunks = 0 1 2","\n\n    var textContain = require('zrender/lib/contain/text');\n    var graphicUtil = require('../../util/graphic');\n\n    var PATH_COLOR = ['textStyle', 'color'];\n\n    module.exports = {\n        /**\n         * Get color property or get color from option.textStyle.color\n         * @param {boolean} [noDefault]\n         * @return {string}\n         */\n        getTextColor: function (noDefault) {\n            var ecModel = this.ecModel;\n            return this.getShallow('color')\n                || (\n                    (!noDefault && ecModel) ? ecModel.get(PATH_COLOR) : null\n                );\n        },\n\n        /**\n         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n         * @return {string}\n         */\n        getFont: function () {\n            return graphicUtil.getFont({\n                fontStyle: this.getShallow('fontStyle'),\n                fontWeight: this.getShallow('fontWeight'),\n                fontSize: this.getShallow('fontSize'),\n                fontFamily: this.getShallow('fontFamily')\n            }, this.ecModel);\n        },\n\n        getTextRect: function (text) {\n            return textContain.getBoundingRect(\n                text,\n                this.getFont(),\n                this.getShallow('align'),\n                this.getShallow('verticalAlign') || this.getShallow('baseline'),\n                this.getShallow('padding'),\n                this.getShallow('rich'),\n                this.getShallow('truncateText')\n            );\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/textStyle.js\n// module id = 750\n// module chunks = 0 1 2","// Compatitable with 2.0\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var compatStyle = require('./helper/compatStyle');\n\n    function get(opt, path) {\n        path = path.split(',');\n        var obj = opt;\n        for (var i = 0; i < path.length; i++) {\n            obj = obj && obj[path[i]];\n            if (obj == null) {\n                break;\n            }\n        }\n        return obj;\n    }\n\n    function set(opt, path, val, overwrite) {\n        path = path.split(',');\n        var obj = opt;\n        var key;\n        for (var i = 0; i < path.length - 1; i++) {\n            key = path[i];\n            if (obj[key] == null) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        }\n        if (overwrite || obj[path[i]] == null) {\n            obj[path[i]] = val;\n        }\n    }\n\n    function compatLayoutProperties(option) {\n        each(LAYOUT_PROPERTIES, function (prop) {\n            if (prop[0] in option && !(prop[1] in option)) {\n                option[prop[1]] = option[prop[0]];\n            }\n        });\n    }\n\n    var LAYOUT_PROPERTIES = [\n        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\n    ];\n\n    var COMPATITABLE_COMPONENTS = [\n        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\n    ];\n\n    var COMPATITABLE_SERIES = [\n        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\n        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\n        'pie', 'radar', 'sankey', 'scatter', 'treemap'\n    ];\n\n    var each = zrUtil.each;\n\n    module.exports = function (option) {\n        compatStyle(option);\n\n        var series = option.series;\n        each(zrUtil.isArray(series) ? series : [series], function (seriesOpt) {\n            if (!zrUtil.isObject(seriesOpt)) {\n                return;\n            }\n\n            var seriesType = seriesOpt.type;\n\n            if (seriesType === 'pie' || seriesType === 'gauge') {\n                if (seriesOpt.clockWise != null) {\n                    seriesOpt.clockwise = seriesOpt.clockWise;\n                }\n            }\n            if (seriesType === 'gauge') {\n                var pointerColor = get(seriesOpt, 'pointer.color');\n                pointerColor != null\n                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n            }\n\n            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n                    compatLayoutProperties(seriesOpt);\n                    break;\n                }\n            }\n        });\n\n        // dataRange has changed to visualMap\n        if (option.dataRange) {\n            option.visualMap = option.dataRange;\n        }\n\n        each(COMPATITABLE_COMPONENTS, function (componentName) {\n            var options = option[componentName];\n            if (options) {\n                if (!zrUtil.isArray(options)) {\n                    options = [options];\n                }\n                each(options, function (option) {\n                    compatLayoutProperties(option);\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/preprocessor/backwardCompat.js\n// module id = 751\n// module chunks = 0 1 2","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var POSSIBLE_STYLES = [\n        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\n        'chordStyle', 'label', 'labelLine'\n    ];\n\n    function compatItemStyle(opt) {\n        var itemStyleOpt = opt && opt.itemStyle;\n        if (!itemStyleOpt) {\n            return;\n        }\n        for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n            var styleName = POSSIBLE_STYLES[i];\n            var normalItemStyleOpt = itemStyleOpt.normal;\n            var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n            if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n                opt[styleName] = opt[styleName] || {};\n                if (!opt[styleName].normal) {\n                    opt[styleName].normal = normalItemStyleOpt[styleName];\n                }\n                else {\n                    zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n                }\n                normalItemStyleOpt[styleName] = null;\n            }\n            if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n                opt[styleName] = opt[styleName] || {};\n                if (!opt[styleName].emphasis) {\n                    opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n                }\n                else {\n                    zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n                }\n                emphasisItemStyleOpt[styleName] = null;\n            }\n        }\n    }\n\n    function compatTextStyle(opt, propName) {\n        var labelOptSingle = isObject(opt) && opt[propName];\n        var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n        if (textStyle) {\n            for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n                var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n                if (textStyle.hasOwnProperty(propName)) {\n                    labelOptSingle[propName] = textStyle[propName];\n                }\n            }\n        }\n    }\n\n    function compatLabelTextStyle(labelOpt) {\n        if (isObject(labelOpt)) {\n            compatTextStyle(labelOpt, 'normal');\n            compatTextStyle(labelOpt, 'emphasis');\n        }\n    }\n\n    function processSeries(seriesOpt) {\n        if (!isObject(seriesOpt)) {\n            return;\n        }\n\n        compatItemStyle(seriesOpt);\n        compatLabelTextStyle(seriesOpt.label);\n        // treemap\n        compatLabelTextStyle(seriesOpt.upperLabel);\n        // graph\n        compatLabelTextStyle(seriesOpt.edgeLabel);\n\n        var markPoint = seriesOpt.markPoint;\n        compatItemStyle(markPoint);\n        compatLabelTextStyle(markPoint && markPoint.label);\n\n        var markLine = seriesOpt.markLine;\n        compatItemStyle(seriesOpt.markLine);\n        compatLabelTextStyle(markLine && markLine.label);\n\n        var markArea = seriesOpt.markArea;\n        compatLabelTextStyle(markArea && markArea.label);\n\n        // For gauge\n        compatTextStyle(seriesOpt, 'axisLabel');\n        compatTextStyle(seriesOpt, 'title');\n        compatTextStyle(seriesOpt, 'detail');\n\n        var data = seriesOpt.data;\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                compatItemStyle(data[i]);\n                compatLabelTextStyle(data[i] && data[i].label);\n            }\n            // mark point data\n            var markPoint = seriesOpt.markPoint;\n            if (markPoint && markPoint.data) {\n                var mpData = markPoint.data;\n                for (var i = 0; i < mpData.length; i++) {\n                    compatItemStyle(mpData[i]);\n                    compatLabelTextStyle(mpData[i] && mpData[i].label);\n                }\n            }\n            // mark line data\n            var markLine = seriesOpt.markLine;\n            if (markLine && markLine.data) {\n                var mlData = markLine.data;\n                for (var i = 0; i < mlData.length; i++) {\n                    if (zrUtil.isArray(mlData[i])) {\n                        compatItemStyle(mlData[i][0]);\n                        compatLabelTextStyle(mlData[i][0] && mlData[i][0].label);\n                        compatItemStyle(mlData[i][1]);\n                        compatLabelTextStyle(mlData[i][1] && mlData[i][1].label);\n                    }\n                    else {\n                        compatItemStyle(mlData[i]);\n                        compatLabelTextStyle(mlData[i] && mlData[i].label);\n                    }\n                }\n            }\n        }\n    }\n\n    function toArr(o) {\n        return zrUtil.isArray(o) ? o : o ? [o] : [];\n    }\n\n    function toObj(o) {\n        return (zrUtil.isArray(o) ? o[0] : o) || {};\n    }\n\n    module.exports = function (option) {\n        each(toArr(option.series), function (seriesOpt) {\n            isObject(seriesOpt) && processSeries(seriesOpt);\n        });\n\n        each(\n            ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'],\n            function (axisName) {\n                each(toArr(option[axisName]), function (axisOpt) {\n                    if (axisOpt) {\n                        compatTextStyle(axisOpt, 'axisLabel');\n                        compatTextStyle(axisOpt.axisPointer, 'label');\n                    }\n                });\n            }\n        );\n\n        each(toArr(option.parallel), function (parallelOpt) {\n            var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n            compatTextStyle(parallelAxisDefault, 'axisLabel');\n            compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n        });\n\n        each(toArr(option.calendar), function (calendarOpt) {\n            compatTextStyle(calendarOpt, 'dayLabel');\n            compatTextStyle(calendarOpt, 'monthLabel');\n            compatTextStyle(calendarOpt, 'yearLabel');\n        });\n\n        // radar.name.textStyle\n        each(toArr(option.radar), function (radarOpt) {\n            compatTextStyle(radarOpt, 'name');\n        });\n\n        each(toArr(option.geo), function (geoOpt) {\n            isObject(geoOpt) && compatLabelTextStyle(geoOpt.label);\n        });\n\n        compatLabelTextStyle(toObj(option.timeline).label);\n        compatTextStyle(toObj(option.axisPointer), 'label');\n        compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/preprocessor/helper/compatStyle.js\n// module id = 752\n// module chunks = 0 1 2","\n    var samplers = {\n        average: function (frame) {\n            var sum = 0;\n            var count = 0;\n            for (var i = 0; i < frame.length; i++) {\n                if (!isNaN(frame[i])) {\n                    sum += frame[i];\n                    count++;\n                }\n            }\n            // Return NaN if count is 0\n            return count === 0 ? NaN : sum / count;\n        },\n        sum: function (frame) {\n            var sum = 0;\n            for (var i = 0; i < frame.length; i++) {\n                // Ignore NaN\n                sum += frame[i] || 0;\n            }\n            return sum;\n        },\n        max: function (frame) {\n            var max = -Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] > max && (max = frame[i]);\n            }\n            return max;\n        },\n        min: function (frame) {\n            var min = Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] < min && (min = frame[i]);\n            }\n            return min;\n        },\n        // TODO\n        // Median\n        nearest: function (frame) {\n            return frame[0];\n        }\n    };\n\n    var indexSampler = function (frame, value) {\n        return Math.round(frame.length / 2);\n    };\n    module.exports = function (seriesType, ecModel, api) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var sampling = seriesModel.get('sampling');\n            var coordSys = seriesModel.coordinateSystem;\n            // Only cartesian2d support down sampling\n            if (coordSys.type === 'cartesian2d' && sampling) {\n                var baseAxis = coordSys.getBaseAxis();\n                var valueAxis = coordSys.getOtherAxis(baseAxis);\n                var extent = baseAxis.getExtent();\n                // Coordinste system has been resized\n                var size = extent[1] - extent[0];\n                var rate = Math.round(data.count() / size);\n                if (rate > 1) {\n                    var sampler;\n                    if (typeof sampling === 'string') {\n                        sampler = samplers[sampling];\n                    }\n                    else if (typeof sampling === 'function') {\n                        sampler = sampling;\n                    }\n                    if (sampler) {\n                        data = data.downSample(\n                            valueAxis.dim, 1 / rate, sampler, indexSampler\n                        );\n                        seriesModel.setData(data);\n                    }\n                }\n            }\n        }, this);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/processor/dataSample.js\n// module id = 753\n// module chunks = 0 1 2","/**\n * Log scale\n * @module echarts/scale/Log\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Scale = require('./Scale');\n    var numberUtil = require('../util/number');\n\n    // Use some method of IntervalScale\n    var IntervalScale = require('./Interval');\n\n    var scaleProto = Scale.prototype;\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n    var mathPow = Math.pow;\n\n    var mathLog = Math.log;\n\n    var LogScale = Scale.extend({\n\n        type: 'log',\n\n        base: 10,\n\n        $constructor: function () {\n            Scale.apply(this, arguments);\n            this._originalScale = new IntervalScale();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            var originalScale = this._originalScale;\n            var extent = this._extent;\n            var originalExtent = originalScale.getExtent();\n\n            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n                var powVal = numberUtil.round(mathPow(this.base, val));\n\n                // Fix #4158\n                powVal = (val === extent[0] && originalScale.__fixMin)\n                    ? fixRoundingError(powVal, originalExtent[0])\n                    : powVal;\n                powVal = (val === extent[1] && originalScale.__fixMax)\n                    ? fixRoundingError(powVal, originalExtent[1])\n                    : powVal;\n\n                return powVal;\n            }, this);\n        },\n\n        /**\n         * @param {number} val\n         * @return {string}\n         */\n        getLabel: intervalScaleProto.getLabel,\n\n        /**\n         * @param  {number} val\n         * @return {number}\n         */\n        scale: function (val) {\n            val = scaleProto.scale.call(this, val);\n            return mathPow(this.base, val);\n        },\n\n        /**\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var base = this.base;\n            start = mathLog(start) / mathLog(base);\n            end = mathLog(end) / mathLog(base);\n            intervalScaleProto.setExtent.call(this, start, end);\n        },\n\n        /**\n         * @return {number} end\n         */\n        getExtent: function () {\n            var base = this.base;\n            var extent = scaleProto.getExtent.call(this);\n            extent[0] = mathPow(base, extent[0]);\n            extent[1] = mathPow(base, extent[1]);\n\n            // Fix #4158\n            var originalScale = this._originalScale;\n            var originalExtent = originalScale.getExtent();\n            originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n            originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n\n            return extent;\n        },\n\n        /**\n         * @param  {Array.<number>} extent\n         */\n        unionExtent: function (extent) {\n            this._originalScale.unionExtent(extent);\n\n            var base = this.base;\n            extent[0] = mathLog(extent[0]) / mathLog(base);\n            extent[1] = mathLog(extent[1]) / mathLog(base);\n            scaleProto.unionExtent.call(this, extent);\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, true, function (val) {\n                return val > 0;\n            }));\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         * @param  {number} [approxTickNum = 10] Given approx tick number\n         */\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (span === Infinity || span <= 0) {\n                return;\n            }\n\n            var interval = numberUtil.quantity(span);\n            var err = approxTickNum / span * interval;\n\n            // Filter ticks to get closer to the desired count.\n            if (err <= 0.5) {\n                interval *= 10;\n            }\n\n            // Interval should be integer\n            while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n                interval *= 10;\n            }\n\n            var niceExtent = [\n                numberUtil.round(mathCeil(extent[0] / interval) * interval),\n                numberUtil.round(mathFloor(extent[1] / interval) * interval)\n            ];\n\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @override\n         */\n        niceExtent: function (opt) {\n            intervalScaleProto.niceExtent.call(this, opt);\n\n            var originalScale = this._originalScale;\n            originalScale.__fixMin = opt.fixMin;\n            originalScale.__fixMax = opt.fixMax;\n        }\n\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        LogScale.prototype[methodName] = function (val) {\n            val = mathLog(val) / mathLog(this.base);\n            return scaleProto[methodName].call(this, val);\n        };\n    });\n\n    LogScale.create = function () {\n        return new LogScale();\n    };\n\n    function fixRoundingError(val, originalVal) {\n        return roundingErrorFix(val, getPrecisionSafe(originalVal));\n    }\n\n    module.exports = LogScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Log.js\n// module id = 754\n// module chunks = 0 1 2","/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n\n// FIXME only one data\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Scale = require('./Scale');\n\n    var scaleProto = Scale.prototype;\n\n    var OrdinalScale = Scale.extend({\n\n        type: 'ordinal',\n\n        init: function (data, extent) {\n            this._data = data;\n            this._extent = extent || [0, data.length - 1];\n        },\n\n        parse: function (val) {\n            return typeof val === 'string'\n                ? zrUtil.indexOf(this._data, val)\n                // val might be float.\n                : Math.round(val);\n        },\n\n        contain: function (rank) {\n            rank = this.parse(rank);\n            return scaleProto.contain.call(this, rank)\n                && this._data[rank] != null;\n        },\n\n        /**\n         * Normalize given rank or name to linear [0, 1]\n         * @param {number|string} [val]\n         * @return {number}\n         */\n        normalize: function (val) {\n            return scaleProto.normalize.call(this, this.parse(val));\n        },\n\n        scale: function (val) {\n            return Math.round(scaleProto.scale.call(this, val));\n        },\n\n        /**\n         * @return {Array}\n         */\n        getTicks: function () {\n            var ticks = [];\n            var extent = this._extent;\n            var rank = extent[0];\n\n            while (rank <= extent[1]) {\n                ticks.push(rank);\n                rank++;\n            }\n\n            return ticks;\n        },\n\n        /**\n         * Get item on rank n\n         * @param {number} n\n         * @return {string}\n         */\n        getLabel: function (n) {\n            return this._data[n];\n        },\n\n        /**\n         * @return {number}\n         */\n        count: function () {\n            return this._extent[1] - this._extent[0] + 1;\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, false));\n        },\n\n        niceTicks: zrUtil.noop,\n        niceExtent: zrUtil.noop\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    OrdinalScale.create = function () {\n        return new OrdinalScale();\n    };\n\n    module.exports = OrdinalScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Ordinal.js\n// module id = 755\n// module chunks = 0 1 2","/**\n * Interval scale\n * @module echarts/coord/scale/Time\n */\n\n\n\n    // [About UTC and local time zone]:\n    // In most cases, `number.parseDate` will treat input data string as local time\n    // (except time zone is specified in time string). And `format.formateTime` returns\n    // local time by default. option.useUTC is false by default. This design have\n    // concidered these common case:\n    // (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n    // in local time by default.\n    // (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n    // as its original time, without any time difference.\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('../util/number');\n    var formatUtil = require('../util/format');\n    var scaleHelper = require('./helper');\n\n    var IntervalScale = require('./Interval');\n\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var mathCeil = Math.ceil;\n    var mathFloor = Math.floor;\n    var ONE_SECOND = 1000;\n    var ONE_MINUTE = ONE_SECOND * 60;\n    var ONE_HOUR = ONE_MINUTE * 60;\n    var ONE_DAY = ONE_HOUR * 24;\n\n    // FIXME 公用？\n    var bisect = function (a, x, lo, hi) {\n        while (lo < hi) {\n            var mid = lo + hi >>> 1;\n            if (a[mid][2] < x) {\n                lo = mid + 1;\n            }\n            else {\n                hi  = mid;\n            }\n        }\n        return lo;\n    };\n\n    /**\n     * @alias module:echarts/coord/scale/Time\n     * @constructor\n     */\n    var TimeScale = IntervalScale.extend({\n        type: 'time',\n\n        /**\n         * @override\n         */\n        getLabel: function (val) {\n            var stepLvl = this._stepLvl;\n\n            var date = new Date(val);\n\n            return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n        },\n\n        /**\n         * @override\n         */\n        niceExtent: function (opt) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                // Expand extent\n                extent[0] -= ONE_DAY;\n                extent[1] += ONE_DAY;\n            }\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (extent[1] === -Infinity && extent[0] === Infinity) {\n                var d = new Date();\n                extent[1] = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                extent[0] = extent[1] - ONE_DAY;\n            }\n\n            this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!opt.fixMin) {\n                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!opt.fixMax) {\n                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n            }\n        },\n\n        /**\n         * @override\n         */\n        niceTicks: function (approxTickNum, minInterval, maxInterval) {\n            var timezoneOffset = this.getSetting('useUTC')\n                ? 0 : numberUtil.getTimezoneOffset() * 60 * 1000;\n            approxTickNum = approxTickNum || 10;\n\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            var approxInterval = span / approxTickNum;\n\n            if (minInterval != null && approxInterval < minInterval) {\n                approxInterval = minInterval;\n            }\n            if (maxInterval != null && approxInterval > maxInterval) {\n                approxInterval = maxInterval;\n            }\n\n            var scaleLevelsLen = scaleLevels.length;\n            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n\n            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n            var interval = level[2];\n            // Same with interval scale if span is much larger than 1 year\n            if (level[0] === 'year') {\n                var yearSpan = span / interval;\n\n                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n                // var niceYearSpan = numberUtil.nice(yearSpan, false);\n                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n\n                interval *= yearStep;\n            }\n\n            var niceExtent = [\n                Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset),\n                Math.round(mathFloor((extent[1] - timezoneOffset)/ interval) * interval + timezoneOffset)\n            ];\n\n            scaleHelper.fixExtent(niceExtent, extent);\n\n            this._stepLvl = level;\n            // Interval will be used in getTicks\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        parse: function (val) {\n            // val might be float.\n            return +numberUtil.parseDate(val);\n        }\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        TimeScale.prototype[methodName] = function (val) {\n            return intervalScaleProto[methodName].call(this, this.parse(val));\n        };\n    });\n\n    // Steps from d3\n    var scaleLevels = [\n        // Format       step    interval\n        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\n        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\n        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\n        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\n        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\n        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\n        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\n        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\n        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\n        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\n        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\n        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\n        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\n        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\n        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\n        ['week',        7,      ONE_DAY * 7],        // 7d\n        ['month',       1,      ONE_DAY * 31],       // 1M\n        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\n        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\n        ['year',        1,      ONE_DAY * 380]       // 1Y\n    ];\n\n    /**\n     * @param {module:echarts/model/Model}\n     * @return {module:echarts/scale/Time}\n     */\n    TimeScale.create = function (model) {\n        return new TimeScale({useUTC: model.ecModel.get('useUTC')});\n    };\n\n    module.exports = TimeScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Time.js\n// module id = 756\n// module chunks = 0 1 2","\n\n    var Group = require('zrender/lib/container/Group');\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n\n    var Component = function () {\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewComponent');\n    };\n\n    Component.prototype = {\n\n        constructor: Component,\n\n        init: function (ecModel, api) {},\n\n        render: function (componentModel, ecModel, api, payload) {},\n\n        dispose: function () {}\n\n    };\n\n    var componentProto = Component.prototype;\n    componentProto.updateView\n        = componentProto.updateLayout\n        = componentProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            // Do nothing;\n        };\n    // Enable Component.extend.\n    clazzUtil.enableClassExtend(Component);\n\n    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\n\n    module.exports = Component;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/view/Component.js\n// module id = 757\n// module chunks = 0 1 2","\n    var Gradient = require('zrender/lib/graphic/Gradient');\n    module.exports = function (ecModel) {\n        function encodeColor(seriesModel) {\n            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n            var data = seriesModel.getData();\n            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\n\n            // FIXME Set color function or use the platte color\n            data.setVisual('color', color);\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof color === 'function' && !(color instanceof Gradient)) {\n                    data.each(function (idx) {\n                        data.setItemVisual(\n                            idx, 'color', color(seriesModel.getDataParams(idx))\n                        );\n                    });\n                }\n\n                // itemStyle in each data item\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var color = itemModel.get(colorAccessPath, true);\n                    if (color != null) {\n                        data.setItemVisual(idx, 'color', color);\n                    }\n                });\n            }\n        }\n        ecModel.eachRawSeries(encodeColor);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/visual/seriesColor.js\n// module id = 758\n// module chunks = 0 1 2","'use strict';\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\n\n\n    var util = require('./core/util');\n    var Draggable = require('./mixin/Draggable');\n\n    var Eventful = require('./mixin/Eventful');\n\n    var SILENT = 'silent';\n\n    function makeEventPacket(eveType, targetInfo, event) {\n        return {\n            type: eveType,\n            event: event,\n            // target can only be an element that is not silent.\n            target: targetInfo.target,\n            // topTarget can be a silent element.\n            topTarget: targetInfo.topTarget,\n            cancelBubble: false,\n            offsetX: event.zrX,\n            offsetY: event.zrY,\n            gestureEvent: event.gestureEvent,\n            pinchX: event.pinchX,\n            pinchY: event.pinchY,\n            pinchScale: event.pinchScale,\n            wheelDelta: event.zrDelta,\n            zrByTouch: event.zrByTouch\n        };\n    }\n\n    function EmptyProxy () {}\n    EmptyProxy.prototype.dispose = function () {};\n\n    var handlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n    /**\n     * @alias module:zrender/Handler\n     * @constructor\n     * @extends module:zrender/mixin/Eventful\n     * @param {module:zrender/Storage} storage Storage instance.\n     * @param {module:zrender/Painter} painter Painter instance.\n     * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n     * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n     */\n    var Handler = function(storage, painter, proxy, painterRoot) {\n        Eventful.call(this);\n\n        this.storage = storage;\n\n        this.painter = painter;\n\n        this.painterRoot = painterRoot;\n\n        proxy = proxy || new EmptyProxy();\n\n        /**\n         * Proxy of event. can be Dom, WebGLSurface, etc.\n         */\n        this.proxy = proxy;\n\n        // Attach handler\n        proxy.handler = this;\n\n        /**\n         * {target, topTarget, x, y}\n         * @private\n         * @type {Object}\n         */\n        this._hovered = {};\n\n        /**\n         * @private\n         * @type {Date}\n         */\n        this._lastTouchMoment;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastX;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastY;\n\n\n        Draggable.call(this);\n\n        util.each(handlerNames, function (name) {\n            proxy.on && proxy.on(name, this[name], this);\n        }, this);\n    };\n\n    Handler.prototype = {\n\n        constructor: Handler,\n\n        mousemove: function (event) {\n            var x = event.zrX;\n            var y = event.zrY;\n\n            var lastHovered = this._hovered;\n            var lastHoveredTarget = lastHovered.target;\n\n            // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n            // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n            // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n            // See #6198.\n            if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n                lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n                lastHoveredTarget = lastHovered.target;\n            }\n\n            var hovered = this._hovered = this.findHover(x, y);\n            var hoveredTarget = hovered.target;\n\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default');\n\n            // Mouse out on previous hovered element\n            if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(lastHovered, 'mouseout', event);\n            }\n\n            // Mouse moving on one element\n            this.dispatchToElement(hovered, 'mousemove', event);\n\n            // Mouse over on a new element\n            if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(hovered, 'mouseover', event);\n            }\n        },\n\n        mouseout: function (event) {\n            this.dispatchToElement(this._hovered, 'mouseout', event);\n\n            // There might be some doms created by upper layer application\n            // at the same level of painter.getViewportRoot() (e.g., tooltip\n            // dom created by echarts), where 'globalout' event should not\n            // be triggered when mouse enters these doms. (But 'mouseout'\n            // should be triggered at the original hovered element as usual).\n            var element = event.toElement || event.relatedTarget;\n            var innerDom;\n            do {\n                element = element && element.parentNode;\n            }\n            while (element && element.nodeType != 9 && !(\n                innerDom = element === this.painterRoot\n            ));\n\n            !innerDom && this.trigger('globalout', {event: event});\n        },\n\n        /**\n         * Resize\n         */\n        resize: function (event) {\n            this._hovered = {};\n        },\n\n        /**\n         * Dispatch event\n         * @param {string} eventName\n         * @param {event=} eventArgs\n         */\n        dispatch: function (eventName, eventArgs) {\n            var handler = this[eventName];\n            handler && handler.call(this, eventArgs);\n        },\n\n        /**\n         * Dispose\n         */\n        dispose: function () {\n\n            this.proxy.dispose();\n\n            this.storage =\n            this.proxy =\n            this.painter = null;\n        },\n\n        /**\n         * 设置默认的cursor style\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(cursorStyle);\n        },\n\n        /**\n         * 事件分发代理\n         *\n         * @private\n         * @param {Object} targetInfo {target, topTarget} 目标图形元素\n         * @param {string} eventName 事件名称\n         * @param {Object} event 事件对象\n         */\n        dispatchToElement: function (targetInfo, eventName, event) {\n            targetInfo = targetInfo || {};\n            var el = targetInfo.target;\n            if (el && el.silent) {\n                return;\n            }\n            var eventHandler = 'on' + eventName;\n            var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n            while (el) {\n                el[eventHandler]\n                    && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n\n                el.trigger(eventName, eventPacket);\n\n                el = el.parent;\n\n                if (eventPacket.cancelBubble) {\n                    break;\n                }\n            }\n\n            if (!eventPacket.cancelBubble) {\n                // 冒泡到顶级 zrender 对象\n                this.trigger(eventName, eventPacket);\n                // 分发事件到用户自定义层\n                // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n                this.painter && this.painter.eachOtherLayer(function (layer) {\n                    if (typeof(layer[eventHandler]) == 'function') {\n                        layer[eventHandler].call(layer, eventPacket);\n                    }\n                    if (layer.trigger) {\n                        layer.trigger(eventName, eventPacket);\n                    }\n                });\n            }\n        },\n\n        /**\n         * @private\n         * @param {number} x\n         * @param {number} y\n         * @param {module:zrender/graphic/Displayable} exclude\n         * @return {model:zrender/Element}\n         * @method\n         */\n        findHover: function(x, y, exclude) {\n            var list = this.storage.getDisplayList();\n            var out = {x: x, y: y};\n\n            for (var i = list.length - 1; i >= 0 ; i--) {\n                var hoverCheckResult;\n                if (list[i] !== exclude\n                    // getDisplayList may include ignored item in VML mode\n                    && !list[i].ignore\n                    && (hoverCheckResult = isHover(list[i], x, y))\n                ) {\n                    !out.topTarget && (out.topTarget = list[i]);\n                    if (hoverCheckResult !== SILENT) {\n                        out.target = list[i];\n                        break;\n                    }\n                }\n            }\n\n            return out;\n        }\n    };\n\n    // Common handlers\n    util.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        Handler.prototype[name] = function (event) {\n            // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n            var hovered = this.findHover(event.zrX, event.zrY);\n            var hoveredTarget = hovered.target;\n\n            if (name === 'mousedown') {\n                this._downel = hoveredTarget;\n                // In case click triggered before mouseup\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'mosueup') {\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'click') {\n                if (this._downel !== this._upel) {\n                    return;\n                }\n            }\n\n            this.dispatchToElement(hovered, name, event);\n        };\n    });\n\n    function isHover(displayable, x, y) {\n        if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n            var el = displayable;\n            var isSilent;\n            while (el) {\n                // If clipped by ancestor.\n                // FIXME: If clipPath has neither stroke nor fill,\n                // el.clipPath.contain(x, y) will always return false.\n                if (el.clipPath && !el.clipPath.contain(x, y))  {\n                    return false;\n                }\n                if (el.silent) {\n                    isSilent = true;\n                }\n                el = el.parent;\n            }\n            return isSilent ? SILENT : true;\n        }\n\n        return false;\n    }\n\n    util.mixin(Handler, Eventful);\n    util.mixin(Handler, Draggable);\n\n    module.exports = Handler;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Handler.js\n// module id = 766\n// module chunks = 0 1 2","/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var util = require('./core/util');\n    var config = require('./config');\n    var Style = require('./graphic/Style');\n    var Pattern = require('./graphic/Pattern');\n\n    function returnFalse() {\n        return false;\n    }\n\n    /**\n     * 创建dom\n     *\n     * @inner\n     * @param {string} id dom id 待用\n     * @param {string} type dom type，such as canvas, div etc.\n     * @param {Painter} painter painter instance\n     * @param {number} number\n     */\n    function createDom(id, type, painter, dpr) {\n        var newDom = document.createElement(type);\n        var width = painter.getWidth();\n        var height = painter.getHeight();\n\n        var newDomStyle = newDom.style;\n        // 没append呢，请原谅我这样写，清晰~\n        newDomStyle.position = 'absolute';\n        newDomStyle.left = 0;\n        newDomStyle.top = 0;\n        newDomStyle.width = width + 'px';\n        newDomStyle.height = height + 'px';\n        newDom.width = width * dpr;\n        newDom.height = height * dpr;\n\n        // id不作为索引用，避免可能造成的重名，定义为私有属性\n        newDom.setAttribute('data-zr-dom-id', id);\n        return newDom;\n    }\n\n    /**\n     * @alias module:zrender/Layer\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @param {string} id\n     * @param {module:zrender/Painter} painter\n     * @param {number} [dpr]\n     */\n    var Layer = function(id, painter, dpr) {\n        var dom;\n        dpr = dpr || config.devicePixelRatio;\n        if (typeof id === 'string') {\n            dom = createDom(id, 'canvas', painter, dpr);\n        }\n        // Not using isDom because in node it will return false\n        else if (util.isObject(id)) {\n            dom = id;\n            id = dom.id;\n        }\n        this.id = id;\n        this.dom = dom;\n\n        var domStyle = dom.style;\n        if (domStyle) { // Not in node\n            dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n            domStyle['-webkit-user-select'] = 'none';\n            domStyle['user-select'] = 'none';\n            domStyle['-webkit-touch-callout'] = 'none';\n            domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n            domStyle['padding'] = 0;\n            domStyle['margin'] = 0;\n            domStyle['border-width'] = 0;\n        }\n\n        this.domBack = null;\n        this.ctxBack = null;\n\n        this.painter = painter;\n\n        this.config = null;\n\n        // Configs\n        /**\n         * 每次清空画布的颜色\n         * @type {string}\n         * @default 0\n         */\n        this.clearColor = 0;\n        /**\n         * 是否开启动态模糊\n         * @type {boolean}\n         * @default false\n         */\n        this.motionBlur = false;\n        /**\n         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         * @type {number}\n         * @default 0.7\n         */\n        this.lastFrameAlpha = 0.7;\n\n        /**\n         * Layer dpr\n         * @type {number}\n         */\n        this.dpr = dpr;\n    };\n\n    Layer.prototype = {\n\n        constructor: Layer,\n\n        elCount: 0,\n\n        __dirty: true,\n\n        initContext: function () {\n            this.ctx = this.dom.getContext('2d');\n            this.ctx.__currentValues = {};\n            this.ctx.dpr = this.dpr;\n        },\n\n        createBackBuffer: function () {\n            var dpr = this.dpr;\n\n            this.domBack = createDom('back-' + this.id, 'canvas', this.painter, dpr);\n            this.ctxBack = this.domBack.getContext('2d');\n            this.ctxBack.__currentValues = {};\n\n            if (dpr != 1) {\n                this.ctxBack.scale(dpr, dpr);\n            }\n        },\n\n        /**\n         * @param  {number} width\n         * @param  {number} height\n         */\n        resize: function (width, height) {\n            var dpr = this.dpr;\n\n            var dom = this.dom;\n            var domStyle = dom.style;\n            var domBack = this.domBack;\n\n            domStyle.width = width + 'px';\n            domStyle.height = height + 'px';\n\n            dom.width = width * dpr;\n            dom.height = height * dpr;\n\n            if (domBack) {\n                domBack.width = width * dpr;\n                domBack.height = height * dpr;\n\n                if (dpr != 1) {\n                    this.ctxBack.scale(dpr, dpr);\n                }\n            }\n        },\n\n        /**\n         * 清空该层画布\n         * @param {boolean} clearAll Clear all with out motion blur\n         */\n        clear: function (clearAll) {\n            var dom = this.dom;\n            var ctx = this.ctx;\n            var width = dom.width;\n            var height = dom.height;\n\n            var clearColor = this.clearColor;\n            var haveMotionBLur = this.motionBlur && !clearAll;\n            var lastFrameAlpha = this.lastFrameAlpha;\n\n            var dpr = this.dpr;\n\n            if (haveMotionBLur) {\n                if (!this.domBack) {\n                    this.createBackBuffer();\n                }\n\n                this.ctxBack.globalCompositeOperation = 'copy';\n                this.ctxBack.drawImage(\n                    dom, 0, 0,\n                    width / dpr,\n                    height / dpr\n                );\n            }\n\n            ctx.clearRect(0, 0, width, height);\n            if (clearColor) {\n                var clearColorGradientOrPattern;\n                // Gradient\n                if (clearColor.colorStops) {\n                    // Cache canvas gradient\n                    clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n                        x: 0,\n                        y: 0,\n                        width: width,\n                        height: height\n                    });\n\n                    clearColor.__canvasGradient = clearColorGradientOrPattern;\n                }\n                // Pattern\n                else if (clearColor.image) {\n                    clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n                }\n                ctx.save();\n                ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n                ctx.fillRect(0, 0, width, height);\n                ctx.restore();\n            }\n\n            if (haveMotionBLur) {\n                var domBack = this.domBack;\n                ctx.save();\n                ctx.globalAlpha = lastFrameAlpha;\n                ctx.drawImage(domBack, 0, 0, width, height);\n                ctx.restore();\n            }\n        }\n    };\n\n    module.exports = Layer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Layer.js\n// module id = 767\n// module chunks = 0 1 2","'use strict';\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n \n\n    var config = require('./config');\n    var util = require('./core/util');\n    var log = require('./core/log');\n    var BoundingRect = require('./core/BoundingRect');\n    var timsort = require('./core/timsort');\n\n    var Layer = require('./Layer');\n\n    var requestAnimationFrame = require('./animation/requestAnimationFrame');\n\n    // PENDIGN\n    // Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n    //\n    // Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\n    var MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\n    function parseInt10(val) {\n        return parseInt(val, 10);\n    }\n\n    function isLayerValid(layer) {\n        if (!layer) {\n            return false;\n        }\n\n        if (layer.__builtin__) {\n            return true;\n        }\n\n        if (typeof(layer.resize) !== 'function'\n            || typeof(layer.refresh) !== 'function'\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function preProcessLayer(layer) {\n        layer.__unusedCount++;\n    }\n\n    function postProcessLayer(layer) {\n        if (layer.__unusedCount == 1) {\n            layer.clear();\n        }\n    }\n\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var viewRect = new BoundingRect(0, 0, 0, 0);\n    function isDisplayableCulled(el, width, height) {\n        tmpRect.copy(el.getBoundingRect());\n        if (el.transform) {\n            tmpRect.applyTransform(el.transform);\n        }\n        viewRect.width = width;\n        viewRect.height = height;\n        return !tmpRect.intersect(viewRect);\n    }\n\n    function isClipPathChanged(clipPaths, prevClipPaths) {\n        if (clipPaths == prevClipPaths) { // Can both be null or undefined\n            return false;\n        }\n\n        if (!clipPaths || !prevClipPaths || (clipPaths.length !== prevClipPaths.length)) {\n            return true;\n        }\n        for (var i = 0; i < clipPaths.length; i++) {\n            if (clipPaths[i] !== prevClipPaths[i]) {\n                return true;\n            }\n        }\n    }\n\n    function doClip(clipPaths, ctx) {\n        for (var i = 0; i < clipPaths.length; i++) {\n            var clipPath = clipPaths[i];\n\n            clipPath.setTransform(ctx);\n            ctx.beginPath();\n            clipPath.buildPath(ctx, clipPath.shape);\n            ctx.clip();\n            // Transform back\n            clipPath.restoreTransform(ctx);\n        }\n    }\n\n    function createRoot(width, height) {\n        var domRoot = document.createElement('div');\n\n        // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n        domRoot.style.cssText = [\n            'position:relative',\n            'overflow:hidden',\n            'width:' + width + 'px',\n            'height:' + height + 'px',\n            'padding:0',\n            'margin:0',\n            'border-width:0'\n        ].join(';') + ';';\n\n        return domRoot;\n    }\n\n    /**\n     * @alias module:zrender/Painter\n     * @constructor\n     * @param {HTMLElement} root 绘图容器\n     * @param {module:zrender/Storage} storage\n     * @param {Object} opts\n     */\n    var Painter = function (root, storage, opts) {\n        // In node environment using node-canvas\n        var singleCanvas = !root.nodeName // In node ?\n            || root.nodeName.toUpperCase() === 'CANVAS';\n\n        this._opts = opts = util.extend({}, opts || {});\n\n        /**\n         * @type {number}\n         */\n        this.dpr = opts.devicePixelRatio || config.devicePixelRatio;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._singleCanvas = singleCanvas;\n        /**\n         * 绘图容器\n         * @type {HTMLElement}\n         */\n        this.root = root;\n\n        var rootStyle = root.style;\n\n        if (rootStyle) {\n            rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n            rootStyle['-webkit-user-select'] =\n            rootStyle['user-select'] =\n            rootStyle['-webkit-touch-callout'] = 'none';\n\n            root.innerHTML = '';\n        }\n\n        /**\n         * @type {module:zrender/Storage}\n         */\n        this.storage = storage;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        var zlevelList = this._zlevelList = [];\n\n        /**\n         * @type {Object.<string, module:zrender/Layer>}\n         * @private\n         */\n        var layers = this._layers = {};\n\n        /**\n         * @type {Object.<string, Object>}\n         * @type {private}\n         */\n        this._layerConfig = {};\n\n        if (!singleCanvas) {\n            this._width = this._getSize(0);\n            this._height = this._getSize(1);\n\n            var domRoot = this._domRoot = createRoot(\n                this._width, this._height\n            );\n            root.appendChild(domRoot);\n        }\n        else {\n            if (opts.width != null) {\n                root.width = opts.width;\n            }\n            if (opts.height != null) {\n                root.height = opts.height;\n            }\n            // Use canvas width and height directly\n            var width = root.width;\n            var height = root.height;\n            this._width = width;\n            this._height = height;\n\n            // Create layer if only one given canvas\n            // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n            var mainLayer = new Layer(root, this, 1);\n            mainLayer.initContext();\n            // FIXME Use canvas width and height\n            // mainLayer.resize(width, height);\n            layers[0] = mainLayer;\n            zlevelList.push(0);\n\n            this._domRoot = root;\n        }\n\n        // Layers for progressive rendering\n        this._progressiveLayers = [];\n\n        /**\n         * @type {module:zrender/Layer}\n         * @private\n         */\n        this._hoverlayer;\n\n        this._hoverElements = [];\n    };\n\n    Painter.prototype = {\n\n        constructor: Painter,\n\n        /**\n         * If painter use a single canvas\n         * @return {boolean}\n         */\n        isSingleCanvas: function () {\n            return this._singleCanvas;\n        },\n        /**\n         * @return {HTMLDivElement}\n         */\n        getViewportRoot: function () {\n            return this._domRoot;\n        },\n\n        getViewportRootOffset: function () {\n            var viewportRoot = this.getViewportRoot();\n            if (viewportRoot) {\n                return {\n                    offsetLeft: viewportRoot.offsetLeft || 0,\n                    offsetTop: viewportRoot.offsetTop || 0\n                };\n            }\n        },\n\n        /**\n         * 刷新\n         * @param {boolean} [paintAll=false] 强制绘制所有displayable\n         */\n        refresh: function (paintAll) {\n\n            var list = this.storage.getDisplayList(true);\n\n            var zlevelList = this._zlevelList;\n\n            this._paintList(list, paintAll);\n\n            // Paint custum layers\n            for (var i = 0; i < zlevelList.length; i++) {\n                var z = zlevelList[i];\n                var layer = this._layers[z];\n                if (!layer.__builtin__ && layer.refresh) {\n                    layer.refresh();\n                }\n            }\n\n            this.refreshHover();\n\n            if (this._progressiveLayers.length) {\n                this._startProgessive();\n            }\n\n            return this;\n        },\n\n        addHover: function (el, hoverStyle) {\n            if (el.__hoverMir) {\n                return;\n            }\n            var elMirror = new el.constructor({\n                style: el.style,\n                shape: el.shape\n            });\n            elMirror.__from = el;\n            el.__hoverMir = elMirror;\n            elMirror.setStyle(hoverStyle);\n            this._hoverElements.push(elMirror);\n        },\n\n        removeHover: function (el) {\n            var elMirror = el.__hoverMir;\n            var hoverElements = this._hoverElements;\n            var idx = util.indexOf(hoverElements, elMirror);\n            if (idx >= 0) {\n                hoverElements.splice(idx, 1);\n            }\n            el.__hoverMir = null;\n        },\n\n        clearHover: function (el) {\n            var hoverElements = this._hoverElements;\n            for (var i = 0; i < hoverElements.length; i++) {\n                var from = hoverElements[i].__from;\n                if (from) {\n                    from.__hoverMir = null;\n                }\n            }\n            hoverElements.length = 0;\n        },\n\n        refreshHover: function () {\n            var hoverElements = this._hoverElements;\n            var len = hoverElements.length;\n            var hoverLayer = this._hoverlayer;\n            hoverLayer && hoverLayer.clear();\n\n            if (!len) {\n                return;\n            }\n            timsort(hoverElements, this.storage.displayableSortFunc);\n\n            // Use a extream large zlevel\n            // FIXME?\n            if (!hoverLayer) {\n                hoverLayer = this._hoverlayer = this.getLayer(1e5);\n            }\n\n            var scope = {};\n            hoverLayer.ctx.save();\n            for (var i = 0; i < len;) {\n                var el = hoverElements[i];\n                var originalEl = el.__from;\n                // Original el is removed\n                // PENDING\n                if (!(originalEl && originalEl.__zr)) {\n                    hoverElements.splice(i, 1);\n                    originalEl.__hoverMir = null;\n                    len--;\n                    continue;\n                }\n                i++;\n\n                // Use transform\n                // FIXME style and shape ?\n                if (!originalEl.invisible) {\n                    el.transform = originalEl.transform;\n                    el.invTransform = originalEl.invTransform;\n                    el.__clipPaths = originalEl.__clipPaths;\n                    // el.\n                    this._doPaintEl(el, hoverLayer, true, scope);\n                }\n            }\n            hoverLayer.ctx.restore();\n        },\n\n        _startProgessive: function () {\n            var self = this;\n\n            if (!self._furtherProgressive) {\n                return;\n            }\n\n            // Use a token to stop progress steps triggered by\n            // previous zr.refresh calling.\n            var token = self._progressiveToken = +new Date();\n\n            self._progress++;\n            requestAnimationFrame(step);\n\n            function step() {\n                // In case refreshed or disposed\n                if (token === self._progressiveToken && self.storage) {\n\n                    self._doPaintList(self.storage.getDisplayList());\n\n                    if (self._furtherProgressive) {\n                        self._progress++;\n                        requestAnimationFrame(step);\n                    }\n                    else {\n                        self._progressiveToken = -1;\n                    }\n                }\n            }\n        },\n\n        _clearProgressive: function () {\n            this._progressiveToken = -1;\n            this._progress = 0;\n            util.each(this._progressiveLayers, function (layer) {\n                layer.__dirty && layer.clear();\n            });\n        },\n\n        _paintList: function (list, paintAll) {\n\n            if (paintAll == null) {\n                paintAll = false;\n            }\n\n            this._updateLayerStatus(list);\n\n            this._clearProgressive();\n\n            this.eachBuiltinLayer(preProcessLayer);\n\n            this._doPaintList(list, paintAll);\n\n            this.eachBuiltinLayer(postProcessLayer);\n        },\n\n        _doPaintList: function (list, paintAll) {\n            var currentLayer;\n            var currentZLevel;\n            var ctx;\n\n            // var invTransform = [];\n            var scope;\n\n            var progressiveLayerIdx = 0;\n            var currentProgressiveLayer;\n\n            var width = this._width;\n            var height = this._height;\n            var layerProgress;\n            var frame = this._progress;\n            function flushProgressiveLayer(layer) {\n                var dpr = ctx.dpr || 1;\n                ctx.save();\n                ctx.globalAlpha = 1;\n                ctx.shadowBlur = 0;\n                // Avoid layer don't clear in next progressive frame\n                currentLayer.__dirty = true;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n                ctx.restore();\n            }\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n\n                var elFrame = el.__frame;\n\n                // Flush at current context\n                // PENDING\n                if (elFrame < 0 && currentProgressiveLayer) {\n                    flushProgressiveLayer(currentProgressiveLayer);\n                    currentProgressiveLayer = null;\n                }\n\n                // Change draw layer\n                if (currentZLevel !== elZLevel) {\n                    if (ctx) {\n                        ctx.restore();\n                    }\n\n                    // Reset scope\n                    scope = {};\n\n                    // Only 0 zlevel if only has one canvas\n                    currentZLevel = elZLevel;\n                    currentLayer = this.getLayer(currentZLevel);\n\n                    if (!currentLayer.__builtin__) {\n                        log(\n                            'ZLevel ' + currentZLevel\n                            + ' has been used by unkown layer ' + currentLayer.id\n                        );\n                    }\n\n                    ctx = currentLayer.ctx;\n                    ctx.save();\n\n                    // Reset the count\n                    currentLayer.__unusedCount = 0;\n\n                    if (currentLayer.__dirty || paintAll) {\n                        currentLayer.clear();\n                    }\n                }\n\n                if (!(currentLayer.__dirty || paintAll)) {\n                    continue;\n                }\n\n                if (elFrame >= 0) {\n                    // Progressive layer changed\n                    if (!currentProgressiveLayer) {\n                        currentProgressiveLayer = this._progressiveLayers[\n                            Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)\n                        ];\n\n                        currentProgressiveLayer.ctx.save();\n                        currentProgressiveLayer.renderScope = {};\n\n                        if (currentProgressiveLayer\n                            && (currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress)\n                        ) {\n                            // flushProgressiveLayer(currentProgressiveLayer);\n                            // Quick jump all progressive elements\n                            // All progressive element are not dirty, jump over and flush directly\n                            i = currentProgressiveLayer.__nextIdxNotProg - 1;\n                            // currentProgressiveLayer = null;\n                            continue;\n                        }\n\n                        layerProgress = currentProgressiveLayer.__progress;\n\n                        if (!currentProgressiveLayer.__dirty) {\n                            // Keep rendering\n                            frame = layerProgress;\n                        }\n\n                        currentProgressiveLayer.__progress = frame + 1;\n                    }\n\n                    if (elFrame === frame) {\n                        this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n                    }\n                }\n                else {\n                    this._doPaintEl(el, currentLayer, paintAll, scope);\n                }\n\n                el.__dirty = false;\n            }\n\n            if (currentProgressiveLayer) {\n                flushProgressiveLayer(currentProgressiveLayer);\n            }\n\n            // Restore the lastLayer ctx\n            ctx && ctx.restore();\n            // If still has clipping state\n            // if (scope.prevElClipPaths) {\n            //     ctx.restore();\n            // }\n\n            this._furtherProgressive = false;\n            util.each(this._progressiveLayers, function (layer) {\n                if (layer.__maxProgress >= layer.__progress) {\n                    this._furtherProgressive = true;\n                }\n            }, this);\n        },\n\n        _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n            var ctx = currentLayer.ctx;\n            var m = el.transform;\n            if (\n                (currentLayer.__dirty || forcePaint)\n                // Ignore invisible element\n                && !el.invisible\n                // Ignore transparent element\n                && el.style.opacity !== 0\n                // Ignore scale 0 element, in some environment like node-canvas\n                // Draw a scale 0 element can cause all following draw wrong\n                // And setTransform with scale 0 will cause set back transform failed.\n                && !(m && !m[0] && !m[3])\n                // Ignore culled element\n                && !(el.culling && isDisplayableCulled(el, this._width, this._height))\n            ) {\n\n                var clipPaths = el.__clipPaths;\n\n                // Optimize when clipping on group with several elements\n                if (scope.prevClipLayer !== currentLayer\n                    || isClipPathChanged(clipPaths, scope.prevElClipPaths)\n                ) {\n                    // If has previous clipping state, restore from it\n                    if (scope.prevElClipPaths) {\n                        scope.prevClipLayer.ctx.restore();\n                        scope.prevClipLayer = scope.prevElClipPaths = null;\n\n                        // Reset prevEl since context has been restored\n                        scope.prevEl = null;\n                    }\n                    // New clipping state\n                    if (clipPaths) {\n                        ctx.save();\n                        doClip(clipPaths, ctx);\n                        scope.prevClipLayer = currentLayer;\n                        scope.prevElClipPaths = clipPaths;\n                    }\n                }\n                el.beforeBrush && el.beforeBrush(ctx);\n\n                el.brush(ctx, scope.prevEl || null);\n                scope.prevEl = el;\n\n                el.afterBrush && el.afterBrush(ctx);\n            }\n        },\n\n        /**\n         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n         * @param {number} zlevel\n         * @return {module:zrender/Layer}\n         */\n        getLayer: function (zlevel) {\n            if (this._singleCanvas) {\n                return this._layers[0];\n            }\n\n            var layer = this._layers[zlevel];\n            if (!layer) {\n                // Create a new layer\n                layer = new Layer('zr_' + zlevel, this, this.dpr);\n                layer.__builtin__ = true;\n\n                if (this._layerConfig[zlevel]) {\n                    util.merge(layer, this._layerConfig[zlevel], true);\n                }\n\n                this.insertLayer(zlevel, layer);\n\n                // Context is created after dom inserted to document\n                // Or excanvas will get 0px clientWidth and clientHeight\n                layer.initContext();\n            }\n\n            return layer;\n        },\n\n        insertLayer: function (zlevel, layer) {\n\n            var layersMap = this._layers;\n            var zlevelList = this._zlevelList;\n            var len = zlevelList.length;\n            var prevLayer = null;\n            var i = -1;\n            var domRoot = this._domRoot;\n\n            if (layersMap[zlevel]) {\n                log('ZLevel ' + zlevel + ' has been used already');\n                return;\n            }\n            // Check if is a valid layer\n            if (!isLayerValid(layer)) {\n                log('Layer of zlevel ' + zlevel + ' is not valid');\n                return;\n            }\n\n            if (len > 0 && zlevel > zlevelList[0]) {\n                for (i = 0; i < len - 1; i++) {\n                    if (\n                        zlevelList[i] < zlevel\n                        && zlevelList[i + 1] > zlevel\n                    ) {\n                        break;\n                    }\n                }\n                prevLayer = layersMap[zlevelList[i]];\n            }\n            zlevelList.splice(i + 1, 0, zlevel);\n\n            layersMap[zlevel] = layer;\n\n            // Vitual layer will not directly show on the screen.\n            // (It can be a WebGL layer and assigned to a ZImage element)\n            // But it still under management of zrender.\n            if (!layer.virtual) {\n                if (prevLayer) {\n                    var prevDom = prevLayer.dom;\n                    if (prevDom.nextSibling) {\n                        domRoot.insertBefore(\n                            layer.dom,\n                            prevDom.nextSibling\n                        );\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n                else {\n                    if (domRoot.firstChild) {\n                        domRoot.insertBefore(layer.dom, domRoot.firstChild);\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n            }\n        },\n\n        // Iterate each layer\n        eachLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                cb.call(context, this._layers[z], z);\n            }\n        },\n\n        // Iterate each buildin layer\n        eachBuiltinLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        // Iterate each other layer except buildin layer\n        eachOtherLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (!layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        /**\n         * 获取所有已创建的层\n         * @param {Array.<module:zrender/Layer>} [prevLayer]\n         */\n        getLayers: function () {\n            return this._layers;\n        },\n\n        _updateLayerStatus: function (list) {\n\n            var layers = this._layers;\n            var progressiveLayers = this._progressiveLayers;\n\n            var elCountsLastFrame = {};\n            var progressiveElCountsLastFrame = {};\n\n            this.eachBuiltinLayer(function (layer, z) {\n                elCountsLastFrame[z] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            util.each(progressiveLayers, function (layer, idx) {\n                progressiveElCountsLastFrame[idx] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            var progressiveLayerCount = 0;\n            var currentProgressiveLayer;\n            var lastProgressiveKey;\n            var frameCount = 0;\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var zlevel = this._singleCanvas ? 0 : el.zlevel;\n                var layer = layers[zlevel];\n                var elProgress = el.progressive;\n                if (layer) {\n                    layer.elCount++;\n                    layer.__dirty = layer.__dirty || el.__dirty;\n                }\n\n                /////// Update progressive\n                if (elProgress >= 0) {\n                    // Fix wrong progressive sequence problem.\n                    if (lastProgressiveKey !== elProgress) {\n                        lastProgressiveKey = elProgress;\n                        frameCount++;\n                    }\n                    var elFrame = el.__frame = frameCount - 1;\n                    if (!currentProgressiveLayer) {\n                        var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n                        currentProgressiveLayer = progressiveLayers[idx];\n                        if (!currentProgressiveLayer) {\n                            currentProgressiveLayer = progressiveLayers[idx] = new Layer(\n                                'progressive', this, this.dpr\n                            );\n                            currentProgressiveLayer.initContext();\n                        }\n                        currentProgressiveLayer.__maxProgress = 0;\n                    }\n                    currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n                    currentProgressiveLayer.elCount++;\n\n                    currentProgressiveLayer.__maxProgress = Math.max(\n                        currentProgressiveLayer.__maxProgress, elFrame\n                    );\n\n                    if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n                        // Should keep rendering this  layer because progressive rendering is not finished yet\n                        layer.__dirty = true;\n                    }\n                }\n                else {\n                    el.__frame = -1;\n\n                    if (currentProgressiveLayer) {\n                        currentProgressiveLayer.__nextIdxNotProg = i;\n                        progressiveLayerCount++;\n                        currentProgressiveLayer = null;\n                    }\n                }\n            }\n\n            if (currentProgressiveLayer) {\n                progressiveLayerCount++;\n                currentProgressiveLayer.__nextIdxNotProg = i;\n            }\n\n            // 层中的元素数量有发生变化\n            this.eachBuiltinLayer(function (layer, z) {\n                if (elCountsLastFrame[z] !== layer.elCount) {\n                    layer.__dirty = true;\n                }\n            });\n\n            progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n            util.each(progressiveLayers, function (layer, idx) {\n                if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n                    el.__dirty = true;\n                }\n                if (layer.__dirty) {\n                    layer.__progress = 0;\n                }\n            });\n        },\n\n        /**\n         * 清除hover层外所有内容\n         */\n        clear: function () {\n            this.eachBuiltinLayer(this._clearLayer);\n            return this;\n        },\n\n        _clearLayer: function (layer) {\n            layer.clear();\n        },\n\n        /**\n         * 修改指定zlevel的绘制参数\n         *\n         * @param {string} zlevel\n         * @param {Object} config 配置对象\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\n         * @param {number} [config.lastFrameAlpha=0.7]\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         */\n        configLayer: function (zlevel, config) {\n            if (config) {\n                var layerConfig = this._layerConfig;\n                if (!layerConfig[zlevel]) {\n                    layerConfig[zlevel] = config;\n                }\n                else {\n                    util.merge(layerConfig[zlevel], config, true);\n                }\n\n                var layer = this._layers[zlevel];\n\n                if (layer) {\n                    util.merge(layer, layerConfig[zlevel], true);\n                }\n            }\n        },\n\n        /**\n         * 删除指定层\n         * @param {number} zlevel 层所在的zlevel\n         */\n        delLayer: function (zlevel) {\n            var layers = this._layers;\n            var zlevelList = this._zlevelList;\n            var layer = layers[zlevel];\n            if (!layer) {\n                return;\n            }\n            layer.dom.parentNode.removeChild(layer.dom);\n            delete layers[zlevel];\n\n            zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n        },\n\n        /**\n         * 区域大小变化后重绘\n         */\n        resize: function (width, height) {\n            var domRoot = this._domRoot;\n            // FIXME Why ?\n            domRoot.style.display = 'none';\n\n            // Save input w/h\n            var opts = this._opts;\n            width != null && (opts.width = width);\n            height != null && (opts.height = height);\n\n            width = this._getSize(0);\n            height = this._getSize(1);\n\n            domRoot.style.display = '';\n\n            // 优化没有实际改变的resize\n            if (this._width != width || height != this._height) {\n                domRoot.style.width = width + 'px';\n                domRoot.style.height = height + 'px';\n\n                for (var id in this._layers) {\n                    if (this._layers.hasOwnProperty(id)) {\n                        this._layers[id].resize(width, height);\n                    }\n                }\n                util.each(this._progressiveLayers, function (layer) {\n                    layer.resize(width, height);\n                });\n\n                this.refresh(true);\n            }\n\n            this._width = width;\n            this._height = height;\n\n            return this;\n        },\n\n        /**\n         * 清除单独的一个层\n         * @param {number} zlevel\n         */\n        clearLayer: function (zlevel) {\n            var layer = this._layers[zlevel];\n            if (layer) {\n                layer.clear();\n            }\n        },\n\n        /**\n         * 释放\n         */\n        dispose: function () {\n            this.root.innerHTML = '';\n\n            this.root =\n            this.storage =\n\n            this._domRoot =\n            this._layers = null;\n        },\n\n        /**\n         * Get canvas which has all thing rendered\n         * @param {Object} opts\n         * @param {string} [opts.backgroundColor]\n         */\n        getRenderedCanvas: function (opts) {\n            opts = opts || {};\n            if (this._singleCanvas) {\n                return this._layers[0].dom;\n            }\n\n            var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n            imageLayer.initContext();\n\n            imageLayer.clearColor = opts.backgroundColor;\n            imageLayer.clear();\n\n            var displayList = this.storage.getDisplayList(true);\n\n            var scope = {};\n            var zlevel;\n\n            var self = this;\n            function findAndDrawOtherLayer(smaller, larger) {\n                var zlevelList = self._zlevelList;\n                if (smaller == null) {\n                    smaller = -Infinity;\n                }\n                var intermediateLayer;\n                for (var i = 0; i < zlevelList.length; i++) {\n                    var z = zlevelList[i];\n                    var layer = self._layers[z];\n                    if (!layer.__builtin__ && z > smaller && z < larger) {\n                        intermediateLayer = layer;\n                        break;\n                    }\n                }\n                if (intermediateLayer && intermediateLayer.renderToCanvas) {\n                    imageLayer.ctx.save();\n                    intermediateLayer.renderToCanvas(imageLayer.ctx);\n                    imageLayer.ctx.restore();\n                }\n            }\n            for (var i = 0; i < displayList.length; i++) {\n                var el = displayList[i];\n\n                if (el.zlevel !== zlevel) {\n                    findAndDrawOtherLayer(zlevel, el.zlevel);\n                    zlevel = el.zlevel;\n                }\n                this._doPaintEl(el, imageLayer, true, scope);\n            }\n\n            findAndDrawOtherLayer(zlevel, Infinity);\n\n            return imageLayer.dom;\n        },\n        /**\n         * 获取绘图区域宽度\n         */\n        getWidth: function () {\n            return this._width;\n        },\n\n        /**\n         * 获取绘图区域高度\n         */\n        getHeight: function () {\n            return this._height;\n        },\n\n        _getSize: function (whIdx) {\n            var opts = this._opts;\n            var wh = ['width', 'height'][whIdx];\n            var cwh = ['clientWidth', 'clientHeight'][whIdx];\n            var plt = ['paddingLeft', 'paddingTop'][whIdx];\n            var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n            if (opts[wh] != null && opts[wh] !== 'auto') {\n                return parseFloat(opts[wh]);\n            }\n\n            var root = this.root;\n            // IE8 does not support getComputedStyle, but it use VML.\n            var stl = document.defaultView.getComputedStyle(root);\n\n            return (\n                (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n                - (parseInt10(stl[plt]) || 0)\n                - (parseInt10(stl[prb]) || 0)\n            ) | 0;\n        },\n\n        pathToImage: function (path, dpr) {\n            dpr = dpr || this.dpr;\n\n            var canvas = document.createElement('canvas');\n            var ctx = canvas.getContext('2d');\n            var rect = path.getBoundingRect();\n            var style = path.style;\n            var shadowBlurSize = style.shadowBlur;\n            var shadowOffsetX = style.shadowOffsetX;\n            var shadowOffsetY = style.shadowOffsetY;\n            var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n\n            var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n            var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n            var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n            var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n            var width = rect.width + leftMargin + rightMargin;\n            var height = rect.height + topMargin + bottomMargin;\n\n            canvas.width = width * dpr;\n            canvas.height = height * dpr;\n\n            ctx.scale(dpr, dpr);\n            ctx.clearRect(0, 0, width, height);\n            ctx.dpr = dpr;\n\n            var pathTransform = {\n                position: path.position,\n                rotation: path.rotation,\n                scale: path.scale\n            };\n            path.position = [leftMargin - rect.x, topMargin - rect.y];\n            path.rotation = 0;\n            path.scale = [1, 1];\n            path.updateTransform();\n            if (path) {\n                path.brush(ctx);\n            }\n\n            var ImageShape = require('./graphic/Image');\n            var imgShape = new ImageShape({\n                style: {\n                    x: 0,\n                    y: 0,\n                    image: canvas\n                }\n            });\n\n            if (pathTransform.position != null) {\n                imgShape.position = path.position = pathTransform.position;\n            }\n\n            if (pathTransform.rotation != null) {\n                imgShape.rotation = path.rotation = pathTransform.rotation;\n            }\n\n            if (pathTransform.scale != null) {\n                imgShape.scale = path.scale = pathTransform.scale;\n            }\n\n            return imgShape;\n        }\n    };\n\n    module.exports = Painter;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Painter.js\n// module id = 768\n// module chunks = 0 1 2","'use strict';\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n\n\n    var util = require('./core/util');\n    var env = require('./core/env');\n\n    var Group = require('./container/Group');\n\n    // Use timsort because in most case elements are partially sorted\n    // https://jsfiddle.net/pissang/jr4x7mdm/8/\n    var timsort = require('./core/timsort');\n\n    function shapeCompareFunc(a, b) {\n        if (a.zlevel === b.zlevel) {\n            if (a.z === b.z) {\n                // if (a.z2 === b.z2) {\n                //     // FIXME Slow has renderidx compare\n                //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n                //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n                //     return a.__renderidx - b.__renderidx;\n                // }\n                return a.z2 - b.z2;\n            }\n            return a.z - b.z;\n        }\n        return a.zlevel - b.zlevel;\n    }\n    /**\n     * 内容仓库 (M)\n     * @alias module:zrender/Storage\n     * @constructor\n     */\n    var Storage = function () {\n        this._roots = [];\n\n        this._displayList = [];\n\n        this._displayListLen = 0;\n    };\n\n    Storage.prototype = {\n\n        constructor: Storage,\n\n        /**\n         * @param  {Function} cb\n         *\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._roots.length; i++) {\n                this._roots[i].traverse(cb, context);\n            }\n        },\n\n        /**\n         * 返回所有图形的绘制队列\n         * @param {boolean} [update=false] 是否在返回前更新该数组\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n         *\n         * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n         * @return {Array.<module:zrender/graphic/Displayable>}\n         */\n        getDisplayList: function (update, includeIgnore) {\n            includeIgnore = includeIgnore || false;\n            if (update) {\n                this.updateDisplayList(includeIgnore);\n            }\n            return this._displayList;\n        },\n\n        /**\n         * 更新图形的绘制队列。\n         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n         */\n        updateDisplayList: function (includeIgnore) {\n            this._displayListLen = 0;\n            var roots = this._roots;\n            var displayList = this._displayList;\n            for (var i = 0, len = roots.length; i < len; i++) {\n                this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n            }\n            displayList.length = this._displayListLen;\n\n            // for (var i = 0, len = displayList.length; i < len; i++) {\n            //     displayList[i].__renderidx = i;\n            // }\n\n            // displayList.sort(shapeCompareFunc);\n            env.canvasSupported && timsort(displayList, shapeCompareFunc);\n        },\n\n        _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n\n            if (el.ignore && !includeIgnore) {\n                return;\n            }\n\n            el.beforeUpdate();\n\n            if (el.__dirty) {\n\n                el.update();\n\n            }\n\n            el.afterUpdate();\n\n            var userSetClipPath = el.clipPath;\n            if (userSetClipPath) {\n\n                // FIXME 效率影响\n                if (clipPaths) {\n                    clipPaths = clipPaths.slice();\n                }\n                else {\n                    clipPaths = [];\n                }\n\n                var currentClipPath = userSetClipPath;\n                var parentClipPath = el;\n                // Recursively add clip path\n                while (currentClipPath) {\n                    // clipPath 的变换是基于使用这个 clipPath 的元素\n                    currentClipPath.parent = parentClipPath;\n                    currentClipPath.updateTransform();\n\n                    clipPaths.push(currentClipPath);\n\n                    parentClipPath = currentClipPath;\n                    currentClipPath = currentClipPath.clipPath;\n                }\n            }\n\n            if (el.isGroup) {\n                var children = el._children;\n\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n\n                    // Force to mark as dirty if group is dirty\n                    // FIXME __dirtyPath ?\n                    if (el.__dirty) {\n                        child.__dirty = true;\n                    }\n\n                    this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n                }\n\n                // Mark group clean here\n                el.__dirty = false;\n\n            }\n            else {\n                el.__clipPaths = clipPaths;\n\n                this._displayList[this._displayListLen++] = el;\n            }\n        },\n\n        /**\n         * 添加图形(Shape)或者组(Group)到根节点\n         * @param {module:zrender/Element} el\n         */\n        addRoot: function (el) {\n            if (el.__storage === this) {\n                return;\n            }\n\n            if (el instanceof Group) {\n                el.addChildrenToStorage(this);\n            }\n\n            this.addToStorage(el);\n            this._roots.push(el);\n        },\n\n        /**\n         * 删除指定的图形(Shape)或者组(Group)\n         * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n         */\n        delRoot: function (el) {\n            if (el == null) {\n                // 不指定el清空\n                for (var i = 0; i < this._roots.length; i++) {\n                    var root = this._roots[i];\n                    if (root instanceof Group) {\n                        root.delChildrenFromStorage(this);\n                    }\n                }\n\n                this._roots = [];\n                this._displayList = [];\n                this._displayListLen = 0;\n\n                return;\n            }\n\n            if (el instanceof Array) {\n                for (var i = 0, l = el.length; i < l; i++) {\n                    this.delRoot(el[i]);\n                }\n                return;\n            }\n\n\n            var idx = util.indexOf(this._roots, el);\n            if (idx >= 0) {\n                this.delFromStorage(el);\n                this._roots.splice(idx, 1);\n                if (el instanceof Group) {\n                    el.delChildrenFromStorage(this);\n                }\n            }\n        },\n\n        addToStorage: function (el) {\n            el.__storage = this;\n            el.dirty(false);\n\n            return this;\n        },\n\n        delFromStorage: function (el) {\n            if (el) {\n                el.__storage = null;\n            }\n\n            return this;\n        },\n\n        /**\n         * 清空并且释放Storage\n         */\n        dispose: function () {\n            this._renderList =\n            this._roots = null;\n        },\n\n        displayableSortFunc: shapeCompareFunc\n    };\n\n    module.exports = Storage;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Storage.js\n// module id = 769\n// module chunks = 0 1 2","'use strict';\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n\n    var util = require('../core/util');\n    var Dispatcher = require('../core/event').Dispatcher;\n\n    var requestAnimationFrame = require('./requestAnimationFrame');\n\n    var Animator = require('./Animator');\n    /**\n     * @typedef {Object} IZRenderStage\n     * @property {Function} update\n     */\n\n    /**\n     * @alias module:zrender/animation/Animation\n     * @constructor\n     * @param {Object} [options]\n     * @param {Function} [options.onframe]\n     * @param {IZRenderStage} [options.stage]\n     * @example\n     *     var animation = new Animation();\n     *     var obj = {\n     *         x: 100,\n     *         y: 100\n     *     };\n     *     animation.animate(node.position)\n     *         .when(1000, {\n     *             x: 500,\n     *             y: 500\n     *         })\n     *         .when(2000, {\n     *             x: 100,\n     *             y: 100\n     *         })\n     *         .start('spline');\n     */\n    var Animation = function (options) {\n\n        options = options || {};\n\n        this.stage = options.stage || {};\n\n        this.onframe = options.onframe || function() {};\n\n        // private properties\n        this._clips = [];\n\n        this._running = false;\n\n        this._time;\n\n        this._pausedTime;\n\n        this._pauseStart;\n\n        this._paused = false;\n\n        Dispatcher.call(this);\n    };\n\n    Animation.prototype = {\n\n        constructor: Animation,\n        /**\n         * 添加 clip\n         * @param {module:zrender/animation/Clip} clip\n         */\n        addClip: function (clip) {\n            this._clips.push(clip);\n        },\n        /**\n         * 添加 animator\n         * @param {module:zrender/animation/Animator} animator\n         */\n        addAnimator: function (animator) {\n            animator.animation = this;\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.addClip(clips[i]);\n            }\n        },\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Clip} clip\n         */\n        removeClip: function(clip) {\n            var idx = util.indexOf(this._clips, clip);\n            if (idx >= 0) {\n                this._clips.splice(idx, 1);\n            }\n        },\n\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Animator} animator\n         */\n        removeAnimator: function (animator) {\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.removeClip(clips[i]);\n            }\n            animator.animation = null;\n        },\n\n        _update: function() {\n\n            var time = new Date().getTime() - this._pausedTime;\n            var delta = time - this._time;\n            var clips = this._clips;\n            var len = clips.length;\n\n            var deferredEvents = [];\n            var deferredClips = [];\n            for (var i = 0; i < len; i++) {\n                var clip = clips[i];\n                var e = clip.step(time, delta);\n                // Throw out the events need to be called after\n                // stage.update, like destroy\n                if (e) {\n                    deferredEvents.push(e);\n                    deferredClips.push(clip);\n                }\n            }\n\n            // Remove the finished clip\n            for (var i = 0; i < len;) {\n                if (clips[i]._needsRemove) {\n                    clips[i] = clips[len - 1];\n                    clips.pop();\n                    len--;\n                }\n                else {\n                    i++;\n                }\n            }\n\n            len = deferredEvents.length;\n            for (var i = 0; i < len; i++) {\n                deferredClips[i].fire(deferredEvents[i]);\n            }\n\n            this._time = time;\n\n            this.onframe(delta);\n\n            this.trigger('frame', delta);\n\n            if (this.stage.update) {\n                this.stage.update();\n            }\n        },\n\n        _startLoop: function () {\n            var self = this;\n\n            this._running = true;\n\n            function step() {\n                if (self._running) {\n\n                    requestAnimationFrame(step);\n\n                    !self._paused && self._update();\n                }\n            }\n\n            requestAnimationFrame(step);\n        },\n\n        /**\n         * 开始运行动画\n         */\n        start: function () {\n\n            this._time = new Date().getTime();\n            this._pausedTime = 0;\n\n            this._startLoop();\n        },\n        /**\n         * 停止运行动画\n         */\n        stop: function () {\n            this._running = false;\n        },\n\n        /**\n         * Pause\n         */\n        pause: function () {\n            if (!this._paused) {\n                this._pauseStart = new Date().getTime();\n                this._paused = true;\n            }\n        },\n\n        /**\n         * Resume\n         */\n        resume: function () {\n            if (this._paused) {\n                this._pausedTime += (new Date().getTime()) - this._pauseStart;\n                this._paused = false;\n            }\n        },\n\n        /**\n         * 清除所有动画片段\n         */\n        clear: function () {\n            this._clips = [];\n        },\n        /**\n         * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n         * @param  {Object} target\n         * @param  {Object} options\n         * @param  {boolean} [options.loop=false] 是否循环播放动画\n         * @param  {Function} [options.getter=null]\n         *         如果指定getter函数，会通过getter函数取属性值\n         * @param  {Function} [options.setter=null]\n         *         如果指定setter函数，会通过setter函数设置属性值\n         * @return {module:zrender/animation/Animation~Animator}\n         */\n        // TODO Gap\n        animate: function (target, options) {\n            options = options || {};\n\n            var animator = new Animator(\n                target,\n                options.loop,\n                options.getter,\n                options.setter\n            );\n\n            this.addAnimator(animator);\n\n            return animator;\n        }\n    };\n\n    util.mixin(Animation, Dispatcher);\n\n    module.exports = Animation;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Animation.js\n// module id = 770\n// module chunks = 0 1 2","/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\n\n\n    var easingFuncs = require('./easing');\n\n    function Clip(options) {\n\n        this._target = options.target;\n\n        // 生命周期\n        this._life = options.life || 1000;\n        // 延时\n        this._delay = options.delay || 0;\n        // 开始时间\n        // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n        this._initialized = false;\n\n        // 是否循环\n        this.loop = options.loop == null ? false : options.loop;\n\n        this.gap = options.gap || 0;\n\n        this.easing = options.easing || 'Linear';\n\n        this.onframe = options.onframe;\n        this.ondestroy = options.ondestroy;\n        this.onrestart = options.onrestart;\n\n        this._pausedTime = 0;\n        this._paused = false;\n    }\n\n    Clip.prototype = {\n\n        constructor: Clip,\n\n        step: function (globalTime, deltaTime) {\n            // Set startTime on first step, or _startTime may has milleseconds different between clips\n            // PENDING\n            if (!this._initialized) {\n                this._startTime = globalTime + this._delay;\n                this._initialized = true;\n            }\n\n            if (this._paused) {\n                this._pausedTime += deltaTime;\n                return;\n            }\n\n            var percent = (globalTime - this._startTime - this._pausedTime) / this._life;\n\n            // 还没开始\n            if (percent < 0) {\n                return;\n            }\n\n            percent = Math.min(percent, 1);\n\n            var easing = this.easing;\n            var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n            var schedule = typeof easingFunc === 'function'\n                ? easingFunc(percent)\n                : percent;\n\n            this.fire('frame', schedule);\n\n            // 结束\n            if (percent == 1) {\n                if (this.loop) {\n                    this.restart (globalTime);\n                    // 重新开始周期\n                    // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n                    return 'restart';\n                }\n\n                // 动画完成将这个控制器标识为待删除\n                // 在Animation.update中进行批量删除\n                this._needsRemove = true;\n                return 'destroy';\n            }\n\n            return null;\n        },\n\n        restart: function (globalTime) {\n            var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n            this._startTime = globalTime - remainder + this.gap;\n            this._pausedTime = 0;\n\n            this._needsRemove = false;\n        },\n\n        fire: function (eventType, arg) {\n            eventType = 'on' + eventType;\n            if (this[eventType]) {\n                this[eventType](this._target, arg);\n            }\n        },\n\n        pause: function () {\n            this._paused = true;\n        },\n\n        resume: function () {\n            this._paused = false;\n        }\n    };\n\n    module.exports = Clip;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Clip.js\n// module id = 771\n// module chunks = 0 1 2","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\n\n    var easing = {\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        linear: function (k) {\n            return k;\n        },\n\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticIn: function (k) {\n            return k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticOut: function (k) {\n            return k * (2 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k;\n            }\n            return -0.5 * (--k * (k - 2) - 1);\n        },\n\n        // 三次方的缓动（t^3）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicIn: function (k) {\n            return k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicOut: function (k) {\n            return --k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k + 2);\n        },\n\n        // 四次方的缓动（t^4）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticIn: function (k) {\n            return k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticOut: function (k) {\n            return 1 - (--k * k * k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k;\n            }\n            return -0.5 * ((k -= 2) * k * k * k - 2);\n        },\n\n        // 五次方的缓动（t^5）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticIn: function (k) {\n            return k * k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticOut: function (k) {\n            return --k * k * k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k * k * k + 2);\n        },\n\n        // 正弦曲线的缓动（sin(t)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalIn: function (k) {\n            return 1 - Math.cos(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalOut: function (k) {\n            return Math.sin(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalInOut: function (k) {\n            return 0.5 * (1 - Math.cos(Math.PI * k));\n        },\n\n        // 指数曲线的缓动（2^t）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialIn: function (k) {\n            return k === 0 ? 0 : Math.pow(1024, k - 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialOut: function (k) {\n            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialInOut: function (k) {\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if ((k *= 2) < 1) {\n                return 0.5 * Math.pow(1024, k - 1);\n            }\n            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n        },\n\n        // 圆形曲线的缓动（sqrt(1-t^2)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularIn: function (k) {\n            return 1 - Math.sqrt(1 - k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularOut: function (k) {\n            return Math.sqrt(1 - (--k * k));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - k * k) - 1);\n            }\n            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n        },\n\n        // 创建类似于弹簧在停止前来回振荡的动画\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticIn: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return -(a * Math.pow(2, 10 * (k -= 1)) *\n                        Math.sin((k - s) * (2 * Math.PI) / p));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return (a * Math.pow(2, -10 * k) *\n                    Math.sin((k - s) * (2 * Math.PI) / p) + 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticInOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            if ((k *= 2) < 1) {\n                return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p));\n            }\n            return a * Math.pow(2, -10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\n        },\n\n        // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backIn: function (k) {\n            var s = 1.70158;\n            return k * k * ((s + 1) * k - s);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backOut: function (k) {\n            var s = 1.70158;\n            return --k * k * ((s + 1) * k + s) + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backInOut: function (k) {\n            var s = 1.70158 * 1.525;\n            if ((k *= 2) < 1) {\n                return 0.5 * (k * k * ((s + 1) * k - s));\n            }\n            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n        },\n\n        // 创建弹跳效果\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceIn: function (k) {\n            return 1 - easing.bounceOut(1 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceOut: function (k) {\n            if (k < (1 / 2.75)) {\n                return 7.5625 * k * k;\n            }\n            else if (k < (2 / 2.75)) {\n                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n            }\n            else if (k < (2.5 / 2.75)) {\n                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n            }\n            else {\n                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n            }\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceInOut: function (k) {\n            if (k < 0.5) {\n                return easing.bounceIn(k * 2) * 0.5;\n            }\n            return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n        }\n    };\n\n    module.exports = easing;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/easing.js\n// module id = 772\n// module chunks = 0 1 2","\n\n    var normalizeRadian = require('./util').normalizeRadian;\n    var PI2 = Math.PI * 2;\n\n    module.exports = {\n        /**\n         * 圆弧描边包含判断\n         * @param  {number}  cx\n         * @param  {number}  cy\n         * @param  {number}  r\n         * @param  {number}  startAngle\n         * @param  {number}  endAngle\n         * @param  {boolean}  anticlockwise\n         * @param  {number} lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {Boolean}\n         */\n        containStroke: function (\n            cx, cy, r, startAngle, endAngle, anticlockwise,\n            lineWidth, x, y\n        ) {\n\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n\n            x -= cx;\n            y -= cy;\n            var d = Math.sqrt(x * x + y * y);\n\n            if ((d - _l > r) || (d + _l < r)) {\n                return false;\n            }\n            if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n                // Is a circle\n                return true;\n            }\n            if (anticlockwise) {\n                var tmp = startAngle;\n                startAngle = normalizeRadian(endAngle);\n                endAngle = normalizeRadian(tmp);\n            } else {\n                startAngle = normalizeRadian(startAngle);\n                endAngle = normalizeRadian(endAngle);\n            }\n            if (startAngle > endAngle) {\n                endAngle += PI2;\n            }\n\n            var angle = Math.atan2(y, x);\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return (angle >= startAngle && angle <= endAngle)\n                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/arc.js\n// module id = 773\n// module chunks = 0 1 2","\n\n    var curve = require('../core/curve');\n\n    module.exports = {\n        /**\n         * 三次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  x3\n         * @param  {number}  y3\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.cubicProjectPoint(\n                x0, y0, x1, y1, x2, y2, x3, y3,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/cubic.js\n// module id = 774\n// module chunks = 0 1 2","\n    module.exports = {\n        /**\n         * 线段包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            var _a = 0;\n            var _b = x0;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l)\n                || (y < y0 - _l && y < y1 - _l)\n                || (x > x0 + _l && x > x1 + _l)\n                || (x < x0 - _l && x < x1 - _l)\n            ) {\n                return false;\n            }\n\n            if (x0 !== x1) {\n                _a = (y0 - y1) / (x0 - x1);\n                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\n            }\n            else {\n                return Math.abs(x - x0) <= _l / 2;\n            }\n            var tmp = _a * x - y + _b;\n            var _s = tmp * tmp / (_a * _a + 1);\n            return _s <= _l / 2 * _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/line.js\n// module id = 775\n// module chunks = 0 1 2","'use strict';\n\n\n    var CMD = require('../core/PathProxy').CMD;\n    var line = require('./line');\n    var cubic = require('./cubic');\n    var quadratic = require('./quadratic');\n    var arc = require('./arc');\n    var normalizeRadian = require('./util').normalizeRadian;\n    var curve = require('../core/curve');\n\n    var windingLine = require('./windingLine');\n\n    var containStroke = line.containStroke;\n\n    var PI2 = Math.PI * 2;\n\n    var EPSILON = 1e-4;\n\n    function isAroundEqual(a, b) {\n        return Math.abs(a - b) < EPSILON;\n    }\n\n    // 临时数组\n    var roots = [-1, -1, -1];\n    var extrema = [-1, -1];\n\n    function swapExtrema() {\n        var tmp = extrema[0];\n        extrema[0] = extrema[1];\n        extrema[1] = tmp;\n    }\n\n    function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2 && y > y3)\n            || (y < y0 && y < y1 && y < y2 && y < y3)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var w = 0;\n            var nExtrema = -1;\n            var y0_, y1_;\n            for (var i = 0; i < nRoots; i++) {\n                var t = roots[i];\n\n                // Avoid winding error when intersection point is the connect point of two line of polygon\n                var unit = (t === 0 || t === 1) ? 0.5 : 1;\n\n                var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n                if (x_ < x) { // Quick reject\n                    continue;\n                }\n                if (nExtrema < 0) {\n                    nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n                    if (extrema[1] < extrema[0] && nExtrema > 1) {\n                        swapExtrema();\n                    }\n                    y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n                    if (nExtrema > 1) {\n                        y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n                    }\n                }\n                if (nExtrema == 2) {\n                    // 分成三段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else if (t < extrema[1]) {\n                        w += y1_ < y0_ ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y1_ ? unit : -unit;\n                    }\n                }\n                else {\n                    // 分成两段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y0_ ? unit : -unit;\n                    }\n                }\n            }\n            return w;\n        }\n    }\n\n    function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2)\n            || (y < y0 && y < y1 && y < y2)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var t = curve.quadraticExtremum(y0, y1, y2);\n            if (t >= 0 && t <= 1) {\n                var w = 0;\n                var y_ = curve.quadraticAt(y0, y1, y2, t);\n                for (var i = 0; i < nRoots; i++) {\n                    // Remove one endpoint.\n                    var unit = (roots[i] === 0 || roots[i] === 1) ? 0.5 : 1;\n\n                    var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n                    if (x_ < x) {   // Quick reject\n                        continue;\n                    }\n                    if (roots[i] < t) {\n                        w += y_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y2 < y_ ? unit : -unit;\n                    }\n                }\n                return w;\n            }\n            else {\n                // Remove one endpoint.\n                var unit = (roots[0] === 0 || roots[0] === 1) ? 0.5 : 1;\n\n                var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n                if (x_ < x) {   // Quick reject\n                    return 0;\n                }\n                return y2 < y0 ? unit : -unit;\n            }\n        }\n    }\n\n    // TODO\n    // Arc 旋转\n    function windingArc(\n        cx, cy, r, startAngle, endAngle, anticlockwise, x, y\n    ) {\n        y -= cy;\n        if (y > r || y < -r) {\n            return 0;\n        }\n        var tmp = Math.sqrt(r * r - y * y);\n        roots[0] = -tmp;\n        roots[1] = tmp;\n\n        var diff = Math.abs(startAngle - endAngle);\n        if (diff < 1e-4) {\n            return 0;\n        }\n        if (diff % PI2 < 1e-4) {\n            // Is a circle\n            startAngle = 0;\n            endAngle = PI2;\n            var dir = anticlockwise ? 1 : -1;\n            if (x >= roots[0] + cx && x <= roots[1] + cx) {\n                return dir;\n            } else {\n                return 0;\n            }\n        }\n\n        if (anticlockwise) {\n            var tmp = startAngle;\n            startAngle = normalizeRadian(endAngle);\n            endAngle = normalizeRadian(tmp);\n        }\n        else {\n            startAngle = normalizeRadian(startAngle);\n            endAngle = normalizeRadian(endAngle);\n        }\n        if (startAngle > endAngle) {\n            endAngle += PI2;\n        }\n\n        var w = 0;\n        for (var i = 0; i < 2; i++) {\n            var x_ = roots[i];\n            if (x_ + cx > x) {\n                var angle = Math.atan2(y, x_);\n                var dir = anticlockwise ? 1 : -1;\n                if (angle < 0) {\n                    angle = PI2 + angle;\n                }\n                if (\n                    (angle >= startAngle && angle <= endAngle)\n                    || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\n                ) {\n                    if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n                        dir = -dir;\n                    }\n                    w += dir;\n                }\n            }\n        }\n        return w;\n    }\n\n    function containPath(data, lineWidth, isStroke, x, y) {\n        var w = 0;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n\n        for (var i = 0; i < data.length;) {\n            var cmd = data[i++];\n            // Begin a new subpath\n            if (cmd === CMD.M && i > 1) {\n                // Close previous subpath\n                if (!isStroke) {\n                    w += windingLine(xi, yi, x0, y0, x, y);\n                }\n                // 如果被任何一个 subpath 包含\n                // if (w !== 0) {\n                //     return true;\n                // }\n            }\n\n            if (i == 1) {\n                // 如果第一个命令是 L, C, Q\n                // 则 previous point 同绘制命令的第一个 point\n                //\n                // 第一个命令为 Arc 的情况下会在后面特殊处理\n                xi = data[i];\n                yi = data[i + 1];\n\n                x0 = xi;\n                y0 = yi;\n            }\n\n            switch (cmd) {\n                case CMD.M:\n                    // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                    // 在 closePath 的时候使用\n                    x0 = data[i++];\n                    y0 = data[i++];\n                    xi = x0;\n                    yi = y0;\n                    break;\n                case CMD.L:\n                    if (isStroke) {\n                        if (containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n                        w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.C:\n                    if (isStroke) {\n                        if (cubic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingCubic(\n                            xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.Q:\n                    if (isStroke) {\n                        if (quadratic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingQuadratic(\n                            xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.A:\n                    // TODO Arc 判断的开销比较大\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var theta = data[i++];\n                    var dTheta = data[i++];\n                    // TODO Arc 旋转\n                    var psi = data[i++];\n                    var anticlockwise = 1 - data[i++];\n                    var x1 = Math.cos(theta) * rx + cx;\n                    var y1 = Math.sin(theta) * ry + cy;\n                    // 不是直接使用 arc 命令\n                    if (i > 1) {\n                        w += windingLine(xi, yi, x1, y1, x, y);\n                    }\n                    else {\n                        // 第一个命令起点还未定义\n                        x0 = x1;\n                        y0 = y1;\n                    }\n                    // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n                    var _x = (x - cx) * ry / rx + cx;\n                    if (isStroke) {\n                        if (arc.containStroke(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            lineWidth, _x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingArc(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            _x, y\n                        );\n                    }\n                    xi = Math.cos(theta + dTheta) * rx + cx;\n                    yi = Math.sin(theta + dTheta) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    var x1 = x0 + width;\n                    var y1 = y0 + height;\n                    if (isStroke) {\n                        if (containStroke(x0, y0, x1, y0, lineWidth, x, y)\n                          || containStroke(x1, y0, x1, y1, lineWidth, x, y)\n                          || containStroke(x1, y1, x0, y1, lineWidth, x, y)\n                          || containStroke(x0, y1, x0, y0, lineWidth, x, y)\n                        ) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // FIXME Clockwise ?\n                        w += windingLine(x1, y0, x1, y1, x, y);\n                        w += windingLine(x0, y1, x0, y0, x, y);\n                    }\n                    break;\n                case CMD.Z:\n                    if (isStroke) {\n                        if (containStroke(\n                            xi, yi, x0, y0, lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // Close a subpath\n                        w += windingLine(xi, yi, x0, y0, x, y);\n                        // 如果被任何一个 subpath 包含\n                        // FIXME subpaths may overlap\n                        // if (w !== 0) {\n                        //     return true;\n                        // }\n                    }\n                    xi = x0;\n                    yi = y0;\n                    break;\n            }\n        }\n        if (!isStroke && !isAroundEqual(yi, y0)) {\n            w += windingLine(xi, yi, x0, y0, x, y) || 0;\n        }\n        return w !== 0;\n    }\n\n    module.exports = {\n        contain: function (pathData, x, y) {\n            return containPath(pathData, 0, false, x, y);\n        },\n\n        containStroke: function (pathData, lineWidth, x, y) {\n            return containPath(pathData, lineWidth, true, x, y);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/path.js\n// module id = 776\n// module chunks = 0 1 2","\n\n    var curve = require('../core/curve');\n\n    module.exports = {\n        /**\n         * 二次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.quadraticProjectPoint(\n                x0, y0, x1, y1, x2, y2,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/quadratic.js\n// module id = 777\n// module chunks = 0 1 2","\n    module.exports = function windingLine(x0, y0, x1, y1, x, y) {\n        if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\n            return 0;\n        }\n        // Ignore horizontal line\n        if (y1 === y0) {\n            return 0;\n        }\n        var dir = y1 < y0 ? 1 : -1;\n        var t = (y - y0) / (y1 - y0);\n\n        // Avoid winding error when intersection point is the connect point of two line of polygon\n        if (t === 1 || t === 0) {\n            dir = y1 < y0 ? 0.5 : -0.5;\n        }\n\n        var x_ = t * (x1 - x0) + x0;\n\n        return x_ > x ? dir : 0;\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/windingLine.js\n// module id = 778\n// module chunks = 0 1 2","'use strict';\n/**\n * Only implements needed gestures for mobile.\n */\n\n\n    var eventUtil = require('./event');\n\n    var GestureMgr = function () {\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._track = [];\n    };\n\n    GestureMgr.prototype = {\n\n        constructor: GestureMgr,\n\n        recognize: function (event, target, root) {\n            this._doTrack(event, target, root);\n            return this._recognize(event);\n        },\n\n        clear: function () {\n            this._track.length = 0;\n            return this;\n        },\n\n        _doTrack: function (event, target, root) {\n            var touches = event.touches;\n\n            if (!touches) {\n                return;\n            }\n\n            var trackItem = {\n                points: [],\n                touches: [],\n                target: target,\n                event: event\n            };\n\n            for (var i = 0, len = touches.length; i < len; i++) {\n                var touch = touches[i];\n                var pos = eventUtil.clientToLocal(root, touch, {});\n                trackItem.points.push([pos.zrX, pos.zrY]);\n                trackItem.touches.push(touch);\n            }\n\n            this._track.push(trackItem);\n        },\n\n        _recognize: function (event) {\n            for (var eventName in recognizers) {\n                if (recognizers.hasOwnProperty(eventName)) {\n                    var gestureInfo = recognizers[eventName](this._track, event);\n                    if (gestureInfo) {\n                        return gestureInfo;\n                    }\n                }\n            }\n        }\n    };\n\n    function dist(pointPair) {\n        var dx = pointPair[1][0] - pointPair[0][0];\n        var dy = pointPair[1][1] - pointPair[0][1];\n\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    function center(pointPair) {\n        return [\n            (pointPair[0][0] + pointPair[1][0]) / 2,\n            (pointPair[0][1] + pointPair[1][1]) / 2\n        ];\n    }\n\n    var recognizers = {\n\n        pinch: function (track, event) {\n            var trackLen = track.length;\n\n            if (!trackLen) {\n                return;\n            }\n\n            var pinchEnd = (track[trackLen - 1] || {}).points;\n            var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n            if (pinchPre\n                && pinchPre.length > 1\n                && pinchEnd\n                && pinchEnd.length > 1\n            ) {\n                var pinchScale = dist(pinchEnd) / dist(pinchPre);\n                !isFinite(pinchScale) && (pinchScale = 1);\n\n                event.pinchScale = pinchScale;\n\n                var pinchCenter = center(pinchEnd);\n                event.pinchX = pinchCenter[0];\n                event.pinchY = pinchCenter[1];\n\n                return {\n                    type: 'pinch',\n                    target: track[0].target,\n                    event: event\n                };\n            }\n        }\n\n        // Only pinch currently.\n    };\n\n    module.exports = GestureMgr;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/GestureMgr.js\n// module id = 779\n// module chunks = 0 1 2","/**\n * @author Yi Shen(https://github.com/pissang)\n */\n\n\n    var vec2 = require('./vector');\n    var curve = require('./curve');\n\n    var bbox = {};\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n\n    var start = vec2.create();\n    var end = vec2.create();\n    var extremity = vec2.create();\n\n    var PI2 = Math.PI * 2;\n    /**\n     * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n     * @module zrender/core/bbox\n     * @param {Array<Object>} points 顶点数组\n     * @param {number} min\n     * @param {number} max\n     */\n    bbox.fromPoints = function(points, min, max) {\n        if (points.length === 0) {\n            return;\n        }\n        var p = points[0];\n        var left = p[0];\n        var right = p[0];\n        var top = p[1];\n        var bottom = p[1];\n        var i;\n\n        for (i = 1; i < points.length; i++) {\n            p = points[i];\n            left = mathMin(left, p[0]);\n            right = mathMax(right, p[0]);\n            top = mathMin(top, p[1]);\n            bottom = mathMax(bottom, p[1]);\n        }\n\n        min[0] = left;\n        min[1] = top;\n        max[0] = right;\n        max[1] = bottom;\n    };\n\n    /**\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromLine = function (x0, y0, x1, y1, min, max) {\n        min[0] = mathMin(x0, x1);\n        min[1] = mathMin(y0, y1);\n        max[0] = mathMax(x0, x1);\n        max[1] = mathMax(y0, y1);\n    };\n\n    var xDim = [];\n    var yDim = [];\n    /**\n     * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromCubic = function(\n        x0, y0, x1, y1, x2, y2, x3, y3, min, max\n    ) {\n        var cubicExtrema = curve.cubicExtrema;\n        var cubicAt = curve.cubicAt;\n        var i;\n        var n = cubicExtrema(x0, x1, x2, x3, xDim);\n        min[0] = Infinity;\n        min[1] = Infinity;\n        max[0] = -Infinity;\n        max[1] = -Infinity;\n\n        for (i = 0; i < n; i++) {\n            var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n            min[0] = mathMin(x, min[0]);\n            max[0] = mathMax(x, max[0]);\n        }\n        n = cubicExtrema(y0, y1, y2, y3, yDim);\n        for (i = 0; i < n; i++) {\n            var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n            min[1] = mathMin(y, min[1]);\n            max[1] = mathMax(y, max[1]);\n        }\n\n        min[0] = mathMin(x0, min[0]);\n        max[0] = mathMax(x0, max[0]);\n        min[0] = mathMin(x3, min[0]);\n        max[0] = mathMax(x3, max[0]);\n\n        min[1] = mathMin(y0, min[1]);\n        max[1] = mathMax(y0, max[1]);\n        min[1] = mathMin(y3, min[1]);\n        max[1] = mathMax(y3, max[1]);\n    };\n\n    /**\n     * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromQuadratic = function(x0, y0, x1, y1, x2, y2, min, max) {\n        var quadraticExtremum = curve.quadraticExtremum;\n        var quadraticAt = curve.quadraticAt;\n        // Find extremities, where derivative in x dim or y dim is zero\n        var tx =\n            mathMax(\n                mathMin(quadraticExtremum(x0, x1, x2), 1), 0\n            );\n        var ty =\n            mathMax(\n                mathMin(quadraticExtremum(y0, y1, y2), 1), 0\n            );\n\n        var x = quadraticAt(x0, x1, x2, tx);\n        var y = quadraticAt(y0, y1, y2, ty);\n\n        min[0] = mathMin(x0, x2, x);\n        min[1] = mathMin(y0, y2, y);\n        max[0] = mathMax(x0, x2, x);\n        max[1] = mathMax(y0, y2, y);\n    };\n\n    /**\n     * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n     * @method\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x\n     * @param {number} y\n     * @param {number} rx\n     * @param {number} ry\n     * @param {number} startAngle\n     * @param {number} endAngle\n     * @param {number} anticlockwise\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromArc = function (\n        x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max\n    ) {\n        var vec2Min = vec2.min;\n        var vec2Max = vec2.max;\n\n        var diff = Math.abs(startAngle - endAngle);\n\n\n        if (diff % PI2 < 1e-4 && diff > 1e-4) {\n            // Is a circle\n            min[0] = x - rx;\n            min[1] = y - ry;\n            max[0] = x + rx;\n            max[1] = y + ry;\n            return;\n        }\n\n        start[0] = mathCos(startAngle) * rx + x;\n        start[1] = mathSin(startAngle) * ry + y;\n\n        end[0] = mathCos(endAngle) * rx + x;\n        end[1] = mathSin(endAngle) * ry + y;\n\n        vec2Min(min, start, end);\n        vec2Max(max, start, end);\n\n        // Thresh to [0, Math.PI * 2]\n        startAngle = startAngle % (PI2);\n        if (startAngle < 0) {\n            startAngle = startAngle + PI2;\n        }\n        endAngle = endAngle % (PI2);\n        if (endAngle < 0) {\n            endAngle = endAngle + PI2;\n        }\n\n        if (startAngle > endAngle && !anticlockwise) {\n            endAngle += PI2;\n        }\n        else if (startAngle < endAngle && anticlockwise) {\n            startAngle += PI2;\n        }\n        if (anticlockwise) {\n            var tmp = endAngle;\n            endAngle = startAngle;\n            startAngle = tmp;\n        }\n\n        // var number = 0;\n        // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n        for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n            if (angle > startAngle) {\n                extremity[0] = mathCos(angle) * rx + x;\n                extremity[1] = mathSin(angle) * ry + y;\n\n                vec2Min(min, extremity, min);\n                vec2Max(max, extremity, max);\n            }\n        }\n    };\n\n    module.exports = bbox;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/bbox.js\n// module id = 780\n// module chunks = 0 1 2","\n\n    var eventTool = require('../core/event');\n    var zrUtil = require('../core/util');\n    var Eventful = require('../mixin/Eventful');\n    var env = require('../core/env');\n    var GestureMgr = require('../core/GestureMgr');\n\n    var addEventListener = eventTool.addEventListener;\n    var removeEventListener = eventTool.removeEventListener;\n    var normalizeEvent = eventTool.normalizeEvent;\n\n    var TOUCH_CLICK_DELAY = 300;\n\n    var mouseHandlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n\n    var touchHandlerNames = [\n        'touchstart', 'touchend', 'touchmove'\n    ];\n\n    var pointerEventNames = {\n        pointerdown: 1, pointerup: 1, pointermove: 1, pointerout: 1\n    };\n\n    var pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n        var nm = name.replace('mouse', 'pointer');\n        return pointerEventNames[nm] ? nm : name;\n    });\n\n    function eventNameFix(name) {\n        return (name === 'mousewheel' && env.browser.firefox) ? 'DOMMouseScroll' : name;\n    }\n\n    function processGesture(proxy, event, stage) {\n        var gestureMgr = proxy._gestureMgr;\n\n        stage === 'start' && gestureMgr.clear();\n\n        var gestureInfo = gestureMgr.recognize(\n            event,\n            proxy.handler.findHover(event.zrX, event.zrY, null).target,\n            proxy.dom\n        );\n\n        stage === 'end' && gestureMgr.clear();\n\n        // Do not do any preventDefault here. Upper application do that if necessary.\n        if (gestureInfo) {\n            var type = gestureInfo.type;\n            event.gestureEvent = type;\n\n            proxy.handler.dispatchToElement({target: gestureInfo.target}, type, gestureInfo.event);\n        }\n    }\n\n    // function onMSGestureChange(proxy, event) {\n    //     if (event.translationX || event.translationY) {\n    //         // mousemove is carried by MSGesture to reduce the sensitivity.\n    //         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n    //     }\n    //     if (event.scale !== 1) {\n    //         event.pinchX = event.offsetX;\n    //         event.pinchY = event.offsetY;\n    //         event.pinchScale = event.scale;\n    //         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n    //     }\n    // }\n\n    /**\n     * Prevent mouse event from being dispatched after Touch Events action\n     * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n     * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n     * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n     * Result: Blocking Mouse Events for 700ms.\n     */\n    function setTouchTimer(instance) {\n        instance._touching = true;\n        clearTimeout(instance._touchTimer);\n        instance._touchTimer = setTimeout(function () {\n            instance._touching = false;\n        }, 700);\n    }\n\n\n    var domHandlers = {\n        /**\n         * Mouse move handler\n         * @inner\n         * @param {Event} event\n         */\n        mousemove: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            this.trigger('mousemove', event);\n        },\n\n        /**\n         * Mouse out handler\n         * @inner\n         * @param {Event} event\n         */\n        mouseout: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            var element = event.toElement || event.relatedTarget;\n            if (element != this.dom) {\n                while (element && element.nodeType != 9) {\n                    // 忽略包含在root中的dom引起的mouseOut\n                    if (element === this.dom) {\n                        return;\n                    }\n\n                    element = element.parentNode;\n                }\n            }\n\n            this.trigger('mouseout', event);\n        },\n\n        /**\n         * Touch开始响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchstart: function (event) {\n            // Default mouse behaviour should not be disabled here.\n            // For example, page may needs to be slided.\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            this._lastTouchMoment = new Date();\n\n            processGesture(this, event, 'start');\n\n            // In touch device, trigger `mousemove`(`mouseover`) should\n            // be triggered, and must before `mousedown` triggered.\n            domHandlers.mousemove.call(this, event);\n\n            domHandlers.mousedown.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch移动响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchmove: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'change');\n\n            // Mouse move should always be triggered no matter whether\n            // there is gestrue event, because mouse move and pinch may\n            // be used at the same time.\n            domHandlers.mousemove.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch结束响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchend: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'end');\n\n            domHandlers.mouseup.call(this, event);\n\n            // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n            // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n            // we can conveniently implement \"hover style\" in both PC and touch device just\n            // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n            // to remove \"hover style\" on an element, without any additional code for\n            // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n            // style\" will remain for user view)\n\n            // click event should always be triggered no matter whether\n            // there is gestrue event. System click can not be prevented.\n            if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n                domHandlers.click.call(this, event);\n            }\n\n            setTouchTimer(this);\n        },\n\n        pointerdown: function (event) {\n            domHandlers.mousedown.call(this, event);\n\n            // if (useMSGuesture(this, event)) {\n            //     this._msGesture.addPointer(event.pointerId);\n            // }\n        },\n\n        pointermove: function (event) {\n            // FIXME\n            // pointermove is so sensitive that it always triggered when\n            // tap(click) on touch screen, which affect some judgement in\n            // upper application. So, we dont support mousemove on MS touch\n            // device yet.\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mousemove.call(this, event);\n            }\n        },\n\n        pointerup: function (event) {\n            domHandlers.mouseup.call(this, event);\n        },\n\n        pointerout: function (event) {\n            // pointerout will be triggered when tap on touch screen\n            // (IE11+/Edge on MS Surface) after click event triggered,\n            // which is inconsistent with the mousout behavior we defined\n            // in touchend. So we unify them.\n            // (check domHandlers.touchend for detailed explanation)\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mouseout.call(this, event);\n            }\n        }\n    };\n\n    function isPointerFromTouch(event) {\n        var pointerType = event.pointerType;\n        return pointerType === 'pen' || pointerType === 'touch';\n    }\n\n    // function useMSGuesture(handlerProxy, event) {\n    //     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n    // }\n\n    // Common handlers\n    zrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        domHandlers[name] = function (event) {\n            event = normalizeEvent(this.dom, event);\n            this.trigger(name, event);\n        };\n    });\n\n    /**\n     * 为控制类实例初始化dom 事件处理函数\n     *\n     * @inner\n     * @param {module:zrender/Handler} instance 控制类实例\n     */\n    function initDomHandler(instance) {\n        zrUtil.each(touchHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(pointerHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(mouseHandlerNames, function (name) {\n            instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n        });\n\n        function makeMouseHandler(fn, instance) {\n            return function () {\n                if (instance._touching) {\n                    return;\n                }\n                return fn.apply(instance, arguments);\n            };\n        }\n    }\n\n\n    function HandlerDomProxy(dom) {\n        Eventful.call(this);\n\n        this.dom = dom;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._touching = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._touchTimer;\n\n        /**\n         * @private\n         * @type {module:zrender/core/GestureMgr}\n         */\n        this._gestureMgr = new GestureMgr();\n\n        this._handlers = {};\n\n        initDomHandler(this);\n\n        if (env.pointerEventsSupported) { // Only IE11+/Edge\n            // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n            // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n            // at the same time.\n            // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n            // screen, which do not occurs in pointer event.\n            // So we use pointer event to both detect touch gesture and mouse behavior.\n            mountHandlers(pointerHandlerNames, this);\n\n            // FIXME\n            // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n            // which does not prevent defuault behavior occasionally (which may cause view port\n            // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n            // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n            // touch screen. And we only support click behavior on MS touch screen now.\n\n            // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n            // We dont support touch on IE on win7.\n            // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n            // if (typeof MSGesture === 'function') {\n            //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n            //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n            // }\n        }\n        else {\n            if (env.touchEventsSupported) {\n                mountHandlers(touchHandlerNames, this);\n                // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n                // addEventListener(root, 'mouseout', this._mouseoutHandler);\n            }\n\n            // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n            // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n            // mouse event can not be handle in those devices.\n            // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n            // mouseevent after touch event triggered, see `setTouchTimer`.\n            mountHandlers(mouseHandlerNames, this);\n        }\n\n        function mountHandlers(handlerNames, instance) {\n            zrUtil.each(handlerNames, function (name) {\n                addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n            }, instance);\n        }\n    }\n\n    var handlerDomProxyProto = HandlerDomProxy.prototype;\n    handlerDomProxyProto.dispose = function () {\n        var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n        for (var i = 0; i < handlerNames.length; i++) {\n            var name = handlerNames[i];\n            removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n        }\n    };\n\n    handlerDomProxyProto.setCursor = function (cursorStyle) {\n        this.dom.style.cursor = cursorStyle || 'default';\n    };\n\n    zrUtil.mixin(HandlerDomProxy, Eventful);\n\n    module.exports = HandlerDomProxy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/dom/HandlerProxy.js\n// module id = 781\n// module chunks = 0 1 2","// CompoundPath to improve performance\n\n\n    var Path = require('./Path');\n\n    module.exports = Path.extend({\n\n        type: 'compound',\n\n        shape: {\n\n            paths: null\n        },\n\n        _updatePathDirty: function () {\n            var dirtyPath = this.__dirtyPath;\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                // Mark as dirty if any subpath is dirty\n                dirtyPath = dirtyPath || paths[i].__dirtyPath;\n            }\n            this.__dirtyPath = dirtyPath;\n            this.__dirty = this.__dirty || dirtyPath;\n        },\n\n        beforeBrush: function () {\n            this._updatePathDirty();\n            var paths = this.shape.paths || [];\n            var scale = this.getGlobalScale();\n            // Update path scale\n            for (var i = 0; i < paths.length; i++) {\n                if (!paths[i].path) {\n                    paths[i].createPathProxy();\n                }\n                paths[i].path.setScale(scale[0], scale[1]);\n            }\n        },\n\n        buildPath: function (ctx, shape) {\n            var paths = shape.paths || [];\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].buildPath(ctx, paths[i].shape, true);\n            }\n        },\n\n        afterBrush: function () {\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].__dirtyPath = false;\n            }\n        },\n\n        getBoundingRect: function () {\n            this._updatePathDirty();\n            return Path.prototype.getBoundingRect.call(this);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/CompoundPath.js\n// module id = 782\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('../core/util');\n\n    var Gradient = require('./Gradient');\n\n    /**\n     * x, y, x2, y2 are all percent from 0 to 1\n     * @param {number} [x=0]\n     * @param {number} [y=0]\n     * @param {number} [x2=1]\n     * @param {number} [y2=0]\n     * @param {Array.<Object>} colorStops\n     * @param {boolean} [globalCoord=false]\n     */\n    var LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'linear', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0 : x;\n\n        this.y = y == null ? 0 : y;\n\n        this.x2 = x2 == null ? 1 : x2;\n\n        this.y2 = y2 == null ? 0 : y2;\n\n        // Can be cloned\n        this.type = 'linear';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    LinearGradient.prototype = {\n\n        constructor: LinearGradient\n    };\n\n    zrUtil.inherits(LinearGradient, Gradient);\n\n    module.exports = LinearGradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/LinearGradient.js\n// module id = 783\n// module chunks = 0 1 2","'use strict';\n\n\n    var zrUtil = require('../core/util');\n\n    var Gradient = require('./Gradient');\n\n    /**\n     * x, y, r are all percent from 0 to 1\n     * @param {number} [x=0.5]\n     * @param {number} [y=0.5]\n     * @param {number} [r=0.5]\n     * @param {Array.<Object>} [colorStops]\n     * @param {boolean} [globalCoord=false]\n     */\n    var RadialGradient = function (x, y, r, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'radial', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0.5 : x;\n\n        this.y = y == null ? 0.5 : y;\n\n        this.r = r == null ? 0.5 : r;\n\n        // Can be cloned\n        this.type = 'radial';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    RadialGradient.prototype = {\n\n        constructor: RadialGradient\n    };\n\n    zrUtil.inherits(RadialGradient, Gradient);\n\n    module.exports = RadialGradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/RadialGradient.js\n// module id = 784\n// module chunks = 0 1 2","/**\n * Text element\n * @module zrender/graphic/Text\n *\n * TODO Wrapping\n *\n * Text not support gradient\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var zrUtil = require('../core/util');\n    var textContain = require('../contain/text');\n    var textHelper = require('./helper/text');\n\n    /**\n     * @alias zrender/graphic/Text\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    var Text = function (opts) {\n        Displayable.call(this, opts);\n    };\n\n    Text.prototype = {\n\n        constructor: Text,\n\n        type: 'text',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n\n            // Optimize, avoid normalize every time.\n            this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n            // Use props with prefix 'text'.\n            style.fill = style.stroke = style.shadowBlur = style.shadowColor =\n                style.shadowOffsetX = style.shadowOffsetY = null;\n\n            var text = style.text;\n            // Convert to string\n            text != null && (text += '');\n\n            // Always bind style\n            style.bind(ctx, this, prevEl);\n\n            if (!textHelper.needDrawText(text, style)) {\n                return;\n            }\n\n            this.setTransform(ctx);\n\n            textHelper.renderText(this, ctx, text, style);\n\n            this.restoreTransform(ctx);\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n\n            // Optimize, avoid normalize every time.\n            this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n            if (!this._rect) {\n                var text = style.text;\n                text != null ? (text += '') : (text = '');\n\n                var rect = textContain.getBoundingRect(\n                    style.text + '',\n                    style.font,\n                    style.textAlign,\n                    style.textVerticalAlign,\n                    style.textPadding,\n                    style.rich\n                );\n\n                rect.x += style.x || 0;\n                rect.y += style.y || 0;\n\n                if (textHelper.getStroke(style.textStroke, style.textLineWidth)) {\n                    var w = style.textLineWidth;\n                    rect.x -= w / 2;\n                    rect.y -= w / 2;\n                    rect.width += w;\n                    rect.height += w;\n                }\n\n                this._rect = rect;\n            }\n\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(Text, Displayable);\n\n    module.exports = Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Text.js\n// module id = 785\n// module chunks = 0 1 2","/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n\n    var vec2 = require('../../core/vector');\n    var v2Min = vec2.min;\n    var v2Max = vec2.max;\n    var v2Scale = vec2.scale;\n    var v2Distance = vec2.distance;\n    var v2Add = vec2.add;\n\n    /**\n     * 贝塞尔平滑曲线\n     * @alias module:zrender/shape/util/smoothBezier\n     * @param {Array} points 线段顶点数组\n     * @param {number} smooth 平滑等级, 0-1\n     * @param {boolean} isLoop\n     * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n     *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n     *                           整个折线的包围盒做一个并集用来约束控制点。\n     * @param {Array} 计算出来的控制点数组\n     */\n    module.exports = function (points, smooth, isLoop, constraint) {\n        var cps = [];\n\n        var v = [];\n        var v1 = [];\n        var v2 = [];\n        var prevPoint;\n        var nextPoint;\n\n        var min, max;\n        if (constraint) {\n            min = [Infinity, Infinity];\n            max = [-Infinity, -Infinity];\n            for (var i = 0, len = points.length; i < len; i++) {\n                v2Min(min, min, points[i]);\n                v2Max(max, max, points[i]);\n            }\n            // 与指定的包围盒做并集\n            v2Min(min, min, constraint[0]);\n            v2Max(max, max, constraint[1]);\n        }\n\n        for (var i = 0, len = points.length; i < len; i++) {\n            var point = points[i];\n\n            if (isLoop) {\n                prevPoint = points[i ? i - 1 : len - 1];\n                nextPoint = points[(i + 1) % len];\n            }\n            else {\n                if (i === 0 || i === len - 1) {\n                    cps.push(vec2.clone(points[i]));\n                    continue;\n                }\n                else {\n                    prevPoint = points[i - 1];\n                    nextPoint = points[i + 1];\n                }\n            }\n\n            vec2.sub(v, nextPoint, prevPoint);\n\n            // use degree to scale the handle length\n            v2Scale(v, v, smooth);\n\n            var d0 = v2Distance(point, prevPoint);\n            var d1 = v2Distance(point, nextPoint);\n            var sum = d0 + d1;\n            if (sum !== 0) {\n                d0 /= sum;\n                d1 /= sum;\n            }\n\n            v2Scale(v1, v, -d0);\n            v2Scale(v2, v, d1);\n            var cp0 = v2Add([], point, v1);\n            var cp1 = v2Add([], point, v2);\n            if (constraint) {\n                v2Max(cp0, cp0, min);\n                v2Min(cp0, cp0, max);\n                v2Max(cp1, cp1, min);\n                v2Min(cp1, cp1, max);\n            }\n            cps.push(cp0);\n            cps.push(cp1);\n        }\n\n        if (isLoop) {\n            cps.push(cps.shift());\n        }\n\n        return cps;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/smoothBezier.js\n// module id = 786\n// module chunks = 0 1 2","/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n    var vec2 = require('../../core/vector');\n\n    /**\n     * @inner\n     */\n    function interpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    /**\n     * @alias module:zrender/shape/util/smoothSpline\n     * @param {Array} points 线段顶点数组\n     * @param {boolean} isLoop\n     * @return {Array}\n     */\n    module.exports = function (points, isLoop) {\n        var len = points.length;\n        var ret = [];\n\n        var distance = 0;\n        for (var i = 1; i < len; i++) {\n            distance += vec2.distance(points[i - 1], points[i]);\n        }\n\n        var segs = distance / 2;\n        segs = segs < len ? len : segs;\n        for (var i = 0; i < segs; i++) {\n            var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n            var idx = Math.floor(pos);\n\n            var w = pos - idx;\n\n            var p0;\n            var p1 = points[idx % len];\n            var p2;\n            var p3;\n            if (!isLoop) {\n                p0 = points[idx === 0 ? idx : idx - 1];\n                p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n                p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n            }\n            else {\n                p0 = points[(idx - 1 + len) % len];\n                p2 = points[(idx + 1) % len];\n                p3 = points[(idx + 2) % len];\n            }\n\n            var w2 = w * w;\n            var w3 = w * w2;\n\n            ret.push([\n                interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\n                interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\n            ]);\n        }\n        return ret;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/smoothSpline.js\n// module id = 787\n// module chunks = 0 1 2","/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\n\n\n\n    var textHelper = require('../helper/text');\n    var BoundingRect = require('../../core/BoundingRect');\n\n    var tmpRect = new BoundingRect();\n\n    var RectText = function () {};\n\n    RectText.prototype = {\n\n        constructor: RectText,\n\n        /**\n         * Draw text in a rect with specified position.\n         * @param  {CanvasRenderingContext2D} ctx\n         * @param  {Object} rect Displayable rect\n         */\n        drawRectText: function (ctx, rect) {\n            var style = this.style;\n\n            rect = style.textRect || rect;\n\n            // Optimize, avoid normalize every time.\n            this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n            var text = style.text;\n\n            // Convert to string\n            text != null && (text += '');\n\n            if (!textHelper.needDrawText(text, style)) {\n                return;\n            }\n\n            // FIXME\n            ctx.save();\n\n            // Transform rect to view space\n            var transform = this.transform;\n            if (!style.transformText) {\n                if (transform) {\n                    tmpRect.copy(rect);\n                    tmpRect.applyTransform(transform);\n                    rect = tmpRect;\n                }\n            }\n            else {\n                this.setTransform(ctx);\n            }\n\n            // transformText and textRotation can not be used at the same time.\n            textHelper.renderText(this, ctx, text, style, rect);\n\n            ctx.restore();\n        }\n    };\n\n    module.exports = RectText;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/mixin/RectText.js\n// module id = 788\n// module chunks = 0 1 2","/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\n \n\n    module.exports = require('../Path').extend({\n\n        type: 'arc',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        style: {\n\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r + x, unitY * r + y);\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Arc.js\n// module id = 789\n// module chunks = 0 1 2","'use strict';\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\n\n\n    var curveTool = require('../../core/curve');\n    var vec2 = require('../../core/vector');\n    var quadraticSubdivide = curveTool.quadraticSubdivide;\n    var cubicSubdivide = curveTool.cubicSubdivide;\n    var quadraticAt = curveTool.quadraticAt;\n    var cubicAt = curveTool.cubicAt;\n    var quadraticDerivativeAt = curveTool.quadraticDerivativeAt;\n    var cubicDerivativeAt = curveTool.cubicDerivativeAt;\n\n    var out = [];\n\n    function someVectorAt(shape, t, isTangent) {\n        var cpx2 = shape.cpx2;\n        var cpy2 = shape.cpy2;\n        if (cpx2 === null || cpy2 === null) {\n            return [\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t),\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)\n            ];\n        }\n        else {\n            return [\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t),\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)\n            ];\n        }\n    }\n    module.exports = require('../Path').extend({\n\n        type: 'bezier-curve',\n\n        shape: {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n            cpx1: 0,\n            cpy1: 0,\n            // cpx2: 0,\n            // cpy2: 0\n\n            // Curve show percent, for animating\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var cpx1 = shape.cpx1;\n            var cpy1 = shape.cpy1;\n            var cpx2 = shape.cpx2;\n            var cpy2 = shape.cpy2;\n            var percent = shape.percent;\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (cpx2 == null || cpy2 == null) {\n                if (percent < 1) {\n                    quadraticSubdivide(\n                        x1, cpx1, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    x2 = out[2];\n                    quadraticSubdivide(\n                        y1, cpy1, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    y2 = out[2];\n                }\n\n                ctx.quadraticCurveTo(\n                    cpx1, cpy1,\n                    x2, y2\n                );\n            }\n            else {\n                if (percent < 1) {\n                    cubicSubdivide(\n                        x1, cpx1, cpx2, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    cpx2 = out[2];\n                    x2 = out[3];\n                    cubicSubdivide(\n                        y1, cpy1, cpy2, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    cpy2 = out[2];\n                    y2 = out[3];\n                }\n                ctx.bezierCurveTo(\n                    cpx1, cpy1,\n                    cpx2, cpy2,\n                    x2, y2\n                );\n            }\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        pointAt: function (t) {\n            return someVectorAt(this.shape, t, false);\n        },\n\n        /**\n         * Get tangent at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        tangentAt: function (t) {\n            var p = someVectorAt(this.shape, t, true);\n            return vec2.normalize(p, p);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/BezierCurve.js\n// module id = 790\n// module chunks = 0 1 2","'use strict';\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\n\n\n\n    module.exports = require('../Path').extend({\n\n        type: 'circle',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0\n        },\n\n\n        buildPath : function (ctx, shape, inBundle) {\n            // Better stroking in ShapeBundle\n            // Always do it may have performence issue ( fill may be 2x more cost)\n            if (inBundle) {\n                ctx.moveTo(shape.cx + shape.r, shape.cy);\n            }\n            // else {\n            //     if (ctx.allocate && !ctx.data.length) {\n            //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n            //     }\n            // }\n            // Better stroking in ShapeBundle\n            // ctx.moveTo(shape.cx + shape.r, shape.cy);\n            ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Circle.js\n// module id = 791\n// module chunks = 0 1 2","/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\n\n    module.exports = require('../Path').extend({\n\n        type: 'line',\n\n        shape: {\n            // Start point\n            x1: 0,\n            y1: 0,\n            // End point\n            x2: 0,\n            y2: 0,\n\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var percent = shape.percent;\n\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (percent < 1) {\n                x2 = x1 * (1 - percent) + x2 * percent;\n                y2 = y1 * (1 - percent) + y2 * percent;\n            }\n            ctx.lineTo(x2, y2);\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} percent\n         * @return {Array.<number>}\n         */\n        pointAt: function (p) {\n            var shape = this.shape;\n            return [\n                shape.x1 * (1 - p) + shape.x2 * p,\n                shape.y1 * (1 - p) + shape.y2 * p\n            ];\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Line.js\n// module id = 792\n// module chunks = 0 1 2","/**\n * 多边形\n * @module zrender/shape/Polygon\n */\n\n\n    var polyHelper = require('../helper/poly');\n\n    module.exports = require('../Path').extend({\n        \n        type: 'polygon',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, true);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Polygon.js\n// module id = 793\n// module chunks = 0 1 2","/**\n * @module zrender/graphic/shape/Polyline\n */\n\n\n    var polyHelper = require('../helper/poly');\n\n    module.exports = require('../Path').extend({\n        \n        type: 'polyline',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        style: {\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, false);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Polyline.js\n// module id = 794\n// module chunks = 0 1 2","/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\n\n\n    var roundRectHelper = require('../helper/roundRect');\n\n    module.exports = require('../Path').extend({\n\n        type: 'rect',\n\n        shape: {\n            // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n            // r缩写为1         相当于 [1, 1, 1, 1]\n            // r缩写为[1]       相当于 [1, 1, 1, 1]\n            // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n            // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n            r: 0,\n\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            if (!shape.r) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, shape);\n            }\n            ctx.closePath();\n            return;\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Rect.js\n// module id = 795\n// module chunks = 0 1 2","/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\n\n\n    module.exports = require('../Path').extend({\n\n        type: 'ring',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0,\n            r0: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.cx;\n            var y = shape.cy;\n            var PI2 = Math.PI * 2;\n            ctx.moveTo(x + shape.r, y);\n            ctx.arc(x, y, shape.r, 0, PI2, false);\n            ctx.moveTo(x + shape.r0, y);\n            ctx.arc(x, y, shape.r0, 0, PI2, true);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Ring.js\n// module id = 796\n// module chunks = 0 1 2","/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\n\n\n\n    var Path = require('../Path');\n    var fixClipWithShadow = require('../helper/fixClipWithShadow');\n\n    module.exports = Path.extend({\n\n        type: 'sector',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r0: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        brush: fixClipWithShadow(Path.prototype.brush),\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r0 = Math.max(shape.r0 || 0, 0);\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n\n            ctx.lineTo(unitX * r + x, unitY * r + y);\n\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n\n            ctx.lineTo(\n                Math.cos(endAngle) * r0 + x,\n                Math.sin(endAngle) * r0 + y\n            );\n\n            if (r0 !== 0) {\n                ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n            }\n\n            ctx.closePath();\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Sector.js\n// module id = 797\n// module chunks = 0 1 2","'use strict';\n/**\n * @module zrender/mixin/Animatable\n */\n\n\n    var Animator = require('../animation/Animator');\n    var util = require('../core/util');\n    var isString = util.isString;\n    var isFunction = util.isFunction;\n    var isObject = util.isObject;\n    var log = require('../core/log');\n\n    /**\n     * @alias modue:zrender/mixin/Animatable\n     * @constructor\n     */\n    var Animatable = function () {\n\n        /**\n         * @type {Array.<module:zrender/animation/Animator>}\n         * @readOnly\n         */\n        this.animators = [];\n    };\n\n    Animatable.prototype = {\n\n        constructor: Animatable,\n\n        /**\n         * 动画\n         *\n         * @param {string} path The path to fetch value from object, like 'a.b.c'.\n         * @param {boolean} [loop] Whether to loop animation.\n         * @return {module:zrender/animation/Animator}\n         * @example:\n         *     el.animate('style', false)\n         *         .when(1000, {x: 10} )\n         *         .done(function(){ // Animation done })\n         *         .start()\n         */\n        animate: function (path, loop) {\n            var target;\n            var animatingShape = false;\n            var el = this;\n            var zr = this.__zr;\n            if (path) {\n                var pathSplitted = path.split('.');\n                var prop = el;\n                // If animating shape\n                animatingShape = pathSplitted[0] === 'shape';\n                for (var i = 0, l = pathSplitted.length; i < l; i++) {\n                    if (!prop) {\n                        continue;\n                    }\n                    prop = prop[pathSplitted[i]];\n                }\n                if (prop) {\n                    target = prop;\n                }\n            }\n            else {\n                target = el;\n            }\n\n            if (!target) {\n                log(\n                    'Property \"'\n                    + path\n                    + '\" is not existed in element '\n                    + el.id\n                );\n                return;\n            }\n\n            var animators = el.animators;\n\n            var animator = new Animator(target, loop);\n\n            animator.during(function (target) {\n                el.dirty(animatingShape);\n            })\n            .done(function () {\n                // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n                animators.splice(util.indexOf(animators, animator), 1);\n            });\n\n            animators.push(animator);\n\n            // If animate after added to the zrender\n            if (zr) {\n                zr.animation.addAnimator(animator);\n            }\n\n            return animator;\n        },\n\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stopAnimation: function (forwardToLast) {\n            var animators = this.animators;\n            var len = animators.length;\n            for (var i = 0; i < len; i++) {\n                animators[i].stop(forwardToLast);\n            }\n            animators.length = 0;\n\n            return this;\n        },\n\n        /**\n         * @param {Object} target\n         * @param {number} [time=500] Time in ms\n         * @param {string} [easing='linear']\n         * @param {number} [delay=0]\n         * @param {Function} [callback]\n         * @param {Function} [forceAnimate] Prevent stop animation and callback\n         *        immediently when target values are the same as current values.\n         *\n         * @example\n         *  // Animate position\n         *  el.animateTo({\n         *      position: [10, 10]\n         *  }, function () { // done })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n         *  el.animateTo({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100, 'cubicOut', function () { // done })\n         */\n         // TODO Return animation key\n        animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n            // animateTo(target, time, easing, callback);\n            if (isString(delay)) {\n                callback = easing;\n                easing = delay;\n                delay = 0;\n            }\n            // animateTo(target, time, delay, callback);\n            else if (isFunction(easing)) {\n                callback = easing;\n                easing = 'linear';\n                delay = 0;\n            }\n            // animateTo(target, time, callback);\n            else if (isFunction(delay)) {\n                callback = delay;\n                delay = 0;\n            }\n            // animateTo(target, callback)\n            else if (isFunction(time)) {\n                callback = time;\n                time = 500;\n            }\n            // animateTo(target)\n            else if (!time) {\n                time = 500;\n            }\n            // Stop all previous animations\n            this.stopAnimation();\n            this._animateToShallow('', this, target, time, delay, easing, callback);\n\n            // Animators may be removed immediately after start\n            // if there is nothing to animate\n            var animators = this.animators.slice();\n            var count = animators.length;\n            function done() {\n                count--;\n                if (!count) {\n                    callback && callback();\n                }\n            }\n\n            // No animators. This should be checked before animators[i].start(),\n            // because 'done' may be executed immediately if no need to animate.\n            if (!count) {\n                callback && callback();\n            }\n            // Start after all animators created\n            // Incase any animator is done immediately when all animation properties are not changed\n            for (var i = 0; i < animators.length; i++) {\n                animators[i]\n                    .done(done)\n                    .start(easing, forceAnimate);\n            }\n        },\n\n        /**\n         * @private\n         * @param {string} path=''\n         * @param {Object} source=this\n         * @param {Object} target\n         * @param {number} [time=500]\n         * @param {number} [delay=0]\n         *\n         * @example\n         *  // Animate position\n         *  el._animateToShallow({\n         *      position: [10, 10]\n         *  })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms\n         *  el._animateToShallow({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100)\n         */\n        _animateToShallow: function (path, source, target, time, delay) {\n            var objShallow = {};\n            var propertyCount = 0;\n            for (var name in target) {\n                if (!target.hasOwnProperty(name)) {\n                    continue;\n                }\n\n                if (source[name] != null) {\n                    if (isObject(target[name]) && !util.isArrayLike(target[name])) {\n                        this._animateToShallow(\n                            path ? path + '.' + name : name,\n                            source[name],\n                            target[name],\n                            time,\n                            delay\n                        );\n                    }\n                    else {\n                        objShallow[name] = target[name];\n                        propertyCount++;\n                    }\n                }\n                else if (target[name] != null) {\n                    // Attr directly if not has property\n                    // FIXME, if some property not needed for element ?\n                    if (!path) {\n                        this.attr(name, target[name]);\n                    }\n                    else {  // Shape or style\n                        var props = {};\n                        props[path] = {};\n                        props[path][name] = target[name];\n                        this.attr(props);\n                    }\n                }\n            }\n\n            if (propertyCount > 0) {\n                this.animate(path, false)\n                    .when(time == null ? 500 : time, objShallow)\n                    .delay(delay || 0);\n            }\n\n            return this;\n        }\n    };\n\n    module.exports = Animatable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Animatable.js\n// module id = 798\n// module chunks = 0 1 2","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\n\n    function Draggable() {\n\n        this.on('mousedown', this._dragStart, this);\n        this.on('mousemove', this._drag, this);\n        this.on('mouseup', this._dragEnd, this);\n        this.on('globalout', this._dragEnd, this);\n        // this._dropTarget = null;\n        // this._draggingTarget = null;\n\n        // this._x = 0;\n        // this._y = 0;\n    }\n\n    Draggable.prototype = {\n\n        constructor: Draggable,\n\n        _dragStart: function (e) {\n            var draggingTarget = e.target;\n            if (draggingTarget && draggingTarget.draggable) {\n                this._draggingTarget = draggingTarget;\n                draggingTarget.dragging = true;\n                this._x = e.offsetX;\n                this._y = e.offsetY;\n\n                this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n            }\n        },\n\n        _drag: function (e) {\n            var draggingTarget = this._draggingTarget;\n            if (draggingTarget) {\n\n                var x = e.offsetX;\n                var y = e.offsetY;\n\n                var dx = x - this._x;\n                var dy = y - this._y;\n                this._x = x;\n                this._y = y;\n\n                draggingTarget.drift(dx, dy, e);\n                this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n\n                var dropTarget = this.findHover(x, y, draggingTarget).target;\n                var lastDropTarget = this._dropTarget;\n                this._dropTarget = dropTarget;\n\n                if (draggingTarget !== dropTarget) {\n                    if (lastDropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n                    }\n                    if (dropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n                    }\n                }\n            }\n        },\n\n        _dragEnd: function (e) {\n            var draggingTarget = this._draggingTarget;\n\n            if (draggingTarget) {\n                draggingTarget.dragging = false;\n            }\n\n            this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n            if (this._dropTarget) {\n                this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n            }\n\n            this._draggingTarget = null;\n            this._dropTarget = null;\n        }\n\n    };\n\n    function param(target, e) {\n        return {target: target, topTarget: e && e.topTarget};\n    }\n\n    module.exports = Draggable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Draggable.js\n// module id = 799\n// module chunks = 0 1 2","\n\n    var Path = require('../graphic/Path');\n    var PathProxy = require('../core/PathProxy');\n    var transformPath = require('./transformPath');\n\n    // command chars\n    var cc = [\n        'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\n        'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\n    ];\n\n    var mathSqrt = Math.sqrt;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n    var PI = Math.PI;\n\n    var vMag = function(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n    var vRatio = function(u, v) {\n        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n    var vAngle = function(u, v) {\n        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)\n                * Math.acos(vRatio(u, v));\n    };\n\n    function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n        var psi = psiDeg * (PI / 180.0);\n        var xp = mathCos(psi) * (x1 - x2) / 2.0\n                 + mathSin(psi) * (y1 - y2) / 2.0;\n        var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0\n                 + mathCos(psi) * (y1 - y2) / 2.0;\n\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n\n        if (lambda > 1) {\n            rx *= mathSqrt(lambda);\n            ry *= mathSqrt(lambda);\n        }\n\n        var f = (fa === fs ? -1 : 1)\n            * mathSqrt((((rx * rx) * (ry * ry))\n                    - ((rx * rx) * (yp * yp))\n                    - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)\n                    + (ry * ry) * (xp * xp))\n                ) || 0;\n\n        var cxp = f * rx * yp / ry;\n        var cyp = f * -ry * xp / rx;\n\n        var cx = (x1 + x2) / 2.0\n                 + mathCos(psi) * cxp\n                 - mathSin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0\n                + mathSin(psi) * cxp\n                + mathCos(psi) * cyp;\n\n        var theta = vAngle([ 1, 0 ], [ (xp - cxp) / rx, (yp - cyp) / ry ]);\n        var u = [ (xp - cxp) / rx, (yp - cyp) / ry ];\n        var v = [ (-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry ];\n        var dTheta = vAngle(u, v);\n\n        if (vRatio(u, v) <= -1) {\n            dTheta = PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * PI;\n        }\n\n        path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n    }\n\n    function createPathProxyFromString(data) {\n        if (!data) {\n            return [];\n        }\n\n        // command string\n        var cs = data.replace(/-/g, ' -')\n            .replace(/  /g, ' ')\n            .replace(/ /g, ',')\n            .replace(/,,/g, ',');\n\n        var n;\n        // create pipes so that we can split the data\n        for (n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n\n        // create array\n        var arr = cs.split('|');\n        // init context point\n        var cpx = 0;\n        var cpy = 0;\n\n        var path = new PathProxy();\n        var CMD = PathProxy.CMD;\n\n        var prevCmd;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            var off = 0;\n            var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n            var cmd;\n\n            if (p.length > 0 && p[0] === '') {\n                p.shift();\n            }\n\n            for (var i = 0; i < p.length; i++) {\n                p[i] = parseFloat(p[i]);\n            }\n            while (off < p.length && !isNaN(p[off])) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var ctlPtx;\n                var ctlPty;\n\n                var rx;\n                var ry;\n                var psi;\n                var fa;\n                var fs;\n\n                var x1 = cpx;\n                var y1 = cpy;\n\n                // convert l, H, h, V, and v to L\n                switch (c) {\n                    case 'l':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'm':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'C':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]\n                        );\n                        cpx = p[off - 2];\n                        cpy = p[off - 1];\n                        break;\n                    case 'c':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy\n                        );\n                        cpx += p[off - 2];\n                        cpy += p[off - 1];\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = cpx + p[off++];\n                        y1 = cpy + p[off++];\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 'Q':\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'q':\n                        x1 = p[off++] + cpx;\n                        y1 = p[off++] + cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                    case 'a':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                }\n            }\n\n            if (c === 'z' || c === 'Z') {\n                cmd = CMD.Z;\n                path.addData(cmd);\n            }\n\n            prevCmd = cmd;\n        }\n\n        path.toStatic();\n\n        return path;\n    }\n\n    // TODO Optimize double memory cost problem\n    function createPathOptions(str, opts) {\n        var pathProxy = createPathProxyFromString(str);\n        opts = opts || {};\n        opts.buildPath = function (path) {\n            if (path.setData) {\n                path.setData(pathProxy.data);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            }\n            else {\n                var ctx = path;\n                pathProxy.rebuildPath(ctx);\n            }\n        };\n\n        opts.applyTransform = function (m) {\n            transformPath(pathProxy, m);\n\n            this.dirty(true);\n        };\n\n        return opts;\n    }\n\n    module.exports = {\n        /**\n         * Create a Path object from path string data\n         * http://www.w3.org/TR/SVG/paths.html#PathData\n         * @param  {Object} opts Other options\n         */\n        createFromString: function (str, opts) {\n            return new Path(createPathOptions(str, opts));\n        },\n\n        /**\n         * Create a Path class from path string data\n         * @param  {string} str\n         * @param  {Object} opts Other options\n         */\n        extendFromString: function (str, opts) {\n            return Path.extend(createPathOptions(str, opts));\n        },\n\n        /**\n         * Merge multiple paths\n         */\n        // TODO Apply transform\n        // TODO stroke dash\n        // TODO Optimize double memory cost problem\n        mergePath: function (pathEls, opts) {\n            var pathList = [];\n            var len = pathEls.length;\n            for (var i = 0; i < len; i++) {\n                var pathEl = pathEls[i];\n                if (!pathEl.path) {\n                    pathEl.createPathProxy();\n                }\n                if (pathEl.__dirtyPath) {\n                    pathEl.buildPath(pathEl.path, pathEl.shape, true);\n                }\n                pathList.push(pathEl.path);\n            }\n\n            var pathBundle = new Path(opts);\n            // Need path proxy.\n            pathBundle.createPathProxy();\n            pathBundle.buildPath = function (path) {\n                path.appendPath(pathList);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            };\n\n            return pathBundle;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/path.js\n// module id = 800\n// module chunks = 0 1 2","\n\n    var CMD = require('../core/PathProxy').CMD;\n    var vec2 = require('../core/vector');\n    var v2ApplyTransform = vec2.applyTransform;\n\n    var points = [[], [], []];\n    var mathSqrt = Math.sqrt;\n    var mathAtan2 = Math.atan2;\n    function transformPath(path, m) {\n        var data = path.data;\n        var cmd;\n        var nPoint;\n        var i;\n        var j;\n        var k;\n        var p;\n\n        var M = CMD.M;\n        var C = CMD.C;\n        var L = CMD.L;\n        var R = CMD.R;\n        var A = CMD.A;\n        var Q = CMD.Q;\n\n        for (i = 0, j = 0; i < data.length;) {\n            cmd = data[i++];\n            j = i;\n            nPoint = 0;\n\n            switch (cmd) {\n                case M:\n                    nPoint = 1;\n                    break;\n                case L:\n                    nPoint = 1;\n                    break;\n                case C:\n                    nPoint = 3;\n                    break;\n                case Q:\n                    nPoint = 2;\n                    break;\n                case A:\n                    var x = m[4];\n                    var y = m[5];\n                    var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n                    var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n                    var angle = mathAtan2(-m[1] / sy, m[0] / sx);\n                    // cx\n                    data[i] *= sx;\n                    data[i++] += x;\n                    // cy\n                    data[i] *= sy;\n                    data[i++] += y;\n                    // Scale rx and ry\n                    // FIXME Assume psi is 0 here\n                    data[i++] *= sx;\n                    data[i++] *= sy;\n\n                    // Start angle\n                    data[i++] += angle;\n                    // end angle\n                    data[i++] += angle;\n                    // FIXME psi\n                    i += 2;\n                    j = i;\n                    break;\n                case R:\n                    // x0, y0\n                    p[0] = data[i++];\n                    p[1] = data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n                    // x1, y1\n                    p[0] += data[i++];\n                    p[1] += data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n            }\n\n            for (k = 0; k < nPoint; k++) {\n                var p = points[k];\n                p[0] = data[i++];\n                p[1] = data[i++];\n\n                v2ApplyTransform(p, p, m);\n                // Write back\n                data[j++] = p[0];\n                data[j++] = p[1];\n            }\n        }\n    }\n\n    module.exports = transformPath;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/transformPath.js\n// module id = 801\n// module chunks = 0 1 2","/*!\n * ZRender, a high performance 2d drawing library.\n *\n * Copyright (c) 2013, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n */\n// Global defines\n\n    var guid = require('./core/guid');\n    var env = require('./core/env');\n    var zrUtil = require('./core/util');\n\n    var Handler = require('./Handler');\n    var Storage = require('./Storage');\n    var Animation = require('./animation/Animation');\n    var HandlerProxy = require('./dom/HandlerProxy');\n\n    var useVML = !env.canvasSupported;\n\n    var painterCtors = {\n        canvas: require('./Painter')\n    };\n\n    var instances = {};    // ZRender实例map索引\n\n    var zrender = {};\n\n    /**\n     * @type {string}\n     */\n    zrender.version = '3.6.0';\n\n    /**\n     * Initializing a zrender instance\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @return {module:zrender/ZRender}\n     */\n    zrender.init = function (dom, opts) {\n        var zr = new ZRender(guid(), dom, opts);\n        instances[zr.id] = zr;\n        return zr;\n    };\n\n    /**\n     * Dispose zrender instance\n     * @param {module:zrender/ZRender} zr\n     */\n    zrender.dispose = function (zr) {\n        if (zr) {\n            zr.dispose();\n        }\n        else {\n            for (var key in instances) {\n                if (instances.hasOwnProperty(key)) {\n                    instances[key].dispose();\n                }\n            }\n            instances = {};\n        }\n\n        return zrender;\n    };\n\n    /**\n     * Get zrender instance by id\n     * @param {string} id zrender instance id\n     * @return {module:zrender/ZRender}\n     */\n    zrender.getInstance = function (id) {\n        return instances[id];\n    };\n\n    zrender.registerPainter = function (name, Ctor) {\n        painterCtors[name] = Ctor;\n    };\n\n    function delInstance(id) {\n        delete instances[id];\n    }\n\n    /**\n     * @module zrender/ZRender\n     */\n    /**\n     * @constructor\n     * @alias module:zrender/ZRender\n     * @param {string} id\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     */\n    var ZRender = function (id, dom, opts) {\n\n        opts = opts || {};\n\n        /**\n         * @type {HTMLDomElement}\n         */\n        this.dom = dom;\n\n        /**\n         * @type {string}\n         */\n        this.id = id;\n\n        var self = this;\n        var storage = new Storage();\n\n        var rendererType = opts.renderer;\n        // TODO WebGL\n        if (useVML) {\n            if (!painterCtors.vml) {\n                throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n            }\n            rendererType = 'vml';\n        }\n        else if (!rendererType || !painterCtors[rendererType]) {\n            rendererType = 'canvas';\n        }\n        var painter = new painterCtors[rendererType](dom, storage, opts);\n\n        this.storage = storage;\n        this.painter = painter;\n\n        var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n        this.handler = new Handler(storage, painter, handerProxy, painter.root);\n\n        /**\n         * @type {module:zrender/animation/Animation}\n         */\n        this.animation = new Animation({\n            stage: {\n                update: zrUtil.bind(this.flush, this)\n            }\n        });\n        this.animation.start();\n\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._needsRefresh;\n\n        // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n        // FIXME 有点ugly\n        var oldDelFromStorage = storage.delFromStorage;\n        var oldAddToStorage = storage.addToStorage;\n\n        storage.delFromStorage = function (el) {\n            oldDelFromStorage.call(storage, el);\n\n            el && el.removeSelfFromZr(self);\n        };\n\n        storage.addToStorage = function (el) {\n            oldAddToStorage.call(storage, el);\n\n            el.addSelfToZr(self);\n        };\n    };\n\n    ZRender.prototype = {\n\n        constructor: ZRender,\n        /**\n         * 获取实例唯一标识\n         * @return {string}\n         */\n        getId: function () {\n            return this.id;\n        },\n\n        /**\n         * 添加元素\n         * @param  {module:zrender/Element} el\n         */\n        add: function (el) {\n            this.storage.addRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * 删除元素\n         * @param  {module:zrender/Element} el\n         */\n        remove: function (el) {\n            this.storage.delRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Change configuration of layer\n         * @param {string} zLevel\n         * @param {Object} config\n         * @param {string} [config.clearColor=0] Clear color\n         * @param {string} [config.motionBlur=false] If enable motion blur\n         * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n        */\n        configLayer: function (zLevel, config) {\n            this.painter.configLayer(zLevel, config);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Repaint the canvas immediately\n         */\n        refreshImmediately: function () {\n            // var start = new Date();\n            // Clear needsRefresh ahead to avoid something wrong happens in refresh\n            // Or it will cause zrender refreshes again and again.\n            this._needsRefresh = false;\n            this.painter.refresh();\n            /**\n             * Avoid trigger zr.refresh in Element#beforeUpdate hook\n             */\n            this._needsRefresh = false;\n            // var end = new Date();\n\n            // var log = document.getElementById('log');\n            // if (log) {\n            //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n            // }\n        },\n\n        /**\n         * Mark and repaint the canvas in the next frame of browser\n         */\n        refresh: function() {\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Perform all refresh\n         */\n        flush: function () {\n            if (this._needsRefresh) {\n                this.refreshImmediately();\n            }\n            if (this._needsRefreshHover) {\n                this.refreshHoverImmediately();\n            }\n        },\n\n        /**\n         * Add element to hover layer\n         * @param  {module:zrender/Element} el\n         * @param {Object} style\n         */\n        addHover: function (el, style) {\n            if (this.painter.addHover) {\n                this.painter.addHover(el, style);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Add element from hover layer\n         * @param  {module:zrender/Element} el\n         */\n        removeHover: function (el) {\n            if (this.painter.removeHover) {\n                this.painter.removeHover(el);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Clear all hover elements in hover layer\n         * @param  {module:zrender/Element} el\n         */\n        clearHover: function () {\n            if (this.painter.clearHover) {\n                this.painter.clearHover();\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Refresh hover in next frame\n         */\n        refreshHover: function () {\n            this._needsRefreshHover = true;\n        },\n\n        /**\n         * Refresh hover immediately\n         */\n        refreshHoverImmediately: function () {\n            this._needsRefreshHover = false;\n            this.painter.refreshHover && this.painter.refreshHover();\n        },\n\n        /**\n         * Resize the canvas.\n         * Should be invoked when container size is changed\n         * @param {Object} [opts]\n         * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n         * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n         */\n        resize: function(opts) {\n            opts = opts || {};\n            this.painter.resize(opts.width, opts.height);\n            this.handler.resize();\n        },\n\n        /**\n         * Stop and clear all animation immediately\n         */\n        clearAnimation: function () {\n            this.animation.clear();\n        },\n\n        /**\n         * Get container width\n         */\n        getWidth: function() {\n            return this.painter.getWidth();\n        },\n\n        /**\n         * Get container height\n         */\n        getHeight: function() {\n            return this.painter.getHeight();\n        },\n\n        /**\n         * Export the canvas as Base64 URL\n         * @param {string} type\n         * @param {string} [backgroundColor='#fff']\n         * @return {string} Base64 URL\n         */\n        // toDataURL: function(type, backgroundColor) {\n        //     return this.painter.getRenderedCanvas({\n        //         backgroundColor: backgroundColor\n        //     }).toDataURL(type);\n        // },\n\n        /**\n         * Converting a path to image.\n         * It has much better performance of drawing image rather than drawing a vector path.\n         * @param {module:zrender/graphic/Path} e\n         * @param {number} width\n         * @param {number} height\n         */\n        pathToImage: function(e, dpr) {\n            return this.painter.pathToImage(e, dpr);\n        },\n\n        /**\n         * Set default cursor\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            this.handler.setCursorStyle(cursorStyle);\n        },\n\n        /**\n         * Find hovered element\n         * @param {number} x\n         * @param {number} y\n         * @return {Object} {target, topTarget}\n         */\n        findHover: function (x, y) {\n            return this.handler.findHover(x, y);\n        },\n\n        /**\n         * Bind event\n         *\n         * @param {string} eventName Event name\n         * @param {Function} eventHandler Handler function\n         * @param {Object} [context] Context object\n         */\n        on: function(eventName, eventHandler, context) {\n            this.handler.on(eventName, eventHandler, context);\n        },\n\n        /**\n         * Unbind event\n         * @param {string} eventName Event name\n         * @param {Function} [eventHandler] Handler function\n         */\n        off: function(eventName, eventHandler) {\n            this.handler.off(eventName, eventHandler);\n        },\n\n        /**\n         * Trigger event manually\n         *\n         * @param {string} eventName Event name\n         * @param {event=} event Event object\n         */\n        trigger: function (eventName, event) {\n            this.handler.trigger(eventName, event);\n        },\n\n\n        /**\n         * Clear all objects and the canvas.\n         */\n        clear: function () {\n            this.storage.delRoot();\n            this.painter.clear();\n        },\n\n        /**\n         * Dispose self.\n         */\n        dispose: function () {\n            this.animation.stop();\n\n            this.clear();\n            this.storage.dispose();\n            this.painter.dispose();\n            this.handler.dispose();\n\n            this.animation =\n            this.storage =\n            this.painter =\n            this.handler = null;\n\n            delInstance(this.id);\n        }\n    };\n\n    module.exports = zrender;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/zrender.js\n// module id = 802\n// module chunks = 0 1 2","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport VeLine from 'v-charts/lib/line'\n\nexport default {\n  name: '',\n  mixins: [],\n  props: {\n  },\n  data () {\n    return {\n      chartData: null,\n      chartSettings: {\n        label: {\n          normal: { show: true }\n        }\n      }\n    }\n  },\n  computed: {},\n  components: {\n    VeLine\n  },\n  methods: {},\n  created () {\n    this.$nextTick(() => {\n      setTimeout(() => {\n        this.chartData = {\n          columns: ['日期', '销售额-1季度'],\n          rows: [\n            { '日期': '1月1日', '销售额-1季度': 1523, '销售额-2季度': 1523, '占比': 0.12, '其他': 100 },\n            { '日期': '1月2日', '销售额-1季度': 1223, '销售额-2季度': 1523, '占比': 0.345, '其他': 100 },\n            { '日期': '1月3日', '销售额-1季度': 2123, '销售额-2季度': 1523, '占比': 0.7, '其他': 100 },\n            { '日期': '1月4日', '销售额-1季度': 4123, '销售额-2季度': 1523, '占比': 0.31, '其他': 100 },\n            { '日期': '1月5日', '销售额-1季度': 3123, '销售额-2季度': 1523, '占比': 0.12, '其他': 100 },\n            { '日期': '1月6日', '销售额-1季度': 7123, '销售额-2季度': 1523, '占比': 0.65, '其他': 100 }\n          ]\n        }\n      }, 3000)\n    })\n  },\n  mounted () {}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/base/test/charts.vue","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\", {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"charts.vue\",\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-578a9214\",\"scoped\":true,\"hasInlineConfig\":true}!./~/stylus-loader?{\"sourceMap\":true}!./~/vux-loader/src/style-loader.js!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/base/test/charts.vue\n// module id = 921\n// module chunks = 2","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-578a9214\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":true}!../../../node_modules/stylus-loader/index.js?{\\\"sourceMap\\\":true}!../../../node_modules/vux-loader/src/style-loader.js!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./charts.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"1f37bbdb\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/vue-style-loader!./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-578a9214\",\"scoped\":true,\"hasInlineConfig\":true}!./~/stylus-loader?{\"sourceMap\":true}!./~/vux-loader/src/style-loader.js!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/base/test/charts.vue\n// module id = 959\n// module chunks = 2"],"sourceRoot":""}